// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201
{
    using Microsoft.Azure.PowerShell.Cmdlets.Websites.Runtime.PowerShell;

    /// <summary>Configuration of an App Service app.</summary>
    [System.ComponentModel.TypeConverter(typeof(SiteConfigTypeConverter))]
    public partial class SiteConfig
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.SiteConfig"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfig" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfig DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new SiteConfig(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.SiteConfig"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfig" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfig DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new SiteConfig(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="SiteConfig" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="className" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfig FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Websites.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.SiteConfig"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal SiteConfig(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("MachineKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).MachineKey = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteMachineKey) content.GetValueForProperty("MachineKey",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).MachineKey, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.SiteMachineKeyTypeConverter.ConvertFrom);
            }
            if (content.Contains("Experiment"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).Experiment = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IExperiments) content.GetValueForProperty("Experiment",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).Experiment, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ExperimentsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Limit"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).Limit = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLimits) content.GetValueForProperty("Limit",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).Limit, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.SiteLimitsTypeConverter.ConvertFrom);
            }
            if (content.Contains("AutoHealRule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).AutoHealRule = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IAutoHealRules) content.GetValueForProperty("AutoHealRule",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).AutoHealRule, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.AutoHealRulesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Cor"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).Cor = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ICorsSettings) content.GetValueForProperty("Cor",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).Cor, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.CorsSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Push"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).Push = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IPushSettings) content.GetValueForProperty("Push",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).Push, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.PushSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("ApiDefinition"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ApiDefinition = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IApiDefinitionInfo) content.GetValueForProperty("ApiDefinition",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ApiDefinition, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ApiDefinitionInfoTypeConverter.ConvertFrom);
            }
            if (content.Contains("ApiManagementConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ApiManagementConfig = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IApiManagementConfig) content.GetValueForProperty("ApiManagementConfig",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ApiManagementConfig, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ApiManagementConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("NumberOfWorker"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).NumberOfWorker = (int?) content.GetValueForProperty("NumberOfWorker",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).NumberOfWorker, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("DefaultDocument"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).DefaultDocument = (string[]) content.GetValueForProperty("DefaultDocument",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).DefaultDocument, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("NetFrameworkVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).NetFrameworkVersion = (string) content.GetValueForProperty("NetFrameworkVersion",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).NetFrameworkVersion, global::System.Convert.ToString);
            }
            if (content.Contains("PhpVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).PhpVersion = (string) content.GetValueForProperty("PhpVersion",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).PhpVersion, global::System.Convert.ToString);
            }
            if (content.Contains("PythonVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).PythonVersion = (string) content.GetValueForProperty("PythonVersion",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).PythonVersion, global::System.Convert.ToString);
            }
            if (content.Contains("NodeVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).NodeVersion = (string) content.GetValueForProperty("NodeVersion",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).NodeVersion, global::System.Convert.ToString);
            }
            if (content.Contains("PowerShellVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).PowerShellVersion = (string) content.GetValueForProperty("PowerShellVersion",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).PowerShellVersion, global::System.Convert.ToString);
            }
            if (content.Contains("LinuxFxVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).LinuxFxVersion = (string) content.GetValueForProperty("LinuxFxVersion",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).LinuxFxVersion, global::System.Convert.ToString);
            }
            if (content.Contains("WindowsFxVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).WindowsFxVersion = (string) content.GetValueForProperty("WindowsFxVersion",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).WindowsFxVersion, global::System.Convert.ToString);
            }
            if (content.Contains("RequestTracingEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).RequestTracingEnabled = (bool?) content.GetValueForProperty("RequestTracingEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).RequestTracingEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("RequestTracingExpirationTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).RequestTracingExpirationTime = (global::System.DateTime?) content.GetValueForProperty("RequestTracingExpirationTime",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).RequestTracingExpirationTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("RemoteDebuggingEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).RemoteDebuggingEnabled = (bool?) content.GetValueForProperty("RemoteDebuggingEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).RemoteDebuggingEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("RemoteDebuggingVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).RemoteDebuggingVersion = (string) content.GetValueForProperty("RemoteDebuggingVersion",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).RemoteDebuggingVersion, global::System.Convert.ToString);
            }
            if (content.Contains("HttpLoggingEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).HttpLoggingEnabled = (bool?) content.GetValueForProperty("HttpLoggingEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).HttpLoggingEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AcrUseManagedIdentityCred"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).AcrUseManagedIdentityCred = (bool?) content.GetValueForProperty("AcrUseManagedIdentityCred",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).AcrUseManagedIdentityCred, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AcrUserManagedIdentityId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).AcrUserManagedIdentityId = (string) content.GetValueForProperty("AcrUserManagedIdentityId",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).AcrUserManagedIdentityId, global::System.Convert.ToString);
            }
            if (content.Contains("LogsDirectorySizeLimit"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).LogsDirectorySizeLimit = (int?) content.GetValueForProperty("LogsDirectorySizeLimit",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).LogsDirectorySizeLimit, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("DetailedErrorLoggingEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).DetailedErrorLoggingEnabled = (bool?) content.GetValueForProperty("DetailedErrorLoggingEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).DetailedErrorLoggingEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("PublishingUsername"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).PublishingUsername = (string) content.GetValueForProperty("PublishingUsername",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).PublishingUsername, global::System.Convert.ToString);
            }
            if (content.Contains("AppSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).AppSetting = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.INameValuePair[]) content.GetValueForProperty("AppSetting",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).AppSetting, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.INameValuePair>(__y, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.NameValuePairTypeConverter.ConvertFrom));
            }
            if (content.Contains("ConnectionString"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ConnectionString = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IConnStringInfo[]) content.GetValueForProperty("ConnectionString",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ConnectionString, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IConnStringInfo>(__y, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ConnStringInfoTypeConverter.ConvertFrom));
            }
            if (content.Contains("HandlerMapping"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).HandlerMapping = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IHandlerMapping[]) content.GetValueForProperty("HandlerMapping",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).HandlerMapping, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IHandlerMapping>(__y, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.HandlerMappingTypeConverter.ConvertFrom));
            }
            if (content.Contains("DocumentRoot"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).DocumentRoot = (string) content.GetValueForProperty("DocumentRoot",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).DocumentRoot, global::System.Convert.ToString);
            }
            if (content.Contains("ScmType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ScmType = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.ScmType?) content.GetValueForProperty("ScmType",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ScmType, Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.ScmType.CreateFrom);
            }
            if (content.Contains("Use32BitWorkerProcess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).Use32BitWorkerProcess = (bool?) content.GetValueForProperty("Use32BitWorkerProcess",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).Use32BitWorkerProcess, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("WebSocketsEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).WebSocketsEnabled = (bool?) content.GetValueForProperty("WebSocketsEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).WebSocketsEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AlwaysOn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).AlwaysOn = (bool?) content.GetValueForProperty("AlwaysOn",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).AlwaysOn, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("JavaVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).JavaVersion = (string) content.GetValueForProperty("JavaVersion",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).JavaVersion, global::System.Convert.ToString);
            }
            if (content.Contains("JavaContainer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).JavaContainer = (string) content.GetValueForProperty("JavaContainer",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).JavaContainer, global::System.Convert.ToString);
            }
            if (content.Contains("JavaContainerVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).JavaContainerVersion = (string) content.GetValueForProperty("JavaContainerVersion",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).JavaContainerVersion, global::System.Convert.ToString);
            }
            if (content.Contains("AppCommandLine"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).AppCommandLine = (string) content.GetValueForProperty("AppCommandLine",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).AppCommandLine, global::System.Convert.ToString);
            }
            if (content.Contains("ManagedPipelineMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ManagedPipelineMode = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.ManagedPipelineMode?) content.GetValueForProperty("ManagedPipelineMode",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ManagedPipelineMode, Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.ManagedPipelineMode.CreateFrom);
            }
            if (content.Contains("VirtualApplication"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).VirtualApplication = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IVirtualApplication[]) content.GetValueForProperty("VirtualApplication",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).VirtualApplication, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IVirtualApplication>(__y, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.VirtualApplicationTypeConverter.ConvertFrom));
            }
            if (content.Contains("LoadBalancing"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).LoadBalancing = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.SiteLoadBalancing?) content.GetValueForProperty("LoadBalancing",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).LoadBalancing, Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.SiteLoadBalancing.CreateFrom);
            }
            if (content.Contains("AutoHealEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).AutoHealEnabled = (bool?) content.GetValueForProperty("AutoHealEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).AutoHealEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("TracingOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).TracingOption = (string) content.GetValueForProperty("TracingOption",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).TracingOption, global::System.Convert.ToString);
            }
            if (content.Contains("VnetName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).VnetName = (string) content.GetValueForProperty("VnetName",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).VnetName, global::System.Convert.ToString);
            }
            if (content.Contains("VnetRouteAllEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).VnetRouteAllEnabled = (bool?) content.GetValueForProperty("VnetRouteAllEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).VnetRouteAllEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("VnetPrivatePortsCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).VnetPrivatePortsCount = (int?) content.GetValueForProperty("VnetPrivatePortsCount",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).VnetPrivatePortsCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("AutoSwapSlotName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).AutoSwapSlotName = (string) content.GetValueForProperty("AutoSwapSlotName",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).AutoSwapSlotName, global::System.Convert.ToString);
            }
            if (content.Contains("LocalMySqlEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).LocalMySqlEnabled = (bool?) content.GetValueForProperty("LocalMySqlEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).LocalMySqlEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ManagedServiceIdentityId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ManagedServiceIdentityId = (int?) content.GetValueForProperty("ManagedServiceIdentityId",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ManagedServiceIdentityId, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("XManagedServiceIdentityId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).XManagedServiceIdentityId = (int?) content.GetValueForProperty("XManagedServiceIdentityId",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).XManagedServiceIdentityId, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("KeyVaultReferenceIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).KeyVaultReferenceIdentity = (string) content.GetValueForProperty("KeyVaultReferenceIdentity",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).KeyVaultReferenceIdentity, global::System.Convert.ToString);
            }
            if (content.Contains("IPSecurityRestriction"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).IPSecurityRestriction = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IIPSecurityRestriction[]) content.GetValueForProperty("IPSecurityRestriction",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).IPSecurityRestriction, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IIPSecurityRestriction>(__y, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IPSecurityRestrictionTypeConverter.ConvertFrom));
            }
            if (content.Contains("ScmIPSecurityRestriction"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ScmIPSecurityRestriction = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IIPSecurityRestriction[]) content.GetValueForProperty("ScmIPSecurityRestriction",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ScmIPSecurityRestriction, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IIPSecurityRestriction>(__y, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IPSecurityRestrictionTypeConverter.ConvertFrom));
            }
            if (content.Contains("ScmIPSecurityRestrictionsUseMain"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ScmIPSecurityRestrictionsUseMain = (bool?) content.GetValueForProperty("ScmIPSecurityRestrictionsUseMain",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ScmIPSecurityRestrictionsUseMain, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("Http20Enabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).Http20Enabled = (bool?) content.GetValueForProperty("Http20Enabled",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).Http20Enabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("MinTlsVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).MinTlsVersion = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.SupportedTlsVersions?) content.GetValueForProperty("MinTlsVersion",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).MinTlsVersion, Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.SupportedTlsVersions.CreateFrom);
            }
            if (content.Contains("ScmMinTlsVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ScmMinTlsVersion = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.SupportedTlsVersions?) content.GetValueForProperty("ScmMinTlsVersion",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ScmMinTlsVersion, Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.SupportedTlsVersions.CreateFrom);
            }
            if (content.Contains("FtpsState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).FtpsState = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.FtpsState?) content.GetValueForProperty("FtpsState",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).FtpsState, Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.FtpsState.CreateFrom);
            }
            if (content.Contains("PreWarmedInstanceCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).PreWarmedInstanceCount = (int?) content.GetValueForProperty("PreWarmedInstanceCount",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).PreWarmedInstanceCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("FunctionAppScaleLimit"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).FunctionAppScaleLimit = (int?) content.GetValueForProperty("FunctionAppScaleLimit",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).FunctionAppScaleLimit, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("HealthCheckPath"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).HealthCheckPath = (string) content.GetValueForProperty("HealthCheckPath",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).HealthCheckPath, global::System.Convert.ToString);
            }
            if (content.Contains("FunctionsRuntimeScaleMonitoringEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).FunctionsRuntimeScaleMonitoringEnabled = (bool?) content.GetValueForProperty("FunctionsRuntimeScaleMonitoringEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).FunctionsRuntimeScaleMonitoringEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("WebsiteTimeZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).WebsiteTimeZone = (string) content.GetValueForProperty("WebsiteTimeZone",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).WebsiteTimeZone, global::System.Convert.ToString);
            }
            if (content.Contains("MinimumElasticInstanceCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).MinimumElasticInstanceCount = (int?) content.GetValueForProperty("MinimumElasticInstanceCount",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).MinimumElasticInstanceCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("AzureStorageAccount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).AzureStorageAccount = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigAzureStorageAccounts) content.GetValueForProperty("AzureStorageAccount",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).AzureStorageAccount, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.SiteConfigAzureStorageAccountsTypeConverter.ConvertFrom);
            }
            if (content.Contains("PublicNetworkAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).PublicNetworkAccess = (string) content.GetValueForProperty("PublicNetworkAccess",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).PublicNetworkAccess, global::System.Convert.ToString);
            }
            if (content.Contains("ApiManagementConfigId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ApiManagementConfigId = (string) content.GetValueForProperty("ApiManagementConfigId",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ApiManagementConfigId, global::System.Convert.ToString);
            }
            if (content.Contains("MachineKeyValidation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).MachineKeyValidation = (string) content.GetValueForProperty("MachineKeyValidation",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).MachineKeyValidation, global::System.Convert.ToString);
            }
            if (content.Contains("MachineKeyValidationKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).MachineKeyValidationKey = (string) content.GetValueForProperty("MachineKeyValidationKey",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).MachineKeyValidationKey, global::System.Convert.ToString);
            }
            if (content.Contains("MachineKeyDecryption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).MachineKeyDecryption = (string) content.GetValueForProperty("MachineKeyDecryption",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).MachineKeyDecryption, global::System.Convert.ToString);
            }
            if (content.Contains("MachineKeyDecryptionKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).MachineKeyDecryptionKey = (string) content.GetValueForProperty("MachineKeyDecryptionKey",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).MachineKeyDecryptionKey, global::System.Convert.ToString);
            }
            if (content.Contains("ExperimentRampUpRule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ExperimentRampUpRule = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IRampUpRule[]) content.GetValueForProperty("ExperimentRampUpRule",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ExperimentRampUpRule, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IRampUpRule>(__y, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.RampUpRuleTypeConverter.ConvertFrom));
            }
            if (content.Contains("LimitMaxPercentageCpu"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).LimitMaxPercentageCpu = (double?) content.GetValueForProperty("LimitMaxPercentageCpu",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).LimitMaxPercentageCpu, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("LimitMaxMemoryInMb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).LimitMaxMemoryInMb = (long?) content.GetValueForProperty("LimitMaxMemoryInMb",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).LimitMaxMemoryInMb, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("LimitMaxDiskSizeInMb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).LimitMaxDiskSizeInMb = (long?) content.GetValueForProperty("LimitMaxDiskSizeInMb",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).LimitMaxDiskSizeInMb, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("AutoHealRuleTrigger"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).AutoHealRuleTrigger = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IAutoHealTriggers) content.GetValueForProperty("AutoHealRuleTrigger",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).AutoHealRuleTrigger, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.AutoHealTriggersTypeConverter.ConvertFrom);
            }
            if (content.Contains("AutoHealRuleAction"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).AutoHealRuleAction = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IAutoHealActions) content.GetValueForProperty("AutoHealRuleAction",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).AutoHealRuleAction, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.AutoHealActionsTypeConverter.ConvertFrom);
            }
            if (content.Contains("CorAllowedOrigin"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).CorAllowedOrigin = (string[]) content.GetValueForProperty("CorAllowedOrigin",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).CorAllowedOrigin, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("CorSupportCredentials"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).CorSupportCredentials = (bool?) content.GetValueForProperty("CorSupportCredentials",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).CorSupportCredentials, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("PushId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).PushId = (string) content.GetValueForProperty("PushId",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).PushId, global::System.Convert.ToString);
            }
            if (content.Contains("PushName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).PushName = (string) content.GetValueForProperty("PushName",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).PushName, global::System.Convert.ToString);
            }
            if (content.Contains("PushKind"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).PushKind = (string) content.GetValueForProperty("PushKind",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).PushKind, global::System.Convert.ToString);
            }
            if (content.Contains("PushType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).PushType = (string) content.GetValueForProperty("PushType",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).PushType, global::System.Convert.ToString);
            }
            if (content.Contains("PushProperty"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).PushProperty = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IPushSettingsProperties) content.GetValueForProperty("PushProperty",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).PushProperty, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.PushSettingsPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("ApiDefinitionUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ApiDefinitionUrl = (string) content.GetValueForProperty("ApiDefinitionUrl",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ApiDefinitionUrl, global::System.Convert.ToString);
            }
            if (content.Contains("TriggerRequest"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).TriggerRequest = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IRequestsBasedTrigger) content.GetValueForProperty("TriggerRequest",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).TriggerRequest, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.RequestsBasedTriggerTypeConverter.ConvertFrom);
            }
            if (content.Contains("TriggerSlowRequest"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).TriggerSlowRequest = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISlowRequestsBasedTrigger) content.GetValueForProperty("TriggerSlowRequest",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).TriggerSlowRequest, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.SlowRequestsBasedTriggerTypeConverter.ConvertFrom);
            }
            if (content.Contains("TriggerPrivateBytesInKb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).TriggerPrivateBytesInKb = (int?) content.GetValueForProperty("TriggerPrivateBytesInKb",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).TriggerPrivateBytesInKb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("TriggerStatusCode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).TriggerStatusCode = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IStatusCodesBasedTrigger[]) content.GetValueForProperty("TriggerStatusCode",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).TriggerStatusCode, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IStatusCodesBasedTrigger>(__y, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.StatusCodesBasedTriggerTypeConverter.ConvertFrom));
            }
            if (content.Contains("TriggerSlowRequestsWithPath"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).TriggerSlowRequestsWithPath = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISlowRequestsBasedTrigger[]) content.GetValueForProperty("TriggerSlowRequestsWithPath",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).TriggerSlowRequestsWithPath, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISlowRequestsBasedTrigger>(__y, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.SlowRequestsBasedTriggerTypeConverter.ConvertFrom));
            }
            if (content.Contains("TriggerStatusCodesRange"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).TriggerStatusCodesRange = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IStatusCodesRangeBasedTrigger[]) content.GetValueForProperty("TriggerStatusCodesRange",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).TriggerStatusCodesRange, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IStatusCodesRangeBasedTrigger>(__y, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.StatusCodesRangeBasedTriggerTypeConverter.ConvertFrom));
            }
            if (content.Contains("ActionCustomAction"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ActionCustomAction = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IAutoHealCustomAction) content.GetValueForProperty("ActionCustomAction",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ActionCustomAction, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.AutoHealCustomActionTypeConverter.ConvertFrom);
            }
            if (content.Contains("ActionType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ActionType = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.AutoHealActionType?) content.GetValueForProperty("ActionType",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ActionType, Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.AutoHealActionType.CreateFrom);
            }
            if (content.Contains("ActionMinProcessExecutionTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ActionMinProcessExecutionTime = (string) content.GetValueForProperty("ActionMinProcessExecutionTime",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ActionMinProcessExecutionTime, global::System.Convert.ToString);
            }
            if (content.Contains("IsPushEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).IsPushEnabled = (bool) content.GetValueForProperty("IsPushEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).IsPushEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("TagWhitelistJson"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).TagWhitelistJson = (string) content.GetValueForProperty("TagWhitelistJson",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).TagWhitelistJson, global::System.Convert.ToString);
            }
            if (content.Contains("TagsRequiringAuth"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).TagsRequiringAuth = (string) content.GetValueForProperty("TagsRequiringAuth",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).TagsRequiringAuth, global::System.Convert.ToString);
            }
            if (content.Contains("DynamicTagsJson"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).DynamicTagsJson = (string) content.GetValueForProperty("DynamicTagsJson",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).DynamicTagsJson, global::System.Convert.ToString);
            }
            if (content.Contains("RequestCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).RequestCount = (int?) content.GetValueForProperty("RequestCount",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).RequestCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("RequestTimeInterval"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).RequestTimeInterval = (string) content.GetValueForProperty("RequestTimeInterval",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).RequestTimeInterval, global::System.Convert.ToString);
            }
            if (content.Contains("SlowRequestTimeTaken"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).SlowRequestTimeTaken = (string) content.GetValueForProperty("SlowRequestTimeTaken",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).SlowRequestTimeTaken, global::System.Convert.ToString);
            }
            if (content.Contains("SlowRequestPath"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).SlowRequestPath = (string) content.GetValueForProperty("SlowRequestPath",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).SlowRequestPath, global::System.Convert.ToString);
            }
            if (content.Contains("SlowRequestCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).SlowRequestCount = (int?) content.GetValueForProperty("SlowRequestCount",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).SlowRequestCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SlowRequestTimeInterval"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).SlowRequestTimeInterval = (string) content.GetValueForProperty("SlowRequestTimeInterval",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).SlowRequestTimeInterval, global::System.Convert.ToString);
            }
            if (content.Contains("CustomActionExe"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).CustomActionExe = (string) content.GetValueForProperty("CustomActionExe",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).CustomActionExe, global::System.Convert.ToString);
            }
            if (content.Contains("CustomActionParameter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).CustomActionParameter = (string) content.GetValueForProperty("CustomActionParameter",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).CustomActionParameter, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.SiteConfig"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal SiteConfig(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("MachineKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).MachineKey = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteMachineKey) content.GetValueForProperty("MachineKey",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).MachineKey, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.SiteMachineKeyTypeConverter.ConvertFrom);
            }
            if (content.Contains("Experiment"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).Experiment = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IExperiments) content.GetValueForProperty("Experiment",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).Experiment, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ExperimentsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Limit"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).Limit = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLimits) content.GetValueForProperty("Limit",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).Limit, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.SiteLimitsTypeConverter.ConvertFrom);
            }
            if (content.Contains("AutoHealRule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).AutoHealRule = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IAutoHealRules) content.GetValueForProperty("AutoHealRule",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).AutoHealRule, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.AutoHealRulesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Cor"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).Cor = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ICorsSettings) content.GetValueForProperty("Cor",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).Cor, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.CorsSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Push"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).Push = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IPushSettings) content.GetValueForProperty("Push",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).Push, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.PushSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("ApiDefinition"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ApiDefinition = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IApiDefinitionInfo) content.GetValueForProperty("ApiDefinition",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ApiDefinition, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ApiDefinitionInfoTypeConverter.ConvertFrom);
            }
            if (content.Contains("ApiManagementConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ApiManagementConfig = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IApiManagementConfig) content.GetValueForProperty("ApiManagementConfig",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ApiManagementConfig, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ApiManagementConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("NumberOfWorker"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).NumberOfWorker = (int?) content.GetValueForProperty("NumberOfWorker",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).NumberOfWorker, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("DefaultDocument"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).DefaultDocument = (string[]) content.GetValueForProperty("DefaultDocument",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).DefaultDocument, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("NetFrameworkVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).NetFrameworkVersion = (string) content.GetValueForProperty("NetFrameworkVersion",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).NetFrameworkVersion, global::System.Convert.ToString);
            }
            if (content.Contains("PhpVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).PhpVersion = (string) content.GetValueForProperty("PhpVersion",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).PhpVersion, global::System.Convert.ToString);
            }
            if (content.Contains("PythonVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).PythonVersion = (string) content.GetValueForProperty("PythonVersion",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).PythonVersion, global::System.Convert.ToString);
            }
            if (content.Contains("NodeVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).NodeVersion = (string) content.GetValueForProperty("NodeVersion",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).NodeVersion, global::System.Convert.ToString);
            }
            if (content.Contains("PowerShellVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).PowerShellVersion = (string) content.GetValueForProperty("PowerShellVersion",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).PowerShellVersion, global::System.Convert.ToString);
            }
            if (content.Contains("LinuxFxVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).LinuxFxVersion = (string) content.GetValueForProperty("LinuxFxVersion",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).LinuxFxVersion, global::System.Convert.ToString);
            }
            if (content.Contains("WindowsFxVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).WindowsFxVersion = (string) content.GetValueForProperty("WindowsFxVersion",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).WindowsFxVersion, global::System.Convert.ToString);
            }
            if (content.Contains("RequestTracingEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).RequestTracingEnabled = (bool?) content.GetValueForProperty("RequestTracingEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).RequestTracingEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("RequestTracingExpirationTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).RequestTracingExpirationTime = (global::System.DateTime?) content.GetValueForProperty("RequestTracingExpirationTime",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).RequestTracingExpirationTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("RemoteDebuggingEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).RemoteDebuggingEnabled = (bool?) content.GetValueForProperty("RemoteDebuggingEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).RemoteDebuggingEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("RemoteDebuggingVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).RemoteDebuggingVersion = (string) content.GetValueForProperty("RemoteDebuggingVersion",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).RemoteDebuggingVersion, global::System.Convert.ToString);
            }
            if (content.Contains("HttpLoggingEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).HttpLoggingEnabled = (bool?) content.GetValueForProperty("HttpLoggingEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).HttpLoggingEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AcrUseManagedIdentityCred"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).AcrUseManagedIdentityCred = (bool?) content.GetValueForProperty("AcrUseManagedIdentityCred",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).AcrUseManagedIdentityCred, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AcrUserManagedIdentityId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).AcrUserManagedIdentityId = (string) content.GetValueForProperty("AcrUserManagedIdentityId",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).AcrUserManagedIdentityId, global::System.Convert.ToString);
            }
            if (content.Contains("LogsDirectorySizeLimit"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).LogsDirectorySizeLimit = (int?) content.GetValueForProperty("LogsDirectorySizeLimit",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).LogsDirectorySizeLimit, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("DetailedErrorLoggingEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).DetailedErrorLoggingEnabled = (bool?) content.GetValueForProperty("DetailedErrorLoggingEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).DetailedErrorLoggingEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("PublishingUsername"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).PublishingUsername = (string) content.GetValueForProperty("PublishingUsername",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).PublishingUsername, global::System.Convert.ToString);
            }
            if (content.Contains("AppSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).AppSetting = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.INameValuePair[]) content.GetValueForProperty("AppSetting",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).AppSetting, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.INameValuePair>(__y, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.NameValuePairTypeConverter.ConvertFrom));
            }
            if (content.Contains("ConnectionString"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ConnectionString = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IConnStringInfo[]) content.GetValueForProperty("ConnectionString",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ConnectionString, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IConnStringInfo>(__y, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ConnStringInfoTypeConverter.ConvertFrom));
            }
            if (content.Contains("HandlerMapping"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).HandlerMapping = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IHandlerMapping[]) content.GetValueForProperty("HandlerMapping",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).HandlerMapping, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IHandlerMapping>(__y, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.HandlerMappingTypeConverter.ConvertFrom));
            }
            if (content.Contains("DocumentRoot"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).DocumentRoot = (string) content.GetValueForProperty("DocumentRoot",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).DocumentRoot, global::System.Convert.ToString);
            }
            if (content.Contains("ScmType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ScmType = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.ScmType?) content.GetValueForProperty("ScmType",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ScmType, Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.ScmType.CreateFrom);
            }
            if (content.Contains("Use32BitWorkerProcess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).Use32BitWorkerProcess = (bool?) content.GetValueForProperty("Use32BitWorkerProcess",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).Use32BitWorkerProcess, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("WebSocketsEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).WebSocketsEnabled = (bool?) content.GetValueForProperty("WebSocketsEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).WebSocketsEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AlwaysOn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).AlwaysOn = (bool?) content.GetValueForProperty("AlwaysOn",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).AlwaysOn, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("JavaVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).JavaVersion = (string) content.GetValueForProperty("JavaVersion",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).JavaVersion, global::System.Convert.ToString);
            }
            if (content.Contains("JavaContainer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).JavaContainer = (string) content.GetValueForProperty("JavaContainer",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).JavaContainer, global::System.Convert.ToString);
            }
            if (content.Contains("JavaContainerVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).JavaContainerVersion = (string) content.GetValueForProperty("JavaContainerVersion",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).JavaContainerVersion, global::System.Convert.ToString);
            }
            if (content.Contains("AppCommandLine"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).AppCommandLine = (string) content.GetValueForProperty("AppCommandLine",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).AppCommandLine, global::System.Convert.ToString);
            }
            if (content.Contains("ManagedPipelineMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ManagedPipelineMode = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.ManagedPipelineMode?) content.GetValueForProperty("ManagedPipelineMode",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ManagedPipelineMode, Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.ManagedPipelineMode.CreateFrom);
            }
            if (content.Contains("VirtualApplication"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).VirtualApplication = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IVirtualApplication[]) content.GetValueForProperty("VirtualApplication",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).VirtualApplication, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IVirtualApplication>(__y, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.VirtualApplicationTypeConverter.ConvertFrom));
            }
            if (content.Contains("LoadBalancing"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).LoadBalancing = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.SiteLoadBalancing?) content.GetValueForProperty("LoadBalancing",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).LoadBalancing, Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.SiteLoadBalancing.CreateFrom);
            }
            if (content.Contains("AutoHealEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).AutoHealEnabled = (bool?) content.GetValueForProperty("AutoHealEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).AutoHealEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("TracingOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).TracingOption = (string) content.GetValueForProperty("TracingOption",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).TracingOption, global::System.Convert.ToString);
            }
            if (content.Contains("VnetName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).VnetName = (string) content.GetValueForProperty("VnetName",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).VnetName, global::System.Convert.ToString);
            }
            if (content.Contains("VnetRouteAllEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).VnetRouteAllEnabled = (bool?) content.GetValueForProperty("VnetRouteAllEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).VnetRouteAllEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("VnetPrivatePortsCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).VnetPrivatePortsCount = (int?) content.GetValueForProperty("VnetPrivatePortsCount",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).VnetPrivatePortsCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("AutoSwapSlotName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).AutoSwapSlotName = (string) content.GetValueForProperty("AutoSwapSlotName",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).AutoSwapSlotName, global::System.Convert.ToString);
            }
            if (content.Contains("LocalMySqlEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).LocalMySqlEnabled = (bool?) content.GetValueForProperty("LocalMySqlEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).LocalMySqlEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ManagedServiceIdentityId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ManagedServiceIdentityId = (int?) content.GetValueForProperty("ManagedServiceIdentityId",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ManagedServiceIdentityId, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("XManagedServiceIdentityId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).XManagedServiceIdentityId = (int?) content.GetValueForProperty("XManagedServiceIdentityId",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).XManagedServiceIdentityId, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("KeyVaultReferenceIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).KeyVaultReferenceIdentity = (string) content.GetValueForProperty("KeyVaultReferenceIdentity",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).KeyVaultReferenceIdentity, global::System.Convert.ToString);
            }
            if (content.Contains("IPSecurityRestriction"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).IPSecurityRestriction = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IIPSecurityRestriction[]) content.GetValueForProperty("IPSecurityRestriction",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).IPSecurityRestriction, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IIPSecurityRestriction>(__y, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IPSecurityRestrictionTypeConverter.ConvertFrom));
            }
            if (content.Contains("ScmIPSecurityRestriction"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ScmIPSecurityRestriction = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IIPSecurityRestriction[]) content.GetValueForProperty("ScmIPSecurityRestriction",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ScmIPSecurityRestriction, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IIPSecurityRestriction>(__y, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IPSecurityRestrictionTypeConverter.ConvertFrom));
            }
            if (content.Contains("ScmIPSecurityRestrictionsUseMain"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ScmIPSecurityRestrictionsUseMain = (bool?) content.GetValueForProperty("ScmIPSecurityRestrictionsUseMain",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ScmIPSecurityRestrictionsUseMain, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("Http20Enabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).Http20Enabled = (bool?) content.GetValueForProperty("Http20Enabled",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).Http20Enabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("MinTlsVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).MinTlsVersion = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.SupportedTlsVersions?) content.GetValueForProperty("MinTlsVersion",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).MinTlsVersion, Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.SupportedTlsVersions.CreateFrom);
            }
            if (content.Contains("ScmMinTlsVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ScmMinTlsVersion = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.SupportedTlsVersions?) content.GetValueForProperty("ScmMinTlsVersion",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ScmMinTlsVersion, Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.SupportedTlsVersions.CreateFrom);
            }
            if (content.Contains("FtpsState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).FtpsState = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.FtpsState?) content.GetValueForProperty("FtpsState",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).FtpsState, Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.FtpsState.CreateFrom);
            }
            if (content.Contains("PreWarmedInstanceCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).PreWarmedInstanceCount = (int?) content.GetValueForProperty("PreWarmedInstanceCount",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).PreWarmedInstanceCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("FunctionAppScaleLimit"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).FunctionAppScaleLimit = (int?) content.GetValueForProperty("FunctionAppScaleLimit",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).FunctionAppScaleLimit, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("HealthCheckPath"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).HealthCheckPath = (string) content.GetValueForProperty("HealthCheckPath",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).HealthCheckPath, global::System.Convert.ToString);
            }
            if (content.Contains("FunctionsRuntimeScaleMonitoringEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).FunctionsRuntimeScaleMonitoringEnabled = (bool?) content.GetValueForProperty("FunctionsRuntimeScaleMonitoringEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).FunctionsRuntimeScaleMonitoringEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("WebsiteTimeZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).WebsiteTimeZone = (string) content.GetValueForProperty("WebsiteTimeZone",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).WebsiteTimeZone, global::System.Convert.ToString);
            }
            if (content.Contains("MinimumElasticInstanceCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).MinimumElasticInstanceCount = (int?) content.GetValueForProperty("MinimumElasticInstanceCount",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).MinimumElasticInstanceCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("AzureStorageAccount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).AzureStorageAccount = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigAzureStorageAccounts) content.GetValueForProperty("AzureStorageAccount",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).AzureStorageAccount, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.SiteConfigAzureStorageAccountsTypeConverter.ConvertFrom);
            }
            if (content.Contains("PublicNetworkAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).PublicNetworkAccess = (string) content.GetValueForProperty("PublicNetworkAccess",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).PublicNetworkAccess, global::System.Convert.ToString);
            }
            if (content.Contains("ApiManagementConfigId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ApiManagementConfigId = (string) content.GetValueForProperty("ApiManagementConfigId",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ApiManagementConfigId, global::System.Convert.ToString);
            }
            if (content.Contains("MachineKeyValidation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).MachineKeyValidation = (string) content.GetValueForProperty("MachineKeyValidation",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).MachineKeyValidation, global::System.Convert.ToString);
            }
            if (content.Contains("MachineKeyValidationKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).MachineKeyValidationKey = (string) content.GetValueForProperty("MachineKeyValidationKey",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).MachineKeyValidationKey, global::System.Convert.ToString);
            }
            if (content.Contains("MachineKeyDecryption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).MachineKeyDecryption = (string) content.GetValueForProperty("MachineKeyDecryption",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).MachineKeyDecryption, global::System.Convert.ToString);
            }
            if (content.Contains("MachineKeyDecryptionKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).MachineKeyDecryptionKey = (string) content.GetValueForProperty("MachineKeyDecryptionKey",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).MachineKeyDecryptionKey, global::System.Convert.ToString);
            }
            if (content.Contains("ExperimentRampUpRule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ExperimentRampUpRule = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IRampUpRule[]) content.GetValueForProperty("ExperimentRampUpRule",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ExperimentRampUpRule, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IRampUpRule>(__y, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.RampUpRuleTypeConverter.ConvertFrom));
            }
            if (content.Contains("LimitMaxPercentageCpu"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).LimitMaxPercentageCpu = (double?) content.GetValueForProperty("LimitMaxPercentageCpu",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).LimitMaxPercentageCpu, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("LimitMaxMemoryInMb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).LimitMaxMemoryInMb = (long?) content.GetValueForProperty("LimitMaxMemoryInMb",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).LimitMaxMemoryInMb, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("LimitMaxDiskSizeInMb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).LimitMaxDiskSizeInMb = (long?) content.GetValueForProperty("LimitMaxDiskSizeInMb",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).LimitMaxDiskSizeInMb, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("AutoHealRuleTrigger"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).AutoHealRuleTrigger = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IAutoHealTriggers) content.GetValueForProperty("AutoHealRuleTrigger",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).AutoHealRuleTrigger, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.AutoHealTriggersTypeConverter.ConvertFrom);
            }
            if (content.Contains("AutoHealRuleAction"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).AutoHealRuleAction = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IAutoHealActions) content.GetValueForProperty("AutoHealRuleAction",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).AutoHealRuleAction, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.AutoHealActionsTypeConverter.ConvertFrom);
            }
            if (content.Contains("CorAllowedOrigin"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).CorAllowedOrigin = (string[]) content.GetValueForProperty("CorAllowedOrigin",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).CorAllowedOrigin, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("CorSupportCredentials"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).CorSupportCredentials = (bool?) content.GetValueForProperty("CorSupportCredentials",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).CorSupportCredentials, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("PushId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).PushId = (string) content.GetValueForProperty("PushId",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).PushId, global::System.Convert.ToString);
            }
            if (content.Contains("PushName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).PushName = (string) content.GetValueForProperty("PushName",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).PushName, global::System.Convert.ToString);
            }
            if (content.Contains("PushKind"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).PushKind = (string) content.GetValueForProperty("PushKind",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).PushKind, global::System.Convert.ToString);
            }
            if (content.Contains("PushType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).PushType = (string) content.GetValueForProperty("PushType",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).PushType, global::System.Convert.ToString);
            }
            if (content.Contains("PushProperty"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).PushProperty = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IPushSettingsProperties) content.GetValueForProperty("PushProperty",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).PushProperty, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.PushSettingsPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("ApiDefinitionUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ApiDefinitionUrl = (string) content.GetValueForProperty("ApiDefinitionUrl",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ApiDefinitionUrl, global::System.Convert.ToString);
            }
            if (content.Contains("TriggerRequest"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).TriggerRequest = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IRequestsBasedTrigger) content.GetValueForProperty("TriggerRequest",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).TriggerRequest, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.RequestsBasedTriggerTypeConverter.ConvertFrom);
            }
            if (content.Contains("TriggerSlowRequest"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).TriggerSlowRequest = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISlowRequestsBasedTrigger) content.GetValueForProperty("TriggerSlowRequest",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).TriggerSlowRequest, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.SlowRequestsBasedTriggerTypeConverter.ConvertFrom);
            }
            if (content.Contains("TriggerPrivateBytesInKb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).TriggerPrivateBytesInKb = (int?) content.GetValueForProperty("TriggerPrivateBytesInKb",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).TriggerPrivateBytesInKb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("TriggerStatusCode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).TriggerStatusCode = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IStatusCodesBasedTrigger[]) content.GetValueForProperty("TriggerStatusCode",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).TriggerStatusCode, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IStatusCodesBasedTrigger>(__y, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.StatusCodesBasedTriggerTypeConverter.ConvertFrom));
            }
            if (content.Contains("TriggerSlowRequestsWithPath"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).TriggerSlowRequestsWithPath = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISlowRequestsBasedTrigger[]) content.GetValueForProperty("TriggerSlowRequestsWithPath",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).TriggerSlowRequestsWithPath, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISlowRequestsBasedTrigger>(__y, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.SlowRequestsBasedTriggerTypeConverter.ConvertFrom));
            }
            if (content.Contains("TriggerStatusCodesRange"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).TriggerStatusCodesRange = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IStatusCodesRangeBasedTrigger[]) content.GetValueForProperty("TriggerStatusCodesRange",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).TriggerStatusCodesRange, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IStatusCodesRangeBasedTrigger>(__y, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.StatusCodesRangeBasedTriggerTypeConverter.ConvertFrom));
            }
            if (content.Contains("ActionCustomAction"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ActionCustomAction = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IAutoHealCustomAction) content.GetValueForProperty("ActionCustomAction",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ActionCustomAction, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.AutoHealCustomActionTypeConverter.ConvertFrom);
            }
            if (content.Contains("ActionType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ActionType = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.AutoHealActionType?) content.GetValueForProperty("ActionType",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ActionType, Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.AutoHealActionType.CreateFrom);
            }
            if (content.Contains("ActionMinProcessExecutionTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ActionMinProcessExecutionTime = (string) content.GetValueForProperty("ActionMinProcessExecutionTime",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).ActionMinProcessExecutionTime, global::System.Convert.ToString);
            }
            if (content.Contains("IsPushEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).IsPushEnabled = (bool) content.GetValueForProperty("IsPushEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).IsPushEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("TagWhitelistJson"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).TagWhitelistJson = (string) content.GetValueForProperty("TagWhitelistJson",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).TagWhitelistJson, global::System.Convert.ToString);
            }
            if (content.Contains("TagsRequiringAuth"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).TagsRequiringAuth = (string) content.GetValueForProperty("TagsRequiringAuth",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).TagsRequiringAuth, global::System.Convert.ToString);
            }
            if (content.Contains("DynamicTagsJson"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).DynamicTagsJson = (string) content.GetValueForProperty("DynamicTagsJson",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).DynamicTagsJson, global::System.Convert.ToString);
            }
            if (content.Contains("RequestCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).RequestCount = (int?) content.GetValueForProperty("RequestCount",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).RequestCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("RequestTimeInterval"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).RequestTimeInterval = (string) content.GetValueForProperty("RequestTimeInterval",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).RequestTimeInterval, global::System.Convert.ToString);
            }
            if (content.Contains("SlowRequestTimeTaken"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).SlowRequestTimeTaken = (string) content.GetValueForProperty("SlowRequestTimeTaken",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).SlowRequestTimeTaken, global::System.Convert.ToString);
            }
            if (content.Contains("SlowRequestPath"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).SlowRequestPath = (string) content.GetValueForProperty("SlowRequestPath",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).SlowRequestPath, global::System.Convert.ToString);
            }
            if (content.Contains("SlowRequestCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).SlowRequestCount = (int?) content.GetValueForProperty("SlowRequestCount",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).SlowRequestCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SlowRequestTimeInterval"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).SlowRequestTimeInterval = (string) content.GetValueForProperty("SlowRequestTimeInterval",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).SlowRequestTimeInterval, global::System.Convert.ToString);
            }
            if (content.Contains("CustomActionExe"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).CustomActionExe = (string) content.GetValueForProperty("CustomActionExe",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).CustomActionExe, global::System.Convert.ToString);
            }
            if (content.Contains("CustomActionParameter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).CustomActionParameter = (string) content.GetValueForProperty("CustomActionParameter",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteConfigInternal)this).CustomActionParameter, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Websites.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// Configuration of an App Service app.
    [System.ComponentModel.TypeConverter(typeof(SiteConfigTypeConverter))]
    public partial interface ISiteConfig

    {

    }
}