// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.Extensions;

    /// <summary>Information on an entity (distinguished name) in a cryptographic certificate.</summary>
    public partial class CryptoCertificateEntity :
        Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ICryptoCertificateEntity,
        Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ICryptoCertificateEntityInternal
    {

        /// <summary>Backing field for <see cref="CommonName" /> property.</summary>
        private string _commonName;

        /// <summary>Common name of the certificate entity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Origin(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PropertyOrigin.Owned)]
        public string CommonName { get => this._commonName; set => this._commonName = value; }

        /// <summary>Backing field for <see cref="Country" /> property.</summary>
        private string _country;

        /// <summary>Country code of the certificate entity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Origin(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PropertyOrigin.Owned)]
        public string Country { get => this._country; set => this._country = value; }

        /// <summary>Backing field for <see cref="Organization" /> property.</summary>
        private string _organization;

        /// <summary>Organization of the certificate entity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Origin(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PropertyOrigin.Owned)]
        public string Organization { get => this._organization; set => this._organization = value; }

        /// <summary>Backing field for <see cref="OrganizationalUnit" /> property.</summary>
        private string _organizationalUnit;

        /// <summary>The organizational unit of the certificate entity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Origin(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PropertyOrigin.Owned)]
        public string OrganizationalUnit { get => this._organizationalUnit; set => this._organizationalUnit = value; }

        /// <summary>Backing field for <see cref="State" /> property.</summary>
        private string _state;

        /// <summary>Geographical state or province of the certificate entity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Origin(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PropertyOrigin.Owned)]
        public string State { get => this._state; set => this._state = value; }

        /// <summary>Creates an new <see cref="CryptoCertificateEntity" /> instance.</summary>
        public CryptoCertificateEntity()
        {

        }
    }
    /// Information on an entity (distinguished name) in a cryptographic certificate.
    public partial interface ICryptoCertificateEntity :
        Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.IJsonSerializable
    {
        /// <summary>Common name of the certificate entity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Common name of the certificate entity.",
        SerializedName = @"commonName",
        PossibleTypes = new [] { typeof(string) })]
        string CommonName { get; set; }
        /// <summary>Country code of the certificate entity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Country code of the certificate entity.",
        SerializedName = @"country",
        PossibleTypes = new [] { typeof(string) })]
        string Country { get; set; }
        /// <summary>Organization of the certificate entity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Organization of the certificate entity.",
        SerializedName = @"organization",
        PossibleTypes = new [] { typeof(string) })]
        string Organization { get; set; }
        /// <summary>The organizational unit of the certificate entity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The organizational unit of the certificate entity.",
        SerializedName = @"organizationalUnit",
        PossibleTypes = new [] { typeof(string) })]
        string OrganizationalUnit { get; set; }
        /// <summary>Geographical state or province of the certificate entity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Geographical state or province of the certificate entity.",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(string) })]
        string State { get; set; }

    }
    /// Information on an entity (distinguished name) in a cryptographic certificate.
    internal partial interface ICryptoCertificateEntityInternal

    {
        /// <summary>Common name of the certificate entity.</summary>
        string CommonName { get; set; }
        /// <summary>Country code of the certificate entity.</summary>
        string Country { get; set; }
        /// <summary>Organization of the certificate entity.</summary>
        string Organization { get; set; }
        /// <summary>The organizational unit of the certificate entity.</summary>
        string OrganizationalUnit { get; set; }
        /// <summary>Geographical state or province of the certificate entity.</summary>
        string State { get; set; }

    }
}