// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.Extensions;

    /// <summary>Properties for a CVE analysis summary.</summary>
    public partial class CveSummary :
        Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ICveSummary,
        Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ICveSummaryInternal,
        Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ISummaryResourceProperties"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ISummaryResourceProperties __summaryResourceProperties = new Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.SummaryResourceProperties();

        /// <summary>Backing field for <see cref="Critical" /> property.</summary>
        private long? _critical;

        /// <summary>The total number of critical severity CVEs detected</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Origin(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PropertyOrigin.Owned)]
        public long? Critical { get => this._critical; set => this._critical = value; }

        /// <summary>Backing field for <see cref="High" /> property.</summary>
        private long? _high;

        /// <summary>The total number of high severity CVEs detected</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Origin(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PropertyOrigin.Owned)]
        public long? High { get => this._high; set => this._high = value; }

        /// <summary>Backing field for <see cref="Low" /> property.</summary>
        private long? _low;

        /// <summary>The total number of low severity CVEs detected</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Origin(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PropertyOrigin.Owned)]
        public long? Low { get => this._low; set => this._low = value; }

        /// <summary>Backing field for <see cref="Medium" /> property.</summary>
        private long? _medium;

        /// <summary>The total number of medium severity CVEs detected</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Origin(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PropertyOrigin.Owned)]
        public long? Medium { get => this._medium; set => this._medium = value; }

        /// <summary>Describes the type of summary.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Constant]
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Origin(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PropertyOrigin.Inherited)]
        public string SummaryType { get => "CVE"; set => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ISummaryResourcePropertiesInternal)__summaryResourceProperties).SummaryType = "CVE"; }

        /// <summary>Backing field for <see cref="Unknown" /> property.</summary>
        private long? _unknown;

        /// <summary>The total number of unknown severity CVEs detected</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Origin(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PropertyOrigin.Owned)]
        public long? Unknown { get => this._unknown; set => this._unknown = value; }

        /// <summary>Creates an new <see cref="CveSummary" /> instance.</summary>
        public CveSummary()
        {
            this.__summaryResourceProperties.SummaryType = "CVE";
        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__summaryResourceProperties), __summaryResourceProperties);
            await eventListener.AssertObjectIsValid(nameof(__summaryResourceProperties), __summaryResourceProperties);
        }
    }
    /// Properties for a CVE analysis summary.
    public partial interface ICveSummary :
        Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ISummaryResourceProperties
    {
        /// <summary>The total number of critical severity CVEs detected</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The total number of critical severity CVEs detected",
        SerializedName = @"critical",
        PossibleTypes = new [] { typeof(long) })]
        long? Critical { get; set; }
        /// <summary>The total number of high severity CVEs detected</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The total number of high severity CVEs detected",
        SerializedName = @"high",
        PossibleTypes = new [] { typeof(long) })]
        long? High { get; set; }
        /// <summary>The total number of low severity CVEs detected</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The total number of low severity CVEs detected",
        SerializedName = @"low",
        PossibleTypes = new [] { typeof(long) })]
        long? Low { get; set; }
        /// <summary>The total number of medium severity CVEs detected</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The total number of medium severity CVEs detected",
        SerializedName = @"medium",
        PossibleTypes = new [] { typeof(long) })]
        long? Medium { get; set; }
        /// <summary>The total number of unknown severity CVEs detected</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The total number of unknown severity CVEs detected",
        SerializedName = @"unknown",
        PossibleTypes = new [] { typeof(long) })]
        long? Unknown { get; set; }

    }
    /// Properties for a CVE analysis summary.
    internal partial interface ICveSummaryInternal :
        Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ISummaryResourcePropertiesInternal
    {
        /// <summary>The total number of critical severity CVEs detected</summary>
        long? Critical { get; set; }
        /// <summary>The total number of high severity CVEs detected</summary>
        long? High { get; set; }
        /// <summary>The total number of low severity CVEs detected</summary>
        long? Low { get; set; }
        /// <summary>The total number of medium severity CVEs detected</summary>
        long? Medium { get; set; }
        /// <summary>The total number of unknown severity CVEs detected</summary>
        long? Unknown { get; set; }

    }
}