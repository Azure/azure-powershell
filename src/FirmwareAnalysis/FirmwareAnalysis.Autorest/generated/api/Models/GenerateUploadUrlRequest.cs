// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.Extensions;

    /// <summary>Properties for generating an upload URL</summary>
    public partial class GenerateUploadUrlRequest :
        Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IGenerateUploadUrlRequest,
        Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IGenerateUploadUrlRequestInternal
    {

        /// <summary>Backing field for <see cref="FirmwareId" /> property.</summary>
        private string _firmwareId;

        /// <summary>A unique ID for the firmware to be uploaded.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Origin(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PropertyOrigin.Owned)]
        public string FirmwareId { get => this._firmwareId; set => this._firmwareId = value; }

        /// <summary>Creates an new <see cref="GenerateUploadUrlRequest" /> instance.</summary>
        public GenerateUploadUrlRequest()
        {

        }
    }
    /// Properties for generating an upload URL
    public partial interface IGenerateUploadUrlRequest :
        Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.IJsonSerializable
    {
        /// <summary>A unique ID for the firmware to be uploaded.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"A unique ID for the firmware to be uploaded.",
        SerializedName = @"firmwareId",
        PossibleTypes = new [] { typeof(string) })]
        string FirmwareId { get; set; }

    }
    /// Properties for generating an upload URL
    internal partial interface IGenerateUploadUrlRequestInternal

    {
        /// <summary>A unique ID for the firmware to be uploaded.</summary>
        string FirmwareId { get; set; }

    }
}