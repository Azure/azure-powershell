// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Synapse.Models
{
    using System.Linq;

    /// <summary>
    /// Class representing the Kusto database properties.
    /// </summary>
    public partial class ReadOnlyFollowingDatabaseProperties
    {
        /// <summary>
        /// Initializes a new instance of the ReadOnlyFollowingDatabaseProperties class.
        /// </summary>
        public ReadOnlyFollowingDatabaseProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ReadOnlyFollowingDatabaseProperties class.
        /// </summary>

        /// <param name="provisioningState">The provisioned state of the resource.
        /// Possible values include: &#39;Running&#39;, &#39;Creating&#39;, &#39;Deleting&#39;, &#39;Succeeded&#39;,
        /// &#39;Failed&#39;, &#39;Moving&#39;, &#39;Canceled&#39;</param>

        /// <param name="softDeletePeriod">The time the data should be kept before it stops being accessible to
        /// queries in TimeSpan.
        /// </param>

        /// <param name="hotCachePeriod">The time the data should be kept in cache for fast queries in TimeSpan.
        /// </param>

        /// <param name="statistics">The statistics of the database.
        /// </param>

        /// <param name="leaderClusterResourceId">The name of the leader cluster
        /// </param>

        /// <param name="attachedDatabaseConfigurationName">The name of the attached database configuration cluster
        /// </param>

        /// <param name="principalsModificationKind">The principals modification kind of the database
        /// Possible values include: &#39;Union&#39;, &#39;Replace&#39;, &#39;None&#39;</param>
        public ReadOnlyFollowingDatabaseProperties(string provisioningState = default(string), System.TimeSpan? softDeletePeriod = default(System.TimeSpan?), System.TimeSpan? hotCachePeriod = default(System.TimeSpan?), DatabaseStatistics statistics = default(DatabaseStatistics), string leaderClusterResourceId = default(string), string attachedDatabaseConfigurationName = default(string), string principalsModificationKind = default(string))

        {
            this.ProvisioningState = provisioningState;
            this.SoftDeletePeriod = softDeletePeriod;
            this.HotCachePeriod = hotCachePeriod;
            this.Statistics = statistics;
            this.LeaderClusterResourceId = leaderClusterResourceId;
            this.AttachedDatabaseConfigurationName = attachedDatabaseConfigurationName;
            this.PrincipalsModificationKind = principalsModificationKind;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the provisioned state of the resource. Possible values include: &#39;Running&#39;, &#39;Creating&#39;, &#39;Deleting&#39;, &#39;Succeeded&#39;, &#39;Failed&#39;, &#39;Moving&#39;, &#39;Canceled&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState {get; private set; }

        /// <summary>
        /// Gets the time the data should be kept before it stops being accessible to
        /// queries in TimeSpan.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "softDeletePeriod")]
        public System.TimeSpan? SoftDeletePeriod {get; private set; }

        /// <summary>
        /// Gets or sets the time the data should be kept in cache for fast queries in
        /// TimeSpan.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "hotCachePeriod")]
        public System.TimeSpan? HotCachePeriod {get; set; }

        /// <summary>
        /// Gets the statistics of the database.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "statistics")]
        public DatabaseStatistics Statistics {get; private set; }

        /// <summary>
        /// Gets the name of the leader cluster
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "leaderClusterResourceId")]
        public string LeaderClusterResourceId {get; private set; }

        /// <summary>
        /// Gets the name of the attached database configuration cluster
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "attachedDatabaseConfigurationName")]
        public string AttachedDatabaseConfigurationName {get; private set; }

        /// <summary>
        /// Gets the principals modification kind of the database Possible values include: &#39;Union&#39;, &#39;Replace&#39;, &#39;None&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "principalsModificationKind")]
        public string PrincipalsModificationKind {get; private set; }
    }
}