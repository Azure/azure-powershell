// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Synapse.Models
{
    using System.Linq;

    /// <summary>
    /// Azure capacity definition.
    /// </summary>
    public partial class AzureCapacity
    {
        /// <summary>
        /// Initializes a new instance of the AzureCapacity class.
        /// </summary>
        public AzureCapacity()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AzureCapacity class.
        /// </summary>

        /// <param name="scaleType">Scale type.
        /// Possible values include: &#39;automatic&#39;, &#39;manual&#39;, &#39;none&#39;</param>

        /// <param name="minimum">Minimum allowed capacity.
        /// </param>

        /// <param name="maximum">Maximum allowed capacity.
        /// </param>

        /// <param name="defaultProperty">The default capacity that would be used.
        /// </param>
        public AzureCapacity(string scaleType, int minimum, int maximum, int defaultProperty)

        {
            this.ScaleType = scaleType;
            this.Minimum = minimum;
            this.Maximum = maximum;
            this.DefaultProperty = defaultProperty;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets scale type. Possible values include: &#39;automatic&#39;, &#39;manual&#39;, &#39;none&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "scaleType")]
        public string ScaleType {get; set; }

        /// <summary>
        /// Gets or sets minimum allowed capacity.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "minimum")]
        public int Minimum {get; set; }

        /// <summary>
        /// Gets or sets maximum allowed capacity.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "maximum")]
        public int Maximum {get; set; }

        /// <summary>
        /// Gets or sets the default capacity that would be used.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "default")]
        public int DefaultProperty {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.ScaleType == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "ScaleType");
            }

        }
    }
}