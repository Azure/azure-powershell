// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Synapse.Models
{
    using System.Linq;

    /// <summary>
    /// Class representing the Kusto pool properties.
    /// </summary>
    public partial class KustoPoolProperties
    {
        /// <summary>
        /// Initializes a new instance of the KustoPoolProperties class.
        /// </summary>
        public KustoPoolProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the KustoPoolProperties class.
        /// </summary>

        /// <param name="state">The state of the resource.
        /// Possible values include: &#39;Creating&#39;, &#39;Unavailable&#39;, &#39;Running&#39;, &#39;Deleting&#39;,
        /// &#39;Deleted&#39;, &#39;Stopping&#39;, &#39;Stopped&#39;, &#39;Starting&#39;, &#39;Updating&#39;</param>

        /// <param name="provisioningState">The provisioned state of the resource.
        /// Possible values include: &#39;Running&#39;, &#39;Creating&#39;, &#39;Deleting&#39;, &#39;Succeeded&#39;,
        /// &#39;Failed&#39;, &#39;Moving&#39;, &#39;Canceled&#39;</param>

        /// <param name="uri">The Kusto Pool URI.
        /// </param>

        /// <param name="dataIngestionUri">The Kusto Pool data ingestion URI.
        /// </param>

        /// <param name="stateReason">The reason for the Kusto Pool&#39;s current state.
        /// </param>

        /// <param name="optimizedAutoscale">Optimized auto scale definition.
        /// </param>

        /// <param name="enableStreamingIngest">A boolean value that indicates if the streaming ingest is enabled.
        /// </param>

        /// <param name="enablePurge">A boolean value that indicates if the purge operations are enabled.
        /// </param>

        /// <param name="languageExtensions">List of the Kusto Pool&#39;s language extensions.
        /// </param>

        /// <param name="workspaceUid">The workspace unique identifier.
        /// </param>
        public KustoPoolProperties(string state = default(string), string provisioningState = default(string), string uri = default(string), string dataIngestionUri = default(string), string stateReason = default(string), OptimizedAutoscale optimizedAutoscale = default(OptimizedAutoscale), bool? enableStreamingIngest = default(bool?), bool? enablePurge = default(bool?), LanguageExtensionsList languageExtensions = default(LanguageExtensionsList), string workspaceUid = default(string))

        {
            this.State = state;
            this.ProvisioningState = provisioningState;
            this.Uri = uri;
            this.DataIngestionUri = dataIngestionUri;
            this.StateReason = stateReason;
            this.OptimizedAutoscale = optimizedAutoscale;
            this.EnableStreamingIngest = enableStreamingIngest;
            this.EnablePurge = enablePurge;
            this.LanguageExtensions = languageExtensions;
            this.WorkspaceUid = workspaceUid;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the state of the resource. Possible values include: &#39;Creating&#39;, &#39;Unavailable&#39;, &#39;Running&#39;, &#39;Deleting&#39;, &#39;Deleted&#39;, &#39;Stopping&#39;, &#39;Stopped&#39;, &#39;Starting&#39;, &#39;Updating&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "state")]
        public string State {get; private set; }

        /// <summary>
        /// Gets the provisioned state of the resource. Possible values include: &#39;Running&#39;, &#39;Creating&#39;, &#39;Deleting&#39;, &#39;Succeeded&#39;, &#39;Failed&#39;, &#39;Moving&#39;, &#39;Canceled&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState {get; private set; }

        /// <summary>
        /// Gets the Kusto Pool URI.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "uri")]
        public string Uri {get; private set; }

        /// <summary>
        /// Gets the Kusto Pool data ingestion URI.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "dataIngestionUri")]
        public string DataIngestionUri {get; private set; }

        /// <summary>
        /// Gets the reason for the Kusto Pool&#39;s current state.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "stateReason")]
        public string StateReason {get; private set; }

        /// <summary>
        /// Gets or sets optimized auto scale definition.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "optimizedAutoscale")]
        public OptimizedAutoscale OptimizedAutoscale {get; set; }

        /// <summary>
        /// Gets or sets a boolean value that indicates if the streaming ingest is
        /// enabled.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "enableStreamingIngest")]
        public bool? EnableStreamingIngest {get; set; }

        /// <summary>
        /// Gets or sets a boolean value that indicates if the purge operations are
        /// enabled.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "enablePurge")]
        public bool? EnablePurge {get; set; }

        /// <summary>
        /// Gets list of the Kusto Pool&#39;s language extensions.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "languageExtensions")]
        public LanguageExtensionsList LanguageExtensions {get; private set; }

        /// <summary>
        /// Gets or sets the workspace unique identifier.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "workspaceUID")]
        public string WorkspaceUid {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {





            if (this.OptimizedAutoscale != null)
            {
                this.OptimizedAutoscale.Validate();
            }


        }
    }
}