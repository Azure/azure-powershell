// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Synapse.Models
{
    using System.Linq;

    /// <summary>
    /// Details of the data lake storage account associated with the workspace
    /// </summary>
    public partial class DataLakeStorageAccountDetails
    {
        /// <summary>
        /// Initializes a new instance of the DataLakeStorageAccountDetails class.
        /// </summary>
        public DataLakeStorageAccountDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DataLakeStorageAccountDetails class.
        /// </summary>

        /// <param name="accountUrl">Account URL
        /// </param>

        /// <param name="filesystem">Filesystem name
        /// </param>

        /// <param name="resourceId">ARM resource Id of this storage account
        /// </param>

        /// <param name="createManagedPrivateEndpoint">Create managed private endpoint to this storage account or not
        /// </param>
        public DataLakeStorageAccountDetails(string accountUrl = default(string), string filesystem = default(string), string resourceId = default(string), bool? createManagedPrivateEndpoint = default(bool?))

        {
            this.AccountUrl = accountUrl;
            this.Filesystem = filesystem;
            this.ResourceId = resourceId;
            this.CreateManagedPrivateEndpoint = createManagedPrivateEndpoint;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets account URL
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "accountUrl")]
        public string AccountUrl {get; set; }

        /// <summary>
        /// Gets or sets filesystem name
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "filesystem")]
        public string Filesystem {get; set; }

        /// <summary>
        /// Gets or sets aRM resource Id of this storage account
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "resourceId")]
        public string ResourceId {get; set; }

        /// <summary>
        /// Gets or sets create managed private endpoint to this storage account or not
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "createManagedPrivateEndpoint")]
        public bool? CreateManagedPrivateEndpoint {get; set; }
    }
}