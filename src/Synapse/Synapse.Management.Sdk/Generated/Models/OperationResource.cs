// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Synapse.Models
{
    using System.Linq;

    /// <summary>
    /// An operation
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class OperationResource
    {
        /// <summary>
        /// Initializes a new instance of the OperationResource class.
        /// </summary>
        public OperationResource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the OperationResource class.
        /// </summary>

        /// <param name="id">Operation ID
        /// </param>

        /// <param name="name">Operation name
        /// </param>

        /// <param name="status">Operation status
        /// Possible values include: &#39;InProgress&#39;, &#39;Succeeded&#39;, &#39;Failed&#39;, &#39;Canceled&#39;</param>

        /// <param name="properties">Operation properties
        /// </param>

        /// <param name="error">Errors from the operation
        /// </param>

        /// <param name="startTime">Operation start time
        /// </param>

        /// <param name="endTime">Operation start time
        /// </param>

        /// <param name="percentComplete">Completion percentage of the operation
        /// </param>
        public OperationResource(string id = default(string), string name = default(string), string status = default(string), object properties = default(object), ErrorResponse error = default(ErrorResponse), System.DateTime? startTime = default(System.DateTime?), System.DateTime? endTime = default(System.DateTime?), double? percentComplete = default(double?))

        {
            this.Id = id;
            this.Name = name;
            this.Status = status;
            this.Properties = properties;
            this.Error = error;
            this.StartTime = startTime;
            this.EndTime = endTime;
            this.PercentComplete = percentComplete;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets operation ID
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "id")]
        public string Id {get; set; }

        /// <summary>
        /// Gets or sets operation name
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; set; }

        /// <summary>
        /// Gets or sets operation status Possible values include: &#39;InProgress&#39;, &#39;Succeeded&#39;, &#39;Failed&#39;, &#39;Canceled&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "status")]
        public string Status {get; set; }

        /// <summary>
        /// Gets or sets operation properties
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties")]
        public object Properties {get; set; }

        /// <summary>
        /// Gets or sets errors from the operation
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "error")]
        public ErrorResponse Error {get; set; }

        /// <summary>
        /// Gets or sets operation start time
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "startTime")]
        public System.DateTime? StartTime {get; set; }

        /// <summary>
        /// Gets or sets operation start time
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "endTime")]
        public System.DateTime? EndTime {get; set; }

        /// <summary>
        /// Gets or sets completion percentage of the operation
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "percentComplete")]
        public double? PercentComplete {get; set; }
    }
}