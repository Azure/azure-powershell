// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Synapse.Models
{
    using System.Linq;

    /// <summary>
    /// Sql pool column properties.
    /// </summary>
    public partial class SqlPoolColumnProperties
    {
        /// <summary>
        /// Initializes a new instance of the SqlPoolColumnProperties class.
        /// </summary>
        public SqlPoolColumnProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SqlPoolColumnProperties class.
        /// </summary>

        /// <param name="columnType">The column data type.
        /// Possible values include: &#39;image&#39;, &#39;text&#39;, &#39;uniqueidentifier&#39;, &#39;date&#39;,
        /// &#39;time&#39;, &#39;datetime2&#39;, &#39;datetimeoffset&#39;, &#39;tinyint&#39;, &#39;smallint&#39;, &#39;int&#39;,
        /// &#39;smalldatetime&#39;, &#39;real&#39;, &#39;money&#39;, &#39;datetime&#39;, &#39;float&#39;, &#39;sql_variant&#39;,
        /// &#39;ntext&#39;, &#39;bit&#39;, &#39;decimal&#39;, &#39;numeric&#39;, &#39;smallmoney&#39;, &#39;bigint&#39;,
        /// &#39;hierarchyid&#39;, &#39;geometry&#39;, &#39;geography&#39;, &#39;varbinary&#39;, &#39;varchar&#39;, &#39;binary&#39;,
        /// &#39;char&#39;, &#39;timestamp&#39;, &#39;nvarchar&#39;, &#39;nchar&#39;, &#39;xml&#39;, &#39;sysname&#39;</param>

        /// <param name="isComputed">Indicates whether column value is computed or not
        /// </param>
        public SqlPoolColumnProperties(string columnType = default(string), bool? isComputed = default(bool?))

        {
            this.ColumnType = columnType;
            this.IsComputed = isComputed;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the column data type. Possible values include: &#39;image&#39;, &#39;text&#39;, &#39;uniqueidentifier&#39;, &#39;date&#39;, &#39;time&#39;, &#39;datetime2&#39;, &#39;datetimeoffset&#39;, &#39;tinyint&#39;, &#39;smallint&#39;, &#39;int&#39;, &#39;smalldatetime&#39;, &#39;real&#39;, &#39;money&#39;, &#39;datetime&#39;, &#39;float&#39;, &#39;sql_variant&#39;, &#39;ntext&#39;, &#39;bit&#39;, &#39;decimal&#39;, &#39;numeric&#39;, &#39;smallmoney&#39;, &#39;bigint&#39;, &#39;hierarchyid&#39;, &#39;geometry&#39;, &#39;geography&#39;, &#39;varbinary&#39;, &#39;varchar&#39;, &#39;binary&#39;, &#39;char&#39;, &#39;timestamp&#39;, &#39;nvarchar&#39;, &#39;nchar&#39;, &#39;xml&#39;, &#39;sysname&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "columnType")]
        public string ColumnType {get; set; }

        /// <summary>
        /// Gets indicates whether column value is computed or not
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "isComputed")]
        public bool? IsComputed {get; private set; }
    }
}