// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Synapse.Models
{
    using System.Linq;

    /// <summary>
    /// A database geo backup policy.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class GeoBackupPolicy : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the GeoBackupPolicy class.
        /// </summary>
        public GeoBackupPolicy()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the GeoBackupPolicy class.
        /// </summary>

        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </param>

        /// <param name="name">The name of the resource
        /// </param>

        /// <param name="type">The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or
        /// &#34;Microsoft.Storage/storageAccounts&#34;
        /// </param>

        /// <param name="kind">Kind of geo backup policy.  This is metadata used for the Azure portal
        /// experience.
        /// </param>

        /// <param name="location">Backup policy location.
        /// </param>

        /// <param name="state">The state of the geo backup policy.
        /// Possible values include: &#39;Disabled&#39;, &#39;Enabled&#39;</param>

        /// <param name="storageType">The storage type of the geo backup policy.
        /// </param>
        public GeoBackupPolicy(GeoBackupPolicyState state, string id = default(string), string name = default(string), string type = default(string), string kind = default(string), string location = default(string), string storageType = default(string))

        : base(id, name, type)
        {
            this.Kind = kind;
            this.Location = location;
            this.State = state;
            this.StorageType = storageType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets kind of geo backup policy.  This is metadata used for the Azure portal
        /// experience.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "kind")]
        public string Kind {get; private set; }

        /// <summary>
        /// Gets backup policy location.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "location")]
        public string Location {get; private set; }

        /// <summary>
        /// Gets or sets the state of the geo backup policy. Possible values include: &#39;Disabled&#39;, &#39;Enabled&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.state")]
        public GeoBackupPolicyState State {get; set; }

        /// <summary>
        /// Gets the storage type of the geo backup policy.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.storageType")]
        public string StorageType {get; private set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {




        }
    }
}