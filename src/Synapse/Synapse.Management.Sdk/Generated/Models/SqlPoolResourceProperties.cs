// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Synapse.Models
{
    using System.Linq;

    /// <summary>
    /// Properties of a SQL Analytics pool
    /// </summary>
    /// <remarks>
    /// Properties of a SQL Analytics pool
    /// </remarks>
    public partial class SqlPoolResourceProperties
    {
        /// <summary>
        /// Initializes a new instance of the SqlPoolResourceProperties class.
        /// </summary>
        public SqlPoolResourceProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SqlPoolResourceProperties class.
        /// </summary>

        /// <param name="maxSizeBytes">Maximum size in bytes
        /// </param>

        /// <param name="collation">Collation mode
        /// </param>

        /// <param name="sourceDatabaseId">Source database to create from
        /// </param>

        /// <param name="recoverableDatabaseId">Backup database to restore from
        /// </param>

        /// <param name="provisioningState">Resource state
        /// </param>

        /// <param name="status">Resource status
        /// </param>

        /// <param name="restorePointInTime">Snapshot time to restore
        /// </param>

        /// <param name="createMode">Specifies the mode of sql pool creation.
        /// Default: regular sql pool creation.
        /// PointInTimeRestore: Creates a sql pool by restoring a point in time backup
        /// of an existing sql pool. sourceDatabaseId must be specified as the resource
        /// ID of the existing sql pool, and restorePointInTime must be specified.
        /// Recovery: Creates a sql pool by a geo-replicated backup. sourceDatabaseId 
        /// must be specified as the recoverableDatabaseId to restore.
        /// Restore: Creates a sql pool by restoring a backup of a deleted sql  pool.
        /// SourceDatabaseId should be the sql pool&#39;s original resource ID.
        /// SourceDatabaseId and sourceDatabaseDeletionDate must be specified.
        /// Possible values include: &#39;Default&#39;, &#39;PointInTimeRestore&#39;, &#39;Recovery&#39;,
        /// &#39;Restore&#39;</param>

        /// <param name="creationDate">Date the SQL pool was created
        /// </param>

        /// <param name="storageAccountType">The storage account type used to store backups for this sql pool.
        /// Possible values include: &#39;GRS&#39;, &#39;LRS&#39;</param>

        /// <param name="sourceDatabaseDeletionDate">Specifies the time that the sql pool was deleted
        /// </param>
        public SqlPoolResourceProperties(long? maxSizeBytes = default(long?), string collation = default(string), string sourceDatabaseId = default(string), string recoverableDatabaseId = default(string), string provisioningState = default(string), string status = default(string), System.DateTime? restorePointInTime = default(System.DateTime?), string createMode = default(string), System.DateTime? creationDate = default(System.DateTime?), string storageAccountType = default(string), System.DateTime? sourceDatabaseDeletionDate = default(System.DateTime?))

        {
            this.MaxSizeBytes = maxSizeBytes;
            this.Collation = collation;
            this.SourceDatabaseId = sourceDatabaseId;
            this.RecoverableDatabaseId = recoverableDatabaseId;
            this.ProvisioningState = provisioningState;
            this.Status = status;
            this.RestorePointInTime = restorePointInTime;
            this.CreateMode = createMode;
            this.CreationDate = creationDate;
            this.StorageAccountType = storageAccountType;
            this.SourceDatabaseDeletionDate = sourceDatabaseDeletionDate;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets maximum size in bytes
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "maxSizeBytes")]
        public long? MaxSizeBytes {get; set; }

        /// <summary>
        /// Gets or sets collation mode
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "collation")]
        public string Collation {get; set; }

        /// <summary>
        /// Gets or sets source database to create from
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sourceDatabaseId")]
        public string SourceDatabaseId {get; set; }

        /// <summary>
        /// Gets or sets backup database to restore from
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "recoverableDatabaseId")]
        public string RecoverableDatabaseId {get; set; }

        /// <summary>
        /// Gets or sets resource state
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState {get; set; }

        /// <summary>
        /// Gets resource status
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "status")]
        public string Status {get; private set; }

        /// <summary>
        /// Gets or sets snapshot time to restore
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "restorePointInTime")]
        public System.DateTime? RestorePointInTime {get; set; }

        /// <summary>
        /// Gets or sets specifies the mode of sql pool creation.
        /// Default: regular sql pool creation.
        /// PointInTimeRestore: Creates a sql pool by restoring a point in time backup
        /// of an existing sql pool. sourceDatabaseId must be specified as the resource
        /// ID of the existing sql pool, and restorePointInTime must be specified.
        /// Recovery: Creates a sql pool by a geo-replicated backup. sourceDatabaseId 
        /// must be specified as the recoverableDatabaseId to restore.
        /// Restore: Creates a sql pool by restoring a backup of a deleted sql  pool.
        /// SourceDatabaseId should be the sql pool&#39;s original resource ID.
        /// SourceDatabaseId and sourceDatabaseDeletionDate must be specified. Possible values include: &#39;Default&#39;, &#39;PointInTimeRestore&#39;, &#39;Recovery&#39;, &#39;Restore&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "createMode")]
        public string CreateMode {get; set; }

        /// <summary>
        /// Gets date the SQL pool was created
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "creationDate")]
        public System.DateTime? CreationDate {get; private set; }

        /// <summary>
        /// Gets or sets the storage account type used to store backups for this sql
        /// pool. Possible values include: &#39;GRS&#39;, &#39;LRS&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "storageAccountType")]
        public string StorageAccountType {get; set; }

        /// <summary>
        /// Gets or sets specifies the time that the sql pool was deleted
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sourceDatabaseDeletionDate")]
        public System.DateTime? SourceDatabaseDeletionDate {get; set; }
    }
}