// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Synapse.Models
{
    using System.Linq;

    /// <summary>
    /// The properties of a database data masking policy.
    /// </summary>
    public partial class DataMaskingPolicyProperties
    {
        /// <summary>
        /// Initializes a new instance of the DataMaskingPolicyProperties class.
        /// </summary>
        public DataMaskingPolicyProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DataMaskingPolicyProperties class.
        /// </summary>

        /// <param name="dataMaskingState">The state of the data masking policy.
        /// Possible values include: &#39;Disabled&#39;, &#39;Enabled&#39;</param>

        /// <param name="exemptPrincipals">The list of the exempt principals. Specifies the semicolon-separated list
        /// of database users for which the data masking policy does not apply. The
        /// specified users receive data results without masking for all of the
        /// database queries.
        /// </param>

        /// <param name="applicationPrincipals">The list of the application principals. This is a legacy parameter and is
        /// no longer used.
        /// </param>

        /// <param name="maskingLevel">The masking level. This is a legacy parameter and is no longer used.
        /// </param>
        public DataMaskingPolicyProperties(DataMaskingState dataMaskingState, string exemptPrincipals = default(string), string applicationPrincipals = default(string), string maskingLevel = default(string))

        {
            this.DataMaskingState = dataMaskingState;
            this.ExemptPrincipals = exemptPrincipals;
            this.ApplicationPrincipals = applicationPrincipals;
            this.MaskingLevel = maskingLevel;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the state of the data masking policy. Possible values include: &#39;Disabled&#39;, &#39;Enabled&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "dataMaskingState")]
        public DataMaskingState DataMaskingState {get; set; }

        /// <summary>
        /// Gets or sets the list of the exempt principals. Specifies the
        /// semicolon-separated list of database users for which the data masking
        /// policy does not apply. The specified users receive data results without
        /// masking for all of the database queries.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "exemptPrincipals")]
        public string ExemptPrincipals {get; set; }

        /// <summary>
        /// Gets the list of the application principals. This is a legacy parameter and
        /// is no longer used.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "applicationPrincipals")]
        public string ApplicationPrincipals {get; private set; }

        /// <summary>
        /// Gets the masking level. This is a legacy parameter and is no longer used.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "maskingLevel")]
        public string MaskingLevel {get; private set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {




        }
    }
}