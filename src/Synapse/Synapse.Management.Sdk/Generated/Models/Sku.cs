// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Synapse.Models
{
    using System.Linq;

    /// <summary>
    /// SQL pool SKU
    /// </summary>
    /// <remarks>
    /// SQL pool SKU
    /// </remarks>
    public partial class Sku
    {
        /// <summary>
        /// Initializes a new instance of the Sku class.
        /// </summary>
        public Sku()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Sku class.
        /// </summary>

        /// <param name="tier">The service tier
        /// </param>

        /// <param name="name">The SKU name
        /// </param>

        /// <param name="capacity">If the SKU supports scale out/in then the capacity integer should be
        /// included. If scale out/in is not possible for the resource this may be
        /// omitted.
        /// </param>
        public Sku(string tier = default(string), string name = default(string), int? capacity = default(int?))

        {
            this.Tier = tier;
            this.Name = name;
            this.Capacity = capacity;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the service tier
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "tier")]
        public string Tier {get; set; }

        /// <summary>
        /// Gets or sets the SKU name
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; set; }

        /// <summary>
        /// Gets or sets if the SKU supports scale out/in then the capacity integer
        /// should be included. If scale out/in is not possible for the resource this
        /// may be omitted.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "capacity")]
        public int? Capacity {get; set; }
    }
}