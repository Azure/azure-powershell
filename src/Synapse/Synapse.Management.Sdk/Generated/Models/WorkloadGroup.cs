// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Synapse.Models
{
    using System.Linq;

    /// <summary>
    /// Workload group operations for a sql pool
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class WorkloadGroup : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the WorkloadGroup class.
        /// </summary>
        public WorkloadGroup()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the WorkloadGroup class.
        /// </summary>

        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </param>

        /// <param name="name">The name of the resource
        /// </param>

        /// <param name="type">The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or
        /// &#34;Microsoft.Storage/storageAccounts&#34;
        /// </param>

        /// <param name="minResourcePercent">The workload group minimum percentage resource.
        /// </param>

        /// <param name="maxResourcePercent">The workload group cap percentage resource.
        /// </param>

        /// <param name="minResourcePercentPerRequest">The workload group request minimum grant percentage.
        /// </param>

        /// <param name="maxResourcePercentPerRequest">The workload group request maximum grant percentage.
        /// </param>

        /// <param name="importance">The workload group importance level.
        /// </param>

        /// <param name="queryExecutionTimeout">The workload group query execution timeout.
        /// </param>
        public WorkloadGroup(string id = default(string), string name = default(string), string type = default(string), int? minResourcePercent = default(int?), int? maxResourcePercent = default(int?), double? minResourcePercentPerRequest = default(double?), double? maxResourcePercentPerRequest = default(double?), string importance = default(string), int? queryExecutionTimeout = default(int?))

        : base(id, name, type)
        {
            this.MinResourcePercent = minResourcePercent;
            this.MaxResourcePercent = maxResourcePercent;
            this.MinResourcePercentPerRequest = minResourcePercentPerRequest;
            this.MaxResourcePercentPerRequest = maxResourcePercentPerRequest;
            this.Importance = importance;
            this.QueryExecutionTimeout = queryExecutionTimeout;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the workload group minimum percentage resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.minResourcePercent")]
        public int? MinResourcePercent {get; set; }

        /// <summary>
        /// Gets or sets the workload group cap percentage resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.maxResourcePercent")]
        public int? MaxResourcePercent {get; set; }

        /// <summary>
        /// Gets or sets the workload group request minimum grant percentage.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.minResourcePercentPerRequest")]
        public double? MinResourcePercentPerRequest {get; set; }

        /// <summary>
        /// Gets or sets the workload group request maximum grant percentage.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.maxResourcePercentPerRequest")]
        public double? MaxResourcePercentPerRequest {get; set; }

        /// <summary>
        /// Gets or sets the workload group importance level.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.importance")]
        public string Importance {get; set; }

        /// <summary>
        /// Gets or sets the workload group query execution timeout.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.queryExecutionTimeout")]
        public int? QueryExecutionTimeout {get; set; }
    }
}