// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Synapse.Models
{
    using System.Linq;

    /// <summary>
    /// Represents the properties of a Sql pool replication link.
    /// </summary>
    public partial class ReplicationLinkProperties
    {
        /// <summary>
        /// Initializes a new instance of the ReplicationLinkProperties class.
        /// </summary>
        public ReplicationLinkProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ReplicationLinkProperties class.
        /// </summary>

        /// <param name="isTerminationAllowed">Legacy value indicating whether termination is allowed.  Currently always
        /// returns true.
        /// </param>

        /// <param name="replicationMode">Replication mode of this replication link.
        /// </param>

        /// <param name="partnerServer">The name of the workspace hosting the partner Sql pool.
        /// </param>

        /// <param name="partnerDatabase">The name of the partner Sql pool.
        /// </param>

        /// <param name="partnerLocation">The Azure Region of the partner Sql pool.
        /// </param>

        /// <param name="role">The role of the Sql pool in the replication link.
        /// Possible values include: &#39;Primary&#39;, &#39;Secondary&#39;, &#39;NonReadableSecondary&#39;,
        /// &#39;Source&#39;, &#39;Copy&#39;</param>

        /// <param name="partnerRole">The role of the partner Sql pool in the replication link.
        /// Possible values include: &#39;Primary&#39;, &#39;Secondary&#39;, &#39;NonReadableSecondary&#39;,
        /// &#39;Source&#39;, &#39;Copy&#39;</param>

        /// <param name="startTime">The start time for the replication link.
        /// </param>

        /// <param name="percentComplete">The percentage of seeding complete for the replication link.
        /// </param>

        /// <param name="replicationState">The replication state for the replication link.
        /// Possible values include: &#39;PENDING&#39;, &#39;SEEDING&#39;, &#39;CATCH_UP&#39;, &#39;SUSPENDED&#39;</param>
        public ReplicationLinkProperties(bool? isTerminationAllowed = default(bool?), string replicationMode = default(string), string partnerServer = default(string), string partnerDatabase = default(string), string partnerLocation = default(string), ReplicationRole? role = default(ReplicationRole?), ReplicationRole? partnerRole = default(ReplicationRole?), System.DateTime? startTime = default(System.DateTime?), int? percentComplete = default(int?), string replicationState = default(string))

        {
            this.IsTerminationAllowed = isTerminationAllowed;
            this.ReplicationMode = replicationMode;
            this.PartnerServer = partnerServer;
            this.PartnerDatabase = partnerDatabase;
            this.PartnerLocation = partnerLocation;
            this.Role = role;
            this.PartnerRole = partnerRole;
            this.StartTime = startTime;
            this.PercentComplete = percentComplete;
            this.ReplicationState = replicationState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets legacy value indicating whether termination is allowed.  Currently
        /// always returns true.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "isTerminationAllowed")]
        public bool? IsTerminationAllowed {get; private set; }

        /// <summary>
        /// Gets replication mode of this replication link.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "replicationMode")]
        public string ReplicationMode {get; private set; }

        /// <summary>
        /// Gets the name of the workspace hosting the partner Sql pool.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "partnerServer")]
        public string PartnerServer {get; private set; }

        /// <summary>
        /// Gets the name of the partner Sql pool.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "partnerDatabase")]
        public string PartnerDatabase {get; private set; }

        /// <summary>
        /// Gets the Azure Region of the partner Sql pool.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "partnerLocation")]
        public string PartnerLocation {get; private set; }

        /// <summary>
        /// Gets the role of the Sql pool in the replication link. Possible values include: &#39;Primary&#39;, &#39;Secondary&#39;, &#39;NonReadableSecondary&#39;, &#39;Source&#39;, &#39;Copy&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "role")]
        public ReplicationRole? Role {get; private set; }

        /// <summary>
        /// Gets the role of the partner Sql pool in the replication link. Possible values include: &#39;Primary&#39;, &#39;Secondary&#39;, &#39;NonReadableSecondary&#39;, &#39;Source&#39;, &#39;Copy&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "partnerRole")]
        public ReplicationRole? PartnerRole {get; private set; }

        /// <summary>
        /// Gets the start time for the replication link.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "startTime")]
        public System.DateTime? StartTime {get; private set; }

        /// <summary>
        /// Gets the percentage of seeding complete for the replication link.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "percentComplete")]
        public int? PercentComplete {get; private set; }

        /// <summary>
        /// Gets the replication state for the replication link. Possible values include: &#39;PENDING&#39;, &#39;SEEDING&#39;, &#39;CATCH_UP&#39;, &#39;SUSPENDED&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "replicationState")]
        public string ReplicationState {get; private set; }
    }
}