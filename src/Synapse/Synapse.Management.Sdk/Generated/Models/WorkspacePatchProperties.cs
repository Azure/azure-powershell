// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Synapse.Models
{
    using System.Linq;

    /// <summary>
    /// Workspace patch properties
    /// </summary>
    public partial class WorkspacePatchProperties
    {
        /// <summary>
        /// Initializes a new instance of the WorkspacePatchProperties class.
        /// </summary>
        public WorkspacePatchProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the WorkspacePatchProperties class.
        /// </summary>

        /// <param name="sqlAdministratorLoginPassword">SQL administrator login password
        /// </param>

        /// <param name="managedVirtualNetworkSettings">Managed Virtual Network Settings
        /// </param>

        /// <param name="workspaceRepositoryConfiguration">Git integration settings
        /// </param>

        /// <param name="purviewConfiguration">Purview Configuration
        /// </param>

        /// <param name="provisioningState">Resource provisioning state
        /// </param>

        /// <param name="encryption">The encryption details of the workspace
        /// </param>

        /// <param name="publicNetworkAccess">Enable or Disable public network access to workspace
        /// Possible values include: &#39;Enabled&#39;, &#39;Disabled&#39;</param>
        public WorkspacePatchProperties(string sqlAdministratorLoginPassword = default(string), ManagedVirtualNetworkSettings managedVirtualNetworkSettings = default(ManagedVirtualNetworkSettings), WorkspaceRepositoryConfiguration workspaceRepositoryConfiguration = default(WorkspaceRepositoryConfiguration), PurviewConfiguration purviewConfiguration = default(PurviewConfiguration), string provisioningState = default(string), EncryptionDetails encryption = default(EncryptionDetails), string publicNetworkAccess = default(string))

        {
            this.SqlAdministratorLoginPassword = sqlAdministratorLoginPassword;
            this.ManagedVirtualNetworkSettings = managedVirtualNetworkSettings;
            this.WorkspaceRepositoryConfiguration = workspaceRepositoryConfiguration;
            this.PurviewConfiguration = purviewConfiguration;
            this.ProvisioningState = provisioningState;
            this.Encryption = encryption;
            this.PublicNetworkAccess = publicNetworkAccess;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets sQL administrator login password
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sqlAdministratorLoginPassword")]
        public string SqlAdministratorLoginPassword {get; set; }

        /// <summary>
        /// Gets or sets managed Virtual Network Settings
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "managedVirtualNetworkSettings")]
        public ManagedVirtualNetworkSettings ManagedVirtualNetworkSettings {get; set; }

        /// <summary>
        /// Gets or sets git integration settings
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "workspaceRepositoryConfiguration")]
        public WorkspaceRepositoryConfiguration WorkspaceRepositoryConfiguration {get; set; }

        /// <summary>
        /// Gets or sets purview Configuration
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "purviewConfiguration")]
        public PurviewConfiguration PurviewConfiguration {get; set; }

        /// <summary>
        /// Gets resource provisioning state
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState {get; private set; }

        /// <summary>
        /// Gets or sets the encryption details of the workspace
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "encryption")]
        public EncryptionDetails Encryption {get; set; }

        /// <summary>
        /// Gets or sets enable or Disable public network access to workspace Possible values include: &#39;Enabled&#39;, &#39;Disabled&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "publicNetworkAccess")]
        public string PublicNetworkAccess {get; set; }
    }
}