// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Synapse.Models
{
    using System.Linq;

    /// <summary>
    /// A workspace key
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class Key : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the Key class.
        /// </summary>
        public Key()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Key class.
        /// </summary>

        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </param>

        /// <param name="name">The name of the resource
        /// </param>

        /// <param name="type">The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or
        /// &#34;Microsoft.Storage/storageAccounts&#34;
        /// </param>

        /// <param name="isActiveCmk">Used to activate the workspace after a customer managed key is provided.
        /// </param>

        /// <param name="keyVaultUrl">The Key Vault Url of the workspace key.
        /// </param>
        public Key(string id = default(string), string name = default(string), string type = default(string), bool? isActiveCmk = default(bool?), string keyVaultUrl = default(string))

        : base(id, name, type)
        {
            this.IsActiveCMK = isActiveCmk;
            this.KeyVaultUrl = keyVaultUrl;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets used to activate the workspace after a customer managed key is
        /// provided.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.isActiveCMK")]
        public bool? IsActiveCMK {get; set; }

        /// <summary>
        /// Gets or sets the Key Vault Url of the workspace key.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.keyVaultUrl")]
        public string KeyVaultUrl {get; set; }
    }
}