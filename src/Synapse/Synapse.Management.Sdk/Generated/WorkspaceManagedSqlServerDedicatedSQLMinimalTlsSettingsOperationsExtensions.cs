// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.Synapse
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for WorkspaceManagedSqlServerDedicatedSqlMinimalTlsSettingsOperations
    /// </summary>
    public static partial class WorkspaceManagedSqlServerDedicatedSqlMinimalTlsSettingsOperationsExtensions
    {
        /// <summary>
        /// Update workspace managed sql server&#39;s minimal tls settings.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='workspaceName'>
        /// The name of the workspace.
        /// </param>
        public static DedicatedSQLminimalTlsSettings Update(this IWorkspaceManagedSqlServerDedicatedSqlMinimalTlsSettingsOperations operations, string resourceGroupName, string workspaceName, DedicatedSQLminimalTlsSettings parameters)
        {
                return ((IWorkspaceManagedSqlServerDedicatedSqlMinimalTlsSettingsOperations)operations).UpdateAsync(resourceGroupName, workspaceName, parameters).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Update workspace managed sql server&#39;s minimal tls settings.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='workspaceName'>
        /// The name of the workspace.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<DedicatedSQLminimalTlsSettings> UpdateAsync(this IWorkspaceManagedSqlServerDedicatedSqlMinimalTlsSettingsOperations operations, string resourceGroupName, string workspaceName, DedicatedSQLminimalTlsSettings parameters, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.UpdateWithHttpMessagesAsync(resourceGroupName, workspaceName, parameters, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Get workspace managed sql server&#39;s minimal tls settings.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='workspaceName'>
        /// The name of the workspace.
        /// </param>
        /// <param name='dedicatedSQLminimalTlsSettingsName'>
        /// The name of the dedicated sql minimal tls settings.
        /// </param>
        public static DedicatedSQLminimalTlsSettings Get(this IWorkspaceManagedSqlServerDedicatedSqlMinimalTlsSettingsOperations operations, string resourceGroupName, string workspaceName, string dedicatedSQLminimalTlsSettingsName)
        {
                return ((IWorkspaceManagedSqlServerDedicatedSqlMinimalTlsSettingsOperations)operations).GetAsync(resourceGroupName, workspaceName, dedicatedSQLminimalTlsSettingsName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Get workspace managed sql server&#39;s minimal tls settings.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='workspaceName'>
        /// The name of the workspace.
        /// </param>
        /// <param name='dedicatedSQLminimalTlsSettingsName'>
        /// The name of the dedicated sql minimal tls settings.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<DedicatedSQLminimalTlsSettings> GetAsync(this IWorkspaceManagedSqlServerDedicatedSqlMinimalTlsSettingsOperations operations, string resourceGroupName, string workspaceName, string dedicatedSQLminimalTlsSettingsName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, workspaceName, dedicatedSQLminimalTlsSettingsName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// List workspace managed sql server&#39;s minimal tls settings.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='workspaceName'>
        /// The name of the workspace.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<DedicatedSQLminimalTlsSettings> List(this IWorkspaceManagedSqlServerDedicatedSqlMinimalTlsSettingsOperations operations, string resourceGroupName, string workspaceName)
        {
                return ((IWorkspaceManagedSqlServerDedicatedSqlMinimalTlsSettingsOperations)operations).ListAsync(resourceGroupName, workspaceName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// List workspace managed sql server&#39;s minimal tls settings.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='workspaceName'>
        /// The name of the workspace.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<DedicatedSQLminimalTlsSettings>> ListAsync(this IWorkspaceManagedSqlServerDedicatedSqlMinimalTlsSettingsOperations operations, string resourceGroupName, string workspaceName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListWithHttpMessagesAsync(resourceGroupName, workspaceName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Update workspace managed sql server&#39;s minimal tls settings.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='workspaceName'>
        /// The name of the workspace.
        /// </param>
        public static DedicatedSQLminimalTlsSettings BeginUpdate(this IWorkspaceManagedSqlServerDedicatedSqlMinimalTlsSettingsOperations operations, string resourceGroupName, string workspaceName, DedicatedSQLminimalTlsSettings parameters)
        {
                return ((IWorkspaceManagedSqlServerDedicatedSqlMinimalTlsSettingsOperations)operations).BeginUpdateAsync(resourceGroupName, workspaceName, parameters).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Update workspace managed sql server&#39;s minimal tls settings.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='workspaceName'>
        /// The name of the workspace.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<DedicatedSQLminimalTlsSettings> BeginUpdateAsync(this IWorkspaceManagedSqlServerDedicatedSqlMinimalTlsSettingsOperations operations, string resourceGroupName, string workspaceName, DedicatedSQLminimalTlsSettings parameters, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.BeginUpdateWithHttpMessagesAsync(resourceGroupName, workspaceName, parameters, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// List workspace managed sql server&#39;s minimal tls settings.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<DedicatedSQLminimalTlsSettings> ListNext(this IWorkspaceManagedSqlServerDedicatedSqlMinimalTlsSettingsOperations operations, string nextPageLink)
        {
                return ((IWorkspaceManagedSqlServerDedicatedSqlMinimalTlsSettingsOperations)operations).ListNextAsync(nextPageLink).GetAwaiter().GetResult();
        }

        /// <summary>
        /// List workspace managed sql server&#39;s minimal tls settings.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<DedicatedSQLminimalTlsSettings>> ListNextAsync(this IWorkspaceManagedSqlServerDedicatedSqlMinimalTlsSettingsOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
    }
}
