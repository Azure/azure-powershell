// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.Synapse
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for KustoPoolChildResourceOperations
    /// </summary>
    public static partial class KustoPoolChildResourceOperationsExtensions
    {
        /// <summary>
        /// Checks that the Kusto Pool child resource name is valid and is not already
        /// in use.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='workspaceName'>
        /// The name of the workspace.
        /// </param>
        /// <param name='kustoPoolName'>
        /// The name of the Kusto pool.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        public static CheckNameResult CheckNameAvailability(this IKustoPoolChildResourceOperations operations, string workspaceName, string kustoPoolName, string resourceGroupName, DatabaseCheckNameRequest resourceName)
        {
                return ((IKustoPoolChildResourceOperations)operations).CheckNameAvailabilityAsync(workspaceName, kustoPoolName, resourceGroupName, resourceName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Checks that the Kusto Pool child resource name is valid and is not already
        /// in use.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='workspaceName'>
        /// The name of the workspace.
        /// </param>
        /// <param name='kustoPoolName'>
        /// The name of the Kusto pool.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<CheckNameResult> CheckNameAvailabilityAsync(this IKustoPoolChildResourceOperations operations, string workspaceName, string kustoPoolName, string resourceGroupName, DatabaseCheckNameRequest resourceName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.CheckNameAvailabilityWithHttpMessagesAsync(workspaceName, kustoPoolName, resourceGroupName, resourceName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
    }
}
