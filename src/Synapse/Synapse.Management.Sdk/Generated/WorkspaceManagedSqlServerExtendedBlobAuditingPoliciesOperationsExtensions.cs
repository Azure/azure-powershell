// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.Synapse
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for WorkspaceManagedSqlServerExtendedBlobAuditingPoliciesOperations
    /// </summary>
    public static partial class WorkspaceManagedSqlServerExtendedBlobAuditingPoliciesOperationsExtensions
    {
        /// <summary>
        /// Get a workspace SQL server&#39;s extended blob auditing policy.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='workspaceName'>
        /// The name of the workspace.
        /// </param>
        public static ExtendedServerBlobAuditingPolicy Get(this IWorkspaceManagedSqlServerExtendedBlobAuditingPoliciesOperations operations, string resourceGroupName, string workspaceName)
        {
                return ((IWorkspaceManagedSqlServerExtendedBlobAuditingPoliciesOperations)operations).GetAsync(resourceGroupName, workspaceName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Get a workspace SQL server&#39;s extended blob auditing policy.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='workspaceName'>
        /// The name of the workspace.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<ExtendedServerBlobAuditingPolicy> GetAsync(this IWorkspaceManagedSqlServerExtendedBlobAuditingPoliciesOperations operations, string resourceGroupName, string workspaceName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, workspaceName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Create or Update a workspace managed sql server&#39;s extended blob auditing
        /// policy.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='workspaceName'>
        /// The name of the workspace.
        /// </param>
        public static ExtendedServerBlobAuditingPolicy CreateOrUpdate(this IWorkspaceManagedSqlServerExtendedBlobAuditingPoliciesOperations operations, string resourceGroupName, string workspaceName, ExtendedServerBlobAuditingPolicy parameters)
        {
                return ((IWorkspaceManagedSqlServerExtendedBlobAuditingPoliciesOperations)operations).CreateOrUpdateAsync(resourceGroupName, workspaceName, parameters).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Create or Update a workspace managed sql server&#39;s extended blob auditing
        /// policy.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='workspaceName'>
        /// The name of the workspace.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<ExtendedServerBlobAuditingPolicy> CreateOrUpdateAsync(this IWorkspaceManagedSqlServerExtendedBlobAuditingPoliciesOperations operations, string resourceGroupName, string workspaceName, ExtendedServerBlobAuditingPolicy parameters, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(resourceGroupName, workspaceName, parameters, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// List workspace managed sql server&#39;s extended blob auditing policies.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='workspaceName'>
        /// The name of the workspace.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<ExtendedServerBlobAuditingPolicy> ListByWorkspace(this IWorkspaceManagedSqlServerExtendedBlobAuditingPoliciesOperations operations, string resourceGroupName, string workspaceName)
        {
                return ((IWorkspaceManagedSqlServerExtendedBlobAuditingPoliciesOperations)operations).ListByWorkspaceAsync(resourceGroupName, workspaceName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// List workspace managed sql server&#39;s extended blob auditing policies.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='workspaceName'>
        /// The name of the workspace.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<ExtendedServerBlobAuditingPolicy>> ListByWorkspaceAsync(this IWorkspaceManagedSqlServerExtendedBlobAuditingPoliciesOperations operations, string resourceGroupName, string workspaceName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListByWorkspaceWithHttpMessagesAsync(resourceGroupName, workspaceName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Create or Update a workspace managed sql server&#39;s extended blob auditing
        /// policy.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='workspaceName'>
        /// The name of the workspace.
        /// </param>
        public static ExtendedServerBlobAuditingPolicy BeginCreateOrUpdate(this IWorkspaceManagedSqlServerExtendedBlobAuditingPoliciesOperations operations, string resourceGroupName, string workspaceName, ExtendedServerBlobAuditingPolicy parameters)
        {
                return ((IWorkspaceManagedSqlServerExtendedBlobAuditingPoliciesOperations)operations).BeginCreateOrUpdateAsync(resourceGroupName, workspaceName, parameters).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Create or Update a workspace managed sql server&#39;s extended blob auditing
        /// policy.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='workspaceName'>
        /// The name of the workspace.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<ExtendedServerBlobAuditingPolicy> BeginCreateOrUpdateAsync(this IWorkspaceManagedSqlServerExtendedBlobAuditingPoliciesOperations operations, string resourceGroupName, string workspaceName, ExtendedServerBlobAuditingPolicy parameters, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.BeginCreateOrUpdateWithHttpMessagesAsync(resourceGroupName, workspaceName, parameters, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// List workspace managed sql server&#39;s extended blob auditing policies.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<ExtendedServerBlobAuditingPolicy> ListByWorkspaceNext(this IWorkspaceManagedSqlServerExtendedBlobAuditingPoliciesOperations operations, string nextPageLink)
        {
                return ((IWorkspaceManagedSqlServerExtendedBlobAuditingPoliciesOperations)operations).ListByWorkspaceNextAsync(nextPageLink).GetAwaiter().GetResult();
        }

        /// <summary>
        /// List workspace managed sql server&#39;s extended blob auditing policies.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<ExtendedServerBlobAuditingPolicy>> ListByWorkspaceNextAsync(this IWorkspaceManagedSqlServerExtendedBlobAuditingPoliciesOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListByWorkspaceNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
    }
}
