// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.Synapse
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for WorkspaceManagedIdentitySqlControlSettingsOperations
    /// </summary>
    public static partial class WorkspaceManagedIdentitySqlControlSettingsOperationsExtensions
    {
        /// <summary>
        /// Get Managed Identity Sql Control Settings
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='workspaceName'>
        /// The name of the workspace.
        /// </param>
        public static ManagedIdentitySqlControlSettingsModel Get(this IWorkspaceManagedIdentitySqlControlSettingsOperations operations, string resourceGroupName, string workspaceName)
        {
                return ((IWorkspaceManagedIdentitySqlControlSettingsOperations)operations).GetAsync(resourceGroupName, workspaceName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Get Managed Identity Sql Control Settings
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='workspaceName'>
        /// The name of the workspace.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<ManagedIdentitySqlControlSettingsModel> GetAsync(this IWorkspaceManagedIdentitySqlControlSettingsOperations operations, string resourceGroupName, string workspaceName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, workspaceName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Create or update Managed Identity Sql Control Settings
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='workspaceName'>
        /// The name of the workspace.
        /// </param>
        public static ManagedIdentitySqlControlSettingsModel CreateOrUpdate(this IWorkspaceManagedIdentitySqlControlSettingsOperations operations, string resourceGroupName, string workspaceName, ManagedIdentitySqlControlSettingsModel managedIdentitySqlControlSettings)
        {
                return ((IWorkspaceManagedIdentitySqlControlSettingsOperations)operations).CreateOrUpdateAsync(resourceGroupName, workspaceName, managedIdentitySqlControlSettings).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Create or update Managed Identity Sql Control Settings
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='workspaceName'>
        /// The name of the workspace.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<ManagedIdentitySqlControlSettingsModel> CreateOrUpdateAsync(this IWorkspaceManagedIdentitySqlControlSettingsOperations operations, string resourceGroupName, string workspaceName, ManagedIdentitySqlControlSettingsModel managedIdentitySqlControlSettings, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(resourceGroupName, workspaceName, managedIdentitySqlControlSettings, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Create or update Managed Identity Sql Control Settings
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='workspaceName'>
        /// The name of the workspace.
        /// </param>
        public static ManagedIdentitySqlControlSettingsModel BeginCreateOrUpdate(this IWorkspaceManagedIdentitySqlControlSettingsOperations operations, string resourceGroupName, string workspaceName, ManagedIdentitySqlControlSettingsModel managedIdentitySqlControlSettings)
        {
                return ((IWorkspaceManagedIdentitySqlControlSettingsOperations)operations).BeginCreateOrUpdateAsync(resourceGroupName, workspaceName, managedIdentitySqlControlSettings).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Create or update Managed Identity Sql Control Settings
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='workspaceName'>
        /// The name of the workspace.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<ManagedIdentitySqlControlSettingsModel> BeginCreateOrUpdateAsync(this IWorkspaceManagedIdentitySqlControlSettingsOperations operations, string resourceGroupName, string workspaceName, ManagedIdentitySqlControlSettingsModel managedIdentitySqlControlSettings, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.BeginCreateOrUpdateWithHttpMessagesAsync(resourceGroupName, workspaceName, managedIdentitySqlControlSettings, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
    }
}
