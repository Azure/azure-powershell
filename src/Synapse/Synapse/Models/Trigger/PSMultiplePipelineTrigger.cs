// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Commands.Synapse.Models
{
    using global::Azure.Analytics.Synapse.Artifacts.Models;
    using Microsoft.WindowsAzure.Commands.Utilities.Common;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Base class for all triggers that support one to many model for trigger
    /// to pipeline.
    /// </summary>

    [Newtonsoft.Json.JsonObject("MultiplePipelineTrigger")]
    public partial class PSMultiplePipelineTrigger : PSTrigger
    {
        /// <summary>
        /// Initializes a new instance of the PSMultiplePipelineTrigger class.
        /// </summary>
        public PSMultiplePipelineTrigger()
        {
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets pipelines that need to be started.
        /// </summary>
        [JsonProperty(PropertyName = "pipelines")]
        public IList<TriggerPipelineReference> Pipelines { get; set; }

        public override Trigger ToSdkObject()
        {
            var trigger = new MultiplePipelineTrigger();
            trigger.Description = this.Description;
            this.Pipelines?.ForEach(item => trigger.Pipelines.Add(item));
            this.Annotations?.ForEach(item => trigger.Annotations.Add(item));
            return trigger;
        }
    }
}
