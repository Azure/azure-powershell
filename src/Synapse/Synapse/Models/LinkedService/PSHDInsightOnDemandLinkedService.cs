// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Commands.Synapse.Models
{
    using global::Azure.Analytics.Synapse.Artifacts.Models;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// HDInsight ondemand linked service.
    /// </summary>
    [Newtonsoft.Json.JsonObject("HDInsightOnDemand")]
    [Rest.Serialization.JsonTransformation]
    public partial class PSHDInsightOnDemandLinkedService : PSLinkedService
    {
        /// <summary>
        /// Initializes a new instance of the PSHDInsightOnDemandLinkedService
        /// class.
        /// </summary>
        public PSHDInsightOnDemandLinkedService()
        {
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets number of worker/data nodes in the cluster. Suggestion
        /// value: 4. Type: string (or Expression with resultType string).
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.clusterSize")]
        public object ClusterSize { get; set; }

        /// <summary>
        /// Gets or sets the allowed idle time for the on-demand HDInsight
        /// cluster. Specifies how long the on-demand HDInsight cluster stays
        /// alive after completion of an activity run if there are no other
        /// active jobs in the cluster. The minimum value is 5 mins. Type:
        /// string (or Expression with resultType string).
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.timeToLive")]
        public object TimeToLive { get; set; }

        /// <summary>
        /// Gets or sets version of the HDInsight cluster.  Type: string (or
        /// Expression with resultType string).
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.version")]
        public object Version { get; set; }

        /// <summary>
        /// Gets or sets azure Storage linked service to be used by the
        /// on-demand cluster for storing and processing data.
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.linkedServiceName")]
        public LinkedServiceReference LinkedServiceName { get; set; }

        /// <summary>
        /// Gets or sets the customer’s subscription to host the cluster. Type:
        /// string (or Expression with resultType string).
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.hostSubscriptionId")]
        public object HostSubscriptionId { get; set; }

        /// <summary>
        /// Gets or sets the service principal id for the hostSubscriptionId.
        /// Type: string (or Expression with resultType string).
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.servicePrincipalId")]
        public object ServicePrincipalId { get; set; }

        /// <summary>
        /// Gets or sets the key for the service principal id.
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.servicePrincipalKey")]
        public SecretBase ServicePrincipalKey { get; set; }

        /// <summary>
        /// Gets or sets the Tenant id/name to which the service principal
        /// belongs. Type: string (or Expression with resultType string).
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.tenant")]
        public object Tenant { get; set; }

        /// <summary>
        /// Gets or sets the resource group where the cluster belongs. Type:
        /// string (or Expression with resultType string).
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.clusterResourceGroup")]
        public object ClusterResourceGroup { get; set; }

        /// <summary>
        /// Gets or sets the prefix of cluster name, postfix will be distinct
        /// with timestamp. Type: string (or Expression with resultType
        /// string).
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.clusterNamePrefix")]
        public object ClusterNamePrefix { get; set; }

        /// <summary>
        /// Gets or sets the username to access the cluster. Type: string (or
        /// Expression with resultType string).
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.clusterUserName")]
        public object ClusterUserName { get; set; }

        /// <summary>
        /// Gets or sets the password to access the cluster.
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.clusterPassword")]
        public SecretBase ClusterPassword { get; set; }

        /// <summary>
        /// Gets or sets the username to SSH remotely connect to cluster’s node
        /// (for Linux). Type: string (or Expression with resultType string).
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.clusterSshUserName")]
        public object ClusterSshUserName { get; set; }

        /// <summary>
        /// Gets or sets the password to SSH remotely connect cluster’s node
        /// (for Linux).
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.clusterSshPassword")]
        public SecretBase ClusterSshPassword { get; set; }

        /// <summary>
        /// Gets or sets specifies additional storage accounts for the
        /// HDInsight linked service so that the Data Factory service can
        /// register them on your behalf.
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.additionalLinkedServiceNames")]
        public IList<LinkedServiceReference> AdditionalLinkedServiceNames { get; set; }

        /// <summary>
        /// Gets or sets the name of Azure SQL linked service that point to the
        /// HCatalog database. The on-demand HDInsight cluster is created by
        /// using the Azure SQL database as the metastore.
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.hcatalogLinkedServiceName")]
        public LinkedServiceReference HcatalogLinkedServiceName { get; set; }

        /// <summary>
        /// Gets or sets the cluster type. Type: string (or Expression with
        /// resultType string).
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.clusterType")]
        public object ClusterType { get; set; }

        /// <summary>
        /// Gets or sets the version of spark if the cluster type is 'spark'.
        /// Type: string (or Expression with resultType string).
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.sparkVersion")]
        public object SparkVersion { get; set; }

        /// <summary>
        /// Gets or sets specifies the core configuration parameters (as in
        /// core-site.xml) for the HDInsight cluster to be created.
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.coreConfiguration")]
        public object CoreConfiguration { get; set; }

        /// <summary>
        /// Gets or sets specifies the HBase configuration parameters
        /// (hbase-site.xml) for the HDInsight cluster.
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.hBaseConfiguration")]
        public object HBaseConfiguration { get; set; }

        /// <summary>
        /// Gets or sets specifies the HDFS configuration parameters
        /// (hdfs-site.xml) for the HDInsight cluster.
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.hdfsConfiguration")]
        public object HdfsConfiguration { get; set; }

        /// <summary>
        /// Gets or sets specifies the hive configuration parameters
        /// (hive-site.xml) for the HDInsight cluster.
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.hiveConfiguration")]
        public object HiveConfiguration { get; set; }

        /// <summary>
        /// Gets or sets specifies the MapReduce configuration parameters
        /// (mapred-site.xml) for the HDInsight cluster.
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.mapReduceConfiguration")]
        public object MapReduceConfiguration { get; set; }

        /// <summary>
        /// Gets or sets specifies the Oozie configuration parameters
        /// (oozie-site.xml) for the HDInsight cluster.
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.oozieConfiguration")]
        public object OozieConfiguration { get; set; }

        /// <summary>
        /// Gets or sets specifies the Storm configuration parameters
        /// (storm-site.xml) for the HDInsight cluster.
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.stormConfiguration")]
        public object StormConfiguration { get; set; }

        /// <summary>
        /// Gets or sets specifies the Yarn configuration parameters
        /// (yarn-site.xml) for the HDInsight cluster.
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.yarnConfiguration")]
        public object YarnConfiguration { get; set; }

        /// <summary>
        /// Gets or sets the encrypted credential used for authentication.
        /// Credentials are encrypted using the integration runtime credential
        /// manager. Type: string (or Expression with resultType string).
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.encryptedCredential")]
        public object EncryptedCredential { get; set; }

        /// <summary>
        /// Gets or sets specifies the size of the head node for the HDInsight
        /// cluster.
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.headNodeSize")]
        public object HeadNodeSize { get; set; }

        /// <summary>
        /// Gets or sets specifies the size of the data node for the HDInsight
        /// cluster.
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.dataNodeSize")]
        public object DataNodeSize { get; set; }

        /// <summary>
        /// Gets or sets specifies the size of the Zoo Keeper node for the
        /// HDInsight cluster.
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.zookeeperNodeSize")]
        public object ZookeeperNodeSize { get; set; }

        /// <summary>
        /// Gets or sets custom script actions to run on HDI ondemand cluster
        /// once it's up. Please refer to
        /// https://docs.microsoft.com/en-us/azure/hdinsight/hdinsight-hadoop-customize-cluster-linux?toc=%2Fen-us%2Fazure%2Fhdinsight%2Fr-server%2FTOC.json&amp;amp;bc=%2Fen-us%2Fazure%2Fbread%2Ftoc.json#understanding-script-actions.
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.scriptActions")]
        public IList<ScriptAction> ScriptActions { get; set; }

        /// <summary>
        /// Gets or sets the ARM resource ID for the vNet to which the cluster
        /// should be joined after creation. Type: string (or Expression with
        /// resultType string).
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.virtualNetworkId")]
        public object VirtualNetworkId { get; set; }

        /// <summary>
        /// Gets or sets the ARM resource ID for the subnet in the vNet. If
        /// virtualNetworkId was specified, then this property is required.
        /// Type: string (or Expression with resultType string).
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.subnetName")]
        public object SubnetName { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
            if (ClusterSize == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ClusterSize");
            }
            if (TimeToLive == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "TimeToLive");
            }
            if (Version == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Version");
            }
            if (LinkedServiceName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "LinkedServiceName");
            }
            if (HostSubscriptionId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "HostSubscriptionId");
            }
            if (Tenant == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Tenant");
            }
            if (ClusterResourceGroup == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ClusterResourceGroup");
            }
        }

        public override LinkedService ToSdkObject()
        {
            var linkedService = new HDInsightOnDemandLinkedService(this.ClusterSize, this.TimeToLive, this.Version, this.LinkedServiceName, this.HostSubscriptionId, this.Tenant, this.ClusterResourceGroup);
            linkedService.ServicePrincipalId = this.ServicePrincipalId;
            linkedService.ServicePrincipalKey = this.ServicePrincipalKey;
            linkedService.ClusterNamePrefix = this.ClusterNamePrefix;
            linkedService.ClusterUserName = this.ClusterUserName;
            linkedService.ClusterPassword = this.ClusterPassword;
            linkedService.ClusterSshUserName = this.ClusterSshUserName;
            linkedService.ClusterSshPassword = this.ClusterSshPassword;
            foreach (var item in this.AdditionalLinkedServiceNames)
            {
                linkedService.AdditionalLinkedServiceNames.Add(item);
            }
            linkedService.HcatalogLinkedServiceName = this.HcatalogLinkedServiceName;
            linkedService.ClusterType = this.ClusterType;
            linkedService.SparkVersion = this.SparkVersion;
            linkedService.CoreConfiguration = this.CoreConfiguration;
            linkedService.HBaseConfiguration = this.HBaseConfiguration;
            linkedService.HdfsConfiguration = this.HdfsConfiguration;
            linkedService.HiveConfiguration = this.HiveConfiguration;
            linkedService.MapReduceConfiguration = this.MapReduceConfiguration;
            linkedService.OozieConfiguration = this.OozieConfiguration;
            linkedService.StormConfiguration = this.StormConfiguration;
            linkedService.YarnConfiguration = this.YarnConfiguration;
            linkedService.EncryptedCredential = this.EncryptedCredential;
            linkedService.HeadNodeSize = this.HeadNodeSize;
            linkedService.DataNodeSize = this.DataNodeSize;
            linkedService.ZookeeperNodeSize = this.ZookeeperNodeSize;
            foreach (var item in this.ScriptActions)
            {
                linkedService.ScriptActions.Add(item);
            }
            linkedService.VirtualNetworkId = this.VirtualNetworkId;
            linkedService.SubnetName = this.SubnetName;
            linkedService.ConnectVia = this.ConnectVia?.ToSdkObject();
            linkedService.Description = this.Description;
            foreach (var item in this.Annotations)
            {
                linkedService.Annotations.Add(item);
            }
            IDictionary<string, PSParameterSpecification> pSParameters = this.Parameters;
            if (pSParameters != null)
            {
                foreach (var pSParameter in pSParameters)
                {
                    linkedService.Parameters.Add(pSParameter.Key, pSParameter.Value?.ToSdkObject());
                }
            }
            return linkedService;
        }
    }
}

