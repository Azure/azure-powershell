// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Commands.Synapse.Models
{
    using global::Azure.Analytics.Synapse.Artifacts.Models;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Linked service for CosmosDB (MongoDB API) data source.
    /// </summary>
    [Newtonsoft.Json.JsonObject("CosmosDbMongoDbApi")]
    [Rest.Serialization.JsonTransformation]
    public partial class PSCosmosDbMongoDbApiLinkedService : PSLinkedService
    {
        /// <summary>
        /// Initializes a new instance of the PSCosmosDbMongoDbApiLinkedService
        /// class.
        /// </summary>
        public PSCosmosDbMongoDbApiLinkedService()
        {
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the CosmosDB (MongoDB API) connection string. Type:
        /// string, SecureString or AzureKeyVaultSecretReference. Type: string,
        /// SecureString or AzureKeyVaultSecretReference.
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.connectionString")]
        public object ConnectionString { get; set; }

        /// <summary>
        /// Gets or sets the name of the CosmosDB (MongoDB API) database that
        /// you want to access. Type: string (or Expression with resultType
        /// string).
        /// </summary>
        [JsonProperty(PropertyName = "typeProperties.database")]
        public object Database { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
            if (ConnectionString == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ConnectionString");
            }
            if (Database == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Database");
            }
        }

        public override LinkedService ToSdkObject()
        {
            var linkedService = new CosmosDbMongoDbApiLinkedService(this.ConnectionString, this.Database);
            linkedService.ConnectVia = this.ConnectVia?.ToSdkObject();
            linkedService.Description = this.Description;
            return linkedService;
        }
    }
}

