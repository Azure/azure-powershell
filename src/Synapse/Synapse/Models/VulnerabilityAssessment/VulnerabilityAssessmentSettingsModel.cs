using Microsoft.Azure.Management.Synapse.Models;
using System;
using System.Linq;

namespace Microsoft.Azure.Commands.Synapse.Models
{
    public enum RecurringScansInterval
    {
        None,
        Weekly
    };

    public class VulnerabilityAssessmentSettingsModel
    {
        public VulnerabilityAssessmentSettingsModel(ServerVulnerabilityAssessment assessment, string resourceGroupName, string workspaceName)
        {
            var recurringScans = assessment.RecurringScans;
            if (recurringScans == null)
            {
                // This should never happen
                recurringScans = new VulnerabilityAssessmentRecurringScansProperties
                {
                    IsEnabled = false,
                    EmailSubscriptionAdmins = true,
                    Emails = null
                };
            }

            // Getting storage info from StorageContainerPath
            var storageAccountName = string.Empty;
            var storageBlobContainerName = string.Empty;
            if (!string.IsNullOrEmpty(assessment.StorageContainerPath))
            {
                // StorageContainerPath is in the format of : "https://va1storage.blob.core.windows.net/vulnerability-assessment"
                var storageAccountNamePart = assessment.StorageContainerPath.Split(new[] { "https://" }, StringSplitOptions.RemoveEmptyEntries)[0];
                if (!string.IsNullOrEmpty(storageAccountNamePart))
                {
                    storageAccountName = storageAccountNamePart.Split(new[] { "." }, StringSplitOptions.RemoveEmptyEntries)[0];
                }

                storageBlobContainerName = assessment.StorageContainerPath.Split(new[] { "/" }, StringSplitOptions.RemoveEmptyEntries).LastOrDefault();
            }

            this.ResourceGroupName = resourceGroupName;
            this.WorkspaceName = workspaceName;
            this.StorageAccountName = storageAccountName;
            this.ScanResultsContainerName = storageBlobContainerName;
            this.RecurringScansInterval = recurringScans.IsEnabled.Value
                ? RecurringScansInterval.Weekly
                : RecurringScansInterval.None;
            this.EmailAdmins = recurringScans.EmailSubscriptionAdmins.Value;
            this.NotificationEmail = recurringScans.Emails?.ToArray();
        }

        public string ResourceGroupName { get; set; }

        public string WorkspaceName { get; set; }

        public string StorageAccountName { get; internal set; }

        public string ScanResultsContainerName { get; internal set; }

        public RecurringScansInterval RecurringScansInterval { get; internal set; }

        public bool EmailAdmins { get; internal set; }

        public string[] NotificationEmail { get; internal set; }
    }
}
