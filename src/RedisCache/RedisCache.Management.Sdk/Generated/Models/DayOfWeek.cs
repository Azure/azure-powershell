// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.RedisCache.Models
{

    /// <summary>
    /// Defines values for DayOfWeek.
    /// </summary>


    [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
    public enum DayOfWeek
    {
        [System.Runtime.Serialization.EnumMember(Value = "Monday")]
        Monday,
        [System.Runtime.Serialization.EnumMember(Value = "Tuesday")]
        Tuesday,
        [System.Runtime.Serialization.EnumMember(Value = "Wednesday")]
        Wednesday,
        [System.Runtime.Serialization.EnumMember(Value = "Thursday")]
        Thursday,
        [System.Runtime.Serialization.EnumMember(Value = "Friday")]
        Friday,
        [System.Runtime.Serialization.EnumMember(Value = "Saturday")]
        Saturday,
        [System.Runtime.Serialization.EnumMember(Value = "Sunday")]
        Sunday,
        [System.Runtime.Serialization.EnumMember(Value = "Everyday")]
        Everyday,
        [System.Runtime.Serialization.EnumMember(Value = "Weekend")]
        Weekend
    }
    internal static class DayOfWeekEnumExtension
    {
        internal static string ToSerializedValue(this DayOfWeek? value)
        {
            return value == null ? null : ((DayOfWeek)value).ToSerializedValue();
        }
        internal static string ToSerializedValue(this DayOfWeek value)
        {
            switch( value )
            {
                case DayOfWeek.Monday:
                    return "Monday";
                case DayOfWeek.Tuesday:
                    return "Tuesday";
                case DayOfWeek.Wednesday:
                    return "Wednesday";
                case DayOfWeek.Thursday:
                    return "Thursday";
                case DayOfWeek.Friday:
                    return "Friday";
                case DayOfWeek.Saturday:
                    return "Saturday";
                case DayOfWeek.Sunday:
                    return "Sunday";
                case DayOfWeek.Everyday:
                    return "Everyday";
                case DayOfWeek.Weekend:
                    return "Weekend";
            }
            return null;
        }
        internal static DayOfWeek? ParseDayOfWeek(this string value)
        {
            switch( value )
            {
                case "Monday":
                    return DayOfWeek.Monday;
                case "Tuesday":
                    return DayOfWeek.Tuesday;
                case "Wednesday":
                    return DayOfWeek.Wednesday;
                case "Thursday":
                    return DayOfWeek.Thursday;
                case "Friday":
                    return DayOfWeek.Friday;
                case "Saturday":
                    return DayOfWeek.Saturday;
                case "Sunday":
                    return DayOfWeek.Sunday;
                case "Everyday":
                    return DayOfWeek.Everyday;
                case "Weekend":
                    return DayOfWeek.Weekend;
            }
            return null;
        }
    }
}