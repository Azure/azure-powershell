// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.RedisCache.Models
{
    using System.Linq;

    /// <summary>
    /// All properties of an access policy.
    /// </summary>
    public partial class RedisCacheAccessPolicyProperties
    {
        /// <summary>
        /// Initializes a new instance of the RedisCacheAccessPolicyProperties class.
        /// </summary>
        public RedisCacheAccessPolicyProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RedisCacheAccessPolicyProperties class.
        /// </summary>

        /// <param name="provisioningState">Provisioning state of access policy
        /// Possible values include: &#39;Updating&#39;, &#39;Succeeded&#39;, &#39;Deleting&#39;, &#39;Deleted&#39;,
        /// &#39;Canceled&#39;, &#39;Failed&#39;</param>

        /// <param name="type">Built-In or Custom access policy
        /// Possible values include: &#39;Custom&#39;, &#39;BuiltIn&#39;</param>

        /// <param name="permissions">Permissions for the access policy. Learn how to configure permissions at
        /// https://aka.ms/redis/AADPreRequisites
        /// </param>
        public RedisCacheAccessPolicyProperties(string permissions, string provisioningState = default(string), string type = default(string))

        {
            this.ProvisioningState = provisioningState;
            this.Type = type;
            this.Permissions = permissions;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets provisioning state of access policy Possible values include: &#39;Updating&#39;, &#39;Succeeded&#39;, &#39;Deleting&#39;, &#39;Deleted&#39;, &#39;Canceled&#39;, &#39;Failed&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState {get; private set; }

        /// <summary>
        /// Gets built-In or Custom access policy Possible values include: &#39;Custom&#39;, &#39;BuiltIn&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "type")]
        public string Type {get; private set; }

        /// <summary>
        /// Gets or sets permissions for the access policy. Learn how to configure
        /// permissions at https://aka.ms/redis/AADPreRequisites
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "permissions")]
        public string Permissions {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Permissions == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Permissions");
            }



        }
    }
}