// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.RedisCache.Models
{
    using System.Linq;

    /// <summary>
    /// Patch schedule entry for a Premium Redis Cache.
    /// </summary>
    public partial class ScheduleEntry
    {
        /// <summary>
        /// Initializes a new instance of the ScheduleEntry class.
        /// </summary>
        public ScheduleEntry()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ScheduleEntry class.
        /// </summary>

        /// <param name="dayOfWeek">Day of the week when a cache can be patched.
        /// Possible values include: 'Monday', 'Tuesday', 'Wednesday', 'Thursday',
        /// 'Friday', 'Saturday', 'Sunday', 'Everyday', 'Weekend'</param>

        /// <param name="startHourUtc">Start hour after which cache patching can start.
        /// </param>

        /// <param name="maintenanceWindow">ISO8601 timespan specifying how much time cache patching can take.
        /// </param>
        public ScheduleEntry(DayOfWeek dayOfWeek, int startHourUtc, System.TimeSpan? maintenanceWindow = default(System.TimeSpan?))

        {
            this.DayOfWeek = dayOfWeek;
            this.StartHourUtc = startHourUtc;
            this.MaintenanceWindow = maintenanceWindow;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets day of the week when a cache can be patched. Possible values include: &#39;Monday&#39;, &#39;Tuesday&#39;, &#39;Wednesday&#39;, &#39;Thursday&#39;, &#39;Friday&#39;, &#39;Saturday&#39;, &#39;Sunday&#39;, &#39;Everyday&#39;, &#39;Weekend&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "dayOfWeek")]
        public DayOfWeek DayOfWeek {get; set; }

        /// <summary>
        /// Gets or sets start hour after which cache patching can start.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "startHourUtc")]
        public int StartHourUtc {get; set; }

        /// <summary>
        /// Gets or sets iSO8601 timespan specifying how much time cache patching can
        /// take.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "maintenanceWindow")]
        public System.TimeSpan? MaintenanceWindow {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {

        }
    }
}