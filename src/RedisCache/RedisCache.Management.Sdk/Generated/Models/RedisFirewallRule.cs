// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.RedisCache.Models
{
    using System.Linq;

    /// <summary>
    /// A firewall rule on a redis cache has a name, and describes a contiguous
    /// range of IP addresses permitted to connect
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class RedisFirewallRule : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the RedisFirewallRule class.
        /// </summary>
        public RedisFirewallRule()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RedisFirewallRule class.
        /// </summary>

        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </param>

        /// <param name="name">The name of the resource
        /// </param>

        /// <param name="type">The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or
        /// &#34;Microsoft.Storage/storageAccounts&#34;
        /// </param>

        /// <param name="startIP">lowest IP address included in the range
        /// </param>

        /// <param name="endIP">highest IP address included in the range
        /// </param>
        public RedisFirewallRule(string startIP, string endIP, string id = default(string), string name = default(string), string type = default(string))

        : base(id, name, type)
        {
            this.StartIP = startIP;
            this.EndIP = endIP;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets lowest IP address included in the range
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.startIP")]
        public string StartIP {get; set; }

        /// <summary>
        /// Gets or sets highest IP address included in the range
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.endIP")]
        public string EndIP {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.StartIP == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "StartIP");
            }
            if (this.EndIP == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "EndIP");
            }


        }
    }
}