// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Dns.Models
{
    using System.Linq;

    /// <summary>
    /// Represents the DNSSEC configuration.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class DnssecConfig : Microsoft.Rest.Azure.IResource
    {
        /// <summary>
        /// Initializes a new instance of the DnssecConfig class.
        /// </summary>
        public DnssecConfig()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DnssecConfig class.
        /// </summary>

        /// <param name="id">The ID of the DNSSEC configuration.
        /// </param>

        /// <param name="name">The name of the DNSSEC configuration.
        /// </param>

        /// <param name="type">The type of the DNSSEC configuration.
        /// </param>

        /// <param name="etag">The etag of the DNSSEC configuration.
        /// </param>

        /// <param name="systemData">Metadata pertaining to creation and last modification of the resource.
        /// </param>

        /// <param name="provisioningState">Provisioning State of the DNSSEC configuration.
        /// </param>

        /// <param name="signingKeys">The list of signing keys.
        /// </param>
        public DnssecConfig(string id = default(string), string name = default(string), string type = default(string), string etag = default(string), SystemData systemData = default(SystemData), string provisioningState = default(string), System.Collections.Generic.IList<SigningKey> signingKeys = default(System.Collections.Generic.IList<SigningKey>))

        {
            this.Id = id;
            this.Name = name;
            this.Type = type;
            this.Etag = etag;
            this.SystemData = systemData;
            this.ProvisioningState = provisioningState;
            this.SigningKeys = signingKeys;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the ID of the DNSSEC configuration.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "id")]
        public string Id {get; private set; }

        /// <summary>
        /// Gets the name of the DNSSEC configuration.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; private set; }

        /// <summary>
        /// Gets the type of the DNSSEC configuration.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "type")]
        public string Type {get; private set; }

        /// <summary>
        /// Gets or sets the etag of the DNSSEC configuration.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "etag")]
        public string Etag {get; set; }

        /// <summary>
        /// Gets metadata pertaining to creation and last modification of the resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "systemData")]
        public SystemData SystemData {get; private set; }

        /// <summary>
        /// Gets provisioning State of the DNSSEC configuration.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState {get; private set; }

        /// <summary>
        /// Gets the list of signing keys.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.signingKeys")]
        public System.Collections.Generic.IList<SigningKey> SigningKeys {get; private set; }
    }
}