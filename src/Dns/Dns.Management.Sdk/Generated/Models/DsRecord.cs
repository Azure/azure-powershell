// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Dns.Models
{
    using System.Linq;

    /// <summary>
    /// A DS record. For more information about the DS record format, see RFC 4034:
    /// https://www.rfc-editor.org/rfc/rfc4034
    /// </summary>
    public partial class DsRecord
    {
        /// <summary>
        /// Initializes a new instance of the DsRecord class.
        /// </summary>
        public DsRecord()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DsRecord class.
        /// </summary>

        /// <param name="keyTag">The key tag value is used to determine which DNSKEY Resource Record is used
        /// for signature verification.
        /// </param>

        /// <param name="algorithm">The security algorithm type represents the standard security algorithm
        /// number of the DNSKEY Resource Record. See:
        /// https://www.iana.org/assignments/dns-sec-alg-numbers/dns-sec-alg-numbers.xhtml
        /// </param>

        /// <param name="digest">The digest entity.
        /// </param>
        public DsRecord(int? keyTag = default(int?), int? algorithm = default(int?), Digest digest = default(Digest))

        {
            this.KeyTag = keyTag;
            this.Algorithm = algorithm;
            this.Digest = digest;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the key tag value is used to determine which DNSKEY Resource
        /// Record is used for signature verification.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "keyTag")]
        public int? KeyTag {get; set; }

        /// <summary>
        /// Gets or sets the security algorithm type represents the standard security
        /// algorithm number of the DNSKEY Resource Record. See:
        /// https://www.iana.org/assignments/dns-sec-alg-numbers/dns-sec-alg-numbers.xhtml
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "algorithm")]
        public int? Algorithm {get; set; }

        /// <summary>
        /// Gets or sets the digest entity.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "digest")]
        public Digest Digest {get; set; }
    }
}