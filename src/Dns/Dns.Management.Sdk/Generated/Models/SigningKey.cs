// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Dns.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Represents the signing key.
    /// </summary>
    public partial class SigningKey
    {
        /// <summary>
        /// Initializes a new instance of the SigningKey class.
        /// </summary>
        public SigningKey()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SigningKey class.
        /// </summary>
        /// <param name="delegationSignerInfo">The delegation signer
        /// information.</param>
        /// <param name="flags">The flags specifies how the key is
        /// used.</param>
        /// <param name="keyTag">The key tag value of the DNSKEY Resource
        /// Record.</param>
        /// <param name="protocol">The protocol value. The value is always
        /// 3.</param>
        /// <param name="publicKey">The public key, represented as a Base64
        /// encoding.</param>
        public SigningKey(IList<DelegationSignerInfo> delegationSignerInfo = default(IList<DelegationSignerInfo>), int? flags = default(int?), int? keyTag = default(int?), int? protocol = default(int?), string publicKey = default(string), int? securityAlgorithmType = default(int?))
        {
            DelegationSignerInfo = delegationSignerInfo;
            Flags = flags;
            KeyTag = keyTag;
            Protocol = protocol;
            PublicKey = publicKey;
            SecurityAlgorithmType = securityAlgorithmType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the delegation signer information.
        /// </summary>
        [JsonProperty(PropertyName = "delegationSignerInfo")]
        public IList<DelegationSignerInfo> DelegationSignerInfo { get; private set; }

        /// <summary>
        /// Gets the flags specifies how the key is used.
        /// </summary>
        [JsonProperty(PropertyName = "flags")]
        public int? Flags { get; private set; }

        /// <summary>
        /// Gets the key tag value of the DNSKEY Resource Record.
        /// </summary>
        [JsonProperty(PropertyName = "keyTag")]
        public int? KeyTag { get; private set; }

        /// <summary>
        /// Gets the protocol value. The value is always 3.
        /// </summary>
        [JsonProperty(PropertyName = "protocol")]
        public int? Protocol { get; private set; }

        /// <summary>
        /// Gets the public key, represented as a Base64 encoding.
        /// </summary>
        [JsonProperty(PropertyName = "publicKey")]
        public string PublicKey { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "securityAlgorithmType")]
        public int? SecurityAlgorithmType { get; private set; }

    }
}
