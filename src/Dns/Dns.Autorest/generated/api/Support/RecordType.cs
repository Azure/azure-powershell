// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Dns.Support
{

    public partial struct RecordType :
        System.IEquatable<RecordType>
    {
        public static Microsoft.Azure.PowerShell.Cmdlets.Dns.Support.RecordType A = @"A";

        public static Microsoft.Azure.PowerShell.Cmdlets.Dns.Support.RecordType Aaaa = @"AAAA";

        public static Microsoft.Azure.PowerShell.Cmdlets.Dns.Support.RecordType Caa = @"CAA";

        public static Microsoft.Azure.PowerShell.Cmdlets.Dns.Support.RecordType Cname = @"CNAME";

        public static Microsoft.Azure.PowerShell.Cmdlets.Dns.Support.RecordType Ds = @"DS";

        public static Microsoft.Azure.PowerShell.Cmdlets.Dns.Support.RecordType Mx = @"MX";

        public static Microsoft.Azure.PowerShell.Cmdlets.Dns.Support.RecordType Naptr = @"NAPTR";

        public static Microsoft.Azure.PowerShell.Cmdlets.Dns.Support.RecordType Ns = @"NS";

        public static Microsoft.Azure.PowerShell.Cmdlets.Dns.Support.RecordType Ptr = @"PTR";

        public static Microsoft.Azure.PowerShell.Cmdlets.Dns.Support.RecordType Soa = @"SOA";

        public static Microsoft.Azure.PowerShell.Cmdlets.Dns.Support.RecordType Srv = @"SRV";

        public static Microsoft.Azure.PowerShell.Cmdlets.Dns.Support.RecordType Tlsa = @"TLSA";

        public static Microsoft.Azure.PowerShell.Cmdlets.Dns.Support.RecordType Txt = @"TXT";

        /// <summary>the value for an instance of the <see cref="RecordType" /> Enum.</summary>
        private string _value { get; set; }

        /// <summary>Conversion from arbitrary object to RecordType</summary>
        /// <param name="value">the value to convert to an instance of <see cref="RecordType" />.</param>
        internal static object CreateFrom(object value)
        {
            return new RecordType(global::System.Convert.ToString(value));
        }

        /// <summary>Compares values of enum type RecordType</summary>
        /// <param name="e">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public bool Equals(Microsoft.Azure.PowerShell.Cmdlets.Dns.Support.RecordType e)
        {
            return _value.Equals(e._value);
        }

        /// <summary>Compares values of enum type RecordType (override for Object)</summary>
        /// <param name="obj">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public override bool Equals(object obj)
        {
            return obj is RecordType && Equals((RecordType)obj);
        }

        /// <summary>Returns hashCode for enum RecordType</summary>
        /// <returns>The hashCode of the value</returns>
        public override int GetHashCode()
        {
            return this._value.GetHashCode();
        }

        /// <summary>Creates an instance of the <see cref="RecordType"/> Enum class.</summary>
        /// <param name="underlyingValue">the value to create an instance for.</param>
        private RecordType(string underlyingValue)
        {
            this._value = underlyingValue;
        }

        /// <summary>Returns string representation for RecordType</summary>
        /// <returns>A string for this value.</returns>
        public override string ToString()
        {
            return this._value;
        }

        /// <summary>Implicit operator to convert string to RecordType</summary>
        /// <param name="value">the value to convert to an instance of <see cref="RecordType" />.</param>

        public static implicit operator RecordType(string value)
        {
            return new RecordType(value);
        }

        /// <summary>Implicit operator to convert RecordType to string</summary>
        /// <param name="e">the value to convert to an instance of <see cref="RecordType" />.</param>

        public static implicit operator string(Microsoft.Azure.PowerShell.Cmdlets.Dns.Support.RecordType e)
        {
            return e._value;
        }

        /// <summary>Overriding != operator for enum RecordType</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are not equal to the same value</returns>
        public static bool operator !=(Microsoft.Azure.PowerShell.Cmdlets.Dns.Support.RecordType e1, Microsoft.Azure.PowerShell.Cmdlets.Dns.Support.RecordType e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>Overriding == operator for enum RecordType</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public static bool operator ==(Microsoft.Azure.PowerShell.Cmdlets.Dns.Support.RecordType e1, Microsoft.Azure.PowerShell.Cmdlets.Dns.Support.RecordType e2)
        {
            return e2.Equals(e1);
        }
    }
}