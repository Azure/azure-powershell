// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Extensions;

    /// <summary>
    /// A DS record. For more information about the DS record format, see RFC 4034: https://www.rfc-editor.org/rfc/rfc4034
    /// </summary>
    [Microsoft.Azure.PowerShell.Cmdlets.Dns.DoNotFormat]
    public partial class DsRecord :
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IDsRecord,
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IDsRecordInternal
    {

        /// <summary>Backing field for <see cref="Algorithm" /> property.</summary>
        private int? _algorithm;

        /// <summary>
        /// The security algorithm type represents the standard security algorithm number of the DNSKEY Resource Record. See: https://www.iana.org/assignments/dns-sec-alg-numbers/dns-sec-alg-numbers.xhtml
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Owned)]
        public int? Algorithm { get => this._algorithm; set => this._algorithm = value; }

        /// <summary>Backing field for <see cref="Digest" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IDigest _digest;

        /// <summary>The digest entity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IDigest Digest { get => (this._digest = this._digest ?? new Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.Digest()); set => this._digest = value; }

        /// <summary>
        /// The digest algorithm type represents the standard digest algorithm number used to construct the digest. See: https://www.iana.org/assignments/ds-rr-types/ds-rr-types.xhtml
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Inlined)]
        public int? DigestAlgorithmType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IDigestInternal)Digest).AlgorithmType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IDigestInternal)Digest).AlgorithmType = value ?? default(int); }

        /// <summary>
        /// The digest value is a cryptographic hash value of the referenced DNSKEY Resource Record.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Inlined)]
        public string DigestValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IDigestInternal)Digest).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IDigestInternal)Digest).Value = value ?? null; }

        /// <summary>Backing field for <see cref="KeyTag" /> property.</summary>
        private int? _keyTag;

        /// <summary>
        /// The key tag value is used to determine which DNSKEY Resource Record is used for signature verification.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Owned)]
        public int? KeyTag { get => this._keyTag; set => this._keyTag = value; }

        /// <summary>Internal Acessors for Digest</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IDigest Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IDsRecordInternal.Digest { get => (this._digest = this._digest ?? new Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.Digest()); set { {_digest = value;} } }

        /// <summary>Creates an new <see cref="DsRecord" /> instance.</summary>
        public DsRecord()
        {

        }
    }
    /// A DS record. For more information about the DS record format, see RFC 4034: https://www.rfc-editor.org/rfc/rfc4034
    public partial interface IDsRecord :
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The security algorithm type represents the standard security algorithm number of the DNSKEY Resource Record. See: https://www.iana.org/assignments/dns-sec-alg-numbers/dns-sec-alg-numbers.xhtml
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The security algorithm type represents the standard security algorithm number of the DNSKEY Resource Record. See: https://www.iana.org/assignments/dns-sec-alg-numbers/dns-sec-alg-numbers.xhtml",
        SerializedName = @"algorithm",
        PossibleTypes = new [] { typeof(int) })]
        int? Algorithm { get; set; }
        /// <summary>
        /// The digest algorithm type represents the standard digest algorithm number used to construct the digest. See: https://www.iana.org/assignments/ds-rr-types/ds-rr-types.xhtml
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The digest algorithm type represents the standard digest algorithm number used to construct the digest. See: https://www.iana.org/assignments/ds-rr-types/ds-rr-types.xhtml",
        SerializedName = @"algorithmType",
        PossibleTypes = new [] { typeof(int) })]
        int? DigestAlgorithmType { get; set; }
        /// <summary>
        /// The digest value is a cryptographic hash value of the referenced DNSKEY Resource Record.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The digest value is a cryptographic hash value of the referenced DNSKEY Resource Record.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(string) })]
        string DigestValue { get; set; }
        /// <summary>
        /// The key tag value is used to determine which DNSKEY Resource Record is used for signature verification.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The key tag value is used to determine which DNSKEY Resource Record is used for signature verification.",
        SerializedName = @"keyTag",
        PossibleTypes = new [] { typeof(int) })]
        int? KeyTag { get; set; }

    }
    /// A DS record. For more information about the DS record format, see RFC 4034: https://www.rfc-editor.org/rfc/rfc4034
    internal partial interface IDsRecordInternal

    {
        /// <summary>
        /// The security algorithm type represents the standard security algorithm number of the DNSKEY Resource Record. See: https://www.iana.org/assignments/dns-sec-alg-numbers/dns-sec-alg-numbers.xhtml
        /// </summary>
        int? Algorithm { get; set; }
        /// <summary>The digest entity.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IDigest Digest { get; set; }
        /// <summary>
        /// The digest algorithm type represents the standard digest algorithm number used to construct the digest. See: https://www.iana.org/assignments/ds-rr-types/ds-rr-types.xhtml
        /// </summary>
        int? DigestAlgorithmType { get; set; }
        /// <summary>
        /// The digest value is a cryptographic hash value of the referenced DNSKEY Resource Record.
        /// </summary>
        string DigestValue { get; set; }
        /// <summary>
        /// The key tag value is used to determine which DNSKEY Resource Record is used for signature verification.
        /// </summary>
        int? KeyTag { get; set; }

    }
}