// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Extensions;

    /// <summary>Represents the properties of the zone.</summary>
    [Microsoft.Azure.PowerShell.Cmdlets.Dns.DoNotFormat]
    public partial class ZoneProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IZoneProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IZonePropertiesInternal
    {

        /// <summary>Backing field for <see cref="MaxNumberOfRecordSet" /> property.</summary>
        private long? _maxNumberOfRecordSet;

        /// <summary>
        /// The maximum number of record sets that can be created in this DNS zone. This is a read-only property and any attempt to
        /// set this value will be ignored.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Owned)]
        public long? MaxNumberOfRecordSet { get => this._maxNumberOfRecordSet; }

        /// <summary>Backing field for <see cref="MaxNumberOfRecordsPerRecordSet" /> property.</summary>
        private long? _maxNumberOfRecordsPerRecordSet;

        /// <summary>
        /// The maximum number of records per record set that can be created in this DNS zone. This is a read-only property and any
        /// attempt to set this value will be ignored.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Owned)]
        public long? MaxNumberOfRecordsPerRecordSet { get => this._maxNumberOfRecordsPerRecordSet; }

        /// <summary>Internal Acessors for MaxNumberOfRecordSet</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IZonePropertiesInternal.MaxNumberOfRecordSet { get => this._maxNumberOfRecordSet; set { {_maxNumberOfRecordSet = value;} } }

        /// <summary>Internal Acessors for MaxNumberOfRecordsPerRecordSet</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IZonePropertiesInternal.MaxNumberOfRecordsPerRecordSet { get => this._maxNumberOfRecordsPerRecordSet; set { {_maxNumberOfRecordsPerRecordSet = value;} } }

        /// <summary>Internal Acessors for NameServer</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IZonePropertiesInternal.NameServer { get => this._nameServer; set { {_nameServer = value;} } }

        /// <summary>Internal Acessors for NumberOfRecordSet</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IZonePropertiesInternal.NumberOfRecordSet { get => this._numberOfRecordSet; set { {_numberOfRecordSet = value;} } }

        /// <summary>Internal Acessors for SigningKey</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ISigningKey[] Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IZonePropertiesInternal.SigningKey { get => this._signingKey; set { {_signingKey = value;} } }

        /// <summary>Backing field for <see cref="NameServer" /> property.</summary>
        private string[] _nameServer;

        /// <summary>
        /// The name servers for this DNS zone. This is a read-only property and any attempt to set this value will be ignored.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Owned)]
        public string[] NameServer { get => this._nameServer; }

        /// <summary>Backing field for <see cref="NumberOfRecordSet" /> property.</summary>
        private long? _numberOfRecordSet;

        /// <summary>
        /// The current number of record sets in this DNS zone. This is a read-only property and any attempt to set this value will
        /// be ignored.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Owned)]
        public long? NumberOfRecordSet { get => this._numberOfRecordSet; }

        /// <summary>Backing field for <see cref="RegistrationVirtualNetwork" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ISubResource[] _registrationVirtualNetwork;

        /// <summary>
        /// A list of references to virtual networks that register hostnames in this DNS zone. This is a only when ZoneType is Private.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ISubResource[] RegistrationVirtualNetwork { get => this._registrationVirtualNetwork; set => this._registrationVirtualNetwork = value; }

        /// <summary>Backing field for <see cref="ResolutionVirtualNetwork" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ISubResource[] _resolutionVirtualNetwork;

        /// <summary>
        /// A list of references to virtual networks that resolve records in this DNS zone. This is a only when ZoneType is Private.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ISubResource[] ResolutionVirtualNetwork { get => this._resolutionVirtualNetwork; set => this._resolutionVirtualNetwork = value; }

        /// <summary>Backing field for <see cref="SigningKey" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ISigningKey[] _signingKey;

        /// <summary>The list of signing keys.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ISigningKey[] SigningKey { get => this._signingKey; }

        /// <summary>Backing field for <see cref="ZoneType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Dns.Support.ZoneType? _zoneType;

        /// <summary>The type of this DNS zone (Public or Private).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Dns.Support.ZoneType? ZoneType { get => this._zoneType; set => this._zoneType = value; }

        /// <summary>Creates an new <see cref="ZoneProperties" /> instance.</summary>
        public ZoneProperties()
        {

        }
    }
    /// Represents the properties of the zone.
    public partial interface IZoneProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The maximum number of record sets that can be created in this DNS zone. This is a read-only property and any attempt to
        /// set this value will be ignored.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The maximum number of record sets that can be created in this DNS zone.  This is a read-only property and any attempt to set this value will be ignored.",
        SerializedName = @"maxNumberOfRecordSets",
        PossibleTypes = new [] { typeof(long) })]
        long? MaxNumberOfRecordSet { get;  }
        /// <summary>
        /// The maximum number of records per record set that can be created in this DNS zone. This is a read-only property and any
        /// attempt to set this value will be ignored.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The maximum number of records per record set that can be created in this DNS zone.  This is a read-only property and any attempt to set this value will be ignored.",
        SerializedName = @"maxNumberOfRecordsPerRecordSet",
        PossibleTypes = new [] { typeof(long) })]
        long? MaxNumberOfRecordsPerRecordSet { get;  }
        /// <summary>
        /// The name servers for this DNS zone. This is a read-only property and any attempt to set this value will be ignored.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name servers for this DNS zone. This is a read-only property and any attempt to set this value will be ignored.",
        SerializedName = @"nameServers",
        PossibleTypes = new [] { typeof(string) })]
        string[] NameServer { get;  }
        /// <summary>
        /// The current number of record sets in this DNS zone. This is a read-only property and any attempt to set this value will
        /// be ignored.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The current number of record sets in this DNS zone.  This is a read-only property and any attempt to set this value will be ignored.",
        SerializedName = @"numberOfRecordSets",
        PossibleTypes = new [] { typeof(long) })]
        long? NumberOfRecordSet { get;  }
        /// <summary>
        /// A list of references to virtual networks that register hostnames in this DNS zone. This is a only when ZoneType is Private.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of references to virtual networks that register hostnames in this DNS zone. This is a only when ZoneType is Private.",
        SerializedName = @"registrationVirtualNetworks",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ISubResource) })]
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ISubResource[] RegistrationVirtualNetwork { get; set; }
        /// <summary>
        /// A list of references to virtual networks that resolve records in this DNS zone. This is a only when ZoneType is Private.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of references to virtual networks that resolve records in this DNS zone. This is a only when ZoneType is Private.",
        SerializedName = @"resolutionVirtualNetworks",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ISubResource) })]
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ISubResource[] ResolutionVirtualNetwork { get; set; }
        /// <summary>The list of signing keys.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of signing keys.",
        SerializedName = @"signingKeys",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ISigningKey) })]
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ISigningKey[] SigningKey { get;  }
        /// <summary>The type of this DNS zone (Public or Private).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of this DNS zone (Public or Private).",
        SerializedName = @"zoneType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Dns.Support.ZoneType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Support.ZoneType? ZoneType { get; set; }

    }
    /// Represents the properties of the zone.
    internal partial interface IZonePropertiesInternal

    {
        /// <summary>
        /// The maximum number of record sets that can be created in this DNS zone. This is a read-only property and any attempt to
        /// set this value will be ignored.
        /// </summary>
        long? MaxNumberOfRecordSet { get; set; }
        /// <summary>
        /// The maximum number of records per record set that can be created in this DNS zone. This is a read-only property and any
        /// attempt to set this value will be ignored.
        /// </summary>
        long? MaxNumberOfRecordsPerRecordSet { get; set; }
        /// <summary>
        /// The name servers for this DNS zone. This is a read-only property and any attempt to set this value will be ignored.
        /// </summary>
        string[] NameServer { get; set; }
        /// <summary>
        /// The current number of record sets in this DNS zone. This is a read-only property and any attempt to set this value will
        /// be ignored.
        /// </summary>
        long? NumberOfRecordSet { get; set; }
        /// <summary>
        /// A list of references to virtual networks that register hostnames in this DNS zone. This is a only when ZoneType is Private.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ISubResource[] RegistrationVirtualNetwork { get; set; }
        /// <summary>
        /// A list of references to virtual networks that resolve records in this DNS zone. This is a only when ZoneType is Private.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ISubResource[] ResolutionVirtualNetwork { get; set; }
        /// <summary>The list of signing keys.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ISigningKey[] SigningKey { get; set; }
        /// <summary>The type of this DNS zone (Public or Private).</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Support.ZoneType? ZoneType { get; set; }

    }
}