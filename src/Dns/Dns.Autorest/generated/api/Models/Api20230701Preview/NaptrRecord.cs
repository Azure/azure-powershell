// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Extensions;

    /// <summary>
    /// A NAPTR record. For more information about the NAPTR record format, see RFC 3403: https://www.rfc-editor.org/rfc/rfc3403
    /// </summary>
    [Microsoft.Azure.PowerShell.Cmdlets.Dns.DoNotFormat]
    public partial class NaptrRecord :
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.INaptrRecord,
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.INaptrRecordInternal
    {

        /// <summary>Backing field for <see cref="Flag" /> property.</summary>
        private string _flag;

        /// <summary>
        /// The flags specific to DDDS applications. Values currently defined in RFC 3404 are uppercase and lowercase letters "A",
        /// "P", "S", and "U", and the empty string, "". Enclose Flags in quotation marks.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Owned)]
        public string Flag { get => this._flag; set => this._flag = value; }

        /// <summary>Backing field for <see cref="Order" /> property.</summary>
        private int? _order;

        /// <summary>
        /// The order in which the NAPTR records MUST be processed in order to accurately represent the ordered list of rules. The
        /// ordering is from lowest to highest. Valid values: 0-65535.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Owned)]
        public int? Order { get => this._order; set => this._order = value; }

        /// <summary>Backing field for <see cref="Preference" /> property.</summary>
        private int? _preference;

        /// <summary>
        /// The preference specifies the order in which NAPTR records with equal 'order' values should be processed, low numbers being
        /// processed before high numbers. Valid values: 0-65535.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Owned)]
        public int? Preference { get => this._preference; set => this._preference = value; }

        /// <summary>Backing field for <see cref="Regexp" /> property.</summary>
        private string _regexp;

        /// <summary>
        /// The regular expression that the DDDS application uses to convert an input value into an output value. For example: an
        /// IP phone system might use a regular expression to convert a phone number that is entered by a user into a SIP URI. Enclose
        /// the regular expression in quotation marks. Specify either a value for 'regexp' or a value for 'replacement'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Owned)]
        public string Regexp { get => this._regexp; set => this._regexp = value; }

        /// <summary>Backing field for <see cref="Replacement" /> property.</summary>
        private string _replacement;

        /// <summary>
        /// The replacement is a fully qualified domain name (FQDN) of the next domain name that you want the DDDS application to
        /// submit a DNS query for. The DDDS application replaces the input value with the value specified for replacement. Specify
        /// either a value for 'regexp' or a value for 'replacement'. If you specify a value for 'regexp', specify a dot (.) for 'replacement'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Owned)]
        public string Replacement { get => this._replacement; set => this._replacement = value; }

        /// <summary>Backing field for <see cref="Service" /> property.</summary>
        private string _service;

        /// <summary>
        /// The services specific to DDDS applications. Enclose Services in quotation marks.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Owned)]
        public string Service { get => this._service; set => this._service = value; }

        /// <summary>Creates an new <see cref="NaptrRecord" /> instance.</summary>
        public NaptrRecord()
        {

        }
    }
    /// A NAPTR record. For more information about the NAPTR record format, see RFC 3403: https://www.rfc-editor.org/rfc/rfc3403
    public partial interface INaptrRecord :
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The flags specific to DDDS applications. Values currently defined in RFC 3404 are uppercase and lowercase letters "A",
        /// "P", "S", and "U", and the empty string, "". Enclose Flags in quotation marks.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The flags specific to DDDS applications. Values currently defined in RFC 3404 are uppercase and lowercase letters ""A"", ""P"", ""S"", and ""U"", and the empty string, """". Enclose Flags in quotation marks.",
        SerializedName = @"flags",
        PossibleTypes = new [] { typeof(string) })]
        string Flag { get; set; }
        /// <summary>
        /// The order in which the NAPTR records MUST be processed in order to accurately represent the ordered list of rules. The
        /// ordering is from lowest to highest. Valid values: 0-65535.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The order in which the NAPTR records MUST be processed in order to accurately represent the ordered list of rules. The ordering is from lowest to highest. Valid values: 0-65535.",
        SerializedName = @"order",
        PossibleTypes = new [] { typeof(int) })]
        int? Order { get; set; }
        /// <summary>
        /// The preference specifies the order in which NAPTR records with equal 'order' values should be processed, low numbers being
        /// processed before high numbers. Valid values: 0-65535.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The preference specifies the order in which NAPTR records with equal 'order' values should be processed, low numbers being processed before high numbers. Valid values: 0-65535.",
        SerializedName = @"preference",
        PossibleTypes = new [] { typeof(int) })]
        int? Preference { get; set; }
        /// <summary>
        /// The regular expression that the DDDS application uses to convert an input value into an output value. For example: an
        /// IP phone system might use a regular expression to convert a phone number that is entered by a user into a SIP URI. Enclose
        /// the regular expression in quotation marks. Specify either a value for 'regexp' or a value for 'replacement'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The regular expression that the DDDS application uses to convert an input value into an output value. For example: an IP phone system might use a regular expression to convert a phone number that is entered by a user into a SIP URI. Enclose the regular expression in quotation marks. Specify either a value for 'regexp' or a value for 'replacement'.",
        SerializedName = @"regexp",
        PossibleTypes = new [] { typeof(string) })]
        string Regexp { get; set; }
        /// <summary>
        /// The replacement is a fully qualified domain name (FQDN) of the next domain name that you want the DDDS application to
        /// submit a DNS query for. The DDDS application replaces the input value with the value specified for replacement. Specify
        /// either a value for 'regexp' or a value for 'replacement'. If you specify a value for 'regexp', specify a dot (.) for 'replacement'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The replacement is a fully qualified domain name (FQDN) of the next domain name that you want the DDDS application to submit a DNS query for. The DDDS application replaces the input value with the value specified for replacement. Specify either a value for 'regexp' or a value for 'replacement'. If you specify a value for 'regexp', specify a dot (.) for 'replacement'.",
        SerializedName = @"replacement",
        PossibleTypes = new [] { typeof(string) })]
        string Replacement { get; set; }
        /// <summary>
        /// The services specific to DDDS applications. Enclose Services in quotation marks.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The services specific to DDDS applications. Enclose Services in quotation marks.",
        SerializedName = @"services",
        PossibleTypes = new [] { typeof(string) })]
        string Service { get; set; }

    }
    /// A NAPTR record. For more information about the NAPTR record format, see RFC 3403: https://www.rfc-editor.org/rfc/rfc3403
    internal partial interface INaptrRecordInternal

    {
        /// <summary>
        /// The flags specific to DDDS applications. Values currently defined in RFC 3404 are uppercase and lowercase letters "A",
        /// "P", "S", and "U", and the empty string, "". Enclose Flags in quotation marks.
        /// </summary>
        string Flag { get; set; }
        /// <summary>
        /// The order in which the NAPTR records MUST be processed in order to accurately represent the ordered list of rules. The
        /// ordering is from lowest to highest. Valid values: 0-65535.
        /// </summary>
        int? Order { get; set; }
        /// <summary>
        /// The preference specifies the order in which NAPTR records with equal 'order' values should be processed, low numbers being
        /// processed before high numbers. Valid values: 0-65535.
        /// </summary>
        int? Preference { get; set; }
        /// <summary>
        /// The regular expression that the DDDS application uses to convert an input value into an output value. For example: an
        /// IP phone system might use a regular expression to convert a phone number that is entered by a user into a SIP URI. Enclose
        /// the regular expression in quotation marks. Specify either a value for 'regexp' or a value for 'replacement'.
        /// </summary>
        string Regexp { get; set; }
        /// <summary>
        /// The replacement is a fully qualified domain name (FQDN) of the next domain name that you want the DDDS application to
        /// submit a DNS query for. The DDDS application replaces the input value with the value specified for replacement. Specify
        /// either a value for 'regexp' or a value for 'replacement'. If you specify a value for 'regexp', specify a dot (.) for 'replacement'.
        /// </summary>
        string Replacement { get; set; }
        /// <summary>
        /// The services specific to DDDS applications. Enclose Services in quotation marks.
        /// </summary>
        string Service { get; set; }

    }
}