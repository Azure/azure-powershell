// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Extensions;

    /// <summary>A CNAME record.</summary>
    [Microsoft.Azure.PowerShell.Cmdlets.Dns.DoNotFormat]
    public partial class CnameRecord :
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ICnameRecord,
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ICnameRecordInternal
    {

        /// <summary>Backing field for <see cref="Cname" /> property.</summary>
        private string _cname;

        /// <summary>The canonical name for this CNAME record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Owned)]
        public string Cname { get => this._cname; set => this._cname = value; }

        /// <summary>Creates an new <see cref="CnameRecord" /> instance.</summary>
        public CnameRecord()
        {

        }
    }
    /// A CNAME record.
    public partial interface ICnameRecord :
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.IJsonSerializable
    {
        /// <summary>The canonical name for this CNAME record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The canonical name for this CNAME record.",
        SerializedName = @"cname",
        PossibleTypes = new [] { typeof(string) })]
        string Cname { get; set; }

    }
    /// A CNAME record.
    internal partial interface ICnameRecordInternal

    {
        /// <summary>The canonical name for this CNAME record.</summary>
        string Cname { get; set; }

    }
}