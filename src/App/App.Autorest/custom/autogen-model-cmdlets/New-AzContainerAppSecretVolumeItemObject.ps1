
# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Code generated by Microsoft (R) AutoRest Code Generator.Changes may cause incorrect behavior and will be lost if the code
# is regenerated.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Create an in-memory object for SecretVolumeItem.
.Description
Create an in-memory object for SecretVolumeItem.

.Outputs
Microsoft.Azure.PowerShell.Cmdlets.App.Models.SecretVolumeItem
.Link
https://learn.microsoft.com/powershell/module/Az.App/new-azcontainerappsecretvolumeitemobject
#>
function New-AzContainerAppSecretVolumeItemObject {
    [OutputType('Microsoft.Azure.PowerShell.Cmdlets.App.Models.SecretVolumeItem')]
    [CmdletBinding(PositionalBinding=$false)]
    Param(

        [Parameter(HelpMessage="Path to project secret to. If no path is provided, path defaults to name of secret listed in secretRef.")]
        [string]
        $Path,
        [Parameter(HelpMessage="Name of the Container App secret from which to pull the secret value.")]
        [string]
        $SecretRef
    )

    process {
        $Object = [Microsoft.Azure.PowerShell.Cmdlets.App.Models.SecretVolumeItem]::New()

        if ($PSBoundParameters.ContainsKey('Path')) {
            $Object.Path = $Path
        }
        if ($PSBoundParameters.ContainsKey('SecretRef')) {
            $Object.SecretRef = $SecretRef
        }
        return $Object
    }
}

