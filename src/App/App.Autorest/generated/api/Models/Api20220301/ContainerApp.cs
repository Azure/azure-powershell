// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Extensions;

    /// <summary>Container App.</summary>
    public partial class ContainerApp :
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerApp,
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppInternal,
        Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.ITrackedResource" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.ITrackedResource __trackedResource = new Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.TrackedResource();

        /// <summary>
        /// ActiveRevisionsMode controls how active revisions are handled for the Container app:
        /// <list><item>Multiple: multiple revisions can be active.</item><item>Single: Only one revision can be active at a time.
        /// Revision weights can not be used in this mode. If no value if provided, this is the default.</item></list>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.App.Support.ActiveRevisionsMode? ConfigurationActiveRevisionsMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).ConfigurationActiveRevisionsMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).ConfigurationActiveRevisionsMode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.App.Support.ActiveRevisionsMode)""); }

        /// <summary>
        /// Collection of private container registry credentials for containers used by the Container app
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IRegistryCredentials[] ConfigurationRegistry { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).ConfigurationRegistry; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).ConfigurationRegistry = value ?? null /* arrayOf */; }

        /// <summary>Collection of secrets used by a Container app</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISecret[] ConfigurationSecret { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).ConfigurationSecret; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).ConfigurationSecret = value ?? null /* arrayOf */; }

        /// <summary>Id used to verify domain name ownership</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public string CustomDomainVerificationId { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).CustomDomainVerificationId; }

        /// <summary>Dapr application identifier</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public string DaprAppId { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).DaprAppId; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).DaprAppId = value ?? null; }

        /// <summary>Tells Dapr which port your application is listening on</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public int? DaprAppPort { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).DaprAppPort; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).DaprAppPort = value ?? default(int); }

        /// <summary>
        /// Tells Dapr which protocol your application is using. Valid options are http and grpc. Default is http
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.App.Support.AppProtocol? DaprAppProtocol { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).DaprAppProtocol; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).DaprAppProtocol = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.App.Support.AppProtocol)""); }

        /// <summary>Boolean indicating if the Dapr side car is enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public bool? DaprEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).DaprEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).DaprEnabled = value ?? default(bool); }

        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__trackedResource).Id; }

        /// <summary>Backing field for <see cref="Identity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IManagedServiceIdentity _identity;

        /// <summary>
        /// managed identities for the Container App to interact with other Azure services without maintaining any secrets or credentials
        /// in code.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        internal Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IManagedServiceIdentity Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.ManagedServiceIdentity()); set => this._identity = value; }

        /// <summary>
        /// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public string IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IManagedServiceIdentityInternal)Identity).PrincipalId; }

        /// <summary>
        /// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public string IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IManagedServiceIdentityInternal)Identity).TenantId; }

        /// <summary>
        /// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.App.Support.ManagedServiceIdentityType? IdentityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IManagedServiceIdentityInternal)Identity).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IManagedServiceIdentityInternal)Identity).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.App.Support.ManagedServiceIdentityType)""); }

        /// <summary>
        /// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM
        /// resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}.
        /// The dictionary values can be empty objects ({}) in requests.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IUserAssignedIdentities IdentityUserAssignedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IManagedServiceIdentityInternal)Identity).UserAssignedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IManagedServiceIdentityInternal)Identity).UserAssignedIdentity = value ?? null /* model class */; }

        /// <summary>
        /// Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS
        /// connections
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public bool? IngressAllowInsecure { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).IngressAllowInsecure; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).IngressAllowInsecure = value ?? default(bool); }

        /// <summary>custom domain bindings for Container Apps' hostnames.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomDomain[] IngressCustomDomain { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).IngressCustomDomain; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).IngressCustomDomain = value ?? null /* arrayOf */; }

        /// <summary>Bool indicating if app exposes an external http endpoint</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public bool? IngressExternal { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).IngressExternal; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).IngressExternal = value ?? default(bool); }

        /// <summary>Hostname.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public string IngressFqdn { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).IngressFqdn; }

        /// <summary>Target Port in containers for traffic from ingress</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public int? IngressTargetPort { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).IngressTargetPort; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).IngressTargetPort = value ?? default(int); }

        /// <summary>Traffic weights for app's revisions</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ITrafficWeight[] IngressTraffic { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).IngressTraffic; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).IngressTraffic = value ?? null /* arrayOf */; }

        /// <summary>Ingress transport protocol</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.App.Support.IngressTransportMethod? IngressTransport { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).IngressTransport; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).IngressTransport = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.App.Support.IngressTransportMethod)""); }

        /// <summary>Fully Qualified Domain Name of the latest revision of the Container App.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public string LatestRevisionFqdn { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).LatestRevisionFqdn; }

        /// <summary>Name of the latest revision of the Container App.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public string LatestRevisionName { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).LatestRevisionName; }

        /// <summary>The geo-location where the resource lives</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.FormatTable(Index = 0)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.ITrackedResourceInternal)__trackedResource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.ITrackedResourceInternal)__trackedResource).Location = value ; }

        /// <summary>Resource ID of the Container App's environment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public string ManagedEnvironmentId { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).ManagedEnvironmentId; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).ManagedEnvironmentId = value ?? null; }

        /// <summary>Internal Acessors for Configuration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IConfiguration Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppInternal.Configuration { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).Configuration; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).Configuration = value; }

        /// <summary>Internal Acessors for ConfigurationDapr</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IDapr Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppInternal.ConfigurationDapr { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).ConfigurationDapr; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).ConfigurationDapr = value; }

        /// <summary>Internal Acessors for ConfigurationIngress</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IIngress Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppInternal.ConfigurationIngress { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).ConfigurationIngress; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).ConfigurationIngress = value; }

        /// <summary>Internal Acessors for CustomDomainVerificationId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppInternal.CustomDomainVerificationId { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).CustomDomainVerificationId; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).CustomDomainVerificationId = value; }

        /// <summary>Internal Acessors for Identity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IManagedServiceIdentity Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppInternal.Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.ManagedServiceIdentity()); set { {_identity = value;} } }

        /// <summary>Internal Acessors for IdentityPrincipalId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppInternal.IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IManagedServiceIdentityInternal)Identity).PrincipalId; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IManagedServiceIdentityInternal)Identity).PrincipalId = value; }

        /// <summary>Internal Acessors for IdentityTenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppInternal.IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IManagedServiceIdentityInternal)Identity).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IManagedServiceIdentityInternal)Identity).TenantId = value; }

        /// <summary>Internal Acessors for IngressFqdn</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppInternal.IngressFqdn { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).IngressFqdn; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).IngressFqdn = value; }

        /// <summary>Internal Acessors for LatestRevisionFqdn</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppInternal.LatestRevisionFqdn { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).LatestRevisionFqdn; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).LatestRevisionFqdn = value; }

        /// <summary>Internal Acessors for LatestRevisionName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppInternal.LatestRevisionName { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).LatestRevisionName; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).LatestRevisionName = value; }

        /// <summary>Internal Acessors for OutboundIPAddress</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppInternal.OutboundIPAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).OutboundIPAddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).OutboundIPAddress = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppProperties Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ContainerAppProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Support.ContainerAppProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for Template</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ITemplate Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppInternal.Template { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).Template; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).Template = value; }

        /// <summary>Internal Acessors for TemplateScale</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IScale Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppInternal.TemplateScale { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).TemplateScale; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).TemplateScale = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__trackedResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__trackedResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__trackedResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__trackedResource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.ISystemData Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__trackedResource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__trackedResource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__trackedResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__trackedResource).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.FormatTable(Index = 1)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__trackedResource).Name; }

        /// <summary>Outbound IP Addresses for container app.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public string[] OutboundIPAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).OutboundIPAddress; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppProperties _property;

        /// <summary>ContainerApp resource specific properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        internal Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ContainerAppProperties()); set => this._property = value; }

        /// <summary>Provisioning state of the Container App.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.App.Support.ContainerAppProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).ProvisioningState; }

        /// <summary>Gets the resource group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.FormatTable(Index = 2)]
        public string ResourceGroupName { get => (new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Success ? new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Groups["resourceGroupName"].Value : null); }

        /// <summary>Optional. Maximum number of container replicas. Defaults to 10 if not set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public int? ScaleMaxReplica { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).ScaleMaxReplica; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).ScaleMaxReplica = value ?? default(int); }

        /// <summary>Optional. Minimum number of container replicas.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public int? ScaleMinReplica { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).ScaleMinReplica; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).ScaleMinReplica = value ?? default(int); }

        /// <summary>Scaling rules.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IScaleRule[] ScaleRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).ScaleRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).ScaleRule = value ?? null /* arrayOf */; }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__trackedResource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__trackedResource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__trackedResource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__trackedResource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__trackedResource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.App.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__trackedResource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__trackedResource).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.App.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__trackedResource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__trackedResource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__trackedResource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__trackedResource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.App.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__trackedResource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__trackedResource).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.App.Support.CreatedByType)""); }

        /// <summary>Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.ITrackedResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.ITrackedResourceInternal)__trackedResource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.ITrackedResourceInternal)__trackedResource).Tag = value ?? null /* model class */; }

        /// <summary>List of container definitions for the Container App.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainer[] TemplateContainer { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).TemplateContainer; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).TemplateContainer = value ?? null /* arrayOf */; }

        /// <summary>User friendly suffix that is appended to the revision name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public string TemplateRevisionSuffix { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).TemplateRevisionSuffix; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).TemplateRevisionSuffix = value ?? null; }

        /// <summary>List of volume definitions for the Container App.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IVolume[] TemplateVolume { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).TemplateVolume; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppPropertiesInternal)Property).TemplateVolume = value ?? null /* arrayOf */; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__trackedResource).Type; }

        /// <summary>Creates an new <see cref="ContainerApp" /> instance.</summary>
        public ContainerApp()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__trackedResource), __trackedResource);
            await eventListener.AssertObjectIsValid(nameof(__trackedResource), __trackedResource);
        }
    }
    /// Container App.
    public partial interface IContainerApp :
        Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.ITrackedResource
    {
        /// <summary>
        /// ActiveRevisionsMode controls how active revisions are handled for the Container app:
        /// <list><item>Multiple: multiple revisions can be active.</item><item>Single: Only one revision can be active at a time.
        /// Revision weights can not be used in this mode. If no value if provided, this is the default.</item></list>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ActiveRevisionsMode controls how active revisions are handled for the Container app:
        <list><item>Multiple: multiple revisions can be active.</item><item>Single: Only one revision can be active at a time. Revision weights can not be used in this mode. If no value if provided, this is the default.</item></list>",
        SerializedName = @"activeRevisionsMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.App.Support.ActiveRevisionsMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.App.Support.ActiveRevisionsMode? ConfigurationActiveRevisionsMode { get; set; }
        /// <summary>
        /// Collection of private container registry credentials for containers used by the Container app
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Collection of private container registry credentials for containers used by the Container app",
        SerializedName = @"registries",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IRegistryCredentials) })]
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IRegistryCredentials[] ConfigurationRegistry { get; set; }
        /// <summary>Collection of secrets used by a Container app</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Collection of secrets used by a Container app",
        SerializedName = @"secrets",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISecret) })]
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISecret[] ConfigurationSecret { get; set; }
        /// <summary>Id used to verify domain name ownership</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Id used to verify domain name ownership",
        SerializedName = @"customDomainVerificationId",
        PossibleTypes = new [] { typeof(string) })]
        string CustomDomainVerificationId { get;  }
        /// <summary>Dapr application identifier</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Dapr application identifier",
        SerializedName = @"appId",
        PossibleTypes = new [] { typeof(string) })]
        string DaprAppId { get; set; }
        /// <summary>Tells Dapr which port your application is listening on</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Tells Dapr which port your application is listening on",
        SerializedName = @"appPort",
        PossibleTypes = new [] { typeof(int) })]
        int? DaprAppPort { get; set; }
        /// <summary>
        /// Tells Dapr which protocol your application is using. Valid options are http and grpc. Default is http
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Tells Dapr which protocol your application is using. Valid options are http and grpc. Default is http",
        SerializedName = @"appProtocol",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.App.Support.AppProtocol) })]
        Microsoft.Azure.PowerShell.Cmdlets.App.Support.AppProtocol? DaprAppProtocol { get; set; }
        /// <summary>Boolean indicating if the Dapr side car is enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Boolean indicating if the Dapr side car is enabled",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DaprEnabled { get; set; }
        /// <summary>
        /// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
        SerializedName = @"principalId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityPrincipalId { get;  }
        /// <summary>
        /// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityTenantId { get;  }
        /// <summary>
        /// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.App.Support.ManagedServiceIdentityType) })]
        Microsoft.Azure.PowerShell.Cmdlets.App.Support.ManagedServiceIdentityType? IdentityType { get; set; }
        /// <summary>
        /// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM
        /// resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}.
        /// The dictionary values can be empty objects ({}) in requests.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
        SerializedName = @"userAssignedIdentities",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IUserAssignedIdentities) })]
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }
        /// <summary>
        /// Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS
        /// connections
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS connections",
        SerializedName = @"allowInsecure",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IngressAllowInsecure { get; set; }
        /// <summary>custom domain bindings for Container Apps' hostnames.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"custom domain bindings for Container Apps' hostnames.",
        SerializedName = @"customDomains",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomDomain) })]
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomDomain[] IngressCustomDomain { get; set; }
        /// <summary>Bool indicating if app exposes an external http endpoint</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Bool indicating if app exposes an external http endpoint",
        SerializedName = @"external",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IngressExternal { get; set; }
        /// <summary>Hostname.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Hostname.",
        SerializedName = @"fqdn",
        PossibleTypes = new [] { typeof(string) })]
        string IngressFqdn { get;  }
        /// <summary>Target Port in containers for traffic from ingress</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Target Port in containers for traffic from ingress",
        SerializedName = @"targetPort",
        PossibleTypes = new [] { typeof(int) })]
        int? IngressTargetPort { get; set; }
        /// <summary>Traffic weights for app's revisions</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Traffic weights for app's revisions",
        SerializedName = @"traffic",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ITrafficWeight) })]
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ITrafficWeight[] IngressTraffic { get; set; }
        /// <summary>Ingress transport protocol</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Ingress transport protocol",
        SerializedName = @"transport",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.App.Support.IngressTransportMethod) })]
        Microsoft.Azure.PowerShell.Cmdlets.App.Support.IngressTransportMethod? IngressTransport { get; set; }
        /// <summary>Fully Qualified Domain Name of the latest revision of the Container App.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Fully Qualified Domain Name of the latest revision of the Container App.",
        SerializedName = @"latestRevisionFqdn",
        PossibleTypes = new [] { typeof(string) })]
        string LatestRevisionFqdn { get;  }
        /// <summary>Name of the latest revision of the Container App.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Name of the latest revision of the Container App.",
        SerializedName = @"latestRevisionName",
        PossibleTypes = new [] { typeof(string) })]
        string LatestRevisionName { get;  }
        /// <summary>Resource ID of the Container App's environment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID of the Container App's environment.",
        SerializedName = @"managedEnvironmentId",
        PossibleTypes = new [] { typeof(string) })]
        string ManagedEnvironmentId { get; set; }
        /// <summary>Outbound IP Addresses for container app.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Outbound IP Addresses for container app.",
        SerializedName = @"outboundIPAddresses",
        PossibleTypes = new [] { typeof(string) })]
        string[] OutboundIPAddress { get;  }
        /// <summary>Provisioning state of the Container App.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Provisioning state of the Container App.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.App.Support.ContainerAppProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.App.Support.ContainerAppProvisioningState? ProvisioningState { get;  }
        /// <summary>Optional. Maximum number of container replicas. Defaults to 10 if not set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Optional. Maximum number of container replicas. Defaults to 10 if not set.",
        SerializedName = @"maxReplicas",
        PossibleTypes = new [] { typeof(int) })]
        int? ScaleMaxReplica { get; set; }
        /// <summary>Optional. Minimum number of container replicas.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Optional. Minimum number of container replicas.",
        SerializedName = @"minReplicas",
        PossibleTypes = new [] { typeof(int) })]
        int? ScaleMinReplica { get; set; }
        /// <summary>Scaling rules.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Scaling rules.",
        SerializedName = @"rules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IScaleRule) })]
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IScaleRule[] ScaleRule { get; set; }
        /// <summary>List of container definitions for the Container App.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of container definitions for the Container App.",
        SerializedName = @"containers",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainer) })]
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainer[] TemplateContainer { get; set; }
        /// <summary>User friendly suffix that is appended to the revision name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"User friendly suffix that is appended to the revision name",
        SerializedName = @"revisionSuffix",
        PossibleTypes = new [] { typeof(string) })]
        string TemplateRevisionSuffix { get; set; }
        /// <summary>List of volume definitions for the Container App.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of volume definitions for the Container App.",
        SerializedName = @"volumes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IVolume) })]
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IVolume[] TemplateVolume { get; set; }

    }
    /// Container App.
    internal partial interface IContainerAppInternal :
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.ITrackedResourceInternal
    {
        /// <summary>Non versioned Container App configuration properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IConfiguration Configuration { get; set; }
        /// <summary>
        /// ActiveRevisionsMode controls how active revisions are handled for the Container app:
        /// <list><item>Multiple: multiple revisions can be active.</item><item>Single: Only one revision can be active at a time.
        /// Revision weights can not be used in this mode. If no value if provided, this is the default.</item></list>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Support.ActiveRevisionsMode? ConfigurationActiveRevisionsMode { get; set; }
        /// <summary>Dapr configuration for the Container App.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IDapr ConfigurationDapr { get; set; }
        /// <summary>Ingress configurations.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IIngress ConfigurationIngress { get; set; }
        /// <summary>
        /// Collection of private container registry credentials for containers used by the Container app
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IRegistryCredentials[] ConfigurationRegistry { get; set; }
        /// <summary>Collection of secrets used by a Container app</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISecret[] ConfigurationSecret { get; set; }
        /// <summary>Id used to verify domain name ownership</summary>
        string CustomDomainVerificationId { get; set; }
        /// <summary>Dapr application identifier</summary>
        string DaprAppId { get; set; }
        /// <summary>Tells Dapr which port your application is listening on</summary>
        int? DaprAppPort { get; set; }
        /// <summary>
        /// Tells Dapr which protocol your application is using. Valid options are http and grpc. Default is http
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Support.AppProtocol? DaprAppProtocol { get; set; }
        /// <summary>Boolean indicating if the Dapr side car is enabled</summary>
        bool? DaprEnabled { get; set; }
        /// <summary>
        /// managed identities for the Container App to interact with other Azure services without maintaining any secrets or credentials
        /// in code.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IManagedServiceIdentity Identity { get; set; }
        /// <summary>
        /// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        /// </summary>
        string IdentityPrincipalId { get; set; }
        /// <summary>
        /// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        /// </summary>
        string IdentityTenantId { get; set; }
        /// <summary>
        /// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Support.ManagedServiceIdentityType? IdentityType { get; set; }
        /// <summary>
        /// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM
        /// resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}.
        /// The dictionary values can be empty objects ({}) in requests.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }
        /// <summary>
        /// Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS
        /// connections
        /// </summary>
        bool? IngressAllowInsecure { get; set; }
        /// <summary>custom domain bindings for Container Apps' hostnames.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomDomain[] IngressCustomDomain { get; set; }
        /// <summary>Bool indicating if app exposes an external http endpoint</summary>
        bool? IngressExternal { get; set; }
        /// <summary>Hostname.</summary>
        string IngressFqdn { get; set; }
        /// <summary>Target Port in containers for traffic from ingress</summary>
        int? IngressTargetPort { get; set; }
        /// <summary>Traffic weights for app's revisions</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ITrafficWeight[] IngressTraffic { get; set; }
        /// <summary>Ingress transport protocol</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Support.IngressTransportMethod? IngressTransport { get; set; }
        /// <summary>Fully Qualified Domain Name of the latest revision of the Container App.</summary>
        string LatestRevisionFqdn { get; set; }
        /// <summary>Name of the latest revision of the Container App.</summary>
        string LatestRevisionName { get; set; }
        /// <summary>Resource ID of the Container App's environment.</summary>
        string ManagedEnvironmentId { get; set; }
        /// <summary>Outbound IP Addresses for container app.</summary>
        string[] OutboundIPAddress { get; set; }
        /// <summary>ContainerApp resource specific properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainerAppProperties Property { get; set; }
        /// <summary>Provisioning state of the Container App.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Support.ContainerAppProvisioningState? ProvisioningState { get; set; }
        /// <summary>Optional. Maximum number of container replicas. Defaults to 10 if not set.</summary>
        int? ScaleMaxReplica { get; set; }
        /// <summary>Optional. Minimum number of container replicas.</summary>
        int? ScaleMinReplica { get; set; }
        /// <summary>Scaling rules.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IScaleRule[] ScaleRule { get; set; }
        /// <summary>Container App versioned application definition.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ITemplate Template { get; set; }
        /// <summary>List of container definitions for the Container App.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IContainer[] TemplateContainer { get; set; }
        /// <summary>User friendly suffix that is appended to the revision name</summary>
        string TemplateRevisionSuffix { get; set; }
        /// <summary>Scaling properties for the Container App.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IScale TemplateScale { get; set; }
        /// <summary>List of volume definitions for the Container App.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IVolume[] TemplateVolume { get; set; }

    }
}