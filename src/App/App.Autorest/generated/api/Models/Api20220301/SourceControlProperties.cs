// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Extensions;

    /// <summary>SourceControl resource specific properties</summary>
    public partial class SourceControlProperties :
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlProperties,
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlPropertiesInternal
    {

        /// <summary>Client Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string AzureCredentialsClientId { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IGithubActionConfigurationInternal)GithubActionConfiguration).AzureCredentialsClientId; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IGithubActionConfigurationInternal)GithubActionConfiguration).AzureCredentialsClientId = value ?? null; }

        /// <summary>Client Secret.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string AzureCredentialsClientSecret { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IGithubActionConfigurationInternal)GithubActionConfiguration).AzureCredentialsClientSecret; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IGithubActionConfigurationInternal)GithubActionConfiguration).AzureCredentialsClientSecret = value ?? null; }

        /// <summary>Subscription Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string AzureCredentialsSubscriptionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IGithubActionConfigurationInternal)GithubActionConfiguration).AzureCredentialsSubscriptionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IGithubActionConfigurationInternal)GithubActionConfiguration).AzureCredentialsSubscriptionId = value ?? null; }

        /// <summary>Tenant Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string AzureCredentialsTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IGithubActionConfigurationInternal)GithubActionConfiguration).AzureCredentialsTenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IGithubActionConfigurationInternal)GithubActionConfiguration).AzureCredentialsTenantId = value ?? null; }

        /// <summary>Backing field for <see cref="Branch" /> property.</summary>
        private string _branch;

        /// <summary>The branch which will trigger the auto deployment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        public string Branch { get => this._branch; set => this._branch = value; }

        /// <summary>Backing field for <see cref="GithubActionConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IGithubActionConfiguration _githubActionConfiguration;

        /// <summary>
        /// Container App Revision Template with all possible settings and the
        /// defaults if user did not provide them. The defaults are populated
        /// as they were at the creation time
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IGithubActionConfiguration GithubActionConfiguration { get => (this._githubActionConfiguration = this._githubActionConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.GithubActionConfiguration()); set => this._githubActionConfiguration = value; }

        /// <summary>Context path</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string GithubActionConfigurationContextPath { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IGithubActionConfigurationInternal)GithubActionConfiguration).ContextPath; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IGithubActionConfigurationInternal)GithubActionConfiguration).ContextPath = value ?? null; }

        /// <summary>Image name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string GithubActionConfigurationImage { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IGithubActionConfigurationInternal)GithubActionConfiguration).Image; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IGithubActionConfigurationInternal)GithubActionConfiguration).Image = value ?? null; }

        /// <summary>Operation system</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string GithubActionConfigurationOS { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IGithubActionConfigurationInternal)GithubActionConfiguration).OS; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IGithubActionConfigurationInternal)GithubActionConfiguration).OS = value ?? null; }

        /// <summary>Code or Image</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string GithubActionConfigurationPublishType { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IGithubActionConfigurationInternal)GithubActionConfiguration).PublishType; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IGithubActionConfigurationInternal)GithubActionConfiguration).PublishType = value ?? null; }

        /// <summary>Runtime stack</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string GithubActionConfigurationRuntimeStack { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IGithubActionConfigurationInternal)GithubActionConfiguration).RuntimeStack; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IGithubActionConfigurationInternal)GithubActionConfiguration).RuntimeStack = value ?? null; }

        /// <summary>Runtime version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string GithubActionConfigurationRuntimeVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IGithubActionConfigurationInternal)GithubActionConfiguration).RuntimeVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IGithubActionConfigurationInternal)GithubActionConfiguration).RuntimeVersion = value ?? null; }

        /// <summary>Internal Acessors for GithubActionConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IGithubActionConfiguration Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlPropertiesInternal.GithubActionConfiguration { get => (this._githubActionConfiguration = this._githubActionConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.GithubActionConfiguration()); set { {_githubActionConfiguration = value;} } }

        /// <summary>Internal Acessors for GithubActionConfigurationAzureCredentials</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAzureCredentials Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlPropertiesInternal.GithubActionConfigurationAzureCredentials { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IGithubActionConfigurationInternal)GithubActionConfiguration).AzureCredentials; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IGithubActionConfigurationInternal)GithubActionConfiguration).AzureCredentials = value; }

        /// <summary>Internal Acessors for GithubActionConfigurationRegistryInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IRegistryInfo Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlPropertiesInternal.GithubActionConfigurationRegistryInfo { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IGithubActionConfigurationInternal)GithubActionConfiguration).RegistryInfo; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IGithubActionConfigurationInternal)GithubActionConfiguration).RegistryInfo = value; }

        /// <summary>Internal Acessors for OperationState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Support.SourceControlOperationState? Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlPropertiesInternal.OperationState { get => this._operationState; set { {_operationState = value;} } }

        /// <summary>Backing field for <see cref="OperationState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.App.Support.SourceControlOperationState? _operationState;

        /// <summary>Current provisioning State of the operation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.App.Support.SourceControlOperationState? OperationState { get => this._operationState; }

        /// <summary>registry secret.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string RegistryInfoRegistryPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IGithubActionConfigurationInternal)GithubActionConfiguration).RegistryInfoRegistryPassword; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IGithubActionConfigurationInternal)GithubActionConfiguration).RegistryInfoRegistryPassword = value ?? null; }

        /// <summary>registry server Url.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string RegistryInfoRegistryUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IGithubActionConfigurationInternal)GithubActionConfiguration).RegistryInfoRegistryUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IGithubActionConfigurationInternal)GithubActionConfiguration).RegistryInfoRegistryUrl = value ?? null; }

        /// <summary>registry username.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string RegistryInfoRegistryUserName { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IGithubActionConfigurationInternal)GithubActionConfiguration).RegistryInfoRegistryUserName; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IGithubActionConfigurationInternal)GithubActionConfiguration).RegistryInfoRegistryUserName = value ?? null; }

        /// <summary>Backing field for <see cref="RepoUrl" /> property.</summary>
        private string _repoUrl;

        /// <summary>The repo url which will be integrated to ContainerApp.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        public string RepoUrl { get => this._repoUrl; set => this._repoUrl = value; }

        /// <summary>Creates an new <see cref="SourceControlProperties" /> instance.</summary>
        public SourceControlProperties()
        {

        }
    }
    /// SourceControl resource specific properties
    public partial interface ISourceControlProperties :
        Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.IJsonSerializable
    {
        /// <summary>Client Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Client Id.",
        SerializedName = @"clientId",
        PossibleTypes = new [] { typeof(string) })]
        string AzureCredentialsClientId { get; set; }
        /// <summary>Client Secret.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Client Secret.",
        SerializedName = @"clientSecret",
        PossibleTypes = new [] { typeof(string) })]
        string AzureCredentialsClientSecret { get; set; }
        /// <summary>Subscription Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Subscription Id.",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string AzureCredentialsSubscriptionId { get; set; }
        /// <summary>Tenant Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Tenant Id.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string AzureCredentialsTenantId { get; set; }
        /// <summary>The branch which will trigger the auto deployment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The branch which will trigger the auto deployment",
        SerializedName = @"branch",
        PossibleTypes = new [] { typeof(string) })]
        string Branch { get; set; }
        /// <summary>Context path</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Context path",
        SerializedName = @"contextPath",
        PossibleTypes = new [] { typeof(string) })]
        string GithubActionConfigurationContextPath { get; set; }
        /// <summary>Image name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Image name",
        SerializedName = @"image",
        PossibleTypes = new [] { typeof(string) })]
        string GithubActionConfigurationImage { get; set; }
        /// <summary>Operation system</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Operation system",
        SerializedName = @"os",
        PossibleTypes = new [] { typeof(string) })]
        string GithubActionConfigurationOS { get; set; }
        /// <summary>Code or Image</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Code or Image",
        SerializedName = @"publishType",
        PossibleTypes = new [] { typeof(string) })]
        string GithubActionConfigurationPublishType { get; set; }
        /// <summary>Runtime stack</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Runtime stack",
        SerializedName = @"runtimeStack",
        PossibleTypes = new [] { typeof(string) })]
        string GithubActionConfigurationRuntimeStack { get; set; }
        /// <summary>Runtime version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Runtime version",
        SerializedName = @"runtimeVersion",
        PossibleTypes = new [] { typeof(string) })]
        string GithubActionConfigurationRuntimeVersion { get; set; }
        /// <summary>Current provisioning State of the operation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Current provisioning State of the operation",
        SerializedName = @"operationState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.App.Support.SourceControlOperationState) })]
        Microsoft.Azure.PowerShell.Cmdlets.App.Support.SourceControlOperationState? OperationState { get;  }
        /// <summary>registry secret.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"registry secret.",
        SerializedName = @"registryPassword",
        PossibleTypes = new [] { typeof(string) })]
        string RegistryInfoRegistryPassword { get; set; }
        /// <summary>registry server Url.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"registry server Url.",
        SerializedName = @"registryUrl",
        PossibleTypes = new [] { typeof(string) })]
        string RegistryInfoRegistryUrl { get; set; }
        /// <summary>registry username.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"registry username.",
        SerializedName = @"registryUserName",
        PossibleTypes = new [] { typeof(string) })]
        string RegistryInfoRegistryUserName { get; set; }
        /// <summary>The repo url which will be integrated to ContainerApp.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The repo url which will be integrated to ContainerApp.",
        SerializedName = @"repoUrl",
        PossibleTypes = new [] { typeof(string) })]
        string RepoUrl { get; set; }

    }
    /// SourceControl resource specific properties
    internal partial interface ISourceControlPropertiesInternal

    {
        /// <summary>Client Id.</summary>
        string AzureCredentialsClientId { get; set; }
        /// <summary>Client Secret.</summary>
        string AzureCredentialsClientSecret { get; set; }
        /// <summary>Subscription Id.</summary>
        string AzureCredentialsSubscriptionId { get; set; }
        /// <summary>Tenant Id.</summary>
        string AzureCredentialsTenantId { get; set; }
        /// <summary>The branch which will trigger the auto deployment</summary>
        string Branch { get; set; }
        /// <summary>
        /// Container App Revision Template with all possible settings and the
        /// defaults if user did not provide them. The defaults are populated
        /// as they were at the creation time
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IGithubActionConfiguration GithubActionConfiguration { get; set; }
        /// <summary>AzureCredentials configurations.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAzureCredentials GithubActionConfigurationAzureCredentials { get; set; }
        /// <summary>Context path</summary>
        string GithubActionConfigurationContextPath { get; set; }
        /// <summary>Image name</summary>
        string GithubActionConfigurationImage { get; set; }
        /// <summary>Operation system</summary>
        string GithubActionConfigurationOS { get; set; }
        /// <summary>Code or Image</summary>
        string GithubActionConfigurationPublishType { get; set; }
        /// <summary>Registry configurations.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IRegistryInfo GithubActionConfigurationRegistryInfo { get; set; }
        /// <summary>Runtime stack</summary>
        string GithubActionConfigurationRuntimeStack { get; set; }
        /// <summary>Runtime version</summary>
        string GithubActionConfigurationRuntimeVersion { get; set; }
        /// <summary>Current provisioning State of the operation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Support.SourceControlOperationState? OperationState { get; set; }
        /// <summary>registry secret.</summary>
        string RegistryInfoRegistryPassword { get; set; }
        /// <summary>registry server Url.</summary>
        string RegistryInfoRegistryUrl { get; set; }
        /// <summary>registry username.</summary>
        string RegistryInfoRegistryUserName { get; set; }
        /// <summary>The repo url which will be integrated to ContainerApp.</summary>
        string RepoUrl { get; set; }

    }
}