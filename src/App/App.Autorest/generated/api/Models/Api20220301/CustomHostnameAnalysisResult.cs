// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Extensions;

    /// <summary>Custom domain analysis.</summary>
    public partial class CustomHostnameAnalysisResult :
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResult,
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultInternal,
        Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResource" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.Resource();

        /// <summary>A records visible for this hostname.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string[] ARecord { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultPropertiesInternal)Property).ARecord; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultPropertiesInternal)Property).ARecord = value ?? null /* arrayOf */; }

        /// <summary>Alternate CName records visible for this hostname.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string[] AlternateCNameRecord { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultPropertiesInternal)Property).AlternateCNameRecord; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultPropertiesInternal)Property).AlternateCNameRecord = value ?? null /* arrayOf */; }

        /// <summary>Alternate TXT records visible for this hostname.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string[] AlternateTxtRecord { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultPropertiesInternal)Property).AlternateTxtRecord; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultPropertiesInternal)Property).AlternateTxtRecord = value ?? null /* arrayOf */; }

        /// <summary>CName records visible for this hostname.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string[] CNameRecord { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultPropertiesInternal)Property).CNameRecord; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultPropertiesInternal)Property).CNameRecord = value ?? null /* arrayOf */; }

        /// <summary>Standardized string to programmatically identify the error.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string Code { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultPropertiesInternal)Property).Code; }

        /// <summary>
        /// Name of the conflicting Container App on the Managed Environment if it's within the same subscription.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string ConflictingContainerAppResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultPropertiesInternal)Property).ConflictingContainerAppResourceId; }

        /// <summary>DNS verification test result.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.App.Support.DnsVerificationTestResult? CustomDomainVerificationTest { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultPropertiesInternal)Property).CustomDomainVerificationTest; }

        /// <summary>Details or the error</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IDefaultErrorResponseErrorDetailsItem[] Detail { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultPropertiesInternal)Property).Detail; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultPropertiesInternal)Property).Detail = value ?? null /* arrayOf */; }

        /// <summary>
        /// <code>true</code> if there is a conflict on the Container App's managed environment; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public bool? HasConflictOnManagedEnvironment { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultPropertiesInternal)Property).HasConflictOnManagedEnvironment; }

        /// <summary>Host name that was analyzed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string HostName { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultPropertiesInternal)Property).HostName; }

        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).Id; }

        /// <summary>More information to debug error.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string Innererror { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultPropertiesInternal)Property).Innererror; }

        /// <summary>
        /// <code>true</code> if hostname is already verified; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public bool? IsHostnameAlreadyVerified { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultPropertiesInternal)Property).IsHostnameAlreadyVerified; }

        /// <summary>Detailed error description and debugging information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string Message { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultPropertiesInternal)Property).Message; }

        /// <summary>Internal Acessors for Code</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultInternal.Code { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultPropertiesInternal)Property).Code; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultPropertiesInternal)Property).Code = value; }

        /// <summary>Internal Acessors for ConflictingContainerAppResourceId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultInternal.ConflictingContainerAppResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultPropertiesInternal)Property).ConflictingContainerAppResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultPropertiesInternal)Property).ConflictingContainerAppResourceId = value; }

        /// <summary>Internal Acessors for CustomDomainVerificationFailureInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IDefaultErrorResponse Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultInternal.CustomDomainVerificationFailureInfo { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultPropertiesInternal)Property).CustomDomainVerificationFailureInfo; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultPropertiesInternal)Property).CustomDomainVerificationFailureInfo = value; }

        /// <summary>Internal Acessors for CustomDomainVerificationFailureInfoError</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IDefaultErrorResponseError Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultInternal.CustomDomainVerificationFailureInfoError { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultPropertiesInternal)Property).CustomDomainVerificationFailureInfoError; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultPropertiesInternal)Property).CustomDomainVerificationFailureInfoError = value; }

        /// <summary>Internal Acessors for CustomDomainVerificationTest</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Support.DnsVerificationTestResult? Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultInternal.CustomDomainVerificationTest { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultPropertiesInternal)Property).CustomDomainVerificationTest; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultPropertiesInternal)Property).CustomDomainVerificationTest = value; }

        /// <summary>Internal Acessors for HasConflictOnManagedEnvironment</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultInternal.HasConflictOnManagedEnvironment { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultPropertiesInternal)Property).HasConflictOnManagedEnvironment; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultPropertiesInternal)Property).HasConflictOnManagedEnvironment = value; }

        /// <summary>Internal Acessors for HostName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultInternal.HostName { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultPropertiesInternal)Property).HostName; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultPropertiesInternal)Property).HostName = value; }

        /// <summary>Internal Acessors for Innererror</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultInternal.Innererror { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultPropertiesInternal)Property).Innererror; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultPropertiesInternal)Property).Innererror = value; }

        /// <summary>Internal Acessors for IsHostnameAlreadyVerified</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultInternal.IsHostnameAlreadyVerified { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultPropertiesInternal)Property).IsHostnameAlreadyVerified; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultPropertiesInternal)Property).IsHostnameAlreadyVerified = value; }

        /// <summary>Internal Acessors for Message</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultInternal.Message { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultPropertiesInternal)Property).Message; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultPropertiesInternal)Property).Message = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultProperties Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.CustomHostnameAnalysisResultProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for Target</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultInternal.Target { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultPropertiesInternal)Property).Target; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultPropertiesInternal)Property).Target = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.ISystemData Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultProperties _property;

        /// <summary>CustomHostnameAnalysisResult resource specific properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.CustomHostnameAnalysisResultProperties()); set => this._property = value; }

        /// <summary>Gets the resource group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        public string ResourceGroupName { get => (new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Success ? new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Groups["resourceGroupName"].Value : null); }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.App.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.App.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.App.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.App.Support.CreatedByType)""); }

        /// <summary>Detailed error description and debugging information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string Target { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultPropertiesInternal)Property).Target; }

        /// <summary>TXT records visible for this hostname.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string[] TxtRecord { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultPropertiesInternal)Property).TxtRecord; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultPropertiesInternal)Property).TxtRecord = value ?? null /* arrayOf */; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).Type; }

        /// <summary>Creates an new <see cref="CustomHostnameAnalysisResult" /> instance.</summary>
        public CustomHostnameAnalysisResult()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// Custom domain analysis.
    public partial interface ICustomHostnameAnalysisResult :
        Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResource
    {
        /// <summary>A records visible for this hostname.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A records visible for this hostname.",
        SerializedName = @"aRecords",
        PossibleTypes = new [] { typeof(string) })]
        string[] ARecord { get; set; }
        /// <summary>Alternate CName records visible for this hostname.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Alternate CName records visible for this hostname.",
        SerializedName = @"alternateCNameRecords",
        PossibleTypes = new [] { typeof(string) })]
        string[] AlternateCNameRecord { get; set; }
        /// <summary>Alternate TXT records visible for this hostname.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Alternate TXT records visible for this hostname.",
        SerializedName = @"alternateTxtRecords",
        PossibleTypes = new [] { typeof(string) })]
        string[] AlternateTxtRecord { get; set; }
        /// <summary>CName records visible for this hostname.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"CName records visible for this hostname.",
        SerializedName = @"cNameRecords",
        PossibleTypes = new [] { typeof(string) })]
        string[] CNameRecord { get; set; }
        /// <summary>Standardized string to programmatically identify the error.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Standardized string to programmatically identify the error.",
        SerializedName = @"code",
        PossibleTypes = new [] { typeof(string) })]
        string Code { get;  }
        /// <summary>
        /// Name of the conflicting Container App on the Managed Environment if it's within the same subscription.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Name of the conflicting Container App on the Managed Environment if it's within the same subscription.",
        SerializedName = @"conflictingContainerAppResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string ConflictingContainerAppResourceId { get;  }
        /// <summary>DNS verification test result.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"DNS verification test result.",
        SerializedName = @"customDomainVerificationTest",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.App.Support.DnsVerificationTestResult) })]
        Microsoft.Azure.PowerShell.Cmdlets.App.Support.DnsVerificationTestResult? CustomDomainVerificationTest { get;  }
        /// <summary>Details or the error</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Details or the error",
        SerializedName = @"details",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IDefaultErrorResponseErrorDetailsItem) })]
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IDefaultErrorResponseErrorDetailsItem[] Detail { get; set; }
        /// <summary>
        /// <code>true</code> if there is a conflict on the Container App's managed environment; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"<code>true</code> if there is a conflict on the Container App's managed environment; otherwise, <code>false</code>.",
        SerializedName = @"hasConflictOnManagedEnvironment",
        PossibleTypes = new [] { typeof(bool) })]
        bool? HasConflictOnManagedEnvironment { get;  }
        /// <summary>Host name that was analyzed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Host name that was analyzed",
        SerializedName = @"hostName",
        PossibleTypes = new [] { typeof(string) })]
        string HostName { get;  }
        /// <summary>More information to debug error.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"More information to debug error.",
        SerializedName = @"innererror",
        PossibleTypes = new [] { typeof(string) })]
        string Innererror { get;  }
        /// <summary>
        /// <code>true</code> if hostname is already verified; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"<code>true</code> if hostname is already verified; otherwise, <code>false</code>.",
        SerializedName = @"isHostnameAlreadyVerified",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsHostnameAlreadyVerified { get;  }
        /// <summary>Detailed error description and debugging information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Detailed error description and debugging information.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string Message { get;  }
        /// <summary>Detailed error description and debugging information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Detailed error description and debugging information.",
        SerializedName = @"target",
        PossibleTypes = new [] { typeof(string) })]
        string Target { get;  }
        /// <summary>TXT records visible for this hostname.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"TXT records visible for this hostname.",
        SerializedName = @"txtRecords",
        PossibleTypes = new [] { typeof(string) })]
        string[] TxtRecord { get; set; }

    }
    /// Custom domain analysis.
    internal partial interface ICustomHostnameAnalysisResultInternal :
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal
    {
        /// <summary>A records visible for this hostname.</summary>
        string[] ARecord { get; set; }
        /// <summary>Alternate CName records visible for this hostname.</summary>
        string[] AlternateCNameRecord { get; set; }
        /// <summary>Alternate TXT records visible for this hostname.</summary>
        string[] AlternateTxtRecord { get; set; }
        /// <summary>CName records visible for this hostname.</summary>
        string[] CNameRecord { get; set; }
        /// <summary>Standardized string to programmatically identify the error.</summary>
        string Code { get; set; }
        /// <summary>
        /// Name of the conflicting Container App on the Managed Environment if it's within the same subscription.
        /// </summary>
        string ConflictingContainerAppResourceId { get; set; }
        /// <summary>Raw failure information if DNS verification fails.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IDefaultErrorResponse CustomDomainVerificationFailureInfo { get; set; }
        /// <summary>Error model.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IDefaultErrorResponseError CustomDomainVerificationFailureInfoError { get; set; }
        /// <summary>DNS verification test result.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Support.DnsVerificationTestResult? CustomDomainVerificationTest { get; set; }
        /// <summary>Details or the error</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IDefaultErrorResponseErrorDetailsItem[] Detail { get; set; }
        /// <summary>
        /// <code>true</code> if there is a conflict on the Container App's managed environment; otherwise, <code>false</code>.
        /// </summary>
        bool? HasConflictOnManagedEnvironment { get; set; }
        /// <summary>Host name that was analyzed</summary>
        string HostName { get; set; }
        /// <summary>More information to debug error.</summary>
        string Innererror { get; set; }
        /// <summary>
        /// <code>true</code> if hostname is already verified; otherwise, <code>false</code>.
        /// </summary>
        bool? IsHostnameAlreadyVerified { get; set; }
        /// <summary>Detailed error description and debugging information.</summary>
        string Message { get; set; }
        /// <summary>CustomHostnameAnalysisResult resource specific properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomHostnameAnalysisResultProperties Property { get; set; }
        /// <summary>Detailed error description and debugging information.</summary>
        string Target { get; set; }
        /// <summary>TXT records visible for this hostname.</summary>
        string[] TxtRecord { get; set; }

    }
}