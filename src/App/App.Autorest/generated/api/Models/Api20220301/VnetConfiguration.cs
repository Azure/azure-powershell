// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Extensions;

    /// <summary>Configuration properties for apps environment to join a Virtual Network</summary>
    public partial class VnetConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IVnetConfiguration,
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IVnetConfigurationInternal
    {

        /// <summary>Backing field for <see cref="DockerBridgeCidr" /> property.</summary>
        private string _dockerBridgeCidr;

        /// <summary>
        /// CIDR notation IP range assigned to the Docker bridge, network. Must not overlap with any other provided IP ranges.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        public string DockerBridgeCidr { get => this._dockerBridgeCidr; set => this._dockerBridgeCidr = value; }

        /// <summary>Backing field for <see cref="InfrastructureSubnetId" /> property.</summary>
        private string _infrastructureSubnetId;

        /// <summary>
        /// Resource ID of a subnet for infrastructure components. This subnet must be in the same VNET as the subnet defined in runtimeSubnetId.
        /// Must not overlap with any other provided IP ranges.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        public string InfrastructureSubnetId { get => this._infrastructureSubnetId; set => this._infrastructureSubnetId = value; }

        /// <summary>Backing field for <see cref="Internal" /> property.</summary>
        private bool? _internal;

        /// <summary>
        /// Boolean indicating the environment only has an internal load balancer. These environments do not have a public static
        /// IP resource, must provide ControlPlaneSubnetResourceId and AppSubnetResourceId if enabling this property
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        public bool? Internal { get => this._internal; set => this._internal = value; }

        /// <summary>Backing field for <see cref="PlatformReservedCidr" /> property.</summary>
        private string _platformReservedCidr;

        /// <summary>
        /// IP range in CIDR notation that can be reserved for environment infrastructure IP addresses. Must not overlap with any
        /// other provided IP ranges.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        public string PlatformReservedCidr { get => this._platformReservedCidr; set => this._platformReservedCidr = value; }

        /// <summary>Backing field for <see cref="PlatformReservedDnsIP" /> property.</summary>
        private string _platformReservedDnsIP;

        /// <summary>
        /// An IP address from the IP range defined by platformReservedCidr that will be reserved for the internal DNS server.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        public string PlatformReservedDnsIP { get => this._platformReservedDnsIP; set => this._platformReservedDnsIP = value; }

        /// <summary>Backing field for <see cref="RuntimeSubnetId" /> property.</summary>
        private string _runtimeSubnetId;

        /// <summary>
        /// Resource ID of a subnet that Container App containers are injected into. This subnet must be in the same VNET as the subnet
        /// defined in infrastructureSubnetId. Must not overlap with any other provided IP ranges.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        public string RuntimeSubnetId { get => this._runtimeSubnetId; set => this._runtimeSubnetId = value; }

        /// <summary>Creates an new <see cref="VnetConfiguration" /> instance.</summary>
        public VnetConfiguration()
        {

        }
    }
    /// Configuration properties for apps environment to join a Virtual Network
    public partial interface IVnetConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.IJsonSerializable
    {
        /// <summary>
        /// CIDR notation IP range assigned to the Docker bridge, network. Must not overlap with any other provided IP ranges.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"CIDR notation IP range assigned to the Docker bridge, network. Must not overlap with any other provided IP ranges.",
        SerializedName = @"dockerBridgeCidr",
        PossibleTypes = new [] { typeof(string) })]
        string DockerBridgeCidr { get; set; }
        /// <summary>
        /// Resource ID of a subnet for infrastructure components. This subnet must be in the same VNET as the subnet defined in runtimeSubnetId.
        /// Must not overlap with any other provided IP ranges.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID of a subnet for infrastructure components. This subnet must be in the same VNET as the subnet defined in runtimeSubnetId. Must not overlap with any other provided IP ranges.",
        SerializedName = @"infrastructureSubnetId",
        PossibleTypes = new [] { typeof(string) })]
        string InfrastructureSubnetId { get; set; }
        /// <summary>
        /// Boolean indicating the environment only has an internal load balancer. These environments do not have a public static
        /// IP resource, must provide ControlPlaneSubnetResourceId and AppSubnetResourceId if enabling this property
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Boolean indicating the environment only has an internal load balancer. These environments do not have a public static IP resource, must provide ControlPlaneSubnetResourceId and AppSubnetResourceId if enabling this property",
        SerializedName = @"internal",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Internal { get; set; }
        /// <summary>
        /// IP range in CIDR notation that can be reserved for environment infrastructure IP addresses. Must not overlap with any
        /// other provided IP ranges.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"IP range in CIDR notation that can be reserved for environment infrastructure IP addresses. Must not overlap with any other provided IP ranges.",
        SerializedName = @"platformReservedCidr",
        PossibleTypes = new [] { typeof(string) })]
        string PlatformReservedCidr { get; set; }
        /// <summary>
        /// An IP address from the IP range defined by platformReservedCidr that will be reserved for the internal DNS server.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @" An IP address from the IP range defined by platformReservedCidr that will be reserved for the internal DNS server.",
        SerializedName = @"platformReservedDnsIP",
        PossibleTypes = new [] { typeof(string) })]
        string PlatformReservedDnsIP { get; set; }
        /// <summary>
        /// Resource ID of a subnet that Container App containers are injected into. This subnet must be in the same VNET as the subnet
        /// defined in infrastructureSubnetId. Must not overlap with any other provided IP ranges.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID of a subnet that Container App containers are injected into. This subnet must be in the same VNET as the subnet defined in infrastructureSubnetId. Must not overlap with any other provided IP ranges.",
        SerializedName = @"runtimeSubnetId",
        PossibleTypes = new [] { typeof(string) })]
        string RuntimeSubnetId { get; set; }

    }
    /// Configuration properties for apps environment to join a Virtual Network
    internal partial interface IVnetConfigurationInternal

    {
        /// <summary>
        /// CIDR notation IP range assigned to the Docker bridge, network. Must not overlap with any other provided IP ranges.
        /// </summary>
        string DockerBridgeCidr { get; set; }
        /// <summary>
        /// Resource ID of a subnet for infrastructure components. This subnet must be in the same VNET as the subnet defined in runtimeSubnetId.
        /// Must not overlap with any other provided IP ranges.
        /// </summary>
        string InfrastructureSubnetId { get; set; }
        /// <summary>
        /// Boolean indicating the environment only has an internal load balancer. These environments do not have a public static
        /// IP resource, must provide ControlPlaneSubnetResourceId and AppSubnetResourceId if enabling this property
        /// </summary>
        bool? Internal { get; set; }
        /// <summary>
        /// IP range in CIDR notation that can be reserved for environment infrastructure IP addresses. Must not overlap with any
        /// other provided IP ranges.
        /// </summary>
        string PlatformReservedCidr { get; set; }
        /// <summary>
        /// An IP address from the IP range defined by platformReservedCidr that will be reserved for the internal DNS server.
        /// </summary>
        string PlatformReservedDnsIP { get; set; }
        /// <summary>
        /// Resource ID of a subnet that Container App containers are injected into. This subnet must be in the same VNET as the subnet
        /// defined in infrastructureSubnetId. Must not overlap with any other provided IP ranges.
        /// </summary>
        string RuntimeSubnetId { get; set; }

    }
}