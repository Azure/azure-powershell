// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Extensions;

    /// <summary>Volume definitions for the Container App.</summary>
    public partial class Volume :
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IVolume,
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IVolumeInternal
    {

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Volume name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="StorageName" /> property.</summary>
        private string _storageName;

        /// <summary>Name of storage resource. No need to provide for EmptyDir.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        public string StorageName { get => this._storageName; set => this._storageName = value; }

        /// <summary>Backing field for <see cref="StorageType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.App.Support.StorageType? _storageType;

        /// <summary>Storage type for the volume. If not provided, use EmptyDir.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.App.Support.StorageType? StorageType { get => this._storageType; set => this._storageType = value; }

        /// <summary>Creates an new <see cref="Volume" /> instance.</summary>
        public Volume()
        {

        }
    }
    /// Volume definitions for the Container App.
    public partial interface IVolume :
        Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.IJsonSerializable
    {
        /// <summary>Volume name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Volume name.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>Name of storage resource. No need to provide for EmptyDir.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of storage resource. No need to provide for EmptyDir.",
        SerializedName = @"storageName",
        PossibleTypes = new [] { typeof(string) })]
        string StorageName { get; set; }
        /// <summary>Storage type for the volume. If not provided, use EmptyDir.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Storage type for the volume. If not provided, use EmptyDir.",
        SerializedName = @"storageType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.App.Support.StorageType) })]
        Microsoft.Azure.PowerShell.Cmdlets.App.Support.StorageType? StorageType { get; set; }

    }
    /// Volume definitions for the Container App.
    internal partial interface IVolumeInternal

    {
        /// <summary>Volume name.</summary>
        string Name { get; set; }
        /// <summary>Name of storage resource. No need to provide for EmptyDir.</summary>
        string StorageName { get; set; }
        /// <summary>Storage type for the volume. If not provided, use EmptyDir.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Support.StorageType? StorageType { get; set; }

    }
}