// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.App.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Extensions;

    /// <summary>Container App base container definition.</summary>
    public partial class BaseContainer :
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.IBaseContainer,
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.IBaseContainerInternal
    {

        /// <summary>Backing field for <see cref="Arg" /> property.</summary>
        private System.Collections.Generic.List<string> _arg;

        /// <summary>Container start command arguments.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> Arg { get => this._arg; set => this._arg = value; }

        /// <summary>Backing field for <see cref="Command" /> property.</summary>
        private System.Collections.Generic.List<string> _command;

        /// <summary>Container start command.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> Command { get => this._command; set => this._command = value; }

        /// <summary>Backing field for <see cref="Env" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.App.Models.IEnvironmentVar> _env;

        /// <summary>Container environment variables.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.App.Models.IEnvironmentVar> Env { get => this._env; set => this._env = value; }

        /// <summary>Backing field for <see cref="Image" /> property.</summary>
        private string _image;

        /// <summary>Container image tag.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        public string Image { get => this._image; set => this._image = value; }

        /// <summary>Internal Acessors for Resource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.IContainerResources Microsoft.Azure.PowerShell.Cmdlets.App.Models.IBaseContainerInternal.Resource { get => (this._resource = this._resource ?? new Microsoft.Azure.PowerShell.Cmdlets.App.Models.ContainerResources()); set { {_resource = value;} } }

        /// <summary>Internal Acessors for ResourceEphemeralStorage</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.App.Models.IBaseContainerInternal.ResourceEphemeralStorage { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IContainerResourcesInternal)Resource).EphemeralStorage; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IContainerResourcesInternal)Resource).EphemeralStorage = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Custom container name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="Resource" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.App.Models.IContainerResources _resource;

        /// <summary>Container resource requirements.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.App.Models.IContainerResources Resource { get => (this._resource = this._resource ?? new Microsoft.Azure.PowerShell.Cmdlets.App.Models.ContainerResources()); set => this._resource = value; }

        /// <summary>Required CPU in cores, e.g. 0.5</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public double? ResourceCpu { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IContainerResourcesInternal)Resource).Cpu; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IContainerResourcesInternal)Resource).Cpu = value ?? default(double); }

        /// <summary>Ephemeral Storage, e.g. "1Gi"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string ResourceEphemeralStorage { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IContainerResourcesInternal)Resource).EphemeralStorage; }

        /// <summary>Required memory, e.g. "250Mb"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string ResourceMemory { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IContainerResourcesInternal)Resource).Memory; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IContainerResourcesInternal)Resource).Memory = value ?? null; }

        /// <summary>Backing field for <see cref="VolumeMount" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.App.Models.IVolumeMount> _volumeMount;

        /// <summary>Container volume mounts.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.App.Models.IVolumeMount> VolumeMount { get => this._volumeMount; set => this._volumeMount = value; }

        /// <summary>Creates an new <see cref="BaseContainer" /> instance.</summary>
        public BaseContainer()
        {

        }
    }
    /// Container App base container definition.
    public partial interface IBaseContainer :
        Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.IJsonSerializable
    {
        /// <summary>Container start command arguments.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Container start command arguments.",
        SerializedName = @"args",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> Arg { get; set; }
        /// <summary>Container start command.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Container start command.",
        SerializedName = @"command",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> Command { get; set; }
        /// <summary>Container environment variables.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Container environment variables.",
        SerializedName = @"env",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.App.Models.IEnvironmentVar) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.App.Models.IEnvironmentVar> Env { get; set; }
        /// <summary>Container image tag.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Container image tag.",
        SerializedName = @"image",
        PossibleTypes = new [] { typeof(string) })]
        string Image { get; set; }
        /// <summary>Custom container name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Custom container name.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>Required CPU in cores, e.g. 0.5</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Required CPU in cores, e.g. 0.5",
        SerializedName = @"cpu",
        PossibleTypes = new [] { typeof(double) })]
        double? ResourceCpu { get; set; }
        /// <summary>Ephemeral Storage, e.g. "1Gi"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Ephemeral Storage, e.g. ""1Gi""",
        SerializedName = @"ephemeralStorage",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceEphemeralStorage { get;  }
        /// <summary>Required memory, e.g. "250Mb"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Required memory, e.g. ""250Mb""",
        SerializedName = @"memory",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceMemory { get; set; }
        /// <summary>Container volume mounts.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Container volume mounts.",
        SerializedName = @"volumeMounts",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.App.Models.IVolumeMount) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.App.Models.IVolumeMount> VolumeMount { get; set; }

    }
    /// Container App base container definition.
    internal partial interface IBaseContainerInternal

    {
        /// <summary>Container start command arguments.</summary>
        System.Collections.Generic.List<string> Arg { get; set; }
        /// <summary>Container start command.</summary>
        System.Collections.Generic.List<string> Command { get; set; }
        /// <summary>Container environment variables.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.App.Models.IEnvironmentVar> Env { get; set; }
        /// <summary>Container image tag.</summary>
        string Image { get; set; }
        /// <summary>Custom container name.</summary>
        string Name { get; set; }
        /// <summary>Container resource requirements.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.IContainerResources Resource { get; set; }
        /// <summary>Required CPU in cores, e.g. 0.5</summary>
        double? ResourceCpu { get; set; }
        /// <summary>Ephemeral Storage, e.g. "1Gi"</summary>
        string ResourceEphemeralStorage { get; set; }
        /// <summary>Required memory, e.g. "250Mb"</summary>
        string ResourceMemory { get; set; }
        /// <summary>Container volume mounts.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.App.Models.IVolumeMount> VolumeMount { get; set; }

    }
}