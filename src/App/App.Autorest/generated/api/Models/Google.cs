// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.App.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Extensions;

    /// <summary>The configuration settings of the Google provider.</summary>
    public partial class Google :
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.IGoogle,
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.IGoogleInternal
    {

        /// <summary>Backing field for <see cref="Enabled" /> property.</summary>
        private bool? _enabled;

        /// <summary>
        /// <code>false</code> if the Google provider should not be enabled despite the set registration; otherwise, <code>true</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        public bool? Enabled { get => this._enabled; set => this._enabled = value; }

        /// <summary>Backing field for <see cref="Login" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.App.Models.ILoginScopes _login;

        /// <summary>The configuration settings of the login flow.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.App.Models.ILoginScopes Login { get => (this._login = this._login ?? new Microsoft.Azure.PowerShell.Cmdlets.App.Models.LoginScopes()); set => this._login = value; }

        /// <summary>A list of the scopes that should be requested while authenticating.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> LoginScope { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.ILoginScopesInternal)Login).Scope; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.ILoginScopesInternal)Login).Scope = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for Login</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.ILoginScopes Microsoft.Azure.PowerShell.Cmdlets.App.Models.IGoogleInternal.Login { get => (this._login = this._login ?? new Microsoft.Azure.PowerShell.Cmdlets.App.Models.LoginScopes()); set { {_login = value;} } }

        /// <summary>Internal Acessors for Registration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.IClientRegistration Microsoft.Azure.PowerShell.Cmdlets.App.Models.IGoogleInternal.Registration { get => (this._registration = this._registration ?? new Microsoft.Azure.PowerShell.Cmdlets.App.Models.ClientRegistration()); set { {_registration = value;} } }

        /// <summary>Internal Acessors for Validation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.IAllowedAudiencesValidation Microsoft.Azure.PowerShell.Cmdlets.App.Models.IGoogleInternal.Validation { get => (this._validation = this._validation ?? new Microsoft.Azure.PowerShell.Cmdlets.App.Models.AllowedAudiencesValidation()); set { {_validation = value;} } }

        /// <summary>Backing field for <see cref="Registration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.App.Models.IClientRegistration _registration;

        /// <summary>The configuration settings of the app registration for the Google provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.App.Models.IClientRegistration Registration { get => (this._registration = this._registration ?? new Microsoft.Azure.PowerShell.Cmdlets.App.Models.ClientRegistration()); set => this._registration = value; }

        /// <summary>The Client ID of the app used for login.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string RegistrationClientId { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IClientRegistrationInternal)Registration).ClientId; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IClientRegistrationInternal)Registration).ClientId = value ?? null; }

        /// <summary>The app setting name that contains the client secret.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string RegistrationClientSecretSettingName { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IClientRegistrationInternal)Registration).ClientSecretSettingName; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IClientRegistrationInternal)Registration).ClientSecretSettingName = value ?? null; }

        /// <summary>Backing field for <see cref="Validation" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.App.Models.IAllowedAudiencesValidation _validation;

        /// <summary>The configuration settings of the Azure Active Directory token validation flow.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.App.Models.IAllowedAudiencesValidation Validation { get => (this._validation = this._validation ?? new Microsoft.Azure.PowerShell.Cmdlets.App.Models.AllowedAudiencesValidation()); set => this._validation = value; }

        /// <summary>
        /// The configuration settings of the allowed list of audiences from which to validate the JWT token.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> ValidationAllowedAudience { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IAllowedAudiencesValidationInternal)Validation).AllowedAudience; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IAllowedAudiencesValidationInternal)Validation).AllowedAudience = value ?? null /* arrayOf */; }

        /// <summary>Creates an new <see cref="Google" /> instance.</summary>
        public Google()
        {

        }
    }
    /// The configuration settings of the Google provider.
    public partial interface IGoogle :
        Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.IJsonSerializable
    {
        /// <summary>
        /// <code>false</code> if the Google provider should not be enabled despite the set registration; otherwise, <code>true</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"<code>false</code> if the Google provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Enabled { get; set; }
        /// <summary>A list of the scopes that should be requested while authenticating.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"A list of the scopes that should be requested while authenticating.",
        SerializedName = @"scopes",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> LoginScope { get; set; }
        /// <summary>The Client ID of the app used for login.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The Client ID of the app used for login.",
        SerializedName = @"clientId",
        PossibleTypes = new [] { typeof(string) })]
        string RegistrationClientId { get; set; }
        /// <summary>The app setting name that contains the client secret.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The app setting name that contains the client secret.",
        SerializedName = @"clientSecretSettingName",
        PossibleTypes = new [] { typeof(string) })]
        string RegistrationClientSecretSettingName { get; set; }
        /// <summary>
        /// The configuration settings of the allowed list of audiences from which to validate the JWT token.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The configuration settings of the allowed list of audiences from which to validate the JWT token.",
        SerializedName = @"allowedAudiences",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> ValidationAllowedAudience { get; set; }

    }
    /// The configuration settings of the Google provider.
    internal partial interface IGoogleInternal

    {
        /// <summary>
        /// <code>false</code> if the Google provider should not be enabled despite the set registration; otherwise, <code>true</code>.
        /// </summary>
        bool? Enabled { get; set; }
        /// <summary>The configuration settings of the login flow.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.ILoginScopes Login { get; set; }
        /// <summary>A list of the scopes that should be requested while authenticating.</summary>
        System.Collections.Generic.List<string> LoginScope { get; set; }
        /// <summary>The configuration settings of the app registration for the Google provider.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.IClientRegistration Registration { get; set; }
        /// <summary>The Client ID of the app used for login.</summary>
        string RegistrationClientId { get; set; }
        /// <summary>The app setting name that contains the client secret.</summary>
        string RegistrationClientSecretSettingName { get; set; }
        /// <summary>The configuration settings of the Azure Active Directory token validation flow.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.IAllowedAudiencesValidation Validation { get; set; }
        /// <summary>
        /// The configuration settings of the allowed list of audiences from which to validate the JWT token.
        /// </summary>
        System.Collections.Generic.List<string> ValidationAllowedAudience { get; set; }

    }
}