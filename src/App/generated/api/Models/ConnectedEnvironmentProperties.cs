// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.App.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Extensions;

    /// <summary>ConnectedEnvironment resource specific properties</summary>
    public partial class ConnectedEnvironmentProperties :
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.IConnectedEnvironmentProperties,
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.IConnectedEnvironmentPropertiesInternal
    {

        /// <summary>Backing field for <see cref="CustomDomainConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.App.Models.ICustomDomainConfiguration _customDomainConfiguration;

        /// <summary>Custom domain configuration for the environment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.App.Models.ICustomDomainConfiguration CustomDomainConfiguration { get => (this._customDomainConfiguration = this._customDomainConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.App.Models.CustomDomainConfiguration()); set => this._customDomainConfiguration = value; }

        /// <summary>Certificate password.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public System.Security.SecureString CustomDomainConfigurationCertificatePassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.ICustomDomainConfigurationInternal)CustomDomainConfiguration).CertificatePassword; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.ICustomDomainConfigurationInternal)CustomDomainConfiguration).CertificatePassword = value ?? null; }

        /// <summary>PFX or PEM blob</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public byte[] CustomDomainConfigurationCertificateValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.ICustomDomainConfigurationInternal)CustomDomainConfiguration).CertificateValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.ICustomDomainConfigurationInternal)CustomDomainConfiguration).CertificateValue = value ?? null /* byte array */; }

        /// <summary>Id used to verify domain name ownership</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string CustomDomainConfigurationCustomDomainVerificationId { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.ICustomDomainConfigurationInternal)CustomDomainConfiguration).CustomDomainVerificationId; }

        /// <summary>Dns suffix for the environment domain</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string CustomDomainConfigurationDnsSuffix { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.ICustomDomainConfigurationInternal)CustomDomainConfiguration).DnsSuffix; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.ICustomDomainConfigurationInternal)CustomDomainConfiguration).DnsSuffix = value ?? null; }

        /// <summary>Certificate expiration date.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public global::System.DateTime? CustomDomainConfigurationExpirationDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.ICustomDomainConfigurationInternal)CustomDomainConfiguration).ExpirationDate; }

        /// <summary>Subject name of the certificate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string CustomDomainConfigurationSubjectName { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.ICustomDomainConfigurationInternal)CustomDomainConfiguration).SubjectName; }

        /// <summary>Certificate thumbprint.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string CustomDomainConfigurationThumbprint { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.ICustomDomainConfigurationInternal)CustomDomainConfiguration).Thumbprint; }

        /// <summary>Backing field for <see cref="DaprAiConnectionString" /> property.</summary>
        private string _daprAiConnectionString;

        /// <summary>
        /// Application Insights connection string used by Dapr to export Service to Service communication telemetry
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        public string DaprAiConnectionString { get => this._daprAiConnectionString; set => this._daprAiConnectionString = value; }

        /// <summary>Backing field for <see cref="DefaultDomain" /> property.</summary>
        private string _defaultDomain;

        /// <summary>Default Domain Name for the cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        public string DefaultDomain { get => this._defaultDomain; }

        /// <summary>Backing field for <see cref="DeploymentError" /> property.</summary>
        private string _deploymentError;

        /// <summary>Any errors that occurred during deployment or deployment validation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        public string DeploymentError { get => this._deploymentError; }

        /// <summary>Internal Acessors for CustomDomainConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.ICustomDomainConfiguration Microsoft.Azure.PowerShell.Cmdlets.App.Models.IConnectedEnvironmentPropertiesInternal.CustomDomainConfiguration { get => (this._customDomainConfiguration = this._customDomainConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.App.Models.CustomDomainConfiguration()); set { {_customDomainConfiguration = value;} } }

        /// <summary>Internal Acessors for CustomDomainConfigurationCustomDomainVerificationId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.App.Models.IConnectedEnvironmentPropertiesInternal.CustomDomainConfigurationCustomDomainVerificationId { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.ICustomDomainConfigurationInternal)CustomDomainConfiguration).CustomDomainVerificationId; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.ICustomDomainConfigurationInternal)CustomDomainConfiguration).CustomDomainVerificationId = value; }

        /// <summary>Internal Acessors for CustomDomainConfigurationExpirationDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.App.Models.IConnectedEnvironmentPropertiesInternal.CustomDomainConfigurationExpirationDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.ICustomDomainConfigurationInternal)CustomDomainConfiguration).ExpirationDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.ICustomDomainConfigurationInternal)CustomDomainConfiguration).ExpirationDate = value; }

        /// <summary>Internal Acessors for CustomDomainConfigurationSubjectName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.App.Models.IConnectedEnvironmentPropertiesInternal.CustomDomainConfigurationSubjectName { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.ICustomDomainConfigurationInternal)CustomDomainConfiguration).SubjectName; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.ICustomDomainConfigurationInternal)CustomDomainConfiguration).SubjectName = value; }

        /// <summary>Internal Acessors for CustomDomainConfigurationThumbprint</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.App.Models.IConnectedEnvironmentPropertiesInternal.CustomDomainConfigurationThumbprint { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.ICustomDomainConfigurationInternal)CustomDomainConfiguration).Thumbprint; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.ICustomDomainConfigurationInternal)CustomDomainConfiguration).Thumbprint = value; }

        /// <summary>Internal Acessors for DefaultDomain</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.App.Models.IConnectedEnvironmentPropertiesInternal.DefaultDomain { get => this._defaultDomain; set { {_defaultDomain = value;} } }

        /// <summary>Internal Acessors for DeploymentError</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.App.Models.IConnectedEnvironmentPropertiesInternal.DeploymentError { get => this._deploymentError; set { {_deploymentError = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.App.Models.IConnectedEnvironmentPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>Provisioning state of the Kubernetes Environment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="StaticIP" /> property.</summary>
        private string _staticIP;

        /// <summary>Static IP of the connectedEnvironment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        public string StaticIP { get => this._staticIP; set => this._staticIP = value; }

        /// <summary>Creates an new <see cref="ConnectedEnvironmentProperties" /> instance.</summary>
        public ConnectedEnvironmentProperties()
        {

        }
    }
    /// ConnectedEnvironment resource specific properties
    public partial interface IConnectedEnvironmentProperties :
        Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.IJsonSerializable
    {
        /// <summary>Certificate password.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = false,
        Create = true,
        Update = false,
        Description = @"Certificate password.",
        SerializedName = @"certificatePassword",
        PossibleTypes = new [] { typeof(System.Security.SecureString) })]
        System.Security.SecureString CustomDomainConfigurationCertificatePassword { get; set; }
        /// <summary>PFX or PEM blob</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"PFX or PEM blob",
        SerializedName = @"certificateValue",
        PossibleTypes = new [] { typeof(byte[]) })]
        byte[] CustomDomainConfigurationCertificateValue { get; set; }
        /// <summary>Id used to verify domain name ownership</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Id used to verify domain name ownership",
        SerializedName = @"customDomainVerificationId",
        PossibleTypes = new [] { typeof(string) })]
        string CustomDomainConfigurationCustomDomainVerificationId { get;  }
        /// <summary>Dns suffix for the environment domain</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"Dns suffix for the environment domain",
        SerializedName = @"dnsSuffix",
        PossibleTypes = new [] { typeof(string) })]
        string CustomDomainConfigurationDnsSuffix { get; set; }
        /// <summary>Certificate expiration date.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Certificate expiration date.",
        SerializedName = @"expirationDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CustomDomainConfigurationExpirationDate { get;  }
        /// <summary>Subject name of the certificate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Subject name of the certificate.",
        SerializedName = @"subjectName",
        PossibleTypes = new [] { typeof(string) })]
        string CustomDomainConfigurationSubjectName { get;  }
        /// <summary>Certificate thumbprint.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Certificate thumbprint.",
        SerializedName = @"thumbprint",
        PossibleTypes = new [] { typeof(string) })]
        string CustomDomainConfigurationThumbprint { get;  }
        /// <summary>
        /// Application Insights connection string used by Dapr to export Service to Service communication telemetry
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Application Insights connection string used by Dapr to export Service to Service communication telemetry",
        SerializedName = @"daprAIConnectionString",
        PossibleTypes = new [] { typeof(string) })]
        string DaprAiConnectionString { get; set; }
        /// <summary>Default Domain Name for the cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Default Domain Name for the cluster",
        SerializedName = @"defaultDomain",
        PossibleTypes = new [] { typeof(string) })]
        string DefaultDomain { get;  }
        /// <summary>Any errors that occurred during deployment or deployment validation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Any errors that occurred during deployment or deployment validation",
        SerializedName = @"deploymentErrors",
        PossibleTypes = new [] { typeof(string) })]
        string DeploymentError { get;  }
        /// <summary>Provisioning state of the Kubernetes Environment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Provisioning state of the Kubernetes Environment.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.App.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled", "Waiting", "InitializationInProgress", "InfrastructureSetupInProgress", "InfrastructureSetupComplete", "ScheduledForDelete")]
        string ProvisioningState { get;  }
        /// <summary>Static IP of the connectedEnvironment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Static IP of the connectedEnvironment",
        SerializedName = @"staticIp",
        PossibleTypes = new [] { typeof(string) })]
        string StaticIP { get; set; }

    }
    /// ConnectedEnvironment resource specific properties
    internal partial interface IConnectedEnvironmentPropertiesInternal

    {
        /// <summary>Custom domain configuration for the environment</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.ICustomDomainConfiguration CustomDomainConfiguration { get; set; }
        /// <summary>Certificate password.</summary>
        System.Security.SecureString CustomDomainConfigurationCertificatePassword { get; set; }
        /// <summary>PFX or PEM blob</summary>
        byte[] CustomDomainConfigurationCertificateValue { get; set; }
        /// <summary>Id used to verify domain name ownership</summary>
        string CustomDomainConfigurationCustomDomainVerificationId { get; set; }
        /// <summary>Dns suffix for the environment domain</summary>
        string CustomDomainConfigurationDnsSuffix { get; set; }
        /// <summary>Certificate expiration date.</summary>
        global::System.DateTime? CustomDomainConfigurationExpirationDate { get; set; }
        /// <summary>Subject name of the certificate.</summary>
        string CustomDomainConfigurationSubjectName { get; set; }
        /// <summary>Certificate thumbprint.</summary>
        string CustomDomainConfigurationThumbprint { get; set; }
        /// <summary>
        /// Application Insights connection string used by Dapr to export Service to Service communication telemetry
        /// </summary>
        string DaprAiConnectionString { get; set; }
        /// <summary>Default Domain Name for the cluster</summary>
        string DefaultDomain { get; set; }
        /// <summary>Any errors that occurred during deployment or deployment validation</summary>
        string DeploymentError { get; set; }
        /// <summary>Provisioning state of the Kubernetes Environment.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.App.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled", "Waiting", "InitializationInProgress", "InfrastructureSetupInProgress", "InfrastructureSetupComplete", "ScheduledForDelete")]
        string ProvisioningState { get; set; }
        /// <summary>Static IP of the connectedEnvironment</summary>
        string StaticIP { get; set; }

    }
}