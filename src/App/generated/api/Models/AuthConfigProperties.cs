// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.App.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Extensions;

    /// <summary>AuthConfig resource specific properties</summary>
    public partial class AuthConfigProperties :
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.IAuthConfigProperties,
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.IAuthConfigPropertiesInternal
    {

        /// <summary>The convention used when determining the session cookie's expiration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string CookieExpirationConvention { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.ILoginInternal)Login).CookieExpirationConvention; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.ILoginInternal)Login).CookieExpirationConvention = value ?? null; }

        /// <summary>The time after the request is made when the session cookie should expire.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string CookieExpirationTimeToExpiration { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.ILoginInternal)Login).CookieExpirationTimeToExpiration; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.ILoginInternal)Login).CookieExpirationTimeToExpiration = value ?? null; }

        /// <summary>The convention used to determine the url of the request made.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string ForwardProxyConvention { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IHttpSettingsInternal)HttpSetting).ForwardProxyConvention; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IHttpSettingsInternal)HttpSetting).ForwardProxyConvention = value ?? null; }

        /// <summary>The name of the header containing the host of the request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string ForwardProxyCustomHostHeaderName { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IHttpSettingsInternal)HttpSetting).ForwardProxyCustomHostHeaderName; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IHttpSettingsInternal)HttpSetting).ForwardProxyCustomHostHeaderName = value ?? null; }

        /// <summary>The name of the header containing the scheme of the request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string ForwardProxyCustomProtoHeaderName { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IHttpSettingsInternal)HttpSetting).ForwardProxyCustomProtoHeaderName; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IHttpSettingsInternal)HttpSetting).ForwardProxyCustomProtoHeaderName = value ?? null; }

        /// <summary>Backing field for <see cref="GlobalValidation" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.App.Models.IGlobalValidation _globalValidation;

        /// <summary>
        /// The configuration settings that determines the validation flow of users using Service Authentication/Authorization.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.App.Models.IGlobalValidation GlobalValidation { get => (this._globalValidation = this._globalValidation ?? new Microsoft.Azure.PowerShell.Cmdlets.App.Models.GlobalValidation()); set => this._globalValidation = value; }

        /// <summary>
        /// The paths for which unauthenticated flow would not be redirected to the login page.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> GlobalValidationExcludedPath { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IGlobalValidationInternal)GlobalValidation).ExcludedPath; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IGlobalValidationInternal)GlobalValidation).ExcludedPath = value ?? null /* arrayOf */; }

        /// <summary>
        /// The default authentication provider to use when multiple providers are configured.
        /// This setting is only needed if multiple providers are configured and the unauthenticated client
        /// action is set to "RedirectToLoginPage".
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string GlobalValidationRedirectToProvider { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IGlobalValidationInternal)GlobalValidation).RedirectToProvider; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IGlobalValidationInternal)GlobalValidation).RedirectToProvider = value ?? null; }

        /// <summary>The action to take when an unauthenticated client attempts to access the app.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string GlobalValidationUnauthenticatedClientAction { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IGlobalValidationInternal)GlobalValidation).UnauthenticatedClientAction; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IGlobalValidationInternal)GlobalValidation).UnauthenticatedClientAction = value ?? null; }

        /// <summary>Backing field for <see cref="HttpSetting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.App.Models.IHttpSettings _httpSetting;

        /// <summary>
        /// The configuration settings of the HTTP requests for authentication and authorization requests made against ContainerApp
        /// Service Authentication/Authorization.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.App.Models.IHttpSettings HttpSetting { get => (this._httpSetting = this._httpSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.App.Models.HttpSettings()); set => this._httpSetting = value; }

        /// <summary>
        /// <code>false</code> if the authentication/authorization responses not having the HTTPS scheme are permissible; otherwise,
        /// <code>true</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public bool? HttpSettingRequireHttps { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IHttpSettingsInternal)HttpSetting).RequireHttps; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IHttpSettingsInternal)HttpSetting).RequireHttps = value ?? default(bool); }

        /// <summary>Backing field for <see cref="IdentityProvider" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.App.Models.IIdentityProviders _identityProvider;

        /// <summary>
        /// The configuration settings of each of the identity providers used to configure ContainerApp Service Authentication/Authorization.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.App.Models.IIdentityProviders IdentityProvider { get => (this._identityProvider = this._identityProvider ?? new Microsoft.Azure.PowerShell.Cmdlets.App.Models.IdentityProviders()); set => this._identityProvider = value; }

        /// <summary>Backing field for <see cref="Login" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.App.Models.ILogin _login;

        /// <summary>
        /// The configuration settings of the login flow of users using ContainerApp Service Authentication/Authorization.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.App.Models.ILogin Login { get => (this._login = this._login ?? new Microsoft.Azure.PowerShell.Cmdlets.App.Models.Login()); set => this._login = value; }

        /// <summary>
        /// External URLs that can be redirected to as part of logging in or logging out of the app. Note that the query string part
        /// of the URL is ignored.
        /// This is an advanced setting typically only needed by Windows Store application backends.
        /// Note that URLs within the current domain are always implicitly allowed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> LoginAllowedExternalRedirectUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.ILoginInternal)Login).AllowedExternalRedirectUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.ILoginInternal)Login).AllowedExternalRedirectUrl = value ?? null /* arrayOf */; }

        /// <summary>
        /// <code>true</code> if the fragments from the request are preserved after the login request is made; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public bool? LoginPreserveUrlFragmentsForLogin { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.ILoginInternal)Login).PreserveUrlFragmentsForLogin; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.ILoginInternal)Login).PreserveUrlFragmentsForLogin = value ?? default(bool); }

        /// <summary>Internal Acessors for GlobalValidation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.IGlobalValidation Microsoft.Azure.PowerShell.Cmdlets.App.Models.IAuthConfigPropertiesInternal.GlobalValidation { get => (this._globalValidation = this._globalValidation ?? new Microsoft.Azure.PowerShell.Cmdlets.App.Models.GlobalValidation()); set { {_globalValidation = value;} } }

        /// <summary>Internal Acessors for HttpSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.IHttpSettings Microsoft.Azure.PowerShell.Cmdlets.App.Models.IAuthConfigPropertiesInternal.HttpSetting { get => (this._httpSetting = this._httpSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.App.Models.HttpSettings()); set { {_httpSetting = value;} } }

        /// <summary>Internal Acessors for HttpSettingForwardProxy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.IForwardProxy Microsoft.Azure.PowerShell.Cmdlets.App.Models.IAuthConfigPropertiesInternal.HttpSettingForwardProxy { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IHttpSettingsInternal)HttpSetting).ForwardProxy; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IHttpSettingsInternal)HttpSetting).ForwardProxy = value; }

        /// <summary>Internal Acessors for HttpSettingRoute</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.IHttpSettingsRoutes Microsoft.Azure.PowerShell.Cmdlets.App.Models.IAuthConfigPropertiesInternal.HttpSettingRoute { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IHttpSettingsInternal)HttpSetting).Route; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IHttpSettingsInternal)HttpSetting).Route = value; }

        /// <summary>Internal Acessors for Login</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.ILogin Microsoft.Azure.PowerShell.Cmdlets.App.Models.IAuthConfigPropertiesInternal.Login { get => (this._login = this._login ?? new Microsoft.Azure.PowerShell.Cmdlets.App.Models.Login()); set { {_login = value;} } }

        /// <summary>Internal Acessors for LoginCookieExpiration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.ICookieExpiration Microsoft.Azure.PowerShell.Cmdlets.App.Models.IAuthConfigPropertiesInternal.LoginCookieExpiration { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.ILoginInternal)Login).CookieExpiration; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.ILoginInternal)Login).CookieExpiration = value; }

        /// <summary>Internal Acessors for LoginNonce</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.INonce Microsoft.Azure.PowerShell.Cmdlets.App.Models.IAuthConfigPropertiesInternal.LoginNonce { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.ILoginInternal)Login).Nonce; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.ILoginInternal)Login).Nonce = value; }

        /// <summary>Internal Acessors for LoginRoute</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.ILoginRoutes Microsoft.Azure.PowerShell.Cmdlets.App.Models.IAuthConfigPropertiesInternal.LoginRoute { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.ILoginInternal)Login).Route; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.ILoginInternal)Login).Route = value; }

        /// <summary>Internal Acessors for Platform</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.IAuthPlatform Microsoft.Azure.PowerShell.Cmdlets.App.Models.IAuthConfigPropertiesInternal.Platform { get => (this._platform = this._platform ?? new Microsoft.Azure.PowerShell.Cmdlets.App.Models.AuthPlatform()); set { {_platform = value;} } }

        /// <summary>The time after the request is made when the nonce should expire.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string NonceExpirationInterval { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.ILoginInternal)Login).NonceExpirationInterval; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.ILoginInternal)Login).NonceExpirationInterval = value ?? null; }

        /// <summary>
        /// <code>false</code> if the nonce should not be validated while completing the login flow; otherwise, <code>true</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public bool? NonceValidateNonce { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.ILoginInternal)Login).NonceValidateNonce; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.ILoginInternal)Login).NonceValidateNonce = value ?? default(bool); }

        /// <summary>Backing field for <see cref="Platform" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.App.Models.IAuthPlatform _platform;

        /// <summary>
        /// The configuration settings of the platform of ContainerApp Service Authentication/Authorization.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.App.Models.IAuthPlatform Platform { get => (this._platform = this._platform ?? new Microsoft.Azure.PowerShell.Cmdlets.App.Models.AuthPlatform()); set => this._platform = value; }

        /// <summary>
        /// <code>true</code> if the Authentication / Authorization feature is enabled for the current app; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public bool? PlatformEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IAuthPlatformInternal)Platform).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IAuthPlatformInternal)Platform).Enabled = value ?? default(bool); }

        /// <summary>
        /// The RuntimeVersion of the Authentication / Authorization feature in use for the current app.
        /// The setting in this value can control the behavior of certain features in the Authentication / Authorization module.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string PlatformRuntimeVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IAuthPlatformInternal)Platform).RuntimeVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IAuthPlatformInternal)Platform).RuntimeVersion = value ?? null; }

        /// <summary>The prefix that should precede all the authentication/authorization paths.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string RouteApiPrefix { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IHttpSettingsInternal)HttpSetting).RouteApiPrefix; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IHttpSettingsInternal)HttpSetting).RouteApiPrefix = value ?? null; }

        /// <summary>The endpoint at which a logout request should be made.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string RouteLogoutEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.ILoginInternal)Login).RouteLogoutEndpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.ILoginInternal)Login).RouteLogoutEndpoint = value ?? null; }

        /// <summary>Creates an new <see cref="AuthConfigProperties" /> instance.</summary>
        public AuthConfigProperties()
        {

        }
    }
    /// AuthConfig resource specific properties
    public partial interface IAuthConfigProperties :
        Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.IJsonSerializable
    {
        /// <summary>The convention used when determining the session cookie's expiration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The convention used when determining the session cookie's expiration.",
        SerializedName = @"convention",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.App.PSArgumentCompleterAttribute("FixedTime", "IdentityProviderDerived")]
        string CookieExpirationConvention { get; set; }
        /// <summary>The time after the request is made when the session cookie should expire.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The time after the request is made when the session cookie should expire.",
        SerializedName = @"timeToExpiration",
        PossibleTypes = new [] { typeof(string) })]
        string CookieExpirationTimeToExpiration { get; set; }
        /// <summary>The convention used to determine the url of the request made.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The convention used to determine the url of the request made.",
        SerializedName = @"convention",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.App.PSArgumentCompleterAttribute("NoProxy", "Standard", "Custom")]
        string ForwardProxyConvention { get; set; }
        /// <summary>The name of the header containing the host of the request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The name of the header containing the host of the request.",
        SerializedName = @"customHostHeaderName",
        PossibleTypes = new [] { typeof(string) })]
        string ForwardProxyCustomHostHeaderName { get; set; }
        /// <summary>The name of the header containing the scheme of the request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The name of the header containing the scheme of the request.",
        SerializedName = @"customProtoHeaderName",
        PossibleTypes = new [] { typeof(string) })]
        string ForwardProxyCustomProtoHeaderName { get; set; }
        /// <summary>
        /// The paths for which unauthenticated flow would not be redirected to the login page.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The paths for which unauthenticated flow would not be redirected to the login page.",
        SerializedName = @"excludedPaths",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> GlobalValidationExcludedPath { get; set; }
        /// <summary>
        /// The default authentication provider to use when multiple providers are configured.
        /// This setting is only needed if multiple providers are configured and the unauthenticated client
        /// action is set to "RedirectToLoginPage".
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The default authentication provider to use when multiple providers are configured.
        This setting is only needed if multiple providers are configured and the unauthenticated client
        action is set to ""RedirectToLoginPage"".",
        SerializedName = @"redirectToProvider",
        PossibleTypes = new [] { typeof(string) })]
        string GlobalValidationRedirectToProvider { get; set; }
        /// <summary>The action to take when an unauthenticated client attempts to access the app.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The action to take when an unauthenticated client attempts to access the app.",
        SerializedName = @"unauthenticatedClientAction",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.App.PSArgumentCompleterAttribute("RedirectToLoginPage", "AllowAnonymous", "Return401", "Return403")]
        string GlobalValidationUnauthenticatedClientAction { get; set; }
        /// <summary>
        /// <code>false</code> if the authentication/authorization responses not having the HTTPS scheme are permissible; otherwise,
        /// <code>true</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"<code>false</code> if the authentication/authorization responses not having the HTTPS scheme are permissible; otherwise, <code>true</code>.",
        SerializedName = @"requireHttps",
        PossibleTypes = new [] { typeof(bool) })]
        bool? HttpSettingRequireHttps { get; set; }
        /// <summary>
        /// The configuration settings of each of the identity providers used to configure ContainerApp Service Authentication/Authorization.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The configuration settings of each of the identity providers used to configure ContainerApp Service Authentication/Authorization.",
        SerializedName = @"identityProviders",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.App.Models.IIdentityProviders) })]
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.IIdentityProviders IdentityProvider { get; set; }
        /// <summary>
        /// External URLs that can be redirected to as part of logging in or logging out of the app. Note that the query string part
        /// of the URL is ignored.
        /// This is an advanced setting typically only needed by Windows Store application backends.
        /// Note that URLs within the current domain are always implicitly allowed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"External URLs that can be redirected to as part of logging in or logging out of the app. Note that the query string part of the URL is ignored.
        This is an advanced setting typically only needed by Windows Store application backends.
        Note that URLs within the current domain are always implicitly allowed.",
        SerializedName = @"allowedExternalRedirectUrls",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> LoginAllowedExternalRedirectUrl { get; set; }
        /// <summary>
        /// <code>true</code> if the fragments from the request are preserved after the login request is made; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"<code>true</code> if the fragments from the request are preserved after the login request is made; otherwise, <code>false</code>.",
        SerializedName = @"preserveUrlFragmentsForLogins",
        PossibleTypes = new [] { typeof(bool) })]
        bool? LoginPreserveUrlFragmentsForLogin { get; set; }
        /// <summary>The time after the request is made when the nonce should expire.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The time after the request is made when the nonce should expire.",
        SerializedName = @"nonceExpirationInterval",
        PossibleTypes = new [] { typeof(string) })]
        string NonceExpirationInterval { get; set; }
        /// <summary>
        /// <code>false</code> if the nonce should not be validated while completing the login flow; otherwise, <code>true</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"<code>false</code> if the nonce should not be validated while completing the login flow; otherwise, <code>true</code>.",
        SerializedName = @"validateNonce",
        PossibleTypes = new [] { typeof(bool) })]
        bool? NonceValidateNonce { get; set; }
        /// <summary>
        /// <code>true</code> if the Authentication / Authorization feature is enabled for the current app; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"<code>true</code> if the Authentication / Authorization feature is enabled for the current app; otherwise, <code>false</code>.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? PlatformEnabled { get; set; }
        /// <summary>
        /// The RuntimeVersion of the Authentication / Authorization feature in use for the current app.
        /// The setting in this value can control the behavior of certain features in the Authentication / Authorization module.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The RuntimeVersion of the Authentication / Authorization feature in use for the current app.
        The setting in this value can control the behavior of certain features in the Authentication / Authorization module.",
        SerializedName = @"runtimeVersion",
        PossibleTypes = new [] { typeof(string) })]
        string PlatformRuntimeVersion { get; set; }
        /// <summary>The prefix that should precede all the authentication/authorization paths.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The prefix that should precede all the authentication/authorization paths.",
        SerializedName = @"apiPrefix",
        PossibleTypes = new [] { typeof(string) })]
        string RouteApiPrefix { get; set; }
        /// <summary>The endpoint at which a logout request should be made.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The endpoint at which a logout request should be made.",
        SerializedName = @"logoutEndpoint",
        PossibleTypes = new [] { typeof(string) })]
        string RouteLogoutEndpoint { get; set; }

    }
    /// AuthConfig resource specific properties
    internal partial interface IAuthConfigPropertiesInternal

    {
        /// <summary>The convention used when determining the session cookie's expiration.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.App.PSArgumentCompleterAttribute("FixedTime", "IdentityProviderDerived")]
        string CookieExpirationConvention { get; set; }
        /// <summary>The time after the request is made when the session cookie should expire.</summary>
        string CookieExpirationTimeToExpiration { get; set; }
        /// <summary>The convention used to determine the url of the request made.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.App.PSArgumentCompleterAttribute("NoProxy", "Standard", "Custom")]
        string ForwardProxyConvention { get; set; }
        /// <summary>The name of the header containing the host of the request.</summary>
        string ForwardProxyCustomHostHeaderName { get; set; }
        /// <summary>The name of the header containing the scheme of the request.</summary>
        string ForwardProxyCustomProtoHeaderName { get; set; }
        /// <summary>
        /// The configuration settings that determines the validation flow of users using Service Authentication/Authorization.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.IGlobalValidation GlobalValidation { get; set; }
        /// <summary>
        /// The paths for which unauthenticated flow would not be redirected to the login page.
        /// </summary>
        System.Collections.Generic.List<string> GlobalValidationExcludedPath { get; set; }
        /// <summary>
        /// The default authentication provider to use when multiple providers are configured.
        /// This setting is only needed if multiple providers are configured and the unauthenticated client
        /// action is set to "RedirectToLoginPage".
        /// </summary>
        string GlobalValidationRedirectToProvider { get; set; }
        /// <summary>The action to take when an unauthenticated client attempts to access the app.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.App.PSArgumentCompleterAttribute("RedirectToLoginPage", "AllowAnonymous", "Return401", "Return403")]
        string GlobalValidationUnauthenticatedClientAction { get; set; }
        /// <summary>
        /// The configuration settings of the HTTP requests for authentication and authorization requests made against ContainerApp
        /// Service Authentication/Authorization.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.IHttpSettings HttpSetting { get; set; }
        /// <summary>The configuration settings of a forward proxy used to make the requests.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.IForwardProxy HttpSettingForwardProxy { get; set; }
        /// <summary>
        /// <code>false</code> if the authentication/authorization responses not having the HTTPS scheme are permissible; otherwise,
        /// <code>true</code>.
        /// </summary>
        bool? HttpSettingRequireHttps { get; set; }
        /// <summary>The configuration settings of the paths HTTP requests.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.IHttpSettingsRoutes HttpSettingRoute { get; set; }
        /// <summary>
        /// The configuration settings of each of the identity providers used to configure ContainerApp Service Authentication/Authorization.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.IIdentityProviders IdentityProvider { get; set; }
        /// <summary>
        /// The configuration settings of the login flow of users using ContainerApp Service Authentication/Authorization.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.ILogin Login { get; set; }
        /// <summary>
        /// External URLs that can be redirected to as part of logging in or logging out of the app. Note that the query string part
        /// of the URL is ignored.
        /// This is an advanced setting typically only needed by Windows Store application backends.
        /// Note that URLs within the current domain are always implicitly allowed.
        /// </summary>
        System.Collections.Generic.List<string> LoginAllowedExternalRedirectUrl { get; set; }
        /// <summary>The configuration settings of the session cookie's expiration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.ICookieExpiration LoginCookieExpiration { get; set; }
        /// <summary>The configuration settings of the nonce used in the login flow.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.INonce LoginNonce { get; set; }
        /// <summary>
        /// <code>true</code> if the fragments from the request are preserved after the login request is made; otherwise, <code>false</code>.
        /// </summary>
        bool? LoginPreserveUrlFragmentsForLogin { get; set; }
        /// <summary>The routes that specify the endpoints used for login and logout requests.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.ILoginRoutes LoginRoute { get; set; }
        /// <summary>The time after the request is made when the nonce should expire.</summary>
        string NonceExpirationInterval { get; set; }
        /// <summary>
        /// <code>false</code> if the nonce should not be validated while completing the login flow; otherwise, <code>true</code>.
        /// </summary>
        bool? NonceValidateNonce { get; set; }
        /// <summary>
        /// The configuration settings of the platform of ContainerApp Service Authentication/Authorization.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.IAuthPlatform Platform { get; set; }
        /// <summary>
        /// <code>true</code> if the Authentication / Authorization feature is enabled for the current app; otherwise, <code>false</code>.
        /// </summary>
        bool? PlatformEnabled { get; set; }
        /// <summary>
        /// The RuntimeVersion of the Authentication / Authorization feature in use for the current app.
        /// The setting in this value can control the behavior of certain features in the Authentication / Authorization module.
        /// </summary>
        string PlatformRuntimeVersion { get; set; }
        /// <summary>The prefix that should precede all the authentication/authorization paths.</summary>
        string RouteApiPrefix { get; set; }
        /// <summary>The endpoint at which a logout request should be made.</summary>
        string RouteLogoutEndpoint { get; set; }

    }
}