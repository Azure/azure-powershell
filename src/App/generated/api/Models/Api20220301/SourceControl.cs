// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Extensions;

    /// <summary>Container App SourceControl.</summary>
    public partial class SourceControl :
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControl,
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlInternal,
        Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResource" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.Resource();

        /// <summary>Client Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string AzureCredentialsClientId { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlPropertiesInternal)Property).AzureCredentialsClientId; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlPropertiesInternal)Property).AzureCredentialsClientId = value ?? null; }

        /// <summary>Client Secret.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string AzureCredentialsClientSecret { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlPropertiesInternal)Property).AzureCredentialsClientSecret; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlPropertiesInternal)Property).AzureCredentialsClientSecret = value ?? null; }

        /// <summary>Subscription Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string AzureCredentialsSubscriptionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlPropertiesInternal)Property).AzureCredentialsSubscriptionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlPropertiesInternal)Property).AzureCredentialsSubscriptionId = value ?? null; }

        /// <summary>Tenant Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string AzureCredentialsTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlPropertiesInternal)Property).AzureCredentialsTenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlPropertiesInternal)Property).AzureCredentialsTenantId = value ?? null; }

        /// <summary>The branch which will trigger the auto deployment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string Branch { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlPropertiesInternal)Property).Branch; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlPropertiesInternal)Property).Branch = value ?? null; }

        /// <summary>Context path</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string GithubActionConfigurationContextPath { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlPropertiesInternal)Property).GithubActionConfigurationContextPath; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlPropertiesInternal)Property).GithubActionConfigurationContextPath = value ?? null; }

        /// <summary>Image name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string GithubActionConfigurationImage { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlPropertiesInternal)Property).GithubActionConfigurationImage; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlPropertiesInternal)Property).GithubActionConfigurationImage = value ?? null; }

        /// <summary>Operation system</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string GithubActionConfigurationOS { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlPropertiesInternal)Property).GithubActionConfigurationOS; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlPropertiesInternal)Property).GithubActionConfigurationOS = value ?? null; }

        /// <summary>Code or Image</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string GithubActionConfigurationPublishType { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlPropertiesInternal)Property).GithubActionConfigurationPublishType; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlPropertiesInternal)Property).GithubActionConfigurationPublishType = value ?? null; }

        /// <summary>Runtime stack</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string GithubActionConfigurationRuntimeStack { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlPropertiesInternal)Property).GithubActionConfigurationRuntimeStack; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlPropertiesInternal)Property).GithubActionConfigurationRuntimeStack = value ?? null; }

        /// <summary>Runtime version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string GithubActionConfigurationRuntimeVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlPropertiesInternal)Property).GithubActionConfigurationRuntimeVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlPropertiesInternal)Property).GithubActionConfigurationRuntimeVersion = value ?? null; }

        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).Id; }

        /// <summary>Internal Acessors for GithubActionConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IGithubActionConfiguration Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlInternal.GithubActionConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlPropertiesInternal)Property).GithubActionConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlPropertiesInternal)Property).GithubActionConfiguration = value; }

        /// <summary>Internal Acessors for GithubActionConfigurationAzureCredentials</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAzureCredentials Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlInternal.GithubActionConfigurationAzureCredentials { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlPropertiesInternal)Property).GithubActionConfigurationAzureCredentials; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlPropertiesInternal)Property).GithubActionConfigurationAzureCredentials = value; }

        /// <summary>Internal Acessors for GithubActionConfigurationRegistryInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IRegistryInfo Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlInternal.GithubActionConfigurationRegistryInfo { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlPropertiesInternal)Property).GithubActionConfigurationRegistryInfo; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlPropertiesInternal)Property).GithubActionConfigurationRegistryInfo = value; }

        /// <summary>Internal Acessors for OperationState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Support.SourceControlOperationState? Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlInternal.OperationState { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlPropertiesInternal)Property).OperationState; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlPropertiesInternal)Property).OperationState = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlProperties Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.SourceControlProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.ISystemData Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).Name; }

        /// <summary>Current provisioning State of the operation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.App.Support.SourceControlOperationState? OperationState { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlPropertiesInternal)Property).OperationState; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlProperties _property;

        /// <summary>SourceControl resource specific properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.SourceControlProperties()); set => this._property = value; }

        /// <summary>registry secret.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string RegistryInfoRegistryPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlPropertiesInternal)Property).RegistryInfoRegistryPassword; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlPropertiesInternal)Property).RegistryInfoRegistryPassword = value ?? null; }

        /// <summary>registry server Url.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string RegistryInfoRegistryUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlPropertiesInternal)Property).RegistryInfoRegistryUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlPropertiesInternal)Property).RegistryInfoRegistryUrl = value ?? null; }

        /// <summary>registry username.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string RegistryInfoRegistryUserName { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlPropertiesInternal)Property).RegistryInfoRegistryUserName; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlPropertiesInternal)Property).RegistryInfoRegistryUserName = value ?? null; }

        /// <summary>The repo url which will be integrated to ContainerApp.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string RepoUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlPropertiesInternal)Property).RepoUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlPropertiesInternal)Property).RepoUrl = value ?? null; }

        /// <summary>Gets the resource group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        public string ResourceGroupName { get => (new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Success ? new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Groups["resourceGroupName"].Value : null); }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.App.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.App.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.App.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.App.Support.CreatedByType)""); }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).Type; }

        /// <summary>Creates an new <see cref="SourceControl" /> instance.</summary>
        public SourceControl()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// Container App SourceControl.
    public partial interface ISourceControl :
        Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResource
    {
        /// <summary>Client Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Client Id.",
        SerializedName = @"clientId",
        PossibleTypes = new [] { typeof(string) })]
        string AzureCredentialsClientId { get; set; }
        /// <summary>Client Secret.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Client Secret.",
        SerializedName = @"clientSecret",
        PossibleTypes = new [] { typeof(string) })]
        string AzureCredentialsClientSecret { get; set; }
        /// <summary>Subscription Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Subscription Id.",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string AzureCredentialsSubscriptionId { get; set; }
        /// <summary>Tenant Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Tenant Id.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string AzureCredentialsTenantId { get; set; }
        /// <summary>The branch which will trigger the auto deployment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The branch which will trigger the auto deployment",
        SerializedName = @"branch",
        PossibleTypes = new [] { typeof(string) })]
        string Branch { get; set; }
        /// <summary>Context path</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Context path",
        SerializedName = @"contextPath",
        PossibleTypes = new [] { typeof(string) })]
        string GithubActionConfigurationContextPath { get; set; }
        /// <summary>Image name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Image name",
        SerializedName = @"image",
        PossibleTypes = new [] { typeof(string) })]
        string GithubActionConfigurationImage { get; set; }
        /// <summary>Operation system</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Operation system",
        SerializedName = @"os",
        PossibleTypes = new [] { typeof(string) })]
        string GithubActionConfigurationOS { get; set; }
        /// <summary>Code or Image</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Code or Image",
        SerializedName = @"publishType",
        PossibleTypes = new [] { typeof(string) })]
        string GithubActionConfigurationPublishType { get; set; }
        /// <summary>Runtime stack</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Runtime stack",
        SerializedName = @"runtimeStack",
        PossibleTypes = new [] { typeof(string) })]
        string GithubActionConfigurationRuntimeStack { get; set; }
        /// <summary>Runtime version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Runtime version",
        SerializedName = @"runtimeVersion",
        PossibleTypes = new [] { typeof(string) })]
        string GithubActionConfigurationRuntimeVersion { get; set; }
        /// <summary>Current provisioning State of the operation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Current provisioning State of the operation",
        SerializedName = @"operationState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.App.Support.SourceControlOperationState) })]
        Microsoft.Azure.PowerShell.Cmdlets.App.Support.SourceControlOperationState? OperationState { get;  }
        /// <summary>registry secret.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"registry secret.",
        SerializedName = @"registryPassword",
        PossibleTypes = new [] { typeof(string) })]
        string RegistryInfoRegistryPassword { get; set; }
        /// <summary>registry server Url.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"registry server Url.",
        SerializedName = @"registryUrl",
        PossibleTypes = new [] { typeof(string) })]
        string RegistryInfoRegistryUrl { get; set; }
        /// <summary>registry username.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"registry username.",
        SerializedName = @"registryUserName",
        PossibleTypes = new [] { typeof(string) })]
        string RegistryInfoRegistryUserName { get; set; }
        /// <summary>The repo url which will be integrated to ContainerApp.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The repo url which will be integrated to ContainerApp.",
        SerializedName = @"repoUrl",
        PossibleTypes = new [] { typeof(string) })]
        string RepoUrl { get; set; }

    }
    /// Container App SourceControl.
    internal partial interface ISourceControlInternal :
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal
    {
        /// <summary>Client Id.</summary>
        string AzureCredentialsClientId { get; set; }
        /// <summary>Client Secret.</summary>
        string AzureCredentialsClientSecret { get; set; }
        /// <summary>Subscription Id.</summary>
        string AzureCredentialsSubscriptionId { get; set; }
        /// <summary>Tenant Id.</summary>
        string AzureCredentialsTenantId { get; set; }
        /// <summary>The branch which will trigger the auto deployment</summary>
        string Branch { get; set; }
        /// <summary>
        /// Container App Revision Template with all possible settings and the
        /// defaults if user did not provide them. The defaults are populated
        /// as they were at the creation time
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IGithubActionConfiguration GithubActionConfiguration { get; set; }
        /// <summary>AzureCredentials configurations.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAzureCredentials GithubActionConfigurationAzureCredentials { get; set; }
        /// <summary>Context path</summary>
        string GithubActionConfigurationContextPath { get; set; }
        /// <summary>Image name</summary>
        string GithubActionConfigurationImage { get; set; }
        /// <summary>Operation system</summary>
        string GithubActionConfigurationOS { get; set; }
        /// <summary>Code or Image</summary>
        string GithubActionConfigurationPublishType { get; set; }
        /// <summary>Registry configurations.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IRegistryInfo GithubActionConfigurationRegistryInfo { get; set; }
        /// <summary>Runtime stack</summary>
        string GithubActionConfigurationRuntimeStack { get; set; }
        /// <summary>Runtime version</summary>
        string GithubActionConfigurationRuntimeVersion { get; set; }
        /// <summary>Current provisioning State of the operation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Support.SourceControlOperationState? OperationState { get; set; }
        /// <summary>SourceControl resource specific properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISourceControlProperties Property { get; set; }
        /// <summary>registry secret.</summary>
        string RegistryInfoRegistryPassword { get; set; }
        /// <summary>registry server Url.</summary>
        string RegistryInfoRegistryUrl { get; set; }
        /// <summary>registry username.</summary>
        string RegistryInfoRegistryUserName { get; set; }
        /// <summary>The repo url which will be integrated to ContainerApp.</summary>
        string RepoUrl { get; set; }

    }
}