// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Extensions;

    /// <summary>
    /// Configuration settings for the Azure ContainerApp Service Authentication / Authorization feature.
    /// </summary>
    public partial class AuthConfig :
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfig,
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigInternal,
        Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResource" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.Resource();

        /// <summary>The convention used when determining the session cookie's expiration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.App.Support.CookieExpirationConvention? CookieExpirationConvention { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).CookieExpirationConvention; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).CookieExpirationConvention = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.App.Support.CookieExpirationConvention)""); }

        /// <summary>The time after the request is made when the session cookie should expire.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public string CookieExpirationTimeToExpiration { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).CookieExpirationTimeToExpiration; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).CookieExpirationTimeToExpiration = value ?? null; }

        /// <summary>The convention used to determine the url of the request made.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.App.Support.ForwardProxyConvention? ForwardProxyConvention { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).ForwardProxyConvention; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).ForwardProxyConvention = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.App.Support.ForwardProxyConvention)""); }

        /// <summary>The name of the header containing the host of the request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public string ForwardProxyCustomHostHeaderName { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).ForwardProxyCustomHostHeaderName; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).ForwardProxyCustomHostHeaderName = value ?? null; }

        /// <summary>The name of the header containing the scheme of the request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public string ForwardProxyCustomProtoHeaderName { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).ForwardProxyCustomProtoHeaderName; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).ForwardProxyCustomProtoHeaderName = value ?? null; }

        /// <summary>
        /// The paths for which unauthenticated flow would not be redirected to the login page.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public string[] GlobalValidationExcludedPath { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).GlobalValidationExcludedPath; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).GlobalValidationExcludedPath = value ?? null /* arrayOf */; }

        /// <summary>
        /// The default authentication provider to use when multiple providers are configured.
        /// This setting is only needed if multiple providers are configured and the unauthenticated client
        /// action is set to "RedirectToLoginPage".
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public string GlobalValidationRedirectToProvider { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).GlobalValidationRedirectToProvider; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).GlobalValidationRedirectToProvider = value ?? null; }

        /// <summary>The action to take when an unauthenticated client attempts to access the app.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.App.Support.UnauthenticatedClientActionV2? GlobalValidationUnauthenticatedClientAction { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).GlobalValidationUnauthenticatedClientAction; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).GlobalValidationUnauthenticatedClientAction = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.App.Support.UnauthenticatedClientActionV2)""); }

        /// <summary>
        /// <code>false</code> if the authentication/authorization responses not having the HTTPS scheme are permissible; otherwise,
        /// <code>true</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public bool? HttpSettingRequireHttps { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).HttpSettingRequireHttps; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).HttpSettingRequireHttps = value ?? default(bool); }

        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).Id; }

        /// <summary>
        /// The configuration settings of each of the identity providers used to configure ContainerApp Service Authentication/Authorization.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IIdentityProviders IdentityProvider { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).IdentityProvider; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).IdentityProvider = value ?? null /* model class */; }

        /// <summary>
        /// External URLs that can be redirected to as part of logging in or logging out of the app. Note that the query string part
        /// of the URL is ignored.
        /// This is an advanced setting typically only needed by Windows Store application backends.
        /// Note that URLs within the current domain are always implicitly allowed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public string[] LoginAllowedExternalRedirectUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).LoginAllowedExternalRedirectUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).LoginAllowedExternalRedirectUrl = value ?? null /* arrayOf */; }

        /// <summary>
        /// <code>true</code> if the fragments from the request are preserved after the login request is made; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public bool? LoginPreserveUrlFragmentsForLogin { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).LoginPreserveUrlFragmentsForLogin; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).LoginPreserveUrlFragmentsForLogin = value ?? default(bool); }

        /// <summary>Internal Acessors for GlobalValidation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IGlobalValidation Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigInternal.GlobalValidation { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).GlobalValidation; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).GlobalValidation = value; }

        /// <summary>Internal Acessors for HttpSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IHttpSettings Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigInternal.HttpSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).HttpSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).HttpSetting = value; }

        /// <summary>Internal Acessors for HttpSettingForwardProxy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IForwardProxy Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigInternal.HttpSettingForwardProxy { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).HttpSettingForwardProxy; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).HttpSettingForwardProxy = value; }

        /// <summary>Internal Acessors for HttpSettingRoute</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IHttpSettingsRoutes Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigInternal.HttpSettingRoute { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).HttpSettingRoute; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).HttpSettingRoute = value; }

        /// <summary>Internal Acessors for Login</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ILogin Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigInternal.Login { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).Login; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).Login = value; }

        /// <summary>Internal Acessors for LoginCookieExpiration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICookieExpiration Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigInternal.LoginCookieExpiration { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).LoginCookieExpiration; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).LoginCookieExpiration = value; }

        /// <summary>Internal Acessors for LoginNonce</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.INonce Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigInternal.LoginNonce { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).LoginNonce; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).LoginNonce = value; }

        /// <summary>Internal Acessors for LoginRoute</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ILoginRoutes Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigInternal.LoginRoute { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).LoginRoute; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).LoginRoute = value; }

        /// <summary>Internal Acessors for Platform</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthPlatform Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigInternal.Platform { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).Platform; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).Platform = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigProperties Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.AuthConfigProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.ISystemData Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.FormatTable(Index = 0)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).Name; }

        /// <summary>The time after the request is made when the nonce should expire.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public string NonceExpirationInterval { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).NonceExpirationInterval; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).NonceExpirationInterval = value ?? null; }

        /// <summary>
        /// <code>false</code> if the nonce should not be validated while completing the login flow; otherwise, <code>true</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public bool? NonceValidateNonce { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).NonceValidateNonce; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).NonceValidateNonce = value ?? default(bool); }

        /// <summary>
        /// <code>true</code> if the Authentication / Authorization feature is enabled for the current app; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.FormatTable(Index = 1)]
        public bool? PlatformEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).PlatformEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).PlatformEnabled = value ?? default(bool); }

        /// <summary>
        /// The RuntimeVersion of the Authentication / Authorization feature in use for the current app.
        /// The setting in this value can control the behavior of certain features in the Authentication / Authorization module.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public string PlatformRuntimeVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).PlatformRuntimeVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).PlatformRuntimeVersion = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigProperties _property;

        /// <summary>AuthConfig resource specific properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        internal Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.AuthConfigProperties()); set => this._property = value; }

        /// <summary>Gets the resource group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.FormatTable(Index = 2)]
        public string ResourceGroupName { get => (new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Success ? new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Groups["resourceGroupName"].Value : null); }

        /// <summary>The prefix that should precede all the authentication/authorization paths.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public string RouteApiPrefix { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).RouteApiPrefix; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).RouteApiPrefix = value ?? null; }

        /// <summary>The endpoint at which a logout request should be made.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public string RouteLogoutEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).RouteLogoutEndpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigPropertiesInternal)Property).RouteLogoutEndpoint = value ?? null; }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.App.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.App.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.App.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.App.Support.CreatedByType)""); }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.App.DoNotFormat]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal)__resource).Type; }

        /// <summary>Creates an new <see cref="AuthConfig" /> instance.</summary>
        public AuthConfig()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// Configuration settings for the Azure ContainerApp Service Authentication / Authorization feature.
    public partial interface IAuthConfig :
        Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResource
    {
        /// <summary>The convention used when determining the session cookie's expiration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The convention used when determining the session cookie's expiration.",
        SerializedName = @"convention",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.App.Support.CookieExpirationConvention) })]
        Microsoft.Azure.PowerShell.Cmdlets.App.Support.CookieExpirationConvention? CookieExpirationConvention { get; set; }
        /// <summary>The time after the request is made when the session cookie should expire.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time after the request is made when the session cookie should expire.",
        SerializedName = @"timeToExpiration",
        PossibleTypes = new [] { typeof(string) })]
        string CookieExpirationTimeToExpiration { get; set; }
        /// <summary>The convention used to determine the url of the request made.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The convention used to determine the url of the request made.",
        SerializedName = @"convention",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.App.Support.ForwardProxyConvention) })]
        Microsoft.Azure.PowerShell.Cmdlets.App.Support.ForwardProxyConvention? ForwardProxyConvention { get; set; }
        /// <summary>The name of the header containing the host of the request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the header containing the host of the request.",
        SerializedName = @"customHostHeaderName",
        PossibleTypes = new [] { typeof(string) })]
        string ForwardProxyCustomHostHeaderName { get; set; }
        /// <summary>The name of the header containing the scheme of the request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the header containing the scheme of the request.",
        SerializedName = @"customProtoHeaderName",
        PossibleTypes = new [] { typeof(string) })]
        string ForwardProxyCustomProtoHeaderName { get; set; }
        /// <summary>
        /// The paths for which unauthenticated flow would not be redirected to the login page.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The paths for which unauthenticated flow would not be redirected to the login page.",
        SerializedName = @"excludedPaths",
        PossibleTypes = new [] { typeof(string) })]
        string[] GlobalValidationExcludedPath { get; set; }
        /// <summary>
        /// The default authentication provider to use when multiple providers are configured.
        /// This setting is only needed if multiple providers are configured and the unauthenticated client
        /// action is set to "RedirectToLoginPage".
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The default authentication provider to use when multiple providers are configured.
        This setting is only needed if multiple providers are configured and the unauthenticated client
        action is set to ""RedirectToLoginPage"".",
        SerializedName = @"redirectToProvider",
        PossibleTypes = new [] { typeof(string) })]
        string GlobalValidationRedirectToProvider { get; set; }
        /// <summary>The action to take when an unauthenticated client attempts to access the app.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The action to take when an unauthenticated client attempts to access the app.",
        SerializedName = @"unauthenticatedClientAction",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.App.Support.UnauthenticatedClientActionV2) })]
        Microsoft.Azure.PowerShell.Cmdlets.App.Support.UnauthenticatedClientActionV2? GlobalValidationUnauthenticatedClientAction { get; set; }
        /// <summary>
        /// <code>false</code> if the authentication/authorization responses not having the HTTPS scheme are permissible; otherwise,
        /// <code>true</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<code>false</code> if the authentication/authorization responses not having the HTTPS scheme are permissible; otherwise, <code>true</code>.",
        SerializedName = @"requireHttps",
        PossibleTypes = new [] { typeof(bool) })]
        bool? HttpSettingRequireHttps { get; set; }
        /// <summary>
        /// The configuration settings of each of the identity providers used to configure ContainerApp Service Authentication/Authorization.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The configuration settings of each of the identity providers used to configure ContainerApp Service Authentication/Authorization.",
        SerializedName = @"identityProviders",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IIdentityProviders) })]
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IIdentityProviders IdentityProvider { get; set; }
        /// <summary>
        /// External URLs that can be redirected to as part of logging in or logging out of the app. Note that the query string part
        /// of the URL is ignored.
        /// This is an advanced setting typically only needed by Windows Store application backends.
        /// Note that URLs within the current domain are always implicitly allowed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"External URLs that can be redirected to as part of logging in or logging out of the app. Note that the query string part of the URL is ignored.
        This is an advanced setting typically only needed by Windows Store application backends.
        Note that URLs within the current domain are always implicitly allowed.",
        SerializedName = @"allowedExternalRedirectUrls",
        PossibleTypes = new [] { typeof(string) })]
        string[] LoginAllowedExternalRedirectUrl { get; set; }
        /// <summary>
        /// <code>true</code> if the fragments from the request are preserved after the login request is made; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<code>true</code> if the fragments from the request are preserved after the login request is made; otherwise, <code>false</code>.",
        SerializedName = @"preserveUrlFragmentsForLogins",
        PossibleTypes = new [] { typeof(bool) })]
        bool? LoginPreserveUrlFragmentsForLogin { get; set; }
        /// <summary>The time after the request is made when the nonce should expire.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time after the request is made when the nonce should expire.",
        SerializedName = @"nonceExpirationInterval",
        PossibleTypes = new [] { typeof(string) })]
        string NonceExpirationInterval { get; set; }
        /// <summary>
        /// <code>false</code> if the nonce should not be validated while completing the login flow; otherwise, <code>true</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<code>false</code> if the nonce should not be validated while completing the login flow; otherwise, <code>true</code>.",
        SerializedName = @"validateNonce",
        PossibleTypes = new [] { typeof(bool) })]
        bool? NonceValidateNonce { get; set; }
        /// <summary>
        /// <code>true</code> if the Authentication / Authorization feature is enabled for the current app; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<code>true</code> if the Authentication / Authorization feature is enabled for the current app; otherwise, <code>false</code>.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? PlatformEnabled { get; set; }
        /// <summary>
        /// The RuntimeVersion of the Authentication / Authorization feature in use for the current app.
        /// The setting in this value can control the behavior of certain features in the Authentication / Authorization module.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The RuntimeVersion of the Authentication / Authorization feature in use for the current app.
        The setting in this value can control the behavior of certain features in the Authentication / Authorization module.",
        SerializedName = @"runtimeVersion",
        PossibleTypes = new [] { typeof(string) })]
        string PlatformRuntimeVersion { get; set; }
        /// <summary>The prefix that should precede all the authentication/authorization paths.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The prefix that should precede all the authentication/authorization paths.",
        SerializedName = @"apiPrefix",
        PossibleTypes = new [] { typeof(string) })]
        string RouteApiPrefix { get; set; }
        /// <summary>The endpoint at which a logout request should be made.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The endpoint at which a logout request should be made.",
        SerializedName = @"logoutEndpoint",
        PossibleTypes = new [] { typeof(string) })]
        string RouteLogoutEndpoint { get; set; }

    }
    /// Configuration settings for the Azure ContainerApp Service Authentication / Authorization feature.
    internal partial interface IAuthConfigInternal :
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api30.IResourceInternal
    {
        /// <summary>The convention used when determining the session cookie's expiration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Support.CookieExpirationConvention? CookieExpirationConvention { get; set; }
        /// <summary>The time after the request is made when the session cookie should expire.</summary>
        string CookieExpirationTimeToExpiration { get; set; }
        /// <summary>The convention used to determine the url of the request made.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Support.ForwardProxyConvention? ForwardProxyConvention { get; set; }
        /// <summary>The name of the header containing the host of the request.</summary>
        string ForwardProxyCustomHostHeaderName { get; set; }
        /// <summary>The name of the header containing the scheme of the request.</summary>
        string ForwardProxyCustomProtoHeaderName { get; set; }
        /// <summary>
        /// The configuration settings that determines the validation flow of users using Service Authentication/Authorization.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IGlobalValidation GlobalValidation { get; set; }
        /// <summary>
        /// The paths for which unauthenticated flow would not be redirected to the login page.
        /// </summary>
        string[] GlobalValidationExcludedPath { get; set; }
        /// <summary>
        /// The default authentication provider to use when multiple providers are configured.
        /// This setting is only needed if multiple providers are configured and the unauthenticated client
        /// action is set to "RedirectToLoginPage".
        /// </summary>
        string GlobalValidationRedirectToProvider { get; set; }
        /// <summary>The action to take when an unauthenticated client attempts to access the app.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Support.UnauthenticatedClientActionV2? GlobalValidationUnauthenticatedClientAction { get; set; }
        /// <summary>
        /// The configuration settings of the HTTP requests for authentication and authorization requests made against ContainerApp
        /// Service Authentication/Authorization.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IHttpSettings HttpSetting { get; set; }
        /// <summary>The configuration settings of a forward proxy used to make the requests.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IForwardProxy HttpSettingForwardProxy { get; set; }
        /// <summary>
        /// <code>false</code> if the authentication/authorization responses not having the HTTPS scheme are permissible; otherwise,
        /// <code>true</code>.
        /// </summary>
        bool? HttpSettingRequireHttps { get; set; }
        /// <summary>The configuration settings of the paths HTTP requests.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IHttpSettingsRoutes HttpSettingRoute { get; set; }
        /// <summary>
        /// The configuration settings of each of the identity providers used to configure ContainerApp Service Authentication/Authorization.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IIdentityProviders IdentityProvider { get; set; }
        /// <summary>
        /// The configuration settings of the login flow of users using ContainerApp Service Authentication/Authorization.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ILogin Login { get; set; }
        /// <summary>
        /// External URLs that can be redirected to as part of logging in or logging out of the app. Note that the query string part
        /// of the URL is ignored.
        /// This is an advanced setting typically only needed by Windows Store application backends.
        /// Note that URLs within the current domain are always implicitly allowed.
        /// </summary>
        string[] LoginAllowedExternalRedirectUrl { get; set; }
        /// <summary>The configuration settings of the session cookie's expiration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICookieExpiration LoginCookieExpiration { get; set; }
        /// <summary>The configuration settings of the nonce used in the login flow.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.INonce LoginNonce { get; set; }
        /// <summary>
        /// <code>true</code> if the fragments from the request are preserved after the login request is made; otherwise, <code>false</code>.
        /// </summary>
        bool? LoginPreserveUrlFragmentsForLogin { get; set; }
        /// <summary>The routes that specify the endpoints used for login and logout requests.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ILoginRoutes LoginRoute { get; set; }
        /// <summary>The time after the request is made when the nonce should expire.</summary>
        string NonceExpirationInterval { get; set; }
        /// <summary>
        /// <code>false</code> if the nonce should not be validated while completing the login flow; otherwise, <code>true</code>.
        /// </summary>
        bool? NonceValidateNonce { get; set; }
        /// <summary>
        /// The configuration settings of the platform of ContainerApp Service Authentication/Authorization.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthPlatform Platform { get; set; }
        /// <summary>
        /// <code>true</code> if the Authentication / Authorization feature is enabled for the current app; otherwise, <code>false</code>.
        /// </summary>
        bool? PlatformEnabled { get; set; }
        /// <summary>
        /// The RuntimeVersion of the Authentication / Authorization feature in use for the current app.
        /// The setting in this value can control the behavior of certain features in the Authentication / Authorization module.
        /// </summary>
        string PlatformRuntimeVersion { get; set; }
        /// <summary>AuthConfig resource specific properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IAuthConfigProperties Property { get; set; }
        /// <summary>The prefix that should precede all the authentication/authorization paths.</summary>
        string RouteApiPrefix { get; set; }
        /// <summary>The endpoint at which a logout request should be made.</summary>
        string RouteLogoutEndpoint { get; set; }

    }
}