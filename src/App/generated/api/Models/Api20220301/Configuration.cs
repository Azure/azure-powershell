// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Extensions;

    /// <summary>
    /// Non versioned Container App configuration properties that define the mutable settings of a Container app
    /// </summary>
    public partial class Configuration :
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IConfiguration,
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IConfigurationInternal
    {

        /// <summary>Backing field for <see cref="ActiveRevisionsMode" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.App.Support.ActiveRevisionsMode? _activeRevisionsMode;

        /// <summary>
        /// ActiveRevisionsMode controls how active revisions are handled for the Container app:
        /// <list><item>Multiple: multiple revisions can be active.</item><item>Single: Only one revision can be active at a time.
        /// Revision weights can not be used in this mode. If no value if provided, this is the default.</item></list>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.App.Support.ActiveRevisionsMode? ActiveRevisionsMode { get => this._activeRevisionsMode; set => this._activeRevisionsMode = value; }

        /// <summary>Backing field for <see cref="Dapr" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IDapr _dapr;

        /// <summary>Dapr configuration for the Container App.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IDapr Dapr { get => (this._dapr = this._dapr ?? new Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.Dapr()); set => this._dapr = value; }

        /// <summary>Dapr application identifier</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string DaprAppId { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IDaprInternal)Dapr).AppId; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IDaprInternal)Dapr).AppId = value ?? null; }

        /// <summary>Tells Dapr which port your application is listening on</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public int? DaprAppPort { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IDaprInternal)Dapr).AppPort; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IDaprInternal)Dapr).AppPort = value ?? default(int); }

        /// <summary>
        /// Tells Dapr which protocol your application is using. Valid options are http and grpc. Default is http
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.App.Support.AppProtocol? DaprAppProtocol { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IDaprInternal)Dapr).AppProtocol; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IDaprInternal)Dapr).AppProtocol = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.App.Support.AppProtocol)""); }

        /// <summary>Boolean indicating if the Dapr side car is enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public bool? DaprEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IDaprInternal)Dapr).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IDaprInternal)Dapr).Enabled = value ?? default(bool); }

        /// <summary>Backing field for <see cref="Ingress" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IIngress _ingress;

        /// <summary>Ingress configurations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IIngress Ingress { get => (this._ingress = this._ingress ?? new Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.Ingress()); set => this._ingress = value; }

        /// <summary>
        /// Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS
        /// connections
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public bool? IngressAllowInsecure { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IIngressInternal)Ingress).AllowInsecure; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IIngressInternal)Ingress).AllowInsecure = value ?? default(bool); }

        /// <summary>custom domain bindings for Container Apps' hostnames.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomDomain[] IngressCustomDomain { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IIngressInternal)Ingress).CustomDomain; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IIngressInternal)Ingress).CustomDomain = value ?? null /* arrayOf */; }

        /// <summary>Bool indicating if app exposes an external http endpoint</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public bool? IngressExternal { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IIngressInternal)Ingress).External; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IIngressInternal)Ingress).External = value ?? default(bool); }

        /// <summary>Hostname.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string IngressFqdn { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IIngressInternal)Ingress).Fqdn; }

        /// <summary>Target Port in containers for traffic from ingress</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public int? IngressTargetPort { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IIngressInternal)Ingress).TargetPort; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IIngressInternal)Ingress).TargetPort = value ?? default(int); }

        /// <summary>Traffic weights for app's revisions</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ITrafficWeight[] IngressTraffic { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IIngressInternal)Ingress).Traffic; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IIngressInternal)Ingress).Traffic = value ?? null /* arrayOf */; }

        /// <summary>Ingress transport protocol</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.App.Support.IngressTransportMethod? IngressTransport { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IIngressInternal)Ingress).Transport; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IIngressInternal)Ingress).Transport = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.App.Support.IngressTransportMethod)""); }

        /// <summary>Internal Acessors for Dapr</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IDapr Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IConfigurationInternal.Dapr { get => (this._dapr = this._dapr ?? new Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.Dapr()); set { {_dapr = value;} } }

        /// <summary>Internal Acessors for Ingress</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IIngress Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IConfigurationInternal.Ingress { get => (this._ingress = this._ingress ?? new Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.Ingress()); set { {_ingress = value;} } }

        /// <summary>Internal Acessors for IngressFqdn</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IConfigurationInternal.IngressFqdn { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IIngressInternal)Ingress).Fqdn; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IIngressInternal)Ingress).Fqdn = value; }

        /// <summary>Backing field for <see cref="Registry" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IRegistryCredentials[] _registry;

        /// <summary>
        /// Collection of private container registry credentials for containers used by the Container app
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IRegistryCredentials[] Registry { get => this._registry; set => this._registry = value; }

        /// <summary>Backing field for <see cref="Secret" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISecret[] _secret;

        /// <summary>Collection of secrets used by a Container app</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISecret[] Secret { get => this._secret; set => this._secret = value; }

        /// <summary>Creates an new <see cref="Configuration" /> instance.</summary>
        public Configuration()
        {

        }
    }
    /// Non versioned Container App configuration properties that define the mutable settings of a Container app
    public partial interface IConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.IJsonSerializable
    {
        /// <summary>
        /// ActiveRevisionsMode controls how active revisions are handled for the Container app:
        /// <list><item>Multiple: multiple revisions can be active.</item><item>Single: Only one revision can be active at a time.
        /// Revision weights can not be used in this mode. If no value if provided, this is the default.</item></list>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ActiveRevisionsMode controls how active revisions are handled for the Container app:
        <list><item>Multiple: multiple revisions can be active.</item><item>Single: Only one revision can be active at a time. Revision weights can not be used in this mode. If no value if provided, this is the default.</item></list>",
        SerializedName = @"activeRevisionsMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.App.Support.ActiveRevisionsMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.App.Support.ActiveRevisionsMode? ActiveRevisionsMode { get; set; }
        /// <summary>Dapr application identifier</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Dapr application identifier",
        SerializedName = @"appId",
        PossibleTypes = new [] { typeof(string) })]
        string DaprAppId { get; set; }
        /// <summary>Tells Dapr which port your application is listening on</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Tells Dapr which port your application is listening on",
        SerializedName = @"appPort",
        PossibleTypes = new [] { typeof(int) })]
        int? DaprAppPort { get; set; }
        /// <summary>
        /// Tells Dapr which protocol your application is using. Valid options are http and grpc. Default is http
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Tells Dapr which protocol your application is using. Valid options are http and grpc. Default is http",
        SerializedName = @"appProtocol",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.App.Support.AppProtocol) })]
        Microsoft.Azure.PowerShell.Cmdlets.App.Support.AppProtocol? DaprAppProtocol { get; set; }
        /// <summary>Boolean indicating if the Dapr side car is enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Boolean indicating if the Dapr side car is enabled",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DaprEnabled { get; set; }
        /// <summary>
        /// Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS
        /// connections
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS connections",
        SerializedName = @"allowInsecure",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IngressAllowInsecure { get; set; }
        /// <summary>custom domain bindings for Container Apps' hostnames.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"custom domain bindings for Container Apps' hostnames.",
        SerializedName = @"customDomains",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomDomain) })]
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomDomain[] IngressCustomDomain { get; set; }
        /// <summary>Bool indicating if app exposes an external http endpoint</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Bool indicating if app exposes an external http endpoint",
        SerializedName = @"external",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IngressExternal { get; set; }
        /// <summary>Hostname.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Hostname.",
        SerializedName = @"fqdn",
        PossibleTypes = new [] { typeof(string) })]
        string IngressFqdn { get;  }
        /// <summary>Target Port in containers for traffic from ingress</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Target Port in containers for traffic from ingress",
        SerializedName = @"targetPort",
        PossibleTypes = new [] { typeof(int) })]
        int? IngressTargetPort { get; set; }
        /// <summary>Traffic weights for app's revisions</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Traffic weights for app's revisions",
        SerializedName = @"traffic",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ITrafficWeight) })]
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ITrafficWeight[] IngressTraffic { get; set; }
        /// <summary>Ingress transport protocol</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Ingress transport protocol",
        SerializedName = @"transport",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.App.Support.IngressTransportMethod) })]
        Microsoft.Azure.PowerShell.Cmdlets.App.Support.IngressTransportMethod? IngressTransport { get; set; }
        /// <summary>
        /// Collection of private container registry credentials for containers used by the Container app
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Collection of private container registry credentials for containers used by the Container app",
        SerializedName = @"registries",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IRegistryCredentials) })]
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IRegistryCredentials[] Registry { get; set; }
        /// <summary>Collection of secrets used by a Container app</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Collection of secrets used by a Container app",
        SerializedName = @"secrets",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISecret) })]
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISecret[] Secret { get; set; }

    }
    /// Non versioned Container App configuration properties that define the mutable settings of a Container app
    internal partial interface IConfigurationInternal

    {
        /// <summary>
        /// ActiveRevisionsMode controls how active revisions are handled for the Container app:
        /// <list><item>Multiple: multiple revisions can be active.</item><item>Single: Only one revision can be active at a time.
        /// Revision weights can not be used in this mode. If no value if provided, this is the default.</item></list>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Support.ActiveRevisionsMode? ActiveRevisionsMode { get; set; }
        /// <summary>Dapr configuration for the Container App.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IDapr Dapr { get; set; }
        /// <summary>Dapr application identifier</summary>
        string DaprAppId { get; set; }
        /// <summary>Tells Dapr which port your application is listening on</summary>
        int? DaprAppPort { get; set; }
        /// <summary>
        /// Tells Dapr which protocol your application is using. Valid options are http and grpc. Default is http
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Support.AppProtocol? DaprAppProtocol { get; set; }
        /// <summary>Boolean indicating if the Dapr side car is enabled</summary>
        bool? DaprEnabled { get; set; }
        /// <summary>Ingress configurations.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IIngress Ingress { get; set; }
        /// <summary>
        /// Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS
        /// connections
        /// </summary>
        bool? IngressAllowInsecure { get; set; }
        /// <summary>custom domain bindings for Container Apps' hostnames.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomDomain[] IngressCustomDomain { get; set; }
        /// <summary>Bool indicating if app exposes an external http endpoint</summary>
        bool? IngressExternal { get; set; }
        /// <summary>Hostname.</summary>
        string IngressFqdn { get; set; }
        /// <summary>Target Port in containers for traffic from ingress</summary>
        int? IngressTargetPort { get; set; }
        /// <summary>Traffic weights for app's revisions</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ITrafficWeight[] IngressTraffic { get; set; }
        /// <summary>Ingress transport protocol</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Support.IngressTransportMethod? IngressTransport { get; set; }
        /// <summary>
        /// Collection of private container registry credentials for containers used by the Container app
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IRegistryCredentials[] Registry { get; set; }
        /// <summary>Collection of secrets used by a Container app</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ISecret[] Secret { get; set; }

    }
}