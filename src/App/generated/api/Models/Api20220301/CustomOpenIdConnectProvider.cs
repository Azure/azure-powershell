// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Extensions;

    /// <summary>The configuration settings of the custom Open ID Connect provider.</summary>
    public partial class CustomOpenIdConnectProvider :
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomOpenIdConnectProvider,
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomOpenIdConnectProviderInternal
    {

        /// <summary>
        /// The app setting that contains the client secret for the custom Open ID Connect provider.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string ClientCredentialClientSecretSettingName { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IOpenIdConnectRegistrationInternal)Registration).ClientCredentialClientSecretSettingName; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IOpenIdConnectRegistrationInternal)Registration).ClientCredentialClientSecretSettingName = value ?? null; }

        /// <summary>The method that should be used to authenticate the user.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.App.Support.ClientCredentialMethod? ClientCredentialMethod { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IOpenIdConnectRegistrationInternal)Registration).ClientCredentialMethod; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IOpenIdConnectRegistrationInternal)Registration).ClientCredentialMethod = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.App.Support.ClientCredentialMethod)""); }

        /// <summary>Backing field for <see cref="Enabled" /> property.</summary>
        private bool? _enabled;

        /// <summary>
        /// <code>false</code> if the custom Open ID provider provider should not be enabled; otherwise, <code>true</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        public bool? Enabled { get => this._enabled; set => this._enabled = value; }

        /// <summary>Backing field for <see cref="Login" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IOpenIdConnectLogin _login;

        /// <summary>
        /// The configuration settings of the login flow of the custom Open ID Connect provider.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IOpenIdConnectLogin Login { get => (this._login = this._login ?? new Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.OpenIdConnectLogin()); set => this._login = value; }

        /// <summary>The name of the claim that contains the users name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string LoginNameClaimType { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IOpenIdConnectLoginInternal)Login).NameClaimType; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IOpenIdConnectLoginInternal)Login).NameClaimType = value ?? null; }

        /// <summary>A list of the scopes that should be requested while authenticating.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string[] LoginScope { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IOpenIdConnectLoginInternal)Login).Scope; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IOpenIdConnectLoginInternal)Login).Scope = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for Login</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IOpenIdConnectLogin Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomOpenIdConnectProviderInternal.Login { get => (this._login = this._login ?? new Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.OpenIdConnectLogin()); set { {_login = value;} } }

        /// <summary>Internal Acessors for Registration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IOpenIdConnectRegistration Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomOpenIdConnectProviderInternal.Registration { get => (this._registration = this._registration ?? new Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.OpenIdConnectRegistration()); set { {_registration = value;} } }

        /// <summary>Internal Acessors for RegistrationClientCredential</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IOpenIdConnectClientCredential Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomOpenIdConnectProviderInternal.RegistrationClientCredential { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IOpenIdConnectRegistrationInternal)Registration).ClientCredential; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IOpenIdConnectRegistrationInternal)Registration).ClientCredential = value; }

        /// <summary>Internal Acessors for RegistrationOpenIdConnectConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IOpenIdConnectConfig Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.ICustomOpenIdConnectProviderInternal.RegistrationOpenIdConnectConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IOpenIdConnectRegistrationInternal)Registration).OpenIdConnectConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IOpenIdConnectRegistrationInternal)Registration).OpenIdConnectConfiguration = value; }

        /// <summary>The endpoint to be used to make an authorization request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string OpenIdConnectConfigurationAuthorizationEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IOpenIdConnectRegistrationInternal)Registration).OpenIdConnectConfigurationAuthorizationEndpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IOpenIdConnectRegistrationInternal)Registration).OpenIdConnectConfigurationAuthorizationEndpoint = value ?? null; }

        /// <summary>The endpoint that provides the keys necessary to validate the token.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string OpenIdConnectConfigurationCertificationUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IOpenIdConnectRegistrationInternal)Registration).OpenIdConnectConfigurationCertificationUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IOpenIdConnectRegistrationInternal)Registration).OpenIdConnectConfigurationCertificationUri = value ?? null; }

        /// <summary>The endpoint that issues the token.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string OpenIdConnectConfigurationIssuer { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IOpenIdConnectRegistrationInternal)Registration).OpenIdConnectConfigurationIssuer; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IOpenIdConnectRegistrationInternal)Registration).OpenIdConnectConfigurationIssuer = value ?? null; }

        /// <summary>The endpoint to be used to request a token.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string OpenIdConnectConfigurationTokenEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IOpenIdConnectRegistrationInternal)Registration).OpenIdConnectConfigurationTokenEndpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IOpenIdConnectRegistrationInternal)Registration).OpenIdConnectConfigurationTokenEndpoint = value ?? null; }

        /// <summary>The endpoint that contains all the configuration endpoints for the provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string OpenIdConnectConfigurationWellKnownOpenIdConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IOpenIdConnectRegistrationInternal)Registration).OpenIdConnectConfigurationWellKnownOpenIdConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IOpenIdConnectRegistrationInternal)Registration).OpenIdConnectConfigurationWellKnownOpenIdConfiguration = value ?? null; }

        /// <summary>Backing field for <see cref="Registration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IOpenIdConnectRegistration _registration;

        /// <summary>
        /// The configuration settings of the app registration for the custom Open ID Connect provider.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IOpenIdConnectRegistration Registration { get => (this._registration = this._registration ?? new Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.OpenIdConnectRegistration()); set => this._registration = value; }

        /// <summary>The client id of the custom Open ID Connect provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string RegistrationClientId { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IOpenIdConnectRegistrationInternal)Registration).ClientId; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IOpenIdConnectRegistrationInternal)Registration).ClientId = value ?? null; }

        /// <summary>Creates an new <see cref="CustomOpenIdConnectProvider" /> instance.</summary>
        public CustomOpenIdConnectProvider()
        {

        }
    }
    /// The configuration settings of the custom Open ID Connect provider.
    public partial interface ICustomOpenIdConnectProvider :
        Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The app setting that contains the client secret for the custom Open ID Connect provider.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The app setting that contains the client secret for the custom Open ID Connect provider.",
        SerializedName = @"clientSecretSettingName",
        PossibleTypes = new [] { typeof(string) })]
        string ClientCredentialClientSecretSettingName { get; set; }
        /// <summary>The method that should be used to authenticate the user.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The method that should be used to authenticate the user.",
        SerializedName = @"method",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.App.Support.ClientCredentialMethod) })]
        Microsoft.Azure.PowerShell.Cmdlets.App.Support.ClientCredentialMethod? ClientCredentialMethod { get; set; }
        /// <summary>
        /// <code>false</code> if the custom Open ID provider provider should not be enabled; otherwise, <code>true</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<code>false</code> if the custom Open ID provider provider should not be enabled; otherwise, <code>true</code>.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Enabled { get; set; }
        /// <summary>The name of the claim that contains the users name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the claim that contains the users name.",
        SerializedName = @"nameClaimType",
        PossibleTypes = new [] { typeof(string) })]
        string LoginNameClaimType { get; set; }
        /// <summary>A list of the scopes that should be requested while authenticating.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of the scopes that should be requested while authenticating.",
        SerializedName = @"scopes",
        PossibleTypes = new [] { typeof(string) })]
        string[] LoginScope { get; set; }
        /// <summary>The endpoint to be used to make an authorization request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The endpoint to be used to make an authorization request.",
        SerializedName = @"authorizationEndpoint",
        PossibleTypes = new [] { typeof(string) })]
        string OpenIdConnectConfigurationAuthorizationEndpoint { get; set; }
        /// <summary>The endpoint that provides the keys necessary to validate the token.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The endpoint that provides the keys necessary to validate the token.",
        SerializedName = @"certificationUri",
        PossibleTypes = new [] { typeof(string) })]
        string OpenIdConnectConfigurationCertificationUri { get; set; }
        /// <summary>The endpoint that issues the token.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The endpoint that issues the token.",
        SerializedName = @"issuer",
        PossibleTypes = new [] { typeof(string) })]
        string OpenIdConnectConfigurationIssuer { get; set; }
        /// <summary>The endpoint to be used to request a token.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The endpoint to be used to request a token.",
        SerializedName = @"tokenEndpoint",
        PossibleTypes = new [] { typeof(string) })]
        string OpenIdConnectConfigurationTokenEndpoint { get; set; }
        /// <summary>The endpoint that contains all the configuration endpoints for the provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The endpoint that contains all the configuration endpoints for the provider.",
        SerializedName = @"wellKnownOpenIdConfiguration",
        PossibleTypes = new [] { typeof(string) })]
        string OpenIdConnectConfigurationWellKnownOpenIdConfiguration { get; set; }
        /// <summary>The client id of the custom Open ID Connect provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The client id of the custom Open ID Connect provider.",
        SerializedName = @"clientId",
        PossibleTypes = new [] { typeof(string) })]
        string RegistrationClientId { get; set; }

    }
    /// The configuration settings of the custom Open ID Connect provider.
    internal partial interface ICustomOpenIdConnectProviderInternal

    {
        /// <summary>
        /// The app setting that contains the client secret for the custom Open ID Connect provider.
        /// </summary>
        string ClientCredentialClientSecretSettingName { get; set; }
        /// <summary>The method that should be used to authenticate the user.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Support.ClientCredentialMethod? ClientCredentialMethod { get; set; }
        /// <summary>
        /// <code>false</code> if the custom Open ID provider provider should not be enabled; otherwise, <code>true</code>.
        /// </summary>
        bool? Enabled { get; set; }
        /// <summary>
        /// The configuration settings of the login flow of the custom Open ID Connect provider.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IOpenIdConnectLogin Login { get; set; }
        /// <summary>The name of the claim that contains the users name.</summary>
        string LoginNameClaimType { get; set; }
        /// <summary>A list of the scopes that should be requested while authenticating.</summary>
        string[] LoginScope { get; set; }
        /// <summary>The endpoint to be used to make an authorization request.</summary>
        string OpenIdConnectConfigurationAuthorizationEndpoint { get; set; }
        /// <summary>The endpoint that provides the keys necessary to validate the token.</summary>
        string OpenIdConnectConfigurationCertificationUri { get; set; }
        /// <summary>The endpoint that issues the token.</summary>
        string OpenIdConnectConfigurationIssuer { get; set; }
        /// <summary>The endpoint to be used to request a token.</summary>
        string OpenIdConnectConfigurationTokenEndpoint { get; set; }
        /// <summary>The endpoint that contains all the configuration endpoints for the provider.</summary>
        string OpenIdConnectConfigurationWellKnownOpenIdConfiguration { get; set; }
        /// <summary>
        /// The configuration settings of the app registration for the custom Open ID Connect provider.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IOpenIdConnectRegistration Registration { get; set; }
        /// <summary>The authentication credentials of the custom Open ID Connect provider.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IOpenIdConnectClientCredential RegistrationClientCredential { get; set; }
        /// <summary>The client id of the custom Open ID Connect provider.</summary>
        string RegistrationClientId { get; set; }
        /// <summary>
        /// The configuration settings of the endpoints used for the custom Open ID Connect provider.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.Api20220301.IOpenIdConnectConfig RegistrationOpenIdConnectConfiguration { get; set; }

    }
}