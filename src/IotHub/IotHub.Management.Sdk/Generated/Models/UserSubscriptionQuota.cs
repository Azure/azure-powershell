// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.IotHub.Models
{
    using System.Linq;

    /// <summary>
    /// User subscription quota response
    /// </summary>
    public partial class UserSubscriptionQuota
    {
        /// <summary>
        /// Initializes a new instance of the UserSubscriptionQuota class.
        /// </summary>
        public UserSubscriptionQuota()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the UserSubscriptionQuota class.
        /// </summary>

        /// <param name="id">IotHub type id
        /// </param>

        /// <param name="type">Response type
        /// </param>

        /// <param name="unit">Unit of IotHub type
        /// </param>

        /// <param name="currentValue">Current number of IotHub type
        /// </param>

        /// <param name="limit">Numerical limit on IotHub type
        /// </param>

        /// <param name="name">IotHub type
        /// </param>
        public UserSubscriptionQuota(string id = default(string), string type = default(string), string unit = default(string), int? currentValue = default(int?), int? limit = default(int?), Name name = default(Name))

        {
            this.Id = id;
            this.Type = type;
            this.Unit = unit;
            this.CurrentValue = currentValue;
            this.Limit = limit;
            this.Name = name;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets iotHub type id
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "id")]
        public string Id {get; set; }

        /// <summary>
        /// Gets or sets response type
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "type")]
        public string Type {get; set; }

        /// <summary>
        /// Gets or sets unit of IotHub type
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "unit")]
        public string Unit {get; set; }

        /// <summary>
        /// Gets or sets current number of IotHub type
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "currentValue")]
        public int? CurrentValue {get; set; }

        /// <summary>
        /// Gets or sets numerical limit on IotHub type
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "limit")]
        public int? Limit {get; set; }

        /// <summary>
        /// Gets or sets iotHub type
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public Name Name {get; set; }
    }
}