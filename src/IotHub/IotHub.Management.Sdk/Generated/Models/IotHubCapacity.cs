// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.IotHub.Models
{
    using System.Linq;

    /// <summary>
    /// IoT Hub capacity information.
    /// </summary>
    public partial class IotHubCapacity
    {
        /// <summary>
        /// Initializes a new instance of the IotHubCapacity class.
        /// </summary>
        public IotHubCapacity()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the IotHubCapacity class.
        /// </summary>

        /// <param name="minimum">The minimum number of units.
        /// </param>

        /// <param name="maximum">The maximum number of units.
        /// </param>

        /// <param name="defaultProperty">The default number of units.
        /// </param>

        /// <param name="scaleType">The type of the scaling enabled.
        /// Possible values include: &#39;Automatic&#39;, &#39;Manual&#39;, &#39;None&#39;</param>
        public IotHubCapacity(long? minimum = default(long?), long? maximum = default(long?), long? defaultProperty = default(long?), IotHubScaleType? scaleType = default(IotHubScaleType?))

        {
            this.Minimum = minimum;
            this.Maximum = maximum;
            this.DefaultProperty = defaultProperty;
            this.ScaleType = scaleType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the minimum number of units.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "minimum")]
        public long? Minimum {get; private set; }

        /// <summary>
        /// Gets the maximum number of units.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "maximum")]
        public long? Maximum {get; private set; }

        /// <summary>
        /// Gets the default number of units.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "default")]
        public long? DefaultProperty {get; private set; }

        /// <summary>
        /// Gets the type of the scaling enabled. Possible values include: &#39;Automatic&#39;, &#39;Manual&#39;, &#39;None&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "scaleType")]
        public IotHubScaleType? ScaleType {get; private set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Minimum != null)
            {
                if (this.Minimum > 1)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.InclusiveMaximum, "Minimum", 1);
                }
                if (this.Minimum < 1)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.InclusiveMinimum, "Minimum", 1);
                }
            }

        }
    }
}