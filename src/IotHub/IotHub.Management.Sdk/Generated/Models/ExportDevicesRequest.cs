// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.IotHub.Models
{
    using System.Linq;

    /// <summary>
    /// Use to provide parameters when requesting an export of all devices in the
    /// IoT hub.
    /// </summary>
    public partial class ExportDevicesRequest
    {
        /// <summary>
        /// Initializes a new instance of the ExportDevicesRequest class.
        /// </summary>
        public ExportDevicesRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ExportDevicesRequest class.
        /// </summary>

        /// <param name="exportBlobContainerUri">The export blob container URI.
        /// </param>

        /// <param name="excludeKeys">The value indicating whether keys should be excluded during export.
        /// </param>

        /// <param name="exportBlobName">The name of the blob that will be created in the provided output blob
        /// container. This blob will contain the exported device registry information
        /// for the IoT Hub.
        /// </param>

        /// <param name="authenticationType">Specifies authentication type being used for connecting to the storage
        /// account.
        /// Possible values include: &#39;keyBased&#39;, &#39;identityBased&#39;</param>

        /// <param name="identity">Managed identity properties of storage endpoint for export devices.
        /// </param>

        /// <param name="includeConfigurations">The value indicating whether configurations should be exported.
        /// </param>

        /// <param name="configurationsBlobName">The name of the blob that will be created in the provided output blob
        /// container. This blob will contain the exported configurations for the Iot
        /// Hub.
        /// </param>
        public ExportDevicesRequest(string exportBlobContainerUri, bool excludeKeys, string exportBlobName = default(string), string authenticationType = default(string), ManagedIdentity identity = default(ManagedIdentity), bool? includeConfigurations = default(bool?), string configurationsBlobName = default(string))

        {
            this.ExportBlobContainerUri = exportBlobContainerUri;
            this.ExcludeKeys = excludeKeys;
            this.ExportBlobName = exportBlobName;
            this.AuthenticationType = authenticationType;
            this.Identity = identity;
            this.IncludeConfigurations = includeConfigurations;
            this.ConfigurationsBlobName = configurationsBlobName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the export blob container URI.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "exportBlobContainerUri")]
        public string ExportBlobContainerUri {get; set; }

        /// <summary>
        /// Gets or sets the value indicating whether keys should be excluded during
        /// export.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "excludeKeys")]
        public bool ExcludeKeys {get; set; }

        /// <summary>
        /// Gets or sets the name of the blob that will be created in the provided
        /// output blob container. This blob will contain the exported device registry
        /// information for the IoT Hub.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "exportBlobName")]
        public string ExportBlobName {get; set; }

        /// <summary>
        /// Gets or sets specifies authentication type being used for connecting to the
        /// storage account. Possible values include: &#39;keyBased&#39;, &#39;identityBased&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "authenticationType")]
        public string AuthenticationType {get; set; }

        /// <summary>
        /// Gets or sets managed identity properties of storage endpoint for export
        /// devices.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "identity")]
        public ManagedIdentity Identity {get; set; }

        /// <summary>
        /// Gets or sets the value indicating whether configurations should be
        /// exported.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "includeConfigurations")]
        public bool? IncludeConfigurations {get; set; }

        /// <summary>
        /// Gets or sets the name of the blob that will be created in the provided
        /// output blob container. This blob will contain the exported configurations
        /// for the Iot Hub.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "configurationsBlobName")]
        public string ConfigurationsBlobName {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.ExportBlobContainerUri == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "ExportBlobContainerUri");
            }





        }
    }
}