// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.IotHub.Models
{
    using System.Linq;

    /// <summary>
    /// The properties of the Azure Storage endpoint for file upload.
    /// </summary>
    public partial class StorageEndpointProperties
    {
        /// <summary>
        /// Initializes a new instance of the StorageEndpointProperties class.
        /// </summary>
        public StorageEndpointProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the StorageEndpointProperties class.
        /// </summary>

        /// <param name="sasTtlAsIso8601">The period of time for which the SAS URI generated by IoT Hub for file
        /// upload is valid. See:
        /// https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload#file-upload-notification-configuration-options.
        /// </param>

        /// <param name="connectionString">The connection string for the Azure Storage account to which files are
        /// uploaded.
        /// </param>

        /// <param name="containerName">The name of the root container where you upload files. The container need
        /// not exist but should be creatable using the connectionString specified.
        /// </param>

        /// <param name="authenticationType">Specifies authentication type being used for connecting to the storage
        /// account.
        /// Possible values include: &#39;keyBased&#39;, &#39;identityBased&#39;</param>

        /// <param name="identity">Managed identity properties of storage endpoint for file upload.
        /// </param>
        public StorageEndpointProperties(string connectionString, string containerName, System.TimeSpan? sasTtlAsIso8601 = default(System.TimeSpan?), string authenticationType = default(string), ManagedIdentity identity = default(ManagedIdentity))

        {
            this.SasTtlAsIso8601 = sasTtlAsIso8601;
            this.ConnectionString = connectionString;
            this.ContainerName = containerName;
            this.AuthenticationType = authenticationType;
            this.Identity = identity;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the period of time for which the SAS URI generated by IoT Hub
        /// for file upload is valid. See:
        /// https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload#file-upload-notification-configuration-options.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sasTtlAsIso8601")]
        public System.TimeSpan? SasTtlAsIso8601 {get; set; }

        /// <summary>
        /// Gets or sets the connection string for the Azure Storage account to which
        /// files are uploaded.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "connectionString")]
        public string ConnectionString {get; set; }

        /// <summary>
        /// Gets or sets the name of the root container where you upload files. The
        /// container need not exist but should be creatable using the connectionString
        /// specified.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "containerName")]
        public string ContainerName {get; set; }

        /// <summary>
        /// Gets or sets specifies authentication type being used for connecting to the
        /// storage account. Possible values include: &#39;keyBased&#39;, &#39;identityBased&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "authenticationType")]
        public string AuthenticationType {get; set; }

        /// <summary>
        /// Gets or sets managed identity properties of storage endpoint for file
        /// upload.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "identity")]
        public ManagedIdentity Identity {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.ConnectionString == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "ConnectionString");
            }
            if (this.ContainerName == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "ContainerName");
            }




        }
    }
}