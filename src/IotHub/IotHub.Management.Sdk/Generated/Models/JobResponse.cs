// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.IotHub.Models
{
    using System.Linq;

    /// <summary>
    /// The properties of the Job Response object.
    /// </summary>
    public partial class JobResponse
    {
        /// <summary>
        /// Initializes a new instance of the JobResponse class.
        /// </summary>
        public JobResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the JobResponse class.
        /// </summary>

        /// <param name="jobId">The job identifier.
        /// </param>

        /// <param name="startTimeUtc">The start time of the job.
        /// </param>

        /// <param name="endTimeUtc">The time the job stopped processing.
        /// </param>

        /// <param name="type">The type of the job.
        /// Possible values include: &#39;unknown&#39;, &#39;export&#39;, &#39;import&#39;, &#39;backup&#39;,
        /// &#39;readDeviceProperties&#39;, &#39;writeDeviceProperties&#39;,
        /// &#39;updateDeviceConfiguration&#39;, &#39;rebootDevice&#39;, &#39;factoryResetDevice&#39;,
        /// &#39;firmwareUpdate&#39;</param>

        /// <param name="status">The status of the job.
        /// Possible values include: &#39;unknown&#39;, &#39;enqueued&#39;, &#39;running&#39;, &#39;completed&#39;,
        /// &#39;failed&#39;, &#39;cancelled&#39;</param>

        /// <param name="failureReason">If status == failed, this string containing the reason for the failure.
        /// </param>

        /// <param name="statusMessage">The status message for the job.
        /// </param>

        /// <param name="parentJobId">The job identifier of the parent job, if any.
        /// </param>
        public JobResponse(string jobId = default(string), System.DateTimeOffset? startTimeUtc = default(System.DateTimeOffset?), System.DateTimeOffset? endTimeUtc = default(System.DateTimeOffset?), string type = default(string), JobStatus? status = default(JobStatus?), string failureReason = default(string), string statusMessage = default(string), string parentJobId = default(string))

        {
            this.JobId = jobId;
            this.StartTimeUtc = startTimeUtc;
            this.EndTimeUtc = endTimeUtc;
            this.Type = type;
            this.Status = status;
            this.FailureReason = failureReason;
            this.StatusMessage = statusMessage;
            this.ParentJobId = parentJobId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the job identifier.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "jobId")]
        public string JobId {get; private set; }

        /// <summary>
        /// Gets the start time of the job.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "startTimeUtc")]
        public System.DateTimeOffset? StartTimeUtc {get; private set; }

        /// <summary>
        /// Gets the time the job stopped processing.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "endTimeUtc")]
        public System.DateTimeOffset? EndTimeUtc {get; private set; }

        /// <summary>
        /// Gets the type of the job. Possible values include: &#39;unknown&#39;, &#39;export&#39;, &#39;import&#39;, &#39;backup&#39;, &#39;readDeviceProperties&#39;, &#39;writeDeviceProperties&#39;, &#39;updateDeviceConfiguration&#39;, &#39;rebootDevice&#39;, &#39;factoryResetDevice&#39;, &#39;firmwareUpdate&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "type")]
        public string Type {get; private set; }

        /// <summary>
        /// Gets the status of the job. Possible values include: &#39;unknown&#39;, &#39;enqueued&#39;, &#39;running&#39;, &#39;completed&#39;, &#39;failed&#39;, &#39;cancelled&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "status")]
        public JobStatus? Status {get; private set; }

        /// <summary>
        /// Gets if status == failed, this string containing the reason for the
        /// failure.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "failureReason")]
        public string FailureReason {get; private set; }

        /// <summary>
        /// Gets the status message for the job.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "statusMessage")]
        public string StatusMessage {get; private set; }

        /// <summary>
        /// Gets the job identifier of the parent job, if any.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "parentJobId")]
        public string ParentJobId {get; private set; }
    }
}