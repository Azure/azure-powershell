// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.IotHub.Models
{
    using System.Linq;

    /// <summary>
    /// The properties of an enrichment that your IoT hub applies to messages
    /// delivered to endpoints.
    /// </summary>
    public partial class EnrichmentProperties
    {
        /// <summary>
        /// Initializes a new instance of the EnrichmentProperties class.
        /// </summary>
        public EnrichmentProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EnrichmentProperties class.
        /// </summary>

        /// <param name="key">The key or name for the enrichment property.
        /// </param>

        /// <param name="value">The value for the enrichment property.
        /// </param>

        /// <param name="endpointNames">The list of endpoints for which the enrichment is applied to the message.
        /// </param>
        public EnrichmentProperties(string key, string value, System.Collections.Generic.IList<string> endpointNames)

        {
            this.Key = key;
            this.Value = value;
            this.EndpointNames = endpointNames;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the key or name for the enrichment property.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "key")]
        public string Key {get; set; }

        /// <summary>
        /// Gets or sets the value for the enrichment property.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "value")]
        public string Value {get; set; }

        /// <summary>
        /// Gets or sets the list of endpoints for which the enrichment is applied to
        /// the message.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "endpointNames")]
        public System.Collections.Generic.IList<string> EndpointNames {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Key == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Key");
            }
            if (this.Value == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Value");
            }
            if (this.EndpointNames == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "EndpointNames");
            }


            if (this.EndpointNames != null)
            {
                if (this.EndpointNames.Count < 1)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MinItems, "EndpointNames", 1);
                }
            }
        }
    }
}