// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.IotHub.Models
{
    using System.Linq;

    /// <summary>
    /// The routing related properties of the IoT hub. See:
    /// https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging
    /// </summary>
    public partial class RoutingProperties
    {
        /// <summary>
        /// Initializes a new instance of the RoutingProperties class.
        /// </summary>
        public RoutingProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RoutingProperties class.
        /// </summary>

        /// <param name="endpoints">The properties related to the custom endpoints to which your IoT hub routes
        /// messages based on the routing rules. A maximum of 10 custom endpoints are
        /// allowed across all endpoint types for paid hubs and only 1 custom endpoint
        /// is allowed across all endpoint types for free hubs.
        /// </param>

        /// <param name="routes">The list of user-provided routing rules that the IoT hub uses to route
        /// messages to built-in and custom endpoints. A maximum of 100 routing rules
        /// are allowed for paid hubs and a maximum of 5 routing rules are allowed for
        /// free hubs.
        /// </param>

        /// <param name="fallbackRoute">The properties of the route that is used as a fall-back route when none of
        /// the conditions specified in the &#39;routes&#39; section are met. This is an
        /// optional parameter. When this property is not set, the messages which do
        /// not meet any of the conditions specified in the &#39;routes&#39; section get routed
        /// to the built-in eventhub endpoint.
        /// </param>

        /// <param name="enrichments">The list of user-provided enrichments that the IoT hub applies to messages
        /// to be delivered to built-in and custom endpoints. See:
        /// https://aka.ms/telemetryoneventgrid
        /// </param>
        public RoutingProperties(RoutingEndpoints endpoints = default(RoutingEndpoints), System.Collections.Generic.IList<RouteProperties> routes = default(System.Collections.Generic.IList<RouteProperties>), FallbackRouteProperties fallbackRoute = default(FallbackRouteProperties), System.Collections.Generic.IList<EnrichmentProperties> enrichments = default(System.Collections.Generic.IList<EnrichmentProperties>))

        {
            this.Endpoints = endpoints;
            this.Routes = routes;
            this.FallbackRoute = fallbackRoute;
            this.Enrichments = enrichments;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the properties related to the custom endpoints to which your
        /// IoT hub routes messages based on the routing rules. A maximum of 10 custom
        /// endpoints are allowed across all endpoint types for paid hubs and only 1
        /// custom endpoint is allowed across all endpoint types for free hubs.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "endpoints")]
        public RoutingEndpoints Endpoints {get; set; }

        /// <summary>
        /// Gets or sets the list of user-provided routing rules that the IoT hub uses
        /// to route messages to built-in and custom endpoints. A maximum of 100
        /// routing rules are allowed for paid hubs and a maximum of 5 routing rules
        /// are allowed for free hubs.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "routes")]
        public System.Collections.Generic.IList<RouteProperties> Routes {get; set; }

        /// <summary>
        /// Gets or sets the properties of the route that is used as a fall-back route
        /// when none of the conditions specified in the &#39;routes&#39; section are met. This
        /// is an optional parameter. When this property is not set, the messages which
        /// do not meet any of the conditions specified in the &#39;routes&#39; section get
        /// routed to the built-in eventhub endpoint.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "fallbackRoute")]
        public FallbackRouteProperties FallbackRoute {get; set; }

        /// <summary>
        /// Gets or sets the list of user-provided enrichments that the IoT hub applies
        /// to messages to be delivered to built-in and custom endpoints. See:
        /// https://aka.ms/telemetryoneventgrid
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "enrichments")]
        public System.Collections.Generic.IList<EnrichmentProperties> Enrichments {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {

            if (this.Routes != null)
            {
                foreach (var element in this.Routes)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
            if (this.FallbackRoute != null)
            {
                this.FallbackRoute.Validate();
            }
            if (this.Enrichments != null)
            {
                foreach (var element in this.Enrichments)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}