// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.2, generator: @autorest/powershell@4.0.698)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.FrontDoor.Models
{
    using System.Linq;

    /// <summary>
    /// The JSON object that contains the properties required to create load
    /// balancing settings
    /// </summary>
    public partial class LoadBalancingSettingsProperties : LoadBalancingSettingsUpdateParameters
    {
        /// <summary>
        /// Initializes a new instance of the LoadBalancingSettingsProperties class.
        /// </summary>
        public LoadBalancingSettingsProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LoadBalancingSettingsProperties class.
        /// </summary>

        /// <param name="sampleSize">The number of samples to consider for load balancing decisions
        /// </param>

        /// <param name="successfulSamplesRequired">The number of samples within the sample period that must succeed
        /// </param>

        /// <param name="additionalLatencyMilliseconds">The additional latency in milliseconds for probes to fall into the lowest
        /// latency bucket
        /// </param>

        /// <param name="resourceState">Resource status.
        /// Possible values include: &#39;Creating&#39;, &#39;Enabling&#39;, &#39;Enabled&#39;, &#39;Disabling&#39;,
        /// &#39;Disabled&#39;, &#39;Deleting&#39;, &#39;Migrating&#39;, &#39;Migrated&#39;</param>
        public LoadBalancingSettingsProperties(int? sampleSize = default(int?), int? successfulSamplesRequired = default(int?), int? additionalLatencyMilliseconds = default(int?), string resourceState = default(string))

        : base(sampleSize, successfulSamplesRequired, additionalLatencyMilliseconds)
        {
            this.ResourceState = resourceState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets resource status. Possible values include: &#39;Creating&#39;, &#39;Enabling&#39;, &#39;Enabled&#39;, &#39;Disabling&#39;, &#39;Disabled&#39;, &#39;Deleting&#39;, &#39;Migrating&#39;, &#39;Migrated&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "resourceState")]
        public string ResourceState {get; private set; }
    }
}