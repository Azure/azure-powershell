// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.2, generator: @autorest/powershell@4.0.698)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.FrontDoor.Models
{
    using System.Linq;

    /// <summary>
    /// Defines the Timeseries
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class Timeseries : Resource
    {
        /// <summary>
        /// Initializes a new instance of the Timeseries class.
        /// </summary>
        public Timeseries()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Timeseries class.
        /// </summary>

        /// <param name="id">Resource ID.
        /// </param>

        /// <param name="name">Resource name.
        /// </param>

        /// <param name="type">Resource type.
        /// </param>

        /// <param name="location">Resource location.
        /// </param>

        /// <param name="tags">Resource tags.
        /// </param>

        /// <param name="aggregationInterval">The aggregation interval of the Timeseries
        /// Possible values include: &#39;Hourly&#39;, &#39;Daily&#39;</param>

        /// <param name="timeseriesType">The type of Timeseries
        /// Possible values include: &#39;MeasurementCounts&#39;, &#39;LatencyP50&#39;, &#39;LatencyP75&#39;,
        /// &#39;LatencyP95&#39;</param>

        /// <param name="endpoint">The endpoint associated with the Timeseries data point
        /// </param>

        /// <param name="startDateTimeUtc">The start DateTime of the Timeseries in UTC
        /// </param>

        /// <param name="endDateTimeUtc">The end DateTime of the Timeseries in UTC
        /// </param>

        /// <param name="country">The country associated with the Timeseries. Values are country ISO codes as
        /// specified here- https://www.iso.org/iso-3166-country-codes.html
        /// </param>

        /// <param name="timeseriesData">The set of data points for the timeseries
        /// </param>
        public Timeseries(string id = default(string), string name = default(string), string type = default(string), string location = default(string), System.Collections.Generic.IDictionary<string, string> tags = default(System.Collections.Generic.IDictionary<string, string>), string aggregationInterval = default(string), string timeseriesType = default(string), string endpoint = default(string), string startDateTimeUtc = default(string), string endDateTimeUtc = default(string), string country = default(string), System.Collections.Generic.IList<TimeseriesDataPoint> timeseriesData = default(System.Collections.Generic.IList<TimeseriesDataPoint>))

        : base(id, name, type, location, tags)
        {
            this.AggregationInterval = aggregationInterval;
            this.TimeseriesType = timeseriesType;
            this.Endpoint = endpoint;
            this.StartDateTimeUtc = startDateTimeUtc;
            this.EndDateTimeUtc = endDateTimeUtc;
            this.Country = country;
            this.TimeseriesData = timeseriesData;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the aggregation interval of the Timeseries Possible values include: &#39;Hourly&#39;, &#39;Daily&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.aggregationInterval")]
        public string AggregationInterval {get; set; }

        /// <summary>
        /// Gets or sets the type of Timeseries Possible values include: &#39;MeasurementCounts&#39;, &#39;LatencyP50&#39;, &#39;LatencyP75&#39;, &#39;LatencyP95&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.timeseriesType")]
        public string TimeseriesType {get; set; }

        /// <summary>
        /// Gets or sets the endpoint associated with the Timeseries data point
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.endpoint")]
        public string Endpoint {get; set; }

        /// <summary>
        /// Gets or sets the start DateTime of the Timeseries in UTC
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.startDateTimeUTC")]
        public string StartDateTimeUtc {get; set; }

        /// <summary>
        /// Gets or sets the end DateTime of the Timeseries in UTC
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.endDateTimeUTC")]
        public string EndDateTimeUtc {get; set; }

        /// <summary>
        /// Gets or sets the country associated with the Timeseries. Values are country
        /// ISO codes as specified here-
        /// https://www.iso.org/iso-3166-country-codes.html
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.country")]
        public string Country {get; set; }

        /// <summary>
        /// Gets or sets the set of data points for the timeseries
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.timeseriesData")]
        public System.Collections.Generic.IList<TimeseriesDataPoint> TimeseriesData {get; set; }
    }
}