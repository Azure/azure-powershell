// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.2, generator: @autorest/powershell@4.0.698)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.FrontDoor.Models
{
    using System.Linq;

    /// <summary>
    /// Defines web application firewall policy properties.
    /// </summary>
    public partial class WebApplicationFirewallPolicyProperties
    {
        /// <summary>
        /// Initializes a new instance of the WebApplicationFirewallPolicyProperties class.
        /// </summary>
        public WebApplicationFirewallPolicyProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the WebApplicationFirewallPolicyProperties class.
        /// </summary>

        /// <param name="policySettings">Describes settings for the policy.
        /// </param>

        /// <param name="customRules">Describes custom rules inside the policy.
        /// </param>

        /// <param name="managedRules">Describes managed rules inside the policy.
        /// </param>

        /// <param name="frontendEndpointLinks">Describes Frontend Endpoints associated with this Web Application Firewall
        /// policy.
        /// </param>

        /// <param name="routingRuleLinks">Describes Routing Rules associated with this Web Application Firewall
        /// policy.
        /// </param>

        /// <param name="securityPolicyLinks">Describes Security Policy associated with this Web Application Firewall
        /// policy.
        /// </param>

        /// <param name="provisioningState">Provisioning state of the policy.
        /// </param>

        /// <param name="resourceState">Resource status of the policy.
        /// Possible values include: &#39;Creating&#39;, &#39;Enabling&#39;, &#39;Enabled&#39;, &#39;Disabling&#39;,
        /// &#39;Disabled&#39;, &#39;Deleting&#39;</param>
        public WebApplicationFirewallPolicyProperties(PolicySettings policySettings = default(PolicySettings), CustomRuleList customRules = default(CustomRuleList), ManagedRuleSetList managedRules = default(ManagedRuleSetList), System.Collections.Generic.IList<FrontendEndpointLink> frontendEndpointLinks = default(System.Collections.Generic.IList<FrontendEndpointLink>), System.Collections.Generic.IList<RoutingRuleLink> routingRuleLinks = default(System.Collections.Generic.IList<RoutingRuleLink>), System.Collections.Generic.IList<SecurityPolicyLink> securityPolicyLinks = default(System.Collections.Generic.IList<SecurityPolicyLink>), string provisioningState = default(string), string resourceState = default(string))

        {
            this.PolicySettings = policySettings;
            this.CustomRules = customRules;
            this.ManagedRules = managedRules;
            this.FrontendEndpointLinks = frontendEndpointLinks;
            this.RoutingRuleLinks = routingRuleLinks;
            this.SecurityPolicyLinks = securityPolicyLinks;
            this.ProvisioningState = provisioningState;
            this.ResourceState = resourceState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets describes settings for the policy.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "policySettings")]
        public PolicySettings PolicySettings {get; set; }

        /// <summary>
        /// Gets or sets describes custom rules inside the policy.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "customRules")]
        public CustomRuleList CustomRules {get; set; }

        /// <summary>
        /// Gets or sets describes managed rules inside the policy.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "managedRules")]
        public ManagedRuleSetList ManagedRules {get; set; }

        /// <summary>
        /// Gets describes Frontend Endpoints associated with this Web Application
        /// Firewall policy.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "frontendEndpointLinks")]
        public System.Collections.Generic.IList<FrontendEndpointLink> FrontendEndpointLinks {get; private set; }

        /// <summary>
        /// Gets describes Routing Rules associated with this Web Application Firewall
        /// policy.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "routingRuleLinks")]
        public System.Collections.Generic.IList<RoutingRuleLink> RoutingRuleLinks {get; private set; }

        /// <summary>
        /// Gets describes Security Policy associated with this Web Application
        /// Firewall policy.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "securityPolicyLinks")]
        public System.Collections.Generic.IList<SecurityPolicyLink> SecurityPolicyLinks {get; private set; }

        /// <summary>
        /// Gets provisioning state of the policy.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState {get; private set; }

        /// <summary>
        /// Gets resource status of the policy. Possible values include: &#39;Creating&#39;, &#39;Enabling&#39;, &#39;Enabled&#39;, &#39;Disabling&#39;, &#39;Disabled&#39;, &#39;Deleting&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "resourceState")]
        public string ResourceState {get; private set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.PolicySettings != null)
            {
                this.PolicySettings.Validate();
            }







        }
    }
}