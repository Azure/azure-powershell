// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.2, generator: @autorest/powershell@4.0.698)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.FrontDoor.Models
{
    using System.Linq;

    /// <summary>
    /// Load balancing settings for a backend pool
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class LoadBalancingSettingsModel : SubResource
    {
        /// <summary>
        /// Initializes a new instance of the LoadBalancingSettingsModel class.
        /// </summary>
        public LoadBalancingSettingsModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LoadBalancingSettingsModel class.
        /// </summary>

        /// <param name="id">Resource ID.
        /// </param>

        /// <param name="name">Resource name.
        /// </param>

        /// <param name="type">Resource type.
        /// </param>

        /// <param name="sampleSize">The number of samples to consider for load balancing decisions
        /// </param>

        /// <param name="successfulSamplesRequired">The number of samples within the sample period that must succeed
        /// </param>

        /// <param name="additionalLatencyMilliseconds">The additional latency in milliseconds for probes to fall into the lowest
        /// latency bucket
        /// </param>

        /// <param name="resourceState">Resource status.
        /// Possible values include: &#39;Creating&#39;, &#39;Enabling&#39;, &#39;Enabled&#39;, &#39;Disabling&#39;,
        /// &#39;Disabled&#39;, &#39;Deleting&#39;, &#39;Migrating&#39;, &#39;Migrated&#39;</param>
        public LoadBalancingSettingsModel(string id = default(string), string name = default(string), string type = default(string), int? sampleSize = default(int?), int? successfulSamplesRequired = default(int?), int? additionalLatencyMilliseconds = default(int?), string resourceState = default(string))

        : base(id)
        {
            this.Name = name;
            this.Type = type;
            this.SampleSize = sampleSize;
            this.SuccessfulSamplesRequired = successfulSamplesRequired;
            this.AdditionalLatencyMilliseconds = additionalLatencyMilliseconds;
            this.ResourceState = resourceState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets resource name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; set; }

        /// <summary>
        /// Gets resource type.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "type")]
        public string Type {get; private set; }

        /// <summary>
        /// Gets or sets the number of samples to consider for load balancing decisions
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.sampleSize")]
        public int? SampleSize {get; set; }

        /// <summary>
        /// Gets or sets the number of samples within the sample period that must
        /// succeed
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.successfulSamplesRequired")]
        public int? SuccessfulSamplesRequired {get; set; }

        /// <summary>
        /// Gets or sets the additional latency in milliseconds for probes to fall into
        /// the lowest latency bucket
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.additionalLatencyMilliseconds")]
        public int? AdditionalLatencyMilliseconds {get; set; }

        /// <summary>
        /// Gets resource status. Possible values include: &#39;Creating&#39;, &#39;Enabling&#39;, &#39;Enabled&#39;, &#39;Disabling&#39;, &#39;Disabled&#39;, &#39;Deleting&#39;, &#39;Migrating&#39;, &#39;Migrated&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.resourceState")]
        public string ResourceState {get; private set; }
    }
}