// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.2, generator: @autorest/powershell@4.0.698)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.FrontDoor.Models
{
    using System.Linq;

    /// <summary>
    /// A rules engine configuration containing a list of rules that will run to
    /// modify the runtime behavior of the request and response.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class RulesEngine : Microsoft.Rest.Azure.IResource
    {
        /// <summary>
        /// Initializes a new instance of the RulesEngine class.
        /// </summary>
        public RulesEngine()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RulesEngine class.
        /// </summary>

        /// <param name="name">Resource name.
        /// </param>

        /// <param name="type">Resource type.
        /// </param>

        /// <param name="id">Resource ID.
        /// </param>

        /// <param name="rules">A list of rules that define a particular Rules Engine Configuration.
        /// </param>

        /// <param name="resourceState">Resource status.
        /// Possible values include: &#39;Creating&#39;, &#39;Enabling&#39;, &#39;Enabled&#39;, &#39;Disabling&#39;,
        /// &#39;Disabled&#39;, &#39;Deleting&#39;, &#39;Migrating&#39;, &#39;Migrated&#39;</param>
        public RulesEngine(string name = default(string), string type = default(string), string id = default(string), System.Collections.Generic.IList<RulesEngineRule> rules = default(System.Collections.Generic.IList<RulesEngineRule>), string resourceState = default(string))

        {
            this.Name = name;
            this.Type = type;
            this.Id = id;
            this.Rules = rules;
            this.ResourceState = resourceState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets resource name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; private set; }

        /// <summary>
        /// Gets resource type.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "type")]
        public string Type {get; private set; }

        /// <summary>
        /// Gets resource ID.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "id")]
        public string Id {get; private set; }

        /// <summary>
        /// Gets or sets a list of rules that define a particular Rules Engine
        /// Configuration.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.rules")]
        public System.Collections.Generic.IList<RulesEngineRule> Rules {get; set; }

        /// <summary>
        /// Gets resource status. Possible values include: &#39;Creating&#39;, &#39;Enabling&#39;, &#39;Enabled&#39;, &#39;Disabling&#39;, &#39;Disabled&#39;, &#39;Deleting&#39;, &#39;Migrating&#39;, &#39;Migrated&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.resourceState")]
        public string ResourceState {get; private set; }
    }
}