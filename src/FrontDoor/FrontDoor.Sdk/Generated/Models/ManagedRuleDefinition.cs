// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.2, generator: @autorest/powershell@4.0.698)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.FrontDoor.Models
{
    using System.Linq;

    /// <summary>
    /// Describes a managed rule definition.
    /// </summary>
    public partial class ManagedRuleDefinition
    {
        /// <summary>
        /// Initializes a new instance of the ManagedRuleDefinition class.
        /// </summary>
        public ManagedRuleDefinition()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ManagedRuleDefinition class.
        /// </summary>

        /// <param name="ruleId">Identifier for the managed rule.
        /// </param>

        /// <param name="defaultState">Describes the default state for the managed rule.
        /// Possible values include: &#39;Disabled&#39;, &#39;Enabled&#39;</param>

        /// <param name="defaultAction">Describes the default action to be applied when the managed rule matches.
        /// Possible values include: &#39;Allow&#39;, &#39;Block&#39;, &#39;Log&#39;, &#39;Redirect&#39;,
        /// &#39;AnomalyScoring&#39;, &#39;JSChallenge&#39;</param>

        /// <param name="description">Describes the functionality of the managed rule.
        /// </param>
        public ManagedRuleDefinition(string ruleId = default(string), string defaultState = default(string), string defaultAction = default(string), string description = default(string))

        {
            this.RuleId = ruleId;
            this.DefaultState = defaultState;
            this.DefaultAction = defaultAction;
            this.Description = description;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets identifier for the managed rule.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "ruleId")]
        public string RuleId {get; private set; }

        /// <summary>
        /// Gets describes the default state for the managed rule. Possible values include: &#39;Disabled&#39;, &#39;Enabled&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "defaultState")]
        public string DefaultState {get; private set; }

        /// <summary>
        /// Gets describes the default action to be applied when the managed rule
        /// matches. Possible values include: &#39;Allow&#39;, &#39;Block&#39;, &#39;Log&#39;, &#39;Redirect&#39;, &#39;AnomalyScoring&#39;, &#39;JSChallenge&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "defaultAction")]
        public string DefaultAction {get; private set; }

        /// <summary>
        /// Gets describes the functionality of the managed rule.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "description")]
        public string Description {get; private set; }
    }
}