// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.2, generator: @autorest/powershell@4.0.698)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.FrontDoor.Models
{
    using System.Linq;

    /// <summary>
    /// Routing rules to apply to an endpoint
    /// </summary>
    public partial class RoutingRuleUpdateParameters
    {
        /// <summary>
        /// Initializes a new instance of the RoutingRuleUpdateParameters class.
        /// </summary>
        public RoutingRuleUpdateParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RoutingRuleUpdateParameters class.
        /// </summary>

        /// <param name="frontendEndpoints">Frontend endpoints associated with this rule
        /// </param>

        /// <param name="acceptedProtocols">Protocol schemes to match for this rule
        /// </param>

        /// <param name="patternsToMatch">The route patterns of the rule.
        /// </param>

        /// <param name="enabledState">Whether to enable use of this rule. Permitted values are &#39;Enabled&#39; or
        /// &#39;Disabled&#39;
        /// Possible values include: &#39;Enabled&#39;, &#39;Disabled&#39;</param>

        /// <param name="routeConfiguration">A reference to the routing configuration.
        /// </param>

        /// <param name="rulesEngine">A reference to a specific Rules Engine Configuration to apply to this
        /// route.
        /// </param>

        /// <param name="webApplicationFirewallPolicyLink">Defines the Web Application Firewall policy for each routing rule (if
        /// applicable)
        /// </param>
        public RoutingRuleUpdateParameters(System.Collections.Generic.IList<SubResource> frontendEndpoints = default(System.Collections.Generic.IList<SubResource>), System.Collections.Generic.IList<string> acceptedProtocols = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<string> patternsToMatch = default(System.Collections.Generic.IList<string>), string enabledState = default(string), RouteConfiguration routeConfiguration = default(RouteConfiguration), SubResource rulesEngine = default(SubResource), RoutingRuleUpdateParametersWebApplicationFirewallPolicyLink webApplicationFirewallPolicyLink = default(RoutingRuleUpdateParametersWebApplicationFirewallPolicyLink))

        {
            this.FrontendEndpoints = frontendEndpoints;
            this.AcceptedProtocols = acceptedProtocols;
            this.PatternsToMatch = patternsToMatch;
            this.EnabledState = enabledState;
            this.RouteConfiguration = routeConfiguration;
            this.RulesEngine = rulesEngine;
            this.WebApplicationFirewallPolicyLink = webApplicationFirewallPolicyLink;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets frontend endpoints associated with this rule
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "frontendEndpoints")]
        public System.Collections.Generic.IList<SubResource> FrontendEndpoints {get; set; }

        /// <summary>
        /// Gets or sets protocol schemes to match for this rule
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "acceptedProtocols")]
        public System.Collections.Generic.IList<string> AcceptedProtocols {get; set; }

        /// <summary>
        /// Gets or sets the route patterns of the rule.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "patternsToMatch")]
        public System.Collections.Generic.IList<string> PatternsToMatch {get; set; }

        /// <summary>
        /// Gets or sets whether to enable use of this rule. Permitted values are
        /// &#39;Enabled&#39; or &#39;Disabled&#39; Possible values include: &#39;Enabled&#39;, &#39;Disabled&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "enabledState")]
        public string EnabledState {get; set; }

        /// <summary>
        /// Gets or sets a reference to the routing configuration.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "routeConfiguration")]
        public RouteConfiguration RouteConfiguration {get; set; }

        /// <summary>
        /// Gets or sets a reference to a specific Rules Engine Configuration to apply
        /// to this route.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "rulesEngine")]
        public SubResource RulesEngine {get; set; }

        /// <summary>
        /// Gets or sets defines the Web Application Firewall policy for each routing
        /// rule (if applicable)
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "webApplicationFirewallPolicyLink")]
        public RoutingRuleUpdateParametersWebApplicationFirewallPolicyLink WebApplicationFirewallPolicyLink {get; set; }
    }
}