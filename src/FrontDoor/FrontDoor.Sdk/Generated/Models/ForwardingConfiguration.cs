// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.2, generator: @autorest/powershell@4.0.698)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.FrontDoor.Models
{
    using System.Linq;

    /// <summary>
    /// Describes Forwarding Route.
    /// </summary>
    [Newtonsoft.Json.JsonObject("#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration")]
    public partial class ForwardingConfiguration : RouteConfiguration
    {
        /// <summary>
        /// Initializes a new instance of the ForwardingConfiguration class.
        /// </summary>
        public ForwardingConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ForwardingConfiguration class.
        /// </summary>

        /// <param name="customForwardingPath">A custom path used to rewrite resource paths matched by this rule. Leave
        /// empty to use incoming path.
        /// </param>

        /// <param name="forwardingProtocol">Protocol this rule will use when forwarding traffic to backends.
        /// Possible values include: &#39;HttpOnly&#39;, &#39;HttpsOnly&#39;, &#39;MatchRequest&#39;</param>

        /// <param name="cacheConfiguration">The caching configuration associated with this rule.
        /// </param>

        /// <param name="backendPool">A reference to the BackendPool which this rule routes to.
        /// </param>
        public ForwardingConfiguration(string customForwardingPath = default(string), string forwardingProtocol = default(string), CacheConfiguration cacheConfiguration = default(CacheConfiguration), SubResource backendPool = default(SubResource))

        {
            this.CustomForwardingPath = customForwardingPath;
            this.ForwardingProtocol = forwardingProtocol;
            this.CacheConfiguration = cacheConfiguration;
            this.BackendPool = backendPool;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets a custom path used to rewrite resource paths matched by this
        /// rule. Leave empty to use incoming path.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "customForwardingPath")]
        public string CustomForwardingPath {get; set; }

        /// <summary>
        /// Gets or sets protocol this rule will use when forwarding traffic to
        /// backends. Possible values include: &#39;HttpOnly&#39;, &#39;HttpsOnly&#39;, &#39;MatchRequest&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "forwardingProtocol")]
        public string ForwardingProtocol {get; set; }

        /// <summary>
        /// Gets or sets the caching configuration associated with this rule.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "cacheConfiguration")]
        public CacheConfiguration CacheConfiguration {get; set; }

        /// <summary>
        /// Gets or sets a reference to the BackendPool which this rule routes to.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "backendPool")]
        public SubResource BackendPool {get; set; }
    }
}