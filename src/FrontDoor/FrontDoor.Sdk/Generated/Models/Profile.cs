// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.2, generator: @autorest/powershell@4.0.698)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.FrontDoor.Models
{
    using System.Linq;

    /// <summary>
    /// Defines an Network Experiment Profile and lists of Experiments
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class Profile : Resource
    {
        /// <summary>
        /// Initializes a new instance of the Profile class.
        /// </summary>
        public Profile()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Profile class.
        /// </summary>

        /// <param name="id">Resource ID.
        /// </param>

        /// <param name="name">Resource name.
        /// </param>

        /// <param name="type">Resource type.
        /// </param>

        /// <param name="location">Resource location.
        /// </param>

        /// <param name="tags">Resource tags.
        /// </param>

        /// <param name="etag">Gets a unique read-only string that changes whenever the resource is
        /// updated.
        /// </param>

        /// <param name="resourceState">Resource status.
        /// Possible values include: &#39;Creating&#39;, &#39;Enabling&#39;, &#39;Enabled&#39;, &#39;Disabling&#39;,
        /// &#39;Disabled&#39;, &#39;Deleting&#39;</param>

        /// <param name="enabledState">The state of the Experiment
        /// Possible values include: &#39;Enabled&#39;, &#39;Disabled&#39;</param>
        public Profile(string id = default(string), string name = default(string), string type = default(string), string location = default(string), System.Collections.Generic.IDictionary<string, string> tags = default(System.Collections.Generic.IDictionary<string, string>), string etag = default(string), string resourceState = default(string), string enabledState = default(string))

        : base(id, name, type, location, tags)
        {
            this.Etag = etag;
            this.ResourceState = resourceState;
            this.EnabledState = enabledState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets gets a unique read-only string that changes whenever the
        /// resource is updated.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "etag")]
        public string Etag {get; set; }

        /// <summary>
        /// Gets resource status. Possible values include: &#39;Creating&#39;, &#39;Enabling&#39;, &#39;Enabled&#39;, &#39;Disabling&#39;, &#39;Disabled&#39;, &#39;Deleting&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.resourceState")]
        public string ResourceState {get; private set; }

        /// <summary>
        /// Gets or sets the state of the Experiment Possible values include: &#39;Enabled&#39;, &#39;Disabled&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.enabledState")]
        public string EnabledState {get; set; }
    }
}