// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.2, generator: @autorest/powershell@4.0.698)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.FrontDoor.Models
{
    using System.Linq;

    /// <summary>
    /// Defines the properties of an experiment
    /// </summary>
    public partial class ExperimentProperties
    {
        /// <summary>
        /// Initializes a new instance of the ExperimentProperties class.
        /// </summary>
        public ExperimentProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ExperimentProperties class.
        /// </summary>

        /// <param name="description">The description of the details or intents of the Experiment
        /// </param>

        /// <param name="endpointA">The endpoint A of an experiment
        /// </param>

        /// <param name="endpointB">The endpoint B of an experiment
        /// </param>

        /// <param name="enabledState">The state of the Experiment
        /// Possible values include: &#39;Enabled&#39;, &#39;Disabled&#39;</param>

        /// <param name="resourceState">Resource status.
        /// Possible values include: &#39;Creating&#39;, &#39;Enabling&#39;, &#39;Enabled&#39;, &#39;Disabling&#39;,
        /// &#39;Disabled&#39;, &#39;Deleting&#39;</param>

        /// <param name="status">The description of Experiment status from the server side
        /// </param>

        /// <param name="scriptFileUri">The uri to the Script used in the Experiment
        /// </param>
        public ExperimentProperties(string description = default(string), Endpoint endpointA = default(Endpoint), Endpoint endpointB = default(Endpoint), string enabledState = default(string), string resourceState = default(string), string status = default(string), string scriptFileUri = default(string))

        {
            this.Description = description;
            this.EndpointA = endpointA;
            this.EndpointB = endpointB;
            this.EnabledState = enabledState;
            this.ResourceState = resourceState;
            this.Status = status;
            this.ScriptFileUri = scriptFileUri;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the description of the details or intents of the Experiment
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "description")]
        public string Description {get; set; }

        /// <summary>
        /// Gets or sets the endpoint A of an experiment
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "endpointA")]
        public Endpoint EndpointA {get; set; }

        /// <summary>
        /// Gets or sets the endpoint B of an experiment
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "endpointB")]
        public Endpoint EndpointB {get; set; }

        /// <summary>
        /// Gets or sets the state of the Experiment Possible values include: &#39;Enabled&#39;, &#39;Disabled&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "enabledState")]
        public string EnabledState {get; set; }

        /// <summary>
        /// Gets resource status. Possible values include: &#39;Creating&#39;, &#39;Enabling&#39;, &#39;Enabled&#39;, &#39;Disabling&#39;, &#39;Disabled&#39;, &#39;Deleting&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "resourceState")]
        public string ResourceState {get; private set; }

        /// <summary>
        /// Gets the description of Experiment status from the server side
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "status")]
        public string Status {get; private set; }

        /// <summary>
        /// Gets the uri to the Script used in the Experiment
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "scriptFileUri")]
        public string ScriptFileUri {get; private set; }
    }
}