// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.2, generator: @autorest/powershell@4.0.698)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.FrontDoor.Models
{
    using System.Linq;

    /// <summary>
    /// Output of check name availability API.
    /// </summary>
    public partial class CheckNameAvailabilityOutput
    {
        /// <summary>
        /// Initializes a new instance of the CheckNameAvailabilityOutput class.
        /// </summary>
        public CheckNameAvailabilityOutput()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CheckNameAvailabilityOutput class.
        /// </summary>

        /// <param name="nameAvailability">Indicates whether the name is available.
        /// Possible values include: &#39;Available&#39;, &#39;Unavailable&#39;</param>

        /// <param name="reason">The reason why the name is not available.
        /// </param>

        /// <param name="message">The detailed error message describing why the name is not available.
        /// </param>
        public CheckNameAvailabilityOutput(string nameAvailability = default(string), string reason = default(string), string message = default(string))

        {
            this.NameAvailability = nameAvailability;
            this.Reason = reason;
            this.Message = message;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets indicates whether the name is available. Possible values include: &#39;Available&#39;, &#39;Unavailable&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "nameAvailability")]
        public string NameAvailability {get; private set; }

        /// <summary>
        /// Gets the reason why the name is not available.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "reason")]
        public string Reason {get; private set; }

        /// <summary>
        /// Gets the detailed error message describing why the name is not available.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "message")]
        public string Message {get; private set; }
    }
}