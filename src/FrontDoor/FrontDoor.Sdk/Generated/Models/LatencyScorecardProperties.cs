// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.2, generator: @autorest/powershell@4.0.698)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.FrontDoor.Models
{
    using System.Linq;

    /// <summary>
    /// Defines a the properties of a Latency Scorecard
    /// </summary>
    public partial class LatencyScorecardProperties
    {
        /// <summary>
        /// Initializes a new instance of the LatencyScorecardProperties class.
        /// </summary>
        public LatencyScorecardProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LatencyScorecardProperties class.
        /// </summary>

        /// <param name="id">The unique identifier of the Latency Scorecard
        /// </param>

        /// <param name="name">The name of the Latency Scorecard
        /// </param>

        /// <param name="description">The description of the Latency Scorecard
        /// </param>

        /// <param name="endpointA">The A endpoint in the scorecard
        /// </param>

        /// <param name="endpointB">The B endpoint in the scorecard
        /// </param>

        /// <param name="startDateTimeUtc">The start time of the Latency Scorecard in UTC
        /// </param>

        /// <param name="endDateTimeUtc">The end time of the Latency Scorecard in UTC
        /// </param>

        /// <param name="country">The country associated with the Latency Scorecard. Values are country ISO
        /// codes as specified here- https://www.iso.org/iso-3166-country-codes.html
        /// </param>

        /// <param name="latencyMetrics">The latency metrics of the Latency Scorecard
        /// </param>
        public LatencyScorecardProperties(string id = default(string), string name = default(string), string description = default(string), string endpointA = default(string), string endpointB = default(string), System.DateTime? startDateTimeUtc = default(System.DateTime?), System.DateTime? endDateTimeUtc = default(System.DateTime?), string country = default(string), System.Collections.Generic.IList<LatencyMetric> latencyMetrics = default(System.Collections.Generic.IList<LatencyMetric>))

        {
            this.Id = id;
            this.Name = name;
            this.Description = description;
            this.EndpointA = endpointA;
            this.EndpointB = endpointB;
            this.StartDateTimeUtc = startDateTimeUtc;
            this.EndDateTimeUtc = endDateTimeUtc;
            this.Country = country;
            this.LatencyMetrics = latencyMetrics;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the unique identifier of the Latency Scorecard
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "id")]
        public string Id {get; private set; }

        /// <summary>
        /// Gets the name of the Latency Scorecard
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; private set; }

        /// <summary>
        /// Gets the description of the Latency Scorecard
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "description")]
        public string Description {get; private set; }

        /// <summary>
        /// Gets the A endpoint in the scorecard
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "endpointA")]
        public string EndpointA {get; private set; }

        /// <summary>
        /// Gets the B endpoint in the scorecard
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "endpointB")]
        public string EndpointB {get; private set; }

        /// <summary>
        /// Gets the start time of the Latency Scorecard in UTC
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "startDateTimeUTC")]
        public System.DateTime? StartDateTimeUtc {get; private set; }

        /// <summary>
        /// Gets the end time of the Latency Scorecard in UTC
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "endDateTimeUTC")]
        public System.DateTime? EndDateTimeUtc {get; private set; }

        /// <summary>
        /// Gets the country associated with the Latency Scorecard. Values are country
        /// ISO codes as specified here-
        /// https://www.iso.org/iso-3166-country-codes.html
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "country")]
        public string Country {get; private set; }

        /// <summary>
        /// Gets or sets the latency metrics of the Latency Scorecard
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "latencyMetrics")]
        public System.Collections.Generic.IList<LatencyMetric> LatencyMetrics {get; set; }
    }
}