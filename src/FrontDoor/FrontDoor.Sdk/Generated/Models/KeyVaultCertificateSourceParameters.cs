// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.2, generator: @autorest/powershell@4.0.698)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.FrontDoor.Models
{
    using System.Linq;

    /// <summary>
    /// Parameters required for bring-your-own-certification via Key Vault
    /// </summary>
    public partial class KeyVaultCertificateSourceParameters
    {
        /// <summary>
        /// Initializes a new instance of the KeyVaultCertificateSourceParameters class.
        /// </summary>
        public KeyVaultCertificateSourceParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the KeyVaultCertificateSourceParameters class.
        /// </summary>

        /// <param name="vault">The Key Vault containing the SSL certificate
        /// </param>

        /// <param name="secretName">The name of the Key Vault secret representing the full certificate PFX
        /// </param>

        /// <param name="secretVersion">The version of the Key Vault secret representing the full certificate PFX
        /// </param>
        public KeyVaultCertificateSourceParameters(KeyVaultCertificateSourceParametersVault vault = default(KeyVaultCertificateSourceParametersVault), string secretName = default(string), string secretVersion = default(string))

        {
            this.Vault = vault;
            this.SecretName = secretName;
            this.SecretVersion = secretVersion;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the Key Vault containing the SSL certificate
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "vault")]
        public KeyVaultCertificateSourceParametersVault Vault {get; set; }

        /// <summary>
        /// Gets or sets the name of the Key Vault secret representing the full
        /// certificate PFX
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "secretName")]
        public string SecretName {get; set; }

        /// <summary>
        /// Gets or sets the version of the Key Vault secret representing the full
        /// certificate PFX
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "secretVersion")]
        public string SecretVersion {get; set; }
    }
}