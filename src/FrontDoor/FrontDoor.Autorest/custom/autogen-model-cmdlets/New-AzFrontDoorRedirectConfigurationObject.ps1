
# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Code generated by Microsoft (R) AutoRest Code Generator.Changes may cause incorrect behavior and will be lost if the code
# is regenerated.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Create an in-memory object for RedirectConfiguration.
.Description
Create an in-memory object for RedirectConfiguration.

.Outputs
Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.RedirectConfiguration
.Link
https://learn.microsoft.com/powershell/module/Az.FrontDoor/new-azfrontdoorredirectconfigurationobject
#>
function New-AzFrontDoorRedirectConfigurationObject {
    [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.ModelCmdletAttribute()]
    [OutputType('Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.RedirectConfiguration')]
    [CmdletBinding(PositionalBinding=$false)]
    Param(

        [Parameter(HelpMessage="Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #.")]
        [string]
        $CustomFragment,
        [Parameter(HelpMessage="Host to redirect. Leave empty to use the incoming host as the destination host.")]
        [string]
        $CustomHost,
        [Parameter(HelpMessage="The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path.")]
        [string]
        $CustomPath,
        [Parameter(HelpMessage="The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. The first ? and & will be added automatically so do not include them in the front, but do separate multiple query strings with &.")]
        [string]
        $CustomQueryString,
        [Parameter(HelpMessage="The protocol of the destination to where the traffic is redirected.")]
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PSArgumentCompleterAttribute("HttpOnly", "HttpsOnly", "MatchRequest")]
        [string]
        $RedirectProtocol,
        [Parameter(HelpMessage="The redirect type the rule will use when redirecting traffic.")]
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PSArgumentCompleterAttribute("Moved", "Found", "TemporaryRedirect", "PermanentRedirect")]
        [string]
        $RedirectType
    )

    process {
        $Object = [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.RedirectConfiguration]::New()

        if ($PSBoundParameters.ContainsKey('CustomFragment')) {
            $Object.CustomFragment = $CustomFragment
        }
        if ($PSBoundParameters.ContainsKey('CustomHost')) {
            $Object.CustomHost = $CustomHost
        }
        if ($PSBoundParameters.ContainsKey('CustomPath')) {
            $Object.CustomPath = $CustomPath
        }
        if ($PSBoundParameters.ContainsKey('CustomQueryString')) {
            $Object.CustomQueryString = $CustomQueryString
        }
        if ($PSBoundParameters.ContainsKey('RedirectProtocol')) {
            $Object.RedirectProtocol = $RedirectProtocol
        }
        if ($PSBoundParameters.ContainsKey('RedirectType')) {
            $Object.RedirectType = $RedirectType
        }
        return $Object
    }
}

