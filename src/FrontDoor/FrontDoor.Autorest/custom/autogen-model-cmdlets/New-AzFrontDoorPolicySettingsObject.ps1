
# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Code generated by Microsoft (R) AutoRest Code Generator.Changes may cause incorrect behavior and will be lost if the code
# is regenerated.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Create an in-memory object for PolicySettings.
.Description
Create an in-memory object for PolicySettings.

.Outputs
Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.PolicySettings
.Link
https://learn.microsoft.com/powershell/module/Az.FrontDoor/new-azfrontdoorpolicysettingsobject
#>
function New-AzFrontDoorPolicySettingsObject {
    [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.ModelCmdletAttribute()]
    [OutputType('Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.PolicySettings')]
    [CmdletBinding(PositionalBinding=$false)]
    Param(

        [Parameter(HelpMessage="Defines the Captcha cookie validity lifetime in minutes. This setting is only applicable to Premium_AzureFrontDoor. Value must be an integer between 5 and 1440 with the default value being 30.")]
        [int]
        $CaptchaExpirationInMinutes,
        [Parameter(HelpMessage="If the action type is block, customer can override the response body. The body must be specified in base64 encoding.")]
        [string]
        $CustomBlockResponseBody,
        [Parameter(HelpMessage="If the action type is block, customer can override the response status code.")]
        [int]
        $CustomBlockResponseStatusCode,
        [Parameter(HelpMessage="Describes if the policy is in enabled or disabled state. Defaults to Enabled if not specified.")]
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PSArgumentCompleterAttribute("Disabled", "Enabled")]
        [string]
        $EnabledState,
        [Parameter(HelpMessage="Defines the JavaScript challenge cookie validity lifetime in minutes. This setting is only applicable to Premium_AzureFrontDoor. Value must be an integer between 5 and 1440 with the default value being 30.")]
        [int]
        $JavascriptChallengeExpirationInMinutes,
        [Parameter(HelpMessage="Defines rules that scrub sensitive fields in the Web Application Firewall logs.")]
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IPolicySettingsLogScrubbing]
        $LogScrubbingSetting,
        [Parameter(HelpMessage="Describes if it is in detection mode or prevention mode at policy level.")]
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PSArgumentCompleterAttribute("Prevention", "Detection")]
        [string]
        $Mode,
        [Parameter(HelpMessage="If action type is redirect, this field represents redirect URL for the client.")]
        [string]
        $RedirectUrl,
        [Parameter(HelpMessage="Describes if policy managed rules will inspect the request body content.")]
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PSArgumentCompleterAttribute("Disabled", "Enabled")]
        [string]
        $RequestBodyCheck
    )

    process {
        $Object = [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.PolicySettings]::New()

        if ($PSBoundParameters.ContainsKey('CaptchaExpirationInMinutes')) {
            $Object.CaptchaExpirationInMinutes = $CaptchaExpirationInMinutes
        }
        if ($PSBoundParameters.ContainsKey('CustomBlockResponseBody')) {
            $Object.CustomBlockResponseBody = $CustomBlockResponseBody
        }
        if ($PSBoundParameters.ContainsKey('CustomBlockResponseStatusCode')) {
            $Object.CustomBlockResponseStatusCode = $CustomBlockResponseStatusCode
        }
        if ($PSBoundParameters.ContainsKey('EnabledState')) {
            $Object.EnabledState = $EnabledState
        }
        if ($PSBoundParameters.ContainsKey('JavascriptChallengeExpirationInMinutes')) {
            $Object.JavascriptChallengeExpirationInMinutes = $JavascriptChallengeExpirationInMinutes
        }
        if ($PSBoundParameters.ContainsKey('LogScrubbingSetting')) {
            $Object.LogScrubbingSetting = $LogScrubbingSetting
        }
        if ($PSBoundParameters.ContainsKey('Mode')) {
            $Object.Mode = $Mode
        }
        if ($PSBoundParameters.ContainsKey('RedirectUrl')) {
            $Object.RedirectUrl = $RedirectUrl
        }
        if ($PSBoundParameters.ContainsKey('RequestBodyCheck')) {
            $Object.RequestBodyCheck = $RequestBodyCheck
        }
        return $Object
    }
}

