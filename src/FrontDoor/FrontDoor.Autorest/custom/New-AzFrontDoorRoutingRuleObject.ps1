
# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Code generated by Microsoft (R) AutoRest Code Generator.Changes may cause incorrect behavior and will be lost if the code
# is regenerated.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Create an in-memory object for RoutingRule.
.Description
Create an in-memory object for RoutingRule.

.Outputs
Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.RoutingRule
.Link
https://learn.microsoft.com/powershell/module/Az.FrontDoor/new-azfrontdoorroutingruleobject
#>
function New-AzFrontDoorRoutingRuleObject {
    [OutputType('Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.RoutingRule')]
    [CmdletBinding(PositionalBinding=$false)]
    Param(

        [Parameter(HelpMessage="Protocol schemes to match for this rule.")]
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PSArgumentCompleterAttribute("Http", "Https")]
        [string[]]
        $AcceptedProtocol,
        [Parameter(HelpMessage="Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'.")]
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PSArgumentCompleterAttribute("Enabled", "Disabled")]
        [string]
        $EnabledState,
        [Parameter(HelpMessage="Frontend endpoints associated with this rule.")]
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.ISubResource[]]
        $FrontendEndpoint,
        [Parameter(HelpMessage="Resource name.")]
        [string]
        $Name,
        [Parameter(HelpMessage="Resource Group name.")]
        [string]
        $ResourceGroupName ,
        [Parameter(HelpMessage="The name of the Front Door to which this routing rule belongs.")]
        [string]
        $FrontDoorName,
        [Parameter(HelpMessage="The route patterns of the rule.")]
        [string[]]
        $PatternsToMatch,
        [Parameter()]
        [string]
        $RouteConfigurationOdataType,
        [Parameter(HelpMessage="Resource ID.")]
        [string]
        $RuleEngineId,
        [Parameter(HelpMessage="Resource ID.")]
        [string]
        $WebApplicationFirewallPolicyLinkId,
        [Parameter(HelpMessage="Resource ID.")]
        [string]
        $Id
    )

    process {
        $Object = [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.RoutingRule]::New()

        if ($PSBoundParameters.ContainsKey('AcceptedProtocol')) {
            $Object.AcceptedProtocol = $AcceptedProtocol
        }
        if ($PSBoundParameters.ContainsKey('EnabledState')) {
            $Object.EnabledState = $EnabledState
        }
        if ($PSBoundParameters.ContainsKey('FrontendEndpoint')) {
            $Object.FrontendEndpoint = $FrontendEndpoint
        }
        if ($PSBoundParameters.ContainsKey('Name')) {
            $Object.Name = $Name
        }
        if ($PSBoundParameters.ContainsKey('PatternsToMatch')) {
            $Object.PatternsToMatch = $PatternsToMatch
        }
        if ($PSBoundParameters.ContainsKey('RouteConfigurationOdataType')) {
            $Object.RouteConfigurationOdataType = $RouteConfigurationOdataType
        }
        if ($PSBoundParameters.ContainsKey('RuleEngineId')) {
            $Object.RuleEngineId = $RuleEngineId
        }
        if ($PSBoundParameters.ContainsKey('WebApplicationFirewallPolicyLinkId')) {
            $Object.WebApplicationFirewallPolicyLinkId = $WebApplicationFirewallPolicyLinkId
        }
        if ($PSBoundParameters.ContainsKey('Id')) {
            $Object.Id = $Id
        }
        return $Object
    }
}

