// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Extensions;

    /// <summary>Backend address of a frontDoor load balancer.</summary>
    public partial class Backend
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonObject into a new instance of <see cref="Backend" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal Backend(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_address = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonString>("address"), out var __jsonAddress) ? (string)__jsonAddress : (string)_address;}
            {_privateLinkAlias = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonString>("privateLinkAlias"), out var __jsonPrivateLinkAlias) ? (string)__jsonPrivateLinkAlias : (string)_privateLinkAlias;}
            {_privateLinkResourceId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonString>("privateLinkResourceId"), out var __jsonPrivateLinkResourceId) ? (string)__jsonPrivateLinkResourceId : (string)_privateLinkResourceId;}
            {_privateLinkLocation = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonString>("privateLinkLocation"), out var __jsonPrivateLinkLocation) ? (string)__jsonPrivateLinkLocation : (string)_privateLinkLocation;}
            {_privateEndpointStatus = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonString>("privateEndpointStatus"), out var __jsonPrivateEndpointStatus) ? (string)__jsonPrivateEndpointStatus : (string)_privateEndpointStatus;}
            {_privateLinkApprovalMessage = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonString>("privateLinkApprovalMessage"), out var __jsonPrivateLinkApprovalMessage) ? (string)__jsonPrivateLinkApprovalMessage : (string)_privateLinkApprovalMessage;}
            {_httpPort = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonNumber>("httpPort"), out var __jsonHttpPort) ? (int?)__jsonHttpPort : _httpPort;}
            {_httpsPort = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonNumber>("httpsPort"), out var __jsonHttpsPort) ? (int?)__jsonHttpsPort : _httpsPort;}
            {_enabledState = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonString>("enabledState"), out var __jsonEnabledState) ? (string)__jsonEnabledState : (string)_enabledState;}
            {_priority = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonNumber>("priority"), out var __jsonPriority) ? (int?)__jsonPriority : _priority;}
            {_weight = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonNumber>("weight"), out var __jsonWeight) ? (int?)__jsonWeight : _weight;}
            {_backendHostHeader = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonString>("backendHostHeader"), out var __jsonBackendHostHeader) ? (string)__jsonBackendHostHeader : (string)_backendHostHeader;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IBackend.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>an instance of Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IBackend.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IBackend FromJson(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonObject json ? new Backend(json) : null;
        }

        /// <summary>
        /// Serializes this instance of <see cref="Backend" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="Backend" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != (((object)this._address)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonString(this._address.ToString()) : null, "address" ,container.Add );
            AddIf( null != (((object)this._privateLinkAlias)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonString(this._privateLinkAlias.ToString()) : null, "privateLinkAlias" ,container.Add );
            AddIf( null != (((object)this._privateLinkResourceId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonString(this._privateLinkResourceId.ToString()) : null, "privateLinkResourceId" ,container.Add );
            AddIf( null != (((object)this._privateLinkLocation)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonString(this._privateLinkLocation.ToString()) : null, "privateLinkLocation" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.SerializationMode.IncludeRead))
            {
                AddIf( null != (((object)this._privateEndpointStatus)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonString(this._privateEndpointStatus.ToString()) : null, "privateEndpointStatus" ,container.Add );
            }
            AddIf( null != (((object)this._privateLinkApprovalMessage)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonString(this._privateLinkApprovalMessage.ToString()) : null, "privateLinkApprovalMessage" ,container.Add );
            AddIf( null != this._httpPort ? (Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonNumber((int)this._httpPort) : null, "httpPort" ,container.Add );
            AddIf( null != this._httpsPort ? (Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonNumber((int)this._httpsPort) : null, "httpsPort" ,container.Add );
            AddIf( null != (((object)this._enabledState)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonString(this._enabledState.ToString()) : null, "enabledState" ,container.Add );
            AddIf( null != this._priority ? (Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonNumber((int)this._priority) : null, "priority" ,container.Add );
            AddIf( null != this._weight ? (Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonNumber((int)this._weight) : null, "weight" ,container.Add );
            AddIf( null != (((object)this._backendHostHeader)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonString(this._backendHostHeader.ToString()) : null, "backendHostHeader" ,container.Add );
            AfterToJson(ref container);
            return container;
        }
    }
}