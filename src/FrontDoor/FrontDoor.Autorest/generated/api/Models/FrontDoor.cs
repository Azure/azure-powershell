// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Extensions;

    /// <summary>
    /// Front Door represents a collection of backend endpoints to route traffic to along with rules that specify how traffic
    /// is sent there.
    /// </summary>
    public partial class FrontDoor :
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoor,
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorInternal,
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IResource" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.Resource();

        /// <summary>Backend pools available to routing rules.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IBackendPool> BackendPool { get => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorUpdateParametersInternal)Property).BackendPool; set => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorUpdateParametersInternal)Property).BackendPool = value ?? null /* arrayOf */; }

        /// <summary>Settings for all backendPools</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IBackendPoolsSettings BackendPoolsSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorUpdateParametersInternal)Property).BackendPoolsSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorUpdateParametersInternal)Property).BackendPoolsSetting = value ?? null /* model class */; }

        /// <summary>The host that each frontendEndpoint must CNAME to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Inlined)]
        public string Cname { get => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorPropertiesInternal)Property).Cname; }

        /// <summary>
        /// Operational status of the Front Door load balancer. Permitted values are 'Enabled' or 'Disabled'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Inlined)]
        public string EnabledState { get => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorUpdateParametersInternal)Property).EnabledState; set => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorUpdateParametersInternal)Property).EnabledState = value ?? null; }

        /// <summary>Key-Value pair representing additional properties for frontdoor.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorPropertiesExtendedProperties ExtendedProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorPropertiesInternal)Property).ExtendedProperty; }

        /// <summary>A friendly name for the frontDoor</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Inlined)]
        public string FriendlyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorUpdateParametersInternal)Property).FriendlyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorUpdateParametersInternal)Property).FriendlyName = value ?? null; }

        /// <summary>The Id of the frontdoor.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Inlined)]
        public string FrontdoorId { get => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorPropertiesInternal)Property).FrontdoorId; }

        /// <summary>Frontend endpoints available to routing rules.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontendEndpoint> FrontendEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorUpdateParametersInternal)Property).FrontendEndpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorUpdateParametersInternal)Property).FrontendEndpoint = value ?? null /* arrayOf */; }

        /// <summary>Health probe settings associated with this Front Door instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IHealthProbeSettingsModel> HealthProbeSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorUpdateParametersInternal)Property).HealthProbeSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorUpdateParametersInternal)Property).HealthProbeSetting = value ?? null /* arrayOf */; }

        /// <summary>Resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IResourceInternal)__resource).Id; }

        /// <summary>Load balancing settings associated with this Front Door instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.ILoadBalancingSettingsModel> LoadBalancingSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorUpdateParametersInternal)Property).LoadBalancingSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorUpdateParametersInternal)Property).LoadBalancingSetting = value ?? null /* arrayOf */; }

        /// <summary>Resource location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IResourceInternal)__resource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IResourceInternal)__resource).Location = value ?? null; }

        /// <summary>Internal Acessors for Cname</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorInternal.Cname { get => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorPropertiesInternal)Property).Cname; set => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorPropertiesInternal)Property).Cname = value ?? null; }

        /// <summary>Internal Acessors for ExtendedProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorPropertiesExtendedProperties Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorInternal.ExtendedProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorPropertiesInternal)Property).ExtendedProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorPropertiesInternal)Property).ExtendedProperty = value ?? null /* model class */; }

        /// <summary>Internal Acessors for FrontdoorId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorInternal.FrontdoorId { get => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorPropertiesInternal)Property).FrontdoorId; set => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorPropertiesInternal)Property).FrontdoorId = value ?? null; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorProperties Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.FrontDoorProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorPropertiesInternal)Property).ProvisioningState = value ?? null; }

        /// <summary>Internal Acessors for ResourceState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorInternal.ResourceState { get => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorPropertiesInternal)Property).ResourceState; set => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorPropertiesInternal)Property).ResourceState = value ?? null; }

        /// <summary>Internal Acessors for RulesEngine</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IRulesEngine> Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorInternal.RulesEngine { get => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorPropertiesInternal)Property).RulesEngine; set => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorPropertiesInternal)Property).RulesEngine = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IResourceInternal)__resource).Id = value ?? null; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IResourceInternal)__resource).Name = value ?? null; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IResourceInternal)__resource).Type = value ?? null; }

        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IResourceInternal)__resource).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorProperties _property;

        /// <summary>Properties of the Front Door Load Balancer</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.FrontDoorProperties()); set => this._property = value; }

        /// <summary>Provisioning state of the Front Door.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorPropertiesInternal)Property).ProvisioningState; }

        /// <summary>Gets the resource group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Owned)]
        public string ResourceGroupName { get => (new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Success ? new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Groups["resourceGroupName"].Value : null); }

        /// <summary>Resource status of the Front Door.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Inlined)]
        public string ResourceState { get => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorPropertiesInternal)Property).ResourceState; }

        /// <summary>Routing rules associated with this Front Door.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IRoutingRule> RoutingRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorUpdateParametersInternal)Property).RoutingRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorUpdateParametersInternal)Property).RoutingRule = value ?? null /* arrayOf */; }

        /// <summary>Rules Engine Configurations available to routing rules.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IRulesEngine> RulesEngine { get => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorPropertiesInternal)Property).RulesEngine; }

        /// <summary>Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IResourceInternal)__resource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IResourceInternal)__resource).Tag = value ?? null /* model class */; }

        /// <summary>Resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IResourceInternal)__resource).Type; }

        /// <summary>Creates an new <see cref="FrontDoor" /> instance.</summary>
        public FrontDoor()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// Front Door represents a collection of backend endpoints to route traffic to along with rules that specify how traffic
    /// is sent there.
    public partial interface IFrontDoor :
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IResource
    {
        /// <summary>Backend pools available to routing rules.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Backend pools available to routing rules.",
        SerializedName = @"backendPools",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IBackendPool) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IBackendPool> BackendPool { get; set; }
        /// <summary>Settings for all backendPools</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Settings for all backendPools",
        SerializedName = @"backendPoolsSettings",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IBackendPoolsSettings) })]
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IBackendPoolsSettings BackendPoolsSetting { get; set; }
        /// <summary>The host that each frontendEndpoint must CNAME to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The host that each frontendEndpoint must CNAME to.",
        SerializedName = @"cname",
        PossibleTypes = new [] { typeof(string) })]
        string Cname { get;  }
        /// <summary>
        /// Operational status of the Front Door load balancer. Permitted values are 'Enabled' or 'Disabled'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Operational status of the Front Door load balancer. Permitted values are 'Enabled' or 'Disabled'",
        SerializedName = @"enabledState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PSArgumentCompleterAttribute("Enabled", "Disabled")]
        string EnabledState { get; set; }
        /// <summary>Key-Value pair representing additional properties for frontdoor.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Key-Value pair representing additional properties for frontdoor.",
        SerializedName = @"extendedProperties",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorPropertiesExtendedProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorPropertiesExtendedProperties ExtendedProperty { get;  }
        /// <summary>A friendly name for the frontDoor</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"A friendly name for the frontDoor",
        SerializedName = @"friendlyName",
        PossibleTypes = new [] { typeof(string) })]
        string FriendlyName { get; set; }
        /// <summary>The Id of the frontdoor.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The Id of the frontdoor.",
        SerializedName = @"frontdoorId",
        PossibleTypes = new [] { typeof(string) })]
        string FrontdoorId { get;  }
        /// <summary>Frontend endpoints available to routing rules.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Frontend endpoints available to routing rules.",
        SerializedName = @"frontendEndpoints",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontendEndpoint) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontendEndpoint> FrontendEndpoint { get; set; }
        /// <summary>Health probe settings associated with this Front Door instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Health probe settings associated with this Front Door instance.",
        SerializedName = @"healthProbeSettings",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IHealthProbeSettingsModel) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IHealthProbeSettingsModel> HealthProbeSetting { get; set; }
        /// <summary>Load balancing settings associated with this Front Door instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Load balancing settings associated with this Front Door instance.",
        SerializedName = @"loadBalancingSettings",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.ILoadBalancingSettingsModel) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.ILoadBalancingSettingsModel> LoadBalancingSetting { get; set; }
        /// <summary>Provisioning state of the Front Door.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Provisioning state of the Front Door.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>Resource status of the Front Door.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Resource status of the Front Door.",
        SerializedName = @"resourceState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PSArgumentCompleterAttribute("Creating", "Enabling", "Enabled", "Disabling", "Disabled", "Deleting", "Migrating", "Migrated")]
        string ResourceState { get;  }
        /// <summary>Routing rules associated with this Front Door.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Routing rules associated with this Front Door.",
        SerializedName = @"routingRules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IRoutingRule) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IRoutingRule> RoutingRule { get; set; }
        /// <summary>Rules Engine Configurations available to routing rules.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Rules Engine Configurations available to routing rules.",
        SerializedName = @"rulesEngines",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IRulesEngine) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IRulesEngine> RulesEngine { get;  }

    }
    /// Front Door represents a collection of backend endpoints to route traffic to along with rules that specify how traffic
    /// is sent there.
    internal partial interface IFrontDoorInternal :
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IResourceInternal
    {
        /// <summary>Backend pools available to routing rules.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IBackendPool> BackendPool { get; set; }
        /// <summary>Settings for all backendPools</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IBackendPoolsSettings BackendPoolsSetting { get; set; }
        /// <summary>The host that each frontendEndpoint must CNAME to.</summary>
        string Cname { get; set; }
        /// <summary>
        /// Operational status of the Front Door load balancer. Permitted values are 'Enabled' or 'Disabled'
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PSArgumentCompleterAttribute("Enabled", "Disabled")]
        string EnabledState { get; set; }
        /// <summary>Key-Value pair representing additional properties for frontdoor.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorPropertiesExtendedProperties ExtendedProperty { get; set; }
        /// <summary>A friendly name for the frontDoor</summary>
        string FriendlyName { get; set; }
        /// <summary>The Id of the frontdoor.</summary>
        string FrontdoorId { get; set; }
        /// <summary>Frontend endpoints available to routing rules.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontendEndpoint> FrontendEndpoint { get; set; }
        /// <summary>Health probe settings associated with this Front Door instance.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IHealthProbeSettingsModel> HealthProbeSetting { get; set; }
        /// <summary>Load balancing settings associated with this Front Door instance.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.ILoadBalancingSettingsModel> LoadBalancingSetting { get; set; }
        /// <summary>Properties of the Front Door Load Balancer</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorProperties Property { get; set; }
        /// <summary>Provisioning state of the Front Door.</summary>
        string ProvisioningState { get; set; }
        /// <summary>Resource status of the Front Door.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PSArgumentCompleterAttribute("Creating", "Enabling", "Enabled", "Disabling", "Disabled", "Deleting", "Migrating", "Migrated")]
        string ResourceState { get; set; }
        /// <summary>Routing rules associated with this Front Door.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IRoutingRule> RoutingRule { get; set; }
        /// <summary>Rules Engine Configurations available to routing rules.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IRulesEngine> RulesEngine { get; set; }

    }
}