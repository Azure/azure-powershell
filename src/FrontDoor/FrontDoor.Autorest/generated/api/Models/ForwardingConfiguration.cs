// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Extensions;

    /// <summary>Describes Forwarding Route.</summary>
    public partial class ForwardingConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IForwardingConfiguration,
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IForwardingConfigurationInternal,
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IRouteConfiguration"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IRouteConfiguration __routeConfiguration = new Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.RouteConfiguration();

        /// <summary>Backing field for <see cref="BackendPool" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.ISubResource _backendPool;

        /// <summary>A reference to the BackendPool which this rule routes to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.ISubResource BackendPool { get => (this._backendPool = this._backendPool ?? new Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.SubResource()); set => this._backendPool = value; }

        /// <summary>Resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Inlined)]
        public string BackendPoolId { get => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.ISubResourceInternal)BackendPool).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.ISubResourceInternal)BackendPool).Id = value ?? null; }

        /// <summary>Backing field for <see cref="CacheConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.ICacheConfiguration _cacheConfiguration;

        /// <summary>The caching configuration associated with this rule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.ICacheConfiguration CacheConfiguration { get => (this._cacheConfiguration = this._cacheConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.CacheConfiguration()); set => this._cacheConfiguration = value; }

        /// <summary>Backing field for <see cref="CustomForwardingPath" /> property.</summary>
        private string _customForwardingPath;

        /// <summary>
        /// A custom path used to rewrite resource paths matched by this rule. Leave empty to use incoming path.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Owned)]
        public string CustomForwardingPath { get => this._customForwardingPath; set => this._customForwardingPath = value; }

        /// <summary>Backing field for <see cref="ForwardingProtocol" /> property.</summary>
        private string _forwardingProtocol;

        /// <summary>Protocol this rule will use when forwarding traffic to backends.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Owned)]
        public string ForwardingProtocol { get => this._forwardingProtocol; set => this._forwardingProtocol = value; }

        /// <summary>Internal Acessors for BackendPool</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.ISubResource Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IForwardingConfigurationInternal.BackendPool { get => (this._backendPool = this._backendPool ?? new Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.SubResource()); set { {_backendPool = value;} } }

        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Constant]
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Inherited)]
        public string OdataType { get => "#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration"; set => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IRouteConfigurationInternal)__routeConfiguration).OdataType = "#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration"; }

        /// <summary>Creates an new <see cref="ForwardingConfiguration" /> instance.</summary>
        public ForwardingConfiguration()
        {
            this.__routeConfiguration.OdataType = "#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration";
        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__routeConfiguration), __routeConfiguration);
            await eventListener.AssertObjectIsValid(nameof(__routeConfiguration), __routeConfiguration);
        }
    }
    /// Describes Forwarding Route.
    public partial interface IForwardingConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IRouteConfiguration
    {
        /// <summary>Resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Resource ID.",
        SerializedName = @"ResourceGroupName",
        PossibleTypes = new [] { typeof(string) })]
        string BackendPoolId { get; set; }
        /// <summary>The caching configuration associated with this rule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The caching configuration associated with this rule.",
        SerializedName = @"cacheConfiguration",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.ICacheConfiguration) })]
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.ICacheConfiguration CacheConfiguration { get; set; }
        /// <summary>
        /// A custom path used to rewrite resource paths matched by this rule. Leave empty to use incoming path.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"A custom path used to rewrite resource paths matched by this rule. Leave empty to use incoming path.",
        SerializedName = @"customForwardingPath",
        PossibleTypes = new [] { typeof(string) })]
        string CustomForwardingPath { get; set; }
        /// <summary>Protocol this rule will use when forwarding traffic to backends.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Protocol this rule will use when forwarding traffic to backends.",
        SerializedName = @"forwardingProtocol",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PSArgumentCompleterAttribute("HttpOnly", "HttpsOnly", "MatchRequest")]
        string ForwardingProtocol { get; set; }

    }
    /// Describes Forwarding Route.
    internal partial interface IForwardingConfigurationInternal :
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IRouteConfigurationInternal
    {
        /// <summary>A reference to the BackendPool which this rule routes to.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.ISubResource BackendPool { get; set; }
        /// <summary>Resource ID.</summary>
        string BackendPoolId { get; set; }
        /// <summary>The caching configuration associated with this rule.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.ICacheConfiguration CacheConfiguration { get; set; }
        /// <summary>
        /// A custom path used to rewrite resource paths matched by this rule. Leave empty to use incoming path.
        /// </summary>
        string CustomForwardingPath { get; set; }
        /// <summary>Protocol this rule will use when forwarding traffic to backends.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PSArgumentCompleterAttribute("HttpOnly", "HttpsOnly", "MatchRequest")]
        string ForwardingProtocol { get; set; }

    }
}