// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Extensions;

    /// <summary>The properties needed to update a Front Door</summary>
    public partial class FrontDoorUpdateParameters
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorUpdateParameters.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorUpdateParameters.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontDoorUpdateParameters FromJson(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonObject json ? new FrontDoorUpdateParameters(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonObject into a new instance of <see cref="FrontDoorUpdateParameters" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal FrontDoorUpdateParameters(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_friendlyName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonString>("friendlyName"), out var __jsonFriendlyName) ? (string)__jsonFriendlyName : (string)_friendlyName;}
            {_routingRule = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonArray>("routingRules"), out var __jsonRoutingRules) ? If( __jsonRoutingRules as Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IRoutingRule>>(()=> global::System.Linq.Enumerable.ToList(global::System.Linq.Enumerable.Select(__v, (__u)=>(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IRoutingRule) (Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.RoutingRule.FromJson(__u) )) ))() : null : _routingRule;}
            {_loadBalancingSetting = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonArray>("loadBalancingSettings"), out var __jsonLoadBalancingSettings) ? If( __jsonLoadBalancingSettings as Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonArray, out var __q) ? new global::System.Func<System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.ILoadBalancingSettingsModel>>(()=> global::System.Linq.Enumerable.ToList(global::System.Linq.Enumerable.Select(__q, (__p)=>(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.ILoadBalancingSettingsModel) (Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.LoadBalancingSettingsModel.FromJson(__p) )) ))() : null : _loadBalancingSetting;}
            {_healthProbeSetting = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonArray>("healthProbeSettings"), out var __jsonHealthProbeSettings) ? If( __jsonHealthProbeSettings as Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonArray, out var __l) ? new global::System.Func<System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IHealthProbeSettingsModel>>(()=> global::System.Linq.Enumerable.ToList(global::System.Linq.Enumerable.Select(__l, (__k)=>(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IHealthProbeSettingsModel) (Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.HealthProbeSettingsModel.FromJson(__k) )) ))() : null : _healthProbeSetting;}
            {_backendPool = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonArray>("backendPools"), out var __jsonBackendPools) ? If( __jsonBackendPools as Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonArray, out var __g) ? new global::System.Func<System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IBackendPool>>(()=> global::System.Linq.Enumerable.ToList(global::System.Linq.Enumerable.Select(__g, (__f)=>(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IBackendPool) (Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.BackendPool.FromJson(__f) )) ))() : null : _backendPool;}
            {_frontendEndpoint = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonArray>("frontendEndpoints"), out var __jsonFrontendEndpoints) ? If( __jsonFrontendEndpoints as Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonArray, out var __b) ? new global::System.Func<System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontendEndpoint>>(()=> global::System.Linq.Enumerable.ToList(global::System.Linq.Enumerable.Select(__b, (__a)=>(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IFrontendEndpoint) (Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.FrontendEndpoint.FromJson(__a) )) ))() : null : _frontendEndpoint;}
            {_backendPoolsSetting = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonObject>("backendPoolsSettings"), out var __jsonBackendPoolsSettings) ? Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.BackendPoolsSettings.FromJson(__jsonBackendPoolsSettings) : _backendPoolsSetting;}
            {_enabledState = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonString>("enabledState"), out var __jsonEnabledState) ? (string)__jsonEnabledState : (string)_enabledState;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="FrontDoorUpdateParameters" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="FrontDoorUpdateParameters" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != (((object)this._friendlyName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonString(this._friendlyName.ToString()) : null, "friendlyName" ,container.Add );
            if (null != this._routingRule)
            {
                var __w = new Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.XNodeArray();
                foreach( var __x in this._routingRule )
                {
                    AddIf(__x?.ToJson(null, serializationMode) ,__w.Add);
                }
                container.Add("routingRules",__w);
            }
            if (null != this._loadBalancingSetting)
            {
                var __r = new Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.XNodeArray();
                foreach( var __s in this._loadBalancingSetting )
                {
                    AddIf(__s?.ToJson(null, serializationMode) ,__r.Add);
                }
                container.Add("loadBalancingSettings",__r);
            }
            if (null != this._healthProbeSetting)
            {
                var __m = new Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.XNodeArray();
                foreach( var __n in this._healthProbeSetting )
                {
                    AddIf(__n?.ToJson(null, serializationMode) ,__m.Add);
                }
                container.Add("healthProbeSettings",__m);
            }
            if (null != this._backendPool)
            {
                var __h = new Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.XNodeArray();
                foreach( var __i in this._backendPool )
                {
                    AddIf(__i?.ToJson(null, serializationMode) ,__h.Add);
                }
                container.Add("backendPools",__h);
            }
            if (null != this._frontendEndpoint)
            {
                var __c = new Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.XNodeArray();
                foreach( var __d in this._frontendEndpoint )
                {
                    AddIf(__d?.ToJson(null, serializationMode) ,__c.Add);
                }
                container.Add("frontendEndpoints",__c);
            }
            AddIf( null != this._backendPoolsSetting ? (Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonNode) this._backendPoolsSetting.ToJson(null,serializationMode) : null, "backendPoolsSettings" ,container.Add );
            AddIf( null != (((object)this._enabledState)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Json.JsonString(this._enabledState.ToString()) : null, "enabledState" ,container.Add );
            AfterToJson(ref container);
            return container;
        }
    }
}