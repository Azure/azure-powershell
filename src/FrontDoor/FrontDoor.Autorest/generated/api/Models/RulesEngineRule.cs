// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Extensions;

    /// <summary>
    /// Contains a list of match conditions, and an action on how to modify the request/response. If multiple rules match, the
    /// actions from one rule that conflict with a previous rule overwrite for a singular action, or append in the case of headers
    /// manipulation.
    /// </summary>
    public partial class RulesEngineRule :
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IRulesEngineRule,
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IRulesEngineRuleInternal
    {

        /// <summary>Backing field for <see cref="Action" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IRulesEngineAction _action;

        /// <summary>
        /// Actions to perform on the request and response if all of the match conditions are met.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IRulesEngineAction Action { get => (this._action = this._action ?? new Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.RulesEngineAction()); set => this._action = value; }

        /// <summary>Backing field for <see cref="MatchCondition" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IRulesEngineMatchCondition> _matchCondition;

        /// <summary>
        /// A list of match conditions that must meet in order for the actions of this rule to run. Having no match conditions means
        /// the actions will always run.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IRulesEngineMatchCondition> MatchCondition { get => this._matchCondition; set => this._matchCondition = value; }

        /// <summary>Backing field for <see cref="MatchProcessingBehavior" /> property.</summary>
        private string _matchProcessingBehavior;

        /// <summary>
        /// If this rule is a match should the rules engine continue running the remaining rules or stop. If not present, defaults
        /// to Continue.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Owned)]
        public string MatchProcessingBehavior { get => this._matchProcessingBehavior; set => this._matchProcessingBehavior = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>A name to refer to this specific rule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="Priority" /> property.</summary>
        private int _priority;

        /// <summary>A priority assigned to this rule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Owned)]
        public int Priority { get => this._priority; set => this._priority = value; }

        /// <summary>Creates an new <see cref="RulesEngineRule" /> instance.</summary>
        public RulesEngineRule()
        {

        }
    }
    /// Contains a list of match conditions, and an action on how to modify the request/response. If multiple rules match, the
    /// actions from one rule that conflict with a previous rule overwrite for a singular action, or append in the case of headers
    /// manipulation.
    public partial interface IRulesEngineRule :
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Actions to perform on the request and response if all of the match conditions are met.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Actions to perform on the request and response if all of the match conditions are met.",
        SerializedName = @"action",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IRulesEngineAction) })]
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IRulesEngineAction Action { get; set; }
        /// <summary>
        /// A list of match conditions that must meet in order for the actions of this rule to run. Having no match conditions means
        /// the actions will always run.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"A list of match conditions that must meet in order for the actions of this rule to run. Having no match conditions means the actions will always run.",
        SerializedName = @"matchConditions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IRulesEngineMatchCondition) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IRulesEngineMatchCondition> MatchCondition { get; set; }
        /// <summary>
        /// If this rule is a match should the rules engine continue running the remaining rules or stop. If not present, defaults
        /// to Continue.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"If this rule is a match should the rules engine continue running the remaining rules or stop. If not present, defaults to Continue.",
        SerializedName = @"matchProcessingBehavior",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PSArgumentCompleterAttribute("Continue", "Stop")]
        string MatchProcessingBehavior { get; set; }
        /// <summary>A name to refer to this specific rule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"A name to refer to this specific rule.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>A priority assigned to this rule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"A priority assigned to this rule. ",
        SerializedName = @"priority",
        PossibleTypes = new [] { typeof(int) })]
        int Priority { get; set; }

    }
    /// Contains a list of match conditions, and an action on how to modify the request/response. If multiple rules match, the
    /// actions from one rule that conflict with a previous rule overwrite for a singular action, or append in the case of headers
    /// manipulation.
    internal partial interface IRulesEngineRuleInternal

    {
        /// <summary>
        /// Actions to perform on the request and response if all of the match conditions are met.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IRulesEngineAction Action { get; set; }
        /// <summary>
        /// A list of match conditions that must meet in order for the actions of this rule to run. Having no match conditions means
        /// the actions will always run.
        /// </summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IRulesEngineMatchCondition> MatchCondition { get; set; }
        /// <summary>
        /// If this rule is a match should the rules engine continue running the remaining rules or stop. If not present, defaults
        /// to Continue.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PSArgumentCompleterAttribute("Continue", "Stop")]
        string MatchProcessingBehavior { get; set; }
        /// <summary>A name to refer to this specific rule.</summary>
        string Name { get; set; }
        /// <summary>A priority assigned to this rule.</summary>
        int Priority { get; set; }

    }
}