<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccessTokenRequiresAccount" xml:space="preserve">
    <value>AccountId must be provided to use an AccessToken credential.</value>
  </data>
  <data name="AccountIdMismatch" xml:space="preserve">
    <value>Account ID '{0}' for tenant '{1}' does not match home Account ID '{2}'</value>
  </data>
  <data name="AccountIdRequired" xml:space="preserve">
    <value>Access token credentials must provide the Username parameter.</value>
  </data>
  <data name="AzureProfileMustNotBeNull" xml:space="preserve">
    <value>Selected profile must not be null.</value>
  </data>
  <data name="BothSubscriptionIdAndNameProvided" xml:space="preserve">
    <value>Please provide either a subscription ID or a subscription name.</value>
  </data>
  <data name="ChangingDefaultEnvironmentNotSupported" xml:space="preserve">
    <value>Changing public environment is not supported.</value>
  </data>
  <data name="CommonTenantAuthFailed" xml:space="preserve">
    <value>Could not authenticate your user account {0} with the common tenant. Please log in using device authentication by adding your account without providing credentials on the command line, or add your account specifying the tenant you would like to authenticate with.</value>
  </data>
  <data name="CurrentTenantInUse" xml:space="preserve">
    <value>Current tenant with Id '{0}' will be used.</value>
  </data>
  <data name="DataCollectionActivity" xml:space="preserve">
    <value>Microsoft Azure CLU Data Collection Confirmation</value>
  </data>
  <data name="DataCollectionConfirmNo" xml:space="preserve">
    <value>You choose not to participate in Microsoft Azure CLU data collection.</value>
  </data>
  <data name="DataCollectionConfirmYes" xml:space="preserve">
    <value>You choose to participate in Microsoft Azure CLU data collection.</value>
  </data>
  <data name="DataCollectionPrompt" xml:space="preserve">
    <value>Microsoft Azure CLU collects data about how users use CLU commands and some problems they encounter.  Microsoft uses this information to improve our CLU commands.  Participation is voluntary and when you choose to participate your device automatically sends information to Microsoft about how you use Azure CLU. 
 
If you choose to participate, you may stop later at any time. To stop participation run `az telemetry --disable`.

If you choose to not participate, you may start later at any time. To start participation run `az telemetry --enable`.
 
Select Y to enable data collection [Y/N]:</value>
  </data>
  <data name="EnvironmentNameNeedsToBeSpecified" xml:space="preserve">
    <value>Environment name needs to be specified</value>
  </data>
  <data name="EnvironmentNeedsToBeSpecified" xml:space="preserve">
    <value>Environment needs to be specified</value>
  </data>
  <data name="EnvironmentNotFound" xml:space="preserve">
    <value>The environment name '{0}' is not found.</value>
  </data>
  <data name="InvalidSubscriptionId" xml:space="preserve">
    <value>The provided subscription ID "{0}" is not a valid Guid.</value>
  </data>
  <data name="NoAccountProvided" xml:space="preserve">
    <value>(no account provided)</value>
  </data>
  <data name="NoValidTenant" xml:space="preserve">
    <value>Please provide a valid tenant Id on the command line or add your account again.</value>
  </data>
  <data name="RemovingDefaultEnvironmentsNotSupported" xml:space="preserve">
    <value>Removing public environment is not supported.</value>
  </data>
  <data name="SetAzureRmContextNoParameterSet" xml:space="preserve">
    <value>Please provide either a subscription ID, subscription name, tenant Id or domain.</value>
  </data>
  <data name="SubscriptionIdNotFound" xml:space="preserve">
    <value>Account '{0}' could not access SubscriptionId {1}.  Please check your account permissions and try again.</value>
  </data>
  <data name="SubscriptionIdNotFoundMessage" xml:space="preserve">
    <value>The subscription id {0} doesn't exist.</value>
  </data>
  <data name="SubscriptionNameNotFound" xml:space="preserve">
    <value>Account '{0}' could not access Subscription '{1}'.  Please check your account permissions and try again.</value>
  </data>
  <data name="SubscriptionNameNotFoundError" xml:space="preserve">
    <value>Unable to find subscription with name '{0}'.</value>
  </data>
  <data name="SubscriptionNotFoundError" xml:space="preserve">
    <value>Subscription {0} was not found in tenant {1}. Please verify that the subscription exists in this tenant.</value>
  </data>
  <data name="TenantAuthFailed" xml:space="preserve">
    <value>Could not authenticate with tenant {0}. Please ensure that your account has access to this tenant and log in again.</value>
  </data>
  <data name="TenantIdNotFound" xml:space="preserve">
    <value>Unable to find tenant '{0}'.</value>
  </data>
  <data name="TooManyTenants" xml:space="preserve">
    <value>TenantId '{0}' contains more than one subscription. First one will be selected for further use. To select another subscription, use 'context set' cmdlet.</value>
  </data>
  <data name="TypeNotAccessToken" xml:space="preserve">
    <value>To create an access token credential, you must provide an access token account.</value>
  </data>
  <data name="UnableToAqcuireToken" xml:space="preserve">
    <value>Unabe to acquire token for tenant '{0}'</value>
  </data>
  <data name="UnknownEnvironment" xml:space="preserve">
    <value>Unable to find environment with name '{0}</value>
  </data>
</root>