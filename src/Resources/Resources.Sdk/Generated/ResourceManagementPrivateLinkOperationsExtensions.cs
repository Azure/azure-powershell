// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.Resources
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for ResourceManagementPrivateLinkOperations
    /// </summary>
    public static partial class ResourceManagementPrivateLinkOperationsExtensions
    {
        /// <summary>
        /// Create a resource management group private link.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='rmplName'>
        /// The name of the resource management private link.
        /// </param>
        public static ResourceManagementPrivateLink Put(this IResourceManagementPrivateLinkOperations operations, string resourceGroupName, string rmplName, ResourceManagementPrivateLinkLocation parameters)
        {
                return ((IResourceManagementPrivateLinkOperations)operations).PutAsync(resourceGroupName, rmplName, parameters).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Create a resource management group private link.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='rmplName'>
        /// The name of the resource management private link.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<ResourceManagementPrivateLink> PutAsync(this IResourceManagementPrivateLinkOperations operations, string resourceGroupName, string rmplName, ResourceManagementPrivateLinkLocation parameters, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.PutWithHttpMessagesAsync(resourceGroupName, rmplName, parameters, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Get a resource management private link(resource-level).
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='rmplName'>
        /// The name of the resource management private link.
        /// </param>
        public static ResourceManagementPrivateLink Get(this IResourceManagementPrivateLinkOperations operations, string resourceGroupName, string rmplName)
        {
                return ((IResourceManagementPrivateLinkOperations)operations).GetAsync(resourceGroupName, rmplName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Get a resource management private link(resource-level).
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='rmplName'>
        /// The name of the resource management private link.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<ResourceManagementPrivateLink> GetAsync(this IResourceManagementPrivateLinkOperations operations, string resourceGroupName, string rmplName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, rmplName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Delete a resource management private link.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='rmplName'>
        /// The name of the resource management private link.
        /// </param>
        public static void Delete(this IResourceManagementPrivateLinkOperations operations, string resourceGroupName, string rmplName)
        {
                ((IResourceManagementPrivateLinkOperations)operations).DeleteAsync(resourceGroupName, rmplName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Delete a resource management private link.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='rmplName'>
        /// The name of the resource management private link.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task DeleteAsync(this IResourceManagementPrivateLinkOperations operations, string resourceGroupName, string rmplName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, rmplName, null, cancellationToken).ConfigureAwait(false)).Dispose();
        }
        /// <summary>
        /// Get all the resource management private links in a subscription.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        public static ResourceManagementPrivateLinkListResult List(this IResourceManagementPrivateLinkOperations operations)
        {
                return ((IResourceManagementPrivateLinkOperations)operations).ListAsync().GetAwaiter().GetResult();
        }

        /// <summary>
        /// Get all the resource management private links in a subscription.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<ResourceManagementPrivateLinkListResult> ListAsync(this IResourceManagementPrivateLinkOperations operations, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Get all the resource management private links in a resource group.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        public static ResourceManagementPrivateLinkListResult ListByResourceGroup(this IResourceManagementPrivateLinkOperations operations, string resourceGroupName)
        {
                return ((IResourceManagementPrivateLinkOperations)operations).ListByResourceGroupAsync(resourceGroupName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Get all the resource management private links in a resource group.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<ResourceManagementPrivateLinkListResult> ListByResourceGroupAsync(this IResourceManagementPrivateLinkOperations operations, string resourceGroupName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListByResourceGroupWithHttpMessagesAsync(resourceGroupName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
    }
}
