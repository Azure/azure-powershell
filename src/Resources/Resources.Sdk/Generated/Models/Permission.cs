// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Resources.Models
{
    using System.Linq;

    /// <summary>
    /// Role definition permissions.
    /// </summary>
    public partial class Permission
    {
        /// <summary>
        /// Initializes a new instance of the Permission class.
        /// </summary>
        public Permission()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Permission class.
        /// </summary>

        /// <param name="actions">Allowed actions.
        /// </param>

        /// <param name="notActions">Denied actions.
        /// </param>

        /// <param name="dataActions">Allowed Data actions.
        /// </param>

        /// <param name="notDataActions">Denied Data actions.
        /// </param>
        public Permission(System.Collections.Generic.IList<string> actions = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<string> notActions = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<string> dataActions = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<string> notDataActions = default(System.Collections.Generic.IList<string>))

        {
            this.Actions = actions;
            this.NotActions = notActions;
            this.DataActions = dataActions;
            this.NotDataActions = notDataActions;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets allowed actions.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "actions")]
        public System.Collections.Generic.IList<string> Actions {get; set; }

        /// <summary>
        /// Gets or sets denied actions.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "notActions")]
        public System.Collections.Generic.IList<string> NotActions {get; set; }

        /// <summary>
        /// Gets or sets allowed Data actions.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "dataActions")]
        public System.Collections.Generic.IList<string> DataActions {get; set; }

        /// <summary>
        /// Gets or sets denied Data actions.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "notDataActions")]
        public System.Collections.Generic.IList<string> NotDataActions {get; set; }
    }
}