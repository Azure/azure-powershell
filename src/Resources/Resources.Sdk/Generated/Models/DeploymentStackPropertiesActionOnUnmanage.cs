// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Resources.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Defines the behavior of resources that are not managed immediately
    /// after the stack is updated.
    /// </summary>
    public partial class DeploymentStackPropertiesActionOnUnmanage
    {
        /// <summary>
        /// Initializes a new instance of the
        /// DeploymentStackPropertiesActionOnUnmanage class.
        /// </summary>
        public DeploymentStackPropertiesActionOnUnmanage()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// DeploymentStackPropertiesActionOnUnmanage class.
        /// </summary>
        /// <param name="resources">Possible values include: 'delete',
        /// 'detach'</param>
        /// <param name="resourceGroups">Possible values include: 'delete',
        /// 'detach'</param>
        /// <param name="managementGroups">Possible values include: 'delete',
        /// 'detach'</param>
        public DeploymentStackPropertiesActionOnUnmanage(string resources, string resourceGroups = default(string), string managementGroups = default(string))
        {
            Resources = resources;
            ResourceGroups = resourceGroups;
            ManagementGroups = managementGroups;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets possible values include: 'delete', 'detach'
        /// </summary>
        [JsonProperty(PropertyName = "resources")]
        public string Resources { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'delete', 'detach'
        /// </summary>
        [JsonProperty(PropertyName = "resourceGroups")]
        public string ResourceGroups { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'delete', 'detach'
        /// </summary>
        [JsonProperty(PropertyName = "managementGroups")]
        public string ManagementGroups { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Resources == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Resources");
            }
        }
    }
}
