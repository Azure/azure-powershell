// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Resources.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The managed resource model.
    /// </summary>
    public partial class ManagedResourceReference : ResourceReference
    {
        /// <summary>
        /// Initializes a new instance of the ManagedResourceReference class.
        /// </summary>
        public ManagedResourceReference()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ManagedResourceReference class.
        /// </summary>
        /// <param name="id">The resourceId of a resource managed by the
        /// deployment stack.</param>
        /// <param name="status">Current management state of the resource in
        /// the deployment stack. Possible values include: 'Managed',
        /// 'removeDenyFailed', 'deleteFailed', 'None'</param>
        /// <param name="denyStatus">denyAssignment settings applied to the
        /// resource. Possible values include: 'denyDelete', 'notSupported',
        /// 'inapplicable', 'denyWriteAndDelete', 'removedBySystem',
        /// 'None'</param>
        public ManagedResourceReference(string id = default(string), string status = default(string), string denyStatus = default(string))
            : base(id)
        {
            Status = status;
            DenyStatus = denyStatus;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets current management state of the resource in the
        /// deployment stack. Possible values include: 'Managed',
        /// 'removeDenyFailed', 'deleteFailed', 'None'
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// Gets or sets denyAssignment settings applied to the resource.
        /// Possible values include: 'denyDelete', 'notSupported',
        /// 'inapplicable', 'denyWriteAndDelete', 'removedBySystem', 'None'
        /// </summary>
        [JsonProperty(PropertyName = "denyStatus")]
        public string DenyStatus { get; set; }

    }
}
