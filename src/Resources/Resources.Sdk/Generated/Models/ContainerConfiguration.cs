// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Resources.Models
{
    using System.Linq;

    /// <summary>
    /// Settings to customize ACI container instance.
    /// </summary>
    public partial class ContainerConfiguration
    {
        /// <summary>
        /// Initializes a new instance of the ContainerConfiguration class.
        /// </summary>
        public ContainerConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ContainerConfiguration class.
        /// </summary>

        /// <param name="containerGroupName">Container group name, if not specified then the name will get
        /// auto-generated. Not specifying a &#39;containerGroupName&#39; indicates the system
        /// to generate a unique name which might end up flagging an Azure Policy as
        /// non-compliant. Use &#39;containerGroupName&#39; when you have an Azure Policy that
        /// expects a specific naming convention or when you want to fully control the
        /// name. &#39;containerGroupName&#39; property must be between 1 and 63 characters
        /// long, must contain only lowercase letters, numbers, and dashes and it
        /// cannot start or end with a dash and consecutive dashes are not allowed. To
        /// specify a &#39;containerGroupName&#39;, add the following object to properties: {
        /// &#34;containerSettings&#34;: { &#34;containerGroupName&#34;: &#34;contoso-container&#34; } }. If
        /// you do not want to specify a &#39;containerGroupName&#39; then do not add
        /// &#39;containerSettings&#39; property.
        /// </param>
        public ContainerConfiguration(string containerGroupName = default(string))

        {
            this.ContainerGroupName = containerGroupName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets container group name, if not specified then the name will get
        /// auto-generated. Not specifying a &#39;containerGroupName&#39; indicates the system
        /// to generate a unique name which might end up flagging an Azure Policy as
        /// non-compliant. Use &#39;containerGroupName&#39; when you have an Azure Policy that
        /// expects a specific naming convention or when you want to fully control the
        /// name. &#39;containerGroupName&#39; property must be between 1 and 63 characters
        /// long, must contain only lowercase letters, numbers, and dashes and it
        /// cannot start or end with a dash and consecutive dashes are not allowed. To
        /// specify a &#39;containerGroupName&#39;, add the following object to properties: {
        /// &#34;containerSettings&#34;: { &#34;containerGroupName&#34;: &#34;contoso-container&#34; } }. If
        /// you do not want to specify a &#39;containerGroupName&#39; then do not add
        /// &#39;containerSettings&#39; property.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "containerGroupName")]
        public string ContainerGroupName {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.ContainerGroupName != null)
            {
                if (this.ContainerGroupName.Length > 63)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MaxLength, "ContainerGroupName", 63);
                }
                if (this.ContainerGroupName.Length < 1)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MinLength, "ContainerGroupName", 1);
                }
            }
        }
    }
}