// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Resources.Models
{

    /// <summary>
    /// Defines values for SubscriptionState.
    /// </summary>


    [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
    public enum SubscriptionState
    {
        [System.Runtime.Serialization.EnumMember(Value = "Enabled")]
        Enabled,
        [System.Runtime.Serialization.EnumMember(Value = "Warned")]
        Warned,
        [System.Runtime.Serialization.EnumMember(Value = "PastDue")]
        PastDue,
        [System.Runtime.Serialization.EnumMember(Value = "Disabled")]
        Disabled,
        [System.Runtime.Serialization.EnumMember(Value = "Deleted")]
        Deleted
    }
    internal static class SubscriptionStateEnumExtension
    {
        internal static string ToSerializedValue(this SubscriptionState? value)
        {
            return value == null ? null : ((SubscriptionState)value).ToSerializedValue();
        }
        internal static string ToSerializedValue(this SubscriptionState value)
        {
            switch( value )
            {
                case SubscriptionState.Enabled:
                    return "Enabled";
                case SubscriptionState.Warned:
                    return "Warned";
                case SubscriptionState.PastDue:
                    return "PastDue";
                case SubscriptionState.Disabled:
                    return "Disabled";
                case SubscriptionState.Deleted:
                    return "Deleted";
            }
            return null;
        }
        internal static SubscriptionState? ParseSubscriptionState(this string value)
        {
            switch( value )
            {
                case "Enabled":
                    return SubscriptionState.Enabled;
                case "Warned":
                    return SubscriptionState.Warned;
                case "PastDue":
                    return SubscriptionState.PastDue;
                case "Disabled":
                    return SubscriptionState.Disabled;
                case "Deleted":
                    return SubscriptionState.Deleted;
            }
            return null;
        }
    }
}