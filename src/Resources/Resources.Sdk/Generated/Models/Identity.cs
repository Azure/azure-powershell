// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Resources.Models
{
    using System.Linq;

    /// <summary>
    /// Identity for the resource.
    /// </summary>
    public partial class Identity
    {
        /// <summary>
        /// Initializes a new instance of the Identity class.
        /// </summary>
        public Identity()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Identity class.
        /// </summary>

        /// <param name="principalId">The principal ID of resource identity.
        /// </param>

        /// <param name="tenantId">The tenant ID of resource.
        /// </param>

        /// <param name="type">The identity type.
        /// Possible values include: &#39;SystemAssigned&#39;, &#39;UserAssigned&#39;, &#39;SystemAssigned,
        /// UserAssigned&#39;, &#39;None&#39;</param>

        /// <param name="userAssignedIdentities">The list of user identities associated with the resource. The user identity
        /// dictionary key references will be ARM resource ids in the form:
        /// &#39;/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}&#39;.
        /// </param>
        public Identity(string principalId = default(string), string tenantId = default(string), ResourceIdentityType? type = default(ResourceIdentityType?), System.Collections.Generic.IDictionary<string, IdentityUserAssignedIdentitiesValue> userAssignedIdentities = default(System.Collections.Generic.IDictionary<string, IdentityUserAssignedIdentitiesValue>))

        {
            this.PrincipalId = principalId;
            this.TenantId = tenantId;
            this.Type = type;
            this.UserAssignedIdentities = userAssignedIdentities;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the principal ID of resource identity.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "principalId")]
        public string PrincipalId {get; private set; }

        /// <summary>
        /// Gets the tenant ID of resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "tenantId")]
        public string TenantId {get; private set; }

        /// <summary>
        /// Gets or sets the identity type. Possible values include: &#39;SystemAssigned&#39;, &#39;UserAssigned&#39;, &#39;SystemAssigned, UserAssigned&#39;, &#39;None&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "type")]
        public ResourceIdentityType? Type {get; set; }

        /// <summary>
        /// Gets or sets the list of user identities associated with the resource. The
        /// user identity dictionary key references will be ARM resource ids in the
        /// form:
        /// &#39;/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}&#39;.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "userAssignedIdentities")]
        public System.Collections.Generic.IDictionary<string, IdentityUserAssignedIdentitiesValue> UserAssignedIdentities {get; set; }
    }
}