// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.Authorization
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for ProviderOperationsMetadataOperations
    /// </summary>
    public static partial class ProviderOperationsMetadataOperationsExtensions
    {
        /// <summary>
        /// Gets provider operations metadata for the specified resource provider.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceProviderNamespace'>
        /// The namespace of the resource provider.
        /// </param>
        /// <param name='expand'>
        /// Specifies whether to expand the values.
        /// </param>
        public static ProviderOperationsMetadata Get(this IProviderOperationsMetadataOperations operations, string resourceProviderNamespace, string expand = default(string))
        {
                return ((IProviderOperationsMetadataOperations)operations).GetAsync(resourceProviderNamespace, expand).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets provider operations metadata for the specified resource provider.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceProviderNamespace'>
        /// The namespace of the resource provider.
        /// </param>
        /// <param name='expand'>
        /// Specifies whether to expand the values.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<ProviderOperationsMetadata> GetAsync(this IProviderOperationsMetadataOperations operations, string resourceProviderNamespace, string expand = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.GetWithHttpMessagesAsync(resourceProviderNamespace, expand, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Gets provider operations metadata for all resource providers.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='expand'>
        /// Specifies whether to expand the values.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<ProviderOperationsMetadata> List(this IProviderOperationsMetadataOperations operations, string expand = default(string))
        {
                return ((IProviderOperationsMetadataOperations)operations).ListAsync(expand).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets provider operations metadata for all resource providers.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='expand'>
        /// Specifies whether to expand the values.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<ProviderOperationsMetadata>> ListAsync(this IProviderOperationsMetadataOperations operations, string expand = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListWithHttpMessagesAsync(expand, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Gets provider operations metadata for all resource providers.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<ProviderOperationsMetadata> ListNext(this IProviderOperationsMetadataOperations operations, string nextPageLink)
        {
                return ((IProviderOperationsMetadataOperations)operations).ListNextAsync(nextPageLink).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets provider operations metadata for all resource providers.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<ProviderOperationsMetadata>> ListNextAsync(this IProviderOperationsMetadataOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
    }
}
