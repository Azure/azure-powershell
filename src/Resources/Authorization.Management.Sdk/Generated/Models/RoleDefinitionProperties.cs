// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Authorization.Models
{
    using System.Linq;

    /// <summary>
    /// Role definition properties.
    /// </summary>
    public partial class RoleDefinitionProperties
    {
        /// <summary>
        /// Initializes a new instance of the RoleDefinitionProperties class.
        /// </summary>
        public RoleDefinitionProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RoleDefinitionProperties class.
        /// </summary>

        /// <param name="roleName">The role name.
        /// </param>

        /// <param name="description">The role definition description.
        /// </param>

        /// <param name="roleType">The role type.
        /// </param>

        /// <param name="permissions">Role definition permissions.
        /// </param>

        /// <param name="assignableScopes">Role definition assignable scopes.
        /// </param>

        /// <param name="createdOn">Time it was created
        /// </param>

        /// <param name="updatedOn">Time it was updated
        /// </param>

        /// <param name="createdBy">Id of the user who created the assignment
        /// </param>

        /// <param name="updatedBy">Id of the user who updated the assignment
        /// </param>
        public RoleDefinitionProperties(string roleName = default(string), string description = default(string), string roleType = default(string), System.Collections.Generic.IList<Permission> permissions = default(System.Collections.Generic.IList<Permission>), System.Collections.Generic.IList<string> assignableScopes = default(System.Collections.Generic.IList<string>), System.DateTime? createdOn = default(System.DateTime?), System.DateTime? updatedOn = default(System.DateTime?), string createdBy = default(string), string updatedBy = default(string))

        {
            this.RoleName = roleName;
            this.Description = description;
            this.RoleType = roleType;
            this.Permissions = permissions;
            this.AssignableScopes = assignableScopes;
            this.CreatedOn = createdOn;
            this.UpdatedOn = updatedOn;
            this.CreatedBy = createdBy;
            this.UpdatedBy = updatedBy;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the role name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "roleName")]
        public string RoleName {get; set; }

        /// <summary>
        /// Gets or sets the role definition description.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "description")]
        public string Description {get; set; }

        /// <summary>
        /// Gets or sets the role type.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "type")]
        public string RoleType {get; set; }

        /// <summary>
        /// Gets or sets role definition permissions.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "permissions")]
        public System.Collections.Generic.IList<Permission> Permissions {get; set; }

        /// <summary>
        /// Gets or sets role definition assignable scopes.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "assignableScopes")]
        public System.Collections.Generic.IList<string> AssignableScopes {get; set; }

        /// <summary>
        /// Gets time it was created
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "createdOn")]
        public System.DateTime? CreatedOn {get; private set; }

        /// <summary>
        /// Gets time it was updated
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "updatedOn")]
        public System.DateTime? UpdatedOn {get; private set; }

        /// <summary>
        /// Gets id of the user who created the assignment
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "createdBy")]
        public string CreatedBy {get; private set; }

        /// <summary>
        /// Gets id of the user who updated the assignment
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "updatedBy")]
        public string UpdatedBy {get; private set; }
    }
}