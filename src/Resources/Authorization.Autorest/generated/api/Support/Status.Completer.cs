// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Resources.Authorization.Support
{

    /// <summary>The status of the role assignment schedule.</summary>
    [System.ComponentModel.TypeConverter(typeof(Microsoft.Azure.PowerShell.Cmdlets.Resources.Authorization.Support.StatusTypeConverter))]
    public partial struct Status :
        System.Management.Automation.IArgumentCompleter
    {

        /// <summary>
        /// Implementations of this function are called by PowerShell to complete arguments.
        /// </summary>
        /// <param name="commandName">The name of the command that needs argument completion.</param>
        /// <param name="parameterName">The name of the parameter that needs argument completion.</param>
        /// <param name="wordToComplete">The (possibly empty) word being completed.</param>
        /// <param name="commandAst">The command ast in case it is needed for completion.</param>
        /// <param name="fakeBoundParameters">This parameter is similar to $PSBoundParameters, except that sometimes PowerShell cannot
        /// or will not attempt to evaluate an argument, in which case you may need to use commandAst.</param>
        /// <returns>
        /// A collection of completion results, most like with ResultType set to ParameterValue.
        /// </returns>
        public global::System.Collections.Generic.IEnumerable<global::System.Management.Automation.CompletionResult> CompleteArgument(global::System.String commandName, global::System.String parameterName, global::System.String wordToComplete, global::System.Management.Automation.Language.CommandAst commandAst, global::System.Collections.IDictionary fakeBoundParameters)
        {
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Accepted".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Accepted'", "Accepted", global::System.Management.Automation.CompletionResultType.ParameterValue, "Accepted");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "PendingEvaluation".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'PendingEvaluation'", "PendingEvaluation", global::System.Management.Automation.CompletionResultType.ParameterValue, "PendingEvaluation");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Granted".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Granted'", "Granted", global::System.Management.Automation.CompletionResultType.ParameterValue, "Granted");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Denied".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Denied'", "Denied", global::System.Management.Automation.CompletionResultType.ParameterValue, "Denied");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "PendingProvisioning".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'PendingProvisioning'", "PendingProvisioning", global::System.Management.Automation.CompletionResultType.ParameterValue, "PendingProvisioning");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Provisioned".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Provisioned'", "Provisioned", global::System.Management.Automation.CompletionResultType.ParameterValue, "Provisioned");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "PendingRevocation".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'PendingRevocation'", "PendingRevocation", global::System.Management.Automation.CompletionResultType.ParameterValue, "PendingRevocation");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Revoked".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Revoked'", "Revoked", global::System.Management.Automation.CompletionResultType.ParameterValue, "Revoked");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Canceled".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Canceled'", "Canceled", global::System.Management.Automation.CompletionResultType.ParameterValue, "Canceled");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Failed".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Failed'", "Failed", global::System.Management.Automation.CompletionResultType.ParameterValue, "Failed");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "PendingApprovalProvisioning".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'PendingApprovalProvisioning'", "PendingApprovalProvisioning", global::System.Management.Automation.CompletionResultType.ParameterValue, "PendingApprovalProvisioning");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "PendingApproval".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'PendingApproval'", "PendingApproval", global::System.Management.Automation.CompletionResultType.ParameterValue, "PendingApproval");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "FailedAsResourceIsLocked".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'FailedAsResourceIsLocked'", "FailedAsResourceIsLocked", global::System.Management.Automation.CompletionResultType.ParameterValue, "FailedAsResourceIsLocked");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "PendingAdminDecision".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'PendingAdminDecision'", "PendingAdminDecision", global::System.Management.Automation.CompletionResultType.ParameterValue, "PendingAdminDecision");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AdminApproved".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AdminApproved'", "AdminApproved", global::System.Management.Automation.CompletionResultType.ParameterValue, "AdminApproved");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AdminDenied".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AdminDenied'", "AdminDenied", global::System.Management.Automation.CompletionResultType.ParameterValue, "AdminDenied");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "TimedOut".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'TimedOut'", "TimedOut", global::System.Management.Automation.CompletionResultType.ParameterValue, "TimedOut");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "ProvisioningStarted".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'ProvisioningStarted'", "ProvisioningStarted", global::System.Management.Automation.CompletionResultType.ParameterValue, "ProvisioningStarted");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Invalid".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Invalid'", "Invalid", global::System.Management.Automation.CompletionResultType.ParameterValue, "Invalid");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "PendingScheduleCreation".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'PendingScheduleCreation'", "PendingScheduleCreation", global::System.Management.Automation.CompletionResultType.ParameterValue, "PendingScheduleCreation");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "ScheduleCreated".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'ScheduleCreated'", "ScheduleCreated", global::System.Management.Automation.CompletionResultType.ParameterValue, "ScheduleCreated");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "PendingExternalProvisioning".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'PendingExternalProvisioning'", "PendingExternalProvisioning", global::System.Management.Automation.CompletionResultType.ParameterValue, "PendingExternalProvisioning");
            }
        }
    }
}