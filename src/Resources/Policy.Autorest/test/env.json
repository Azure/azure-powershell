{
  "someIdentityId": "someIdentityId",
  "missingParameters": "Cannot process command because of one or more missing mandatory parameters:",
  "enforcementModeDefault": "Default",
  "someJsonArray": "[{ 'someThing': 'someOtherThing' }]",
  "Tenant": "72f988bf-86f1-41af-91ab-2d7cd011db47",
  "policyDefinitionParameter": "One of PolicyDefinition or PolicySetDefinition must be provided.",
  "someJsonSnippet": "{ 'someThing': 'someOtherThing' }",
  "parameterDefinition": "{ 'listOfAllowedLocations': { 'type': 'array', 'metadata': { 'description': 'An array of permitted locations for resources.', 'strongType': 'location', 'displayName': 'List of locations' } } }",
  "allSwitchNotSupported": "The IncludeDescendent switch is not supported for management group scopes.",
  "customSubSetDefName": "ps02",
  "parameterDisplayName": "List of locations",
  "invalidPolicyRule": "[InvalidPolicyRule] : Failed to parse policy rule: ",
  "managementGroup": "AzGovPerfTest",
  "metadataName": "testName",
  "onlyDefinitionOrSetDefinition": "Only one of -PolicyDefinition or -PolicySetDefinition can be specified, not both.",
  "someName": "someName",
  "missingAnArgument": "Missing an argument for parameter ",
  "updatedDescription": "Updated ",
  "enforcemenG460tModeDoNotEnforce": "DoNotEnforce",
  "missingSubscription": "[MissingSubscription] : The request did not have a subscription or a valid tenant level resource provider.",
  "rgScope": "/subscriptions/597b2066-8f6f-4236-9c61-6d4e9891eef8/resourceGroups/rg01",
  "invalidParameterValue": "Cannot validate argument on parameter",
  "undefinedPolicyParameter": "[UndefinedPolicyParameter] : The policy assignment",
  "listVersionsRequiresNameOrId": "ListVersions is only allowed if Name or Id  are provided.",
  "nonInteractiveMode": "PowerShell is in NonInteractive mode. Read and Prompt functionality is not available.",
  "policySetDefinitionNotFound": "[PolicySetDefinitionNotFound] : ",
  "userAssignedIdentityName": "test-user-msi",
  "policyExemptionNotFound": "[PolicyExemptionNotFound] : ",
  "updatedMetadataName": "newTestName",
  "parameterSetError": "Parameter set cannot be resolved using the specified named parameters.",
  "someScope": "someScope",
  "invalidPolicyDefinitionReference": "InvalidPolicyDefinitionReference",
  "someParameterObject": "{'parm1': 'a', 'parm2': 'b' }",
  "authorizationFailed": "[AuthorizationFailed] : ",
  "metadataValue": "testValue",
  "rgName": "rg01",
  "somePolicySetDefinition": "somePolicySetDefinition",
  "policyAssignmentMissingLocation": "Location needs to be specified if a managed identity is to be assigned to the policy assignment.",
  "metadata": "{'testName':'testValue'}",
  "someId": "someId",
  "invalidPolicySetDefinitionRequest": "[InvalidCreatePolicySetDefinitionRequest] : The policy set definition 'someName' create request is invalid. At least one policy definition must be referenced.",
  "policyAssignmentMissingIdentityId": "A user assigned identity id needs to be specified if the identity type is 'UserAssigned'.",
  "parameterNullError": ". The argument is null. Provide a valid value for the argument, and then try running the command again.",
  "SubscriptionId": "597b2066-8f6f-4236-9c61-6d4e9891eef8",
  "description": "Unit test junk: sorry for littering. Please delete me!",
  "managementGroupScope": "/providers/Microsoft.Management/managementGroups/AzGovPerfTest",
  "parameterNullOrEmpty": ". The argument is null or empty. Provide an argument that is not null or empty, and then try the command again.",
  "policyDefinitionNotFound": "[PolicyDefinitionNotFound] : ",
  "location": "westus",
  "somePolicyParameter": "somePolicyParameter",
  "somePolicyDefinition": "somePolicyDefinition",
  "versionRequiresNameOrId": "Version is only allowed if Name or Id  are provided.",
  "httpMethodNotSupported": "HttpMethodNotSupported : The http method 'DELETE' is not supported for a resource collection.",
  "onlyManagementGroupOrSubscription": "Only ManagementGroupName or SubscriptionId can be provided, not both.",
  "someDisplayName": "Some display name",
  "policyAssignmentNotFound": "[PolicyAssignmentNotFound] : ",
  "customSubDefinition": {
    "Description": null,
    "DisplayName": null,
    "Id": "/subscriptions/597b2066-8f6f-4236-9c61-6d4e9891eef8/providers/Microsoft.Authorization/policyDefinitions/ps01",
    "Metadata": {},
    "Mode": "All",
    "Name": "ps01",
    "Parameter": {},
    "PolicyRule": {},
    "PolicyType": "Custom",
    "SystemDataCreatedAt": "2024-06-28T04:20:15.3841032Z",
    "SystemDataCreatedBy": "cstack@ntdev.microsoft.com",
    "SystemDataCreatedByType": "User",
    "SystemDataLastModifiedAt": "2024-06-28T04:20:15.3841032Z",
    "SystemDataLastModifiedBy": "cstack@ntdev.microsoft.com",
    "SystemDataLastModifiedByType": "User",
    "Type": "Microsoft.Authorization/policyDefinitions",
    "Version": "1.0.0",
    "Versions": [
      "1.0.0"
    ]
  },
  "userAssignedIdentityId": "/subscriptions/597b2066-8f6f-4236-9c61-6d4e9891eef8/resourcegroups/rg01/providers/Microsoft.ManagedIdentity/userAssignedIdentities/test-user-msi",
  "someManagementGroup": "someManagementGroup",
  "updatedMetadataValue": "newTestValue",
  "parameterDescription": "An array of permitted locations for resources.",
  "fullParameterDefinition": "{ 'listOfAllowedLocations': { 'type': 'array', 'metadata': { 'description': 'An array of permitted locations for resources.', 'strongType': 'location', 'displayName': 'List of locations' } }, 'effectParam': { 'type': 'string', 'defaultValue': 'deny' } }",
  "multiplePolicyDefinitionParams": "Cannot bind parameter because parameter 'PolicyDefinition' is specified more than once",
  "customSubSetDefinition": {
    "Description": null,
    "DisplayName": null,
    "Id": "/subscriptions/597b2066-8f6f-4236-9c61-6d4e9891eef8/providers/Microsoft.Authorization/policySetDefinitions/ps02",
    "Metadata": {},
    "Name": "ps02",
    "Parameter": {},
    "PolicyDefinition": [
      {
        "DefinitionVersion": "1.*.*",
        "GroupName": null,
        "Id": "14184440715074676626",
        "Parameter": {},
        "PolicyDefinitionId": "/subscriptions/597b2066-8f6f-4236-9c61-6d4e9891eef8/providers/Microsoft.Authorization/policyDefinitions/ps01"
      }
    ],
    "PolicyDefinitionGroup": null,
    "PolicyType": "Custom",
    "SystemDataCreatedAt": "2024-06-28T04:20:16.3470998Z",
    "SystemDataCreatedBy": "cstack@ntdev.microsoft.com",
    "SystemDataCreatedByType": "User",
    "SystemDataLastModifiedAt": "2024-06-28T04:20:16.3470998Z",
    "SystemDataLastModifiedBy": "cstack@ntdev.microsoft.com",
    "SystemDataLastModifiedByType": "User",
    "Type": "Microsoft.Authorization/policySetDefinitions",
    "Version": "1.0.0",
    "Versions": [
      "1.0.0"
    ]
  },
  "invalidRequestContent": "[InvalidRequestContent] : The request content was invalid and could not be deserialized: ",
  "updatedMetadata": "{'testName':'testValue', 'newTestName': 'newTestValue'}",
  "customSubDefName": "ps01"
}
