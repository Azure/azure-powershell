// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.9.4, generator: @autorest/powershell@3.0.498)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Sample.API.Support
{

    /// <summary>
    /// The policy assignment enforcement mode. Possible values are Default and DoNotEnforce.
    /// </summary>
    public partial struct EnforcementMode :
        System.IEquatable<EnforcementMode>
    {
        /// <summary>The policy effect is enforced during resource creation or update.</summary>
        public static Sample.API.Support.EnforcementMode Default = @"Default";

        /// <summary>The policy effect is not enforced during resource creation or update.</summary>
        public static Sample.API.Support.EnforcementMode DoNotEnforce = @"DoNotEnforce";

        /// <summary>the value for an instance of the <see cref="EnforcementMode" /> Enum.</summary>
        private string _value { get; set; }

        /// <summary>Conversion from arbitrary object to EnforcementMode</summary>
        /// <param name="value">the value to convert to an instance of <see cref="EnforcementMode" />.</param>
        internal static object CreateFrom(object value)
        {
            return new EnforcementMode(global::System.Convert.ToString(value));
        }

        /// <summary>Creates an instance of the <see cref="EnforcementMode"/> Enum class.</summary>
        /// <param name="underlyingValue">the value to create an instance for.</param>
        private EnforcementMode(string underlyingValue)
        {
            this._value = underlyingValue;
        }

        /// <summary>Compares values of enum type EnforcementMode</summary>
        /// <param name="e">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public bool Equals(Sample.API.Support.EnforcementMode e)
        {
            return _value.Equals(e._value);
        }

        /// <summary>Compares values of enum type EnforcementMode (override for Object)</summary>
        /// <param name="obj">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public override bool Equals(object obj)
        {
            return obj is EnforcementMode && Equals((EnforcementMode)obj);
        }

        /// <summary>Returns hashCode for enum EnforcementMode</summary>
        /// <returns>The hashCode of the value</returns>
        public override int GetHashCode()
        {
            return this._value.GetHashCode();
        }

        /// <summary>Returns string representation for EnforcementMode</summary>
        /// <returns>A string for this value.</returns>
        public override string ToString()
        {
            return this._value;
        }

        /// <summary>Implicit operator to convert string to EnforcementMode</summary>
        /// <param name="value">the value to convert to an instance of <see cref="EnforcementMode" />.</param>

        public static implicit operator EnforcementMode(string value)
        {
            return new EnforcementMode(value);
        }

        /// <summary>Implicit operator to convert EnforcementMode to string</summary>
        /// <param name="e">the value to convert to an instance of <see cref="EnforcementMode" />.</param>

        public static implicit operator string(Sample.API.Support.EnforcementMode e)
        {
            return e._value;
        }

        /// <summary>Overriding != operator for enum EnforcementMode</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are not equal to the same value</returns>
        public static bool operator !=(Sample.API.Support.EnforcementMode e1, Sample.API.Support.EnforcementMode e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>Overriding == operator for enum EnforcementMode</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public static bool operator ==(Sample.API.Support.EnforcementMode e1, Sample.API.Support.EnforcementMode e2)
        {
            return e2.Equals(e1);
        }
    }
}