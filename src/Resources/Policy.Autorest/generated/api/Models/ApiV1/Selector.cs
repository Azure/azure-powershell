// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Policy.Models.ApiV1
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Policy.Runtime.Extensions;

    /// <summary>The selector expression.</summary>
    public partial class Selector :
        Microsoft.Azure.PowerShell.Cmdlets.Policy.Models.ApiV1.ISelector,
        Microsoft.Azure.PowerShell.Cmdlets.Policy.Models.ApiV1.ISelectorInternal
    {

        /// <summary>Backing field for <see cref="In" /> property.</summary>
        private string[] _in;

        /// <summary>The list of values to filter in.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Policy.Origin(Microsoft.Azure.PowerShell.Cmdlets.Policy.PropertyOrigin.Owned)]
        public string[] In { get => this._in; set => this._in = value; }

        /// <summary>Backing field for <see cref="Kind" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Policy.Support.SelectorKind? _kind;

        /// <summary>The selector kind.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Policy.Origin(Microsoft.Azure.PowerShell.Cmdlets.Policy.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Policy.Support.SelectorKind? Kind { get => this._kind; set => this._kind = value; }

        /// <summary>Backing field for <see cref="NotIn" /> property.</summary>
        private string[] _notIn;

        /// <summary>The list of values to filter out.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Policy.Origin(Microsoft.Azure.PowerShell.Cmdlets.Policy.PropertyOrigin.Owned)]
        public string[] NotIn { get => this._notIn; set => this._notIn = value; }

        /// <summary>Creates an new <see cref="Selector" /> instance.</summary>
        public Selector()
        {

        }
    }
    /// The selector expression.
    public partial interface ISelector :
        Microsoft.Azure.PowerShell.Cmdlets.Policy.Runtime.IJsonSerializable
    {
        /// <summary>The list of values to filter in.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Policy.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of values to filter in.",
        SerializedName = @"in",
        PossibleTypes = new [] { typeof(string) })]
        string[] In { get; set; }
        /// <summary>The selector kind.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Policy.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The selector kind.",
        SerializedName = @"kind",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Policy.Support.SelectorKind) })]
        Microsoft.Azure.PowerShell.Cmdlets.Policy.Support.SelectorKind? Kind { get; set; }
        /// <summary>The list of values to filter out.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Policy.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of values to filter out.",
        SerializedName = @"notIn",
        PossibleTypes = new [] { typeof(string) })]
        string[] NotIn { get; set; }

    }
    /// The selector expression.
    internal partial interface ISelectorInternal

    {
        /// <summary>The list of values to filter in.</summary>
        string[] In { get; set; }
        /// <summary>The selector kind.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Policy.Support.SelectorKind? Kind { get; set; }
        /// <summary>The list of values to filter out.</summary>
        string[] NotIn { get; set; }

    }
}