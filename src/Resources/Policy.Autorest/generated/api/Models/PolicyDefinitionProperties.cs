// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.9.4, generator: @autorest/powershell@3.0.498)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Sample.API.Models
{
    using static Sample.API.Runtime.Extensions;

    /// <summary>The policy definition properties.</summary>
    public partial class PolicyDefinitionProperties :
        Sample.API.Models.IPolicyDefinitionProperties,
        Sample.API.Models.IPolicyDefinitionPropertiesInternal
    {

        /// <summary>Backing field for <see cref="Description" /> property.</summary>
        private string _description;

        /// <summary>The policy definition description.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public string Description { get => this._description; set => this._description = value; }

        /// <summary>Backing field for <see cref="DisplayName" /> property.</summary>
        private string _displayName;

        /// <summary>The display name of the policy definition.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public string DisplayName { get => this._displayName; set => this._displayName = value; }

        /// <summary>Backing field for <see cref="Metadata" /> property.</summary>
        private Sample.API.Models.IAny _metadata;

        /// <summary>
        /// The policy definition metadata. Metadata is an open ended object and is typically a collection of key value pairs.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public Sample.API.Models.IAny Metadata { get => (this._metadata = this._metadata ?? new Sample.API.Models.Any()); set => this._metadata = value; }

        /// <summary>Backing field for <see cref="Mode" /> property.</summary>
        private string _mode;

        /// <summary>
        /// The policy definition mode. Some examples are All, Indexed, Microsoft.KeyVault.Data.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public string Mode { get => this._mode; set => this._mode = value; }

        /// <summary>Backing field for <see cref="Parameters" /> property.</summary>
        private Sample.API.Models.IParameterDefinitions _parameters;

        /// <summary>
        /// The parameter definitions for parameters used in the policy rule. The keys are the parameter names.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public Sample.API.Models.IParameterDefinitions Parameters { get => (this._parameters = this._parameters ?? new Sample.API.Models.ParameterDefinitions()); set => this._parameters = value; }

        /// <summary>Backing field for <see cref="PolicyRule" /> property.</summary>
        private Sample.API.Models.IAny _policyRule;

        /// <summary>The policy rule.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public Sample.API.Models.IAny PolicyRule { get => (this._policyRule = this._policyRule ?? new Sample.API.Models.Any()); set => this._policyRule = value; }

        /// <summary>Backing field for <see cref="PolicyType" /> property.</summary>
        private Sample.API.Support.PolicyType? _policyType;

        /// <summary>
        /// The type of policy definition. Possible values are NotSpecified, BuiltIn, Custom, and Static.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public Sample.API.Support.PolicyType? PolicyType { get => this._policyType; set => this._policyType = value; }

        /// <summary>Creates an new <see cref="PolicyDefinitionProperties" /> instance.</summary>
        public PolicyDefinitionProperties()
        {

        }
    }
    /// The policy definition properties.
    public partial interface IPolicyDefinitionProperties :
        Sample.API.Runtime.IJsonSerializable
    {
        /// <summary>The policy definition description.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The policy definition description.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>The display name of the policy definition.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The display name of the policy definition.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>
        /// The policy definition metadata. Metadata is an open ended object and is typically a collection of key value pairs.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The policy definition metadata.  Metadata is an open ended object and is typically a collection of key value pairs.",
        SerializedName = @"metadata",
        PossibleTypes = new [] { typeof(Sample.API.Models.IAny) })]
        Sample.API.Models.IAny Metadata { get; set; }
        /// <summary>
        /// The policy definition mode. Some examples are All, Indexed, Microsoft.KeyVault.Data.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The policy definition mode. Some examples are All, Indexed, Microsoft.KeyVault.Data.",
        SerializedName = @"mode",
        PossibleTypes = new [] { typeof(string) })]
        string Mode { get; set; }
        /// <summary>
        /// The parameter definitions for parameters used in the policy rule. The keys are the parameter names.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The parameter definitions for parameters used in the policy rule. The keys are the parameter names.",
        SerializedName = @"parameters",
        PossibleTypes = new [] { typeof(Sample.API.Models.IParameterDefinitions) })]
        Sample.API.Models.IParameterDefinitions Parameters { get; set; }
        /// <summary>The policy rule.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The policy rule.",
        SerializedName = @"policyRule",
        PossibleTypes = new [] { typeof(Sample.API.Models.IAny) })]
        Sample.API.Models.IAny PolicyRule { get; set; }
        /// <summary>
        /// The type of policy definition. Possible values are NotSpecified, BuiltIn, Custom, and Static.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of policy definition. Possible values are NotSpecified, BuiltIn, Custom, and Static.",
        SerializedName = @"policyType",
        PossibleTypes = new [] { typeof(Sample.API.Support.PolicyType) })]
        Sample.API.Support.PolicyType? PolicyType { get; set; }

    }
    /// The policy definition properties.
    internal partial interface IPolicyDefinitionPropertiesInternal

    {
        /// <summary>The policy definition description.</summary>
        string Description { get; set; }
        /// <summary>The display name of the policy definition.</summary>
        string DisplayName { get; set; }
        /// <summary>
        /// The policy definition metadata. Metadata is an open ended object and is typically a collection of key value pairs.
        /// </summary>
        Sample.API.Models.IAny Metadata { get; set; }
        /// <summary>
        /// The policy definition mode. Some examples are All, Indexed, Microsoft.KeyVault.Data.
        /// </summary>
        string Mode { get; set; }
        /// <summary>
        /// The parameter definitions for parameters used in the policy rule. The keys are the parameter names.
        /// </summary>
        Sample.API.Models.IParameterDefinitions Parameters { get; set; }
        /// <summary>The policy rule.</summary>
        Sample.API.Models.IAny PolicyRule { get; set; }
        /// <summary>
        /// The type of policy definition. Possible values are NotSpecified, BuiltIn, Custom, and Static.
        /// </summary>
        Sample.API.Support.PolicyType? PolicyType { get; set; }

    }
}