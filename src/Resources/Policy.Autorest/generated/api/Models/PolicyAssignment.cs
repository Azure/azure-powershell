// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.9.4, generator: @autorest/powershell@3.0.498)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Sample.API.Models
{
    using static Sample.API.Runtime.Extensions;

    /// <summary>The policy assignment.</summary>
    public partial class PolicyAssignment :
        Sample.API.Models.IPolicyAssignment,
        Sample.API.Models.IPolicyAssignmentInternal
    {

        /// <summary>This message will be part of response in case of policy violation.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public string Description { get => ((Sample.API.Models.IPolicyAssignmentPropertiesInternal)Properties).Description; set => ((Sample.API.Models.IPolicyAssignmentPropertiesInternal)Properties).Description = value ?? null; }

        /// <summary>The display name of the policy assignment.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public string DisplayName { get => ((Sample.API.Models.IPolicyAssignmentPropertiesInternal)Properties).DisplayName; set => ((Sample.API.Models.IPolicyAssignmentPropertiesInternal)Properties).DisplayName = value ?? null; }

        /// <summary>
        /// The policy assignment enforcement mode. Possible values are Default and DoNotEnforce.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public Sample.API.Support.EnforcementMode? EnforcementMode { get => ((Sample.API.Models.IPolicyAssignmentPropertiesInternal)Properties).EnforcementMode; set => ((Sample.API.Models.IPolicyAssignmentPropertiesInternal)Properties).EnforcementMode = value ?? ((Sample.API.Support.EnforcementMode)""); }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>The ID of the policy assignment.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public string Id { get => this._id; }

        /// <summary>Backing field for <see cref="Identity" /> property.</summary>
        private Sample.API.Models.IIdentity _identity;

        /// <summary>The managed identity associated with the policy assignment.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        internal Sample.API.Models.IIdentity Identity { get => (this._identity = this._identity ?? new Sample.API.Models.Identity()); set => this._identity = value; }

        /// <summary>
        /// The principal ID of the resource identity. This property will only be provided for a system assigned identity
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public string IdentityPrincipalId { get => ((Sample.API.Models.IIdentityInternal)Identity).PrincipalId; }

        /// <summary>
        /// The tenant ID of the resource identity. This property will only be provided for a system assigned identity
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public string IdentityTenantId { get => ((Sample.API.Models.IIdentityInternal)Identity).TenantId; }

        /// <summary>
        /// The identity type. This is the only required field when adding a system or user assigned identity to a resource.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public Sample.API.Support.ResourceIdentityType? IdentityType { get => ((Sample.API.Models.IIdentityInternal)Identity).Type; set => ((Sample.API.Models.IIdentityInternal)Identity).Type = value ?? ((Sample.API.Support.ResourceIdentityType)""); }

        /// <summary>
        /// The user identity associated with the policy. The user identity dictionary key references will be ARM resource ids in
        /// the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public Sample.API.Models.IIdentityUserAssignedIdentities IdentityUserAssignedIdentities { get => ((Sample.API.Models.IIdentityInternal)Identity).UserAssignedIdentities; set => ((Sample.API.Models.IIdentityInternal)Identity).UserAssignedIdentities = value ?? null /* model class */; }

        /// <summary>Backing field for <see cref="Location" /> property.</summary>
        private string _location;

        /// <summary>
        /// The location of the policy assignment. Only required when utilizing managed identity.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public string Location { get => this._location; set => this._location = value; }

        /// <summary>
        /// The policy assignment metadata. Metadata is an open ended object and is typically a collection of key value pairs.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public Sample.API.Models.IAny Metadata { get => ((Sample.API.Models.IPolicyAssignmentPropertiesInternal)Properties).Metadata; set => ((Sample.API.Models.IPolicyAssignmentPropertiesInternal)Properties).Metadata = value ?? null /* model class */; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>The name of the policy assignment.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public string Name { get => this._name; }

        /// <summary>The messages that describe why a resource is non-compliant with the policy.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public Sample.API.Models.INonComplianceMessage[] NonComplianceMessages { get => ((Sample.API.Models.IPolicyAssignmentPropertiesInternal)Properties).NonComplianceMessages; set => ((Sample.API.Models.IPolicyAssignmentPropertiesInternal)Properties).NonComplianceMessages = value ?? null /* arrayOf */; }

        /// <summary>The policy's excluded scopes.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public string[] NotScopes { get => ((Sample.API.Models.IPolicyAssignmentPropertiesInternal)Properties).NotScopes; set => ((Sample.API.Models.IPolicyAssignmentPropertiesInternal)Properties).NotScopes = value ?? null /* arrayOf */; }

        /// <summary>The policy property value override.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public Sample.API.Models.IOverride[] Overrides { get => ((Sample.API.Models.IPolicyAssignmentPropertiesInternal)Properties).Overrides; set => ((Sample.API.Models.IPolicyAssignmentPropertiesInternal)Properties).Overrides = value ?? null /* arrayOf */; }

        /// <summary>
        /// The parameter values for the assigned policy rule. The keys are the parameter names.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public Sample.API.Models.IParameterValues Parameters { get => ((Sample.API.Models.IPolicyAssignmentPropertiesInternal)Properties).Parameters; set => ((Sample.API.Models.IPolicyAssignmentPropertiesInternal)Properties).Parameters = value ?? null /* model class */; }

        /// <summary>The ID of the policy definition or policy set definition being assigned.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public string PolicyDefinitionId { get => ((Sample.API.Models.IPolicyAssignmentPropertiesInternal)Properties).PolicyDefinitionId; set => ((Sample.API.Models.IPolicyAssignmentPropertiesInternal)Properties).PolicyDefinitionId = value ?? null; }

        /// <summary>Backing field for <see cref="Properties" /> property.</summary>
        private Sample.API.Models.IPolicyAssignmentProperties _properties;

        /// <summary>Properties for the policy assignment.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        internal Sample.API.Models.IPolicyAssignmentProperties Properties { get => (this._properties = this._properties ?? new Sample.API.Models.PolicyAssignmentProperties()); set => this._properties = value; }

        /// <summary>The resource selector list to filter policies by resource properties.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public Sample.API.Models.IResourceSelector[] ResourceSelectors { get => ((Sample.API.Models.IPolicyAssignmentPropertiesInternal)Properties).ResourceSelectors; set => ((Sample.API.Models.IPolicyAssignmentPropertiesInternal)Properties).ResourceSelectors = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for Id</summary>
        string Sample.API.Models.IPolicyAssignmentInternal.Id { get => this._id; set { {_id = value;} } }

        /// <summary>Internal Acessors for Identity</summary>
        Sample.API.Models.IIdentity Sample.API.Models.IPolicyAssignmentInternal.Identity { get => (this._identity = this._identity ?? new Sample.API.Models.Identity()); set { {_identity = value;} } }

        /// <summary>Internal Acessors for IdentityPrincipalId</summary>
        string Sample.API.Models.IPolicyAssignmentInternal.IdentityPrincipalId { get => ((Sample.API.Models.IIdentityInternal)Identity).PrincipalId; set => ((Sample.API.Models.IIdentityInternal)Identity).PrincipalId = value; }

        /// <summary>Internal Acessors for IdentityTenantId</summary>
        string Sample.API.Models.IPolicyAssignmentInternal.IdentityTenantId { get => ((Sample.API.Models.IIdentityInternal)Identity).TenantId; set => ((Sample.API.Models.IIdentityInternal)Identity).TenantId = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Sample.API.Models.IPolicyAssignmentInternal.Name { get => this._name; set { {_name = value;} } }

        /// <summary>Internal Acessors for Properties</summary>
        Sample.API.Models.IPolicyAssignmentProperties Sample.API.Models.IPolicyAssignmentInternal.Properties { get => (this._properties = this._properties ?? new Sample.API.Models.PolicyAssignmentProperties()); set { {_properties = value;} } }

        /// <summary>Internal Acessors for Scope</summary>
        string Sample.API.Models.IPolicyAssignmentInternal.Scope { get => ((Sample.API.Models.IPolicyAssignmentPropertiesInternal)Properties).Scope; set => ((Sample.API.Models.IPolicyAssignmentPropertiesInternal)Properties).Scope = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Sample.API.Models.ISystemData Sample.API.Models.IPolicyAssignmentInternal.SystemData { get => (this._systemData = this._systemData ?? new Sample.API.Models.SystemData()); set { {_systemData = value;} } }

        /// <summary>Internal Acessors for Type</summary>
        string Sample.API.Models.IPolicyAssignmentInternal.Type { get => this._type; set { {_type = value;} } }

        /// <summary>The scope for the policy assignment.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public string Scope { get => ((Sample.API.Models.IPolicyAssignmentPropertiesInternal)Properties).Scope; }

        /// <summary>Backing field for <see cref="SystemData" /> property.</summary>
        private Sample.API.Models.ISystemData _systemData;

        /// <summary>The system metadata relating to this resource.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        internal Sample.API.Models.ISystemData SystemData { get => (this._systemData = this._systemData ?? new Sample.API.Models.SystemData()); }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Sample.API.Models.ISystemDataInternal)SystemData).CreatedAt; set => ((Sample.API.Models.ISystemDataInternal)SystemData).CreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public string SystemDataCreatedBy { get => ((Sample.API.Models.ISystemDataInternal)SystemData).CreatedBy; set => ((Sample.API.Models.ISystemDataInternal)SystemData).CreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public Sample.API.Support.CreatedByType? SystemDataCreatedByType { get => ((Sample.API.Models.ISystemDataInternal)SystemData).CreatedByType; set => ((Sample.API.Models.ISystemDataInternal)SystemData).CreatedByType = value ?? ((Sample.API.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Sample.API.Models.ISystemDataInternal)SystemData).LastModifiedAt; set => ((Sample.API.Models.ISystemDataInternal)SystemData).LastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public string SystemDataLastModifiedBy { get => ((Sample.API.Models.ISystemDataInternal)SystemData).LastModifiedBy; set => ((Sample.API.Models.ISystemDataInternal)SystemData).LastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public Sample.API.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Sample.API.Models.ISystemDataInternal)SystemData).LastModifiedByType; set => ((Sample.API.Models.ISystemDataInternal)SystemData).LastModifiedByType = value ?? ((Sample.API.Support.CreatedByType)""); }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>The type of the policy assignment.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public string Type { get => this._type; }

        /// <summary>Creates an new <see cref="PolicyAssignment" /> instance.</summary>
        public PolicyAssignment()
        {

        }
    }
    /// The policy assignment.
    public partial interface IPolicyAssignment :
        Sample.API.Runtime.IJsonSerializable
    {
        /// <summary>This message will be part of response in case of policy violation.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This message will be part of response in case of policy violation.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>The display name of the policy assignment.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The display name of the policy assignment.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>
        /// The policy assignment enforcement mode. Possible values are Default and DoNotEnforce.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The policy assignment enforcement mode. Possible values are Default and DoNotEnforce.",
        SerializedName = @"enforcementMode",
        PossibleTypes = new [] { typeof(Sample.API.Support.EnforcementMode) })]
        Sample.API.Support.EnforcementMode? EnforcementMode { get; set; }
        /// <summary>The ID of the policy assignment.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The ID of the policy assignment.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get;  }
        /// <summary>
        /// The principal ID of the resource identity. This property will only be provided for a system assigned identity
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The principal ID of the resource identity.  This property will only be provided for a system assigned identity",
        SerializedName = @"principalId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityPrincipalId { get;  }
        /// <summary>
        /// The tenant ID of the resource identity. This property will only be provided for a system assigned identity
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The tenant ID of the resource identity.  This property will only be provided for a system assigned identity",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityTenantId { get;  }
        /// <summary>
        /// The identity type. This is the only required field when adding a system or user assigned identity to a resource.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity type. This is the only required field when adding a system or user assigned identity to a resource.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Sample.API.Support.ResourceIdentityType) })]
        Sample.API.Support.ResourceIdentityType? IdentityType { get; set; }
        /// <summary>
        /// The user identity associated with the policy. The user identity dictionary key references will be ARM resource ids in
        /// the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The user identity associated with the policy. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
        SerializedName = @"userAssignedIdentities",
        PossibleTypes = new [] { typeof(Sample.API.Models.IIdentityUserAssignedIdentities) })]
        Sample.API.Models.IIdentityUserAssignedIdentities IdentityUserAssignedIdentities { get; set; }
        /// <summary>
        /// The location of the policy assignment. Only required when utilizing managed identity.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The location of the policy assignment. Only required when utilizing managed identity.",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string Location { get; set; }
        /// <summary>
        /// The policy assignment metadata. Metadata is an open ended object and is typically a collection of key value pairs.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The policy assignment metadata. Metadata is an open ended object and is typically a collection of key value pairs.",
        SerializedName = @"metadata",
        PossibleTypes = new [] { typeof(Sample.API.Models.IAny) })]
        Sample.API.Models.IAny Metadata { get; set; }
        /// <summary>The name of the policy assignment.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of the policy assignment.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get;  }
        /// <summary>The messages that describe why a resource is non-compliant with the policy.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The messages that describe why a resource is non-compliant with the policy.",
        SerializedName = @"nonComplianceMessages",
        PossibleTypes = new [] { typeof(Sample.API.Models.INonComplianceMessage) })]
        Sample.API.Models.INonComplianceMessage[] NonComplianceMessages { get; set; }
        /// <summary>The policy's excluded scopes.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The policy's excluded scopes.",
        SerializedName = @"notScopes",
        PossibleTypes = new [] { typeof(string) })]
        string[] NotScopes { get; set; }
        /// <summary>The policy property value override.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The policy property value override.",
        SerializedName = @"overrides",
        PossibleTypes = new [] { typeof(Sample.API.Models.IOverride) })]
        Sample.API.Models.IOverride[] Overrides { get; set; }
        /// <summary>
        /// The parameter values for the assigned policy rule. The keys are the parameter names.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The parameter values for the assigned policy rule. The keys are the parameter names.",
        SerializedName = @"parameters",
        PossibleTypes = new [] { typeof(Sample.API.Models.IParameterValues) })]
        Sample.API.Models.IParameterValues Parameters { get; set; }
        /// <summary>The ID of the policy definition or policy set definition being assigned.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ID of the policy definition or policy set definition being assigned.",
        SerializedName = @"policyDefinitionId",
        PossibleTypes = new [] { typeof(string) })]
        string PolicyDefinitionId { get; set; }
        /// <summary>The resource selector list to filter policies by resource properties.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource selector list to filter policies by resource properties.",
        SerializedName = @"resourceSelectors",
        PossibleTypes = new [] { typeof(Sample.API.Models.IResourceSelector) })]
        Sample.API.Models.IResourceSelector[] ResourceSelectors { get; set; }
        /// <summary>The scope for the policy assignment.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The scope for the policy assignment.",
        SerializedName = @"scope",
        PossibleTypes = new [] { typeof(string) })]
        string Scope { get;  }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp of resource creation (UTC).",
        SerializedName = @"createdAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity that created the resource.",
        SerializedName = @"createdBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity that created the resource.",
        SerializedName = @"createdByType",
        PossibleTypes = new [] { typeof(Sample.API.Support.CreatedByType) })]
        Sample.API.Support.CreatedByType? SystemDataCreatedByType { get; set; }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp of resource last modification (UTC)",
        SerializedName = @"lastModifiedAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity that last modified the resource.",
        SerializedName = @"lastModifiedBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity that last modified the resource.",
        SerializedName = @"lastModifiedByType",
        PossibleTypes = new [] { typeof(Sample.API.Support.CreatedByType) })]
        Sample.API.Support.CreatedByType? SystemDataLastModifiedByType { get; set; }
        /// <summary>The type of the policy assignment.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The type of the policy assignment.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get;  }

    }
    /// The policy assignment.
    internal partial interface IPolicyAssignmentInternal

    {
        /// <summary>This message will be part of response in case of policy violation.</summary>
        string Description { get; set; }
        /// <summary>The display name of the policy assignment.</summary>
        string DisplayName { get; set; }
        /// <summary>
        /// The policy assignment enforcement mode. Possible values are Default and DoNotEnforce.
        /// </summary>
        Sample.API.Support.EnforcementMode? EnforcementMode { get; set; }
        /// <summary>The ID of the policy assignment.</summary>
        string Id { get; set; }
        /// <summary>The managed identity associated with the policy assignment.</summary>
        Sample.API.Models.IIdentity Identity { get; set; }
        /// <summary>
        /// The principal ID of the resource identity. This property will only be provided for a system assigned identity
        /// </summary>
        string IdentityPrincipalId { get; set; }
        /// <summary>
        /// The tenant ID of the resource identity. This property will only be provided for a system assigned identity
        /// </summary>
        string IdentityTenantId { get; set; }
        /// <summary>
        /// The identity type. This is the only required field when adding a system or user assigned identity to a resource.
        /// </summary>
        Sample.API.Support.ResourceIdentityType? IdentityType { get; set; }
        /// <summary>
        /// The user identity associated with the policy. The user identity dictionary key references will be ARM resource ids in
        /// the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
        /// </summary>
        Sample.API.Models.IIdentityUserAssignedIdentities IdentityUserAssignedIdentities { get; set; }
        /// <summary>
        /// The location of the policy assignment. Only required when utilizing managed identity.
        /// </summary>
        string Location { get; set; }
        /// <summary>
        /// The policy assignment metadata. Metadata is an open ended object and is typically a collection of key value pairs.
        /// </summary>
        Sample.API.Models.IAny Metadata { get; set; }
        /// <summary>The name of the policy assignment.</summary>
        string Name { get; set; }
        /// <summary>The messages that describe why a resource is non-compliant with the policy.</summary>
        Sample.API.Models.INonComplianceMessage[] NonComplianceMessages { get; set; }
        /// <summary>The policy's excluded scopes.</summary>
        string[] NotScopes { get; set; }
        /// <summary>The policy property value override.</summary>
        Sample.API.Models.IOverride[] Overrides { get; set; }
        /// <summary>
        /// The parameter values for the assigned policy rule. The keys are the parameter names.
        /// </summary>
        Sample.API.Models.IParameterValues Parameters { get; set; }
        /// <summary>The ID of the policy definition or policy set definition being assigned.</summary>
        string PolicyDefinitionId { get; set; }
        /// <summary>Properties for the policy assignment.</summary>
        Sample.API.Models.IPolicyAssignmentProperties Properties { get; set; }
        /// <summary>The resource selector list to filter policies by resource properties.</summary>
        Sample.API.Models.IResourceSelector[] ResourceSelectors { get; set; }
        /// <summary>The scope for the policy assignment.</summary>
        string Scope { get; set; }
        /// <summary>The system metadata relating to this resource.</summary>
        Sample.API.Models.ISystemData SystemData { get; set; }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        global::System.DateTime? SystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        string SystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        Sample.API.Support.CreatedByType? SystemDataCreatedByType { get; set; }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        global::System.DateTime? SystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        string SystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        Sample.API.Support.CreatedByType? SystemDataLastModifiedByType { get; set; }
        /// <summary>The type of the policy assignment.</summary>
        string Type { get; set; }

    }
}