// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Extensions;

    /// <summary>objectIdentity</summary>
    public partial class MicrosoftGraphObjectIdentity :
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphObjectIdentity,
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphObjectIdentityInternal
    {

        /// <summary>Backing field for <see cref="Issuer" /> property.</summary>
        private string _issuer;

        /// <summary>
        /// Specifies the issuer of the identity, for example facebook.com.For local accounts (where signInType is not federated),
        /// this property is the local B2C tenant default domain name, for example contoso.onmicrosoft.com.For external users from
        /// other Azure AD organization, this will be the domain of the federated organization, for example contoso.com.Supports $filter.
        /// 512 character limit.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string Issuer { get => this._issuer; set => this._issuer = value; }

        /// <summary>Backing field for <see cref="IssuerAssignedId" /> property.</summary>
        private string _issuerAssignedId;

        /// <summary>
        /// Specifies the unique identifier assigned to the user by the issuer. The combination of issuer and issuerAssignedId must
        /// be unique within the organization. Represents the sign-in name for the user, when signInType is set to emailAddress or
        /// userName (also known as local accounts).When signInType is set to: emailAddress, (or a custom string that starts with
        /// emailAddress like emailAddress1) issuerAssignedId must be a valid email addressuserName, issuerAssignedId must be a valid
        /// local part of an email addressSupports $filter. 100 character limit.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string IssuerAssignedId { get => this._issuerAssignedId; set => this._issuerAssignedId = value; }

        /// <summary>Backing field for <see cref="SignInType" /> property.</summary>
        private string _signInType;

        /// <summary>
        /// Specifies the user sign-in types in your directory, such as emailAddress, userName or federated. Here, federated represents
        /// a unique identifier for a user from an issuer, that can be in any format chosen by the issuer. Additional validation is
        /// enforced on issuerAssignedId when the sign-in type is set to emailAddress or userName. This property can also be set to
        /// any custom string.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string SignInType { get => this._signInType; set => this._signInType = value; }

        /// <summary>Creates an new <see cref="MicrosoftGraphObjectIdentity" /> instance.</summary>
        public MicrosoftGraphObjectIdentity()
        {

        }
    }
    /// objectIdentity
    public partial interface IMicrosoftGraphObjectIdentity :
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IAssociativeArray<global::System.Object>
    {
        /// <summary>
        /// Specifies the issuer of the identity, for example facebook.com.For local accounts (where signInType is not federated),
        /// this property is the local B2C tenant default domain name, for example contoso.onmicrosoft.com.For external users from
        /// other Azure AD organization, this will be the domain of the federated organization, for example contoso.com.Supports $filter.
        /// 512 character limit.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the issuer of the identity, for example facebook.com.For local accounts (where signInType is not federated), this property is the local B2C tenant default domain name, for example contoso.onmicrosoft.com.For external users from other Azure AD organization, this will be the domain of the federated organization, for example contoso.com.Supports $filter. 512 character limit.",
        SerializedName = @"issuer",
        PossibleTypes = new [] { typeof(string) })]
        string Issuer { get; set; }
        /// <summary>
        /// Specifies the unique identifier assigned to the user by the issuer. The combination of issuer and issuerAssignedId must
        /// be unique within the organization. Represents the sign-in name for the user, when signInType is set to emailAddress or
        /// userName (also known as local accounts).When signInType is set to: emailAddress, (or a custom string that starts with
        /// emailAddress like emailAddress1) issuerAssignedId must be a valid email addressuserName, issuerAssignedId must be a valid
        /// local part of an email addressSupports $filter. 100 character limit.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the unique identifier assigned to the user by the issuer. The combination of issuer and issuerAssignedId must be unique within the organization. Represents the sign-in name for the user, when signInType is set to emailAddress or userName (also known as local accounts).When signInType is set to: emailAddress, (or a custom string that starts with emailAddress like emailAddress1) issuerAssignedId must be a valid email addressuserName, issuerAssignedId must be a valid local part of an email addressSupports $filter. 100 character limit.",
        SerializedName = @"issuerAssignedId",
        PossibleTypes = new [] { typeof(string) })]
        string IssuerAssignedId { get; set; }
        /// <summary>
        /// Specifies the user sign-in types in your directory, such as emailAddress, userName or federated. Here, federated represents
        /// a unique identifier for a user from an issuer, that can be in any format chosen by the issuer. Additional validation is
        /// enforced on issuerAssignedId when the sign-in type is set to emailAddress or userName. This property can also be set to
        /// any custom string.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the user sign-in types in your directory, such as emailAddress, userName or federated. Here, federated represents a unique identifier for a user from an issuer, that can be in any format chosen by the issuer. Additional validation is enforced on issuerAssignedId when the sign-in type is set to emailAddress or userName. This property can also be set to any custom string.",
        SerializedName = @"signInType",
        PossibleTypes = new [] { typeof(string) })]
        string SignInType { get; set; }

    }
    /// objectIdentity
    internal partial interface IMicrosoftGraphObjectIdentityInternal

    {
        /// <summary>
        /// Specifies the issuer of the identity, for example facebook.com.For local accounts (where signInType is not federated),
        /// this property is the local B2C tenant default domain name, for example contoso.onmicrosoft.com.For external users from
        /// other Azure AD organization, this will be the domain of the federated organization, for example contoso.com.Supports $filter.
        /// 512 character limit.
        /// </summary>
        string Issuer { get; set; }
        /// <summary>
        /// Specifies the unique identifier assigned to the user by the issuer. The combination of issuer and issuerAssignedId must
        /// be unique within the organization. Represents the sign-in name for the user, when signInType is set to emailAddress or
        /// userName (also known as local accounts).When signInType is set to: emailAddress, (or a custom string that starts with
        /// emailAddress like emailAddress1) issuerAssignedId must be a valid email addressuserName, issuerAssignedId must be a valid
        /// local part of an email addressSupports $filter. 100 character limit.
        /// </summary>
        string IssuerAssignedId { get; set; }
        /// <summary>
        /// Specifies the user sign-in types in your directory, such as emailAddress, userName or federated. Here, federated represents
        /// a unique identifier for a user from an issuer, that can be in any format chosen by the issuer. Additional validation is
        /// enforced on issuerAssignedId when the sign-in type is set to emailAddress or userName. This property can also be set to
        /// any custom string.
        /// </summary>
        string SignInType { get; set; }

    }
}