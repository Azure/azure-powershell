// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Extensions;

    /// <summary>file</summary>
    public partial class MicrosoftGraphFile :
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphFile,
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphFileInternal
    {

        /// <summary>Backing field for <see cref="Hash" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphHashes _hash;

        /// <summary>hashes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphHashes Hash { get => (this._hash = this._hash ?? new Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.MicrosoftGraphHashes()); set => this._hash = value; }

        /// <summary>Backing field for <see cref="MimeType" /> property.</summary>
        private string _mimeType;

        /// <summary>
        /// The MIME type for the file. This is determined by logic on the server and might not be the value provided when the file
        /// was uploaded. Read-only.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string MimeType { get => this._mimeType; set => this._mimeType = value; }

        /// <summary>Backing field for <see cref="ProcessingMetadata" /> property.</summary>
        private bool? _processingMetadata;

        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public bool? ProcessingMetadata { get => this._processingMetadata; set => this._processingMetadata = value; }

        /// <summary>Creates an new <see cref="MicrosoftGraphFile" /> instance.</summary>
        public MicrosoftGraphFile()
        {

        }
    }
    /// file
    public partial interface IMicrosoftGraphFile :
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IAssociativeArray<global::System.Object>
    {
        /// <summary>hashes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"hashes",
        SerializedName = @"hashes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphHashes) })]
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphHashes Hash { get; set; }
        /// <summary>
        /// The MIME type for the file. This is determined by logic on the server and might not be the value provided when the file
        /// was uploaded. Read-only.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The MIME type for the file. This is determined by logic on the server and might not be the value provided when the file was uploaded. Read-only.",
        SerializedName = @"mimeType",
        PossibleTypes = new [] { typeof(string) })]
        string MimeType { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"processingMetadata",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ProcessingMetadata { get; set; }

    }
    /// file
    internal partial interface IMicrosoftGraphFileInternal

    {
        /// <summary>hashes</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphHashes Hash { get; set; }
        /// <summary>
        /// The MIME type for the file. This is determined by logic on the server and might not be the value provided when the file
        /// was uploaded. Read-only.
        /// </summary>
        string MimeType { get; set; }

        bool? ProcessingMetadata { get; set; }

    }
}