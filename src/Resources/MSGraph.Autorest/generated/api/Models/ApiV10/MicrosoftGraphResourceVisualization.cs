// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Extensions;

    /// <summary>resourceVisualization</summary>
    public partial class MicrosoftGraphResourceVisualization :
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphResourceVisualization,
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphResourceVisualizationInternal
    {

        /// <summary>Backing field for <see cref="ContainerDisplayName" /> property.</summary>
        private string _containerDisplayName;

        /// <summary>
        /// A string describing where the item is stored. For example, the name of a SharePoint site or the user name identifying
        /// the owner of the OneDrive storing the item.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string ContainerDisplayName { get => this._containerDisplayName; set => this._containerDisplayName = value; }

        /// <summary>Backing field for <see cref="ContainerType" /> property.</summary>
        private string _containerType;

        /// <summary>
        /// Can be used for filtering by the type of container in which the file is stored. Such as Site or OneDriveBusiness.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string ContainerType { get => this._containerType; set => this._containerType = value; }

        /// <summary>Backing field for <see cref="ContainerWebUrl" /> property.</summary>
        private string _containerWebUrl;

        /// <summary>A path leading to the folder in which the item is stored.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string ContainerWebUrl { get => this._containerWebUrl; set => this._containerWebUrl = value; }

        /// <summary>Backing field for <see cref="MediaType" /> property.</summary>
        private string _mediaType;

        /// <summary>
        /// The item's media type. Can be used for filtering for a specific type of file based on supported IANA Media Mime Types.
        /// Note that not all Media Mime Types are supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string MediaType { get => this._mediaType; set => this._mediaType = value; }

        /// <summary>Backing field for <see cref="PreviewImageUrl" /> property.</summary>
        private string _previewImageUrl;

        /// <summary>A URL leading to the preview image for the item.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string PreviewImageUrl { get => this._previewImageUrl; set => this._previewImageUrl = value; }

        /// <summary>Backing field for <see cref="PreviewText" /> property.</summary>
        private string _previewText;

        /// <summary>A preview text for the item.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string PreviewText { get => this._previewText; set => this._previewText = value; }

        /// <summary>Backing field for <see cref="Title" /> property.</summary>
        private string _title;

        /// <summary>The item's title text.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string Title { get => this._title; set => this._title = value; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>
        /// The item's media type. Can be used for filtering for a specific file based on a specific type. See below for supported
        /// types.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string Type { get => this._type; set => this._type = value; }

        /// <summary>Creates an new <see cref="MicrosoftGraphResourceVisualization" /> instance.</summary>
        public MicrosoftGraphResourceVisualization()
        {

        }
    }
    /// resourceVisualization
    public partial interface IMicrosoftGraphResourceVisualization :
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IAssociativeArray<global::System.Object>
    {
        /// <summary>
        /// A string describing where the item is stored. For example, the name of a SharePoint site or the user name identifying
        /// the owner of the OneDrive storing the item.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A string describing where the item is stored. For example, the name of a SharePoint site or the user name identifying the owner of the OneDrive storing the item.",
        SerializedName = @"containerDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string ContainerDisplayName { get; set; }
        /// <summary>
        /// Can be used for filtering by the type of container in which the file is stored. Such as Site or OneDriveBusiness.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Can be used for filtering by the type of container in which the file is stored. Such as Site or OneDriveBusiness.",
        SerializedName = @"containerType",
        PossibleTypes = new [] { typeof(string) })]
        string ContainerType { get; set; }
        /// <summary>A path leading to the folder in which the item is stored.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A path leading to the folder in which the item is stored.",
        SerializedName = @"containerWebUrl",
        PossibleTypes = new [] { typeof(string) })]
        string ContainerWebUrl { get; set; }
        /// <summary>
        /// The item's media type. Can be used for filtering for a specific type of file based on supported IANA Media Mime Types.
        /// Note that not all Media Mime Types are supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The item's media type. Can be used for filtering for a specific type of file based on supported IANA Media Mime Types. Note that not all Media Mime Types are supported.",
        SerializedName = @"mediaType",
        PossibleTypes = new [] { typeof(string) })]
        string MediaType { get; set; }
        /// <summary>A URL leading to the preview image for the item.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A URL leading to the preview image for the item.",
        SerializedName = @"previewImageUrl",
        PossibleTypes = new [] { typeof(string) })]
        string PreviewImageUrl { get; set; }
        /// <summary>A preview text for the item.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A preview text for the item.",
        SerializedName = @"previewText",
        PossibleTypes = new [] { typeof(string) })]
        string PreviewText { get; set; }
        /// <summary>The item's title text.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The item's title text.",
        SerializedName = @"title",
        PossibleTypes = new [] { typeof(string) })]
        string Title { get; set; }
        /// <summary>
        /// The item's media type. Can be used for filtering for a specific file based on a specific type. See below for supported
        /// types.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The item's media type. Can be used for filtering for a specific file based on a specific type. See below for supported types.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get; set; }

    }
    /// resourceVisualization
    internal partial interface IMicrosoftGraphResourceVisualizationInternal

    {
        /// <summary>
        /// A string describing where the item is stored. For example, the name of a SharePoint site or the user name identifying
        /// the owner of the OneDrive storing the item.
        /// </summary>
        string ContainerDisplayName { get; set; }
        /// <summary>
        /// Can be used for filtering by the type of container in which the file is stored. Such as Site or OneDriveBusiness.
        /// </summary>
        string ContainerType { get; set; }
        /// <summary>A path leading to the folder in which the item is stored.</summary>
        string ContainerWebUrl { get; set; }
        /// <summary>
        /// The item's media type. Can be used for filtering for a specific type of file based on supported IANA Media Mime Types.
        /// Note that not all Media Mime Types are supported.
        /// </summary>
        string MediaType { get; set; }
        /// <summary>A URL leading to the preview image for the item.</summary>
        string PreviewImageUrl { get; set; }
        /// <summary>A preview text for the item.</summary>
        string PreviewText { get; set; }
        /// <summary>The item's title text.</summary>
        string Title { get; set; }
        /// <summary>
        /// The item's media type. Can be used for filtering for a specific file based on a specific type. See below for supported
        /// types.
        /// </summary>
        string Type { get; set; }

    }
}