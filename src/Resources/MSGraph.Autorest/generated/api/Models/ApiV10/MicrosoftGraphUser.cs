// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Extensions;

    /// <summary>Represents an Azure Active Directory user object.</summary>
    public partial class MicrosoftGraphUser :
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphUser,
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphUserInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphDirectoryObject"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphDirectoryObject __microsoftGraphDirectoryObject = new Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.MicrosoftGraphDirectoryObject();

        /// <summary>Backing field for <see cref="AccountEnabled" /> property.</summary>
        private bool? _accountEnabled;

        /// <summary>
        /// true if the account is enabled; otherwise, false. This property is required when a user is created. Supports $filter (eq,
        /// ne, NOT, and in).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public bool? AccountEnabled { get => this._accountEnabled; set => this._accountEnabled = value; }

        /// <summary>Backing field for <see cref="AgeGroup" /> property.</summary>
        private string _ageGroup;

        /// <summary>
        /// Sets the age group of the user. Allowed values: null, minor, notAdult and adult. Refer to the legal age group property
        /// definitions for further information. Supports $filter (eq, ne, NOT, and in).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public string AgeGroup { get => this._ageGroup; set => this._ageGroup = value; }

        /// <summary>Backing field for <see cref="ApproximateLastSignInDateTime" /> property.</summary>
        private global::System.DateTime? _approximateLastSignInDateTime;

        /// <summary>
        /// The timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example,
        /// midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only. Supports $filter (eq, ne, not, ge, le, and eq on null
        /// values) and $orderBy.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public global::System.DateTime? ApproximateLastSignInDateTime { get => this._approximateLastSignInDateTime; set => this._approximateLastSignInDateTime = value; }

        /// <summary>Backing field for <see cref="BusinessPhone" /> property.</summary>
        private string[] _businessPhone;

        /// <summary>
        /// The telephone numbers for the user. Only one number can be set for this property. Read-only for users synced from on-premises
        /// directory. Supports $filter (eq and NOT).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public string[] BusinessPhone { get => this._businessPhone; }

        /// <summary>Backing field for <see cref="City" /> property.</summary>
        private string _city;

        /// <summary>
        /// The city in which the user is located. Maximum length is 128 characters. Supports $filter (eq, ne, NOT, ge, le, in, startsWith).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public string City { get => this._city; set => this._city = value; }

        /// <summary>Backing field for <see cref="CompanyName" /> property.</summary>
        private string _companyName;

        /// <summary>
        /// The company name which the user is associated. This property can be useful for describing the company that an external
        /// user comes from. The maximum length of the company name is 64 characters.Supports $filter (eq, ne, NOT, ge, le, in, startsWith).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public string CompanyName { get => this._companyName; set => this._companyName = value; }

        /// <summary>Backing field for <see cref="ComplianceExpirationDateTime" /> property.</summary>
        private global::System.DateTime? _complianceExpirationDateTime;

        /// <summary>
        /// The timestamp when the device is no longer deemed compliant. The timestamp type represents date and time information using
        /// ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public global::System.DateTime? ComplianceExpirationDateTime { get => this._complianceExpirationDateTime; set => this._complianceExpirationDateTime = value; }

        /// <summary>Backing field for <see cref="ConsentProvidedForMinor" /> property.</summary>
        private string _consentProvidedForMinor;

        /// <summary>
        /// Sets whether consent has been obtained for minors. Allowed values: null, granted, denied and notRequired. Refer to the
        /// legal age group property definitions for further information. Supports $filter (eq, ne, NOT, and in).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public string ConsentProvidedForMinor { get => this._consentProvidedForMinor; set => this._consentProvidedForMinor = value; }

        /// <summary>Backing field for <see cref="Country" /> property.</summary>
        private string _country;

        /// <summary>
        /// The country/region in which the user is located; for example, US or UK. Maximum length is 128 characters. Supports $filter
        /// (eq, ne, NOT, ge, le, in, startsWith).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public string Country { get => this._country; set => this._country = value; }

        /// <summary>Backing field for <see cref="CreatedDateTime" /> property.</summary>
        private global::System.DateTime? _createdDateTime;

        /// <summary>
        /// The date and time the user was created. The value cannot be modified and is automatically populated when the entity is
        /// created. The DateTimeOffset type represents date and time information using ISO 8601 format and is always in UTC time.
        /// Property is nullable. A null value indicates that an accurate creation time couldn't be determined for the user. Read-only.
        /// Supports $filter (eq, ne, NOT , ge, le, and in operators).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public global::System.DateTime? CreatedDateTime { get => this._createdDateTime; }

        /// <summary>Backing field for <see cref="CreationType" /> property.</summary>
        private string _creationType;

        /// <summary>
        /// Indicates whether the user account was created as a regular school or work account (null), an external account (Invitation),
        /// a local account for an Azure Active Directory B2C tenant (LocalAccount) or self-service sign-up using email verification
        /// (EmailVerified). Read-only. Supports $filter (eq, ne, NOT, and in).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public string CreationType { get => this._creationType; }

        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public global::System.DateTime? DeletedDateTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphDirectoryObjectInternal)__microsoftGraphDirectoryObject).DeletedDateTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphDirectoryObjectInternal)__microsoftGraphDirectoryObject).DeletedDateTime = value ?? default(global::System.DateTime); }

        /// <summary>Backing field for <see cref="Department" /> property.</summary>
        private string _department;

        /// <summary>
        /// The name for the department in which the user works. Maximum length is 64 characters.Supports $filter (eq, ne, NOT , ge,
        /// le, and in operators).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public string Department { get => this._department; set => this._department = value; }

        /// <summary>Backing field for <see cref="DeviceVersion" /> property.</summary>
        private int? _deviceVersion;

        /// <summary>For internal use only.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public int? DeviceVersion { get => this._deviceVersion; set => this._deviceVersion = value; }

        /// <summary>The name displayed in directory</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.FormatTable(Index = 0)]
        public string DisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphDirectoryObjectInternal)__microsoftGraphDirectoryObject).DisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphDirectoryObjectInternal)__microsoftGraphDirectoryObject).DisplayName = value ?? null; }

        /// <summary>Backing field for <see cref="EmployeeHireDate" /> property.</summary>
        private global::System.DateTime? _employeeHireDate;

        /// <summary>
        /// The date and time when the user was hired or will start work in case of a future hire. Supports $filter (eq, ne, NOT ,
        /// ge, le, in).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public global::System.DateTime? EmployeeHireDate { get => this._employeeHireDate; set => this._employeeHireDate = value; }

        /// <summary>Backing field for <see cref="EmployeeId" /> property.</summary>
        private string _employeeId;

        /// <summary>
        /// The employee identifier assigned to the user by the organization. Supports $filter (eq, ne, NOT , ge, le, in, startsWith).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public string EmployeeId { get => this._employeeId; set => this._employeeId = value; }

        /// <summary>Backing field for <see cref="EmployeeType" /> property.</summary>
        private string _employeeType;

        /// <summary>
        /// Captures enterprise worker type. For example, Employee, Contractor, Consultant, or Vendor. Supports $filter (eq, ne, NOT
        /// , ge, le, in, startsWith).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public string EmployeeType { get => this._employeeType; set => this._employeeType = value; }

        /// <summary>Backing field for <see cref="ExternalUserState" /> property.</summary>
        private string _externalUserState;

        /// <summary>
        /// For an external user invited to the tenant using the invitation API, this property represents the invited user's invitation
        /// status. For invited users, the state can be PendingAcceptance or Accepted, or null for all other users. Supports $filter
        /// (eq, ne, NOT , in).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public string ExternalUserState { get => this._externalUserState; set => this._externalUserState = value; }

        /// <summary>Backing field for <see cref="ExternalUserStateChangeDateTime" /> property.</summary>
        private global::System.DateTime? _externalUserStateChangeDateTime;

        /// <summary>
        /// Shows the timestamp for the latest change to the externalUserState property. Supports $filter (eq, ne, NOT , in).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public global::System.DateTime? ExternalUserStateChangeDateTime { get => this._externalUserStateChangeDateTime; set => this._externalUserStateChangeDateTime = value; }

        /// <summary>Backing field for <see cref="FaxNumber" /> property.</summary>
        private string _faxNumber;

        /// <summary>
        /// The fax number of the user. Supports $filter (eq, ne, NOT , ge, le, in, startsWith).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public string FaxNumber { get => this._faxNumber; set => this._faxNumber = value; }

        /// <summary>Backing field for <see cref="GivenName" /> property.</summary>
        private string _givenName;

        /// <summary>
        /// The given name (first name) of the user. Maximum length is 64 characters. Supports $filter (eq, ne, NOT , ge, le, in,
        /// startsWith).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public string GivenName { get => this._givenName; set => this._givenName = value; }

        /// <summary>Read-only.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.FormatTable(Index = 1)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphEntityInternal)__microsoftGraphDirectoryObject).Id; }

        /// <summary>Backing field for <see cref="Identity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphObjectIdentity[] _identity;

        /// <summary>
        /// Represents the identities that can be used to sign in to this user account. An identity can be provided by Microsoft (also
        /// known as a local account), by organizations, or by social identity providers such as Facebook, Google, and Microsoft,
        /// and tied to a user account. May contain multiple items with the same signInType value. Supports $filter (eq) only where
        /// the signInType is not userPrincipalName.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphObjectIdentity[] Identity { get => this._identity; set => this._identity = value; }

        /// <summary>Backing field for <see cref="ImAddress" /> property.</summary>
        private string[] _imAddress;

        /// <summary>
        /// The instant message voice over IP (VOIP) session initiation protocol (SIP) addresses for the user. Read-only. Supports
        /// $filter (eq, NOT, ge, le, startsWith).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public string[] ImAddress { get => this._imAddress; }

        /// <summary>Backing field for <see cref="IsResourceAccount" /> property.</summary>
        private bool? _isResourceAccount;

        /// <summary>Do not use – reserved for future use.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public bool? IsResourceAccount { get => this._isResourceAccount; set => this._isResourceAccount = value; }

        /// <summary>Backing field for <see cref="JobTitle" /> property.</summary>
        private string _jobTitle;

        /// <summary>
        /// The user's job title. Maximum length is 128 characters. Supports $filter (eq, ne, NOT , ge, le, in, startsWith).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public string JobTitle { get => this._jobTitle; set => this._jobTitle = value; }

        /// <summary>Backing field for <see cref="LastPasswordChangeDateTime" /> property.</summary>
        private global::System.DateTime? _lastPasswordChangeDateTime;

        /// <summary>
        /// The time when this Azure AD user last changed their password. The Timestamp type represents date and time information
        /// using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
        /// Returned only on $select.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public global::System.DateTime? LastPasswordChangeDateTime { get => this._lastPasswordChangeDateTime; }

        /// <summary>Backing field for <see cref="LegalAgeGroupClassification" /> property.</summary>
        private string _legalAgeGroupClassification;

        /// <summary>
        /// Used by enterprise applications to determine the legal age group of the user. This property is read-only and calculated
        /// based on ageGroup and consentProvidedForMinor properties. Allowed values: null, minorWithOutParentalConsent, minorWithParentalConsent,
        /// minorNoParentalConsentRequired, notAdult and adult. Refer to the legal age group property definitions for further information.
        /// Returned only on $select.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public string LegalAgeGroupClassification { get => this._legalAgeGroupClassification; }

        /// <summary>Backing field for <see cref="Mail" /> property.</summary>
        private string _mail;

        /// <summary>
        /// The SMTP address for the user, for example, admin@contoso.com. Changes to this property will also update the user's proxyAddresses
        /// collection to include the value as an SMTP address. While this property can contain accent characters, using them can
        /// cause access issues with other Microsoft applications for the user. Supports $filter (eq, ne, NOT, ge, le, in, startsWith,
        /// endsWith).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.FormatTable(Index = 2)]
        public string Mail { get => this._mail; set => this._mail = value; }

        /// <summary>Backing field for <see cref="MailNickname" /> property.</summary>
        private string _mailNickname;

        /// <summary>
        /// The mail alias for the user. This property must be specified when a user is created. Maximum length is 64 characters.
        /// Supports $filter (eq, ne, NOT, ge, le, in, startsWith).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public string MailNickname { get => this._mailNickname; set => this._mailNickname = value; }

        /// <summary>Internal Acessors for OdataId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphDirectoryObjectInternal.OdataId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphDirectoryObjectInternal)__microsoftGraphDirectoryObject).OdataId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphDirectoryObjectInternal)__microsoftGraphDirectoryObject).OdataId = value; }

        /// <summary>Internal Acessors for OdataType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphDirectoryObjectInternal.OdataType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphDirectoryObjectInternal)__microsoftGraphDirectoryObject).OdataType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphDirectoryObjectInternal)__microsoftGraphDirectoryObject).OdataType = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphEntityInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphEntityInternal)__microsoftGraphDirectoryObject).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphEntityInternal)__microsoftGraphDirectoryObject).Id = value; }

        /// <summary>Internal Acessors for BusinessPhone</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphUserInternal.BusinessPhone { get => this._businessPhone; set { {_businessPhone = value;} } }

        /// <summary>Internal Acessors for CreatedDateTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphUserInternal.CreatedDateTime { get => this._createdDateTime; set { {_createdDateTime = value;} } }

        /// <summary>Internal Acessors for CreationType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphUserInternal.CreationType { get => this._creationType; set { {_creationType = value;} } }

        /// <summary>Internal Acessors for ImAddress</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphUserInternal.ImAddress { get => this._imAddress; set { {_imAddress = value;} } }

        /// <summary>Internal Acessors for LastPasswordChangeDateTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphUserInternal.LastPasswordChangeDateTime { get => this._lastPasswordChangeDateTime; set { {_lastPasswordChangeDateTime = value;} } }

        /// <summary>Internal Acessors for LegalAgeGroupClassification</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphUserInternal.LegalAgeGroupClassification { get => this._legalAgeGroupClassification; set { {_legalAgeGroupClassification = value;} } }

        /// <summary>Internal Acessors for MobilePhone</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphUserInternal.MobilePhone { get => this._mobilePhone; set { {_mobilePhone = value;} } }

        /// <summary>Internal Acessors for ProxyAddress</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphUserInternal.ProxyAddress { get => this._proxyAddress; set { {_proxyAddress = value;} } }

        /// <summary>Internal Acessors for SignInSessionsValidFromDateTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphUserInternal.SignInSessionsValidFromDateTime { get => this._signInSessionsValidFromDateTime; set { {_signInSessionsValidFromDateTime = value;} } }

        /// <summary>Backing field for <see cref="MobilePhone" /> property.</summary>
        private string _mobilePhone;

        /// <summary>
        /// The primary cellular telephone number for the user. Read-only for users synced from on-premises directory. Supports $filter
        /// (eq, ne, NOT, ge, le, in, startsWith).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public string MobilePhone { get => this._mobilePhone; }

        /// <summary>The full id of object in directory</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public string OdataId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphDirectoryObjectInternal)__microsoftGraphDirectoryObject).OdataId; }

        /// <summary>The type of object in directory</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public string OdataType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphDirectoryObjectInternal)__microsoftGraphDirectoryObject).OdataType; }

        /// <summary>Backing field for <see cref="OfficeLocation" /> property.</summary>
        private string _officeLocation;

        /// <summary>
        /// The office location in the user's place of business. Maximum length is 128 characters. Supports $filter (eq, ne, NOT,
        /// ge, le, in, startsWith).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public string OfficeLocation { get => this._officeLocation; set => this._officeLocation = value; }

        /// <summary>Backing field for <see cref="OnPremisesImmutableId" /> property.</summary>
        private string _onPremisesImmutableId;

        /// <summary>
        /// This property is used to associate an on-premises Active Directory user account to their Azure AD user object. This property
        /// must be specified when creating a new user account in the Graph if you are using a federated domain for the user's userPrincipalName
        /// (UPN) property. NOTE: The $ and _ characters cannot be used when specifying this property. Returned only on $select. Supports
        /// $filter (eq, ne, NOT, ge, le, in)..
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public string OnPremisesImmutableId { get => this._onPremisesImmutableId; set => this._onPremisesImmutableId = value; }

        /// <summary>Backing field for <see cref="OnPremisesLastSyncDateTime" /> property.</summary>
        private global::System.DateTime? _onPremisesLastSyncDateTime;

        /// <summary>
        /// The last time at which the object was synced with the on-premises directory. The Timestamp type represents date and time
        /// information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
        /// Read-only. Supports $filter (eq, ne, not, ge, le, in).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public global::System.DateTime? OnPremisesLastSyncDateTime { get => this._onPremisesLastSyncDateTime; set => this._onPremisesLastSyncDateTime = value; }

        /// <summary>Backing field for <see cref="OnPremisesSyncEnabled" /> property.</summary>
        private bool? _onPremisesSyncEnabled;

        /// <summary>
        /// true if this object is synced from an on-premises directory; false if this object was originally synced from an on-premises
        /// directory but is no longer synced; null if this object has never been synced from an on-premises directory (default).
        /// Read-only. Supports $filter (eq, ne, not, in, and eq on null values).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public bool? OnPremisesSyncEnabled { get => this._onPremisesSyncEnabled; set => this._onPremisesSyncEnabled = value; }

        /// <summary>Backing field for <see cref="OperatingSystem" /> property.</summary>
        private string _operatingSystem;

        /// <summary>Operating system of the device. Windows, iOS, etc. This property is read-only.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public string OperatingSystem { get => this._operatingSystem; set => this._operatingSystem = value; }

        /// <summary>Backing field for <see cref="OperatingSystemVersion" /> property.</summary>
        private string _operatingSystemVersion;

        /// <summary>
        /// Operating system version of the device. Required. Supports $filter (eq, ne, not, ge, le, startsWith, and eq on null values).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public string OperatingSystemVersion { get => this._operatingSystemVersion; set => this._operatingSystemVersion = value; }

        /// <summary>Backing field for <see cref="OtherMail" /> property.</summary>
        private string[] _otherMail;

        /// <summary>
        /// A list of additional email addresses for the user; for example: ['bob@contoso.com', 'Robert@fabrikam.com'].NOTE: While
        /// this property can contain accent characters, they can cause access issues to first-party applications for the user.Supports
        /// $filter (eq, NOT, ge, le, in, startsWith).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public string[] OtherMail { get => this._otherMail; set => this._otherMail = value; }

        /// <summary>Backing field for <see cref="PasswordPolicy" /> property.</summary>
        private string _passwordPolicy;

        /// <summary>
        /// Specifies password policies for the user. This value is an enumeration with one possible value being DisableStrongPassword,
        /// which allows weaker passwords than the default policy to be specified. DisablePasswordExpiration can also be specified.
        /// The two may be specified together; for example: DisablePasswordExpiration, DisableStrongPassword.Supports $filter (ne,
        /// NOT).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public string PasswordPolicy { get => this._passwordPolicy; set => this._passwordPolicy = value; }

        /// <summary>Backing field for <see cref="PasswordProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphPasswordProfile _passwordProfile;

        /// <summary>passwordProfile</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphPasswordProfile PasswordProfile { get => (this._passwordProfile = this._passwordProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.MicrosoftGraphPasswordProfile()); set => this._passwordProfile = value; }

        /// <summary>Backing field for <see cref="PhysicalId" /> property.</summary>
        private string[] _physicalId;

        /// <summary>
        /// For internal use only. Not nullable. Supports $filter (eq, not, ge, le, startsWith).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public string[] PhysicalId { get => this._physicalId; set => this._physicalId = value; }

        /// <summary>Backing field for <see cref="PostalCode" /> property.</summary>
        private string _postalCode;

        /// <summary>
        /// The postal code for the user's postal address. The postal code is specific to the user's country/region. In the United
        /// States of America, this attribute contains the ZIP code. Maximum length is 40 characters. Supports $filter (eq, ne, NOT,
        /// ge, le, in, startsWith).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public string PostalCode { get => this._postalCode; set => this._postalCode = value; }

        /// <summary>Backing field for <see cref="PreferredLanguage" /> property.</summary>
        private string _preferredLanguage;

        /// <summary>
        /// The preferred language for the user. Should follow ISO 639-1 Code; for example en-US. Supports $filter (eq, ne, NOT, ge,
        /// le, in, startsWith).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public string PreferredLanguage { get => this._preferredLanguage; set => this._preferredLanguage = value; }

        /// <summary>Backing field for <see cref="ProxyAddress" /> property.</summary>
        private string[] _proxyAddress;

        /// <summary>
        /// For example: ['SMTP: bob@contoso.com', 'smtp: bob@sales.contoso.com']. Read-only, Not nullable. Supports $filter (eq,
        /// NOT, ge, le, startsWith).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public string[] ProxyAddress { get => this._proxyAddress; }

        /// <summary>Backing field for <see cref="ShowInAddressList" /> property.</summary>
        private bool? _showInAddressList;

        /// <summary>
        /// true if the Outlook global address list should contain this user, otherwise false. If not set, this will be treated as
        /// true. For users invited through the invitation manager, this property will be set to false. Supports $filter (eq, ne,
        /// NOT, in).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public bool? ShowInAddressList { get => this._showInAddressList; set => this._showInAddressList = value; }

        /// <summary>Backing field for <see cref="SignInSessionsValidFromDateTime" /> property.</summary>
        private global::System.DateTime? _signInSessionsValidFromDateTime;

        /// <summary>
        /// Any refresh tokens or sessions tokens (session cookies) issued before this time are invalid, and applications will get
        /// an error when using an invalid refresh or sessions token to acquire a delegated access token (to access APIs such as Microsoft
        /// Graph). If this happens, the application will need to acquire a new refresh token by making a request to the authorize
        /// endpoint. Read-only. Use revokeSignInSessions to reset.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public global::System.DateTime? SignInSessionsValidFromDateTime { get => this._signInSessionsValidFromDateTime; }

        /// <summary>Backing field for <see cref="State" /> property.</summary>
        private string _state;

        /// <summary>
        /// The state or province in the user's address. Maximum length is 128 characters. Supports $filter (eq, ne, NOT, ge, le,
        /// in, startsWith).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public string State { get => this._state; set => this._state = value; }

        /// <summary>Backing field for <see cref="StreetAddress" /> property.</summary>
        private string _streetAddress;

        /// <summary>
        /// The street address of the user's place of business. Maximum length is 1024 characters. Supports $filter (eq, ne, NOT,
        /// ge, le, in, startsWith).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public string StreetAddress { get => this._streetAddress; set => this._streetAddress = value; }

        /// <summary>Backing field for <see cref="Surname" /> property.</summary>
        private string _surname;

        /// <summary>
        /// The user's surname (family name or last name). Maximum length is 64 characters. Supports $filter (eq, ne, NOT, ge, le,
        /// in, startsWith).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public string Surname { get => this._surname; set => this._surname = value; }

        /// <summary>Backing field for <see cref="TrustType" /> property.</summary>
        private string _trustType;

        /// <summary>
        /// Type of trust for the joined device. Read-only. Possible values: Workplace (indicates bring your own personal devices),
        /// AzureAd (Cloud only joined devices), ServerAd (on-premises domain joined devices joined to Azure AD). For more details,
        /// see Introduction to device management in Azure Active Directory
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public string TrustType { get => this._trustType; set => this._trustType = value; }

        /// <summary>Backing field for <see cref="UsageLocation" /> property.</summary>
        private string _usageLocation;

        /// <summary>
        /// A two letter country code (ISO standard 3166). Required for users that will be assigned licenses due to legal requirement
        /// to check for availability of services in countries. Examples include: US, JP, and GB. Not nullable. Supports $filter (eq,
        /// ne, NOT, ge, le, in, startsWith).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public string UsageLocation { get => this._usageLocation; set => this._usageLocation = value; }

        /// <summary>Backing field for <see cref="UserPrincipalName" /> property.</summary>
        private string _userPrincipalName;

        /// <summary>
        /// The user principal name (UPN) of the user. The UPN is an Internet-style login name for the user based on the Internet
        /// standard RFC 822. By convention, this should map to the user's email name. The general format is alias@domain, where domain
        /// must be present in the tenant's collection of verified domains. This property is required when a user is created. The
        /// verified domains for the tenant can be accessed from the verifiedDomains property of organization.NOTE: While this property
        /// can contain accent characters, they can cause access issues to first-party applications for the user. Supports $filter
        /// (eq, ne, NOT, ge, le, in, startsWith, endsWith) and $orderBy.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.FormatTable(Index = 3)]
        public string UserPrincipalName { get => this._userPrincipalName; set => this._userPrincipalName = value; }

        /// <summary>Backing field for <see cref="UserType" /> property.</summary>
        private string _userType;

        /// <summary>
        /// A string value that can be used to classify user types in your directory, such as Member and Guest. Supports $filter (eq,
        /// ne, NOT, in,).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.DoNotFormat]
        public string UserType { get => this._userType; set => this._userType = value; }

        /// <summary>Creates an new <see cref="MicrosoftGraphUser" /> instance.</summary>
        public MicrosoftGraphUser()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__microsoftGraphDirectoryObject), __microsoftGraphDirectoryObject);
            await eventListener.AssertObjectIsValid(nameof(__microsoftGraphDirectoryObject), __microsoftGraphDirectoryObject);
        }
    }
    /// Represents an Azure Active Directory user object.
    public partial interface IMicrosoftGraphUser :
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphDirectoryObject,
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IAssociativeArray<global::System.Object>
    {
        /// <summary>
        /// true if the account is enabled; otherwise, false. This property is required when a user is created. Supports $filter (eq,
        /// ne, NOT, and in).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"true if the account is enabled; otherwise, false. This property is required when a user is created. Supports $filter (eq, ne, NOT, and in).",
        SerializedName = @"accountEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AccountEnabled { get; set; }
        /// <summary>
        /// Sets the age group of the user. Allowed values: null, minor, notAdult and adult. Refer to the legal age group property
        /// definitions for further information. Supports $filter (eq, ne, NOT, and in).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Sets the age group of the user. Allowed values: null, minor, notAdult and adult. Refer to the legal age group property definitions for further information. Supports $filter (eq, ne, NOT, and in).",
        SerializedName = @"ageGroup",
        PossibleTypes = new [] { typeof(string) })]
        string AgeGroup { get; set; }
        /// <summary>
        /// The timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example,
        /// midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only. Supports $filter (eq, ne, not, ge, le, and eq on null
        /// values) and $orderBy.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only. Supports $filter (eq, ne, not, ge, le, and eq on null values) and $orderBy.",
        SerializedName = @"approximateLastSignInDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ApproximateLastSignInDateTime { get; set; }
        /// <summary>
        /// The telephone numbers for the user. Only one number can be set for this property. Read-only for users synced from on-premises
        /// directory. Supports $filter (eq and NOT).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The telephone numbers for the user. Only one number can be set for this property. Read-only for users synced from on-premises directory. Supports $filter (eq and NOT).",
        SerializedName = @"businessPhones",
        PossibleTypes = new [] { typeof(string) })]
        string[] BusinessPhone { get;  }
        /// <summary>
        /// The city in which the user is located. Maximum length is 128 characters. Supports $filter (eq, ne, NOT, ge, le, in, startsWith).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The city in which the user is located. Maximum length is 128 characters. Supports $filter (eq, ne, NOT, ge, le, in, startsWith).",
        SerializedName = @"city",
        PossibleTypes = new [] { typeof(string) })]
        string City { get; set; }
        /// <summary>
        /// The company name which the user is associated. This property can be useful for describing the company that an external
        /// user comes from. The maximum length of the company name is 64 characters.Supports $filter (eq, ne, NOT, ge, le, in, startsWith).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The company name which the user is associated. This property can be useful for describing the company that an external user comes from. The maximum length of the company name is 64 characters.Supports $filter (eq, ne, NOT, ge, le, in, startsWith).",
        SerializedName = @"companyName",
        PossibleTypes = new [] { typeof(string) })]
        string CompanyName { get; set; }
        /// <summary>
        /// The timestamp when the device is no longer deemed compliant. The timestamp type represents date and time information using
        /// ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp when the device is no longer deemed compliant. The timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.",
        SerializedName = @"complianceExpirationDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ComplianceExpirationDateTime { get; set; }
        /// <summary>
        /// Sets whether consent has been obtained for minors. Allowed values: null, granted, denied and notRequired. Refer to the
        /// legal age group property definitions for further information. Supports $filter (eq, ne, NOT, and in).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Sets whether consent has been obtained for minors. Allowed values: null, granted, denied and notRequired. Refer to the legal age group property definitions for further information. Supports $filter (eq, ne, NOT, and in).",
        SerializedName = @"consentProvidedForMinor",
        PossibleTypes = new [] { typeof(string) })]
        string ConsentProvidedForMinor { get; set; }
        /// <summary>
        /// The country/region in which the user is located; for example, US or UK. Maximum length is 128 characters. Supports $filter
        /// (eq, ne, NOT, ge, le, in, startsWith).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The country/region in which the user is located; for example, US or UK. Maximum length is 128 characters. Supports $filter (eq, ne, NOT, ge, le, in, startsWith).",
        SerializedName = @"country",
        PossibleTypes = new [] { typeof(string) })]
        string Country { get; set; }
        /// <summary>
        /// The date and time the user was created. The value cannot be modified and is automatically populated when the entity is
        /// created. The DateTimeOffset type represents date and time information using ISO 8601 format and is always in UTC time.
        /// Property is nullable. A null value indicates that an accurate creation time couldn't be determined for the user. Read-only.
        /// Supports $filter (eq, ne, NOT , ge, le, and in operators).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The date and time the user was created. The value cannot be modified and is automatically populated when the entity is created. The DateTimeOffset type represents date and time information using ISO 8601 format and is always in UTC time. Property is nullable. A null value indicates that an accurate creation time couldn't be determined for the user. Read-only. Supports $filter (eq, ne, NOT , ge, le, and in operators).",
        SerializedName = @"createdDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CreatedDateTime { get;  }
        /// <summary>
        /// Indicates whether the user account was created as a regular school or work account (null), an external account (Invitation),
        /// a local account for an Azure Active Directory B2C tenant (LocalAccount) or self-service sign-up using email verification
        /// (EmailVerified). Read-only. Supports $filter (eq, ne, NOT, and in).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Indicates whether the user account was created as a regular school or work account (null), an external account (Invitation), a local account for an Azure Active Directory B2C tenant (LocalAccount) or self-service sign-up using email verification (EmailVerified). Read-only. Supports $filter (eq, ne, NOT, and in).",
        SerializedName = @"creationType",
        PossibleTypes = new [] { typeof(string) })]
        string CreationType { get;  }
        /// <summary>
        /// The name for the department in which the user works. Maximum length is 64 characters.Supports $filter (eq, ne, NOT , ge,
        /// le, and in operators).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name for the department in which the user works. Maximum length is 64 characters.Supports $filter (eq, ne, NOT , ge, le, and in operators).",
        SerializedName = @"department",
        PossibleTypes = new [] { typeof(string) })]
        string Department { get; set; }
        /// <summary>For internal use only.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"For internal use only.",
        SerializedName = @"deviceVersion",
        PossibleTypes = new [] { typeof(int) })]
        int? DeviceVersion { get; set; }
        /// <summary>
        /// The date and time when the user was hired or will start work in case of a future hire. Supports $filter (eq, ne, NOT ,
        /// ge, le, in).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The date and time when the user was hired or will start work in case of a future hire. Supports $filter (eq, ne, NOT , ge, le, in).",
        SerializedName = @"employeeHireDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? EmployeeHireDate { get; set; }
        /// <summary>
        /// The employee identifier assigned to the user by the organization. Supports $filter (eq, ne, NOT , ge, le, in, startsWith).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The employee identifier assigned to the user by the organization. Supports $filter (eq, ne, NOT , ge, le, in, startsWith).",
        SerializedName = @"employeeId",
        PossibleTypes = new [] { typeof(string) })]
        string EmployeeId { get; set; }
        /// <summary>
        /// Captures enterprise worker type. For example, Employee, Contractor, Consultant, or Vendor. Supports $filter (eq, ne, NOT
        /// , ge, le, in, startsWith).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Captures enterprise worker type. For example, Employee, Contractor, Consultant, or Vendor. Supports $filter (eq, ne, NOT , ge, le, in, startsWith).",
        SerializedName = @"employeeType",
        PossibleTypes = new [] { typeof(string) })]
        string EmployeeType { get; set; }
        /// <summary>
        /// For an external user invited to the tenant using the invitation API, this property represents the invited user's invitation
        /// status. For invited users, the state can be PendingAcceptance or Accepted, or null for all other users. Supports $filter
        /// (eq, ne, NOT , in).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"For an external user invited to the tenant using the invitation API, this property represents the invited user's invitation status. For invited users, the state can be PendingAcceptance or Accepted, or null for all other users. Supports $filter (eq, ne, NOT , in).",
        SerializedName = @"externalUserState",
        PossibleTypes = new [] { typeof(string) })]
        string ExternalUserState { get; set; }
        /// <summary>
        /// Shows the timestamp for the latest change to the externalUserState property. Supports $filter (eq, ne, NOT , in).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Shows the timestamp for the latest change to the externalUserState property. Supports $filter (eq, ne, NOT , in).",
        SerializedName = @"externalUserStateChangeDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ExternalUserStateChangeDateTime { get; set; }
        /// <summary>
        /// The fax number of the user. Supports $filter (eq, ne, NOT , ge, le, in, startsWith).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The fax number of the user. Supports $filter (eq, ne, NOT , ge, le, in, startsWith).",
        SerializedName = @"faxNumber",
        PossibleTypes = new [] { typeof(string) })]
        string FaxNumber { get; set; }
        /// <summary>
        /// The given name (first name) of the user. Maximum length is 64 characters. Supports $filter (eq, ne, NOT , ge, le, in,
        /// startsWith).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The given name (first name) of the user. Maximum length is 64 characters. Supports $filter (eq, ne, NOT , ge, le, in, startsWith).",
        SerializedName = @"givenName",
        PossibleTypes = new [] { typeof(string) })]
        string GivenName { get; set; }
        /// <summary>
        /// Represents the identities that can be used to sign in to this user account. An identity can be provided by Microsoft (also
        /// known as a local account), by organizations, or by social identity providers such as Facebook, Google, and Microsoft,
        /// and tied to a user account. May contain multiple items with the same signInType value. Supports $filter (eq) only where
        /// the signInType is not userPrincipalName.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents the identities that can be used to sign in to this user account. An identity can be provided by Microsoft (also known as a local account), by organizations, or by social identity providers such as Facebook, Google, and Microsoft, and tied to a user account. May contain multiple items with the same signInType value. Supports $filter (eq) only where the signInType is not userPrincipalName.",
        SerializedName = @"identities",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphObjectIdentity) })]
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphObjectIdentity[] Identity { get; set; }
        /// <summary>
        /// The instant message voice over IP (VOIP) session initiation protocol (SIP) addresses for the user. Read-only. Supports
        /// $filter (eq, NOT, ge, le, startsWith).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The instant message voice over IP (VOIP) session initiation protocol (SIP) addresses for the user. Read-only. Supports $filter (eq, NOT, ge, le, startsWith).",
        SerializedName = @"imAddresses",
        PossibleTypes = new [] { typeof(string) })]
        string[] ImAddress { get;  }
        /// <summary>Do not use – reserved for future use.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Do not use – reserved for future use.",
        SerializedName = @"isResourceAccount",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsResourceAccount { get; set; }
        /// <summary>
        /// The user's job title. Maximum length is 128 characters. Supports $filter (eq, ne, NOT , ge, le, in, startsWith).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The user's job title. Maximum length is 128 characters. Supports $filter (eq, ne, NOT , ge, le, in, startsWith).",
        SerializedName = @"jobTitle",
        PossibleTypes = new [] { typeof(string) })]
        string JobTitle { get; set; }
        /// <summary>
        /// The time when this Azure AD user last changed their password. The Timestamp type represents date and time information
        /// using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
        /// Returned only on $select.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The time when this Azure AD user last changed their password. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only. Returned only on $select.",
        SerializedName = @"lastPasswordChangeDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastPasswordChangeDateTime { get;  }
        /// <summary>
        /// Used by enterprise applications to determine the legal age group of the user. This property is read-only and calculated
        /// based on ageGroup and consentProvidedForMinor properties. Allowed values: null, minorWithOutParentalConsent, minorWithParentalConsent,
        /// minorNoParentalConsentRequired, notAdult and adult. Refer to the legal age group property definitions for further information.
        /// Returned only on $select.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Used by enterprise applications to determine the legal age group of the user. This property is read-only and calculated based on ageGroup and consentProvidedForMinor properties. Allowed values: null, minorWithOutParentalConsent, minorWithParentalConsent, minorNoParentalConsentRequired, notAdult and adult. Refer to the legal age group property definitions for further information. Returned only on $select.",
        SerializedName = @"legalAgeGroupClassification",
        PossibleTypes = new [] { typeof(string) })]
        string LegalAgeGroupClassification { get;  }
        /// <summary>
        /// The SMTP address for the user, for example, admin@contoso.com. Changes to this property will also update the user's proxyAddresses
        /// collection to include the value as an SMTP address. While this property can contain accent characters, using them can
        /// cause access issues with other Microsoft applications for the user. Supports $filter (eq, ne, NOT, ge, le, in, startsWith,
        /// endsWith).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The SMTP address for the user, for example, admin@contoso.com. Changes to this property will also update the user's proxyAddresses collection to include the value as an SMTP address. While this property can contain accent characters, using them can cause access issues with other Microsoft applications for the user. Supports $filter (eq, ne, NOT, ge, le, in, startsWith, endsWith).",
        SerializedName = @"mail",
        PossibleTypes = new [] { typeof(string) })]
        string Mail { get; set; }
        /// <summary>
        /// The mail alias for the user. This property must be specified when a user is created. Maximum length is 64 characters.
        /// Supports $filter (eq, ne, NOT, ge, le, in, startsWith).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The mail alias for the user. This property must be specified when a user is created. Maximum length is 64 characters. Supports $filter (eq, ne, NOT, ge, le, in, startsWith).",
        SerializedName = @"mailNickname",
        PossibleTypes = new [] { typeof(string) })]
        string MailNickname { get; set; }
        /// <summary>
        /// The primary cellular telephone number for the user. Read-only for users synced from on-premises directory. Supports $filter
        /// (eq, ne, NOT, ge, le, in, startsWith).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The primary cellular telephone number for the user. Read-only for users synced from on-premises directory.  Supports $filter (eq, ne, NOT, ge, le, in, startsWith).",
        SerializedName = @"mobilePhone",
        PossibleTypes = new [] { typeof(string) })]
        string MobilePhone { get;  }
        /// <summary>
        /// The office location in the user's place of business. Maximum length is 128 characters. Supports $filter (eq, ne, NOT,
        /// ge, le, in, startsWith).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The office location in the user's place of business. Maximum length is 128 characters. Supports $filter (eq, ne, NOT, ge, le, in, startsWith).",
        SerializedName = @"officeLocation",
        PossibleTypes = new [] { typeof(string) })]
        string OfficeLocation { get; set; }
        /// <summary>
        /// This property is used to associate an on-premises Active Directory user account to their Azure AD user object. This property
        /// must be specified when creating a new user account in the Graph if you are using a federated domain for the user's userPrincipalName
        /// (UPN) property. NOTE: The $ and _ characters cannot be used when specifying this property. Returned only on $select. Supports
        /// $filter (eq, ne, NOT, ge, le, in)..
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This property is used to associate an on-premises Active Directory user account to their Azure AD user object. This property must be specified when creating a new user account in the Graph if you are using a federated domain for the user's userPrincipalName (UPN) property. NOTE: The $ and _ characters cannot be used when specifying this property. Returned only on $select. Supports $filter (eq, ne, NOT, ge, le, in)..",
        SerializedName = @"onPremisesImmutableId",
        PossibleTypes = new [] { typeof(string) })]
        string OnPremisesImmutableId { get; set; }
        /// <summary>
        /// The last time at which the object was synced with the on-premises directory. The Timestamp type represents date and time
        /// information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
        /// Read-only. Supports $filter (eq, ne, not, ge, le, in).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The last time at which the object was synced with the on-premises directory. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z Read-only. Supports $filter (eq, ne, not, ge, le, in).",
        SerializedName = @"onPremisesLastSyncDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? OnPremisesLastSyncDateTime { get; set; }
        /// <summary>
        /// true if this object is synced from an on-premises directory; false if this object was originally synced from an on-premises
        /// directory but is no longer synced; null if this object has never been synced from an on-premises directory (default).
        /// Read-only. Supports $filter (eq, ne, not, in, and eq on null values).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"true if this object is synced from an on-premises directory; false if this object was originally synced from an on-premises directory but is no longer synced; null if this object has never been synced from an on-premises directory (default). Read-only. Supports $filter (eq, ne, not, in, and eq on null values).",
        SerializedName = @"onPremisesSyncEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? OnPremisesSyncEnabled { get; set; }
        /// <summary>Operating system of the device. Windows, iOS, etc. This property is read-only.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Operating system of the device. Windows, iOS, etc. This property is read-only.",
        SerializedName = @"operatingSystem",
        PossibleTypes = new [] { typeof(string) })]
        string OperatingSystem { get; set; }
        /// <summary>
        /// Operating system version of the device. Required. Supports $filter (eq, ne, not, ge, le, startsWith, and eq on null values).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Operating system version of the device. Required. Supports $filter (eq, ne, not, ge, le, startsWith, and eq on null values).",
        SerializedName = @"operatingSystemVersion",
        PossibleTypes = new [] { typeof(string) })]
        string OperatingSystemVersion { get; set; }
        /// <summary>
        /// A list of additional email addresses for the user; for example: ['bob@contoso.com', 'Robert@fabrikam.com'].NOTE: While
        /// this property can contain accent characters, they can cause access issues to first-party applications for the user.Supports
        /// $filter (eq, NOT, ge, le, in, startsWith).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of additional email addresses for the user; for example: ['bob@contoso.com', 'Robert@fabrikam.com'].NOTE: While this property can contain accent characters, they can cause access issues to first-party applications for the user.Supports $filter (eq, NOT, ge, le, in, startsWith).",
        SerializedName = @"otherMails",
        PossibleTypes = new [] { typeof(string) })]
        string[] OtherMail { get; set; }
        /// <summary>
        /// Specifies password policies for the user. This value is an enumeration with one possible value being DisableStrongPassword,
        /// which allows weaker passwords than the default policy to be specified. DisablePasswordExpiration can also be specified.
        /// The two may be specified together; for example: DisablePasswordExpiration, DisableStrongPassword.Supports $filter (ne,
        /// NOT).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies password policies for the user. This value is an enumeration with one possible value being DisableStrongPassword, which allows weaker passwords than the default policy to be specified. DisablePasswordExpiration can also be specified. The two may be specified together; for example: DisablePasswordExpiration, DisableStrongPassword.Supports $filter (ne, NOT).",
        SerializedName = @"passwordPolicies",
        PossibleTypes = new [] { typeof(string) })]
        string PasswordPolicy { get; set; }
        /// <summary>passwordProfile</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"passwordProfile",
        SerializedName = @"passwordProfile",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphPasswordProfile) })]
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphPasswordProfile PasswordProfile { get; set; }
        /// <summary>
        /// For internal use only. Not nullable. Supports $filter (eq, not, ge, le, startsWith).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"For internal use only. Not nullable. Supports $filter (eq, not, ge, le, startsWith).",
        SerializedName = @"physicalIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] PhysicalId { get; set; }
        /// <summary>
        /// The postal code for the user's postal address. The postal code is specific to the user's country/region. In the United
        /// States of America, this attribute contains the ZIP code. Maximum length is 40 characters. Supports $filter (eq, ne, NOT,
        /// ge, le, in, startsWith).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The postal code for the user's postal address. The postal code is specific to the user's country/region. In the United States of America, this attribute contains the ZIP code. Maximum length is 40 characters. Supports $filter (eq, ne, NOT, ge, le, in, startsWith).",
        SerializedName = @"postalCode",
        PossibleTypes = new [] { typeof(string) })]
        string PostalCode { get; set; }
        /// <summary>
        /// The preferred language for the user. Should follow ISO 639-1 Code; for example en-US. Supports $filter (eq, ne, NOT, ge,
        /// le, in, startsWith).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The preferred language for the user. Should follow ISO 639-1 Code; for example en-US. Supports $filter (eq, ne, NOT, ge, le, in, startsWith).",
        SerializedName = @"preferredLanguage",
        PossibleTypes = new [] { typeof(string) })]
        string PreferredLanguage { get; set; }
        /// <summary>
        /// For example: ['SMTP: bob@contoso.com', 'smtp: bob@sales.contoso.com']. Read-only, Not nullable. Supports $filter (eq,
        /// NOT, ge, le, startsWith).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"For example: ['SMTP: bob@contoso.com', 'smtp: bob@sales.contoso.com']. Read-only, Not nullable. Supports $filter (eq, NOT, ge, le, startsWith).",
        SerializedName = @"proxyAddresses",
        PossibleTypes = new [] { typeof(string) })]
        string[] ProxyAddress { get;  }
        /// <summary>
        /// true if the Outlook global address list should contain this user, otherwise false. If not set, this will be treated as
        /// true. For users invited through the invitation manager, this property will be set to false. Supports $filter (eq, ne,
        /// NOT, in).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"true if the Outlook global address list should contain this user, otherwise false. If not set, this will be treated as true. For users invited through the invitation manager, this property will be set to false. Supports $filter (eq, ne, NOT, in).",
        SerializedName = @"showInAddressList",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ShowInAddressList { get; set; }
        /// <summary>
        /// Any refresh tokens or sessions tokens (session cookies) issued before this time are invalid, and applications will get
        /// an error when using an invalid refresh or sessions token to acquire a delegated access token (to access APIs such as Microsoft
        /// Graph). If this happens, the application will need to acquire a new refresh token by making a request to the authorize
        /// endpoint. Read-only. Use revokeSignInSessions to reset.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Any refresh tokens or sessions tokens (session cookies) issued before this time are invalid, and applications will get an error when using an invalid refresh or sessions token to acquire a delegated access token (to access APIs such as Microsoft Graph).  If this happens, the application will need to acquire a new refresh token by making a request to the authorize endpoint. Read-only. Use revokeSignInSessions to reset.",
        SerializedName = @"signInSessionsValidFromDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SignInSessionsValidFromDateTime { get;  }
        /// <summary>
        /// The state or province in the user's address. Maximum length is 128 characters. Supports $filter (eq, ne, NOT, ge, le,
        /// in, startsWith).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The state or province in the user's address. Maximum length is 128 characters. Supports $filter (eq, ne, NOT, ge, le, in, startsWith).",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(string) })]
        string State { get; set; }
        /// <summary>
        /// The street address of the user's place of business. Maximum length is 1024 characters. Supports $filter (eq, ne, NOT,
        /// ge, le, in, startsWith).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The street address of the user's place of business. Maximum length is 1024 characters. Supports $filter (eq, ne, NOT, ge, le, in, startsWith).",
        SerializedName = @"streetAddress",
        PossibleTypes = new [] { typeof(string) })]
        string StreetAddress { get; set; }
        /// <summary>
        /// The user's surname (family name or last name). Maximum length is 64 characters. Supports $filter (eq, ne, NOT, ge, le,
        /// in, startsWith).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The user's surname (family name or last name). Maximum length is 64 characters. Supports $filter (eq, ne, NOT, ge, le, in, startsWith).",
        SerializedName = @"surname",
        PossibleTypes = new [] { typeof(string) })]
        string Surname { get; set; }
        /// <summary>
        /// Type of trust for the joined device. Read-only. Possible values: Workplace (indicates bring your own personal devices),
        /// AzureAd (Cloud only joined devices), ServerAd (on-premises domain joined devices joined to Azure AD). For more details,
        /// see Introduction to device management in Azure Active Directory
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of trust for the joined device. Read-only. Possible values: Workplace (indicates bring your own personal devices), AzureAd (Cloud only joined devices), ServerAd (on-premises domain joined devices joined to Azure AD). For more details, see Introduction to device management in Azure Active Directory",
        SerializedName = @"trustType",
        PossibleTypes = new [] { typeof(string) })]
        string TrustType { get; set; }
        /// <summary>
        /// A two letter country code (ISO standard 3166). Required for users that will be assigned licenses due to legal requirement
        /// to check for availability of services in countries. Examples include: US, JP, and GB. Not nullable. Supports $filter (eq,
        /// ne, NOT, ge, le, in, startsWith).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A two letter country code (ISO standard 3166). Required for users that will be assigned licenses due to legal requirement to check for availability of services in countries.  Examples include: US, JP, and GB. Not nullable. Supports $filter (eq, ne, NOT, ge, le, in, startsWith).",
        SerializedName = @"usageLocation",
        PossibleTypes = new [] { typeof(string) })]
        string UsageLocation { get; set; }
        /// <summary>
        /// The user principal name (UPN) of the user. The UPN is an Internet-style login name for the user based on the Internet
        /// standard RFC 822. By convention, this should map to the user's email name. The general format is alias@domain, where domain
        /// must be present in the tenant's collection of verified domains. This property is required when a user is created. The
        /// verified domains for the tenant can be accessed from the verifiedDomains property of organization.NOTE: While this property
        /// can contain accent characters, they can cause access issues to first-party applications for the user. Supports $filter
        /// (eq, ne, NOT, ge, le, in, startsWith, endsWith) and $orderBy.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The user principal name (UPN) of the user. The UPN is an Internet-style login name for the user based on the Internet standard RFC 822. By convention, this should map to the user's email name. The general format is alias@domain, where domain must be present in the tenant's collection of verified domains. This property is required when a user is created. The verified domains for the tenant can be accessed from the verifiedDomains property of organization.NOTE: While this property can contain accent characters, they can cause access issues to first-party applications for the user. Supports $filter (eq, ne, NOT, ge, le, in, startsWith, endsWith) and $orderBy.",
        SerializedName = @"userPrincipalName",
        PossibleTypes = new [] { typeof(string) })]
        string UserPrincipalName { get; set; }
        /// <summary>
        /// A string value that can be used to classify user types in your directory, such as Member and Guest. Supports $filter (eq,
        /// ne, NOT, in,).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A string value that can be used to classify user types in your directory, such as Member and Guest. Supports $filter (eq, ne, NOT, in,).",
        SerializedName = @"userType",
        PossibleTypes = new [] { typeof(string) })]
        string UserType { get; set; }

    }
    /// Represents an Azure Active Directory user object.
    internal partial interface IMicrosoftGraphUserInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphDirectoryObjectInternal
    {
        /// <summary>
        /// true if the account is enabled; otherwise, false. This property is required when a user is created. Supports $filter (eq,
        /// ne, NOT, and in).
        /// </summary>
        bool? AccountEnabled { get; set; }
        /// <summary>
        /// Sets the age group of the user. Allowed values: null, minor, notAdult and adult. Refer to the legal age group property
        /// definitions for further information. Supports $filter (eq, ne, NOT, and in).
        /// </summary>
        string AgeGroup { get; set; }
        /// <summary>
        /// The timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example,
        /// midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only. Supports $filter (eq, ne, not, ge, le, and eq on null
        /// values) and $orderBy.
        /// </summary>
        global::System.DateTime? ApproximateLastSignInDateTime { get; set; }
        /// <summary>
        /// The telephone numbers for the user. Only one number can be set for this property. Read-only for users synced from on-premises
        /// directory. Supports $filter (eq and NOT).
        /// </summary>
        string[] BusinessPhone { get; set; }
        /// <summary>
        /// The city in which the user is located. Maximum length is 128 characters. Supports $filter (eq, ne, NOT, ge, le, in, startsWith).
        /// </summary>
        string City { get; set; }
        /// <summary>
        /// The company name which the user is associated. This property can be useful for describing the company that an external
        /// user comes from. The maximum length of the company name is 64 characters.Supports $filter (eq, ne, NOT, ge, le, in, startsWith).
        /// </summary>
        string CompanyName { get; set; }
        /// <summary>
        /// The timestamp when the device is no longer deemed compliant. The timestamp type represents date and time information using
        /// ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
        /// </summary>
        global::System.DateTime? ComplianceExpirationDateTime { get; set; }
        /// <summary>
        /// Sets whether consent has been obtained for minors. Allowed values: null, granted, denied and notRequired. Refer to the
        /// legal age group property definitions for further information. Supports $filter (eq, ne, NOT, and in).
        /// </summary>
        string ConsentProvidedForMinor { get; set; }
        /// <summary>
        /// The country/region in which the user is located; for example, US or UK. Maximum length is 128 characters. Supports $filter
        /// (eq, ne, NOT, ge, le, in, startsWith).
        /// </summary>
        string Country { get; set; }
        /// <summary>
        /// The date and time the user was created. The value cannot be modified and is automatically populated when the entity is
        /// created. The DateTimeOffset type represents date and time information using ISO 8601 format and is always in UTC time.
        /// Property is nullable. A null value indicates that an accurate creation time couldn't be determined for the user. Read-only.
        /// Supports $filter (eq, ne, NOT , ge, le, and in operators).
        /// </summary>
        global::System.DateTime? CreatedDateTime { get; set; }
        /// <summary>
        /// Indicates whether the user account was created as a regular school or work account (null), an external account (Invitation),
        /// a local account for an Azure Active Directory B2C tenant (LocalAccount) or self-service sign-up using email verification
        /// (EmailVerified). Read-only. Supports $filter (eq, ne, NOT, and in).
        /// </summary>
        string CreationType { get; set; }
        /// <summary>
        /// The name for the department in which the user works. Maximum length is 64 characters.Supports $filter (eq, ne, NOT , ge,
        /// le, and in operators).
        /// </summary>
        string Department { get; set; }
        /// <summary>For internal use only.</summary>
        int? DeviceVersion { get; set; }
        /// <summary>
        /// The date and time when the user was hired or will start work in case of a future hire. Supports $filter (eq, ne, NOT ,
        /// ge, le, in).
        /// </summary>
        global::System.DateTime? EmployeeHireDate { get; set; }
        /// <summary>
        /// The employee identifier assigned to the user by the organization. Supports $filter (eq, ne, NOT , ge, le, in, startsWith).
        /// </summary>
        string EmployeeId { get; set; }
        /// <summary>
        /// Captures enterprise worker type. For example, Employee, Contractor, Consultant, or Vendor. Supports $filter (eq, ne, NOT
        /// , ge, le, in, startsWith).
        /// </summary>
        string EmployeeType { get; set; }
        /// <summary>
        /// For an external user invited to the tenant using the invitation API, this property represents the invited user's invitation
        /// status. For invited users, the state can be PendingAcceptance or Accepted, or null for all other users. Supports $filter
        /// (eq, ne, NOT , in).
        /// </summary>
        string ExternalUserState { get; set; }
        /// <summary>
        /// Shows the timestamp for the latest change to the externalUserState property. Supports $filter (eq, ne, NOT , in).
        /// </summary>
        global::System.DateTime? ExternalUserStateChangeDateTime { get; set; }
        /// <summary>
        /// The fax number of the user. Supports $filter (eq, ne, NOT , ge, le, in, startsWith).
        /// </summary>
        string FaxNumber { get; set; }
        /// <summary>
        /// The given name (first name) of the user. Maximum length is 64 characters. Supports $filter (eq, ne, NOT , ge, le, in,
        /// startsWith).
        /// </summary>
        string GivenName { get; set; }
        /// <summary>
        /// Represents the identities that can be used to sign in to this user account. An identity can be provided by Microsoft (also
        /// known as a local account), by organizations, or by social identity providers such as Facebook, Google, and Microsoft,
        /// and tied to a user account. May contain multiple items with the same signInType value. Supports $filter (eq) only where
        /// the signInType is not userPrincipalName.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphObjectIdentity[] Identity { get; set; }
        /// <summary>
        /// The instant message voice over IP (VOIP) session initiation protocol (SIP) addresses for the user. Read-only. Supports
        /// $filter (eq, NOT, ge, le, startsWith).
        /// </summary>
        string[] ImAddress { get; set; }
        /// <summary>Do not use – reserved for future use.</summary>
        bool? IsResourceAccount { get; set; }
        /// <summary>
        /// The user's job title. Maximum length is 128 characters. Supports $filter (eq, ne, NOT , ge, le, in, startsWith).
        /// </summary>
        string JobTitle { get; set; }
        /// <summary>
        /// The time when this Azure AD user last changed their password. The Timestamp type represents date and time information
        /// using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
        /// Returned only on $select.
        /// </summary>
        global::System.DateTime? LastPasswordChangeDateTime { get; set; }
        /// <summary>
        /// Used by enterprise applications to determine the legal age group of the user. This property is read-only and calculated
        /// based on ageGroup and consentProvidedForMinor properties. Allowed values: null, minorWithOutParentalConsent, minorWithParentalConsent,
        /// minorNoParentalConsentRequired, notAdult and adult. Refer to the legal age group property definitions for further information.
        /// Returned only on $select.
        /// </summary>
        string LegalAgeGroupClassification { get; set; }
        /// <summary>
        /// The SMTP address for the user, for example, admin@contoso.com. Changes to this property will also update the user's proxyAddresses
        /// collection to include the value as an SMTP address. While this property can contain accent characters, using them can
        /// cause access issues with other Microsoft applications for the user. Supports $filter (eq, ne, NOT, ge, le, in, startsWith,
        /// endsWith).
        /// </summary>
        string Mail { get; set; }
        /// <summary>
        /// The mail alias for the user. This property must be specified when a user is created. Maximum length is 64 characters.
        /// Supports $filter (eq, ne, NOT, ge, le, in, startsWith).
        /// </summary>
        string MailNickname { get; set; }
        /// <summary>
        /// The primary cellular telephone number for the user. Read-only for users synced from on-premises directory. Supports $filter
        /// (eq, ne, NOT, ge, le, in, startsWith).
        /// </summary>
        string MobilePhone { get; set; }
        /// <summary>
        /// The office location in the user's place of business. Maximum length is 128 characters. Supports $filter (eq, ne, NOT,
        /// ge, le, in, startsWith).
        /// </summary>
        string OfficeLocation { get; set; }
        /// <summary>
        /// This property is used to associate an on-premises Active Directory user account to their Azure AD user object. This property
        /// must be specified when creating a new user account in the Graph if you are using a federated domain for the user's userPrincipalName
        /// (UPN) property. NOTE: The $ and _ characters cannot be used when specifying this property. Returned only on $select. Supports
        /// $filter (eq, ne, NOT, ge, le, in)..
        /// </summary>
        string OnPremisesImmutableId { get; set; }
        /// <summary>
        /// The last time at which the object was synced with the on-premises directory. The Timestamp type represents date and time
        /// information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
        /// Read-only. Supports $filter (eq, ne, not, ge, le, in).
        /// </summary>
        global::System.DateTime? OnPremisesLastSyncDateTime { get; set; }
        /// <summary>
        /// true if this object is synced from an on-premises directory; false if this object was originally synced from an on-premises
        /// directory but is no longer synced; null if this object has never been synced from an on-premises directory (default).
        /// Read-only. Supports $filter (eq, ne, not, in, and eq on null values).
        /// </summary>
        bool? OnPremisesSyncEnabled { get; set; }
        /// <summary>Operating system of the device. Windows, iOS, etc. This property is read-only.</summary>
        string OperatingSystem { get; set; }
        /// <summary>
        /// Operating system version of the device. Required. Supports $filter (eq, ne, not, ge, le, startsWith, and eq on null values).
        /// </summary>
        string OperatingSystemVersion { get; set; }
        /// <summary>
        /// A list of additional email addresses for the user; for example: ['bob@contoso.com', 'Robert@fabrikam.com'].NOTE: While
        /// this property can contain accent characters, they can cause access issues to first-party applications for the user.Supports
        /// $filter (eq, NOT, ge, le, in, startsWith).
        /// </summary>
        string[] OtherMail { get; set; }
        /// <summary>
        /// Specifies password policies for the user. This value is an enumeration with one possible value being DisableStrongPassword,
        /// which allows weaker passwords than the default policy to be specified. DisablePasswordExpiration can also be specified.
        /// The two may be specified together; for example: DisablePasswordExpiration, DisableStrongPassword.Supports $filter (ne,
        /// NOT).
        /// </summary>
        string PasswordPolicy { get; set; }
        /// <summary>passwordProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphPasswordProfile PasswordProfile { get; set; }
        /// <summary>
        /// For internal use only. Not nullable. Supports $filter (eq, not, ge, le, startsWith).
        /// </summary>
        string[] PhysicalId { get; set; }
        /// <summary>
        /// The postal code for the user's postal address. The postal code is specific to the user's country/region. In the United
        /// States of America, this attribute contains the ZIP code. Maximum length is 40 characters. Supports $filter (eq, ne, NOT,
        /// ge, le, in, startsWith).
        /// </summary>
        string PostalCode { get; set; }
        /// <summary>
        /// The preferred language for the user. Should follow ISO 639-1 Code; for example en-US. Supports $filter (eq, ne, NOT, ge,
        /// le, in, startsWith).
        /// </summary>
        string PreferredLanguage { get; set; }
        /// <summary>
        /// For example: ['SMTP: bob@contoso.com', 'smtp: bob@sales.contoso.com']. Read-only, Not nullable. Supports $filter (eq,
        /// NOT, ge, le, startsWith).
        /// </summary>
        string[] ProxyAddress { get; set; }
        /// <summary>
        /// true if the Outlook global address list should contain this user, otherwise false. If not set, this will be treated as
        /// true. For users invited through the invitation manager, this property will be set to false. Supports $filter (eq, ne,
        /// NOT, in).
        /// </summary>
        bool? ShowInAddressList { get; set; }
        /// <summary>
        /// Any refresh tokens or sessions tokens (session cookies) issued before this time are invalid, and applications will get
        /// an error when using an invalid refresh or sessions token to acquire a delegated access token (to access APIs such as Microsoft
        /// Graph). If this happens, the application will need to acquire a new refresh token by making a request to the authorize
        /// endpoint. Read-only. Use revokeSignInSessions to reset.
        /// </summary>
        global::System.DateTime? SignInSessionsValidFromDateTime { get; set; }
        /// <summary>
        /// The state or province in the user's address. Maximum length is 128 characters. Supports $filter (eq, ne, NOT, ge, le,
        /// in, startsWith).
        /// </summary>
        string State { get; set; }
        /// <summary>
        /// The street address of the user's place of business. Maximum length is 1024 characters. Supports $filter (eq, ne, NOT,
        /// ge, le, in, startsWith).
        /// </summary>
        string StreetAddress { get; set; }
        /// <summary>
        /// The user's surname (family name or last name). Maximum length is 64 characters. Supports $filter (eq, ne, NOT, ge, le,
        /// in, startsWith).
        /// </summary>
        string Surname { get; set; }
        /// <summary>
        /// Type of trust for the joined device. Read-only. Possible values: Workplace (indicates bring your own personal devices),
        /// AzureAd (Cloud only joined devices), ServerAd (on-premises domain joined devices joined to Azure AD). For more details,
        /// see Introduction to device management in Azure Active Directory
        /// </summary>
        string TrustType { get; set; }
        /// <summary>
        /// A two letter country code (ISO standard 3166). Required for users that will be assigned licenses due to legal requirement
        /// to check for availability of services in countries. Examples include: US, JP, and GB. Not nullable. Supports $filter (eq,
        /// ne, NOT, ge, le, in, startsWith).
        /// </summary>
        string UsageLocation { get; set; }
        /// <summary>
        /// The user principal name (UPN) of the user. The UPN is an Internet-style login name for the user based on the Internet
        /// standard RFC 822. By convention, this should map to the user's email name. The general format is alias@domain, where domain
        /// must be present in the tenant's collection of verified domains. This property is required when a user is created. The
        /// verified domains for the tenant can be accessed from the verifiedDomains property of organization.NOTE: While this property
        /// can contain accent characters, they can cause access issues to first-party applications for the user. Supports $filter
        /// (eq, ne, NOT, ge, le, in, startsWith, endsWith) and $orderBy.
        /// </summary>
        string UserPrincipalName { get; set; }
        /// <summary>
        /// A string value that can be used to classify user types in your directory, such as Member and Guest. Supports $filter (eq,
        /// ne, NOT, in,).
        /// </summary>
        string UserType { get; set; }

    }
}