// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Extensions;

    /// <summary>localeInfo</summary>
    public partial class MicrosoftGraphLocaleInfo :
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphLocaleInfo,
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphLocaleInfoInternal
    {

        /// <summary>Backing field for <see cref="DisplayName" /> property.</summary>
        private string _displayName;

        /// <summary>
        /// A name representing the user's locale in natural language, for example, 'English (United States)'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string DisplayName { get => this._displayName; set => this._displayName = value; }

        /// <summary>Backing field for <see cref="Locale" /> property.</summary>
        private string _locale;

        /// <summary>
        /// A locale representation for the user, which includes the user's preferred language and country/region. For example, 'en-us'.
        /// The language component follows 2-letter codes as defined in ISO 639-1, and the country component follows 2-letter codes
        /// as defined in ISO 3166-1 alpha-2.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string Locale { get => this._locale; set => this._locale = value; }

        /// <summary>Creates an new <see cref="MicrosoftGraphLocaleInfo" /> instance.</summary>
        public MicrosoftGraphLocaleInfo()
        {

        }
    }
    /// localeInfo
    public partial interface IMicrosoftGraphLocaleInfo :
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IAssociativeArray<global::System.Object>
    {
        /// <summary>
        /// A name representing the user's locale in natural language, for example, 'English (United States)'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A name representing the user's locale in natural language, for example, 'English (United States)'.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>
        /// A locale representation for the user, which includes the user's preferred language and country/region. For example, 'en-us'.
        /// The language component follows 2-letter codes as defined in ISO 639-1, and the country component follows 2-letter codes
        /// as defined in ISO 3166-1 alpha-2.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A locale representation for the user, which includes the user's preferred language and country/region. For example, 'en-us'. The language component follows 2-letter codes as defined in ISO 639-1, and the country component follows 2-letter codes as defined in ISO 3166-1 alpha-2.",
        SerializedName = @"locale",
        PossibleTypes = new [] { typeof(string) })]
        string Locale { get; set; }

    }
    /// localeInfo
    internal partial interface IMicrosoftGraphLocaleInfoInternal

    {
        /// <summary>
        /// A name representing the user's locale in natural language, for example, 'English (United States)'.
        /// </summary>
        string DisplayName { get; set; }
        /// <summary>
        /// A locale representation for the user, which includes the user's preferred language and country/region. For example, 'en-us'.
        /// The language component follows 2-letter codes as defined in ISO 639-1, and the country component follows 2-letter codes
        /// as defined in ISO 3166-1 alpha-2.
        /// </summary>
        string Locale { get; set; }

    }
}