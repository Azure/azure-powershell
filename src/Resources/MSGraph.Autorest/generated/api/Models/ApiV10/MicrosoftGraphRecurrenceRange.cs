// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Extensions;

    /// <summary>recurrenceRange</summary>
    public partial class MicrosoftGraphRecurrenceRange :
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphRecurrenceRange,
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphRecurrenceRangeInternal
    {

        /// <summary>Backing field for <see cref="EndDate" /> property.</summary>
        private global::System.DateTime? _endDate;

        /// <summary>
        /// The date to stop applying the recurrence pattern. Depending on the recurrence pattern of the event, the last occurrence
        /// of the meeting may not be this date. Required if type is endDate.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public global::System.DateTime? EndDate { get => this._endDate; set => this._endDate = value; }

        /// <summary>Backing field for <see cref="NumberOfOccurrence" /> property.</summary>
        private int? _numberOfOccurrence;

        /// <summary>
        /// The number of times to repeat the event. Required and must be positive if type is numbered.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public int? NumberOfOccurrence { get => this._numberOfOccurrence; set => this._numberOfOccurrence = value; }

        /// <summary>Backing field for <see cref="RecurrenceTimeZone" /> property.</summary>
        private string _recurrenceTimeZone;

        /// <summary>
        /// Time zone for the startDate and endDate properties. Optional. If not specified, the time zone of the event is used.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string RecurrenceTimeZone { get => this._recurrenceTimeZone; set => this._recurrenceTimeZone = value; }

        /// <summary>Backing field for <see cref="StartDate" /> property.</summary>
        private global::System.DateTime? _startDate;

        /// <summary>
        /// The date to start applying the recurrence pattern. The first occurrence of the meeting may be this date or later, depending
        /// on the recurrence pattern of the event. Must be the same value as the start property of the recurring event. Required.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public global::System.DateTime? StartDate { get => this._startDate; set => this._startDate = value; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string Type { get => this._type; set => this._type = value; }

        /// <summary>Creates an new <see cref="MicrosoftGraphRecurrenceRange" /> instance.</summary>
        public MicrosoftGraphRecurrenceRange()
        {

        }
    }
    /// recurrenceRange
    public partial interface IMicrosoftGraphRecurrenceRange :
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IAssociativeArray<global::System.Object>
    {
        /// <summary>
        /// The date to stop applying the recurrence pattern. Depending on the recurrence pattern of the event, the last occurrence
        /// of the meeting may not be this date. Required if type is endDate.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The date to stop applying the recurrence pattern. Depending on the recurrence pattern of the event, the last occurrence of the meeting may not be this date. Required if type is endDate.",
        SerializedName = @"endDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? EndDate { get; set; }
        /// <summary>
        /// The number of times to repeat the event. Required and must be positive if type is numbered.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of times to repeat the event. Required and must be positive if type is numbered.",
        SerializedName = @"numberOfOccurrences",
        PossibleTypes = new [] { typeof(int) })]
        int? NumberOfOccurrence { get; set; }
        /// <summary>
        /// Time zone for the startDate and endDate properties. Optional. If not specified, the time zone of the event is used.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Time zone for the startDate and endDate properties. Optional. If not specified, the time zone of the event is used.",
        SerializedName = @"recurrenceTimeZone",
        PossibleTypes = new [] { typeof(string) })]
        string RecurrenceTimeZone { get; set; }
        /// <summary>
        /// The date to start applying the recurrence pattern. The first occurrence of the meeting may be this date or later, depending
        /// on the recurrence pattern of the event. Must be the same value as the start property of the recurring event. Required.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The date to start applying the recurrence pattern. The first occurrence of the meeting may be this date or later, depending on the recurrence pattern of the event. Must be the same value as the start property of the recurring event. Required.",
        SerializedName = @"startDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? StartDate { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get; set; }

    }
    /// recurrenceRange
    internal partial interface IMicrosoftGraphRecurrenceRangeInternal

    {
        /// <summary>
        /// The date to stop applying the recurrence pattern. Depending on the recurrence pattern of the event, the last occurrence
        /// of the meeting may not be this date. Required if type is endDate.
        /// </summary>
        global::System.DateTime? EndDate { get; set; }
        /// <summary>
        /// The number of times to repeat the event. Required and must be positive if type is numbered.
        /// </summary>
        int? NumberOfOccurrence { get; set; }
        /// <summary>
        /// Time zone for the startDate and endDate properties. Optional. If not specified, the time zone of the event is used.
        /// </summary>
        string RecurrenceTimeZone { get; set; }
        /// <summary>
        /// The date to start applying the recurrence pattern. The first occurrence of the meeting may be this date or later, depending
        /// on the recurrence pattern of the event. Must be the same value as the start property of the recurring event. Required.
        /// </summary>
        global::System.DateTime? StartDate { get; set; }

        string Type { get; set; }

    }
}