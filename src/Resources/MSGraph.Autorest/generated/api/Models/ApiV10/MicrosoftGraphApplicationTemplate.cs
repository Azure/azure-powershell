// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Extensions;

    /// <summary>applicationTemplate</summary>
    public partial class MicrosoftGraphApplicationTemplate :
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphApplicationTemplate,
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphApplicationTemplateInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphEntity"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphEntity __microsoftGraphEntity = new Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.MicrosoftGraphEntity();

        /// <summary>Backing field for <see cref="Category" /> property.</summary>
        private string[] _category;

        /// <summary>
        /// The list of categories for the application. Supported values can be: Collaboration, Business Management, Consumer, Content
        /// management, CRM, Data services, Developer services, E-commerce, Education, ERP, Finance, Health, Human resources, IT infrastructure,
        /// Mail, Management, Marketing, Media, Productivity, Project management, Telecommunications, Tools, Travel, and Web design
        /// & hosting.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string[] Category { get => this._category; set => this._category = value; }

        /// <summary>Backing field for <see cref="Description" /> property.</summary>
        private string _description;

        /// <summary>A description of the application.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string Description { get => this._description; set => this._description = value; }

        /// <summary>Backing field for <see cref="DisplayName" /> property.</summary>
        private string _displayName;

        /// <summary>The name of the application.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string DisplayName { get => this._displayName; set => this._displayName = value; }

        /// <summary>Backing field for <see cref="HomePageUrl" /> property.</summary>
        private string _homePageUrl;

        /// <summary>The home page URL of the application.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string HomePageUrl { get => this._homePageUrl; set => this._homePageUrl = value; }

        /// <summary>Read-only.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphEntityInternal)__microsoftGraphEntity).Id; }

        /// <summary>Backing field for <see cref="LogoUrl" /> property.</summary>
        private string _logoUrl;

        /// <summary>The URL to get the logo for this application.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string LogoUrl { get => this._logoUrl; set => this._logoUrl = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphEntityInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphEntityInternal)__microsoftGraphEntity).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphEntityInternal)__microsoftGraphEntity).Id = value; }

        /// <summary>Backing field for <see cref="Publisher" /> property.</summary>
        private string _publisher;

        /// <summary>The name of the publisher for this application.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string Publisher { get => this._publisher; set => this._publisher = value; }

        /// <summary>Backing field for <see cref="SupportedProvisioningType" /> property.</summary>
        private string[] _supportedProvisioningType;

        /// <summary>
        /// The list of provisioning modes supported by this application. The only valid value is sync.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string[] SupportedProvisioningType { get => this._supportedProvisioningType; set => this._supportedProvisioningType = value; }

        /// <summary>Backing field for <see cref="SupportedSingleSignOnMode" /> property.</summary>
        private string[] _supportedSingleSignOnMode;

        /// <summary>
        /// The list of single sign-on modes supported by this application. The supported values are oidc, password, saml, and notSupported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string[] SupportedSingleSignOnMode { get => this._supportedSingleSignOnMode; set => this._supportedSingleSignOnMode = value; }

        /// <summary>Creates an new <see cref="MicrosoftGraphApplicationTemplate" /> instance.</summary>
        public MicrosoftGraphApplicationTemplate()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__microsoftGraphEntity), __microsoftGraphEntity);
            await eventListener.AssertObjectIsValid(nameof(__microsoftGraphEntity), __microsoftGraphEntity);
        }
    }
    /// applicationTemplate
    public partial interface IMicrosoftGraphApplicationTemplate :
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphEntity,
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IAssociativeArray<global::System.Object>
    {
        /// <summary>
        /// The list of categories for the application. Supported values can be: Collaboration, Business Management, Consumer, Content
        /// management, CRM, Data services, Developer services, E-commerce, Education, ERP, Finance, Health, Human resources, IT infrastructure,
        /// Mail, Management, Marketing, Media, Productivity, Project management, Telecommunications, Tools, Travel, and Web design
        /// & hosting.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of categories for the application. Supported values can be: Collaboration, Business Management, Consumer, Content management, CRM, Data services, Developer services, E-commerce, Education, ERP, Finance, Health, Human resources, IT infrastructure, Mail, Management, Marketing, Media, Productivity, Project management, Telecommunications, Tools, Travel, and Web design & hosting.",
        SerializedName = @"categories",
        PossibleTypes = new [] { typeof(string) })]
        string[] Category { get; set; }
        /// <summary>A description of the application.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A description of the application.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>The name of the application.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the application.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>The home page URL of the application.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The home page URL of the application.",
        SerializedName = @"homePageUrl",
        PossibleTypes = new [] { typeof(string) })]
        string HomePageUrl { get; set; }
        /// <summary>The URL to get the logo for this application.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The URL to get the logo for this application.",
        SerializedName = @"logoUrl",
        PossibleTypes = new [] { typeof(string) })]
        string LogoUrl { get; set; }
        /// <summary>The name of the publisher for this application.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the publisher for this application.",
        SerializedName = @"publisher",
        PossibleTypes = new [] { typeof(string) })]
        string Publisher { get; set; }
        /// <summary>
        /// The list of provisioning modes supported by this application. The only valid value is sync.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of provisioning modes supported by this application. The only valid value is sync.",
        SerializedName = @"supportedProvisioningTypes",
        PossibleTypes = new [] { typeof(string) })]
        string[] SupportedProvisioningType { get; set; }
        /// <summary>
        /// The list of single sign-on modes supported by this application. The supported values are oidc, password, saml, and notSupported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of single sign-on modes supported by this application. The supported values are oidc, password, saml, and notSupported.",
        SerializedName = @"supportedSingleSignOnModes",
        PossibleTypes = new [] { typeof(string) })]
        string[] SupportedSingleSignOnMode { get; set; }

    }
    /// applicationTemplate
    internal partial interface IMicrosoftGraphApplicationTemplateInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphEntityInternal
    {
        /// <summary>
        /// The list of categories for the application. Supported values can be: Collaboration, Business Management, Consumer, Content
        /// management, CRM, Data services, Developer services, E-commerce, Education, ERP, Finance, Health, Human resources, IT infrastructure,
        /// Mail, Management, Marketing, Media, Productivity, Project management, Telecommunications, Tools, Travel, and Web design
        /// & hosting.
        /// </summary>
        string[] Category { get; set; }
        /// <summary>A description of the application.</summary>
        string Description { get; set; }
        /// <summary>The name of the application.</summary>
        string DisplayName { get; set; }
        /// <summary>The home page URL of the application.</summary>
        string HomePageUrl { get; set; }
        /// <summary>The URL to get the logo for this application.</summary>
        string LogoUrl { get; set; }
        /// <summary>The name of the publisher for this application.</summary>
        string Publisher { get; set; }
        /// <summary>
        /// The list of provisioning modes supported by this application. The only valid value is sync.
        /// </summary>
        string[] SupportedProvisioningType { get; set; }
        /// <summary>
        /// The list of single sign-on modes supported by this application. The supported values are oidc, password, saml, and notSupported.
        /// </summary>
        string[] SupportedSingleSignOnMode { get; set; }

    }
}