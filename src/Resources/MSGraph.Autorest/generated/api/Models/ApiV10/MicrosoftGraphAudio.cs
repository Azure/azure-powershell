// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Extensions;

    /// <summary>audio</summary>
    public partial class MicrosoftGraphAudio :
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphAudio,
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphAudioInternal
    {

        /// <summary>Backing field for <see cref="Album" /> property.</summary>
        private string _album;

        /// <summary>The title of the album for this audio file.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string Album { get => this._album; set => this._album = value; }

        /// <summary>Backing field for <see cref="AlbumArtist" /> property.</summary>
        private string _albumArtist;

        /// <summary>The artist named on the album for the audio file.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string AlbumArtist { get => this._albumArtist; set => this._albumArtist = value; }

        /// <summary>Backing field for <see cref="Artist" /> property.</summary>
        private string _artist;

        /// <summary>The performing artist for the audio file.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string Artist { get => this._artist; set => this._artist = value; }

        /// <summary>Backing field for <see cref="Bitrate" /> property.</summary>
        private long? _bitrate;

        /// <summary>Bitrate expressed in kbps.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public long? Bitrate { get => this._bitrate; set => this._bitrate = value; }

        /// <summary>Backing field for <see cref="Composer" /> property.</summary>
        private string _composer;

        /// <summary>The name of the composer of the audio file.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string Composer { get => this._composer; set => this._composer = value; }

        /// <summary>Backing field for <see cref="Copyright" /> property.</summary>
        private string _copyright;

        /// <summary>Copyright information for the audio file.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string Copyright { get => this._copyright; set => this._copyright = value; }

        /// <summary>Backing field for <see cref="Disc" /> property.</summary>
        private int? _disc;

        /// <summary>The number of the disc this audio file came from.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public int? Disc { get => this._disc; set => this._disc = value; }

        /// <summary>Backing field for <see cref="DiscCount" /> property.</summary>
        private int? _discCount;

        /// <summary>The total number of discs in this album.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public int? DiscCount { get => this._discCount; set => this._discCount = value; }

        /// <summary>Backing field for <see cref="Duration" /> property.</summary>
        private long? _duration;

        /// <summary>Duration of the audio file, expressed in milliseconds</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public long? Duration { get => this._duration; set => this._duration = value; }

        /// <summary>Backing field for <see cref="Genre" /> property.</summary>
        private string _genre;

        /// <summary>The genre of this audio file.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string Genre { get => this._genre; set => this._genre = value; }

        /// <summary>Backing field for <see cref="HasDrm" /> property.</summary>
        private bool? _hasDrm;

        /// <summary>Indicates if the file is protected with digital rights management.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public bool? HasDrm { get => this._hasDrm; set => this._hasDrm = value; }

        /// <summary>Backing field for <see cref="IsVariableBitrate" /> property.</summary>
        private bool? _isVariableBitrate;

        /// <summary>Indicates if the file is encoded with a variable bitrate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public bool? IsVariableBitrate { get => this._isVariableBitrate; set => this._isVariableBitrate = value; }

        /// <summary>Backing field for <see cref="Title" /> property.</summary>
        private string _title;

        /// <summary>The title of the audio file.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string Title { get => this._title; set => this._title = value; }

        /// <summary>Backing field for <see cref="Track" /> property.</summary>
        private int? _track;

        /// <summary>The number of the track on the original disc for this audio file.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public int? Track { get => this._track; set => this._track = value; }

        /// <summary>Backing field for <see cref="TrackCount" /> property.</summary>
        private int? _trackCount;

        /// <summary>The total number of tracks on the original disc for this audio file.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public int? TrackCount { get => this._trackCount; set => this._trackCount = value; }

        /// <summary>Backing field for <see cref="Year" /> property.</summary>
        private int? _year;

        /// <summary>The year the audio file was recorded.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public int? Year { get => this._year; set => this._year = value; }

        /// <summary>Creates an new <see cref="MicrosoftGraphAudio" /> instance.</summary>
        public MicrosoftGraphAudio()
        {

        }
    }
    /// audio
    public partial interface IMicrosoftGraphAudio :
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IAssociativeArray<global::System.Object>
    {
        /// <summary>The title of the album for this audio file.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The title of the album for this audio file.",
        SerializedName = @"album",
        PossibleTypes = new [] { typeof(string) })]
        string Album { get; set; }
        /// <summary>The artist named on the album for the audio file.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The artist named on the album for the audio file.",
        SerializedName = @"albumArtist",
        PossibleTypes = new [] { typeof(string) })]
        string AlbumArtist { get; set; }
        /// <summary>The performing artist for the audio file.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The performing artist for the audio file.",
        SerializedName = @"artist",
        PossibleTypes = new [] { typeof(string) })]
        string Artist { get; set; }
        /// <summary>Bitrate expressed in kbps.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Bitrate expressed in kbps.",
        SerializedName = @"bitrate",
        PossibleTypes = new [] { typeof(long) })]
        long? Bitrate { get; set; }
        /// <summary>The name of the composer of the audio file.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the composer of the audio file.",
        SerializedName = @"composers",
        PossibleTypes = new [] { typeof(string) })]
        string Composer { get; set; }
        /// <summary>Copyright information for the audio file.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Copyright information for the audio file.",
        SerializedName = @"copyright",
        PossibleTypes = new [] { typeof(string) })]
        string Copyright { get; set; }
        /// <summary>The number of the disc this audio file came from.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of the disc this audio file came from.",
        SerializedName = @"disc",
        PossibleTypes = new [] { typeof(int) })]
        int? Disc { get; set; }
        /// <summary>The total number of discs in this album.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The total number of discs in this album.",
        SerializedName = @"discCount",
        PossibleTypes = new [] { typeof(int) })]
        int? DiscCount { get; set; }
        /// <summary>Duration of the audio file, expressed in milliseconds</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Duration of the audio file, expressed in milliseconds",
        SerializedName = @"duration",
        PossibleTypes = new [] { typeof(long) })]
        long? Duration { get; set; }
        /// <summary>The genre of this audio file.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The genre of this audio file.",
        SerializedName = @"genre",
        PossibleTypes = new [] { typeof(string) })]
        string Genre { get; set; }
        /// <summary>Indicates if the file is protected with digital rights management.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates if the file is protected with digital rights management.",
        SerializedName = @"hasDrm",
        PossibleTypes = new [] { typeof(bool) })]
        bool? HasDrm { get; set; }
        /// <summary>Indicates if the file is encoded with a variable bitrate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates if the file is encoded with a variable bitrate.",
        SerializedName = @"isVariableBitrate",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsVariableBitrate { get; set; }
        /// <summary>The title of the audio file.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The title of the audio file.",
        SerializedName = @"title",
        PossibleTypes = new [] { typeof(string) })]
        string Title { get; set; }
        /// <summary>The number of the track on the original disc for this audio file.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of the track on the original disc for this audio file.",
        SerializedName = @"track",
        PossibleTypes = new [] { typeof(int) })]
        int? Track { get; set; }
        /// <summary>The total number of tracks on the original disc for this audio file.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The total number of tracks on the original disc for this audio file.",
        SerializedName = @"trackCount",
        PossibleTypes = new [] { typeof(int) })]
        int? TrackCount { get; set; }
        /// <summary>The year the audio file was recorded.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The year the audio file was recorded.",
        SerializedName = @"year",
        PossibleTypes = new [] { typeof(int) })]
        int? Year { get; set; }

    }
    /// audio
    internal partial interface IMicrosoftGraphAudioInternal

    {
        /// <summary>The title of the album for this audio file.</summary>
        string Album { get; set; }
        /// <summary>The artist named on the album for the audio file.</summary>
        string AlbumArtist { get; set; }
        /// <summary>The performing artist for the audio file.</summary>
        string Artist { get; set; }
        /// <summary>Bitrate expressed in kbps.</summary>
        long? Bitrate { get; set; }
        /// <summary>The name of the composer of the audio file.</summary>
        string Composer { get; set; }
        /// <summary>Copyright information for the audio file.</summary>
        string Copyright { get; set; }
        /// <summary>The number of the disc this audio file came from.</summary>
        int? Disc { get; set; }
        /// <summary>The total number of discs in this album.</summary>
        int? DiscCount { get; set; }
        /// <summary>Duration of the audio file, expressed in milliseconds</summary>
        long? Duration { get; set; }
        /// <summary>The genre of this audio file.</summary>
        string Genre { get; set; }
        /// <summary>Indicates if the file is protected with digital rights management.</summary>
        bool? HasDrm { get; set; }
        /// <summary>Indicates if the file is encoded with a variable bitrate.</summary>
        bool? IsVariableBitrate { get; set; }
        /// <summary>The title of the audio file.</summary>
        string Title { get; set; }
        /// <summary>The number of the track on the original disc for this audio file.</summary>
        int? Track { get; set; }
        /// <summary>The total number of tracks on the original disc for this audio file.</summary>
        int? TrackCount { get; set; }
        /// <summary>The year the audio file was recorded.</summary>
        int? Year { get; set; }

    }
}