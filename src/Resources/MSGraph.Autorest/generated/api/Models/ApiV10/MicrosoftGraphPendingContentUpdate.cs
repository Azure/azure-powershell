// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Extensions;

    /// <summary>pendingContentUpdate</summary>
    public partial class MicrosoftGraphPendingContentUpdate :
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphPendingContentUpdate,
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphPendingContentUpdateInternal
    {

        /// <summary>Backing field for <see cref="QueuedDateTime" /> property.</summary>
        private global::System.DateTime? _queuedDateTime;

        /// <summary>Date and time the pending binary operation was queued in UTC time. Read-only.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public global::System.DateTime? QueuedDateTime { get => this._queuedDateTime; set => this._queuedDateTime = value; }

        /// <summary>Creates an new <see cref="MicrosoftGraphPendingContentUpdate" /> instance.</summary>
        public MicrosoftGraphPendingContentUpdate()
        {

        }
    }
    /// pendingContentUpdate
    public partial interface IMicrosoftGraphPendingContentUpdate :
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IAssociativeArray<global::System.Object>
    {
        /// <summary>Date and time the pending binary operation was queued in UTC time. Read-only.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Date and time the pending binary operation was queued in UTC time. Read-only.",
        SerializedName = @"queuedDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? QueuedDateTime { get; set; }

    }
    /// pendingContentUpdate
    internal partial interface IMicrosoftGraphPendingContentUpdateInternal

    {
        /// <summary>Date and time the pending binary operation was queued in UTC time. Read-only.</summary>
        global::System.DateTime? QueuedDateTime { get; set; }

    }
}