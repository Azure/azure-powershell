// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Extensions;

    /// <summary>passwordProfile</summary>
    public partial class MicrosoftGraphPasswordProfile :
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphPasswordProfile,
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphPasswordProfileInternal
    {

        /// <summary>Backing field for <see cref="ForceChangePasswordNextSignIn" /> property.</summary>
        private bool? _forceChangePasswordNextSignIn;

        /// <summary>
        /// true if the user must change her password on the next login; otherwise false. If not set, default is false. NOTE: For
        /// Azure B2C tenants, set to false and instead use custom policies and user flows to force password reset at first sign in.
        /// See Force password reset at first logon.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public bool? ForceChangePasswordNextSignIn { get => this._forceChangePasswordNextSignIn; set => this._forceChangePasswordNextSignIn = value; }

        /// <summary>Backing field for <see cref="ForceChangePasswordNextSignInWithMfa" /> property.</summary>
        private bool? _forceChangePasswordNextSignInWithMfa;

        /// <summary>
        /// If true, at next sign-in, the user must perform a multi-factor authentication (MFA) before being forced to change their
        /// password. The behavior is identical to forceChangePasswordNextSignIn except that the user is required to first perform
        /// a multi-factor authentication before password change. After a password change, this property will be automatically reset
        /// to false. If not set, default is false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public bool? ForceChangePasswordNextSignInWithMfa { get => this._forceChangePasswordNextSignInWithMfa; set => this._forceChangePasswordNextSignInWithMfa = value; }

        /// <summary>Backing field for <see cref="Password" /> property.</summary>
        private string _password;

        /// <summary>
        /// The password for the user. This property is required when a user is created. It can be updated, but the user will be required
        /// to change the password on the next login. The password must satisfy minimum requirements as specified by the user’s passwordPolicies
        /// property. By default, a strong password is required.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string Password { get => this._password; set => this._password = value; }

        /// <summary>Creates an new <see cref="MicrosoftGraphPasswordProfile" /> instance.</summary>
        public MicrosoftGraphPasswordProfile()
        {

        }
    }
    /// passwordProfile
    public partial interface IMicrosoftGraphPasswordProfile :
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IAssociativeArray<global::System.Object>
    {
        /// <summary>
        /// true if the user must change her password on the next login; otherwise false. If not set, default is false. NOTE: For
        /// Azure B2C tenants, set to false and instead use custom policies and user flows to force password reset at first sign in.
        /// See Force password reset at first logon.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"true if the user must change her password on the next login; otherwise false. If not set, default is false. NOTE:  For Azure B2C tenants, set to false and instead use custom policies and user flows to force password reset at first sign in. See Force password reset at first logon.",
        SerializedName = @"forceChangePasswordNextSignIn",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ForceChangePasswordNextSignIn { get; set; }
        /// <summary>
        /// If true, at next sign-in, the user must perform a multi-factor authentication (MFA) before being forced to change their
        /// password. The behavior is identical to forceChangePasswordNextSignIn except that the user is required to first perform
        /// a multi-factor authentication before password change. After a password change, this property will be automatically reset
        /// to false. If not set, default is false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If true, at next sign-in, the user must perform a multi-factor authentication (MFA) before being forced to change their password. The behavior is identical to forceChangePasswordNextSignIn except that the user is required to first perform a multi-factor authentication before password change. After a password change, this property will be automatically reset to false. If not set, default is false.",
        SerializedName = @"forceChangePasswordNextSignInWithMfa",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ForceChangePasswordNextSignInWithMfa { get; set; }
        /// <summary>
        /// The password for the user. This property is required when a user is created. It can be updated, but the user will be required
        /// to change the password on the next login. The password must satisfy minimum requirements as specified by the user’s passwordPolicies
        /// property. By default, a strong password is required.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The password for the user. This property is required when a user is created. It can be updated, but the user will be required to change the password on the next login. The password must satisfy minimum requirements as specified by the user’s passwordPolicies property. By default, a strong password is required.",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(string) })]
        string Password { get; set; }

    }
    /// passwordProfile
    internal partial interface IMicrosoftGraphPasswordProfileInternal

    {
        /// <summary>
        /// true if the user must change her password on the next login; otherwise false. If not set, default is false. NOTE: For
        /// Azure B2C tenants, set to false and instead use custom policies and user flows to force password reset at first sign in.
        /// See Force password reset at first logon.
        /// </summary>
        bool? ForceChangePasswordNextSignIn { get; set; }
        /// <summary>
        /// If true, at next sign-in, the user must perform a multi-factor authentication (MFA) before being forced to change their
        /// password. The behavior is identical to forceChangePasswordNextSignIn except that the user is required to first perform
        /// a multi-factor authentication before password change. After a password change, this property will be automatically reset
        /// to false. If not set, default is false.
        /// </summary>
        bool? ForceChangePasswordNextSignInWithMfa { get; set; }
        /// <summary>
        /// The password for the user. This property is required when a user is created. It can be updated, but the user will be required
        /// to change the password on the next login. The password must satisfy minimum requirements as specified by the user’s passwordPolicies
        /// property. By default, a strong password is required.
        /// </summary>
        string Password { get; set; }

    }
}