// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Extensions;

    /// <summary>permissionScope</summary>
    public partial class MicrosoftGraphPermissionScope :
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphPermissionScope,
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphPermissionScopeInternal
    {

        /// <summary>Backing field for <see cref="AdminConsentDescription" /> property.</summary>
        private string _adminConsentDescription;

        /// <summary>
        /// A description of the delegated permissions, intended to be read by an administrator granting the permission on behalf
        /// of all users. This text appears in tenant-wide admin consent experiences.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string AdminConsentDescription { get => this._adminConsentDescription; set => this._adminConsentDescription = value; }

        /// <summary>Backing field for <see cref="AdminConsentDisplayName" /> property.</summary>
        private string _adminConsentDisplayName;

        /// <summary>
        /// The permission's title, intended to be read by an administrator granting the permission on behalf of all users.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string AdminConsentDisplayName { get => this._adminConsentDisplayName; set => this._adminConsentDisplayName = value; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>
        /// Unique delegated permission identifier inside the collection of delegated permissions defined for a resource application.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string Id { get => this._id; set => this._id = value; }

        /// <summary>Backing field for <see cref="IsEnabled" /> property.</summary>
        private bool? _isEnabled;

        /// <summary>
        /// When creating or updating a permission, this property must be set to true (which is the default). To delete a permission,
        /// this property must first be set to false. At that point, in a subsequent call, the permission may be removed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public bool? IsEnabled { get => this._isEnabled; set => this._isEnabled = value; }

        /// <summary>Backing field for <see cref="Origin" /> property.</summary>
        private string _origin;

        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string Origin { get => this._origin; set => this._origin = value; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>
        /// Specifies whether this delegated permission should be considered safe for non-admin users to consent to on behalf of themselves,
        /// or whether an administrator should be required for consent to the permissions. This will be the default behavior, but
        /// each customer can choose to customize the behavior in their organization (by allowing, restricting or limiting user consent
        /// to this delegated permission.)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string Type { get => this._type; set => this._type = value; }

        /// <summary>Backing field for <see cref="UserConsentDescription" /> property.</summary>
        private string _userConsentDescription;

        /// <summary>
        /// A description of the delegated permissions, intended to be read by a user granting the permission on their own behalf.
        /// This text appears in consent experiences where the user is consenting only on behalf of themselves.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string UserConsentDescription { get => this._userConsentDescription; set => this._userConsentDescription = value; }

        /// <summary>Backing field for <see cref="UserConsentDisplayName" /> property.</summary>
        private string _userConsentDisplayName;

        /// <summary>
        /// A title for the permission, intended to be read by a user granting the permission on their own behalf. This text appears
        /// in consent experiences where the user is consenting only on behalf of themselves.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string UserConsentDisplayName { get => this._userConsentDisplayName; set => this._userConsentDisplayName = value; }

        /// <summary>Backing field for <see cref="Value" /> property.</summary>
        private string _value;

        /// <summary>
        /// Specifies the value to include in the scp (scope) claim in access tokens. Must not exceed 120 characters in length. Allowed
        /// characters are : ! # $ % & ' ( ) * + , - . / : ; = ? @ [ ] ^ + _ { } ~, as well as characters in the ranges 0-9, A-Z and
        /// a-z. Any other character, including the space character, are not allowed. May not begin with ..
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string Value { get => this._value; set => this._value = value; }

        /// <summary>Creates an new <see cref="MicrosoftGraphPermissionScope" /> instance.</summary>
        public MicrosoftGraphPermissionScope()
        {

        }
    }
    /// permissionScope
    public partial interface IMicrosoftGraphPermissionScope :
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IAssociativeArray<global::System.Object>
    {
        /// <summary>
        /// A description of the delegated permissions, intended to be read by an administrator granting the permission on behalf
        /// of all users. This text appears in tenant-wide admin consent experiences.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A description of the delegated permissions, intended to be read by an administrator granting the permission on behalf of all users. This text appears in tenant-wide admin consent experiences.",
        SerializedName = @"adminConsentDescription",
        PossibleTypes = new [] { typeof(string) })]
        string AdminConsentDescription { get; set; }
        /// <summary>
        /// The permission's title, intended to be read by an administrator granting the permission on behalf of all users.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The permission's title, intended to be read by an administrator granting the permission on behalf of all users.",
        SerializedName = @"adminConsentDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string AdminConsentDisplayName { get; set; }
        /// <summary>
        /// Unique delegated permission identifier inside the collection of delegated permissions defined for a resource application.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Unique delegated permission identifier inside the collection of delegated permissions defined for a resource application.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get; set; }
        /// <summary>
        /// When creating or updating a permission, this property must be set to true (which is the default). To delete a permission,
        /// this property must first be set to false. At that point, in a subsequent call, the permission may be removed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"When creating or updating a permission, this property must be set to true (which is the default). To delete a permission, this property must first be set to false.  At that point, in a subsequent call, the permission may be removed.",
        SerializedName = @"isEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsEnabled { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"origin",
        PossibleTypes = new [] { typeof(string) })]
        string Origin { get; set; }
        /// <summary>
        /// Specifies whether this delegated permission should be considered safe for non-admin users to consent to on behalf of themselves,
        /// or whether an administrator should be required for consent to the permissions. This will be the default behavior, but
        /// each customer can choose to customize the behavior in their organization (by allowing, restricting or limiting user consent
        /// to this delegated permission.)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies whether this delegated permission should be considered safe for non-admin users to consent to on behalf of themselves, or whether an administrator should be required for consent to the permissions. This will be the default behavior, but each customer can choose to customize the behavior in their organization (by allowing, restricting or limiting user consent to this delegated permission.)",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get; set; }
        /// <summary>
        /// A description of the delegated permissions, intended to be read by a user granting the permission on their own behalf.
        /// This text appears in consent experiences where the user is consenting only on behalf of themselves.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A description of the delegated permissions, intended to be read by a user granting the permission on their own behalf. This text appears in consent experiences where the user is consenting only on behalf of themselves.",
        SerializedName = @"userConsentDescription",
        PossibleTypes = new [] { typeof(string) })]
        string UserConsentDescription { get; set; }
        /// <summary>
        /// A title for the permission, intended to be read by a user granting the permission on their own behalf. This text appears
        /// in consent experiences where the user is consenting only on behalf of themselves.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A title for the permission, intended to be read by a user granting the permission on their own behalf. This text appears in consent experiences where the user is consenting only on behalf of themselves.",
        SerializedName = @"userConsentDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string UserConsentDisplayName { get; set; }
        /// <summary>
        /// Specifies the value to include in the scp (scope) claim in access tokens. Must not exceed 120 characters in length. Allowed
        /// characters are : ! # $ % & ' ( ) * + , - . / : ; = ? @ [ ] ^ + _ { } ~, as well as characters in the ranges 0-9, A-Z and
        /// a-z. Any other character, including the space character, are not allowed. May not begin with ..
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the value to include in the scp (scope) claim in access tokens. Must not exceed 120 characters in length. Allowed characters are : ! # $ % & ' ( ) * + , - . / : ;  =  ? @ [ ] ^ + _  {  } ~, as well as characters in the ranges 0-9, A-Z and a-z. Any other character, including the space character, are not allowed. May not begin with ..",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(string) })]
        string Value { get; set; }

    }
    /// permissionScope
    internal partial interface IMicrosoftGraphPermissionScopeInternal

    {
        /// <summary>
        /// A description of the delegated permissions, intended to be read by an administrator granting the permission on behalf
        /// of all users. This text appears in tenant-wide admin consent experiences.
        /// </summary>
        string AdminConsentDescription { get; set; }
        /// <summary>
        /// The permission's title, intended to be read by an administrator granting the permission on behalf of all users.
        /// </summary>
        string AdminConsentDisplayName { get; set; }
        /// <summary>
        /// Unique delegated permission identifier inside the collection of delegated permissions defined for a resource application.
        /// </summary>
        string Id { get; set; }
        /// <summary>
        /// When creating or updating a permission, this property must be set to true (which is the default). To delete a permission,
        /// this property must first be set to false. At that point, in a subsequent call, the permission may be removed.
        /// </summary>
        bool? IsEnabled { get; set; }

        string Origin { get; set; }
        /// <summary>
        /// Specifies whether this delegated permission should be considered safe for non-admin users to consent to on behalf of themselves,
        /// or whether an administrator should be required for consent to the permissions. This will be the default behavior, but
        /// each customer can choose to customize the behavior in their organization (by allowing, restricting or limiting user consent
        /// to this delegated permission.)
        /// </summary>
        string Type { get; set; }
        /// <summary>
        /// A description of the delegated permissions, intended to be read by a user granting the permission on their own behalf.
        /// This text appears in consent experiences where the user is consenting only on behalf of themselves.
        /// </summary>
        string UserConsentDescription { get; set; }
        /// <summary>
        /// A title for the permission, intended to be read by a user granting the permission on their own behalf. This text appears
        /// in consent experiences where the user is consenting only on behalf of themselves.
        /// </summary>
        string UserConsentDisplayName { get; set; }
        /// <summary>
        /// Specifies the value to include in the scp (scope) claim in access tokens. Must not exceed 120 characters in length. Allowed
        /// characters are : ! # $ % & ' ( ) * + , - . / : ; = ? @ [ ] ^ + _ { } ~, as well as characters in the ranges 0-9, A-Z and
        /// a-z. Any other character, including the space character, are not allowed. May not begin with ..
        /// </summary>
        string Value { get; set; }

    }
}