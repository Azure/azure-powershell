// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Extensions;

    /// <summary>licenseAssignmentState</summary>
    public partial class MicrosoftGraphLicenseAssignmentState :
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphLicenseAssignmentState,
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphLicenseAssignmentStateInternal
    {

        /// <summary>Backing field for <see cref="AssignedByGroup" /> property.</summary>
        private string _assignedByGroup;

        /// <summary>
        /// The id of the group that assigns this license. If the assignment is a direct-assigned license, this field will be Null.
        /// Read-Only.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string AssignedByGroup { get => this._assignedByGroup; set => this._assignedByGroup = value; }

        /// <summary>Backing field for <see cref="DisabledPlan" /> property.</summary>
        private string[] _disabledPlan;

        /// <summary>The service plans that are disabled in this assignment. Read-Only.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string[] DisabledPlan { get => this._disabledPlan; set => this._disabledPlan = value; }

        /// <summary>Backing field for <see cref="Error" /> property.</summary>
        private string _error;

        /// <summary>
        /// License assignment failure error. If the license is assigned successfully, this field will be Null. Read-Only. Possible
        /// values: CountViolation, MutuallyExclusiveViolation, DependencyViolation, ProhibitedInUsageLocationViolation, UniquenessViolation,
        /// and Others. For more information on how to identify and resolve license assignment errors see here.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string Error { get => this._error; set => this._error = value; }

        /// <summary>Backing field for <see cref="SkuId" /> property.</summary>
        private string _skuId;

        /// <summary>The unique identifier for the SKU. Read-Only.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string SkuId { get => this._skuId; set => this._skuId = value; }

        /// <summary>Backing field for <see cref="State" /> property.</summary>
        private string _state;

        /// <summary>
        /// Indicate the current state of this assignment. Read-Only. Possible values: Active, ActiveWithError, Disabled and Error.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string State { get => this._state; set => this._state = value; }

        /// <summary>Creates an new <see cref="MicrosoftGraphLicenseAssignmentState" /> instance.</summary>
        public MicrosoftGraphLicenseAssignmentState()
        {

        }
    }
    /// licenseAssignmentState
    public partial interface IMicrosoftGraphLicenseAssignmentState :
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IAssociativeArray<global::System.Object>
    {
        /// <summary>
        /// The id of the group that assigns this license. If the assignment is a direct-assigned license, this field will be Null.
        /// Read-Only.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The id of the group that assigns this license. If the assignment is a direct-assigned license, this field will be Null. Read-Only.",
        SerializedName = @"assignedByGroup",
        PossibleTypes = new [] { typeof(string) })]
        string AssignedByGroup { get; set; }
        /// <summary>The service plans that are disabled in this assignment. Read-Only.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The service plans that are disabled in this assignment. Read-Only.",
        SerializedName = @"disabledPlans",
        PossibleTypes = new [] { typeof(string) })]
        string[] DisabledPlan { get; set; }
        /// <summary>
        /// License assignment failure error. If the license is assigned successfully, this field will be Null. Read-Only. Possible
        /// values: CountViolation, MutuallyExclusiveViolation, DependencyViolation, ProhibitedInUsageLocationViolation, UniquenessViolation,
        /// and Others. For more information on how to identify and resolve license assignment errors see here.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"License assignment failure error. If the license is assigned successfully, this field will be Null. Read-Only. Possible values: CountViolation, MutuallyExclusiveViolation, DependencyViolation, ProhibitedInUsageLocationViolation, UniquenessViolation, and Others. For more information on how to identify and resolve license assignment errors see here.",
        SerializedName = @"error",
        PossibleTypes = new [] { typeof(string) })]
        string Error { get; set; }
        /// <summary>The unique identifier for the SKU. Read-Only.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The unique identifier for the SKU. Read-Only.",
        SerializedName = @"skuId",
        PossibleTypes = new [] { typeof(string) })]
        string SkuId { get; set; }
        /// <summary>
        /// Indicate the current state of this assignment. Read-Only. Possible values: Active, ActiveWithError, Disabled and Error.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicate the current state of this assignment. Read-Only. Possible values: Active, ActiveWithError, Disabled and Error.",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(string) })]
        string State { get; set; }

    }
    /// licenseAssignmentState
    internal partial interface IMicrosoftGraphLicenseAssignmentStateInternal

    {
        /// <summary>
        /// The id of the group that assigns this license. If the assignment is a direct-assigned license, this field will be Null.
        /// Read-Only.
        /// </summary>
        string AssignedByGroup { get; set; }
        /// <summary>The service plans that are disabled in this assignment. Read-Only.</summary>
        string[] DisabledPlan { get; set; }
        /// <summary>
        /// License assignment failure error. If the license is assigned successfully, this field will be Null. Read-Only. Possible
        /// values: CountViolation, MutuallyExclusiveViolation, DependencyViolation, ProhibitedInUsageLocationViolation, UniquenessViolation,
        /// and Others. For more information on how to identify and resolve license assignment errors see here.
        /// </summary>
        string Error { get; set; }
        /// <summary>The unique identifier for the SKU. Read-Only.</summary>
        string SkuId { get; set; }
        /// <summary>
        /// Indicate the current state of this assignment. Read-Only. Possible values: Active, ActiveWithError, Disabled and Error.
        /// </summary>
        string State { get; set; }

    }
}