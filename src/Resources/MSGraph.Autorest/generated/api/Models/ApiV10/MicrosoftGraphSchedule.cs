// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Extensions;

    /// <summary>schedule</summary>
    public partial class MicrosoftGraphSchedule :
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphSchedule,
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphScheduleInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphEntity"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphEntity __microsoftGraphEntity = new Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.MicrosoftGraphEntity();

        /// <summary>Backing field for <see cref="Enabled" /> property.</summary>
        private bool? _enabled;

        /// <summary>Indicates whether the schedule is enabled for the team. Required.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public bool? Enabled { get => this._enabled; set => this._enabled = value; }

        /// <summary>Read-only.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphEntityInternal)__microsoftGraphEntity).Id; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphEntityInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphEntityInternal)__microsoftGraphEntity).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphEntityInternal)__microsoftGraphEntity).Id = value; }

        /// <summary>Backing field for <see cref="OfferShiftRequest" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphOfferShiftRequest[] _offerShiftRequest;

        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphOfferShiftRequest[] OfferShiftRequest { get => this._offerShiftRequest; set => this._offerShiftRequest = value; }

        /// <summary>Backing field for <see cref="OfferShiftRequestsEnabled" /> property.</summary>
        private bool? _offerShiftRequestsEnabled;

        /// <summary>Indicates whether offer shift requests are enabled for the schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public bool? OfferShiftRequestsEnabled { get => this._offerShiftRequestsEnabled; set => this._offerShiftRequestsEnabled = value; }

        /// <summary>Backing field for <see cref="OpenShift" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphOpenShift[] _openShift;

        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphOpenShift[] OpenShift { get => this._openShift; set => this._openShift = value; }

        /// <summary>Backing field for <see cref="OpenShiftChangeRequest" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphOpenShiftChangeRequest[] _openShiftChangeRequest;

        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphOpenShiftChangeRequest[] OpenShiftChangeRequest { get => this._openShiftChangeRequest; set => this._openShiftChangeRequest = value; }

        /// <summary>Backing field for <see cref="OpenShiftsEnabled" /> property.</summary>
        private bool? _openShiftsEnabled;

        /// <summary>Indicates whether open shifts are enabled for the schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public bool? OpenShiftsEnabled { get => this._openShiftsEnabled; set => this._openShiftsEnabled = value; }

        /// <summary>Backing field for <see cref="ProvisionStatus" /> property.</summary>
        private string _provisionStatus;

        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string ProvisionStatus { get => this._provisionStatus; set => this._provisionStatus = value; }

        /// <summary>Backing field for <see cref="ProvisionStatusCode" /> property.</summary>
        private string _provisionStatusCode;

        /// <summary>Additional information about why schedule provisioning failed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string ProvisionStatusCode { get => this._provisionStatusCode; set => this._provisionStatusCode = value; }

        /// <summary>Backing field for <see cref="SchedulingGroup" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphSchedulingGroup[] _schedulingGroup;

        /// <summary>The logical grouping of users in the schedule (usually by role).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphSchedulingGroup[] SchedulingGroup { get => this._schedulingGroup; set => this._schedulingGroup = value; }

        /// <summary>Backing field for <see cref="Shift" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphShift[] _shift;

        /// <summary>The shifts in the schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphShift[] Shift { get => this._shift; set => this._shift = value; }

        /// <summary>Backing field for <see cref="SwapShiftsChangeRequest" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphSwapShiftsChangeRequest[] _swapShiftsChangeRequest;

        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphSwapShiftsChangeRequest[] SwapShiftsChangeRequest { get => this._swapShiftsChangeRequest; set => this._swapShiftsChangeRequest = value; }

        /// <summary>Backing field for <see cref="SwapShiftsRequestsEnabled" /> property.</summary>
        private bool? _swapShiftsRequestsEnabled;

        /// <summary>Indicates whether swap shifts requests are enabled for the schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public bool? SwapShiftsRequestsEnabled { get => this._swapShiftsRequestsEnabled; set => this._swapShiftsRequestsEnabled = value; }

        /// <summary>Backing field for <see cref="TimeClockEnabled" /> property.</summary>
        private bool? _timeClockEnabled;

        /// <summary>Indicates whether time clock is enabled for the schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public bool? TimeClockEnabled { get => this._timeClockEnabled; set => this._timeClockEnabled = value; }

        /// <summary>Backing field for <see cref="TimeOffReason" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphTimeOffReason[] _timeOffReason;

        /// <summary>The set of reasons for a time off in the schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphTimeOffReason[] TimeOffReason { get => this._timeOffReason; set => this._timeOffReason = value; }

        /// <summary>Backing field for <see cref="TimeOffRequest" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphTimeOffRequest[] _timeOffRequest;

        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphTimeOffRequest[] TimeOffRequest { get => this._timeOffRequest; set => this._timeOffRequest = value; }

        /// <summary>Backing field for <see cref="TimeOffRequestsEnabled" /> property.</summary>
        private bool? _timeOffRequestsEnabled;

        /// <summary>Indicates whether time off requests are enabled for the schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public bool? TimeOffRequestsEnabled { get => this._timeOffRequestsEnabled; set => this._timeOffRequestsEnabled = value; }

        /// <summary>Backing field for <see cref="TimeZone" /> property.</summary>
        private string _timeZone;

        /// <summary>
        /// Indicates the time zone of the schedule team using tz database format. Required.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string TimeZone { get => this._timeZone; set => this._timeZone = value; }

        /// <summary>Backing field for <see cref="TimesOff" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphTimeOff[] _timesOff;

        /// <summary>The instances of times off in the schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphTimeOff[] TimesOff { get => this._timesOff; set => this._timesOff = value; }

        /// <summary>Backing field for <see cref="WorkforceIntegrationId" /> property.</summary>
        private string[] _workforceIntegrationId;

        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string[] WorkforceIntegrationId { get => this._workforceIntegrationId; set => this._workforceIntegrationId = value; }

        /// <summary>Creates an new <see cref="MicrosoftGraphSchedule" /> instance.</summary>
        public MicrosoftGraphSchedule()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__microsoftGraphEntity), __microsoftGraphEntity);
            await eventListener.AssertObjectIsValid(nameof(__microsoftGraphEntity), __microsoftGraphEntity);
        }
    }
    /// schedule
    public partial interface IMicrosoftGraphSchedule :
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphEntity,
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IAssociativeArray<global::System.Object>
    {
        /// <summary>Indicates whether the schedule is enabled for the team. Required.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether the schedule is enabled for the team. Required.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Enabled { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"offerShiftRequests",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphOfferShiftRequest) })]
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphOfferShiftRequest[] OfferShiftRequest { get; set; }
        /// <summary>Indicates whether offer shift requests are enabled for the schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether offer shift requests are enabled for the schedule.",
        SerializedName = @"offerShiftRequestsEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? OfferShiftRequestsEnabled { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"openShifts",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphOpenShift) })]
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphOpenShift[] OpenShift { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"openShiftChangeRequests",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphOpenShiftChangeRequest) })]
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphOpenShiftChangeRequest[] OpenShiftChangeRequest { get; set; }
        /// <summary>Indicates whether open shifts are enabled for the schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether open shifts are enabled for the schedule.",
        SerializedName = @"openShiftsEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? OpenShiftsEnabled { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"provisionStatus",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisionStatus { get; set; }
        /// <summary>Additional information about why schedule provisioning failed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Additional information about why schedule provisioning failed.",
        SerializedName = @"provisionStatusCode",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisionStatusCode { get; set; }
        /// <summary>The logical grouping of users in the schedule (usually by role).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The logical grouping of users in the schedule (usually by role).",
        SerializedName = @"schedulingGroups",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphSchedulingGroup) })]
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphSchedulingGroup[] SchedulingGroup { get; set; }
        /// <summary>The shifts in the schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The shifts in the schedule.",
        SerializedName = @"shifts",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphShift) })]
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphShift[] Shift { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"swapShiftsChangeRequests",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphSwapShiftsChangeRequest) })]
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphSwapShiftsChangeRequest[] SwapShiftsChangeRequest { get; set; }
        /// <summary>Indicates whether swap shifts requests are enabled for the schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether swap shifts requests are enabled for the schedule.",
        SerializedName = @"swapShiftsRequestsEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SwapShiftsRequestsEnabled { get; set; }
        /// <summary>Indicates whether time clock is enabled for the schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether time clock is enabled for the schedule.",
        SerializedName = @"timeClockEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? TimeClockEnabled { get; set; }
        /// <summary>The set of reasons for a time off in the schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The set of reasons for a time off in the schedule.",
        SerializedName = @"timeOffReasons",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphTimeOffReason) })]
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphTimeOffReason[] TimeOffReason { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"timeOffRequests",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphTimeOffRequest) })]
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphTimeOffRequest[] TimeOffRequest { get; set; }
        /// <summary>Indicates whether time off requests are enabled for the schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether time off requests are enabled for the schedule.",
        SerializedName = @"timeOffRequestsEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? TimeOffRequestsEnabled { get; set; }
        /// <summary>
        /// Indicates the time zone of the schedule team using tz database format. Required.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates the time zone of the schedule team using tz database format. Required.",
        SerializedName = @"timeZone",
        PossibleTypes = new [] { typeof(string) })]
        string TimeZone { get; set; }
        /// <summary>The instances of times off in the schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The instances of times off in the schedule.",
        SerializedName = @"timesOff",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphTimeOff) })]
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphTimeOff[] TimesOff { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"workforceIntegrationIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] WorkforceIntegrationId { get; set; }

    }
    /// schedule
    internal partial interface IMicrosoftGraphScheduleInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphEntityInternal
    {
        /// <summary>Indicates whether the schedule is enabled for the team. Required.</summary>
        bool? Enabled { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphOfferShiftRequest[] OfferShiftRequest { get; set; }
        /// <summary>Indicates whether offer shift requests are enabled for the schedule.</summary>
        bool? OfferShiftRequestsEnabled { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphOpenShift[] OpenShift { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphOpenShiftChangeRequest[] OpenShiftChangeRequest { get; set; }
        /// <summary>Indicates whether open shifts are enabled for the schedule.</summary>
        bool? OpenShiftsEnabled { get; set; }

        string ProvisionStatus { get; set; }
        /// <summary>Additional information about why schedule provisioning failed.</summary>
        string ProvisionStatusCode { get; set; }
        /// <summary>The logical grouping of users in the schedule (usually by role).</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphSchedulingGroup[] SchedulingGroup { get; set; }
        /// <summary>The shifts in the schedule.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphShift[] Shift { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphSwapShiftsChangeRequest[] SwapShiftsChangeRequest { get; set; }
        /// <summary>Indicates whether swap shifts requests are enabled for the schedule.</summary>
        bool? SwapShiftsRequestsEnabled { get; set; }
        /// <summary>Indicates whether time clock is enabled for the schedule.</summary>
        bool? TimeClockEnabled { get; set; }
        /// <summary>The set of reasons for a time off in the schedule.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphTimeOffReason[] TimeOffReason { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphTimeOffRequest[] TimeOffRequest { get; set; }
        /// <summary>Indicates whether time off requests are enabled for the schedule.</summary>
        bool? TimeOffRequestsEnabled { get; set; }
        /// <summary>
        /// Indicates the time zone of the schedule team using tz database format. Required.
        /// </summary>
        string TimeZone { get; set; }
        /// <summary>The instances of times off in the schedule.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphTimeOff[] TimesOff { get; set; }

        string[] WorkforceIntegrationId { get; set; }

    }
}