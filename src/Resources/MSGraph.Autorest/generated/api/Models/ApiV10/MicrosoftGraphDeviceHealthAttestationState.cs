// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Extensions;

    /// <summary>deviceHealthAttestationState</summary>
    public partial class MicrosoftGraphDeviceHealthAttestationState :
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphDeviceHealthAttestationState,
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphDeviceHealthAttestationStateInternal
    {

        /// <summary>Backing field for <see cref="AttestationIdentityKey" /> property.</summary>
        private string _attestationIdentityKey;

        /// <summary>
        /// TWhen an Attestation Identity Key (AIK) is present on a device, it indicates that the device has an endorsement key (EK)
        /// certificate.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string AttestationIdentityKey { get => this._attestationIdentityKey; set => this._attestationIdentityKey = value; }

        /// <summary>Backing field for <see cref="BitLockerStatus" /> property.</summary>
        private string _bitLockerStatus;

        /// <summary>On or Off of BitLocker Drive Encryption</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string BitLockerStatus { get => this._bitLockerStatus; set => this._bitLockerStatus = value; }

        /// <summary>Backing field for <see cref="BootAppSecurityVersion" /> property.</summary>
        private string _bootAppSecurityVersion;

        /// <summary>The security version number of the Boot Application</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string BootAppSecurityVersion { get => this._bootAppSecurityVersion; set => this._bootAppSecurityVersion = value; }

        /// <summary>Backing field for <see cref="BootDebugging" /> property.</summary>
        private string _bootDebugging;

        /// <summary>When bootDebugging is enabled, the device is used in development and testing</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string BootDebugging { get => this._bootDebugging; set => this._bootDebugging = value; }

        /// <summary>Backing field for <see cref="BootManagerSecurityVersion" /> property.</summary>
        private string _bootManagerSecurityVersion;

        /// <summary>The security version number of the Boot Application</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string BootManagerSecurityVersion { get => this._bootManagerSecurityVersion; set => this._bootManagerSecurityVersion = value; }

        /// <summary>Backing field for <see cref="BootManagerVersion" /> property.</summary>
        private string _bootManagerVersion;

        /// <summary>The version of the Boot Manager</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string BootManagerVersion { get => this._bootManagerVersion; set => this._bootManagerVersion = value; }

        /// <summary>Backing field for <see cref="BootRevisionListInfo" /> property.</summary>
        private string _bootRevisionListInfo;

        /// <summary>
        /// The Boot Revision List that was loaded during initial boot on the attested device
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string BootRevisionListInfo { get => this._bootRevisionListInfo; set => this._bootRevisionListInfo = value; }

        /// <summary>Backing field for <see cref="CodeIntegrity" /> property.</summary>
        private string _codeIntegrity;

        /// <summary>
        /// When code integrity is enabled, code execution is restricted to integrity verified code
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string CodeIntegrity { get => this._codeIntegrity; set => this._codeIntegrity = value; }

        /// <summary>Backing field for <see cref="CodeIntegrityCheckVersion" /> property.</summary>
        private string _codeIntegrityCheckVersion;

        /// <summary>The version of the Boot Manager</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string CodeIntegrityCheckVersion { get => this._codeIntegrityCheckVersion; set => this._codeIntegrityCheckVersion = value; }

        /// <summary>Backing field for <see cref="CodeIntegrityPolicy" /> property.</summary>
        private string _codeIntegrityPolicy;

        /// <summary>
        /// The Code Integrity policy that is controlling the security of the boot environment
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string CodeIntegrityPolicy { get => this._codeIntegrityPolicy; set => this._codeIntegrityPolicy = value; }

        /// <summary>Backing field for <see cref="ContentNamespaceUrl" /> property.</summary>
        private string _contentNamespaceUrl;

        /// <summary>The DHA report version. (Namespace version)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string ContentNamespaceUrl { get => this._contentNamespaceUrl; set => this._contentNamespaceUrl = value; }

        /// <summary>Backing field for <see cref="ContentVersion" /> property.</summary>
        private string _contentVersion;

        /// <summary>The HealthAttestation state schema version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string ContentVersion { get => this._contentVersion; set => this._contentVersion = value; }

        /// <summary>Backing field for <see cref="DataExcutionPolicy" /> property.</summary>
        private string _dataExcutionPolicy;

        /// <summary>
        /// DEP Policy defines a set of hardware and software technologies that perform additional checks on memory
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string DataExcutionPolicy { get => this._dataExcutionPolicy; set => this._dataExcutionPolicy = value; }

        /// <summary>Backing field for <see cref="DeviceHealthAttestationStatus" /> property.</summary>
        private string _deviceHealthAttestationStatus;

        /// <summary>The DHA report version. (Namespace version)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string DeviceHealthAttestationStatus { get => this._deviceHealthAttestationStatus; set => this._deviceHealthAttestationStatus = value; }

        /// <summary>
        /// Backing field for <see cref="EarlyLaunchAntiMalwareDriverProtection" /> property.
        /// </summary>
        private string _earlyLaunchAntiMalwareDriverProtection;

        /// <summary>ELAM provides protection for the computers in your network when they start up</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string EarlyLaunchAntiMalwareDriverProtection { get => this._earlyLaunchAntiMalwareDriverProtection; set => this._earlyLaunchAntiMalwareDriverProtection = value; }

        /// <summary>Backing field for <see cref="HealthAttestationSupportedStatus" /> property.</summary>
        private string _healthAttestationSupportedStatus;

        /// <summary>This attribute indicates if DHA is supported for the device</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string HealthAttestationSupportedStatus { get => this._healthAttestationSupportedStatus; set => this._healthAttestationSupportedStatus = value; }

        /// <summary>Backing field for <see cref="HealthStatusMismatchInfo" /> property.</summary>
        private string _healthStatusMismatchInfo;

        /// <summary>This attribute appears if DHA-Service detects an integrity issue</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string HealthStatusMismatchInfo { get => this._healthStatusMismatchInfo; set => this._healthStatusMismatchInfo = value; }

        /// <summary>Backing field for <see cref="IssuedDateTime" /> property.</summary>
        private global::System.DateTime? _issuedDateTime;

        /// <summary>The DateTime when device was evaluated or issued to MDM</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public global::System.DateTime? IssuedDateTime { get => this._issuedDateTime; set => this._issuedDateTime = value; }

        /// <summary>Backing field for <see cref="LastUpdateDateTime" /> property.</summary>
        private string _lastUpdateDateTime;

        /// <summary>The Timestamp of the last update.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string LastUpdateDateTime { get => this._lastUpdateDateTime; set => this._lastUpdateDateTime = value; }

        /// <summary>Backing field for <see cref="OperatingSystemKernelDebugging" /> property.</summary>
        private string _operatingSystemKernelDebugging;

        /// <summary>
        /// When operatingSystemKernelDebugging is enabled, the device is used in development and testing
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string OperatingSystemKernelDebugging { get => this._operatingSystemKernelDebugging; set => this._operatingSystemKernelDebugging = value; }

        /// <summary>Backing field for <see cref="OperatingSystemRevListInfo" /> property.</summary>
        private string _operatingSystemRevListInfo;

        /// <summary>
        /// The Operating System Revision List that was loaded during initial boot on the attested device
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string OperatingSystemRevListInfo { get => this._operatingSystemRevListInfo; set => this._operatingSystemRevListInfo = value; }

        /// <summary>Backing field for <see cref="Pcr0" /> property.</summary>
        private string _pcr0;

        /// <summary>The measurement that is captured in PCR[0]</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string Pcr0 { get => this._pcr0; set => this._pcr0 = value; }

        /// <summary>Backing field for <see cref="PcrHashAlgorithm" /> property.</summary>
        private string _pcrHashAlgorithm;

        /// <summary>Informational attribute that identifies the HASH algorithm that was used by TPM</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string PcrHashAlgorithm { get => this._pcrHashAlgorithm; set => this._pcrHashAlgorithm = value; }

        /// <summary>Backing field for <see cref="ResetCount" /> property.</summary>
        private long? _resetCount;

        /// <summary>The number of times a PC device has hibernated or resumed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public long? ResetCount { get => this._resetCount; set => this._resetCount = value; }

        /// <summary>Backing field for <see cref="RestartCount" /> property.</summary>
        private long? _restartCount;

        /// <summary>The number of times a PC device has rebooted</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public long? RestartCount { get => this._restartCount; set => this._restartCount = value; }

        /// <summary>Backing field for <see cref="SafeMode" /> property.</summary>
        private string _safeMode;

        /// <summary>
        /// Safe mode is a troubleshooting option for Windows that starts your computer in a limited state
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string SafeMode { get => this._safeMode; set => this._safeMode = value; }

        /// <summary>Backing field for <see cref="SecureBoot" /> property.</summary>
        private string _secureBoot;

        /// <summary>
        /// When Secure Boot is enabled, the core components must have the correct cryptographic signatures
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string SecureBoot { get => this._secureBoot; set => this._secureBoot = value; }

        /// <summary>
        /// Backing field for <see cref="SecureBootConfigurationPolicyFingerPrint" /> property.
        /// </summary>
        private string _secureBootConfigurationPolicyFingerPrint;

        /// <summary>Fingerprint of the Custom Secure Boot Configuration Policy</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string SecureBootConfigurationPolicyFingerPrint { get => this._secureBootConfigurationPolicyFingerPrint; set => this._secureBootConfigurationPolicyFingerPrint = value; }

        /// <summary>Backing field for <see cref="TestSigning" /> property.</summary>
        private string _testSigning;

        /// <summary>
        /// When test signing is allowed, the device does not enforce signature validation during boot
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string TestSigning { get => this._testSigning; set => this._testSigning = value; }

        /// <summary>Backing field for <see cref="TpmVersion" /> property.</summary>
        private string _tpmVersion;

        /// <summary>The security version number of the Boot Application</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string TpmVersion { get => this._tpmVersion; set => this._tpmVersion = value; }

        /// <summary>Backing field for <see cref="VirtualSecureMode" /> property.</summary>
        private string _virtualSecureMode;

        /// <summary>VSM is a container that protects high value assets from a compromised kernel</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string VirtualSecureMode { get => this._virtualSecureMode; set => this._virtualSecureMode = value; }

        /// <summary>Backing field for <see cref="WindowsPe" /> property.</summary>
        private string _windowsPe;

        /// <summary>
        /// Operating system running with limited services that is used to prepare a computer for Windows
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string WindowsPe { get => this._windowsPe; set => this._windowsPe = value; }

        /// <summary>
        /// Creates an new <see cref="MicrosoftGraphDeviceHealthAttestationState" /> instance.
        /// </summary>
        public MicrosoftGraphDeviceHealthAttestationState()
        {

        }
    }
    /// deviceHealthAttestationState
    public partial interface IMicrosoftGraphDeviceHealthAttestationState :
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IAssociativeArray<global::System.Object>
    {
        /// <summary>
        /// TWhen an Attestation Identity Key (AIK) is present on a device, it indicates that the device has an endorsement key (EK)
        /// certificate.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"TWhen an Attestation Identity Key (AIK) is present on a device, it indicates that the device has an endorsement key (EK) certificate.",
        SerializedName = @"attestationIdentityKey",
        PossibleTypes = new [] { typeof(string) })]
        string AttestationIdentityKey { get; set; }
        /// <summary>On or Off of BitLocker Drive Encryption</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"On or Off of BitLocker Drive Encryption",
        SerializedName = @"bitLockerStatus",
        PossibleTypes = new [] { typeof(string) })]
        string BitLockerStatus { get; set; }
        /// <summary>The security version number of the Boot Application</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The security version number of the Boot Application",
        SerializedName = @"bootAppSecurityVersion",
        PossibleTypes = new [] { typeof(string) })]
        string BootAppSecurityVersion { get; set; }
        /// <summary>When bootDebugging is enabled, the device is used in development and testing</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"When bootDebugging is enabled, the device is used in development and testing",
        SerializedName = @"bootDebugging",
        PossibleTypes = new [] { typeof(string) })]
        string BootDebugging { get; set; }
        /// <summary>The security version number of the Boot Application</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The security version number of the Boot Application",
        SerializedName = @"bootManagerSecurityVersion",
        PossibleTypes = new [] { typeof(string) })]
        string BootManagerSecurityVersion { get; set; }
        /// <summary>The version of the Boot Manager</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The version of the Boot Manager",
        SerializedName = @"bootManagerVersion",
        PossibleTypes = new [] { typeof(string) })]
        string BootManagerVersion { get; set; }
        /// <summary>
        /// The Boot Revision List that was loaded during initial boot on the attested device
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Boot Revision List that was loaded during initial boot on the attested device",
        SerializedName = @"bootRevisionListInfo",
        PossibleTypes = new [] { typeof(string) })]
        string BootRevisionListInfo { get; set; }
        /// <summary>
        /// When code integrity is enabled, code execution is restricted to integrity verified code
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"When code integrity is enabled, code execution is restricted to integrity verified code",
        SerializedName = @"codeIntegrity",
        PossibleTypes = new [] { typeof(string) })]
        string CodeIntegrity { get; set; }
        /// <summary>The version of the Boot Manager</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The version of the Boot Manager",
        SerializedName = @"codeIntegrityCheckVersion",
        PossibleTypes = new [] { typeof(string) })]
        string CodeIntegrityCheckVersion { get; set; }
        /// <summary>
        /// The Code Integrity policy that is controlling the security of the boot environment
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Code Integrity policy that is controlling the security of the boot environment",
        SerializedName = @"codeIntegrityPolicy",
        PossibleTypes = new [] { typeof(string) })]
        string CodeIntegrityPolicy { get; set; }
        /// <summary>The DHA report version. (Namespace version)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The DHA report version. (Namespace version)",
        SerializedName = @"contentNamespaceUrl",
        PossibleTypes = new [] { typeof(string) })]
        string ContentNamespaceUrl { get; set; }
        /// <summary>The HealthAttestation state schema version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The HealthAttestation state schema version",
        SerializedName = @"contentVersion",
        PossibleTypes = new [] { typeof(string) })]
        string ContentVersion { get; set; }
        /// <summary>
        /// DEP Policy defines a set of hardware and software technologies that perform additional checks on memory
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"DEP Policy defines a set of hardware and software technologies that perform additional checks on memory",
        SerializedName = @"dataExcutionPolicy",
        PossibleTypes = new [] { typeof(string) })]
        string DataExcutionPolicy { get; set; }
        /// <summary>The DHA report version. (Namespace version)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The DHA report version. (Namespace version)",
        SerializedName = @"deviceHealthAttestationStatus",
        PossibleTypes = new [] { typeof(string) })]
        string DeviceHealthAttestationStatus { get; set; }
        /// <summary>ELAM provides protection for the computers in your network when they start up</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ELAM provides protection for the computers in your network when they start up",
        SerializedName = @"earlyLaunchAntiMalwareDriverProtection",
        PossibleTypes = new [] { typeof(string) })]
        string EarlyLaunchAntiMalwareDriverProtection { get; set; }
        /// <summary>This attribute indicates if DHA is supported for the device</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This attribute indicates if DHA is supported for the device",
        SerializedName = @"healthAttestationSupportedStatus",
        PossibleTypes = new [] { typeof(string) })]
        string HealthAttestationSupportedStatus { get; set; }
        /// <summary>This attribute appears if DHA-Service detects an integrity issue</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This attribute appears if DHA-Service detects an integrity issue",
        SerializedName = @"healthStatusMismatchInfo",
        PossibleTypes = new [] { typeof(string) })]
        string HealthStatusMismatchInfo { get; set; }
        /// <summary>The DateTime when device was evaluated or issued to MDM</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The DateTime when device was evaluated or issued to MDM",
        SerializedName = @"issuedDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? IssuedDateTime { get; set; }
        /// <summary>The Timestamp of the last update.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Timestamp of the last update.",
        SerializedName = @"lastUpdateDateTime",
        PossibleTypes = new [] { typeof(string) })]
        string LastUpdateDateTime { get; set; }
        /// <summary>
        /// When operatingSystemKernelDebugging is enabled, the device is used in development and testing
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"When operatingSystemKernelDebugging is enabled, the device is used in development and testing",
        SerializedName = @"operatingSystemKernelDebugging",
        PossibleTypes = new [] { typeof(string) })]
        string OperatingSystemKernelDebugging { get; set; }
        /// <summary>
        /// The Operating System Revision List that was loaded during initial boot on the attested device
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Operating System Revision List that was loaded during initial boot on the attested device",
        SerializedName = @"operatingSystemRevListInfo",
        PossibleTypes = new [] { typeof(string) })]
        string OperatingSystemRevListInfo { get; set; }
        /// <summary>The measurement that is captured in PCR[0]</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The measurement that is captured in PCR[0]",
        SerializedName = @"pcr0",
        PossibleTypes = new [] { typeof(string) })]
        string Pcr0 { get; set; }
        /// <summary>Informational attribute that identifies the HASH algorithm that was used by TPM</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Informational attribute that identifies the HASH algorithm that was used by TPM",
        SerializedName = @"pcrHashAlgorithm",
        PossibleTypes = new [] { typeof(string) })]
        string PcrHashAlgorithm { get; set; }
        /// <summary>The number of times a PC device has hibernated or resumed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of times a PC device has hibernated or resumed",
        SerializedName = @"resetCount",
        PossibleTypes = new [] { typeof(long) })]
        long? ResetCount { get; set; }
        /// <summary>The number of times a PC device has rebooted</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of times a PC device has rebooted",
        SerializedName = @"restartCount",
        PossibleTypes = new [] { typeof(long) })]
        long? RestartCount { get; set; }
        /// <summary>
        /// Safe mode is a troubleshooting option for Windows that starts your computer in a limited state
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Safe mode is a troubleshooting option for Windows that starts your computer in a limited state",
        SerializedName = @"safeMode",
        PossibleTypes = new [] { typeof(string) })]
        string SafeMode { get; set; }
        /// <summary>
        /// When Secure Boot is enabled, the core components must have the correct cryptographic signatures
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"When Secure Boot is enabled, the core components must have the correct cryptographic signatures",
        SerializedName = @"secureBoot",
        PossibleTypes = new [] { typeof(string) })]
        string SecureBoot { get; set; }
        /// <summary>Fingerprint of the Custom Secure Boot Configuration Policy</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Fingerprint of the Custom Secure Boot Configuration Policy",
        SerializedName = @"secureBootConfigurationPolicyFingerPrint",
        PossibleTypes = new [] { typeof(string) })]
        string SecureBootConfigurationPolicyFingerPrint { get; set; }
        /// <summary>
        /// When test signing is allowed, the device does not enforce signature validation during boot
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"When test signing is allowed, the device does not enforce signature validation during boot",
        SerializedName = @"testSigning",
        PossibleTypes = new [] { typeof(string) })]
        string TestSigning { get; set; }
        /// <summary>The security version number of the Boot Application</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The security version number of the Boot Application",
        SerializedName = @"tpmVersion",
        PossibleTypes = new [] { typeof(string) })]
        string TpmVersion { get; set; }
        /// <summary>VSM is a container that protects high value assets from a compromised kernel</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"VSM is a container that protects high value assets from a compromised kernel",
        SerializedName = @"virtualSecureMode",
        PossibleTypes = new [] { typeof(string) })]
        string VirtualSecureMode { get; set; }
        /// <summary>
        /// Operating system running with limited services that is used to prepare a computer for Windows
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Operating system running with limited services that is used to prepare a computer for Windows",
        SerializedName = @"windowsPE",
        PossibleTypes = new [] { typeof(string) })]
        string WindowsPe { get; set; }

    }
    /// deviceHealthAttestationState
    internal partial interface IMicrosoftGraphDeviceHealthAttestationStateInternal

    {
        /// <summary>
        /// TWhen an Attestation Identity Key (AIK) is present on a device, it indicates that the device has an endorsement key (EK)
        /// certificate.
        /// </summary>
        string AttestationIdentityKey { get; set; }
        /// <summary>On or Off of BitLocker Drive Encryption</summary>
        string BitLockerStatus { get; set; }
        /// <summary>The security version number of the Boot Application</summary>
        string BootAppSecurityVersion { get; set; }
        /// <summary>When bootDebugging is enabled, the device is used in development and testing</summary>
        string BootDebugging { get; set; }
        /// <summary>The security version number of the Boot Application</summary>
        string BootManagerSecurityVersion { get; set; }
        /// <summary>The version of the Boot Manager</summary>
        string BootManagerVersion { get; set; }
        /// <summary>
        /// The Boot Revision List that was loaded during initial boot on the attested device
        /// </summary>
        string BootRevisionListInfo { get; set; }
        /// <summary>
        /// When code integrity is enabled, code execution is restricted to integrity verified code
        /// </summary>
        string CodeIntegrity { get; set; }
        /// <summary>The version of the Boot Manager</summary>
        string CodeIntegrityCheckVersion { get; set; }
        /// <summary>
        /// The Code Integrity policy that is controlling the security of the boot environment
        /// </summary>
        string CodeIntegrityPolicy { get; set; }
        /// <summary>The DHA report version. (Namespace version)</summary>
        string ContentNamespaceUrl { get; set; }
        /// <summary>The HealthAttestation state schema version</summary>
        string ContentVersion { get; set; }
        /// <summary>
        /// DEP Policy defines a set of hardware and software technologies that perform additional checks on memory
        /// </summary>
        string DataExcutionPolicy { get; set; }
        /// <summary>The DHA report version. (Namespace version)</summary>
        string DeviceHealthAttestationStatus { get; set; }
        /// <summary>ELAM provides protection for the computers in your network when they start up</summary>
        string EarlyLaunchAntiMalwareDriverProtection { get; set; }
        /// <summary>This attribute indicates if DHA is supported for the device</summary>
        string HealthAttestationSupportedStatus { get; set; }
        /// <summary>This attribute appears if DHA-Service detects an integrity issue</summary>
        string HealthStatusMismatchInfo { get; set; }
        /// <summary>The DateTime when device was evaluated or issued to MDM</summary>
        global::System.DateTime? IssuedDateTime { get; set; }
        /// <summary>The Timestamp of the last update.</summary>
        string LastUpdateDateTime { get; set; }
        /// <summary>
        /// When operatingSystemKernelDebugging is enabled, the device is used in development and testing
        /// </summary>
        string OperatingSystemKernelDebugging { get; set; }
        /// <summary>
        /// The Operating System Revision List that was loaded during initial boot on the attested device
        /// </summary>
        string OperatingSystemRevListInfo { get; set; }
        /// <summary>The measurement that is captured in PCR[0]</summary>
        string Pcr0 { get; set; }
        /// <summary>Informational attribute that identifies the HASH algorithm that was used by TPM</summary>
        string PcrHashAlgorithm { get; set; }
        /// <summary>The number of times a PC device has hibernated or resumed</summary>
        long? ResetCount { get; set; }
        /// <summary>The number of times a PC device has rebooted</summary>
        long? RestartCount { get; set; }
        /// <summary>
        /// Safe mode is a troubleshooting option for Windows that starts your computer in a limited state
        /// </summary>
        string SafeMode { get; set; }
        /// <summary>
        /// When Secure Boot is enabled, the core components must have the correct cryptographic signatures
        /// </summary>
        string SecureBoot { get; set; }
        /// <summary>Fingerprint of the Custom Secure Boot Configuration Policy</summary>
        string SecureBootConfigurationPolicyFingerPrint { get; set; }
        /// <summary>
        /// When test signing is allowed, the device does not enforce signature validation during boot
        /// </summary>
        string TestSigning { get; set; }
        /// <summary>The security version number of the Boot Application</summary>
        string TpmVersion { get; set; }
        /// <summary>VSM is a container that protects high value assets from a compromised kernel</summary>
        string VirtualSecureMode { get; set; }
        /// <summary>
        /// Operating system running with limited services that is used to prepare a computer for Windows
        /// </summary>
        string WindowsPe { get; set; }

    }
}