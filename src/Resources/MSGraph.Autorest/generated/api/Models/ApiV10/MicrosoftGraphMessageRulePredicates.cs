// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Extensions;

    /// <summary>messageRulePredicates</summary>
    public partial class MicrosoftGraphMessageRulePredicates :
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphMessageRulePredicates,
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphMessageRulePredicatesInternal
    {

        /// <summary>Backing field for <see cref="BodyContain" /> property.</summary>
        private string[] _bodyContain;

        /// <summary>
        /// Represents the strings that should appear in the body of an incoming message in order for the condition or exception to
        /// apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string[] BodyContain { get => this._bodyContain; set => this._bodyContain = value; }

        /// <summary>Backing field for <see cref="BodyOrSubjectContain" /> property.</summary>
        private string[] _bodyOrSubjectContain;

        /// <summary>
        /// Represents the strings that should appear in the body or subject of an incoming message in order for the condition or
        /// exception to apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string[] BodyOrSubjectContain { get => this._bodyOrSubjectContain; set => this._bodyOrSubjectContain = value; }

        /// <summary>Backing field for <see cref="Category" /> property.</summary>
        private string[] _category;

        /// <summary>
        /// Represents the categories that an incoming message should be labeled with in order for the condition or exception to apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string[] Category { get => this._category; set => this._category = value; }

        /// <summary>Backing field for <see cref="FromAddress" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphRecipient[] _fromAddress;

        /// <summary>
        /// Represents the specific sender email addresses of an incoming message in order for the condition or exception to apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphRecipient[] FromAddress { get => this._fromAddress; set => this._fromAddress = value; }

        /// <summary>Backing field for <see cref="HasAttachment" /> property.</summary>
        private bool? _hasAttachment;

        /// <summary>
        /// Indicates whether an incoming message must have attachments in order for the condition or exception to apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public bool? HasAttachment { get => this._hasAttachment; set => this._hasAttachment = value; }

        /// <summary>Backing field for <see cref="HeaderContain" /> property.</summary>
        private string[] _headerContain;

        /// <summary>
        /// Represents the strings that appear in the headers of an incoming message in order for the condition or exception to apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string[] HeaderContain { get => this._headerContain; set => this._headerContain = value; }

        /// <summary>Backing field for <see cref="Importance" /> property.</summary>
        private string _importance;

        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string Importance { get => this._importance; set => this._importance = value; }

        /// <summary>Backing field for <see cref="IsApprovalRequest" /> property.</summary>
        private bool? _isApprovalRequest;

        /// <summary>
        /// Indicates whether an incoming message must be an approval request in order for the condition or exception to apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public bool? IsApprovalRequest { get => this._isApprovalRequest; set => this._isApprovalRequest = value; }

        /// <summary>Backing field for <see cref="IsAutomaticForward" /> property.</summary>
        private bool? _isAutomaticForward;

        /// <summary>
        /// Indicates whether an incoming message must be automatically forwarded in order for the condition or exception to apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public bool? IsAutomaticForward { get => this._isAutomaticForward; set => this._isAutomaticForward = value; }

        /// <summary>Backing field for <see cref="IsAutomaticReply" /> property.</summary>
        private bool? _isAutomaticReply;

        /// <summary>
        /// Indicates whether an incoming message must be an auto reply in order for the condition or exception to apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public bool? IsAutomaticReply { get => this._isAutomaticReply; set => this._isAutomaticReply = value; }

        /// <summary>Backing field for <see cref="IsEncrypted" /> property.</summary>
        private bool? _isEncrypted;

        /// <summary>
        /// Indicates whether an incoming message must be encrypted in order for the condition or exception to apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public bool? IsEncrypted { get => this._isEncrypted; set => this._isEncrypted = value; }

        /// <summary>Backing field for <see cref="IsMeetingRequest" /> property.</summary>
        private bool? _isMeetingRequest;

        /// <summary>
        /// Indicates whether an incoming message must be a meeting request in order for the condition or exception to apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public bool? IsMeetingRequest { get => this._isMeetingRequest; set => this._isMeetingRequest = value; }

        /// <summary>Backing field for <see cref="IsMeetingResponse" /> property.</summary>
        private bool? _isMeetingResponse;

        /// <summary>
        /// Indicates whether an incoming message must be a meeting response in order for the condition or exception to apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public bool? IsMeetingResponse { get => this._isMeetingResponse; set => this._isMeetingResponse = value; }

        /// <summary>Backing field for <see cref="IsNonDeliveryReport" /> property.</summary>
        private bool? _isNonDeliveryReport;

        /// <summary>
        /// Indicates whether an incoming message must be a non-delivery report in order for the condition or exception to apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public bool? IsNonDeliveryReport { get => this._isNonDeliveryReport; set => this._isNonDeliveryReport = value; }

        /// <summary>Backing field for <see cref="IsPermissionControlled" /> property.</summary>
        private bool? _isPermissionControlled;

        /// <summary>
        /// Indicates whether an incoming message must be permission controlled (RMS-protected) in order for the condition or exception
        /// to apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public bool? IsPermissionControlled { get => this._isPermissionControlled; set => this._isPermissionControlled = value; }

        /// <summary>Backing field for <see cref="IsReadReceipt" /> property.</summary>
        private bool? _isReadReceipt;

        /// <summary>
        /// Indicates whether an incoming message must be a read receipt in order for the condition or exception to apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public bool? IsReadReceipt { get => this._isReadReceipt; set => this._isReadReceipt = value; }

        /// <summary>Backing field for <see cref="IsSigned" /> property.</summary>
        private bool? _isSigned;

        /// <summary>
        /// Indicates whether an incoming message must be S/MIME-signed in order for the condition or exception to apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public bool? IsSigned { get => this._isSigned; set => this._isSigned = value; }

        /// <summary>Backing field for <see cref="IsVoicemail" /> property.</summary>
        private bool? _isVoicemail;

        /// <summary>
        /// Indicates whether an incoming message must be a voice mail in order for the condition or exception to apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public bool? IsVoicemail { get => this._isVoicemail; set => this._isVoicemail = value; }

        /// <summary>Backing field for <see cref="MessageActionFlag" /> property.</summary>
        private string _messageActionFlag;

        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string MessageActionFlag { get => this._messageActionFlag; set => this._messageActionFlag = value; }

        /// <summary>Backing field for <see cref="NotSentToMe" /> property.</summary>
        private bool? _notSentToMe;

        /// <summary>
        /// Indicates whether the owner of the mailbox must not be a recipient of an incoming message in order for the condition or
        /// exception to apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public bool? NotSentToMe { get => this._notSentToMe; set => this._notSentToMe = value; }

        /// <summary>Backing field for <see cref="RecipientContain" /> property.</summary>
        private string[] _recipientContain;

        /// <summary>
        /// Represents the strings that appear in either the toRecipients or ccRecipients properties of an incoming message in order
        /// for the condition or exception to apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string[] RecipientContain { get => this._recipientContain; set => this._recipientContain = value; }

        /// <summary>Backing field for <see cref="SenderContain" /> property.</summary>
        private string[] _senderContain;

        /// <summary>
        /// Represents the strings that appear in the from property of an incoming message in order for the condition or exception
        /// to apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string[] SenderContain { get => this._senderContain; set => this._senderContain = value; }

        /// <summary>Backing field for <see cref="Sensitivity" /> property.</summary>
        private string _sensitivity;

        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string Sensitivity { get => this._sensitivity; set => this._sensitivity = value; }

        /// <summary>Backing field for <see cref="SentCcMe" /> property.</summary>
        private bool? _sentCcMe;

        /// <summary>
        /// Indicates whether the owner of the mailbox must be in the ccRecipients property of an incoming message in order for the
        /// condition or exception to apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public bool? SentCcMe { get => this._sentCcMe; set => this._sentCcMe = value; }

        /// <summary>Backing field for <see cref="SentOnlyToMe" /> property.</summary>
        private bool? _sentOnlyToMe;

        /// <summary>
        /// Indicates whether the owner of the mailbox must be the only recipient in an incoming message in order for the condition
        /// or exception to apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public bool? SentOnlyToMe { get => this._sentOnlyToMe; set => this._sentOnlyToMe = value; }

        /// <summary>Backing field for <see cref="SentToAddress" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphRecipient[] _sentToAddress;

        /// <summary>
        /// Represents the email addresses that an incoming message must have been sent to in order for the condition or exception
        /// to apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphRecipient[] SentToAddress { get => this._sentToAddress; set => this._sentToAddress = value; }

        /// <summary>Backing field for <see cref="SentToMe" /> property.</summary>
        private bool? _sentToMe;

        /// <summary>
        /// Indicates whether the owner of the mailbox must be in the toRecipients property of an incoming message in order for the
        /// condition or exception to apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public bool? SentToMe { get => this._sentToMe; set => this._sentToMe = value; }

        /// <summary>Backing field for <see cref="SentToOrCcMe" /> property.</summary>
        private bool? _sentToOrCcMe;

        /// <summary>
        /// Indicates whether the owner of the mailbox must be in either a toRecipients or ccRecipients property of an incoming message
        /// in order for the condition or exception to apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public bool? SentToOrCcMe { get => this._sentToOrCcMe; set => this._sentToOrCcMe = value; }

        /// <summary>Backing field for <see cref="SubjectContain" /> property.</summary>
        private string[] _subjectContain;

        /// <summary>
        /// Represents the strings that appear in the subject of an incoming message in order for the condition or exception to apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string[] SubjectContain { get => this._subjectContain; set => this._subjectContain = value; }

        /// <summary>Backing field for <see cref="WithinSizeRange" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphSizeRange _withinSizeRange;

        /// <summary>sizeRange</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphSizeRange WithinSizeRange { get => (this._withinSizeRange = this._withinSizeRange ?? new Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.MicrosoftGraphSizeRange()); set => this._withinSizeRange = value; }

        /// <summary>Creates an new <see cref="MicrosoftGraphMessageRulePredicates" /> instance.</summary>
        public MicrosoftGraphMessageRulePredicates()
        {

        }
    }
    /// messageRulePredicates
    public partial interface IMicrosoftGraphMessageRulePredicates :
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IAssociativeArray<global::System.Object>
    {
        /// <summary>
        /// Represents the strings that should appear in the body of an incoming message in order for the condition or exception to
        /// apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents the strings that should appear in the body of an incoming message in order for the condition or exception to apply.",
        SerializedName = @"bodyContains",
        PossibleTypes = new [] { typeof(string) })]
        string[] BodyContain { get; set; }
        /// <summary>
        /// Represents the strings that should appear in the body or subject of an incoming message in order for the condition or
        /// exception to apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents the strings that should appear in the body or subject of an incoming message in order for the condition or exception to apply.",
        SerializedName = @"bodyOrSubjectContains",
        PossibleTypes = new [] { typeof(string) })]
        string[] BodyOrSubjectContain { get; set; }
        /// <summary>
        /// Represents the categories that an incoming message should be labeled with in order for the condition or exception to apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents the categories that an incoming message should be labeled with in order for the condition or exception to apply.",
        SerializedName = @"categories",
        PossibleTypes = new [] { typeof(string) })]
        string[] Category { get; set; }
        /// <summary>
        /// Represents the specific sender email addresses of an incoming message in order for the condition or exception to apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents the specific sender email addresses of an incoming message in order for the condition or exception to apply.",
        SerializedName = @"fromAddresses",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphRecipient) })]
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphRecipient[] FromAddress { get; set; }
        /// <summary>
        /// Indicates whether an incoming message must have attachments in order for the condition or exception to apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether an incoming message must have attachments in order for the condition or exception to apply.",
        SerializedName = @"hasAttachments",
        PossibleTypes = new [] { typeof(bool) })]
        bool? HasAttachment { get; set; }
        /// <summary>
        /// Represents the strings that appear in the headers of an incoming message in order for the condition or exception to apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents the strings that appear in the headers of an incoming message in order for the condition or exception to apply.",
        SerializedName = @"headerContains",
        PossibleTypes = new [] { typeof(string) })]
        string[] HeaderContain { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"importance",
        PossibleTypes = new [] { typeof(string) })]
        string Importance { get; set; }
        /// <summary>
        /// Indicates whether an incoming message must be an approval request in order for the condition or exception to apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether an incoming message must be an approval request in order for the condition or exception to apply.",
        SerializedName = @"isApprovalRequest",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsApprovalRequest { get; set; }
        /// <summary>
        /// Indicates whether an incoming message must be automatically forwarded in order for the condition or exception to apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether an incoming message must be automatically forwarded in order for the condition or exception to apply.",
        SerializedName = @"isAutomaticForward",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsAutomaticForward { get; set; }
        /// <summary>
        /// Indicates whether an incoming message must be an auto reply in order for the condition or exception to apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether an incoming message must be an auto reply in order for the condition or exception to apply.",
        SerializedName = @"isAutomaticReply",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsAutomaticReply { get; set; }
        /// <summary>
        /// Indicates whether an incoming message must be encrypted in order for the condition or exception to apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether an incoming message must be encrypted in order for the condition or exception to apply.",
        SerializedName = @"isEncrypted",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsEncrypted { get; set; }
        /// <summary>
        /// Indicates whether an incoming message must be a meeting request in order for the condition or exception to apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether an incoming message must be a meeting request in order for the condition or exception to apply.",
        SerializedName = @"isMeetingRequest",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsMeetingRequest { get; set; }
        /// <summary>
        /// Indicates whether an incoming message must be a meeting response in order for the condition or exception to apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether an incoming message must be a meeting response in order for the condition or exception to apply.",
        SerializedName = @"isMeetingResponse",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsMeetingResponse { get; set; }
        /// <summary>
        /// Indicates whether an incoming message must be a non-delivery report in order for the condition or exception to apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether an incoming message must be a non-delivery report in order for the condition or exception to apply.",
        SerializedName = @"isNonDeliveryReport",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsNonDeliveryReport { get; set; }
        /// <summary>
        /// Indicates whether an incoming message must be permission controlled (RMS-protected) in order for the condition or exception
        /// to apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether an incoming message must be permission controlled (RMS-protected) in order for the condition or exception to apply.",
        SerializedName = @"isPermissionControlled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsPermissionControlled { get; set; }
        /// <summary>
        /// Indicates whether an incoming message must be a read receipt in order for the condition or exception to apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether an incoming message must be a read receipt in order for the condition or exception to apply.",
        SerializedName = @"isReadReceipt",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsReadReceipt { get; set; }
        /// <summary>
        /// Indicates whether an incoming message must be S/MIME-signed in order for the condition or exception to apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether an incoming message must be S/MIME-signed in order for the condition or exception to apply.",
        SerializedName = @"isSigned",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsSigned { get; set; }
        /// <summary>
        /// Indicates whether an incoming message must be a voice mail in order for the condition or exception to apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether an incoming message must be a voice mail in order for the condition or exception to apply.",
        SerializedName = @"isVoicemail",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsVoicemail { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"messageActionFlag",
        PossibleTypes = new [] { typeof(string) })]
        string MessageActionFlag { get; set; }
        /// <summary>
        /// Indicates whether the owner of the mailbox must not be a recipient of an incoming message in order for the condition or
        /// exception to apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether the owner of the mailbox must not be a recipient of an incoming message in order for the condition or exception to apply.",
        SerializedName = @"notSentToMe",
        PossibleTypes = new [] { typeof(bool) })]
        bool? NotSentToMe { get; set; }
        /// <summary>
        /// Represents the strings that appear in either the toRecipients or ccRecipients properties of an incoming message in order
        /// for the condition or exception to apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents the strings that appear in either the toRecipients or ccRecipients properties of an incoming message in order for the condition or exception to apply.",
        SerializedName = @"recipientContains",
        PossibleTypes = new [] { typeof(string) })]
        string[] RecipientContain { get; set; }
        /// <summary>
        /// Represents the strings that appear in the from property of an incoming message in order for the condition or exception
        /// to apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents the strings that appear in the from property of an incoming message in order for the condition or exception to apply.",
        SerializedName = @"senderContains",
        PossibleTypes = new [] { typeof(string) })]
        string[] SenderContain { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"sensitivity",
        PossibleTypes = new [] { typeof(string) })]
        string Sensitivity { get; set; }
        /// <summary>
        /// Indicates whether the owner of the mailbox must be in the ccRecipients property of an incoming message in order for the
        /// condition or exception to apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether the owner of the mailbox must be in the ccRecipients property of an incoming message in order for the condition or exception to apply.",
        SerializedName = @"sentCcMe",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SentCcMe { get; set; }
        /// <summary>
        /// Indicates whether the owner of the mailbox must be the only recipient in an incoming message in order for the condition
        /// or exception to apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether the owner of the mailbox must be the only recipient in an incoming message in order for the condition or exception to apply.",
        SerializedName = @"sentOnlyToMe",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SentOnlyToMe { get; set; }
        /// <summary>
        /// Represents the email addresses that an incoming message must have been sent to in order for the condition or exception
        /// to apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents the email addresses that an incoming message must have been sent to in order for the condition or exception to apply.",
        SerializedName = @"sentToAddresses",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphRecipient) })]
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphRecipient[] SentToAddress { get; set; }
        /// <summary>
        /// Indicates whether the owner of the mailbox must be in the toRecipients property of an incoming message in order for the
        /// condition or exception to apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether the owner of the mailbox must be in the toRecipients property of an incoming message in order for the condition or exception to apply.",
        SerializedName = @"sentToMe",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SentToMe { get; set; }
        /// <summary>
        /// Indicates whether the owner of the mailbox must be in either a toRecipients or ccRecipients property of an incoming message
        /// in order for the condition or exception to apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether the owner of the mailbox must be in either a toRecipients or ccRecipients property of an incoming message in order for the condition or exception to apply.",
        SerializedName = @"sentToOrCcMe",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SentToOrCcMe { get; set; }
        /// <summary>
        /// Represents the strings that appear in the subject of an incoming message in order for the condition or exception to apply.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents the strings that appear in the subject of an incoming message in order for the condition or exception to apply.",
        SerializedName = @"subjectContains",
        PossibleTypes = new [] { typeof(string) })]
        string[] SubjectContain { get; set; }
        /// <summary>sizeRange</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"sizeRange",
        SerializedName = @"withinSizeRange",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphSizeRange) })]
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphSizeRange WithinSizeRange { get; set; }

    }
    /// messageRulePredicates
    internal partial interface IMicrosoftGraphMessageRulePredicatesInternal

    {
        /// <summary>
        /// Represents the strings that should appear in the body of an incoming message in order for the condition or exception to
        /// apply.
        /// </summary>
        string[] BodyContain { get; set; }
        /// <summary>
        /// Represents the strings that should appear in the body or subject of an incoming message in order for the condition or
        /// exception to apply.
        /// </summary>
        string[] BodyOrSubjectContain { get; set; }
        /// <summary>
        /// Represents the categories that an incoming message should be labeled with in order for the condition or exception to apply.
        /// </summary>
        string[] Category { get; set; }
        /// <summary>
        /// Represents the specific sender email addresses of an incoming message in order for the condition or exception to apply.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphRecipient[] FromAddress { get; set; }
        /// <summary>
        /// Indicates whether an incoming message must have attachments in order for the condition or exception to apply.
        /// </summary>
        bool? HasAttachment { get; set; }
        /// <summary>
        /// Represents the strings that appear in the headers of an incoming message in order for the condition or exception to apply.
        /// </summary>
        string[] HeaderContain { get; set; }

        string Importance { get; set; }
        /// <summary>
        /// Indicates whether an incoming message must be an approval request in order for the condition or exception to apply.
        /// </summary>
        bool? IsApprovalRequest { get; set; }
        /// <summary>
        /// Indicates whether an incoming message must be automatically forwarded in order for the condition or exception to apply.
        /// </summary>
        bool? IsAutomaticForward { get; set; }
        /// <summary>
        /// Indicates whether an incoming message must be an auto reply in order for the condition or exception to apply.
        /// </summary>
        bool? IsAutomaticReply { get; set; }
        /// <summary>
        /// Indicates whether an incoming message must be encrypted in order for the condition or exception to apply.
        /// </summary>
        bool? IsEncrypted { get; set; }
        /// <summary>
        /// Indicates whether an incoming message must be a meeting request in order for the condition or exception to apply.
        /// </summary>
        bool? IsMeetingRequest { get; set; }
        /// <summary>
        /// Indicates whether an incoming message must be a meeting response in order for the condition or exception to apply.
        /// </summary>
        bool? IsMeetingResponse { get; set; }
        /// <summary>
        /// Indicates whether an incoming message must be a non-delivery report in order for the condition or exception to apply.
        /// </summary>
        bool? IsNonDeliveryReport { get; set; }
        /// <summary>
        /// Indicates whether an incoming message must be permission controlled (RMS-protected) in order for the condition or exception
        /// to apply.
        /// </summary>
        bool? IsPermissionControlled { get; set; }
        /// <summary>
        /// Indicates whether an incoming message must be a read receipt in order for the condition or exception to apply.
        /// </summary>
        bool? IsReadReceipt { get; set; }
        /// <summary>
        /// Indicates whether an incoming message must be S/MIME-signed in order for the condition or exception to apply.
        /// </summary>
        bool? IsSigned { get; set; }
        /// <summary>
        /// Indicates whether an incoming message must be a voice mail in order for the condition or exception to apply.
        /// </summary>
        bool? IsVoicemail { get; set; }

        string MessageActionFlag { get; set; }
        /// <summary>
        /// Indicates whether the owner of the mailbox must not be a recipient of an incoming message in order for the condition or
        /// exception to apply.
        /// </summary>
        bool? NotSentToMe { get; set; }
        /// <summary>
        /// Represents the strings that appear in either the toRecipients or ccRecipients properties of an incoming message in order
        /// for the condition or exception to apply.
        /// </summary>
        string[] RecipientContain { get; set; }
        /// <summary>
        /// Represents the strings that appear in the from property of an incoming message in order for the condition or exception
        /// to apply.
        /// </summary>
        string[] SenderContain { get; set; }

        string Sensitivity { get; set; }
        /// <summary>
        /// Indicates whether the owner of the mailbox must be in the ccRecipients property of an incoming message in order for the
        /// condition or exception to apply.
        /// </summary>
        bool? SentCcMe { get; set; }
        /// <summary>
        /// Indicates whether the owner of the mailbox must be the only recipient in an incoming message in order for the condition
        /// or exception to apply.
        /// </summary>
        bool? SentOnlyToMe { get; set; }
        /// <summary>
        /// Represents the email addresses that an incoming message must have been sent to in order for the condition or exception
        /// to apply.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphRecipient[] SentToAddress { get; set; }
        /// <summary>
        /// Indicates whether the owner of the mailbox must be in the toRecipients property of an incoming message in order for the
        /// condition or exception to apply.
        /// </summary>
        bool? SentToMe { get; set; }
        /// <summary>
        /// Indicates whether the owner of the mailbox must be in either a toRecipients or ccRecipients property of an incoming message
        /// in order for the condition or exception to apply.
        /// </summary>
        bool? SentToOrCcMe { get; set; }
        /// <summary>
        /// Represents the strings that appear in the subject of an incoming message in order for the condition or exception to apply.
        /// </summary>
        string[] SubjectContain { get; set; }
        /// <summary>sizeRange</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphSizeRange WithinSizeRange { get; set; }

    }
}