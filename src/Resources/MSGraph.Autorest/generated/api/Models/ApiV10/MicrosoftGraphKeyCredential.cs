// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Extensions;

    /// <summary>keyCredential</summary>
    public partial class MicrosoftGraphKeyCredential :
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphKeyCredential,
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphKeyCredentialInternal
    {

        /// <summary>Backing field for <see cref="CustomKeyIdentifier" /> property.</summary>
        private byte[] _customKeyIdentifier;

        /// <summary>Custom key identifier</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public byte[] CustomKeyIdentifier { get => this._customKeyIdentifier; set => this._customKeyIdentifier = value; }

        /// <summary>Backing field for <see cref="DisplayName" /> property.</summary>
        private string _displayName;

        /// <summary>Friendly name for the key. Optional.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string DisplayName { get => this._displayName; set => this._displayName = value; }

        /// <summary>Backing field for <see cref="EndDateTime" /> property.</summary>
        private global::System.DateTime? _endDateTime;

        /// <summary>
        /// The date and time at which the credential expires.The Timestamp type represents date and time information using ISO 8601
        /// format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public global::System.DateTime? EndDateTime { get => this._endDateTime; set => this._endDateTime = value; }

        /// <summary>Backing field for <see cref="Key" /> property.</summary>
        private byte[] _key;

        /// <summary>Value for the key credential. Should be a base 64 encoded value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public byte[] Key { get => this._key; set => this._key = value; }

        /// <summary>Backing field for <see cref="KeyId" /> property.</summary>
        private string _keyId;

        /// <summary>The unique identifier (GUID) for the key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string KeyId { get => this._keyId; set => this._keyId = value; }

        /// <summary>Backing field for <see cref="StartDateTime" /> property.</summary>
        private global::System.DateTime? _startDateTime;

        /// <summary>
        /// The date and time at which the credential becomes valid.The Timestamp type represents date and time information using
        /// ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public global::System.DateTime? StartDateTime { get => this._startDateTime; set => this._startDateTime = value; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>The type of key credential; for example, 'Symmetric'.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string Type { get => this._type; set => this._type = value; }

        /// <summary>Backing field for <see cref="Usage" /> property.</summary>
        private string _usage;

        /// <summary>
        /// A string that describes the purpose for which the key can be used; for example, 'Verify'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string Usage { get => this._usage; set => this._usage = value; }

        /// <summary>Creates an new <see cref="MicrosoftGraphKeyCredential" /> instance.</summary>
        public MicrosoftGraphKeyCredential()
        {

        }
    }
    /// keyCredential
    public partial interface IMicrosoftGraphKeyCredential :
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IAssociativeArray<global::System.Object>
    {
        /// <summary>Custom key identifier</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Custom key identifier",
        SerializedName = @"customKeyIdentifier",
        PossibleTypes = new [] { typeof(byte[]) })]
        byte[] CustomKeyIdentifier { get; set; }
        /// <summary>Friendly name for the key. Optional.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Friendly name for the key. Optional.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>
        /// The date and time at which the credential expires.The Timestamp type represents date and time information using ISO 8601
        /// format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The date and time at which the credential expires.The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z",
        SerializedName = @"endDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? EndDateTime { get; set; }
        /// <summary>Value for the key credential. Should be a base 64 encoded value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Value for the key credential. Should be a base 64 encoded value.",
        SerializedName = @"key",
        PossibleTypes = new [] { typeof(byte[]) })]
        byte[] Key { get; set; }
        /// <summary>The unique identifier (GUID) for the key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The unique identifier (GUID) for the key.",
        SerializedName = @"keyId",
        PossibleTypes = new [] { typeof(string) })]
        string KeyId { get; set; }
        /// <summary>
        /// The date and time at which the credential becomes valid.The Timestamp type represents date and time information using
        /// ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The date and time at which the credential becomes valid.The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z",
        SerializedName = @"startDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? StartDateTime { get; set; }
        /// <summary>The type of key credential; for example, 'Symmetric'.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of key credential; for example, 'Symmetric'.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get; set; }
        /// <summary>
        /// A string that describes the purpose for which the key can be used; for example, 'Verify'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A string that describes the purpose for which the key can be used; for example, 'Verify'.",
        SerializedName = @"usage",
        PossibleTypes = new [] { typeof(string) })]
        string Usage { get; set; }

    }
    /// keyCredential
    internal partial interface IMicrosoftGraphKeyCredentialInternal

    {
        /// <summary>Custom key identifier</summary>
        byte[] CustomKeyIdentifier { get; set; }
        /// <summary>Friendly name for the key. Optional.</summary>
        string DisplayName { get; set; }
        /// <summary>
        /// The date and time at which the credential expires.The Timestamp type represents date and time information using ISO 8601
        /// format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
        /// </summary>
        global::System.DateTime? EndDateTime { get; set; }
        /// <summary>Value for the key credential. Should be a base 64 encoded value.</summary>
        byte[] Key { get; set; }
        /// <summary>The unique identifier (GUID) for the key.</summary>
        string KeyId { get; set; }
        /// <summary>
        /// The date and time at which the credential becomes valid.The Timestamp type represents date and time information using
        /// ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
        /// </summary>
        global::System.DateTime? StartDateTime { get; set; }
        /// <summary>The type of key credential; for example, 'Symmetric'.</summary>
        string Type { get; set; }
        /// <summary>
        /// A string that describes the purpose for which the key can be used; for example, 'Verify'.
        /// </summary>
        string Usage { get; set; }

    }
}