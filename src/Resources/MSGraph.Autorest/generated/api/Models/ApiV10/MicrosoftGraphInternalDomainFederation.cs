// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Extensions;

    /// <summary>internalDomainFederation</summary>
    public partial class MicrosoftGraphInternalDomainFederation :
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphInternalDomainFederation,
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphInternalDomainFederationInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphSamlOrWsFedProvider"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphSamlOrWsFedProvider __microsoftGraphSamlOrWsFedProvider = new Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.MicrosoftGraphSamlOrWsFedProvider();

        /// <summary>Backing field for <see cref="ActiveSignInUri" /> property.</summary>
        private string _activeSignInUri;

        /// <summary>
        /// URL of the endpoint used by active clients when authenticating with federated domains set up for single sign-on in Azure
        /// Active Directory (Azure AD). Corresponds to the ActiveLogOnUri property of the Set-MsolDomainFederationSettings MSOnline
        /// v1 PowerShell cmdlet.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string ActiveSignInUri { get => this._activeSignInUri; set => this._activeSignInUri = value; }

        /// <summary>The display name of the identity provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Inherited)]
        public string DisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphIdentityProviderBaseInternal)__microsoftGraphSamlOrWsFedProvider).DisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphIdentityProviderBaseInternal)__microsoftGraphSamlOrWsFedProvider).DisplayName = value ?? null; }

        /// <summary>Backing field for <see cref="FederatedIdpMfaBehavior" /> property.</summary>
        private string _federatedIdpMfaBehavior;

        /// <summary>federatedIdpMfaBehavior</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string FederatedIdpMfaBehavior { get => this._federatedIdpMfaBehavior; set => this._federatedIdpMfaBehavior = value; }

        /// <summary>The unique idenfier for an entity. Read-only.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphEntityInternal)__microsoftGraphSamlOrWsFedProvider).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphEntityInternal)__microsoftGraphSamlOrWsFedProvider).Id = value ?? null; }

        /// <summary>
        /// Backing field for <see cref="IsSignedAuthenticationRequestRequired" /> property.
        /// </summary>
        private bool? _isSignedAuthenticationRequestRequired;

        /// <summary>
        /// If true, when SAML authentication requests are sent to the federated SAML IdP, Azure AD will sign those requests using
        /// the OrgID signing key. If false (default), the SAML authentication requests sent to the federated IdP are not signed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public bool? IsSignedAuthenticationRequestRequired { get => this._isSignedAuthenticationRequestRequired; set => this._isSignedAuthenticationRequestRequired = value; }

        /// <summary>Issuer URI of the federation server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Inherited)]
        public string IssuerUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphSamlOrWsFedProviderInternal)__microsoftGraphSamlOrWsFedProvider).IssuerUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphSamlOrWsFedProviderInternal)__microsoftGraphSamlOrWsFedProvider).IssuerUri = value ?? null; }

        /// <summary>
        /// URI of the metadata exchange endpoint used for authentication from rich client applications.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Inherited)]
        public string MetadataExchangeUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphSamlOrWsFedProviderInternal)__microsoftGraphSamlOrWsFedProvider).MetadataExchangeUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphSamlOrWsFedProviderInternal)__microsoftGraphSamlOrWsFedProvider).MetadataExchangeUri = value ?? null; }

        /// <summary>Backing field for <see cref="NextSigningCertificate" /> property.</summary>
        private string _nextSigningCertificate;

        /// <summary>
        /// Fallback token signing certificate that is used to sign tokens when the primary signing certificate expires. Formatted
        /// as Base64 encoded strings of the public portion of the federated IdP's token signing certificate. Needs to be compatible
        /// with the X509Certificate2 class. Much like the signingCertificate, the nextSigningCertificate property is used if a rollover
        /// is required outside of the auto-rollover update, a new federation service is being set up, or if the new token signing
        /// certificate is not present in the federation properties after the federation service certificate has been updated.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string NextSigningCertificate { get => this._nextSigningCertificate; set => this._nextSigningCertificate = value; }

        /// <summary>
        /// URI that web-based clients are directed to when signing in to Azure Active Directory (Azure AD) services.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Inherited)]
        public string PassiveSignInUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphSamlOrWsFedProviderInternal)__microsoftGraphSamlOrWsFedProvider).PassiveSignInUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphSamlOrWsFedProviderInternal)__microsoftGraphSamlOrWsFedProvider).PassiveSignInUri = value ?? null; }

        /// <summary>authenticationProtocol</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Inherited)]
        public string PreferredAuthenticationProtocol { get => ((Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphSamlOrWsFedProviderInternal)__microsoftGraphSamlOrWsFedProvider).PreferredAuthenticationProtocol; set => ((Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphSamlOrWsFedProviderInternal)__microsoftGraphSamlOrWsFedProvider).PreferredAuthenticationProtocol = value ?? null; }

        /// <summary>Backing field for <see cref="PromptLoginBehavior" /> property.</summary>
        private string _promptLoginBehavior;

        /// <summary>promptLoginBehavior</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string PromptLoginBehavior { get => this._promptLoginBehavior; set => this._promptLoginBehavior = value; }

        /// <summary>Backing field for <see cref="SignOutUri" /> property.</summary>
        private string _signOutUri;

        /// <summary>
        /// URI that clients are redirected to when they sign out of Azure AD services. Corresponds to the LogOffUri property of the
        /// Set-MsolDomainFederationSettings MSOnline v1 PowerShell cmdlet.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string SignOutUri { get => this._signOutUri; set => this._signOutUri = value; }

        /// <summary>
        /// Current certificate used to sign tokens passed to the Microsoft identity platform. The certificate is formatted as a Base64
        /// encoded string of the public portion of the federated IdP's token signing certificate and must be compatible with the
        /// X509Certificate2 class. This property is used in the following scenarios: if a rollover is required outside of the autorollover
        /// update a new federation service is being set up if the new token signing certificate isn't present in the federation properties
        /// after the federation service certificate has been updated. Azure AD updates certificates via an autorollover process in
        /// which it attempts to retrieve a new certificate from the federation service metadata, 30 days before expiry of the current
        /// certificate. If a new certificate isn't available, Azure AD monitors the metadata daily and will update the federation
        /// settings for the domain when a new certificate is available.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Inherited)]
        public string SigningCertificate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphSamlOrWsFedProviderInternal)__microsoftGraphSamlOrWsFedProvider).SigningCertificate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphSamlOrWsFedProviderInternal)__microsoftGraphSamlOrWsFedProvider).SigningCertificate = value ?? null; }

        /// <summary>Backing field for <see cref="SigningCertificateUpdateStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphSigningCertificateUpdateStatus _signingCertificateUpdateStatus;

        /// <summary>signingCertificateUpdateStatus</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphSigningCertificateUpdateStatus SigningCertificateUpdateStatus { get => (this._signingCertificateUpdateStatus = this._signingCertificateUpdateStatus ?? new Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.MicrosoftGraphSigningCertificateUpdateStatus()); set => this._signingCertificateUpdateStatus = value; }

        /// <summary>Creates an new <see cref="MicrosoftGraphInternalDomainFederation" /> instance.</summary>
        public MicrosoftGraphInternalDomainFederation()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__microsoftGraphSamlOrWsFedProvider), __microsoftGraphSamlOrWsFedProvider);
            await eventListener.AssertObjectIsValid(nameof(__microsoftGraphSamlOrWsFedProvider), __microsoftGraphSamlOrWsFedProvider);
        }
    }
    /// internalDomainFederation
    public partial interface IMicrosoftGraphInternalDomainFederation :
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphSamlOrWsFedProvider
    {
        /// <summary>
        /// URL of the endpoint used by active clients when authenticating with federated domains set up for single sign-on in Azure
        /// Active Directory (Azure AD). Corresponds to the ActiveLogOnUri property of the Set-MsolDomainFederationSettings MSOnline
        /// v1 PowerShell cmdlet.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"URL of the endpoint used by active clients when authenticating with federated domains set up for single sign-on in Azure Active Directory (Azure AD). Corresponds to the ActiveLogOnUri property of the Set-MsolDomainFederationSettings MSOnline v1 PowerShell cmdlet.",
        SerializedName = @"activeSignInUri",
        PossibleTypes = new [] { typeof(string) })]
        string ActiveSignInUri { get; set; }
        /// <summary>federatedIdpMfaBehavior</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"federatedIdpMfaBehavior",
        SerializedName = @"federatedIdpMfaBehavior",
        PossibleTypes = new [] { typeof(string) })]
        string FederatedIdpMfaBehavior { get; set; }
        /// <summary>
        /// If true, when SAML authentication requests are sent to the federated SAML IdP, Azure AD will sign those requests using
        /// the OrgID signing key. If false (default), the SAML authentication requests sent to the federated IdP are not signed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"If true, when SAML authentication requests are sent to the federated SAML IdP, Azure AD will sign those requests using the OrgID signing key. If false (default), the SAML authentication requests sent to the federated IdP are not signed.",
        SerializedName = @"isSignedAuthenticationRequestRequired",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsSignedAuthenticationRequestRequired { get; set; }
        /// <summary>
        /// Fallback token signing certificate that is used to sign tokens when the primary signing certificate expires. Formatted
        /// as Base64 encoded strings of the public portion of the federated IdP's token signing certificate. Needs to be compatible
        /// with the X509Certificate2 class. Much like the signingCertificate, the nextSigningCertificate property is used if a rollover
        /// is required outside of the auto-rollover update, a new federation service is being set up, or if the new token signing
        /// certificate is not present in the federation properties after the federation service certificate has been updated.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Fallback token signing certificate that is used to sign tokens when the primary signing certificate expires. Formatted as Base64 encoded strings of the public portion of the federated IdP's token signing certificate. Needs to be compatible with the X509Certificate2 class. Much like the signingCertificate, the nextSigningCertificate property is used if a rollover is required outside of the auto-rollover update, a new federation service is being set up, or if the new token signing certificate is not present in the federation properties after the federation service certificate has been updated.",
        SerializedName = @"nextSigningCertificate",
        PossibleTypes = new [] { typeof(string) })]
        string NextSigningCertificate { get; set; }
        /// <summary>promptLoginBehavior</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"promptLoginBehavior",
        SerializedName = @"promptLoginBehavior",
        PossibleTypes = new [] { typeof(string) })]
        string PromptLoginBehavior { get; set; }
        /// <summary>
        /// URI that clients are redirected to when they sign out of Azure AD services. Corresponds to the LogOffUri property of the
        /// Set-MsolDomainFederationSettings MSOnline v1 PowerShell cmdlet.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"URI that clients are redirected to when they sign out of Azure AD services. Corresponds to the LogOffUri property of the Set-MsolDomainFederationSettings MSOnline v1 PowerShell cmdlet.",
        SerializedName = @"signOutUri",
        PossibleTypes = new [] { typeof(string) })]
        string SignOutUri { get; set; }
        /// <summary>signingCertificateUpdateStatus</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"signingCertificateUpdateStatus",
        SerializedName = @"signingCertificateUpdateStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphSigningCertificateUpdateStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphSigningCertificateUpdateStatus SigningCertificateUpdateStatus { get; set; }

    }
    /// internalDomainFederation
    internal partial interface IMicrosoftGraphInternalDomainFederationInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphSamlOrWsFedProviderInternal
    {
        /// <summary>
        /// URL of the endpoint used by active clients when authenticating with federated domains set up for single sign-on in Azure
        /// Active Directory (Azure AD). Corresponds to the ActiveLogOnUri property of the Set-MsolDomainFederationSettings MSOnline
        /// v1 PowerShell cmdlet.
        /// </summary>
        string ActiveSignInUri { get; set; }
        /// <summary>federatedIdpMfaBehavior</summary>
        string FederatedIdpMfaBehavior { get; set; }
        /// <summary>
        /// If true, when SAML authentication requests are sent to the federated SAML IdP, Azure AD will sign those requests using
        /// the OrgID signing key. If false (default), the SAML authentication requests sent to the federated IdP are not signed.
        /// </summary>
        bool? IsSignedAuthenticationRequestRequired { get; set; }
        /// <summary>
        /// Fallback token signing certificate that is used to sign tokens when the primary signing certificate expires. Formatted
        /// as Base64 encoded strings of the public portion of the federated IdP's token signing certificate. Needs to be compatible
        /// with the X509Certificate2 class. Much like the signingCertificate, the nextSigningCertificate property is used if a rollover
        /// is required outside of the auto-rollover update, a new federation service is being set up, or if the new token signing
        /// certificate is not present in the federation properties after the federation service certificate has been updated.
        /// </summary>
        string NextSigningCertificate { get; set; }
        /// <summary>promptLoginBehavior</summary>
        string PromptLoginBehavior { get; set; }
        /// <summary>
        /// URI that clients are redirected to when they sign out of Azure AD services. Corresponds to the LogOffUri property of the
        /// Set-MsolDomainFederationSettings MSOnline v1 PowerShell cmdlet.
        /// </summary>
        string SignOutUri { get; set; }
        /// <summary>signingCertificateUpdateStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphSigningCertificateUpdateStatus SigningCertificateUpdateStatus { get; set; }

    }
}