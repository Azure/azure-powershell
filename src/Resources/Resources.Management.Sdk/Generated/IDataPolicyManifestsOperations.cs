// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ResourceManager
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// DataPolicyManifestsOperations operations.
    /// </summary>
    public partial interface IDataPolicyManifestsOperations
    {
        /// <summary>
        /// This operation retrieves the data policy manifest with the given policy
        /// mode.
        /// </summary>
        /// <remarks>
        /// This operation retrieves the data policy manifest with the given policy
        /// mode.
        /// </remarks>
        /// <param name='policyMode'>
        /// The policy mode of the data policy manifest to get.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<DataPolicyManifest>> GetByPolicyModeWithHttpMessagesAsync(string policyMode, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// This operation retrieves a list of all the data policy manifests that match
        /// the optional given $filter. Valid values for $filter are:
        /// &#34;$filter=namespace eq &#39;{0}&#39;&#34;. If $filter is not provided, the unfiltered
        /// list includes all data policy manifests for data resource types. If
        /// $filter=namespace is provided, the returned list only includes all data
        /// policy manifests that have a namespace matching the provided value.
        /// </summary>
        /// <remarks>
        /// This operation retrieves a list of all the data policy manifests that match
        /// the optional given $filter. Valid values for $filter are:
        /// &#34;$filter=namespace eq &#39;{0}&#39;&#34;. If $filter is not provided, the unfiltered
        /// list includes all data policy manifests for data resource types. If
        /// $filter=namespace is provided, the returned list only includes all data
        /// policy manifests that have a namespace matching the provided value.
        /// </remarks>
        /// <param name='filter'>
        /// The filter to apply on the operation. Valid values for $filter are:
        /// &#34;namespace eq &#39;{value}&#39;&#34;. If $filter is not provided, no filtering is
        /// performed. If $filter=namespace eq &#39;{value}&#39; is provided, the returned list
        /// only includes all data policy manifests that have a namespace matching the
        /// provided value.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<Microsoft.Rest.Azure.IPage<DataPolicyManifest>>> ListWithHttpMessagesAsync(string filter = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// This operation retrieves a list of all the data policy manifests that match
        /// the optional given $filter. Valid values for $filter are:
        /// &#34;$filter=namespace eq &#39;{0}&#39;&#34;. If $filter is not provided, the unfiltered
        /// list includes all data policy manifests for data resource types. If
        /// $filter=namespace is provided, the returned list only includes all data
        /// policy manifests that have a namespace matching the provided value.
        /// </summary>
        /// <remarks>
        /// This operation retrieves a list of all the data policy manifests that match
        /// the optional given $filter. Valid values for $filter are:
        /// &#34;$filter=namespace eq &#39;{0}&#39;&#34;. If $filter is not provided, the unfiltered
        /// list includes all data policy manifests for data resource types. If
        /// $filter=namespace is provided, the returned list only includes all data
        /// policy manifests that have a namespace matching the provided value.
        /// </remarks>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<Microsoft.Rest.Azure.IPage<DataPolicyManifest>>> ListNextWithHttpMessagesAsync(string nextPageLink, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

    }
}