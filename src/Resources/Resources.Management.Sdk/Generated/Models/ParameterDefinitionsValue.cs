// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ResourceManager.Models
{
    using System.Linq;

    /// <summary>
    /// The definition of a parameter that can be provided to the policy.
    /// </summary>
    public partial class ParameterDefinitionsValue
    {
        /// <summary>
        /// Initializes a new instance of the ParameterDefinitionsValue class.
        /// </summary>
        public ParameterDefinitionsValue()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ParameterDefinitionsValue class.
        /// </summary>

        /// <param name="type">The data type of the parameter.
        /// Possible values include: &#39;String&#39;, &#39;Array&#39;, &#39;Object&#39;, &#39;Boolean&#39;, &#39;Integer&#39;,
        /// &#39;Float&#39;, &#39;DateTime&#39;</param>

        /// <param name="allowedValues">The allowed values for the parameter.
        /// </param>

        /// <param name="defaultValue">The default value for the parameter if no value is provided.
        /// </param>

        /// <param name="metadata">General metadata for the parameter.
        /// </param>
        public ParameterDefinitionsValue(string type = default(string), System.Collections.Generic.IList<object> allowedValues = default(System.Collections.Generic.IList<object>), object defaultValue = default(object), ParameterDefinitionsValueMetadata metadata = default(ParameterDefinitionsValueMetadata))

        {
            this.Type = type;
            this.AllowedValues = allowedValues;
            this.DefaultValue = defaultValue;
            this.Metadata = metadata;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the data type of the parameter. Possible values include: &#39;String&#39;, &#39;Array&#39;, &#39;Object&#39;, &#39;Boolean&#39;, &#39;Integer&#39;, &#39;Float&#39;, &#39;DateTime&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "type")]
        public string Type {get; set; }

        /// <summary>
        /// Gets or sets the allowed values for the parameter.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "allowedValues")]
        public System.Collections.Generic.IList<object> AllowedValues {get; set; }

        /// <summary>
        /// Gets or sets the default value for the parameter if no value is provided.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "defaultValue")]
        public object DefaultValue {get; set; }

        /// <summary>
        /// Gets or sets general metadata for the parameter.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "metadata")]
        public ParameterDefinitionsValueMetadata Metadata {get; set; }
    }
}