// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Resources.Models
{
    using System.Linq;

    /// <summary>
    /// Resource provider information.
    /// </summary>
    public partial class Provider
    {
        /// <summary>
        /// Initializes a new instance of the Provider class.
        /// </summary>
        public Provider()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Provider class.
        /// </summary>

        /// <param name="id">The provider ID.
        /// </param>

        /// <param name="namespaceProperty">The namespace of the resource provider.
        /// </param>

        /// <param name="registrationState">The registration state of the resource provider.
        /// </param>

        /// <param name="registrationPolicy">The registration policy of the resource provider.
        /// </param>

        /// <param name="resourceTypes">The collection of provider resource types.
        /// </param>

        /// <param name="providerAuthorizationConsentState">The provider authorization consent state.
        /// Possible values include: &#39;NotSpecified&#39;, &#39;Required&#39;, &#39;NotRequired&#39;,
        /// &#39;Consented&#39;</param>
        public Provider(string id = default(string), string namespaceProperty = default(string), string registrationState = default(string), string registrationPolicy = default(string), System.Collections.Generic.IList<ProviderResourceType> resourceTypes = default(System.Collections.Generic.IList<ProviderResourceType>), string providerAuthorizationConsentState = default(string))

        {
            this.Id = id;
            this.NamespaceProperty = namespaceProperty;
            this.RegistrationState = registrationState;
            this.RegistrationPolicy = registrationPolicy;
            this.ResourceTypes = resourceTypes;
            this.ProviderAuthorizationConsentState = providerAuthorizationConsentState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the provider ID.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "id")]
        public string Id {get; private set; }

        /// <summary>
        /// Gets or sets the namespace of the resource provider.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "namespace")]
        public string NamespaceProperty {get; set; }

        /// <summary>
        /// Gets the registration state of the resource provider.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "registrationState")]
        public string RegistrationState {get; private set; }

        /// <summary>
        /// Gets the registration policy of the resource provider.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "registrationPolicy")]
        public string RegistrationPolicy {get; private set; }

        /// <summary>
        /// Gets the collection of provider resource types.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "resourceTypes")]
        public System.Collections.Generic.IList<ProviderResourceType> ResourceTypes {get; private set; }

        /// <summary>
        /// Gets or sets the provider authorization consent state. Possible values include: &#39;NotSpecified&#39;, &#39;Required&#39;, &#39;NotRequired&#39;, &#39;Consented&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "providerAuthorizationConsentState")]
        public string ProviderAuthorizationConsentState {get; set; }
    }
}