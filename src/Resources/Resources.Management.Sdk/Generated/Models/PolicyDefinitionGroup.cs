// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ResourceManager.Models
{
    using System.Linq;

    /// <summary>
    /// The policy definition group.
    /// </summary>
    public partial class PolicyDefinitionGroup
    {
        /// <summary>
        /// Initializes a new instance of the PolicyDefinitionGroup class.
        /// </summary>
        public PolicyDefinitionGroup()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PolicyDefinitionGroup class.
        /// </summary>

        /// <param name="name">The name of the group.
        /// </param>

        /// <param name="displayName">The group&#39;s display name.
        /// </param>

        /// <param name="category">The group&#39;s category.
        /// </param>

        /// <param name="description">The group&#39;s description.
        /// </param>

        /// <param name="additionalMetadataId">A resource ID of a resource that contains additional metadata about the
        /// group.
        /// </param>
        public PolicyDefinitionGroup(string name, string displayName = default(string), string category = default(string), string description = default(string), string additionalMetadataId = default(string))

        {
            this.Name = name;
            this.DisplayName = displayName;
            this.Category = category;
            this.Description = description;
            this.AdditionalMetadataId = additionalMetadataId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the name of the group.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; set; }

        /// <summary>
        /// Gets or sets the group&#39;s display name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "displayName")]
        public string DisplayName {get; set; }

        /// <summary>
        /// Gets or sets the group&#39;s category.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "category")]
        public string Category {get; set; }

        /// <summary>
        /// Gets or sets the group&#39;s description.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "description")]
        public string Description {get; set; }

        /// <summary>
        /// Gets or sets a resource ID of a resource that contains additional metadata
        /// about the group.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "additionalMetadataId")]
        public string AdditionalMetadataId {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Name == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Name");
            }





        }
    }
}