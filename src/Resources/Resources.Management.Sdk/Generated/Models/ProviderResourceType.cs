// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Resources.Models
{
    using System.Linq;

    /// <summary>
    /// Resource type managed by the resource provider.
    /// </summary>
    public partial class ProviderResourceType
    {
        /// <summary>
        /// Initializes a new instance of the ProviderResourceType class.
        /// </summary>
        public ProviderResourceType()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ProviderResourceType class.
        /// </summary>

        /// <param name="resourceType">The resource type.
        /// </param>

        /// <param name="locations">The collection of locations where this resource type can be created.
        /// </param>

        /// <param name="locationMappings">The location mappings that are supported by this resource type.
        /// </param>

        /// <param name="aliases">The aliases that are supported by this resource type.
        /// </param>

        /// <param name="apiVersions">The API version.
        /// </param>

        /// <param name="defaultApiVersion">The default API version.
        /// </param>

        /// <param name="zoneMappings">
        /// </param>

        /// <param name="apiProfiles">The API profiles for the resource provider.
        /// </param>

        /// <param name="capabilities">The additional capabilities offered by this resource type.
        /// </param>

        /// <param name="properties">The properties.
        /// </param>
        public ProviderResourceType(string resourceType = default(string), System.Collections.Generic.IList<string> locations = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<ProviderExtendedLocation> locationMappings = default(System.Collections.Generic.IList<ProviderExtendedLocation>), System.Collections.Generic.IList<Alias> aliases = default(System.Collections.Generic.IList<Alias>), System.Collections.Generic.IList<string> apiVersions = default(System.Collections.Generic.IList<string>), string defaultApiVersion = default(string), System.Collections.Generic.IList<ZoneMapping> zoneMappings = default(System.Collections.Generic.IList<ZoneMapping>), System.Collections.Generic.IList<ApiProfile> apiProfiles = default(System.Collections.Generic.IList<ApiProfile>), string capabilities = default(string), System.Collections.Generic.IDictionary<string, string> properties = default(System.Collections.Generic.IDictionary<string, string>))

        {
            this.ResourceType = resourceType;
            this.Locations = locations;
            this.LocationMappings = locationMappings;
            this.Aliases = aliases;
            this.ApiVersions = apiVersions;
            this.DefaultApiVersion = defaultApiVersion;
            this.ZoneMappings = zoneMappings;
            this.ApiProfiles = apiProfiles;
            this.Capabilities = capabilities;
            this.Properties = properties;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the resource type.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "resourceType")]
        public string ResourceType {get; set; }

        /// <summary>
        /// Gets or sets the collection of locations where this resource type can be
        /// created.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "locations")]
        public System.Collections.Generic.IList<string> Locations {get; set; }

        /// <summary>
        /// Gets or sets the location mappings that are supported by this resource
        /// type.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "locationMappings")]
        public System.Collections.Generic.IList<ProviderExtendedLocation> LocationMappings {get; set; }

        /// <summary>
        /// Gets or sets the aliases that are supported by this resource type.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "aliases")]
        public System.Collections.Generic.IList<Alias> Aliases {get; set; }

        /// <summary>
        /// Gets or sets the API version.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "apiVersions")]
        public System.Collections.Generic.IList<string> ApiVersions {get; set; }

        /// <summary>
        /// Gets the default API version.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "defaultApiVersion")]
        public string DefaultApiVersion {get; private set; }

        /// <summary>
        /// Gets or sets
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "zoneMappings")]
        public System.Collections.Generic.IList<ZoneMapping> ZoneMappings {get; set; }

        /// <summary>
        /// Gets the API profiles for the resource provider.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "apiProfiles")]
        public System.Collections.Generic.IList<ApiProfile> ApiProfiles {get; private set; }

        /// <summary>
        /// Gets or sets the additional capabilities offered by this resource type.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "capabilities")]
        public string Capabilities {get; set; }

        /// <summary>
        /// Gets or sets the properties.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties")]
        public System.Collections.Generic.IDictionary<string, string> Properties {get; set; }
    }
}