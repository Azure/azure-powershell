// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.ResourceManager.Models
{
    using System.Linq;

    /// <summary>
    /// The policy definition reference.
    /// </summary>
    public partial class PolicyDefinitionReference
    {
        /// <summary>
        /// Initializes a new instance of the PolicyDefinitionReference class.
        /// </summary>
        public PolicyDefinitionReference()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PolicyDefinitionReference class.
        /// </summary>

        /// <param name="policyDefinitionId">The ID of the policy definition or policy set definition.
        /// </param>

        /// <param name="parameters">The parameter values for the referenced policy rule. The keys are the
        /// parameter names.
        /// </param>

        /// <param name="policyDefinitionReferenceId">A unique id (within the policy set definition) for this policy definition
        /// reference.
        /// </param>

        /// <param name="groupNames">The name of the groups that this policy definition reference belongs to.
        /// </param>
        public PolicyDefinitionReference(string policyDefinitionId, System.Collections.Generic.IDictionary<string, ParameterValuesValue> parameters = default(System.Collections.Generic.IDictionary<string, ParameterValuesValue>), string policyDefinitionReferenceId = default(string), System.Collections.Generic.IList<string> groupNames = default(System.Collections.Generic.IList<string>))

        {
            this.PolicyDefinitionId = policyDefinitionId;
            this.Parameters = parameters;
            this.PolicyDefinitionReferenceId = policyDefinitionReferenceId;
            this.GroupNames = groupNames;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the ID of the policy definition or policy set definition.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "policyDefinitionId")]
        public string PolicyDefinitionId {get; set; }

        /// <summary>
        /// Gets or sets the parameter values for the referenced policy rule. The keys
        /// are the parameter names.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "parameters")]
        public System.Collections.Generic.IDictionary<string, ParameterValuesValue> Parameters {get; set; }

        /// <summary>
        /// Gets or sets a unique id (within the policy set definition) for this policy
        /// definition reference.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "policyDefinitionReferenceId")]
        public string PolicyDefinitionReferenceId {get; set; }

        /// <summary>
        /// Gets or sets the name of the groups that this policy definition reference
        /// belongs to.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "groupNames")]
        public System.Collections.Generic.IList<string> GroupNames {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.PolicyDefinitionId == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "PolicyDefinitionId");
            }




        }
    }
}