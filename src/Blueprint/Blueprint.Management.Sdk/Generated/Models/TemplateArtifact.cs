// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Blueprint.Models
{
    using System.Linq;

    /// <summary>
    /// Blueprint artifact that deploys a Resource Manager template.
    /// </summary>
    [Newtonsoft.Json.JsonObject("template")]
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class TemplateArtifact : Artifact
    {
        /// <summary>
        /// Initializes a new instance of the TemplateArtifact class.
        /// </summary>
        public TemplateArtifact()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TemplateArtifact class.
        /// </summary>

        /// <param name="id">String Id used to locate any resource on Azure.
        /// </param>

        /// <param name="type">Type of this resource.
        /// </param>

        /// <param name="name">Name of this resource.
        /// </param>

        /// <param name="displayName">One-liner string explain this resource.
        /// </param>

        /// <param name="description">Multi-line explain this resource.
        /// </param>

        /// <param name="dependsOn">Artifacts which need to be deployed before the specified artifact.
        /// </param>

        /// <param name="template">The Resource Manager template blueprint artifact body.
        /// </param>

        /// <param name="resourceGroup">If applicable, the name of the resource group placeholder to which the
        /// Resource Manager template blueprint artifact will be deployed.
        /// </param>

        /// <param name="parameters">Resource Manager template blueprint artifact parameter values.
        /// </param>
        public TemplateArtifact(object template, System.Collections.Generic.IDictionary<string, ParameterValue> parameters, string id = default(string), string type = default(string), string name = default(string), string displayName = default(string), string description = default(string), System.Collections.Generic.IList<string> dependsOn = default(System.Collections.Generic.IList<string>), string resourceGroup = default(string))

        : base(id, type, name)
        {
            this.DisplayName = displayName;
            this.Description = description;
            this.DependsOn = dependsOn;
            this.Template = template;
            this.ResourceGroup = resourceGroup;
            this.Parameters = parameters;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets one-liner string explain this resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.displayName")]
        public string DisplayName {get; set; }

        /// <summary>
        /// Gets or sets multi-line explain this resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.description")]
        public string Description {get; set; }

        /// <summary>
        /// Gets or sets artifacts which need to be deployed before the specified
        /// artifact.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.dependsOn")]
        public System.Collections.Generic.IList<string> DependsOn {get; set; }

        /// <summary>
        /// Gets or sets the Resource Manager template blueprint artifact body.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.template")]
        public object Template {get; set; }

        /// <summary>
        /// Gets or sets if applicable, the name of the resource group placeholder to
        /// which the Resource Manager template blueprint artifact will be deployed.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.resourceGroup")]
        public string ResourceGroup {get; set; }

        /// <summary>
        /// Gets or sets resource Manager template blueprint artifact parameter values.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.parameters")]
        public System.Collections.Generic.IDictionary<string, ParameterValue> Parameters {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Template == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Template");
            }
            if (this.Parameters == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Parameters");
            }
            if (this.DisplayName != null)
            {
                if (this.DisplayName.Length > 256)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MaxLength, "DisplayName", 256);
                }
            }
            if (this.Description != null)
            {
                if (this.Description.Length > 500)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MaxLength, "Description", 500);
                }
            }



            if (this.Parameters != null)
            {
                foreach (var valueElement in this.Parameters.Values)
                {
                    if (valueElement != null)
                    {
                        valueElement.Validate();
                    }
                }
            }
        }
    }
}