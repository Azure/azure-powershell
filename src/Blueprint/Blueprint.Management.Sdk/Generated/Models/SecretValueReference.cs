// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Blueprint.Models
{
    using System.Linq;

    /// <summary>
    /// Reference to a Key Vault secret.
    /// </summary>
    public partial class SecretValueReference
    {
        /// <summary>
        /// Initializes a new instance of the SecretValueReference class.
        /// </summary>
        public SecretValueReference()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SecretValueReference class.
        /// </summary>

        /// <param name="keyVault">Specifies the reference to a given Azure Key Vault.
        /// </param>

        /// <param name="secretName">Name of the secret.
        /// </param>

        /// <param name="secretVersion">The version of the secret to use. If left blank, the latest version of the
        /// secret is used.
        /// </param>
        public SecretValueReference(KeyVaultReference keyVault, string secretName, string secretVersion = default(string))

        {
            this.KeyVault = keyVault;
            this.SecretName = secretName;
            this.SecretVersion = secretVersion;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets specifies the reference to a given Azure Key Vault.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "keyVault")]
        public KeyVaultReference KeyVault {get; set; }

        /// <summary>
        /// Gets or sets name of the secret.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "secretName")]
        public string SecretName {get; set; }

        /// <summary>
        /// Gets or sets the version of the secret to use. If left blank, the latest
        /// version of the secret is used.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "secretVersion")]
        public string SecretVersion {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.KeyVault == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "KeyVault");
            }
            if (this.SecretName == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "SecretName");
            }
            if (this.KeyVault != null)
            {
                this.KeyVault.Validate();
            }


        }
    }
}