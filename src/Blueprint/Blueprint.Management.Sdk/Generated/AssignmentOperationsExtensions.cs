// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.Blueprint
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for AssignmentOperations
    /// </summary>
    public static partial class AssignmentOperationsExtensions
    {
        /// <summary>
        /// List operations for given blueprint assignment within a subscription or a
        /// management group.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceScope'>
        /// The scope of the resource. Valid scopes are: management group (format:
        /// &#39;/providers/Microsoft.Management/managementGroups/{managementGroup}&#39;),
        /// subscription (format: &#39;/subscriptions/{subscriptionId}&#39;).
        /// </param>
        /// <param name='assignmentName'>
        /// Name of the blueprint assignment.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<AssignmentOperation> List(this IAssignmentOperations operations, string resourceScope, string assignmentName)
        {
                return ((IAssignmentOperations)operations).ListAsync(resourceScope, assignmentName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// List operations for given blueprint assignment within a subscription or a
        /// management group.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceScope'>
        /// The scope of the resource. Valid scopes are: management group (format:
        /// &#39;/providers/Microsoft.Management/managementGroups/{managementGroup}&#39;),
        /// subscription (format: &#39;/subscriptions/{subscriptionId}&#39;).
        /// </param>
        /// <param name='assignmentName'>
        /// Name of the blueprint assignment.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<AssignmentOperation>> ListAsync(this IAssignmentOperations operations, string resourceScope, string assignmentName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListWithHttpMessagesAsync(resourceScope, assignmentName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Get a blueprint assignment operation.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceScope'>
        /// The scope of the resource. Valid scopes are: management group (format:
        /// &#39;/providers/Microsoft.Management/managementGroups/{managementGroup}&#39;),
        /// subscription (format: &#39;/subscriptions/{subscriptionId}&#39;).
        /// </param>
        /// <param name='assignmentName'>
        /// Name of the blueprint assignment.
        /// </param>
        /// <param name='assignmentOperationName'>
        /// Name of the blueprint assignment operation.
        /// </param>
        public static AssignmentOperation Get(this IAssignmentOperations operations, string resourceScope, string assignmentName, string assignmentOperationName)
        {
                return ((IAssignmentOperations)operations).GetAsync(resourceScope, assignmentName, assignmentOperationName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Get a blueprint assignment operation.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceScope'>
        /// The scope of the resource. Valid scopes are: management group (format:
        /// &#39;/providers/Microsoft.Management/managementGroups/{managementGroup}&#39;),
        /// subscription (format: &#39;/subscriptions/{subscriptionId}&#39;).
        /// </param>
        /// <param name='assignmentName'>
        /// Name of the blueprint assignment.
        /// </param>
        /// <param name='assignmentOperationName'>
        /// Name of the blueprint assignment operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<AssignmentOperation> GetAsync(this IAssignmentOperations operations, string resourceScope, string assignmentName, string assignmentOperationName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.GetWithHttpMessagesAsync(resourceScope, assignmentName, assignmentOperationName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// List operations for given blueprint assignment within a subscription or a
        /// management group.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<AssignmentOperation> ListNext(this IAssignmentOperations operations, string nextPageLink)
        {
                return ((IAssignmentOperations)operations).ListNextAsync(nextPageLink).GetAwaiter().GetResult();
        }

        /// <summary>
        /// List operations for given blueprint assignment within a subscription or a
        /// management group.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<AssignmentOperation>> ListNextAsync(this IAssignmentOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
    }
}
