// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20231001Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Extensions;

    /// <summary>Properties of a Pool</summary>
    public partial class PoolProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20231001Preview.IPoolProperties,
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20231001Preview.IPoolPropertiesInternal,
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20231001Preview.IPoolUpdateProperties"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20231001Preview.IPoolUpdateProperties __poolUpdateProperties = new Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20231001Preview.PoolUpdateProperties();

        /// <summary>Backing field for <see cref="DevBoxCount" /> property.</summary>
        private int? _devBoxCount;

        /// <summary>Indicates the number of provisioned Dev Boxes in this pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Owned)]
        public int? DevBoxCount { get => this._devBoxCount; }

        /// <summary>Name of a Dev Box definition in parent Project of this Pool</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Inherited)]
        public string DevBoxDefinitionName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20231001Preview.IPoolUpdatePropertiesInternal)__poolUpdateProperties).DevBoxDefinitionName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20231001Preview.IPoolUpdatePropertiesInternal)__poolUpdateProperties).DevBoxDefinitionName = value ?? null; }

        /// <summary>The display name of the pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Inherited)]
        public string DisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20231001Preview.IPoolUpdatePropertiesInternal)__poolUpdateProperties).DisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20231001Preview.IPoolUpdatePropertiesInternal)__poolUpdateProperties).DisplayName = value ?? null; }

        /// <summary>Backing field for <see cref="HealthStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.HealthStatus? _healthStatus;

        /// <summary>
        /// Overall health status of the Pool. Indicates whether or not the Pool is available to create Dev Boxes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.HealthStatus? HealthStatus { get => this._healthStatus; }

        /// <summary>Backing field for <see cref="HealthStatusDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20231001Preview.IHealthStatusDetail[] _healthStatusDetail;

        /// <summary>
        /// Details on the Pool health status to help diagnose issues. This is only populated when the pool status indicates the pool
        /// is in a non-healthy state
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20231001Preview.IHealthStatusDetail[] HealthStatusDetail { get => this._healthStatusDetail; }

        /// <summary>
        /// Specifies the license type indicating the caller has already acquired licenses for the Dev Boxes that will be created.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.LicenseType? LicenseType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20231001Preview.IPoolUpdatePropertiesInternal)__poolUpdateProperties).LicenseType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20231001Preview.IPoolUpdatePropertiesInternal)__poolUpdateProperties).LicenseType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.LicenseType)""); }

        /// <summary>
        /// Indicates whether owners of Dev Boxes in this pool are added as local administrators on the Dev Box.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.LocalAdminStatus? LocalAdministrator { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20231001Preview.IPoolUpdatePropertiesInternal)__poolUpdateProperties).LocalAdministrator; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20231001Preview.IPoolUpdatePropertiesInternal)__poolUpdateProperties).LocalAdministrator = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.LocalAdminStatus)""); }

        /// <summary>
        /// The regions of the managed virtual network (required when managedNetworkType is Managed).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Inherited)]
        public string[] ManagedVirtualNetworkRegion { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20231001Preview.IPoolUpdatePropertiesInternal)__poolUpdateProperties).ManagedVirtualNetworkRegion; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20231001Preview.IPoolUpdatePropertiesInternal)__poolUpdateProperties).ManagedVirtualNetworkRegion = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for DevBoxCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20231001Preview.IPoolPropertiesInternal.DevBoxCount { get => this._devBoxCount; set { {_devBoxCount = value;} } }

        /// <summary>Internal Acessors for HealthStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.HealthStatus? Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20231001Preview.IPoolPropertiesInternal.HealthStatus { get => this._healthStatus; set { {_healthStatus = value;} } }

        /// <summary>Internal Acessors for HealthStatusDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20231001Preview.IHealthStatusDetail[] Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20231001Preview.IPoolPropertiesInternal.HealthStatusDetail { get => this._healthStatusDetail; set { {_healthStatusDetail = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20231001Preview.IPoolPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Name of a Network Connection in parent Project of this Pool</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Inherited)]
        public string NetworkConnectionName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20231001Preview.IPoolUpdatePropertiesInternal)__poolUpdateProperties).NetworkConnectionName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20231001Preview.IPoolUpdatePropertiesInternal)__poolUpdateProperties).NetworkConnectionName = value ?? null; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.ProvisioningState? _provisioningState;

        /// <summary>The provisioning state of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.ProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>
        /// Indicates whether Dev Boxes in this pool are created with single sign on enabled. The also requires that single sign on
        /// be enabled on the tenant.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.SingleSignOnStatus? SingleSignOnStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20231001Preview.IPoolUpdatePropertiesInternal)__poolUpdateProperties).SingleSignOnStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20231001Preview.IPoolUpdatePropertiesInternal)__poolUpdateProperties).SingleSignOnStatus = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.SingleSignOnStatus)""); }

        /// <summary>Stop on disconnect configuration settings for Dev Boxes created in this pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20231001Preview.IStopOnDisconnectConfiguration StopOnDisconnect { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20231001Preview.IPoolUpdatePropertiesInternal)__poolUpdateProperties).StopOnDisconnect; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20231001Preview.IPoolUpdatePropertiesInternal)__poolUpdateProperties).StopOnDisconnect = value ?? null /* model class */; }

        /// <summary>
        /// The specified time in minutes to wait before stopping a Dev Box once disconnect is detected.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Inherited)]
        public int? StopOnDisconnectGracePeriodMinute { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20231001Preview.IPoolUpdatePropertiesInternal)__poolUpdateProperties).StopOnDisconnectGracePeriodMinute; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20231001Preview.IPoolUpdatePropertiesInternal)__poolUpdateProperties).StopOnDisconnectGracePeriodMinute = value ?? default(int); }

        /// <summary>
        /// Whether the feature to stop the Dev Box on disconnect once the grace period has lapsed is enabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.StopOnDisconnectEnableStatus? StopOnDisconnectStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20231001Preview.IPoolUpdatePropertiesInternal)__poolUpdateProperties).StopOnDisconnectStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20231001Preview.IPoolUpdatePropertiesInternal)__poolUpdateProperties).StopOnDisconnectStatus = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.StopOnDisconnectEnableStatus)""); }

        /// <summary>
        /// Indicates whether the pool uses a Virtual Network managed by Microsoft or a customer provided network.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.VirtualNetworkType? VirtualNetworkType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20231001Preview.IPoolUpdatePropertiesInternal)__poolUpdateProperties).VirtualNetworkType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20231001Preview.IPoolUpdatePropertiesInternal)__poolUpdateProperties).VirtualNetworkType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.VirtualNetworkType)""); }

        /// <summary>Creates an new <see cref="PoolProperties" /> instance.</summary>
        public PoolProperties()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__poolUpdateProperties), __poolUpdateProperties);
            await eventListener.AssertObjectIsValid(nameof(__poolUpdateProperties), __poolUpdateProperties);
        }
    }
    /// Properties of a Pool
    public partial interface IPoolProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20231001Preview.IPoolUpdateProperties
    {
        /// <summary>Indicates the number of provisioned Dev Boxes in this pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Indicates the number of provisioned Dev Boxes in this pool.",
        SerializedName = @"devBoxCount",
        PossibleTypes = new [] { typeof(int) })]
        int? DevBoxCount { get;  }
        /// <summary>
        /// Overall health status of the Pool. Indicates whether or not the Pool is available to create Dev Boxes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Overall health status of the Pool. Indicates whether or not the Pool is available to create Dev Boxes.",
        SerializedName = @"healthStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.HealthStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.HealthStatus? HealthStatus { get;  }
        /// <summary>
        /// Details on the Pool health status to help diagnose issues. This is only populated when the pool status indicates the pool
        /// is in a non-healthy state
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Details on the Pool health status to help diagnose issues. This is only populated when the pool status indicates the pool is in a non-healthy state",
        SerializedName = @"healthStatusDetails",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20231001Preview.IHealthStatusDetail) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20231001Preview.IHealthStatusDetail[] HealthStatusDetail { get;  }
        /// <summary>The provisioning state of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state of the resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.ProvisioningState? ProvisioningState { get;  }

    }
    /// Properties of a Pool
    internal partial interface IPoolPropertiesInternal :
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20231001Preview.IPoolUpdatePropertiesInternal
    {
        /// <summary>Indicates the number of provisioned Dev Boxes in this pool.</summary>
        int? DevBoxCount { get; set; }
        /// <summary>
        /// Overall health status of the Pool. Indicates whether or not the Pool is available to create Dev Boxes.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.HealthStatus? HealthStatus { get; set; }
        /// <summary>
        /// Details on the Pool health status to help diagnose issues. This is only populated when the pool status indicates the pool
        /// is in a non-healthy state
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20231001Preview.IHealthStatusDetail[] HealthStatusDetail { get; set; }
        /// <summary>The provisioning state of the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.ProvisioningState? ProvisioningState { get; set; }

    }
}