// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Extensions;

    /// <summary>
    /// Properties of a project. These properties can be updated after the resource has been created.
    /// </summary>
    public partial class ProjectUpdateProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IProjectUpdateProperties,
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IProjectUpdatePropertiesInternal
    {

        /// <summary>Backing field for <see cref="CatalogSetting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IProjectCatalogSettings _catalogSetting;

        /// <summary>Settings to be used when associating a project with a catalog.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IProjectCatalogSettings CatalogSetting { get => (this._catalogSetting = this._catalogSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.ProjectCatalogSettings()); set => this._catalogSetting = value; }

        /// <summary>Indicates catalog item types that can be synced.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.CatalogItemType[] CatalogSettingCatalogItemSyncType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IProjectCatalogSettingsInternal)CatalogSetting).CatalogItemSyncType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IProjectCatalogSettingsInternal)CatalogSetting).CatalogItemSyncType = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Description" /> property.</summary>
        private string _description;

        /// <summary>Description of the project.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Owned)]
        public string Description { get => this._description; set => this._description = value; }

        /// <summary>Backing field for <see cref="DevCenterId" /> property.</summary>
        private string _devCenterId;

        /// <summary>Resource Id of an associated DevCenter</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Owned)]
        public string DevCenterId { get => this._devCenterId; set => this._devCenterId = value; }

        /// <summary>Backing field for <see cref="DisplayName" /> property.</summary>
        private string _displayName;

        /// <summary>The display name of the project.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Owned)]
        public string DisplayName { get => this._displayName; set => this._displayName = value; }

        /// <summary>Backing field for <see cref="MaxDevBoxesPerUser" /> property.</summary>
        private int? _maxDevBoxesPerUser;

        /// <summary>
        /// When specified, limits the maximum number of Dev Boxes a single user can create across all pools in the project. This
        /// will have no effect on existing Dev Boxes when reduced.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Owned)]
        public int? MaxDevBoxesPerUser { get => this._maxDevBoxesPerUser; set => this._maxDevBoxesPerUser = value; }

        /// <summary>Internal Acessors for CatalogSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IProjectCatalogSettings Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IProjectUpdatePropertiesInternal.CatalogSetting { get => (this._catalogSetting = this._catalogSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.ProjectCatalogSettings()); set { {_catalogSetting = value;} } }

        /// <summary>Creates an new <see cref="ProjectUpdateProperties" /> instance.</summary>
        public ProjectUpdateProperties()
        {

        }
    }
    /// Properties of a project. These properties can be updated after the resource has been created.
    public partial interface IProjectUpdateProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.IJsonSerializable
    {
        /// <summary>Indicates catalog item types that can be synced.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates catalog item types that can be synced.",
        SerializedName = @"catalogItemSyncTypes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.CatalogItemType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.CatalogItemType[] CatalogSettingCatalogItemSyncType { get; set; }
        /// <summary>Description of the project.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Description of the project.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>Resource Id of an associated DevCenter</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource Id of an associated DevCenter",
        SerializedName = @"devCenterId",
        PossibleTypes = new [] { typeof(string) })]
        string DevCenterId { get; set; }
        /// <summary>The display name of the project.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The display name of the project.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>
        /// When specified, limits the maximum number of Dev Boxes a single user can create across all pools in the project. This
        /// will have no effect on existing Dev Boxes when reduced.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"When specified, limits the maximum number of Dev Boxes a single user can create across all pools in the project. This will have no effect on existing Dev Boxes when reduced.",
        SerializedName = @"maxDevBoxesPerUser",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxDevBoxesPerUser { get; set; }

    }
    /// Properties of a project. These properties can be updated after the resource has been created.
    internal partial interface IProjectUpdatePropertiesInternal

    {
        /// <summary>Settings to be used when associating a project with a catalog.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IProjectCatalogSettings CatalogSetting { get; set; }
        /// <summary>Indicates catalog item types that can be synced.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.CatalogItemType[] CatalogSettingCatalogItemSyncType { get; set; }
        /// <summary>Description of the project.</summary>
        string Description { get; set; }
        /// <summary>Resource Id of an associated DevCenter</summary>
        string DevCenterId { get; set; }
        /// <summary>The display name of the project.</summary>
        string DisplayName { get; set; }
        /// <summary>
        /// When specified, limits the maximum number of Dev Boxes a single user can create across all pools in the project. This
        /// will have no effect on existing Dev Boxes when reduced.
        /// </summary>
        int? MaxDevBoxesPerUser { get; set; }

    }
}