// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Extensions;

    public partial class DevCenterIdentity
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonObject into a new instance of <see cref="DevCenterIdentity" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal DevCenterIdentity(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_subscriptionId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonString>("subscriptionId"), out var __jsonSubscriptionId) ? (string)__jsonSubscriptionId : (string)SubscriptionId;}
            {_resourceGroupName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonString>("resourceGroupName"), out var __jsonResourceGroupName) ? (string)__jsonResourceGroupName : (string)ResourceGroupName;}
            {_devCenterName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonString>("devCenterName"), out var __jsonDevCenterName) ? (string)__jsonDevCenterName : (string)DevCenterName;}
            {_projectName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonString>("projectName"), out var __jsonProjectName) ? (string)__jsonProjectName : (string)ProjectName;}
            {_attachedNetworkConnectionName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonString>("attachedNetworkConnectionName"), out var __jsonAttachedNetworkConnectionName) ? (string)__jsonAttachedNetworkConnectionName : (string)AttachedNetworkConnectionName;}
            {_galleryName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonString>("galleryName"), out var __jsonGalleryName) ? (string)__jsonGalleryName : (string)GalleryName;}
            {_imageName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonString>("imageName"), out var __jsonImageName) ? (string)__jsonImageName : (string)ImageName;}
            {_versionName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonString>("versionName"), out var __jsonVersionName) ? (string)__jsonVersionName : (string)VersionName;}
            {_catalogName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonString>("catalogName"), out var __jsonCatalogName) ? (string)__jsonCatalogName : (string)CatalogName;}
            {_environmentTypeName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonString>("environmentTypeName"), out var __jsonEnvironmentTypeName) ? (string)__jsonEnvironmentTypeName : (string)EnvironmentTypeName;}
            {_devBoxDefinitionName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonString>("devBoxDefinitionName"), out var __jsonDevBoxDefinitionName) ? (string)__jsonDevBoxDefinitionName : (string)DevBoxDefinitionName;}
            {_location = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonString>("location"), out var __jsonLocation) ? (string)__jsonLocation : (string)Location;}
            {_operationId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonString>("operationId"), out var __jsonOperationId) ? (string)__jsonOperationId : (string)OperationId;}
            {_taskName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonString>("taskName"), out var __jsonTaskName) ? (string)__jsonTaskName : (string)TaskName;}
            {_environmentDefinitionName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonString>("environmentDefinitionName"), out var __jsonEnvironmentDefinitionName) ? (string)__jsonEnvironmentDefinitionName : (string)EnvironmentDefinitionName;}
            {_poolName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonString>("poolName"), out var __jsonPoolName) ? (string)__jsonPoolName : (string)PoolName;}
            {_scheduleName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonString>("scheduleName"), out var __jsonScheduleName) ? (string)__jsonScheduleName : (string)ScheduleName;}
            {_networkConnectionName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonString>("networkConnectionName"), out var __jsonNetworkConnectionName) ? (string)__jsonNetworkConnectionName : (string)NetworkConnectionName;}
            {_id = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonString>("id"), out var __jsonId) ? (string)__jsonId : (string)Id;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.IDevCenterIdentity.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.IDevCenterIdentity.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.IDevCenterIdentity FromJson(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonObject json ? new DevCenterIdentity(json) : null;
        }

        /// <summary>
        /// Serializes this instance of <see cref="DevCenterIdentity" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="DevCenterIdentity" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != (((object)this._subscriptionId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonString(this._subscriptionId.ToString()) : null, "subscriptionId" ,container.Add );
            AddIf( null != (((object)this._resourceGroupName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonString(this._resourceGroupName.ToString()) : null, "resourceGroupName" ,container.Add );
            AddIf( null != (((object)this._devCenterName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonString(this._devCenterName.ToString()) : null, "devCenterName" ,container.Add );
            AddIf( null != (((object)this._projectName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonString(this._projectName.ToString()) : null, "projectName" ,container.Add );
            AddIf( null != (((object)this._attachedNetworkConnectionName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonString(this._attachedNetworkConnectionName.ToString()) : null, "attachedNetworkConnectionName" ,container.Add );
            AddIf( null != (((object)this._galleryName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonString(this._galleryName.ToString()) : null, "galleryName" ,container.Add );
            AddIf( null != (((object)this._imageName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonString(this._imageName.ToString()) : null, "imageName" ,container.Add );
            AddIf( null != (((object)this._versionName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonString(this._versionName.ToString()) : null, "versionName" ,container.Add );
            AddIf( null != (((object)this._catalogName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonString(this._catalogName.ToString()) : null, "catalogName" ,container.Add );
            AddIf( null != (((object)this._environmentTypeName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonString(this._environmentTypeName.ToString()) : null, "environmentTypeName" ,container.Add );
            AddIf( null != (((object)this._devBoxDefinitionName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonString(this._devBoxDefinitionName.ToString()) : null, "devBoxDefinitionName" ,container.Add );
            AddIf( null != (((object)this._location)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonString(this._location.ToString()) : null, "location" ,container.Add );
            AddIf( null != (((object)this._operationId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonString(this._operationId.ToString()) : null, "operationId" ,container.Add );
            AddIf( null != (((object)this._taskName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonString(this._taskName.ToString()) : null, "taskName" ,container.Add );
            AddIf( null != (((object)this._environmentDefinitionName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonString(this._environmentDefinitionName.ToString()) : null, "environmentDefinitionName" ,container.Add );
            AddIf( null != (((object)this._poolName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonString(this._poolName.ToString()) : null, "poolName" ,container.Add );
            AddIf( null != (((object)this._scheduleName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonString(this._scheduleName.ToString()) : null, "scheduleName" ,container.Add );
            AddIf( null != (((object)this._networkConnectionName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonString(this._networkConnectionName.ToString()) : null, "networkConnectionName" ,container.Add );
            AddIf( null != (((object)this._id)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonString(this._id.ToString()) : null, "id" ,container.Add );
            AfterToJson(ref container);
            return container;
        }
    }
}