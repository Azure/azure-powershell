// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Extensions;

    /// <summary>
    /// Properties of a Pool. These properties can be updated after the resource has been created.
    /// </summary>
    public partial class PoolUpdateProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.IPoolUpdateProperties,
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.IPoolUpdatePropertiesInternal
    {

        /// <summary>Backing field for <see cref="DevBoxDefinitionName" /> property.</summary>
        private string _devBoxDefinitionName;

        /// <summary>Name of a Dev Box definition in parent Project of this Pool</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Owned)]
        public string DevBoxDefinitionName { get => this._devBoxDefinitionName; set => this._devBoxDefinitionName = value; }

        /// <summary>Backing field for <see cref="LicenseType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.LicenseType? _licenseType;

        /// <summary>
        /// Specifies the license type indicating the caller has already acquired licenses for the Dev Boxes that will be created.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.LicenseType? LicenseType { get => this._licenseType; set => this._licenseType = value; }

        /// <summary>Backing field for <see cref="LocalAdministrator" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.LocalAdminStatus? _localAdministrator;

        /// <summary>
        /// Indicates whether owners of Dev Boxes in this pool are added as local administrators on the Dev Box.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.LocalAdminStatus? LocalAdministrator { get => this._localAdministrator; set => this._localAdministrator = value; }

        /// <summary>Internal Acessors for StopOnDisconnect</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.IStopOnDisconnectConfiguration Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.IPoolUpdatePropertiesInternal.StopOnDisconnect { get => (this._stopOnDisconnect = this._stopOnDisconnect ?? new Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.StopOnDisconnectConfiguration()); set { {_stopOnDisconnect = value;} } }

        /// <summary>Backing field for <see cref="NetworkConnectionName" /> property.</summary>
        private string _networkConnectionName;

        /// <summary>Name of a Network Connection in parent Project of this Pool</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Owned)]
        public string NetworkConnectionName { get => this._networkConnectionName; set => this._networkConnectionName = value; }

        /// <summary>Backing field for <see cref="StopOnDisconnect" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.IStopOnDisconnectConfiguration _stopOnDisconnect;

        /// <summary>Stop on disconnect configuration settings for Dev Boxes created in this pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.IStopOnDisconnectConfiguration StopOnDisconnect { get => (this._stopOnDisconnect = this._stopOnDisconnect ?? new Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.StopOnDisconnectConfiguration()); set => this._stopOnDisconnect = value; }

        /// <summary>
        /// The specified time in minutes to wait before stopping a Dev Box once disconnect is detected.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Inlined)]
        public int? StopOnDisconnectGracePeriodMinute { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.IStopOnDisconnectConfigurationInternal)StopOnDisconnect).GracePeriodMinute; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.IStopOnDisconnectConfigurationInternal)StopOnDisconnect).GracePeriodMinute = value ?? default(int); }

        /// <summary>
        /// Whether the feature to stop the Dev Box on disconnect once the grace period has lapsed is enabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.StopOnDisconnectEnableStatus? StopOnDisconnectStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.IStopOnDisconnectConfigurationInternal)StopOnDisconnect).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.IStopOnDisconnectConfigurationInternal)StopOnDisconnect).Status = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.StopOnDisconnectEnableStatus)""); }

        /// <summary>Creates an new <see cref="PoolUpdateProperties" /> instance.</summary>
        public PoolUpdateProperties()
        {

        }
    }
    /// Properties of a Pool. These properties can be updated after the resource has been created.
    public partial interface IPoolUpdateProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.IJsonSerializable
    {
        /// <summary>Name of a Dev Box definition in parent Project of this Pool</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of a Dev Box definition in parent Project of this Pool",
        SerializedName = @"devBoxDefinitionName",
        PossibleTypes = new [] { typeof(string) })]
        string DevBoxDefinitionName { get; set; }
        /// <summary>
        /// Specifies the license type indicating the caller has already acquired licenses for the Dev Boxes that will be created.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the license type indicating the caller has already acquired licenses for the Dev Boxes that will be created.",
        SerializedName = @"licenseType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.LicenseType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.LicenseType? LicenseType { get; set; }
        /// <summary>
        /// Indicates whether owners of Dev Boxes in this pool are added as local administrators on the Dev Box.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether owners of Dev Boxes in this pool are added as local administrators on the Dev Box.",
        SerializedName = @"localAdministrator",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.LocalAdminStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.LocalAdminStatus? LocalAdministrator { get; set; }
        /// <summary>Name of a Network Connection in parent Project of this Pool</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of a Network Connection in parent Project of this Pool",
        SerializedName = @"networkConnectionName",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkConnectionName { get; set; }
        /// <summary>
        /// The specified time in minutes to wait before stopping a Dev Box once disconnect is detected.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The specified time in minutes to wait before stopping a Dev Box once disconnect is detected.",
        SerializedName = @"gracePeriodMinutes",
        PossibleTypes = new [] { typeof(int) })]
        int? StopOnDisconnectGracePeriodMinute { get; set; }
        /// <summary>
        /// Whether the feature to stop the Dev Box on disconnect once the grace period has lapsed is enabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether the feature to stop the Dev Box on disconnect once the grace period has lapsed is enabled.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.StopOnDisconnectEnableStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.StopOnDisconnectEnableStatus? StopOnDisconnectStatus { get; set; }

    }
    /// Properties of a Pool. These properties can be updated after the resource has been created.
    internal partial interface IPoolUpdatePropertiesInternal

    {
        /// <summary>Name of a Dev Box definition in parent Project of this Pool</summary>
        string DevBoxDefinitionName { get; set; }
        /// <summary>
        /// Specifies the license type indicating the caller has already acquired licenses for the Dev Boxes that will be created.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.LicenseType? LicenseType { get; set; }
        /// <summary>
        /// Indicates whether owners of Dev Boxes in this pool are added as local administrators on the Dev Box.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.LocalAdminStatus? LocalAdministrator { get; set; }
        /// <summary>Name of a Network Connection in parent Project of this Pool</summary>
        string NetworkConnectionName { get; set; }
        /// <summary>Stop on disconnect configuration settings for Dev Boxes created in this pool.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.IStopOnDisconnectConfiguration StopOnDisconnect { get; set; }
        /// <summary>
        /// The specified time in minutes to wait before stopping a Dev Box once disconnect is detected.
        /// </summary>
        int? StopOnDisconnectGracePeriodMinute { get; set; }
        /// <summary>
        /// Whether the feature to stop the Dev Box on disconnect once the grace period has lapsed is enabled.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.StopOnDisconnectEnableStatus? StopOnDisconnectStatus { get; set; }

    }
}