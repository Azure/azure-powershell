// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Extensions;

    /// <summary>Properties of a catalog.</summary>
    public partial class CatalogProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.ICatalogProperties,
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.ICatalogPropertiesInternal,
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.ICatalogUpdateProperties"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.ICatalogUpdateProperties __catalogUpdateProperties = new Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.CatalogUpdateProperties();

        /// <summary>Properties for an Azure DevOps catalog type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.IGitCatalog AdoGit { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.ICatalogUpdatePropertiesInternal)__catalogUpdateProperties).AdoGit; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.ICatalogUpdatePropertiesInternal)__catalogUpdateProperties).AdoGit = value ?? null /* model class */; }

        /// <summary>Git branch.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Inherited)]
        public string AdoGitBranch { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.ICatalogUpdatePropertiesInternal)__catalogUpdateProperties).AdoGitBranch; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.ICatalogUpdatePropertiesInternal)__catalogUpdateProperties).AdoGitBranch = value ?? null; }

        /// <summary>The folder where the catalog items can be found inside the repository.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Inherited)]
        public string AdoGitPath { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.ICatalogUpdatePropertiesInternal)__catalogUpdateProperties).AdoGitPath; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.ICatalogUpdatePropertiesInternal)__catalogUpdateProperties).AdoGitPath = value ?? null; }

        /// <summary>
        /// A reference to the Key Vault secret containing a security token to authenticate to a Git repository.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Inherited)]
        public string AdoGitSecretIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.ICatalogUpdatePropertiesInternal)__catalogUpdateProperties).AdoGitSecretIdentifier; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.ICatalogUpdatePropertiesInternal)__catalogUpdateProperties).AdoGitSecretIdentifier = value ?? null; }

        /// <summary>Git URI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Inherited)]
        public string AdoGitUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.ICatalogUpdatePropertiesInternal)__catalogUpdateProperties).AdoGitUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.ICatalogUpdatePropertiesInternal)__catalogUpdateProperties).AdoGitUri = value ?? null; }

        /// <summary>Properties for a GitHub catalog type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.IGitCatalog GitHub { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.ICatalogUpdatePropertiesInternal)__catalogUpdateProperties).GitHub; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.ICatalogUpdatePropertiesInternal)__catalogUpdateProperties).GitHub = value ?? null /* model class */; }

        /// <summary>Git branch.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Inherited)]
        public string GitHubBranch { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.ICatalogUpdatePropertiesInternal)__catalogUpdateProperties).GitHubBranch; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.ICatalogUpdatePropertiesInternal)__catalogUpdateProperties).GitHubBranch = value ?? null; }

        /// <summary>The folder where the catalog items can be found inside the repository.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Inherited)]
        public string GitHubPath { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.ICatalogUpdatePropertiesInternal)__catalogUpdateProperties).GitHubPath; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.ICatalogUpdatePropertiesInternal)__catalogUpdateProperties).GitHubPath = value ?? null; }

        /// <summary>
        /// A reference to the Key Vault secret containing a security token to authenticate to a Git repository.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Inherited)]
        public string GitHubSecretIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.ICatalogUpdatePropertiesInternal)__catalogUpdateProperties).GitHubSecretIdentifier; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.ICatalogUpdatePropertiesInternal)__catalogUpdateProperties).GitHubSecretIdentifier = value ?? null; }

        /// <summary>Git URI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Inherited)]
        public string GitHubUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.ICatalogUpdatePropertiesInternal)__catalogUpdateProperties).GitHubUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.ICatalogUpdatePropertiesInternal)__catalogUpdateProperties).GitHubUri = value ?? null; }

        /// <summary>Backing field for <see cref="LastSyncTime" /> property.</summary>
        private global::System.DateTime? _lastSyncTime;

        /// <summary>When the catalog was last synced.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Owned)]
        public global::System.DateTime? LastSyncTime { get => this._lastSyncTime; }

        /// <summary>Internal Acessors for LastSyncTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.ICatalogPropertiesInternal.LastSyncTime { get => this._lastSyncTime; set { {_lastSyncTime = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.ICatalogPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for SyncState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.CatalogSyncState? Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.ICatalogPropertiesInternal.SyncState { get => this._syncState; set { {_syncState = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.ProvisioningState? _provisioningState;

        /// <summary>The provisioning state of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.ProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="SyncState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.CatalogSyncState? _syncState;

        /// <summary>The synchronization state of the catalog.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.CatalogSyncState? SyncState { get => this._syncState; }

        /// <summary>Creates an new <see cref="CatalogProperties" /> instance.</summary>
        public CatalogProperties()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__catalogUpdateProperties), __catalogUpdateProperties);
            await eventListener.AssertObjectIsValid(nameof(__catalogUpdateProperties), __catalogUpdateProperties);
        }
    }
    /// Properties of a catalog.
    public partial interface ICatalogProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.ICatalogUpdateProperties
    {
        /// <summary>When the catalog was last synced.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"When the catalog was last synced.",
        SerializedName = @"lastSyncTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastSyncTime { get;  }
        /// <summary>The provisioning state of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state of the resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>The synchronization state of the catalog.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The synchronization state of the catalog.",
        SerializedName = @"syncState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.CatalogSyncState) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.CatalogSyncState? SyncState { get;  }

    }
    /// Properties of a catalog.
    internal partial interface ICatalogPropertiesInternal :
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.ICatalogUpdatePropertiesInternal
    {
        /// <summary>When the catalog was last synced.</summary>
        global::System.DateTime? LastSyncTime { get; set; }
        /// <summary>The provisioning state of the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>The synchronization state of the catalog.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.CatalogSyncState? SyncState { get; set; }

    }
}