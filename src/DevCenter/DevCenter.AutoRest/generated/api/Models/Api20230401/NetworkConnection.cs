// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Extensions;

    /// <summary>Network related settings</summary>
    public partial class NetworkConnection :
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.INetworkConnection,
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.INetworkConnectionInternal,
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api30.ITrackedResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api30.ITrackedResource __trackedResource = new Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api30.TrackedResource();

        /// <summary>AAD Join type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.DomainJoinType? DomainJoinType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.INetworkPropertiesInternal)Property).DomainJoinType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.INetworkPropertiesInternal)Property).DomainJoinType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.DomainJoinType)""); }

        /// <summary>Active Directory domain name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Inlined)]
        public string DomainName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.INetworkConnectionUpdatePropertiesInternal)Property).DomainName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.INetworkConnectionUpdatePropertiesInternal)Property).DomainName = value ?? null; }

        /// <summary>The password for the account used to join domain</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Inlined)]
        public string DomainPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.INetworkConnectionUpdatePropertiesInternal)Property).DomainPassword; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.INetworkConnectionUpdatePropertiesInternal)Property).DomainPassword = value ?? null; }

        /// <summary>
        /// The username of an Active Directory account (user or service account) that has permissions to create computer objects
        /// in Active Directory. Required format: admin@contoso.com.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Inlined)]
        public string DomainUsername { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.INetworkConnectionUpdatePropertiesInternal)Property).DomainUsername; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.INetworkConnectionUpdatePropertiesInternal)Property).DomainUsername = value ?? null; }

        /// <summary>
        /// Overall health status of the network connection. Health checks are run on creation, update, and periodically to validate
        /// the network connection.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.HealthCheckStatus? HealthCheckStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.INetworkPropertiesInternal)Property).HealthCheckStatus; }

        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api30.IResourceInternal)__trackedResource).Id; }

        /// <summary>The geo-location where the resource lives</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api30.ITrackedResourceInternal)__trackedResource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api30.ITrackedResourceInternal)__trackedResource).Location = value ; }

        /// <summary>Internal Acessors for HealthCheckStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.HealthCheckStatus? Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.INetworkConnectionInternal.HealthCheckStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.INetworkPropertiesInternal)Property).HealthCheckStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.INetworkPropertiesInternal)Property).HealthCheckStatus = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.INetworkProperties Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.INetworkConnectionInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.NetworkProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.INetworkConnectionInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.INetworkPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.INetworkPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api30.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api30.IResourceInternal)__trackedResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api30.IResourceInternal)__trackedResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api30.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api30.IResourceInternal)__trackedResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api30.IResourceInternal)__trackedResource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api30.ISystemData Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api30.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api30.IResourceInternal)__trackedResource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api30.IResourceInternal)__trackedResource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api30.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api30.IResourceInternal)__trackedResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api30.IResourceInternal)__trackedResource).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api30.IResourceInternal)__trackedResource).Name; }

        /// <summary>The name for resource group where NICs will be placed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Inlined)]
        public string NetworkingResourceGroupName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.INetworkPropertiesInternal)Property).NetworkingResourceGroupName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.INetworkPropertiesInternal)Property).NetworkingResourceGroupName = value ?? null; }

        /// <summary>Active Directory domain Organization Unit (OU)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Inlined)]
        public string OrganizationUnit { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.INetworkConnectionUpdatePropertiesInternal)Property).OrganizationUnit; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.INetworkConnectionUpdatePropertiesInternal)Property).OrganizationUnit = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.INetworkProperties _property;

        /// <summary>Properties of a Network Connection</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.INetworkProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.NetworkProperties()); set => this._property = value; }

        /// <summary>The provisioning state of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.ProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.INetworkPropertiesInternal)Property).ProvisioningState; }

        /// <summary>The subnet to attach Virtual Machines to</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Inlined)]
        public string SubnetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.INetworkConnectionUpdatePropertiesInternal)Property).SubnetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.INetworkConnectionUpdatePropertiesInternal)Property).SubnetId = value ?? null; }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api30.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api30.IResourceInternal)__trackedResource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api30.IResourceInternal)__trackedResource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api30.IResourceInternal)__trackedResource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api30.IResourceInternal)__trackedResource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api30.IResourceInternal)__trackedResource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api30.IResourceInternal)__trackedResource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api30.IResourceInternal)__trackedResource).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api30.IResourceInternal)__trackedResource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api30.IResourceInternal)__trackedResource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api30.IResourceInternal)__trackedResource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api30.IResourceInternal)__trackedResource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api30.IResourceInternal)__trackedResource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api30.IResourceInternal)__trackedResource).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.CreatedByType)""); }

        /// <summary>Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api30.ITrackedResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api30.ITrackedResourceInternal)__trackedResource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api30.ITrackedResourceInternal)__trackedResource).Tag = value ?? null /* model class */; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api30.IResourceInternal)__trackedResource).Type; }

        /// <summary>Creates an new <see cref="NetworkConnection" /> instance.</summary>
        public NetworkConnection()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__trackedResource), __trackedResource);
            await eventListener.AssertObjectIsValid(nameof(__trackedResource), __trackedResource);
        }
    }
    /// Network related settings
    public partial interface INetworkConnection :
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api30.ITrackedResource
    {
        /// <summary>AAD Join type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AAD Join type.",
        SerializedName = @"domainJoinType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.DomainJoinType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.DomainJoinType? DomainJoinType { get; set; }
        /// <summary>Active Directory domain name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Active Directory domain name",
        SerializedName = @"domainName",
        PossibleTypes = new [] { typeof(string) })]
        string DomainName { get; set; }
        /// <summary>The password for the account used to join domain</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The password for the account used to join domain",
        SerializedName = @"domainPassword",
        PossibleTypes = new [] { typeof(string) })]
        string DomainPassword { get; set; }
        /// <summary>
        /// The username of an Active Directory account (user or service account) that has permissions to create computer objects
        /// in Active Directory. Required format: admin@contoso.com.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The username of an Active Directory account (user or service account) that has permissions to create computer objects in Active Directory. Required format: admin@contoso.com.",
        SerializedName = @"domainUsername",
        PossibleTypes = new [] { typeof(string) })]
        string DomainUsername { get; set; }
        /// <summary>
        /// Overall health status of the network connection. Health checks are run on creation, update, and periodically to validate
        /// the network connection.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Overall health status of the network connection. Health checks are run on creation, update, and periodically to validate the network connection.",
        SerializedName = @"healthCheckStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.HealthCheckStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.HealthCheckStatus? HealthCheckStatus { get;  }
        /// <summary>The name for resource group where NICs will be placed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name for resource group where NICs will be placed.",
        SerializedName = @"networkingResourceGroupName",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkingResourceGroupName { get; set; }
        /// <summary>Active Directory domain Organization Unit (OU)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Active Directory domain Organization Unit (OU)",
        SerializedName = @"organizationUnit",
        PossibleTypes = new [] { typeof(string) })]
        string OrganizationUnit { get; set; }
        /// <summary>The provisioning state of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state of the resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>The subnet to attach Virtual Machines to</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The subnet to attach Virtual Machines to",
        SerializedName = @"subnetId",
        PossibleTypes = new [] { typeof(string) })]
        string SubnetId { get; set; }

    }
    /// Network related settings
    internal partial interface INetworkConnectionInternal :
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api30.ITrackedResourceInternal
    {
        /// <summary>AAD Join type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.DomainJoinType? DomainJoinType { get; set; }
        /// <summary>Active Directory domain name</summary>
        string DomainName { get; set; }
        /// <summary>The password for the account used to join domain</summary>
        string DomainPassword { get; set; }
        /// <summary>
        /// The username of an Active Directory account (user or service account) that has permissions to create computer objects
        /// in Active Directory. Required format: admin@contoso.com.
        /// </summary>
        string DomainUsername { get; set; }
        /// <summary>
        /// Overall health status of the network connection. Health checks are run on creation, update, and periodically to validate
        /// the network connection.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.HealthCheckStatus? HealthCheckStatus { get; set; }
        /// <summary>The name for resource group where NICs will be placed.</summary>
        string NetworkingResourceGroupName { get; set; }
        /// <summary>Active Directory domain Organization Unit (OU)</summary>
        string OrganizationUnit { get; set; }
        /// <summary>Properties of a Network Connection</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20230401.INetworkProperties Property { get; set; }
        /// <summary>The provisioning state of the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>The subnet to attach Virtual Machines to</summary>
        string SubnetId { get; set; }

    }
}