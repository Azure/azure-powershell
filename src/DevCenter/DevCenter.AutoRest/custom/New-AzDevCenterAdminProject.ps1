
# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Code generated by Microsoft (R) AutoRest Code Generator.Changes may cause incorrect behavior and will be lost if the code
# is regenerated.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Creates or updates a project.
.Description
Creates or updates a project.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.IDevCenterIdentity
.Outputs
Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20250401Preview.IProject
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

CUSTOMIZATIONSETTINGIDENTITY <IProjectCustomizationManagedIdentity[]>: The identities that can to be used in customization scenarios; e.g., to clone a repository.
  [IdentityResourceId <String>]: Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity.
  [IdentityType <ProjectCustomizationIdentityType?>]: Values can be systemAssignedIdentity or userAssignedIdentity

INPUTOBJECT <IDevCenterIdentity>: Identity Parameter
  [AttachedNetworkConnectionName <String>]: The name of the attached NetworkConnection.
  [BuildName <String>]: The ID of the Image Definition Build.
  [CatalogName <String>]: The name of the Catalog.
  [DevBoxDefinitionName <String>]: The name of the Dev Box definition.
  [DevCenterName <String>]: The name of the devcenter.
  [EncryptionSetName <String>]: The name of the devcenter encryption set.
  [EnvironmentDefinitionName <String>]: The name of the Environment Definition.
  [EnvironmentTypeName <String>]: The name of the environment type.
  [GalleryName <String>]: The name of the gallery.
  [Id <String>]: Resource identity path
  [ImageDefinitionName <String>]: The name of the Image Definition.
  [ImageName <String>]: The name of the image.
  [Location <String>]: The Azure region
  [NetworkConnectionName <String>]: Name of the Network Connection that can be applied to a Pool.
  [OperationId <String>]: The ID of an ongoing async operation
  [PoolName <String>]: Name of the pool.
  [ProjectName <String>]: The name of the project.
  [ProjectPolicyName <String>]: The name of the project policy.
  [ResourceGroupName <String>]: The name of the resource group. The name is case insensitive.
  [ScheduleName <String>]: The name of the schedule that uniquely identifies it.
  [SubscriptionId <String>]: The ID of the target subscription.
  [TaskName <String>]: The name of the Task.
  [VersionName <String>]: The version of the image.
.Link
https://learn.microsoft.com/powershell/module/az.devcenter/new-azdevcenteradminproject
#>
function New-AzDevCenterAdminProject {
[OutputType([Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20250401Preview.IProject])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='CreateExpanded', Mandatory)]
    [Alias('ProjectName')]
    [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Category('Path')]
    [System.String]
    # The name of the project.
    ${Name},

    [Parameter(ParameterSetName='CreateExpanded', Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Category('Path')]
    [System.String]
    # The name of the resource group.
    # The name is case insensitive.
    ${ResourceGroupName},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Category('Path')]
    [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.DefaultInfo(Script='(Get-AzContext).Subscription.Id')]
    [System.String]
    # The ID of the target subscription.
    ${SubscriptionId},

    [Parameter(ParameterSetName='CreateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Category('Path')]
    [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.IDevCenterIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Category('Body')]
    [System.String]
    # The geo-location where the resource lives
    ${Location},

    [Parameter()]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.AzureAiServicesMode])]
    [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.AzureAiServicesMode]
    # The property indicates whether Azure AI services is enabled.
    ${AzureAiServiceSettingAzureAiServicesMode},

    [Parameter()]
    [AllowEmptyCollection()]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.CatalogItemType])]
    [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.CatalogItemType[]]
    # Indicates catalog item types that can be synced.
    ${CatalogSettingCatalogItemSyncType},

    [Parameter()]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20250401Preview.IProjectCustomizationManagedIdentity[]]
    # The identities that can to be used in customization scenarios; e.g., to clone a repository.
    # To construct, see NOTES section for CUSTOMIZATIONSETTINGIDENTITY properties and create a hash table.
    ${CustomizationSettingIdentity},

    [Parameter()]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.UserCustomizationsEnableStatus])]
    [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.UserCustomizationsEnableStatus]
    # Indicates whether user customizations are enabled.
    ${CustomizationSettingUserCustomizationsEnableStatus},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Category('Body')]
    [System.String]
    # Description of the project.
    ${Description},

    [Parameter()]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.DevBoxDeleteMode])]
    [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.DevBoxDeleteMode]
    # Indicates the delete mode for Dev Boxes within this project.
    ${DevBoxAutoDeleteSettingDeleteMode},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Category('Body')]
    [System.String]
    # ISO8601 duration required for the dev box to be marked for deletion prior to it being deleted.
    # ISO8601 format PT[n]H[n]M[n]S.
    ${DevBoxAutoDeleteSettingGracePeriod},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Category('Body')]
    [System.String]
    # ISO8601 duration required for the dev box to not be inactive prior to it being scheduled for deletion.
    # ISO8601 format PT[n]H[n]M[n]S.
    ${DevBoxAutoDeleteSettingInactiveThreshold},

    [Parameter(Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Category('Body')]
    [System.String]
    # Resource Id of an associated DevCenter
    ${DevCenterId},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Category('Body')]
    [System.String]
    # The display name of the project.
    ${DisplayName},

    [Parameter()]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.ManagedServiceIdentityType])]
    [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.ManagedServiceIdentityType]
    # Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
    ${IdentityType},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Info(PossibleTypes=([Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api40.IUserAssignedIdentities]))]
    [System.Collections.Hashtable]
    # The set of user assigned identities associated with the resource.
    # The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}.
    # The dictionary values can be empty objects ({}) in requests.
    ${IdentityUserAssignedIdentity},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Category('Body')]
    [System.Int32]
    # When specified, limits the maximum number of Dev Boxes a single user can create across all pools in the project.
    # This will have no effect on existing Dev Boxes when reduced.
    ${MaxDevBoxesPerUser},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Category('Body')]
    [System.Int32]
    # When specified, limits the maximum number of concurrent sessions across all pools in the project.
    ${ServerlessGpuSessionSettingMaxConcurrentSessionsPerProject},

    [Parameter()]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.ServerlessGpuSessionsMode])]
    [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.ServerlessGpuSessionsMode]
    # The property indicates whether serverless GPU access is enabled on the project.
    ${ServerlessGpuSessionSettingServerlessGpuSessionsMode},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Info(PossibleTypes=([Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api50.ITrackedResourceTags]))]
    [System.Collections.Hashtable]
    # Resource tags.
    ${Tag},

    [Parameter()]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.WorkspaceStorageMode])]
    [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.WorkspaceStorageMode]
    # Indicates whether workspace storage is enabled.
    ${WorkspaceStorageSettingWorkspaceStorageMode},

    [Parameter()]
    [Alias('AzureRMContext', 'AzureCredential')]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Category('Azure')]
    [System.Management.Automation.PSObject]
    # The DefaultProfile parameter is not functional.
    # Use the SubscriptionId parameter when available if executing the cmdlet against a different subscription.
    ${DefaultProfile},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Run the command as a job
    ${AsJob},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Category('Runtime')]
    [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Category('Runtime')]
    [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Run the command asynchronously
    ${NoWait},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

process {
    Az.DevCenter.internal\New-AzDevCenterAdminProject @PSBoundParameters
}

}
