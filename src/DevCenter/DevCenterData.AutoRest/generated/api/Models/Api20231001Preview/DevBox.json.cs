// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Models.Api20231001Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Extensions;

    /// <summary>A Dev Box</summary>
    public partial class DevBox
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonObject into a new instance of <see cref="DevBox" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal DevBox(Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_error = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonObject>("error"), out var __jsonError) ? Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Models.Api20231001Preview.CloudErrorBody.FromJson(__jsonError) : Error;}
            {_hardwareProfile = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonObject>("hardwareProfile"), out var __jsonHardwareProfile) ? Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Models.Api20231001Preview.HardwareProfile.FromJson(__jsonHardwareProfile) : HardwareProfile;}
            {_storageProfile = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonObject>("storageProfile"), out var __jsonStorageProfile) ? Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Models.Api20231001Preview.StorageProfile.FromJson(__jsonStorageProfile) : StorageProfile;}
            {_imageReference = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonObject>("imageReference"), out var __jsonImageReference) ? Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Models.Api20231001Preview.ImageReference.FromJson(__jsonImageReference) : ImageReference;}
            {_uri = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString>("uri"), out var __jsonUri) ? (string)__jsonUri : (string)Uri;}
            {_name = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString>("name"), out var __jsonName) ? (string)__jsonName : (string)Name;}
            {_projectName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString>("projectName"), out var __jsonProjectName) ? (string)__jsonProjectName : (string)ProjectName;}
            {_poolName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString>("poolName"), out var __jsonPoolName) ? (string)__jsonPoolName : (string)PoolName;}
            {_hibernateSupport = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString>("hibernateSupport"), out var __jsonHibernateSupport) ? (string)__jsonHibernateSupport : (string)HibernateSupport;}
            {_provisioningState = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString>("provisioningState"), out var __jsonProvisioningState) ? (string)__jsonProvisioningState : (string)ProvisioningState;}
            {_actionState = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString>("actionState"), out var __jsonActionState) ? (string)__jsonActionState : (string)ActionState;}
            {_powerState = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString>("powerState"), out var __jsonPowerState) ? (string)__jsonPowerState : (string)PowerState;}
            {_uniqueId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString>("uniqueId"), out var __jsonUniqueId) ? (string)__jsonUniqueId : (string)UniqueId;}
            {_location = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString>("location"), out var __jsonLocation) ? (string)__jsonLocation : (string)Location;}
            {_oSType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString>("osType"), out var __jsonOSType) ? (string)__jsonOSType : (string)OSType;}
            {_user = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString>("user"), out var __jsonUser) ? (string)__jsonUser : (string)User;}
            {_createdTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString>("createdTime"), out var __jsonCreatedTime) ? global::System.DateTime.TryParse((string)__jsonCreatedTime, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonCreatedTimeValue) ? __jsonCreatedTimeValue : CreatedTime : CreatedTime;}
            {_localAdministrator = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString>("localAdministrator"), out var __jsonLocalAdministrator) ? (string)__jsonLocalAdministrator : (string)LocalAdministrator;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Models.Api20231001Preview.IDevBox.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Models.Api20231001Preview.IDevBox.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Models.Api20231001Preview.IDevBox FromJson(Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonObject json ? new DevBox(json) : null;
        }

        /// <summary>
        /// Serializes this instance of <see cref="DevBox" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="DevBox" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._error ? (Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonNode) this._error.ToJson(null,serializationMode) : null, "error" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._hardwareProfile ? (Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonNode) this._hardwareProfile.ToJson(null,serializationMode) : null, "hardwareProfile" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._storageProfile ? (Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonNode) this._storageProfile.ToJson(null,serializationMode) : null, "storageProfile" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._imageReference ? (Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonNode) this._imageReference.ToJson(null,serializationMode) : null, "imageReference" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._uri)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString(this._uri.ToString()) : null, "uri" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._name)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString(this._name.ToString()) : null, "name" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._projectName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString(this._projectName.ToString()) : null, "projectName" ,container.Add );
            }
            AddIf( null != (((object)this._poolName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString(this._poolName.ToString()) : null, "poolName" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._hibernateSupport)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString(this._hibernateSupport.ToString()) : null, "hibernateSupport" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._provisioningState)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString(this._provisioningState.ToString()) : null, "provisioningState" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._actionState)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString(this._actionState.ToString()) : null, "actionState" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._powerState)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString(this._powerState.ToString()) : null, "powerState" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._uniqueId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString(this._uniqueId.ToString()) : null, "uniqueId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._location)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString(this._location.ToString()) : null, "location" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._oSType)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString(this._oSType.ToString()) : null, "osType" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._user)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString(this._user.ToString()) : null, "user" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._createdTime ? (Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString(this._createdTime?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "createdTime" ,container.Add );
            }
            AddIf( null != (((object)this._localAdministrator)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString(this._localAdministrator.ToString()) : null, "localAdministrator" ,container.Add );
            AfterToJson(ref container);
            return container;
        }
    }
}