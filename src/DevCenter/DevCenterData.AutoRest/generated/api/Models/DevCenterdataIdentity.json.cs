// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Extensions;

    public partial class DevCenterdataIdentity
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonObject into a new instance of <see cref="DevCenterdataIdentity" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal DevCenterdataIdentity(Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_projectName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString>("projectName"), out var __jsonProjectName) ? (string)__jsonProjectName : (string)ProjectName;}
            {_poolName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString>("poolName"), out var __jsonPoolName) ? (string)__jsonPoolName : (string)PoolName;}
            {_scheduleName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString>("scheduleName"), out var __jsonScheduleName) ? (string)__jsonScheduleName : (string)ScheduleName;}
            {_userId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString>("userId"), out var __jsonUserId) ? (string)__jsonUserId : (string)UserId;}
            {_devBoxName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString>("devBoxName"), out var __jsonDevBoxName) ? (string)__jsonDevBoxName : (string)DevBoxName;}
            {_customizationGroupName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString>("customizationGroupName"), out var __jsonCustomizationGroupName) ? (string)__jsonCustomizationGroupName : (string)CustomizationGroupName;}
            {_customizationTaskId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString>("customizationTaskId"), out var __jsonCustomizationTaskId) ? (string)__jsonCustomizationTaskId : (string)CustomizationTaskId;}
            {_actionName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString>("actionName"), out var __jsonActionName) ? (string)__jsonActionName : (string)ActionName;}
            {_operationId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString>("operationId"), out var __jsonOperationId) ? (string)__jsonOperationId : (string)OperationId;}
            {_catalogName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString>("catalogName"), out var __jsonCatalogName) ? (string)__jsonCatalogName : (string)CatalogName;}
            {_taskName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString>("taskName"), out var __jsonTaskName) ? (string)__jsonTaskName : (string)TaskName;}
            {_environmentName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString>("environmentName"), out var __jsonEnvironmentName) ? (string)__jsonEnvironmentName : (string)EnvironmentName;}
            {_definitionName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString>("definitionName"), out var __jsonDefinitionName) ? (string)__jsonDefinitionName : (string)DefinitionName;}
            {_id = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString>("id"), out var __jsonId) ? (string)__jsonId : (string)Id;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Models.IDevCenterdataIdentity.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Models.IDevCenterdataIdentity.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Models.IDevCenterdataIdentity FromJson(Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonObject json ? new DevCenterdataIdentity(json) : null;
        }

        /// <summary>
        /// Serializes this instance of <see cref="DevCenterdataIdentity" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="DevCenterdataIdentity" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != (((object)this._projectName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString(this._projectName.ToString()) : null, "projectName" ,container.Add );
            AddIf( null != (((object)this._poolName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString(this._poolName.ToString()) : null, "poolName" ,container.Add );
            AddIf( null != (((object)this._scheduleName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString(this._scheduleName.ToString()) : null, "scheduleName" ,container.Add );
            AddIf( null != (((object)this._userId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString(this._userId.ToString()) : null, "userId" ,container.Add );
            AddIf( null != (((object)this._devBoxName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString(this._devBoxName.ToString()) : null, "devBoxName" ,container.Add );
            AddIf( null != (((object)this._customizationGroupName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString(this._customizationGroupName.ToString()) : null, "customizationGroupName" ,container.Add );
            AddIf( null != (((object)this._customizationTaskId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString(this._customizationTaskId.ToString()) : null, "customizationTaskId" ,container.Add );
            AddIf( null != (((object)this._actionName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString(this._actionName.ToString()) : null, "actionName" ,container.Add );
            AddIf( null != (((object)this._operationId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString(this._operationId.ToString()) : null, "operationId" ,container.Add );
            AddIf( null != (((object)this._catalogName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString(this._catalogName.ToString()) : null, "catalogName" ,container.Add );
            AddIf( null != (((object)this._taskName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString(this._taskName.ToString()) : null, "taskName" ,container.Add );
            AddIf( null != (((object)this._environmentName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString(this._environmentName.ToString()) : null, "environmentName" ,container.Add );
            AddIf( null != (((object)this._definitionName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString(this._definitionName.ToString()) : null, "definitionName" ,container.Add );
            AddIf( null != (((object)this._id)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Json.JsonString(this._id.ToString()) : null, "id" ,container.Add );
            AfterToJson(ref container);
            return container;
        }
    }
}