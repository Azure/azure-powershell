// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Models.Api20230401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Extensions;

    /// <summary>Properties of an environment type.</summary>
    public partial class EnvironmentType :
        Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Models.Api20230401.IEnvironmentType,
        Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Models.Api20230401.IEnvironmentTypeInternal
    {

        /// <summary>Backing field for <see cref="DeploymentTargetId" /> property.</summary>
        private string _deploymentTargetId;

        /// <summary>
        /// Id of a subscription or management group that the environment type will be mapped to. The environment's resources will
        /// be deployed into this subscription or management group.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.PropertyOrigin.Owned)]
        public string DeploymentTargetId { get => this._deploymentTargetId; set => this._deploymentTargetId = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Name of the environment type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support.EnvironmentTypeEnableStatus _status;

        /// <summary>Indicates whether this environment type is enabled for use in this project.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support.EnvironmentTypeEnableStatus Status { get => this._status; set => this._status = value; }

        /// <summary>Creates an new <see cref="EnvironmentType" /> instance.</summary>
        public EnvironmentType()
        {

        }
    }
    /// Properties of an environment type.
    public partial interface IEnvironmentType :
        Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Id of a subscription or management group that the environment type will be mapped to. The environment's resources will
        /// be deployed into this subscription or management group.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Id of a subscription or management group that the environment type will be mapped to. The environment's resources will be deployed into this subscription or management group.",
        SerializedName = @"deploymentTargetId",
        PossibleTypes = new [] { typeof(string) })]
        string DeploymentTargetId { get; set; }
        /// <summary>Name of the environment type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Name of the environment type",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>Indicates whether this environment type is enabled for use in this project.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Indicates whether this environment type is enabled for use in this project.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support.EnvironmentTypeEnableStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support.EnvironmentTypeEnableStatus Status { get; set; }

    }
    /// Properties of an environment type.
    internal partial interface IEnvironmentTypeInternal

    {
        /// <summary>
        /// Id of a subscription or management group that the environment type will be mapped to. The environment's resources will
        /// be deployed into this subscription or management group.
        /// </summary>
        string DeploymentTargetId { get; set; }
        /// <summary>Name of the environment type</summary>
        string Name { get; set; }
        /// <summary>Indicates whether this environment type is enabled for use in this project.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support.EnvironmentTypeEnableStatus Status { get; set; }

    }
}