name: Clean Old Branches

on:
  workflow_dispatch:
  schedule:
    - cron: '5 18 * * *'

jobs:
  clean-old-branches:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Clean old branches
        shell: pwsh
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          $cutoffDate = (Get-Date).AddDays(-30)
          $repo = gh repo view --json nameWithOwner --jq ".nameWithOwner"

          Write-Host "Checking repo: $repo"
          $branches = gh api "repos/$repo/branches" --paginate | ConvertFrom-Json
          Write-Host "Total branches: $($branches.Count)"

          foreach ($branch in $branches) {
            $name = $branch.name
            if ($name -match "^Daily/Release_(\d{14})$") {
              $timestamp = $matches[1]
              try {
                  $branchDate = [datetime]::ParseExact($timestamp, "yyyyMMddHHmmss", [System.Globalization.CultureInfo]::InvariantCulture)
              } catch {
                Write-Warning "Failed to parse timestamp for $name"
                continue
              }

              if ($branchDate -lt $cutoffDate) {
                Write-Host "Deleting old daily release branch: $name (created $branchDate)"
                gh api -X DELETE "repos/$repo/git/refs/heads/$name"
              }
            }

            elseif ($name -match "^batch-generation/branch-(\d{2})-(\d{2})-(\d{2})-(\d+)$") {
              $yy = $matches[1]
              $mm = $matches[2]
              $dd = $matches[3]

              $year = [int]"20$yy"
              $branchDate = Get-Date -Year $year -Month $mm -Day $dd -Hour 0 -Minute 0 -Second 0

              if ($branchDate -lt $cutoffDate) {
                  Write-Host "Deleting old batch generation branch: $name (created $branchDate)"
                  gh api -X DELETE "repos/$repo/git/refs/heads/$name"
              }
            }
          }
