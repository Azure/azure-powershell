# Variable 'KeyVaultName' and 'ADOTokenName' was defined in the Variables tab
schedules:
- cron: "50 15 * * *"
  displayName: 11:50 PM (UTC + 8:00) China Daily Run
  branches:
    include:
    - main

jobs:
- job: UpdateYaml
  displayName: Update resourceManagement.yml
  pool: pool-windows-2019

  steps:
  - task: UseDotNet@2
    displayName: Install .NET 8 SDK
    inputs:
      packageType: sdk
      version: 8.0.x
  - template: util/get-github-pat-steps.yml

  - pwsh: |
      dotnet --version
      dotnet new tool-manifest --force
      dotnet tool install powershell --version 7.4.*
    displayName: Install PowerShell 7.4.x

  - template: util/get-keyvault-secret-steps.yml
    parameters:
      serviceConnectionName: $(AzureSubscription)
      keyVaultName: $(KeyVaultName)
      secretName: $(ADOTokenName)
      outVar: 'ADOToken'

  - pwsh: |
      dotnet tool run pwsh -NoLogo -NoProfile -NonInteractive -File "./tools/Github/ParseServiceContactsList.ps1 -ADOToken $(ADOToken)"
    displayName: Update resourceManagement.yml file locally

  - pwsh: |
      $hasChanges = git diff --name-only .github/policies
      if ($null -eq $hasChanges) {
          Write-Host "The wiki has no changes."
          Write-Host "##vso[task.setvariable variable=ChangesDetected]false"
      } else {
          Write-Host "There are changes in the repository."
          Write-Host "##vso[task.setvariable variable=ChangesDetected]true"
      }
    displayName: Check if Wiki table has any changes

  - pwsh: |
      git config --global user.email "65331932+azure-powershell-bot@users.noreply.github.com"
      git config --global user.name "azure-powershell-bot"
      git checkout -b "internal/sync-resourcemanagement-yml"

      git add .github/policies
      git commit -m "Sync resourceManagement.yml"

      git remote set-url origin https://azure-powershell-bot:$(GithubToken)@github.com/Azure/azure-powershell.git;
      git push origin internal/sync-resourcemanagement-yml --force
    displayName: Git commit and push
    condition: and(succeeded(), eq(variables['ChangesDetected'], 'true'))

  - pwsh: |
      $Title = "Sync resourceManagement.yml according To ADO Wiki Page - Service Contact List"
      $HeadBranch = "internal/sync-resourcemanagement-yml"
      $BaseBranch = "main"
      $Description = "This PR synchronizes the task: 'Triage issues to the service team' part of resourceManagement.yml from table of Service Contact List in ADO wiki page"
      ./tools/Github/CreatePR.ps1 -Title $Title -HeadBranch $HeadBranch -BaseBranch $BaseBranch -BotAccessToken $(GithubToken) -Description $Description
    displayName: Create PR to main branch
    condition: and(succeeded(), eq(variables['ChangesDetected'], 'true'))
