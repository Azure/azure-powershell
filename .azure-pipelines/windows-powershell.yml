variables:
  AgentPoolName: pool-windows-2019
  WindowsName: windows
  WindowsImage: windows-2019
  TestFramework: netcoreapp3.1
  TestTarget: Test
  Configuration: Debug
  DebugLocalBuildTasks: true
  IsGenerateBased: $[eq(variables['system.pullRequest.targetBranch'], 'generation')]
  BuildTimeoutInMinutes: 120
  AnalysisTimeoutInMinutes: 120
  EnableTestCoverage: true
  TestCoverageLocation: $(Build.SourcesDirectory)/artifacts
  PowerShellPlatform: Windows PowerShell

trigger: none

pr:
  branches:
    include:
      - '*'
    exclude:
      - Azs-tzl

jobs:
- job: Build
  displayName: Build
  condition: and(eq(variables.IsGenerateBased, false), succeeded())
  timeoutInMinutes: ${{ variables.BuildTimeoutInMinutes }}
  pool: ${{ variables.AgentPoolName }}

  steps:
  - task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
    displayName: 'Component Detection'
    continueOnError: true
  - template: util/build-steps.yml
    parameters:
      testFramework: ${{ variables.TestFramework }}
      configuration: ${{ variables.Configuration }}
      powerShellPlatform: ${{ variables.PowerShellPlatform }}

- job: Analyze
  displayName: Analyze
  dependsOn: Build
  condition: succeeded()
  timeoutInMinutes: ${{ variables.AnalysisTimeoutInMinutes }}
  pool: ${{ variables.AgentPoolName }}

  steps:
  - template: util/analyze-steps.yml
    parameters:
      configuration: ${{ variables.Configuration }}
      testFramework: ${{ variables.TestFramework }}
      powerShellPlatform: ${{ variables.PowerShellPlatform }}

- job: Test
  displayName: Test
  dependsOn: Build
  condition: and(eq(variables.IsGenerateBased, false), succeeded())
  timeoutInMinutes: 180
  pool: ${{ variables.AgentPoolName }}

  steps:
  - template: util/test-steps.yml
    parameters:
      osName: ${{ variables.WindowsName }}
      testFramework: ${{ variables.TestFramework }}
      testTarget: ${{ variables.TestTarget }}
      configuration: ${{ variables.Configuration }}
      powerShellPlatform: ${{ variables.PowerShellPlatform }}
