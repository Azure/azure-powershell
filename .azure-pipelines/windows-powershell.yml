variables:
  AgentPoolName: pool-windows-2019
  WindowsName: windows
  WindowsImage: windows-2019
  TestFramework: net6.0
  TestTarget: Test
  Configuration: Debug
  DebugLocalBuildTasks: true
  IsGenerateBased: $[startsWith(variables['system.pullRequest.targetBranch'], 'generation')]
  BuildTimeoutInMinutes: 120
  AnalysisTimeoutInMinutes: 120
  EnableTestCoverage: true
  TestCoverageLocation: $(Build.SourcesDirectory)/artifacts
  PowerShellPlatform: Windows PowerShell
  AZURE_CLIENTS_SHOW_SECRETS_WARNING: true

trigger: none

pr:
  branches:
    include:
      - '*'
    exclude:
      - Azs-tzl

jobs:
- job: Build
  displayName: Build
  condition: and(eq(variables.IsGenerateBased, false), succeeded())
  timeoutInMinutes: ${{ variables.BuildTimeoutInMinutes }}
  pool: ${{ variables.AgentPoolName }}

  steps:
  - task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
    displayName: 'Component Detection'
    continueOnError: true
  - checkout: self
  - task: UseDotNet@2
    displayName: 'Use .NET Core sdk 6.0.x'
    inputs:
      packageType: sdk
      version: 6.0.x
  - task: NodeTool@0
    displayName: Install Autorest
    inputs:
      versionSpec: '14.17.1'
      command: custom
      verbose: false
      customCommand: install autorest@latest
  - task: PowerShell@2
    displayName: Setup environment for Autorest
    inputs:
      targetType: inline
      script: "$env:NODE_OPTIONS=\"--max-old-space-size=65536\""
      pwsh: true
  - task: PowerShell@2
    displayName: 'Build'
    inputs:
      targetType: inline
      pwsh: true
      script: |
        if ("Manual" -eq "$(Build.Reason)") {
          #TODO: change value of $trigger to the account who trigger this run
          $trigger = 'Manual'
        } else {
          $trigger = "$(System.PullRequest.PullRequestNumber)"
        }

        $filesChangedOutputPath = Join-Path "$(Build.SourcesDirectory)" 'artifacts' 'FilesChanged.txt'
        New-Item -Type File -Path $filesChangedOutputPath -Force
        $subTasksFilePath = Join-Path "$(Build.SourcesDirectory)" 'artifacts' 'SubTasksFile.txt'

        Write-Host "`n##[group]Filter changed files"
        $filesChangedScriptPath = Join-Path "$(Build.SourcesDirectory)" 'tools' 'BuildScripts' 'FilesChangedScript.psm1'
        Import-Module $filesChangedScriptPath
        if ("PullRequest" -eq "$(Build.Reason)") {
          Get-FilesChangedFromPR -RepoRoot "$(Build.SourcesDirectory)" -TargetBranch "$(System.PullRequest.TargetBranch)" | Out-File $filesChangedOutputPath
        } else {
          Get-AllModule -RepoRoot "$(Build.SourcesDirectory)" | ForEach-Object { Join-Path 'src' $_ } | Out-File $filesChangedOutputPath
        }
        Write-Host "`n##[group]build steps"
        $buildStepsPath = Join-Path "$(Build.SourcesDirectory)" '.azure-pipelines' 'PipelineSteps' 'build-steps.ps1'
        & $buildStepsPath -RepoRoot "$(Build.SourcesDirectory)" -Configuration "${{ variables.Configuration }}" -PowerShellPlatform "${{ variables.PowerShellPlatform }}" -FilesChangedOutputPath $filesChangedOutputPath -SubTasksFilePath $subTasksFilePath -BuildReason $(Build.Reason) -Trigger $trigger
  - template: util/publish-artifacts-steps.yml
    parameters:
      artifactName: build-${{ variables.TestFramework }}

- job: Analyze
  displayName: Analyze
  dependsOn: Build
  condition: succeeded()
  timeoutInMinutes: ${{ variables.AnalysisTimeoutInMinutes }}
  pool: ${{ variables.AgentPoolName }}
  steps:
  - template: util/download-build-steps.yml
    parameters:
      artifactName: build-${{ variables.TestFramework }}
  - task: NodeTool@0
    displayName: Install autorest
    inputs:
      versionSpec: '14.17.1'
      command: custom
      verbose: false
      customCommand: install autorest@latest
  - task: PowerShell@2
    displayName: Setup environment for autorest
    inputs:
      targetType: inline
      script: "$env:NODE_OPTIONS=\"--max-old-space-size=65536\""
      pwsh: true
  - task: UseDotNet@2
    displayName: 'Use .NET Core sdk 6.0.x'
    inputs:
      packageType: sdk
      version: 6.0.x
  - task: PowerShell@2
    displayName: 'Analyze'
    inputs:
      targetType: inline
      workingDirectory: $(Build.SourcesDirectory)
      pwsh: true
      script: .azure-pipelines/PipelineSteps/analyze-steps.ps1 -RepoRoot "$(Build.SourcesDirectory)" -Configuration "${{ variables.Configuration }}" -PowerShellPlatform "${{ variables.PowerShellPlatform }}"
  - template: util/publish-artifacts-steps.yml
    parameters:
      artifactName: analyze-${{ variables.testFramework }}-$(System.JobAttempt)

- job: Test
  displayName: Test
  dependsOn: Build
  timeoutInMinutes: 180
  pool: ${{ variables.AgentPoolName }}
  steps:
  - template: util/download-build-steps.yml
    parameters:
      artifactName: build-${{ variables.TestFramework }}
  - task: UseDotNet@2
    displayName: 'Use .NET SDK 6 for tests'
    inputs:
      packageType: sdk
      version: 6.0.x
  - task: PowerShell@2
    displayName: 'Test'
    inputs:
      targetType: inline
      workingDirectory: $(Build.SourcesDirectory)
      pwsh: true
      script: .azure-pipelines/PipelineSteps/test-steps.ps1 -RepoRoot "$(Build.SourcesDirectory)" -Configuration "${{ variables.Configuration }}" -PowerShellPlatform "${{ variables.PowerShellPlatform }}" -TestFramework "${{ variables.testFramework }}"
  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '**/*.trx'
  - template: util/publish-artifacts-steps.yml
    parameters:
      artifactName: test-${{ variables.testFramework }}-$(OSName)-$(System.JobAttempt)