parameters:
- name: os_windows_2019
  displayName: Windows 2019 Image Version
  type: string
  default: windows-2019
- name: os_windows_2022
  displayName: Windows 2022 Image Version
  type: string
  default: windows-2022
- name: os_linux
  displayName: Linux Image Version
  type: string
  default: ubuntu-20.04
- name: os_macos
  displayName: MacOS Image Version
  type: string
  default: macOS-11
- name: win_ps_5_1
  displayName: Windows PowerShell 5.1 Version
  type: string
  default: 5.1
- name: ps_7_2_x
  displayName: PowerShell 7.2.x Version
  type: string
  default: 7.2.*
- name: ps_7_3_x
  displayName: PowerShell 7.3.x Version
  type: string
  default: 7.3.*
- name: ps_latest
  displayName: PowerShell Latest Version
  type: string
  default: latest
- name: dotnet_sdk_6
  displayName: .NET 6 SDK Version
  type: string
  default: 6.0.x
- name: dotnet_sdk_7
  displayName: .NET 7 SDK Version
  type: string
  default: 7.0.x

variables:
  ArtifactsName: LiveTestArtifacts
  DataLocation: $(Pipeline.Workspace)/$(ArtifactsName)
  SuppressAzurePowerShellBreakingChangeWarnings: true

schedules:
- cron: "0 19 * * *"
  displayName: Daily Live Test
  branches:
    include:
    - main
  always: true

pr: none
trigger: none

stages:
- stage: Test
  displayName: Run Live Test
  jobs:
  - template: util/live-test-steps.yml
    parameters:
      name: 'win_ps_5_1_win_2019'
      vmImage: ${{ parameters.os_windows_2019 }}
      osType: 'Windows'
      psVersion: ${{ parameters.win_ps_5_1 }}
      dotnetVersion: ${{ parameters.dotnet_sdk_6 }}

  - template: util/live-test-steps.yml
    parameters:
      name: 'win_ps_5_1_win_2022'
      vmImage: ${{ parameters.os_windows_2022 }}
      osType: 'Windows'
      psVersion: ${{ parameters.win_ps_5_1 }}
      dotnetVersion: ${{ parameters.dotnet_sdk_6 }}

  - template: util/live-test-steps.yml
    parameters:
      name: 'ps_7_2_x_win_2019'
      vmImage: ${{ parameters.os_windows_2019 }}
      osType: 'Windows'
      psVersion: ${{ parameters.ps_7_2_x }}
      dotnetVersion: ${{ parameters.dotnet_sdk_6 }}

  - template: util/live-test-steps.yml
    parameters:
      name: 'ps_7_3_x_win_2019'
      vmImage: ${{ parameters.os_windows_2019 }}
      osType: 'Windows'
      psVersion: ${{ parameters.ps_7_3_x }}
      dotnetVersion: ${{ parameters.dotnet_sdk_7 }}

  - template: util/live-test-steps.yml
    parameters:
      name: 'ps_latest_win_2019'
      vmImage: ${{ parameters.os_windows_2019 }}
      osType: 'Windows'
      psVersion: ${{ parameters.ps_latest }}
      dotnetVersion: ${{ parameters.dotnet_sdk_7 }}

  - template: util/live-test-steps.yml
    parameters:
      name: 'ps_7_2_x_win_2022'
      vmImage: ${{ parameters.os_windows_2022 }}
      osType: 'Windows'
      psVersion: ${{ parameters.ps_7_2_x }}
      dotnetVersion: ${{ parameters.dotnet_sdk_6 }}

  - template: util/live-test-steps.yml
    parameters:
      name: 'ps_7_3_x_win_2022'
      vmImage: ${{ parameters.os_windows_2022 }}
      osType: 'Windows'
      psVersion: ${{ parameters.ps_7_3_x }}
      dotnetVersion: ${{ parameters.dotnet_sdk_7 }}

  - template: util/live-test-steps.yml
    parameters:
      name: 'ps_latest_win_2022'
      vmImage: ${{ parameters.os_windows_2022 }}
      osType: 'Windows'
      psVersion: ${{ parameters.ps_latest }}
      dotnetVersion: ${{ parameters.dotnet_sdk_7 }}

  - template: util/live-test-steps.yml
    parameters:
      name: 'ps_7_2_x_linux'
      vmImage: ${{ parameters.os_linux }}
      osType: 'Linux'
      psVersion: ${{ parameters.ps_7_2_x }}
      dotnetVersion: ${{ parameters.dotnet_sdk_6 }}

  - template: util/live-test-steps.yml
    parameters:
      name: 'ps_7_3_x_linux'
      vmImage: ${{ parameters.os_linux }}
      osType: 'Linux'
      psVersion: ${{ parameters.ps_7_3_x }}
      dotnetVersion: ${{ parameters.dotnet_sdk_7 }}

  - template: util/live-test-steps.yml
    parameters:
      name: 'ps_latest_linux'
      vmImage: ${{ parameters.os_linux }}
      osType: 'Linux'
      psVersion: ${{ parameters.ps_latest }}
      dotnetVersion: ${{ parameters.dotnet_sdk_7 }}

  - template: util/live-test-steps.yml
    parameters:
      name: 'ps_7_2_x_macOS'
      vmImage: ${{ parameters.os_macos }}
      osType: 'MacOS'
      psVersion: ${{ parameters.ps_7_2_x }}
      dotnetVersion: ${{ parameters.dotnet_sdk_6 }}

  - template: util/live-test-steps.yml
    parameters:
      name: 'ps_7_3_x_macOS'
      vmImage: ${{ parameters.os_macos }}
      osType: 'MacOS'
      psVersion: ${{ parameters.ps_7_3_x }}
      dotnetVersion: ${{ parameters.dotnet_sdk_7 }}

  - template: util/live-test-steps.yml
    parameters:
      name: 'ps_latest_macOS'
      vmImage: ${{ parameters.os_macos }}
      osType: 'MacOS'
      psVersion: ${{ parameters.ps_latest }}
      dotnetVersion: ${{ parameters.dotnet_sdk_7 }}

- stage: Report
  displayName: Send Report
  condition: always()
  jobs:
  - job:
    displayName: Send Live Test Status Report
    steps:
    - task: PowerShell@2
      displayName: Create data location directory
      inputs:
        pwsh: true
        targetType: inline
        script:
          New-Item -Name $(ArtifactsName) -Path $(Pipeline.Workspace) -ItemType Directory -Force

    - task: DownloadPipelineArtifact@2
      displayName: Download live test results
      inputs:
        buildType: 'current'
        targetPath: $(Pipeline.Workspace)/$(ArtifactsName)

    - task: PowerShell@2
      displayName: Send live test report
      inputs:
        pwsh: true
        targetType: filePath
        filePath: ./tools/TestFx/Live/SendLiveTestReport.ps1
        arguments: -EmailServiceConnectionString '$(EmailServiceConnectionString)' -EmailFrom '$(EmailFrom)'
