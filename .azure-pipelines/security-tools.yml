# Variable 'IsGenerateBased' was defined in the Variables tab
# Variable 'NugetSecurityAnalysisWarningLevel' was defined in the Variables tab
# Cron Schedules have been converted using UTC Time Zone and may need to be updated for your location
schedules:
- cron: 0 4 * * 1,2,3,4,5
  branches:
    include:
    - main
resources:
  repositories:
  - repository: self
    type: git
    ref: refs/heads/main
jobs:
- job: Job_1
  displayName: Main
  timeoutInMinutes: 120
  pool: pool-windows-2019
  steps:
  - checkout: self
    fetchTags: false
  - template: util/get-github-pat-steps.yml
  - task: PowerShell@2
    displayName: Install platyPS
    inputs:
      targetType: inline
      script: Install-Module platyPS -Force -Confirm:$false -Scope CurrentUser
      pwsh: true
  - task: NodeTool@0
    displayName: Install Node 14.17.1
    condition: eq(variables.IsGenerateBased, true)
    inputs:
      versionSpec: 14.17.1

  - task: PowerShell@2
    displayName: Install autorest
    condition: eq(variables.IsGenerateBased, true)
    inputs:
      targetType: inline
      script: npm install autorest@latest;$env:NODE_OPTIONS="--max-old-space-size=65536"
  - task: PowerShell@2
    displayName: Build
    inputs:
      targetType: inline
      script: dotnet msbuild build.proj /t:"Build;GenerateHelp" /p:"PullRequestNumber=$(System.PullRequest.PullRequestNumber);IsSecurityCheck=true"
    env:
      OCTOKITPAT: $(GithubToken)
  - task: securedevelopmentteam.vss-secure-development-tools.build-task-credscan.CredScan@3
    displayName: Run CredScan
    condition: in(variables['system.pullRequest.targetBranch'], 'generation', 'main')
    inputs:
      toolMajorVersion: V2
      outputFormat: sarif
      scanFolder: SecurityTmp
      suppressionsFile: tools/SecurityTools/CredScanSuppressions.json

  - task: PowerShell@2
    displayName: Copy PDB for BinSkim
    inputs:
      targetType: inline
      script: ./src/lib/pdb/CopyPdbToArtifacts.ps1
      pwsh: true

  - task: securedevelopmentteam.vss-secure-development-tools.build-task-binskim.BinSkim@3
    displayName: Run BinSkim
    inputs:
      InputType: 'Basic'
      Function: 'analyze'
      AnalyzeTarget: '$(Build.SourcesDirectory)/artifacts/Debug/*.dll;$(Build.SourcesDirectory)/artifacts/*.exe'
      AnalyzeStatistics: true

  - task: PowerShell@2
    displayName: Cleanup Build
    inputs:
      targetType: inline
      script: ./tools/CleanupBuild.ps1
      pwsh: true

  - task: PoliCheck@2
    displayName: Run PoliCheck
    inputs:
      targetArgument: $(Build.SourcesDirectory)/artifacts/Debug
      result: $(Build.SourcesDirectory)/artifacts/result/PoliCheck.xml
      optionsFTPATH: tools/SecurityTools/PoliCheckFileExtensions.xml
  - task: PublishPipelineArtifact@0
    displayName: Save artifacts
    condition: succeededOrFailed()
    inputs:
      artifactName: artifacts
      targetPath: artifacts
...
