pool:
  vmImage: 'ubuntu-latest'

trigger: none
pr: none

jobs:
- job: TestFederatedToken
  timeoutInMinutes: 1380
  variables:
  - name: federatedToken
    value: '' 
  steps:
  - task: AzurePowerShell@5
    displayName: Print FederatedToken using Az
    inputs:
      azureSubscription: $(serviceConnectionName)
      ScriptType: 'InlineScript'
      Inline: |
        $contextsetting = Get-AzContextAutosaveSetting
        $contextFile = Join-Path -Path $contextsetting.ContextDirectory -ChildPath "AzureRmContext.json"
        $context = Get-Content $contextFile
        Write-Host $context
        $token = (Get-AzAccessToken).Token
        Write-Host "$token"
      errorActionPreference: stop
      azurePowerShellVersion: 'LatestVersion'
      pwsh: true
  - task: PowerShell@2
    displayName: Get Service Connection Details
    inputs:
      targetType: 'Inline'
      script: |
        $projectId = "$(system.TeamProjectId)"
        $hubName = "$(system.HostType)"
        $planId = "$(system.PlanId)"
        $jobId = "$(system.JobId)"

        $baseUri = "$(system.TeamFoundationCollectionUri)"

        $serviceConnectionUrl = "${baseUri}$projectId/_apis/serviceendpoint/endpoints?endpointNames=$(serviceConnectionName)&type=azurerm&includeFailed=true&includeDetails=true&api-version=7.1-preview.4"
        Write-Host "Invoke-RestMethod -Uri $serviceConnectionUrl -Method Get"

        $response = Invoke-RestMethod -Uri $serviceConnectionUrl -Method Get -Headers @{Authorization = "Bearer $(System.AccessToken)"}
        $response.value
        $appId = $response.value.authorization.parameters.serviceprincipalid
        $tenantId = $response.value.authorization.parameters.tenantid

        $serviceConnectionId = "0d312308-6437-41a6-bc0d-270f72e1ae23"
        $serviceConnectionId = $response.value.Id
        $url = "${baseUri}$projectId/_apis/distributedtask/hubs/$hubName/plans/$planId/jobs/$jobId/oidctoken?serviceConnectionId=$serviceConnectionId&api-version=7.1-preview.1"
        Write-Host "Invoke-RestMethod -Uri $url -Method Post"

        $response = Invoke-RestMethod -Uri $url -Method Post -ContentType "application/json" -Headers @{Authorization = "Bearer $(System.AccessToken)"}
        $response
        $federatedToken = $response.oidcToken

        echo "##vso[task.setvariable variable=federatedToken]$federatedToken"
        echo "##vso[task.setvariable variable=appId]$appId"
        echo "##vso[task.setvariable variable=tenantId]$tenantId"
      errorActionPreference: stop
      debugPreference: 'Continue'
      pwsh: true
    env:
       SYSTEM_ACCESSTOKEN: $(System.AccessToken)
  - task: PowerShell@2
    displayName: Print Previous FederatedToken
    inputs:
      targetType: 'Inline'
      script: |
        Write-Host "federatedToken=$(federatedToken)"
        Write-Host "appId=$(appId)"
        Write-Host "tenantId=$(tenantId)"
      errorActionPreference: stop
      debugPreference: 'Continue'
      pwsh: true