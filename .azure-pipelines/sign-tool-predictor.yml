pr: none
trigger: none
pool:
  vmImage: 'windows-2019'
steps:
- task: PowerShell@2
  displayName: Install PS 7.1.0-preview.7
  inputs:
    targetType: 'inline'
    script: |
      $url = "https://github.com/PowerShell/PowerShell/releases/download/v7.1.0-preview.7/PowerShell-7.1.0-preview.7-win-x64.zip"
      $output = "./PowerShell-7.1.0-preview.7-win-x64.zip"
      (New-Object System.Net.WebClient).DownloadFile($url, $output)
      $pwshPath= "./PowerShell-7.1.0-preview.7/"
      Expand-Archive -Path $output -DestinationPath $pwshPath

- task: PowerShell@2
  displayName: Install dotnet 5.0.100-rc.1.20452.10
  inputs:
    targetType: 'inline'
    script: |
      # download dotnet 5.0.100-rc.1.20452.10
      $url = "https://dotnet.microsoft.com/download/dotnet-core/scripts/v1/dotnet-install.ps1"
      $output = "./dotnet-install.ps1"
      (New-Object System.Net.WebClient).DownloadFile($url, $output)
      ./dotnet-install.ps1 -Version "5.0.100-rc.1.20452.10"
      dotnet --info
      
- task: PowerShell@2
  displayName: MSBuild
  inputs:
    targetType: 'inline'
    script: |
      $psPath = "./PowerShell-7.1.0-preview.7" + "/pwsh.exe"
      $command = '`$PSVersionTable`
      dotnet msbuild tools\Az.Tools.Predictor\build.proj /target:"Clean;Build;Package" /p:Configuration=Release`
      Exit'
      Invoke-Command -ScriptBlock { param ($pspath, $command) & $pspath -Command $command } -ArgumentList $pspath, $command

- task: UseDotNet@2
  displayName: 'Use .NET Core sdk'
  inputs:
    packageType: sdk
    version: 5.0.100-rc.1.20452.10
    
- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: custom
    custom: msbuild
    arguments: 'tools\Az.Tools.Predictor\build.proj /target:"Clean;Build"'

# - task: PowerShell@2
#   displayName: Package
#   inputs:
#     targetType: 'inline'
#     script: |
#       $psPath = "./PowerShell-7.1.0-preview.7" + "/pwsh.exe"
#       $command = '`$PSVersionTable`
#       dotnet msbuild tools\Az.Tools.Predictor\build.proj /target:"Package" /p:Configuration=Release`
#       Exit'
#       Invoke-Command -ScriptBlock { param ($pspath, $command) & $pspath.toString() -Command $command } -ArgumentList $pspath, $command