variables:

  BuildTimeoutInMinutes: 120
  AnalysisTimeoutInMinutes: 120
  MaxParallelJobs: 3
  GenerationBranch: batch-generation/branch-$(Build.BuildId)

trigger: none

jobs:
- job: prepare
  displayName: Generate Matrix
  pool: pool-ubuntu-2004
  steps:
  - checkout: self
    persistCredentials: true
    clean: true

  - task: PowerShell@2
    displayName: 'Create Batch Generation Branch'
    inputs:
      targetType: inline
      script: |
        git checkout -b "${{ variables.GenerationBranch }}"
        git push origin "${{ variables.GenerationBranch }}"

  - task: PowerShell@2
    name: mtrx
    displayName: 'Generate Matrix'
    inputs:
      targetType: inline
      script: |
        $prepareModulesPath = Join-Path "$(Build.SourcesDirectory)" '.azure-pipelines' 'PipelineSteps' 'BatchGeneration' 'prepare.ps1'
        & $prepareModulesPath -RepoRoot "$(Build.SourcesDirectory)" -MaxParallelJobs "${{ variables.MaxParallelJobs }}"
  

- job: build
  displayName: "Build:"
  dependsOn: prepare
  timeoutInMinutes: 120
  pool: pool-windows-2019
  strategy:
    matrix: $[ dependencies.prepare.outputs['mtrx.Targets'] ]
    maxParallel: 15

  steps:
  - checkout: self
    persistCredentials: true
    clean: true

  - task: PowerShell@2
    name: build
    displayName: 'Build Targets'
    inputs:
      targetType: inline
      script: |
        git fetch origin "${{ variables.GenerationBranch }}"
        git checkout "${{ variables.GenerationBranch }}"

        Write-Host "Building targets: ${Target}"

        $modules = $Target -split ','

        foreach ($module in $modules) {
          $folderPath = Join-Path $(Build.SourcesDirectory) 'src' $module
          $filePath = Join-Path $folderPath "newfile.txt"
          "This is a new file in $folder" | Out-File -FilePath $filePath -Encoding UTF8
          }

        git add .
        git commit -m "Build ${Target}"
        git push origin "${{ variables.GenerationBranch }}"

    workingDirectory: $(Build.SourcesDirectory)