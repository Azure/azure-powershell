# Variable 'BaseBranch' was defined in the Variables tab
# Variable 'BotAccessToken' was defined in the Variables tab
# Variable 'ServiceName' was defined in the Variables tab
# Multi-job configuration must be converted to matrix strategy: https://docs.microsoft.com/en-us/azure/devops/pipelines/process/phases?view=azure-devops&tabs=yaml#multi-job-configuration
resources:
  repositories:
  - repository: self
    type: git
    ref: refs/heads/generation
jobs:
- job: Job_1
  displayName: 'Service: '
  timeoutInMinutes: 90
  pool:
    name: pool-windows-2019
  steps:
  - checkout: self
  - task: NodeTool@0
    displayName: Use Node 14.15.5
    inputs:
      versionSpec: 14.15.5
  - task: Npm@1
    displayName: Install autorest
    inputs:
      command: custom
      verbose: false
      customCommand: install -g  autorest@latest
  - task: PowerShell@2
    displayName: Generate
    inputs:
      targetType: inline
      script: >-
        $subModuleFolders =  Get-ChildItem -Directory -Filter *.Autorest

        if ($subModuleFolders -eq $null) {
          autorest --max-memory-size=8192
        } else {
          $subModuleFolders | foreach-object { cd $_.FullName; autorest --max-memory-size=8192}
        }
      pwsh: true
      workingDirectory: src/$(ServiceName)/
  - task: PowerShell@2
    displayName: Build
    condition: eq(variables.ServiceSubmoduleName, '')
    inputs:
      targetType: inline
      script: >-
        $subModuleFolders =  Get-ChildItem -Directory -Filter *.Autorest

        if ($subModuleFolders -eq $null) {
          ./build-module.ps1
        } else {
          $subModuleFolders | foreach-object { cd $_.FullName; ./build-module.ps1; cd ..}
        }

        mkdir ../../artifacts/src/$env:SERVICENAME

        cp -r ./* ../../artifacts/src/$env:SERVICENAME
      pwsh: true
      workingDirectory: src/$(ServiceName)
  - task: PowerShell@2
    displayName: Checkout main branch
    inputs:
      targetType: inline
      script: >
        mkdir src/$env:SERVICENAME
        git checkout src/$env:SERVICENAME
        git checkout -b codegen/$env:SERVICENAME origin/$env:BaseBranch
  - task: PowerShell@2
    displayName: Move code to main
    condition: eq(variables.ServiceSubmoduleName, '')
    inputs:
      targetType: inline
      script: >-
        #Uninstall-Module -Name PackageManagement -AllVersions
        Install-Module -Name PowerShellGet -RequiredVersion 2.2.3 -Force
        Install-Module -Name platyPS -RequiredVersion 0.14.2 -Force
        Install-Module -Name Az.Accounts -Force
        Import-Module .\tools\Gen2Master\MoveFromGeneration2Master.ps1

        $subModuleFolders = Get-ChildItem .\artifacts\src\$env:SERVICENAME -Directory -Filter *.Autorest
        if ($subModuleFolders -eq $null) {
          Move-Generation2Master -SourcePath .\artifacts\src\$env:SERVICENAME -DestPath .\src\$env:SERVICENAME
        } else {
          Move-Generation2MasterHybrid -SourcePath .\artifacts\src\$env:SERVICENAME -DestPath .\src\$env:SERVICENAME
        }

        git config user.email "65331932+azure-powershell-bot@users.noreply.github.com"
        git config user.name "azure-powershell-bot"
        git add ./src
        git add tools/CreateMappings_rules.json
        git commit -m "Move $env:SERVICENAME to $env:BaseBranch"
        git remote set-url origin https://azure-powershell-bot:$(BotAccessToken)@github.com/Azure/azure-powershell.git
        git push origin codegen/$env:SERVICENAME
      pwsh: true

