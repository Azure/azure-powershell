variables:
  WindowsName: windows
  WindowsImage: windows-2019
  LinuxName: linux
  LinuxImage: ubuntu-20.04
  MacOSName: macOS
  MacOSImage: macOS-11
  TestFramework: netcoreapp2.1
  TestTarget: Test
  Configuration: Debug
  DebugLocalBuildTasks: true
  IsGenerateBased: $[eq(variables['system.pullRequest.targetBranch'], 'generation')]
  BuildTimeoutInMinutes: 120
  AnalysisTimeoutInMinutes: 120

trigger: none

pr:
  branches:
    include:
      - '*'
    exclude:
      - Azs-tzl

stages:
- stage: "Build"
  jobs:
  - job: Build
    displayName: Build
    condition: succeeded()
    timeoutInMinutes: ${{ variables.BuildTimeoutInMinutes }}
    strategy:
      matrix:
        windows:
          OSName: ${{ variables.WindowsName }}
          ImageName: ${{ variables.WindowsImage }}
        linux:
          OSName: ${{ variables.LinuxName }}
          ImageName: ${{ variables.LinuxImage }}
        macOS:
          OSName: ${{ variables.MacOSName }}
          ImageName: ${{ variables.MacOSImage }}
    pool:
      vmImage: $(ImageName)

    steps:
    - powershell: |
        $var = Get-ChildItem -File -Recurse -Depth 4 -Path src test-module.ps1 | % {$_}
        Write-Host "##vso[task.setvariable variable=autorestModuleList;isoutput=true]$var"
      name: passOutput

- stage: Test
  dependsOn: Build
  jobs:
  - job: Test
    displayName: Test
    condition: succeeded()
    timeoutInMinutes: 180
    strategy:
      matrix:
        windows:
          OSName: ${{ variables.WindowsName }}
          ImageName: ${{ variables.WindowsImage }}
        linux:
          OSName: ${{ variables.LinuxName }}
          ImageName: ${{ variables.LinuxImage }}
        macOS:
          OSName: ${{ variables.MacOSName }}
          ImageName: ${{ variables.MacOSImage }}
    pool:
      vmImage: $(ImageName)
    variables:
      autorestModuleList: $[stageDependencies.Build.Build.outputs['passOutput.autorestModuleList']]
    steps:
    - template: util/test-steps.yml
      parameters:
        osName: $(OSName)
        testFramework: ${{ variables.TestFramework }}
        testTarget: ${{ variables.TestTarget }}
        configuration: ${{ variables.Configuration }}
        autorestModuleList: ${{ variables.autorestModuleList }}
