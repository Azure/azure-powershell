// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Models.Api20230315
{
    using static Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Runtime.Extensions;

    /// <summary>Service configuration details</summary>
    public partial class ServiceConfigurationProperties :
        Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Models.Api20230315.IServiceConfigurationProperties,
        Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Models.Api20230315.IServiceConfigurationPropertiesInternal
    {

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Models.Api20230315.IServiceConfigurationPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Backing field for <see cref="Port" /> property.</summary>
        private long? _port;

        /// <summary>The port on which service is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.PropertyOrigin.Owned)]
        public long? Port { get => this._port; set => this._port = value; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Support.ProvisioningState? _provisioningState;

        /// <summary>The resource provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Support.ProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="ResourceId" /> property.</summary>
        private string _resourceId;

        /// <summary>The resource Id of the connectivity endpoint (optional).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.PropertyOrigin.Owned)]
        public string ResourceId { get => this._resourceId; set => this._resourceId = value; }

        /// <summary>Backing field for <see cref="ServiceName" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Support.ServiceName _serviceName;

        /// <summary>Name of the service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Support.ServiceName ServiceName { get => this._serviceName; set => this._serviceName = value; }

        /// <summary>Creates an new <see cref="ServiceConfigurationProperties" /> instance.</summary>
        public ServiceConfigurationProperties()
        {

        }
    }
    /// Service configuration details
    public partial interface IServiceConfigurationProperties :
        Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Runtime.IJsonSerializable
    {
        /// <summary>The port on which service is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The port on which service is enabled.",
        SerializedName = @"port",
        PossibleTypes = new [] { typeof(long) })]
        long? Port { get; set; }
        /// <summary>The resource provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The resource provisioning state.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>The resource Id of the connectivity endpoint (optional).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource Id of the connectivity endpoint (optional).",
        SerializedName = @"resourceId",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceId { get; set; }
        /// <summary>Name of the service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Name of the service.",
        SerializedName = @"serviceName",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Support.ServiceName) })]
        Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Support.ServiceName ServiceName { get; set; }

    }
    /// Service configuration details
    internal partial interface IServiceConfigurationPropertiesInternal

    {
        /// <summary>The port on which service is enabled.</summary>
        long? Port { get; set; }
        /// <summary>The resource provisioning state.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>The resource Id of the connectivity endpoint (optional).</summary>
        string ResourceId { get; set; }
        /// <summary>Name of the service.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Support.ServiceName ServiceName { get; set; }

    }
}