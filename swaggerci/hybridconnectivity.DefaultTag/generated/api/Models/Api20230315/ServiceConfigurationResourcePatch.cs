// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Models.Api20230315
{
    using static Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Runtime.Extensions;

    /// <summary>
    /// The service details under service configuration for the target endpoint resource.
    /// </summary>
    public partial class ServiceConfigurationResourcePatch :
        Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Models.Api20230315.IServiceConfigurationResourcePatch,
        Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Models.Api20230315.IServiceConfigurationResourcePatchInternal
    {

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Models.Api20230315.IServiceConfigurationPropertiesPatch Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Models.Api20230315.IServiceConfigurationResourcePatchInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Models.Api20230315.ServiceConfigurationPropertiesPatch()); set { {_property = value;} } }

        /// <summary>The port on which service is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.PropertyOrigin.Inlined)]
        public long? Port { get => ((Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Models.Api20230315.IServiceConfigurationPropertiesPatchInternal)Property).Port; set => ((Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Models.Api20230315.IServiceConfigurationPropertiesPatchInternal)Property).Port = value ?? default(long); }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Models.Api20230315.IServiceConfigurationPropertiesPatch _property;

        /// <summary>The service configuration properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Models.Api20230315.IServiceConfigurationPropertiesPatch Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Models.Api20230315.ServiceConfigurationPropertiesPatch()); set => this._property = value; }

        /// <summary>Creates an new <see cref="ServiceConfigurationResourcePatch" /> instance.</summary>
        public ServiceConfigurationResourcePatch()
        {

        }
    }
    /// The service details under service configuration for the target endpoint resource.
    public partial interface IServiceConfigurationResourcePatch :
        Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Runtime.IJsonSerializable
    {
        /// <summary>The port on which service is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The port on which service is enabled.",
        SerializedName = @"port",
        PossibleTypes = new [] { typeof(long) })]
        long? Port { get; set; }

    }
    /// The service details under service configuration for the target endpoint resource.
    internal partial interface IServiceConfigurationResourcePatchInternal

    {
        /// <summary>The port on which service is enabled.</summary>
        long? Port { get; set; }
        /// <summary>The service configuration properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Models.Api20230315.IServiceConfigurationPropertiesPatch Property { get; set; }

    }
}