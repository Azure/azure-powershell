// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Extensions;

    /// <summary>Properties controlling TLS Certificate Validation.</summary>
    public partial class BackendTlsProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IBackendTlsProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IBackendTlsPropertiesInternal
    {

        /// <summary>Backing field for <see cref="ValidateCertificateChain" /> property.</summary>
        private bool? _validateCertificateChain;

        /// <summary>
        /// Flag indicating whether SSL certificate chain validation should be done when using self-signed certificates for this backend
        /// host.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public bool? ValidateCertificateChain { get => this._validateCertificateChain; set => this._validateCertificateChain = value; }

        /// <summary>Backing field for <see cref="ValidateCertificateName" /> property.</summary>
        private bool? _validateCertificateName;

        /// <summary>
        /// Flag indicating whether SSL certificate name validation should be done when using self-signed certificates for this backend
        /// host.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public bool? ValidateCertificateName { get => this._validateCertificateName; set => this._validateCertificateName = value; }

        /// <summary>Creates an new <see cref="BackendTlsProperties" /> instance.</summary>
        public BackendTlsProperties()
        {

        }
    }
    /// Properties controlling TLS Certificate Validation.
    public partial interface IBackendTlsProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Flag indicating whether SSL certificate chain validation should be done when using self-signed certificates for this backend
        /// host.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Flag indicating whether SSL certificate chain validation should be done when using self-signed certificates for this backend host.",
        SerializedName = @"validateCertificateChain",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ValidateCertificateChain { get; set; }
        /// <summary>
        /// Flag indicating whether SSL certificate name validation should be done when using self-signed certificates for this backend
        /// host.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Flag indicating whether SSL certificate name validation should be done when using self-signed certificates for this backend host.",
        SerializedName = @"validateCertificateName",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ValidateCertificateName { get; set; }

    }
    /// Properties controlling TLS Certificate Validation.
    internal partial interface IBackendTlsPropertiesInternal

    {
        /// <summary>
        /// Flag indicating whether SSL certificate chain validation should be done when using self-signed certificates for this backend
        /// host.
        /// </summary>
        bool? ValidateCertificateChain { get; set; }
        /// <summary>
        /// Flag indicating whether SSL certificate name validation should be done when using self-signed certificates for this backend
        /// host.
        /// </summary>
        bool? ValidateCertificateName { get; set; }

    }
}