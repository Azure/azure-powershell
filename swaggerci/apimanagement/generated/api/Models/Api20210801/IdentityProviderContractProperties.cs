// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Extensions;

    /// <summary>
    /// The external Identity Providers like Facebook, Google, Microsoft, Twitter or Azure Active Directory which can be used
    /// to enable access to the API Management service developer portal for all users.
    /// </summary>
    public partial class IdentityProviderContractProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IIdentityProviderContractProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IIdentityProviderContractPropertiesInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IIdentityProviderBaseParameters"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IIdentityProviderBaseParameters __identityProviderBaseParameters = new Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IdentityProviderBaseParameters();

        /// <summary>List of Allowed Tenants when configuring Azure Active Directory login.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inherited)]
        public string[] AllowedTenant { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IIdentityProviderBaseParametersInternal)__identityProviderBaseParameters).AllowedTenant; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IIdentityProviderBaseParametersInternal)__identityProviderBaseParameters).AllowedTenant = value ?? null /* arrayOf */; }

        /// <summary>OpenID Connect discovery endpoint hostname for AAD or AAD B2C.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inherited)]
        public string Authority { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IIdentityProviderBaseParametersInternal)__identityProviderBaseParameters).Authority; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IIdentityProviderBaseParametersInternal)__identityProviderBaseParameters).Authority = value ?? null; }

        /// <summary>Backing field for <see cref="ClientId" /> property.</summary>
        private string _clientId;

        /// <summary>
        /// Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for Google
        /// login, App ID for Microsoft.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public string ClientId { get => this._clientId; set => this._clientId = value; }

        /// <summary>Backing field for <see cref="ClientSecret" /> property.</summary>
        private string _clientSecret;

        /// <summary>
        /// Client secret of the Application in external Identity Provider, used to authenticate login request. For example, it is
        /// App Secret for Facebook login, API Key for Google login, Public Key for Microsoft. This property will not be filled on
        /// 'GET' operations! Use '/listSecrets' POST request to get the value.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public string ClientSecret { get => this._clientSecret; set => this._clientSecret = value; }

        /// <summary>Password Reset Policy Name. Only applies to AAD B2C Identity Provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inherited)]
        public string PasswordResetPolicyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IIdentityProviderBaseParametersInternal)__identityProviderBaseParameters).PasswordResetPolicyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IIdentityProviderBaseParametersInternal)__identityProviderBaseParameters).PasswordResetPolicyName = value ?? null; }

        /// <summary>Profile Editing Policy Name. Only applies to AAD B2C Identity Provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inherited)]
        public string ProfileEditingPolicyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IIdentityProviderBaseParametersInternal)__identityProviderBaseParameters).ProfileEditingPolicyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IIdentityProviderBaseParametersInternal)__identityProviderBaseParameters).ProfileEditingPolicyName = value ?? null; }

        /// <summary>Signin Policy Name. Only applies to AAD B2C Identity Provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inherited)]
        public string SigninPolicyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IIdentityProviderBaseParametersInternal)__identityProviderBaseParameters).SigninPolicyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IIdentityProviderBaseParametersInternal)__identityProviderBaseParameters).SigninPolicyName = value ?? null; }

        /// <summary>The TenantId to use instead of Common when logging into Active Directory</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inherited)]
        public string SigninTenant { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IIdentityProviderBaseParametersInternal)__identityProviderBaseParameters).SigninTenant; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IIdentityProviderBaseParametersInternal)__identityProviderBaseParameters).SigninTenant = value ?? null; }

        /// <summary>Signup Policy Name. Only applies to AAD B2C Identity Provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inherited)]
        public string SignupPolicyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IIdentityProviderBaseParametersInternal)__identityProviderBaseParameters).SignupPolicyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IIdentityProviderBaseParametersInternal)__identityProviderBaseParameters).SignupPolicyName = value ?? null; }

        /// <summary>Identity Provider Type identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Api.Support.IdentityProviderType? Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IIdentityProviderBaseParametersInternal)__identityProviderBaseParameters).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IIdentityProviderBaseParametersInternal)__identityProviderBaseParameters).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Api.Support.IdentityProviderType)""); }

        /// <summary>Creates an new <see cref="IdentityProviderContractProperties" /> instance.</summary>
        public IdentityProviderContractProperties()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__identityProviderBaseParameters), __identityProviderBaseParameters);
            await eventListener.AssertObjectIsValid(nameof(__identityProviderBaseParameters), __identityProviderBaseParameters);
        }
    }
    /// The external Identity Providers like Facebook, Google, Microsoft, Twitter or Azure Active Directory which can be used
    /// to enable access to the API Management service developer portal for all users.
    public partial interface IIdentityProviderContractProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IIdentityProviderBaseParameters
    {
        /// <summary>
        /// Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for Google
        /// login, App ID for Microsoft.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for Google login, App ID for Microsoft.",
        SerializedName = @"clientId",
        PossibleTypes = new [] { typeof(string) })]
        string ClientId { get; set; }
        /// <summary>
        /// Client secret of the Application in external Identity Provider, used to authenticate login request. For example, it is
        /// App Secret for Facebook login, API Key for Google login, Public Key for Microsoft. This property will not be filled on
        /// 'GET' operations! Use '/listSecrets' POST request to get the value.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Client secret of the Application in external Identity Provider, used to authenticate login request. For example, it is App Secret for Facebook login, API Key for Google login, Public Key for Microsoft. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.",
        SerializedName = @"clientSecret",
        PossibleTypes = new [] { typeof(string) })]
        string ClientSecret { get; set; }

    }
    /// The external Identity Providers like Facebook, Google, Microsoft, Twitter or Azure Active Directory which can be used
    /// to enable access to the API Management service developer portal for all users.
    internal partial interface IIdentityProviderContractPropertiesInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IIdentityProviderBaseParametersInternal
    {
        /// <summary>
        /// Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for Google
        /// login, App ID for Microsoft.
        /// </summary>
        string ClientId { get; set; }
        /// <summary>
        /// Client secret of the Application in external Identity Provider, used to authenticate login request. For example, it is
        /// App Secret for Facebook login, API Key for Google login, Public Key for Microsoft. This property will not be filled on
        /// 'GET' operations! Use '/listSecrets' POST request to get the value.
        /// </summary>
        string ClientSecret { get; set; }

    }
}