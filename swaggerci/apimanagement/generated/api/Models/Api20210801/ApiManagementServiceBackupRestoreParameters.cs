// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Extensions;

    /// <summary>
    /// Parameters supplied to the Backup/Restore of an API Management service operation.
    /// </summary>
    public partial class ApiManagementServiceBackupRestoreParameters :
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiManagementServiceBackupRestoreParameters,
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiManagementServiceBackupRestoreParametersInternal
    {

        /// <summary>Backing field for <see cref="AccessKey" /> property.</summary>
        private string _accessKey;

        /// <summary>
        /// Storage account access key. Required only if `accessType` is set to `AccessKey`.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public string AccessKey { get => this._accessKey; set => this._accessKey = value; }

        /// <summary>Backing field for <see cref="AccessType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Api.Support.AccessType? _accessType;

        /// <summary>The type of access to be used for the storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Api.Support.AccessType? AccessType { get => this._accessType; set => this._accessType = value; }

        /// <summary>Backing field for <see cref="BackupName" /> property.</summary>
        private string _backupName;

        /// <summary>The name of the backup file to create/retrieve.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public string BackupName { get => this._backupName; set => this._backupName = value; }

        /// <summary>Backing field for <see cref="ClientId" /> property.</summary>
        private string _clientId;

        /// <summary>
        /// The Client ID of user assigned managed identity. Required only if `accessType` is set to `UserAssignedManagedIdentity`.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public string ClientId { get => this._clientId; set => this._clientId = value; }

        /// <summary>Backing field for <see cref="ContainerName" /> property.</summary>
        private string _containerName;

        /// <summary>The name of the blob container (used to place/retrieve the backup).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public string ContainerName { get => this._containerName; set => this._containerName = value; }

        /// <summary>Backing field for <see cref="StorageAccount" /> property.</summary>
        private string _storageAccount;

        /// <summary>The name of the Azure storage account (used to place/retrieve the backup).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public string StorageAccount { get => this._storageAccount; set => this._storageAccount = value; }

        /// <summary>
        /// Creates an new <see cref="ApiManagementServiceBackupRestoreParameters" /> instance.
        /// </summary>
        public ApiManagementServiceBackupRestoreParameters()
        {

        }
    }
    /// Parameters supplied to the Backup/Restore of an API Management service operation.
    public partial interface IApiManagementServiceBackupRestoreParameters :
        Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Storage account access key. Required only if `accessType` is set to `AccessKey`.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Storage account access key. Required only if `accessType` is set to `AccessKey`.",
        SerializedName = @"accessKey",
        PossibleTypes = new [] { typeof(string) })]
        string AccessKey { get; set; }
        /// <summary>The type of access to be used for the storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of access to be used for the storage account.",
        SerializedName = @"accessType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Api.Support.AccessType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Api.Support.AccessType? AccessType { get; set; }
        /// <summary>The name of the backup file to create/retrieve.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The name of the backup file to create/retrieve.",
        SerializedName = @"backupName",
        PossibleTypes = new [] { typeof(string) })]
        string BackupName { get; set; }
        /// <summary>
        /// The Client ID of user assigned managed identity. Required only if `accessType` is set to `UserAssignedManagedIdentity`.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Client ID of user assigned managed identity. Required only if `accessType` is set to `UserAssignedManagedIdentity`.",
        SerializedName = @"clientId",
        PossibleTypes = new [] { typeof(string) })]
        string ClientId { get; set; }
        /// <summary>The name of the blob container (used to place/retrieve the backup).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The name of the blob container (used to place/retrieve the backup).",
        SerializedName = @"containerName",
        PossibleTypes = new [] { typeof(string) })]
        string ContainerName { get; set; }
        /// <summary>The name of the Azure storage account (used to place/retrieve the backup).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The name of the Azure storage account (used to place/retrieve the backup).",
        SerializedName = @"storageAccount",
        PossibleTypes = new [] { typeof(string) })]
        string StorageAccount { get; set; }

    }
    /// Parameters supplied to the Backup/Restore of an API Management service operation.
    internal partial interface IApiManagementServiceBackupRestoreParametersInternal

    {
        /// <summary>
        /// Storage account access key. Required only if `accessType` is set to `AccessKey`.
        /// </summary>
        string AccessKey { get; set; }
        /// <summary>The type of access to be used for the storage account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Support.AccessType? AccessType { get; set; }
        /// <summary>The name of the backup file to create/retrieve.</summary>
        string BackupName { get; set; }
        /// <summary>
        /// The Client ID of user assigned managed identity. Required only if `accessType` is set to `UserAssignedManagedIdentity`.
        /// </summary>
        string ClientId { get; set; }
        /// <summary>The name of the blob container (used to place/retrieve the backup).</summary>
        string ContainerName { get; set; }
        /// <summary>The name of the Azure storage account (used to place/retrieve the backup).</summary>
        string StorageAccount { get; set; }

    }
}