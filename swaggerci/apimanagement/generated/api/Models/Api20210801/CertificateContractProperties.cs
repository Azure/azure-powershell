// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Extensions;

    /// <summary>Properties of the Certificate contract.</summary>
    public partial class CertificateContractProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.ICertificateContractProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.ICertificateContractPropertiesInternal
    {

        /// <summary>Backing field for <see cref="ExpirationDate" /> property.</summary>
        private global::System.DateTime _expirationDate;

        /// <summary>
        /// Expiration date of the certificate. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by
        /// the ISO 8601 standard.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public global::System.DateTime ExpirationDate { get => this._expirationDate; set => this._expirationDate = value; }

        /// <summary>Backing field for <see cref="KeyVault" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IKeyVaultContractProperties _keyVault;

        /// <summary>KeyVault location details of the certificate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IKeyVaultContractProperties KeyVault { get => (this._keyVault = this._keyVault ?? new Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.KeyVaultContractProperties()); set => this._keyVault = value; }

        /// <summary>
        /// Null for SystemAssignedIdentity or Client Id for UserAssignedIdentity , which will be used to access key vault secret.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string KeyVaultIdentityClientId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IKeyVaultContractCreatePropertiesInternal)KeyVault).IdentityClientId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IKeyVaultContractCreatePropertiesInternal)KeyVault).IdentityClientId = value ?? null; }

        /// <summary>
        /// Key vault secret identifier for fetching secret. Providing a versioned secret will prevent auto-refresh. This requires
        /// API Management service to be configured with aka.ms/apimmsi
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string KeyVaultSecretIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IKeyVaultContractCreatePropertiesInternal)KeyVault).SecretIdentifier; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IKeyVaultContractCreatePropertiesInternal)KeyVault).SecretIdentifier = value ?? null; }

        /// <summary>Last status code for sync and refresh of secret from key vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string LastStatusCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IKeyVaultContractPropertiesInternal)KeyVault).LastStatusCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IKeyVaultContractPropertiesInternal)KeyVault).LastStatusCode = value ?? null; }

        /// <summary>Details of the error else empty.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string LastStatusMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IKeyVaultContractPropertiesInternal)KeyVault).LastStatusMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IKeyVaultContractPropertiesInternal)KeyVault).LastStatusMessage = value ?? null; }

        /// <summary>
        /// Last time secret was accessed. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO
        /// 8601 standard.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public global::System.DateTime? LastStatusTimeStampUtc { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IKeyVaultContractPropertiesInternal)KeyVault).LastStatusTimeStampUtc; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IKeyVaultContractPropertiesInternal)KeyVault).LastStatusTimeStampUtc = value ?? default(global::System.DateTime); }

        /// <summary>Internal Acessors for KeyVault</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IKeyVaultContractProperties Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.ICertificateContractPropertiesInternal.KeyVault { get => (this._keyVault = this._keyVault ?? new Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.KeyVaultContractProperties()); set { {_keyVault = value;} } }

        /// <summary>Internal Acessors for KeyVaultLastStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IKeyVaultLastAccessStatusContractProperties Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.ICertificateContractPropertiesInternal.KeyVaultLastStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IKeyVaultContractPropertiesInternal)KeyVault).LastStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IKeyVaultContractPropertiesInternal)KeyVault).LastStatus = value; }

        /// <summary>Backing field for <see cref="Subject" /> property.</summary>
        private string _subject;

        /// <summary>Subject attribute of the certificate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public string Subject { get => this._subject; set => this._subject = value; }

        /// <summary>Backing field for <see cref="Thumbprint" /> property.</summary>
        private string _thumbprint;

        /// <summary>Thumbprint of the certificate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public string Thumbprint { get => this._thumbprint; set => this._thumbprint = value; }

        /// <summary>Creates an new <see cref="CertificateContractProperties" /> instance.</summary>
        public CertificateContractProperties()
        {

        }
    }
    /// Properties of the Certificate contract.
    public partial interface ICertificateContractProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Expiration date of the certificate. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by
        /// the ISO 8601 standard.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Expiration date of the certificate. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
        ",
        SerializedName = @"expirationDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime ExpirationDate { get; set; }
        /// <summary>
        /// Null for SystemAssignedIdentity or Client Id for UserAssignedIdentity , which will be used to access key vault secret.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Null for SystemAssignedIdentity or Client Id for UserAssignedIdentity , which will be used to access key vault secret.",
        SerializedName = @"identityClientId",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultIdentityClientId { get; set; }
        /// <summary>
        /// Key vault secret identifier for fetching secret. Providing a versioned secret will prevent auto-refresh. This requires
        /// API Management service to be configured with aka.ms/apimmsi
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Key vault secret identifier for fetching secret. Providing a versioned secret will prevent auto-refresh. This requires API Management service to be configured with aka.ms/apimmsi",
        SerializedName = @"secretIdentifier",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultSecretIdentifier { get; set; }
        /// <summary>Last status code for sync and refresh of secret from key vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Last status code for sync and refresh of secret from key vault.",
        SerializedName = @"code",
        PossibleTypes = new [] { typeof(string) })]
        string LastStatusCode { get; set; }
        /// <summary>Details of the error else empty.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Details of the error else empty.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string LastStatusMessage { get; set; }
        /// <summary>
        /// Last time secret was accessed. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO
        /// 8601 standard.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Last time secret was accessed. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
        ",
        SerializedName = @"timeStampUtc",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastStatusTimeStampUtc { get; set; }
        /// <summary>Subject attribute of the certificate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Subject attribute of the certificate.",
        SerializedName = @"subject",
        PossibleTypes = new [] { typeof(string) })]
        string Subject { get; set; }
        /// <summary>Thumbprint of the certificate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Thumbprint of the certificate.",
        SerializedName = @"thumbprint",
        PossibleTypes = new [] { typeof(string) })]
        string Thumbprint { get; set; }

    }
    /// Properties of the Certificate contract.
    internal partial interface ICertificateContractPropertiesInternal

    {
        /// <summary>
        /// Expiration date of the certificate. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by
        /// the ISO 8601 standard.
        /// </summary>
        global::System.DateTime ExpirationDate { get; set; }
        /// <summary>KeyVault location details of the certificate.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IKeyVaultContractProperties KeyVault { get; set; }
        /// <summary>
        /// Null for SystemAssignedIdentity or Client Id for UserAssignedIdentity , which will be used to access key vault secret.
        /// </summary>
        string KeyVaultIdentityClientId { get; set; }
        /// <summary>Last time sync and refresh status of secret from key vault.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IKeyVaultLastAccessStatusContractProperties KeyVaultLastStatus { get; set; }
        /// <summary>
        /// Key vault secret identifier for fetching secret. Providing a versioned secret will prevent auto-refresh. This requires
        /// API Management service to be configured with aka.ms/apimmsi
        /// </summary>
        string KeyVaultSecretIdentifier { get; set; }
        /// <summary>Last status code for sync and refresh of secret from key vault.</summary>
        string LastStatusCode { get; set; }
        /// <summary>Details of the error else empty.</summary>
        string LastStatusMessage { get; set; }
        /// <summary>
        /// Last time secret was accessed. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO
        /// 8601 standard.
        /// </summary>
        global::System.DateTime? LastStatusTimeStampUtc { get; set; }
        /// <summary>Subject attribute of the certificate.</summary>
        string Subject { get; set; }
        /// <summary>Thumbprint of the certificate.</summary>
        string Thumbprint { get; set; }

    }
}