// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Extensions;

    /// <summary>API Create or Update Parameters.</summary>
    public partial class ApiCreateOrUpdateParameter :
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiCreateOrUpdateParameter,
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiCreateOrUpdateParameterInternal
    {

        /// <summary>
        /// Describes the revision of the API. If no value is provided, default revision 1 is created
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string ApiRevision { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).ApiRevision; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).ApiRevision = value ?? null; }

        /// <summary>Description of the API Revision.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string ApiRevisionDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).ApiRevisionDescription; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).ApiRevisionDescription = value ?? null; }

        /// <summary>Type of API.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Api.Support.ApiType? ApiType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).ApiType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).ApiType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Api.Support.ApiType)""); }

        /// <summary>Indicates the version identifier of the API if the API is versioned</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string ApiVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).ApiVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).ApiVersion = value ?? null; }

        /// <summary>Description of the API Version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string ApiVersionDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).ApiVersionDescription; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).ApiVersionDescription = value ?? null; }

        /// <summary>Description of API Version Set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string ApiVersionSetDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiContractPropertiesInternal)Property).ApiVersionSetDescription; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiContractPropertiesInternal)Property).ApiVersionSetDescription = value ?? null; }

        /// <summary>A resource identifier for the related ApiVersionSet.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string ApiVersionSetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).ApiVersionSetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).ApiVersionSetId = value ?? null; }

        /// <summary>The display Name of the API Version Set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string ApiVersionSetName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiContractPropertiesInternal)Property).ApiVersionSetName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiContractPropertiesInternal)Property).ApiVersionSetName = value ?? null; }

        /// <summary>
        /// Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string ApiVersionSetVersionHeaderName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiContractPropertiesInternal)Property).ApiVersionSetVersionHeaderName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiContractPropertiesInternal)Property).ApiVersionSetVersionHeaderName = value ?? null; }

        /// <summary>
        /// Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string ApiVersionSetVersionQueryName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiContractPropertiesInternal)Property).ApiVersionSetVersionQueryName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiContractPropertiesInternal)Property).ApiVersionSetVersionQueryName = value ?? null; }

        /// <summary>
        /// An value that determines where the API Version identifier will be located in a HTTP request.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string ApiVersionSetVersioningScheme { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiContractPropertiesInternal)Property).ApiVersionSetVersioningScheme; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiContractPropertiesInternal)Property).ApiVersionSetVersioningScheme = value ?? null; }

        /// <summary>
        /// The email address of the contact person/organization. MUST be in the format of an email address
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string ContactEmail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).ContactEmail; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).ContactEmail = value ?? null; }

        /// <summary>The identifying name of the contact person/organization</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string ContactName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).ContactName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).ContactName = value ?? null; }

        /// <summary>The URL pointing to the contact information. MUST be in the format of a URL</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string ContactUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).ContactUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).ContactUrl = value ?? null; }

        /// <summary>Description of the API. May include HTML formatting tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string Description { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).Description = value ?? null; }

        /// <summary>API name. Must be 1 to 300 characters long.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string DisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiContractPropertiesInternal)Property).DisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiContractPropertiesInternal)Property).DisplayName = value ?? null; }

        /// <summary>Format of the Content in which the API is getting imported.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Api.Support.ContentFormat? Format { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiCreateOrUpdatePropertiesInternal)Property).Format; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiCreateOrUpdatePropertiesInternal)Property).Format = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Api.Support.ContentFormat)""); }

        /// <summary>
        /// Identifier for existing API Version Set. Omit this value to create a new Version Set.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiContractPropertiesInternal)Property).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiContractPropertiesInternal)Property).Id = value ?? null; }

        /// <summary>Indicates if API revision is current api revision.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public bool? IsCurrent { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).IsCurrent; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).IsCurrent = value ?? default(bool); }

        /// <summary>Indicates if API revision is accessible via the gateway.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public bool? IsOnline { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).IsOnline; }

        /// <summary>The license name used for the API</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string LicenseName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).LicenseName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).LicenseName = value ?? null; }

        /// <summary>A URL to the license used for the API. MUST be in the format of a URL</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string LicenseUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).LicenseUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).LicenseUrl = value ?? null; }

        /// <summary>Internal Acessors for ApiVersionSet</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiVersionSetContractDetails Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiCreateOrUpdateParameterInternal.ApiVersionSet { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiContractPropertiesInternal)Property).ApiVersionSet; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiContractPropertiesInternal)Property).ApiVersionSet = value; }

        /// <summary>Internal Acessors for AuthenticationSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IAuthenticationSettingsContract Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiCreateOrUpdateParameterInternal.AuthenticationSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).AuthenticationSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).AuthenticationSetting = value; }

        /// <summary>Internal Acessors for AuthenticationSettingOAuth2</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IOAuth2AuthenticationSettingsContract Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiCreateOrUpdateParameterInternal.AuthenticationSettingOAuth2 { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).AuthenticationSettingOAuth2; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).AuthenticationSettingOAuth2 = value; }

        /// <summary>Internal Acessors for AuthenticationSettingOpenid</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IOpenIdAuthenticationSettingsContract Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiCreateOrUpdateParameterInternal.AuthenticationSettingOpenid { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).AuthenticationSettingOpenid; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).AuthenticationSettingOpenid = value; }

        /// <summary>Internal Acessors for Contact</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiContactInformation Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiCreateOrUpdateParameterInternal.Contact { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).Contact; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).Contact = value; }

        /// <summary>Internal Acessors for IsOnline</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiCreateOrUpdateParameterInternal.IsOnline { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).IsOnline; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).IsOnline = value; }

        /// <summary>Internal Acessors for License</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiLicenseInformation Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiCreateOrUpdateParameterInternal.License { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).License; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).License = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiCreateOrUpdateProperties Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiCreateOrUpdateParameterInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.ApiCreateOrUpdateProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for SubscriptionKeyParameterName</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.ISubscriptionKeyParameterNamesContract Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiCreateOrUpdateParameterInternal.SubscriptionKeyParameterName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).SubscriptionKeyParameterName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).SubscriptionKeyParameterName = value; }

        /// <summary>Internal Acessors for WsdlSelector</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiCreateOrUpdatePropertiesWsdlSelector Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiCreateOrUpdateParameterInternal.WsdlSelector { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiCreateOrUpdatePropertiesInternal)Property).WsdlSelector; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiCreateOrUpdatePropertiesInternal)Property).WsdlSelector = value; }

        /// <summary>OAuth authorization server identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string OAuth2AuthorizationServerId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).OAuth2AuthorizationServerId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).OAuth2AuthorizationServerId = value ?? null; }

        /// <summary>operations scope.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string OAuth2Scope { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).OAuth2Scope; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).OAuth2Scope = value ?? null; }

        /// <summary>How to send token to the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Api.Support.BearerTokenSendingMethods[] OpenidBearerTokenSendingMethod { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).OpenidBearerTokenSendingMethod; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).OpenidBearerTokenSendingMethod = value ?? null /* arrayOf */; }

        /// <summary>OAuth authorization server identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string OpenidProviderId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).OpenidProviderId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).OpenidProviderId = value ?? null; }

        /// <summary>
        /// Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It
        /// is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this
        /// API.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string Path { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiContractPropertiesInternal)Property).Path; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiContractPropertiesInternal)Property).Path = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiCreateOrUpdateProperties _property;

        /// <summary>API entity create of update properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiCreateOrUpdateProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.ApiCreateOrUpdateProperties()); set => this._property = value; }

        /// <summary>Describes on which protocols the operations in this API can be invoked.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Api.Support.Protocol[] Protocol { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiContractPropertiesInternal)Property).Protocol; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiContractPropertiesInternal)Property).Protocol = value ?? null /* arrayOf */; }

        /// <summary>
        /// Absolute URL of the backend service implementing this API. Cannot be more than 2000 characters long.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string ServiceUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiContractPropertiesInternal)Property).ServiceUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiContractPropertiesInternal)Property).ServiceUrl = value ?? null; }

        /// <summary>
        /// Type of API to create.
        /// * `http` creates a REST API
        /// * `soap` creates a SOAP pass-through API
        /// * `websocket` creates websocket API
        /// * `graphql` creates GraphQL API.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Api.Support.SoapApiType? SoapApiType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiCreateOrUpdatePropertiesInternal)Property).SoapApiType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiCreateOrUpdatePropertiesInternal)Property).SoapApiType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Api.Support.SoapApiType)""); }

        /// <summary>API identifier of the source API.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string SourceApiId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiContractPropertiesInternal)Property).SourceApiId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiContractPropertiesInternal)Property).SourceApiId = value ?? null; }

        /// <summary>Subscription key header name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string SubscriptionKeyParameterNameHeader { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).SubscriptionKeyParameterNameHeader; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).SubscriptionKeyParameterNameHeader = value ?? null; }

        /// <summary>Subscription key query string parameter name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string SubscriptionKeyParameterNameQuery { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).SubscriptionKeyParameterNameQuery; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).SubscriptionKeyParameterNameQuery = value ?? null; }

        /// <summary>
        /// Specifies whether an API or Product subscription is required for accessing the API.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public bool? SubscriptionRequired { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).SubscriptionRequired; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).SubscriptionRequired = value ?? default(bool); }

        /// <summary>A URL to the Terms of Service for the API. MUST be in the format of a URL.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string TermsOfServiceUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).TermsOfServiceUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiEntityBaseContractInternal)Property).TermsOfServiceUrl = value ?? null; }

        /// <summary>Content value when Importing an API.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string Value { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiCreateOrUpdatePropertiesInternal)Property).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiCreateOrUpdatePropertiesInternal)Property).Value = value ?? null; }

        /// <summary>Name of endpoint(port) to import from WSDL</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string WsdlSelectorWsdlEndpointName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiCreateOrUpdatePropertiesInternal)Property).WsdlSelectorWsdlEndpointName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiCreateOrUpdatePropertiesInternal)Property).WsdlSelectorWsdlEndpointName = value ?? null; }

        /// <summary>Name of service to import from WSDL</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string WsdlSelectorWsdlServiceName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiCreateOrUpdatePropertiesInternal)Property).WsdlSelectorWsdlServiceName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiCreateOrUpdatePropertiesInternal)Property).WsdlSelectorWsdlServiceName = value ?? null; }

        /// <summary>Creates an new <see cref="ApiCreateOrUpdateParameter" /> instance.</summary>
        public ApiCreateOrUpdateParameter()
        {

        }
    }
    /// API Create or Update Parameters.
    public partial interface IApiCreateOrUpdateParameter :
        Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Describes the revision of the API. If no value is provided, default revision 1 is created
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Describes the revision of the API. If no value is provided, default revision 1 is created",
        SerializedName = @"apiRevision",
        PossibleTypes = new [] { typeof(string) })]
        string ApiRevision { get; set; }
        /// <summary>Description of the API Revision.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Description of the API Revision.",
        SerializedName = @"apiRevisionDescription",
        PossibleTypes = new [] { typeof(string) })]
        string ApiRevisionDescription { get; set; }
        /// <summary>Type of API.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of API.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Api.Support.ApiType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Api.Support.ApiType? ApiType { get; set; }
        /// <summary>Indicates the version identifier of the API if the API is versioned</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates the version identifier of the API if the API is versioned",
        SerializedName = @"apiVersion",
        PossibleTypes = new [] { typeof(string) })]
        string ApiVersion { get; set; }
        /// <summary>Description of the API Version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Description of the API Version.",
        SerializedName = @"apiVersionDescription",
        PossibleTypes = new [] { typeof(string) })]
        string ApiVersionDescription { get; set; }
        /// <summary>Description of API Version Set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Description of API Version Set.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string ApiVersionSetDescription { get; set; }
        /// <summary>A resource identifier for the related ApiVersionSet.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A resource identifier for the related ApiVersionSet.",
        SerializedName = @"apiVersionSetId",
        PossibleTypes = new [] { typeof(string) })]
        string ApiVersionSetId { get; set; }
        /// <summary>The display Name of the API Version Set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The display Name of the API Version Set.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string ApiVersionSetName { get; set; }
        /// <summary>
        /// Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.",
        SerializedName = @"versionHeaderName",
        PossibleTypes = new [] { typeof(string) })]
        string ApiVersionSetVersionHeaderName { get; set; }
        /// <summary>
        /// Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of query parameter that indicates the API Version if versioningScheme is set to `query`.",
        SerializedName = @"versionQueryName",
        PossibleTypes = new [] { typeof(string) })]
        string ApiVersionSetVersionQueryName { get; set; }
        /// <summary>
        /// An value that determines where the API Version identifier will be located in a HTTP request.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"An value that determines where the API Version identifier will be located in a HTTP request.",
        SerializedName = @"versioningScheme",
        PossibleTypes = new [] { typeof(string) })]
        string ApiVersionSetVersioningScheme { get; set; }
        /// <summary>
        /// The email address of the contact person/organization. MUST be in the format of an email address
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The email address of the contact person/organization. MUST be in the format of an email address",
        SerializedName = @"email",
        PossibleTypes = new [] { typeof(string) })]
        string ContactEmail { get; set; }
        /// <summary>The identifying name of the contact person/organization</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identifying name of the contact person/organization",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string ContactName { get; set; }
        /// <summary>The URL pointing to the contact information. MUST be in the format of a URL</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The URL pointing to the contact information. MUST be in the format of a URL",
        SerializedName = @"url",
        PossibleTypes = new [] { typeof(string) })]
        string ContactUrl { get; set; }
        /// <summary>Description of the API. May include HTML formatting tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Description of the API. May include HTML formatting tags.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>API name. Must be 1 to 300 characters long.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"API name. Must be 1 to 300 characters long.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>Format of the Content in which the API is getting imported.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Format of the Content in which the API is getting imported.",
        SerializedName = @"format",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Api.Support.ContentFormat) })]
        Microsoft.Azure.PowerShell.Cmdlets.Api.Support.ContentFormat? Format { get; set; }
        /// <summary>
        /// Identifier for existing API Version Set. Omit this value to create a new Version Set.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Identifier for existing API Version Set. Omit this value to create a new Version Set.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get; set; }
        /// <summary>Indicates if API revision is current api revision.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates if API revision is current api revision.",
        SerializedName = @"isCurrent",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsCurrent { get; set; }
        /// <summary>Indicates if API revision is accessible via the gateway.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Indicates if API revision is accessible via the gateway.",
        SerializedName = @"isOnline",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsOnline { get;  }
        /// <summary>The license name used for the API</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The license name used for the API",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string LicenseName { get; set; }
        /// <summary>A URL to the license used for the API. MUST be in the format of a URL</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A URL to the license used for the API. MUST be in the format of a URL",
        SerializedName = @"url",
        PossibleTypes = new [] { typeof(string) })]
        string LicenseUrl { get; set; }
        /// <summary>OAuth authorization server identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"OAuth authorization server identifier.",
        SerializedName = @"authorizationServerId",
        PossibleTypes = new [] { typeof(string) })]
        string OAuth2AuthorizationServerId { get; set; }
        /// <summary>operations scope.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"operations scope.",
        SerializedName = @"scope",
        PossibleTypes = new [] { typeof(string) })]
        string OAuth2Scope { get; set; }
        /// <summary>How to send token to the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"How to send token to the server.",
        SerializedName = @"bearerTokenSendingMethods",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Api.Support.BearerTokenSendingMethods) })]
        Microsoft.Azure.PowerShell.Cmdlets.Api.Support.BearerTokenSendingMethods[] OpenidBearerTokenSendingMethod { get; set; }
        /// <summary>OAuth authorization server identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"OAuth authorization server identifier.",
        SerializedName = @"openidProviderId",
        PossibleTypes = new [] { typeof(string) })]
        string OpenidProviderId { get; set; }
        /// <summary>
        /// Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It
        /// is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this
        /// API.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API.",
        SerializedName = @"path",
        PossibleTypes = new [] { typeof(string) })]
        string Path { get; set; }
        /// <summary>Describes on which protocols the operations in this API can be invoked.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Describes on which protocols the operations in this API can be invoked.",
        SerializedName = @"protocols",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Api.Support.Protocol) })]
        Microsoft.Azure.PowerShell.Cmdlets.Api.Support.Protocol[] Protocol { get; set; }
        /// <summary>
        /// Absolute URL of the backend service implementing this API. Cannot be more than 2000 characters long.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Absolute URL of the backend service implementing this API. Cannot be more than 2000 characters long.",
        SerializedName = @"serviceUrl",
        PossibleTypes = new [] { typeof(string) })]
        string ServiceUrl { get; set; }
        /// <summary>
        /// Type of API to create.
        /// * `http` creates a REST API
        /// * `soap` creates a SOAP pass-through API
        /// * `websocket` creates websocket API
        /// * `graphql` creates GraphQL API.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of API to create.
         * `http` creates a REST API
         * `soap` creates a SOAP pass-through API
         * `websocket` creates websocket API
         * `graphql` creates GraphQL API.",
        SerializedName = @"apiType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Api.Support.SoapApiType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Api.Support.SoapApiType? SoapApiType { get; set; }
        /// <summary>API identifier of the source API.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"API identifier of the source API.",
        SerializedName = @"sourceApiId",
        PossibleTypes = new [] { typeof(string) })]
        string SourceApiId { get; set; }
        /// <summary>Subscription key header name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Subscription key header name.",
        SerializedName = @"header",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionKeyParameterNameHeader { get; set; }
        /// <summary>Subscription key query string parameter name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Subscription key query string parameter name.",
        SerializedName = @"query",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionKeyParameterNameQuery { get; set; }
        /// <summary>
        /// Specifies whether an API or Product subscription is required for accessing the API.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies whether an API or Product subscription is required for accessing the API.",
        SerializedName = @"subscriptionRequired",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SubscriptionRequired { get; set; }
        /// <summary>A URL to the Terms of Service for the API. MUST be in the format of a URL.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @" A URL to the Terms of Service for the API. MUST be in the format of a URL.",
        SerializedName = @"termsOfServiceUrl",
        PossibleTypes = new [] { typeof(string) })]
        string TermsOfServiceUrl { get; set; }
        /// <summary>Content value when Importing an API.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Content value when Importing an API.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(string) })]
        string Value { get; set; }
        /// <summary>Name of endpoint(port) to import from WSDL</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of endpoint(port) to import from WSDL",
        SerializedName = @"wsdlEndpointName",
        PossibleTypes = new [] { typeof(string) })]
        string WsdlSelectorWsdlEndpointName { get; set; }
        /// <summary>Name of service to import from WSDL</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of service to import from WSDL",
        SerializedName = @"wsdlServiceName",
        PossibleTypes = new [] { typeof(string) })]
        string WsdlSelectorWsdlServiceName { get; set; }

    }
    /// API Create or Update Parameters.
    internal partial interface IApiCreateOrUpdateParameterInternal

    {
        /// <summary>
        /// Describes the revision of the API. If no value is provided, default revision 1 is created
        /// </summary>
        string ApiRevision { get; set; }
        /// <summary>Description of the API Revision.</summary>
        string ApiRevisionDescription { get; set; }
        /// <summary>Type of API.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Support.ApiType? ApiType { get; set; }
        /// <summary>Indicates the version identifier of the API if the API is versioned</summary>
        string ApiVersion { get; set; }
        /// <summary>Description of the API Version.</summary>
        string ApiVersionDescription { get; set; }
        /// <summary>Version set details</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiVersionSetContractDetails ApiVersionSet { get; set; }
        /// <summary>Description of API Version Set.</summary>
        string ApiVersionSetDescription { get; set; }
        /// <summary>A resource identifier for the related ApiVersionSet.</summary>
        string ApiVersionSetId { get; set; }
        /// <summary>The display Name of the API Version Set.</summary>
        string ApiVersionSetName { get; set; }
        /// <summary>
        /// Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.
        /// </summary>
        string ApiVersionSetVersionHeaderName { get; set; }
        /// <summary>
        /// Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
        /// </summary>
        string ApiVersionSetVersionQueryName { get; set; }
        /// <summary>
        /// An value that determines where the API Version identifier will be located in a HTTP request.
        /// </summary>
        string ApiVersionSetVersioningScheme { get; set; }
        /// <summary>Collection of authentication settings included into this API.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IAuthenticationSettingsContract AuthenticationSetting { get; set; }
        /// <summary>OAuth2 Authentication settings</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IOAuth2AuthenticationSettingsContract AuthenticationSettingOAuth2 { get; set; }
        /// <summary>OpenID Connect Authentication Settings</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IOpenIdAuthenticationSettingsContract AuthenticationSettingOpenid { get; set; }
        /// <summary>Contact information for the API.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiContactInformation Contact { get; set; }
        /// <summary>
        /// The email address of the contact person/organization. MUST be in the format of an email address
        /// </summary>
        string ContactEmail { get; set; }
        /// <summary>The identifying name of the contact person/organization</summary>
        string ContactName { get; set; }
        /// <summary>The URL pointing to the contact information. MUST be in the format of a URL</summary>
        string ContactUrl { get; set; }
        /// <summary>Description of the API. May include HTML formatting tags.</summary>
        string Description { get; set; }
        /// <summary>API name. Must be 1 to 300 characters long.</summary>
        string DisplayName { get; set; }
        /// <summary>Format of the Content in which the API is getting imported.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Support.ContentFormat? Format { get; set; }
        /// <summary>
        /// Identifier for existing API Version Set. Omit this value to create a new Version Set.
        /// </summary>
        string Id { get; set; }
        /// <summary>Indicates if API revision is current api revision.</summary>
        bool? IsCurrent { get; set; }
        /// <summary>Indicates if API revision is accessible via the gateway.</summary>
        bool? IsOnline { get; set; }
        /// <summary>License information for the API.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiLicenseInformation License { get; set; }
        /// <summary>The license name used for the API</summary>
        string LicenseName { get; set; }
        /// <summary>A URL to the license used for the API. MUST be in the format of a URL</summary>
        string LicenseUrl { get; set; }
        /// <summary>OAuth authorization server identifier.</summary>
        string OAuth2AuthorizationServerId { get; set; }
        /// <summary>operations scope.</summary>
        string OAuth2Scope { get; set; }
        /// <summary>How to send token to the server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Support.BearerTokenSendingMethods[] OpenidBearerTokenSendingMethod { get; set; }
        /// <summary>OAuth authorization server identifier.</summary>
        string OpenidProviderId { get; set; }
        /// <summary>
        /// Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It
        /// is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this
        /// API.
        /// </summary>
        string Path { get; set; }
        /// <summary>API entity create of update properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiCreateOrUpdateProperties Property { get; set; }
        /// <summary>Describes on which protocols the operations in this API can be invoked.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Support.Protocol[] Protocol { get; set; }
        /// <summary>
        /// Absolute URL of the backend service implementing this API. Cannot be more than 2000 characters long.
        /// </summary>
        string ServiceUrl { get; set; }
        /// <summary>
        /// Type of API to create.
        /// * `http` creates a REST API
        /// * `soap` creates a SOAP pass-through API
        /// * `websocket` creates websocket API
        /// * `graphql` creates GraphQL API.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Support.SoapApiType? SoapApiType { get; set; }
        /// <summary>API identifier of the source API.</summary>
        string SourceApiId { get; set; }
        /// <summary>Protocols over which API is made available.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.ISubscriptionKeyParameterNamesContract SubscriptionKeyParameterName { get; set; }
        /// <summary>Subscription key header name.</summary>
        string SubscriptionKeyParameterNameHeader { get; set; }
        /// <summary>Subscription key query string parameter name.</summary>
        string SubscriptionKeyParameterNameQuery { get; set; }
        /// <summary>
        /// Specifies whether an API or Product subscription is required for accessing the API.
        /// </summary>
        bool? SubscriptionRequired { get; set; }
        /// <summary>A URL to the Terms of Service for the API. MUST be in the format of a URL.</summary>
        string TermsOfServiceUrl { get; set; }
        /// <summary>Content value when Importing an API.</summary>
        string Value { get; set; }
        /// <summary>Criteria to limit import of WSDL to a subset of the document.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IApiCreateOrUpdatePropertiesWsdlSelector WsdlSelector { get; set; }
        /// <summary>Name of endpoint(port) to import from WSDL</summary>
        string WsdlSelectorWsdlEndpointName { get; set; }
        /// <summary>Name of service to import from WSDL</summary>
        string WsdlSelectorWsdlServiceName { get; set; }

    }
}