// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Extensions;

    /// <summary>Identity Provider details.</summary>
    public partial class IdentityProviderCreateContract :
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IIdentityProviderCreateContract,
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IIdentityProviderCreateContractInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResource" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.Resource();

        /// <summary>List of Allowed Tenants when configuring Azure Active Directory login.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string[] AllowedTenant { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IIdentityProviderBaseParametersInternal)Property).AllowedTenant; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IIdentityProviderBaseParametersInternal)Property).AllowedTenant = value ?? null /* arrayOf */; }

        /// <summary>OpenID Connect discovery endpoint hostname for AAD or AAD B2C.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string Authority { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IIdentityProviderBaseParametersInternal)Property).Authority; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IIdentityProviderBaseParametersInternal)Property).Authority = value ?? null; }

        /// <summary>
        /// Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for Google
        /// login, App ID for Microsoft.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string ClientId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IIdentityProviderCreateContractPropertiesInternal)Property).ClientId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IIdentityProviderCreateContractPropertiesInternal)Property).ClientId = value ?? null; }

        /// <summary>
        /// Client secret of the Application in external Identity Provider, used to authenticate login request. For example, it is
        /// App Secret for Facebook login, API Key for Google login, Public Key for Microsoft. This property will not be filled on
        /// 'GET' operations! Use '/listSecrets' POST request to get the value.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string ClientSecret { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IIdentityProviderCreateContractPropertiesInternal)Property).ClientSecret; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IIdentityProviderCreateContractPropertiesInternal)Property).ClientSecret = value ?? null; }

        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal)__resource).Id; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal)__resource).Type = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IIdentityProviderCreateContractProperties Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IIdentityProviderCreateContractInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IdentityProviderCreateContractProperties()); set { {_property = value;} } }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal)__resource).Name; }

        /// <summary>Password Reset Policy Name. Only applies to AAD B2C Identity Provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string PasswordResetPolicyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IIdentityProviderBaseParametersInternal)Property).PasswordResetPolicyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IIdentityProviderBaseParametersInternal)Property).PasswordResetPolicyName = value ?? null; }

        /// <summary>Profile Editing Policy Name. Only applies to AAD B2C Identity Provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string ProfileEditingPolicyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IIdentityProviderBaseParametersInternal)Property).ProfileEditingPolicyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IIdentityProviderBaseParametersInternal)Property).ProfileEditingPolicyName = value ?? null; }

        /// <summary>Identity Provider Type identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Api.Support.IdentityProviderType? PropertiesType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IIdentityProviderBaseParametersInternal)Property).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IIdentityProviderBaseParametersInternal)Property).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Api.Support.IdentityProviderType)""); }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IIdentityProviderCreateContractProperties _property;

        /// <summary>Identity Provider contract properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IIdentityProviderCreateContractProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IdentityProviderCreateContractProperties()); set => this._property = value; }

        /// <summary>Signin Policy Name. Only applies to AAD B2C Identity Provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string SigninPolicyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IIdentityProviderBaseParametersInternal)Property).SigninPolicyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IIdentityProviderBaseParametersInternal)Property).SigninPolicyName = value ?? null; }

        /// <summary>The TenantId to use instead of Common when logging into Active Directory</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string SigninTenant { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IIdentityProviderBaseParametersInternal)Property).SigninTenant; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IIdentityProviderBaseParametersInternal)Property).SigninTenant = value ?? null; }

        /// <summary>Signup Policy Name. Only applies to AAD B2C Identity Provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string SignupPolicyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IIdentityProviderBaseParametersInternal)Property).SignupPolicyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IIdentityProviderBaseParametersInternal)Property).SignupPolicyName = value ?? null; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal)__resource).Type; }

        /// <summary>Creates an new <see cref="IdentityProviderCreateContract" /> instance.</summary>
        public IdentityProviderCreateContract()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// Identity Provider details.
    public partial interface IIdentityProviderCreateContract :
        Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResource
    {
        /// <summary>List of Allowed Tenants when configuring Azure Active Directory login.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of Allowed Tenants when configuring Azure Active Directory login.",
        SerializedName = @"allowedTenants",
        PossibleTypes = new [] { typeof(string) })]
        string[] AllowedTenant { get; set; }
        /// <summary>OpenID Connect discovery endpoint hostname for AAD or AAD B2C.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"OpenID Connect discovery endpoint hostname for AAD or AAD B2C.",
        SerializedName = @"authority",
        PossibleTypes = new [] { typeof(string) })]
        string Authority { get; set; }
        /// <summary>
        /// Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for Google
        /// login, App ID for Microsoft.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for Google login, App ID for Microsoft.",
        SerializedName = @"clientId",
        PossibleTypes = new [] { typeof(string) })]
        string ClientId { get; set; }
        /// <summary>
        /// Client secret of the Application in external Identity Provider, used to authenticate login request. For example, it is
        /// App Secret for Facebook login, API Key for Google login, Public Key for Microsoft. This property will not be filled on
        /// 'GET' operations! Use '/listSecrets' POST request to get the value.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Client secret of the Application in external Identity Provider, used to authenticate login request. For example, it is App Secret for Facebook login, API Key for Google login, Public Key for Microsoft. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.",
        SerializedName = @"clientSecret",
        PossibleTypes = new [] { typeof(string) })]
        string ClientSecret { get; set; }
        /// <summary>Password Reset Policy Name. Only applies to AAD B2C Identity Provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Password Reset Policy Name. Only applies to AAD B2C Identity Provider.",
        SerializedName = @"passwordResetPolicyName",
        PossibleTypes = new [] { typeof(string) })]
        string PasswordResetPolicyName { get; set; }
        /// <summary>Profile Editing Policy Name. Only applies to AAD B2C Identity Provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Profile Editing Policy Name. Only applies to AAD B2C Identity Provider.",
        SerializedName = @"profileEditingPolicyName",
        PossibleTypes = new [] { typeof(string) })]
        string ProfileEditingPolicyName { get; set; }
        /// <summary>Identity Provider Type identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Identity Provider Type identifier.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Api.Support.IdentityProviderType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Api.Support.IdentityProviderType? PropertiesType { get; set; }
        /// <summary>Signin Policy Name. Only applies to AAD B2C Identity Provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Signin Policy Name. Only applies to AAD B2C Identity Provider.",
        SerializedName = @"signinPolicyName",
        PossibleTypes = new [] { typeof(string) })]
        string SigninPolicyName { get; set; }
        /// <summary>The TenantId to use instead of Common when logging into Active Directory</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The TenantId to use instead of Common when logging into Active Directory",
        SerializedName = @"signinTenant",
        PossibleTypes = new [] { typeof(string) })]
        string SigninTenant { get; set; }
        /// <summary>Signup Policy Name. Only applies to AAD B2C Identity Provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Signup Policy Name. Only applies to AAD B2C Identity Provider.",
        SerializedName = @"signupPolicyName",
        PossibleTypes = new [] { typeof(string) })]
        string SignupPolicyName { get; set; }

    }
    /// Identity Provider details.
    internal partial interface IIdentityProviderCreateContractInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal
    {
        /// <summary>List of Allowed Tenants when configuring Azure Active Directory login.</summary>
        string[] AllowedTenant { get; set; }
        /// <summary>OpenID Connect discovery endpoint hostname for AAD or AAD B2C.</summary>
        string Authority { get; set; }
        /// <summary>
        /// Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for Google
        /// login, App ID for Microsoft.
        /// </summary>
        string ClientId { get; set; }
        /// <summary>
        /// Client secret of the Application in external Identity Provider, used to authenticate login request. For example, it is
        /// App Secret for Facebook login, API Key for Google login, Public Key for Microsoft. This property will not be filled on
        /// 'GET' operations! Use '/listSecrets' POST request to get the value.
        /// </summary>
        string ClientSecret { get; set; }
        /// <summary>Password Reset Policy Name. Only applies to AAD B2C Identity Provider.</summary>
        string PasswordResetPolicyName { get; set; }
        /// <summary>Profile Editing Policy Name. Only applies to AAD B2C Identity Provider.</summary>
        string ProfileEditingPolicyName { get; set; }
        /// <summary>Identity Provider Type identifier.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Support.IdentityProviderType? PropertiesType { get; set; }
        /// <summary>Identity Provider contract properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IIdentityProviderCreateContractProperties Property { get; set; }
        /// <summary>Signin Policy Name. Only applies to AAD B2C Identity Provider.</summary>
        string SigninPolicyName { get; set; }
        /// <summary>The TenantId to use instead of Common when logging into Active Directory</summary>
        string SigninTenant { get; set; }
        /// <summary>Signup Policy Name. Only applies to AAD B2C Identity Provider.</summary>
        string SignupPolicyName { get; set; }

    }
}