// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Extensions;

    /// <summary>Result of Tenant Configuration Sync State.</summary>
    public partial class TenantConfigurationSyncStateContract :
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.ITenantConfigurationSyncStateContract,
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.ITenantConfigurationSyncStateContractInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResource" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.Resource();

        /// <summary>The name of Git branch.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string Branch { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.ITenantConfigurationSyncStateContractPropertiesInternal)Property).Branch; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.ITenantConfigurationSyncStateContractPropertiesInternal)Property).Branch = value ?? null; }

        /// <summary>The latest commit Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string CommitId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.ITenantConfigurationSyncStateContractPropertiesInternal)Property).CommitId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.ITenantConfigurationSyncStateContractPropertiesInternal)Property).CommitId = value ?? null; }

        /// <summary>
        /// The date of the latest configuration change. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified
        /// by the ISO 8601 standard.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public global::System.DateTime? ConfigurationChangeDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.ITenantConfigurationSyncStateContractPropertiesInternal)Property).ConfigurationChangeDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.ITenantConfigurationSyncStateContractPropertiesInternal)Property).ConfigurationChangeDate = value ?? default(global::System.DateTime); }

        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal)__resource).Id; }

        /// <summary>value indicating if last sync was save (true) or deploy (false) operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public bool? IsExport { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.ITenantConfigurationSyncStateContractPropertiesInternal)Property).IsExport; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.ITenantConfigurationSyncStateContractPropertiesInternal)Property).IsExport = value ?? default(bool); }

        /// <summary>value indicating whether Git configuration access is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public bool? IsGitEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.ITenantConfigurationSyncStateContractPropertiesInternal)Property).IsGitEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.ITenantConfigurationSyncStateContractPropertiesInternal)Property).IsGitEnabled = value ?? default(bool); }

        /// <summary>
        /// value indicating if last synchronization was later than the configuration change.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public bool? IsSynced { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.ITenantConfigurationSyncStateContractPropertiesInternal)Property).IsSynced; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.ITenantConfigurationSyncStateContractPropertiesInternal)Property).IsSynced = value ?? default(bool); }

        /// <summary>Most recent tenant configuration operation identifier</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string LastOperationId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.ITenantConfigurationSyncStateContractPropertiesInternal)Property).LastOperationId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.ITenantConfigurationSyncStateContractPropertiesInternal)Property).LastOperationId = value ?? null; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal)__resource).Type = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.ITenantConfigurationSyncStateContractProperties Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.ITenantConfigurationSyncStateContractInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.TenantConfigurationSyncStateContractProperties()); set { {_property = value;} } }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal)__resource).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.ITenantConfigurationSyncStateContractProperties _property;

        /// <summary>Properties returned Tenant Configuration Sync State check.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.ITenantConfigurationSyncStateContractProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.TenantConfigurationSyncStateContractProperties()); set => this._property = value; }

        /// <summary>
        /// The date of the latest synchronization. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified
        /// by the ISO 8601 standard.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public global::System.DateTime? SyncDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.ITenantConfigurationSyncStateContractPropertiesInternal)Property).SyncDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.ITenantConfigurationSyncStateContractPropertiesInternal)Property).SyncDate = value ?? default(global::System.DateTime); }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal)__resource).Type; }

        /// <summary>Creates an new <see cref="TenantConfigurationSyncStateContract" /> instance.</summary>
        public TenantConfigurationSyncStateContract()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// Result of Tenant Configuration Sync State.
    public partial interface ITenantConfigurationSyncStateContract :
        Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResource
    {
        /// <summary>The name of Git branch.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of Git branch.",
        SerializedName = @"branch",
        PossibleTypes = new [] { typeof(string) })]
        string Branch { get; set; }
        /// <summary>The latest commit Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The latest commit Id.",
        SerializedName = @"commitId",
        PossibleTypes = new [] { typeof(string) })]
        string CommitId { get; set; }
        /// <summary>
        /// The date of the latest configuration change. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified
        /// by the ISO 8601 standard.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The date of the latest configuration change. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
        ",
        SerializedName = @"configurationChangeDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ConfigurationChangeDate { get; set; }
        /// <summary>value indicating if last sync was save (true) or deploy (false) operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"value indicating if last sync was save (true) or deploy (false) operation.",
        SerializedName = @"isExport",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsExport { get; set; }
        /// <summary>value indicating whether Git configuration access is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"value indicating whether Git configuration access is enabled.",
        SerializedName = @"isGitEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsGitEnabled { get; set; }
        /// <summary>
        /// value indicating if last synchronization was later than the configuration change.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"value indicating if last synchronization was later than the configuration change.",
        SerializedName = @"isSynced",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsSynced { get; set; }
        /// <summary>Most recent tenant configuration operation identifier</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Most recent tenant configuration operation identifier",
        SerializedName = @"lastOperationId",
        PossibleTypes = new [] { typeof(string) })]
        string LastOperationId { get; set; }
        /// <summary>
        /// The date of the latest synchronization. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified
        /// by the ISO 8601 standard.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The date of the latest synchronization. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
        ",
        SerializedName = @"syncDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SyncDate { get; set; }

    }
    /// Result of Tenant Configuration Sync State.
    internal partial interface ITenantConfigurationSyncStateContractInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal
    {
        /// <summary>The name of Git branch.</summary>
        string Branch { get; set; }
        /// <summary>The latest commit Id.</summary>
        string CommitId { get; set; }
        /// <summary>
        /// The date of the latest configuration change. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified
        /// by the ISO 8601 standard.
        /// </summary>
        global::System.DateTime? ConfigurationChangeDate { get; set; }
        /// <summary>value indicating if last sync was save (true) or deploy (false) operation.</summary>
        bool? IsExport { get; set; }
        /// <summary>value indicating whether Git configuration access is enabled.</summary>
        bool? IsGitEnabled { get; set; }
        /// <summary>
        /// value indicating if last synchronization was later than the configuration change.
        /// </summary>
        bool? IsSynced { get; set; }
        /// <summary>Most recent tenant configuration operation identifier</summary>
        string LastOperationId { get; set; }
        /// <summary>Properties returned Tenant Configuration Sync State check.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.ITenantConfigurationSyncStateContractProperties Property { get; set; }
        /// <summary>
        /// The date of the latest synchronization. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified
        /// by the ISO 8601 standard.
        /// </summary>
        global::System.DateTime? SyncDate { get; set; }

    }
}