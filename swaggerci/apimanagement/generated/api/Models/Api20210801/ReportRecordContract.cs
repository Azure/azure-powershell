// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Extensions;

    /// <summary>Report data.</summary>
    public partial class ReportRecordContract :
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IReportRecordContract,
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IReportRecordContractInternal
    {

        /// <summary>Backing field for <see cref="ApiId" /> property.</summary>
        private string _apiId;

        /// <summary>API identifier path. /apis/{apiId}</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public string ApiId { get => this._apiId; set => this._apiId = value; }

        /// <summary>Backing field for <see cref="ApiRegion" /> property.</summary>
        private string _apiRegion;

        /// <summary>API region identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public string ApiRegion { get => this._apiRegion; set => this._apiRegion = value; }

        /// <summary>Backing field for <see cref="ApiTimeAvg" /> property.</summary>
        private double? _apiTimeAvg;

        /// <summary>Average time it took to process request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public double? ApiTimeAvg { get => this._apiTimeAvg; set => this._apiTimeAvg = value; }

        /// <summary>Backing field for <see cref="ApiTimeMax" /> property.</summary>
        private double? _apiTimeMax;

        /// <summary>Maximum time it took to process request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public double? ApiTimeMax { get => this._apiTimeMax; set => this._apiTimeMax = value; }

        /// <summary>Backing field for <see cref="ApiTimeMin" /> property.</summary>
        private double? _apiTimeMin;

        /// <summary>Minimum time it took to process request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public double? ApiTimeMin { get => this._apiTimeMin; set => this._apiTimeMin = value; }

        /// <summary>Backing field for <see cref="Bandwidth" /> property.</summary>
        private long? _bandwidth;

        /// <summary>Bandwidth consumed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public long? Bandwidth { get => this._bandwidth; set => this._bandwidth = value; }

        /// <summary>Backing field for <see cref="CacheHitCount" /> property.</summary>
        private int? _cacheHitCount;

        /// <summary>Number of times when content was served from cache policy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public int? CacheHitCount { get => this._cacheHitCount; set => this._cacheHitCount = value; }

        /// <summary>Backing field for <see cref="CacheMissCount" /> property.</summary>
        private int? _cacheMissCount;

        /// <summary>Number of times content was fetched from backend.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public int? CacheMissCount { get => this._cacheMissCount; set => this._cacheMissCount = value; }

        /// <summary>Backing field for <see cref="CallCountBlocked" /> property.</summary>
        private int? _callCountBlocked;

        /// <summary>
        /// Number of calls blocked due to invalid credentials. This includes calls returning HttpStatusCode.Unauthorized and HttpStatusCode.Forbidden
        /// and HttpStatusCode.TooManyRequests
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public int? CallCountBlocked { get => this._callCountBlocked; set => this._callCountBlocked = value; }

        /// <summary>Backing field for <see cref="CallCountFailed" /> property.</summary>
        private int? _callCountFailed;

        /// <summary>
        /// Number of calls failed due to proxy or backend errors. This includes calls returning HttpStatusCode.BadRequest(400) and
        /// any Code between HttpStatusCode.InternalServerError (500) and 600
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public int? CallCountFailed { get => this._callCountFailed; set => this._callCountFailed = value; }

        /// <summary>Backing field for <see cref="CallCountOther" /> property.</summary>
        private int? _callCountOther;

        /// <summary>Number of other calls.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public int? CallCountOther { get => this._callCountOther; set => this._callCountOther = value; }

        /// <summary>Backing field for <see cref="CallCountSuccess" /> property.</summary>
        private int? _callCountSuccess;

        /// <summary>
        /// Number of successful calls. This includes calls returning HttpStatusCode <= 301 and HttpStatusCode.NotModified and HttpStatusCode.TemporaryRedirect
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public int? CallCountSuccess { get => this._callCountSuccess; set => this._callCountSuccess = value; }

        /// <summary>Backing field for <see cref="CallCountTotal" /> property.</summary>
        private int? _callCountTotal;

        /// <summary>Total number of calls.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public int? CallCountTotal { get => this._callCountTotal; set => this._callCountTotal = value; }

        /// <summary>Backing field for <see cref="Country" /> property.</summary>
        private string _country;

        /// <summary>Country to which this record data is related.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public string Country { get => this._country; set => this._country = value; }

        /// <summary>Backing field for <see cref="Interval" /> property.</summary>
        private string _interval;

        /// <summary>
        /// Length of aggregation period. Interval must be multiple of 15 minutes and may not be zero. The value should be in ISO
        /// 8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public string Interval { get => this._interval; set => this._interval = value; }

        /// <summary>Internal Acessors for ProductId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IReportRecordContractInternal.ProductId { get => this._productId; set { {_productId = value;} } }

        /// <summary>Internal Acessors for UserId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.IReportRecordContractInternal.UserId { get => this._userId; set { {_userId = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>
        /// Name depending on report endpoint specifies product, API, operation or developer name.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="OperationId" /> property.</summary>
        private string _operationId;

        /// <summary>Operation identifier path. /apis/{apiId}/operations/{operationId}</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public string OperationId { get => this._operationId; set => this._operationId = value; }

        /// <summary>Backing field for <see cref="ProductId" /> property.</summary>
        private string _productId;

        /// <summary>Product identifier path. /products/{productId}</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public string ProductId { get => this._productId; }

        /// <summary>Backing field for <see cref="Region" /> property.</summary>
        private string _region;

        /// <summary>Country region to which this record data is related.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public string Region { get => this._region; set => this._region = value; }

        /// <summary>Backing field for <see cref="ServiceTimeAvg" /> property.</summary>
        private double? _serviceTimeAvg;

        /// <summary>Average time it took to process request on backend.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public double? ServiceTimeAvg { get => this._serviceTimeAvg; set => this._serviceTimeAvg = value; }

        /// <summary>Backing field for <see cref="ServiceTimeMax" /> property.</summary>
        private double? _serviceTimeMax;

        /// <summary>Maximum time it took to process request on backend.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public double? ServiceTimeMax { get => this._serviceTimeMax; set => this._serviceTimeMax = value; }

        /// <summary>Backing field for <see cref="ServiceTimeMin" /> property.</summary>
        private double? _serviceTimeMin;

        /// <summary>Minimum time it took to process request on backend.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public double? ServiceTimeMin { get => this._serviceTimeMin; set => this._serviceTimeMin = value; }

        /// <summary>Backing field for <see cref="SubscriptionId" /> property.</summary>
        private string _subscriptionId;

        /// <summary>Subscription identifier path. /subscriptions/{subscriptionId}</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public string SubscriptionId { get => this._subscriptionId; set => this._subscriptionId = value; }

        /// <summary>Backing field for <see cref="Timestamp" /> property.</summary>
        private global::System.DateTime? _timestamp;

        /// <summary>
        /// Start of aggregation period. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO
        /// 8601 standard.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public global::System.DateTime? Timestamp { get => this._timestamp; set => this._timestamp = value; }

        /// <summary>Backing field for <see cref="UserId" /> property.</summary>
        private string _userId;

        /// <summary>User identifier path. /users/{userId}</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public string UserId { get => this._userId; }

        /// <summary>Backing field for <see cref="Zip" /> property.</summary>
        private string _zip;

        /// <summary>Zip code to which this record data is related.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public string Zip { get => this._zip; set => this._zip = value; }

        /// <summary>Creates an new <see cref="ReportRecordContract" /> instance.</summary>
        public ReportRecordContract()
        {

        }
    }
    /// Report data.
    public partial interface IReportRecordContract :
        Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.IJsonSerializable
    {
        /// <summary>API identifier path. /apis/{apiId}</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"API identifier path. /apis/{apiId}",
        SerializedName = @"apiId",
        PossibleTypes = new [] { typeof(string) })]
        string ApiId { get; set; }
        /// <summary>API region identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"API region identifier.",
        SerializedName = @"apiRegion",
        PossibleTypes = new [] { typeof(string) })]
        string ApiRegion { get; set; }
        /// <summary>Average time it took to process request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Average time it took to process request.",
        SerializedName = @"apiTimeAvg",
        PossibleTypes = new [] { typeof(double) })]
        double? ApiTimeAvg { get; set; }
        /// <summary>Maximum time it took to process request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Maximum time it took to process request.",
        SerializedName = @"apiTimeMax",
        PossibleTypes = new [] { typeof(double) })]
        double? ApiTimeMax { get; set; }
        /// <summary>Minimum time it took to process request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Minimum time it took to process request.",
        SerializedName = @"apiTimeMin",
        PossibleTypes = new [] { typeof(double) })]
        double? ApiTimeMin { get; set; }
        /// <summary>Bandwidth consumed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Bandwidth consumed.",
        SerializedName = @"bandwidth",
        PossibleTypes = new [] { typeof(long) })]
        long? Bandwidth { get; set; }
        /// <summary>Number of times when content was served from cache policy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of times when content was served from cache policy.",
        SerializedName = @"cacheHitCount",
        PossibleTypes = new [] { typeof(int) })]
        int? CacheHitCount { get; set; }
        /// <summary>Number of times content was fetched from backend.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of times content was fetched from backend.",
        SerializedName = @"cacheMissCount",
        PossibleTypes = new [] { typeof(int) })]
        int? CacheMissCount { get; set; }
        /// <summary>
        /// Number of calls blocked due to invalid credentials. This includes calls returning HttpStatusCode.Unauthorized and HttpStatusCode.Forbidden
        /// and HttpStatusCode.TooManyRequests
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of calls blocked due to invalid credentials. This includes calls returning HttpStatusCode.Unauthorized and HttpStatusCode.Forbidden and HttpStatusCode.TooManyRequests",
        SerializedName = @"callCountBlocked",
        PossibleTypes = new [] { typeof(int) })]
        int? CallCountBlocked { get; set; }
        /// <summary>
        /// Number of calls failed due to proxy or backend errors. This includes calls returning HttpStatusCode.BadRequest(400) and
        /// any Code between HttpStatusCode.InternalServerError (500) and 600
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of calls failed due to proxy or backend errors. This includes calls returning HttpStatusCode.BadRequest(400) and any Code between HttpStatusCode.InternalServerError (500) and 600",
        SerializedName = @"callCountFailed",
        PossibleTypes = new [] { typeof(int) })]
        int? CallCountFailed { get; set; }
        /// <summary>Number of other calls.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of other calls.",
        SerializedName = @"callCountOther",
        PossibleTypes = new [] { typeof(int) })]
        int? CallCountOther { get; set; }
        /// <summary>
        /// Number of successful calls. This includes calls returning HttpStatusCode <= 301 and HttpStatusCode.NotModified and HttpStatusCode.TemporaryRedirect
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of successful calls. This includes calls returning HttpStatusCode <= 301 and HttpStatusCode.NotModified and HttpStatusCode.TemporaryRedirect",
        SerializedName = @"callCountSuccess",
        PossibleTypes = new [] { typeof(int) })]
        int? CallCountSuccess { get; set; }
        /// <summary>Total number of calls.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Total number of calls.",
        SerializedName = @"callCountTotal",
        PossibleTypes = new [] { typeof(int) })]
        int? CallCountTotal { get; set; }
        /// <summary>Country to which this record data is related.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Country to which this record data is related.",
        SerializedName = @"country",
        PossibleTypes = new [] { typeof(string) })]
        string Country { get; set; }
        /// <summary>
        /// Length of aggregation period. Interval must be multiple of 15 minutes and may not be zero. The value should be in ISO
        /// 8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Length of aggregation period.  Interval must be multiple of 15 minutes and may not be zero. The value should be in ISO 8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations).",
        SerializedName = @"interval",
        PossibleTypes = new [] { typeof(string) })]
        string Interval { get; set; }
        /// <summary>
        /// Name depending on report endpoint specifies product, API, operation or developer name.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name depending on report endpoint specifies product, API, operation or developer name.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>Operation identifier path. /apis/{apiId}/operations/{operationId}</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Operation identifier path. /apis/{apiId}/operations/{operationId}",
        SerializedName = @"operationId",
        PossibleTypes = new [] { typeof(string) })]
        string OperationId { get; set; }
        /// <summary>Product identifier path. /products/{productId}</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Product identifier path. /products/{productId}",
        SerializedName = @"productId",
        PossibleTypes = new [] { typeof(string) })]
        string ProductId { get;  }
        /// <summary>Country region to which this record data is related.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Country region to which this record data is related.",
        SerializedName = @"region",
        PossibleTypes = new [] { typeof(string) })]
        string Region { get; set; }
        /// <summary>Average time it took to process request on backend.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Average time it took to process request on backend.",
        SerializedName = @"serviceTimeAvg",
        PossibleTypes = new [] { typeof(double) })]
        double? ServiceTimeAvg { get; set; }
        /// <summary>Maximum time it took to process request on backend.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Maximum time it took to process request on backend.",
        SerializedName = @"serviceTimeMax",
        PossibleTypes = new [] { typeof(double) })]
        double? ServiceTimeMax { get; set; }
        /// <summary>Minimum time it took to process request on backend.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Minimum time it took to process request on backend.",
        SerializedName = @"serviceTimeMin",
        PossibleTypes = new [] { typeof(double) })]
        double? ServiceTimeMin { get; set; }
        /// <summary>Subscription identifier path. /subscriptions/{subscriptionId}</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Subscription identifier path. /subscriptions/{subscriptionId}",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionId { get; set; }
        /// <summary>
        /// Start of aggregation period. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO
        /// 8601 standard.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Start of aggregation period. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
        ",
        SerializedName = @"timestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? Timestamp { get; set; }
        /// <summary>User identifier path. /users/{userId}</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"User identifier path. /users/{userId}",
        SerializedName = @"userId",
        PossibleTypes = new [] { typeof(string) })]
        string UserId { get;  }
        /// <summary>Zip code to which this record data is related.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Zip code to which this record data is related.",
        SerializedName = @"zip",
        PossibleTypes = new [] { typeof(string) })]
        string Zip { get; set; }

    }
    /// Report data.
    internal partial interface IReportRecordContractInternal

    {
        /// <summary>API identifier path. /apis/{apiId}</summary>
        string ApiId { get; set; }
        /// <summary>API region identifier.</summary>
        string ApiRegion { get; set; }
        /// <summary>Average time it took to process request.</summary>
        double? ApiTimeAvg { get; set; }
        /// <summary>Maximum time it took to process request.</summary>
        double? ApiTimeMax { get; set; }
        /// <summary>Minimum time it took to process request.</summary>
        double? ApiTimeMin { get; set; }
        /// <summary>Bandwidth consumed.</summary>
        long? Bandwidth { get; set; }
        /// <summary>Number of times when content was served from cache policy.</summary>
        int? CacheHitCount { get; set; }
        /// <summary>Number of times content was fetched from backend.</summary>
        int? CacheMissCount { get; set; }
        /// <summary>
        /// Number of calls blocked due to invalid credentials. This includes calls returning HttpStatusCode.Unauthorized and HttpStatusCode.Forbidden
        /// and HttpStatusCode.TooManyRequests
        /// </summary>
        int? CallCountBlocked { get; set; }
        /// <summary>
        /// Number of calls failed due to proxy or backend errors. This includes calls returning HttpStatusCode.BadRequest(400) and
        /// any Code between HttpStatusCode.InternalServerError (500) and 600
        /// </summary>
        int? CallCountFailed { get; set; }
        /// <summary>Number of other calls.</summary>
        int? CallCountOther { get; set; }
        /// <summary>
        /// Number of successful calls. This includes calls returning HttpStatusCode <= 301 and HttpStatusCode.NotModified and HttpStatusCode.TemporaryRedirect
        /// </summary>
        int? CallCountSuccess { get; set; }
        /// <summary>Total number of calls.</summary>
        int? CallCountTotal { get; set; }
        /// <summary>Country to which this record data is related.</summary>
        string Country { get; set; }
        /// <summary>
        /// Length of aggregation period. Interval must be multiple of 15 minutes and may not be zero. The value should be in ISO
        /// 8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations).
        /// </summary>
        string Interval { get; set; }
        /// <summary>
        /// Name depending on report endpoint specifies product, API, operation or developer name.
        /// </summary>
        string Name { get; set; }
        /// <summary>Operation identifier path. /apis/{apiId}/operations/{operationId}</summary>
        string OperationId { get; set; }
        /// <summary>Product identifier path. /products/{productId}</summary>
        string ProductId { get; set; }
        /// <summary>Country region to which this record data is related.</summary>
        string Region { get; set; }
        /// <summary>Average time it took to process request on backend.</summary>
        double? ServiceTimeAvg { get; set; }
        /// <summary>Maximum time it took to process request on backend.</summary>
        double? ServiceTimeMax { get; set; }
        /// <summary>Minimum time it took to process request on backend.</summary>
        double? ServiceTimeMin { get; set; }
        /// <summary>Subscription identifier path. /subscriptions/{subscriptionId}</summary>
        string SubscriptionId { get; set; }
        /// <summary>
        /// Start of aggregation period. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO
        /// 8601 standard.
        /// </summary>
        global::System.DateTime? Timestamp { get; set; }
        /// <summary>User identifier path. /users/{userId}</summary>
        string UserId { get; set; }
        /// <summary>Zip code to which this record data is related.</summary>
        string Zip { get; set; }

    }
}