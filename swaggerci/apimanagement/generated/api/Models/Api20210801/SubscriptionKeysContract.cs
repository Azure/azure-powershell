// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Extensions;

    /// <summary>Subscription keys.</summary>
    public partial class SubscriptionKeysContract :
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.ISubscriptionKeysContract,
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.ISubscriptionKeysContractInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.IHeaderSerializable
    {

        /// <summary>Backing field for <see cref="ETag" /> property.</summary>
        private string _eTag;

        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public string ETag { get => this._eTag; set => this._eTag = value; }

        /// <summary>Backing field for <see cref="PrimaryKey" /> property.</summary>
        private string _primaryKey;

        /// <summary>Subscription primary key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public string PrimaryKey { get => this._primaryKey; set => this._primaryKey = value; }

        /// <summary>Backing field for <see cref="SecondaryKey" /> property.</summary>
        private string _secondaryKey;

        /// <summary>Subscription secondary key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public string SecondaryKey { get => this._secondaryKey; set => this._secondaryKey = value; }

        /// <param name="headers"></param>
        void Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.IHeaderSerializable.ReadHeaders(global::System.Net.Http.Headers.HttpResponseHeaders headers)
        {
            if (headers.TryGetValues("ETag", out var __eTagHeader0))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20210801.ISubscriptionKeysContractInternal)this).ETag = System.Linq.Enumerable.FirstOrDefault(__eTagHeader0) is string __headerETagHeader0 ? __headerETagHeader0 : (string)null;
            }
        }

        /// <summary>Creates an new <see cref="SubscriptionKeysContract" /> instance.</summary>
        public SubscriptionKeysContract()
        {

        }
    }
    /// Subscription keys.
    public partial interface ISubscriptionKeysContract :
        Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.IJsonSerializable
    {
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"ETag",
        PossibleTypes = new [] { typeof(string) })]
        string ETag { get; set; }
        /// <summary>Subscription primary key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Subscription primary key.",
        SerializedName = @"primaryKey",
        PossibleTypes = new [] { typeof(string) })]
        string PrimaryKey { get; set; }
        /// <summary>Subscription secondary key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Subscription secondary key.",
        SerializedName = @"secondaryKey",
        PossibleTypes = new [] { typeof(string) })]
        string SecondaryKey { get; set; }

    }
    /// Subscription keys.
    internal partial interface ISubscriptionKeysContractInternal

    {
        string ETag { get; set; }
        /// <summary>Subscription primary key.</summary>
        string PrimaryKey { get; set; }
        /// <summary>Subscription secondary key.</summary>
        string SecondaryKey { get; set; }

    }
}