// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Extensions;

    /// <summary>Child configuration object.</summary>
    public partial class ChildConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfiguration,
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationInternal
    {

        /// <summary>Current availability stage of the product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.AvailabilityStage? AvailabilityInformationAvailabilityStage { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).AvailabilityInformationAvailabilityStage; }

        /// <summary>Reason why the product is disabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DisabledReason? AvailabilityInformationDisabledReason { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).AvailabilityInformationDisabledReason; }

        /// <summary>Message for why the product is disabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string AvailabilityInformationDisabledReasonMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).AvailabilityInformationDisabledReasonMessage; }

        /// <summary>
        /// Different types of child configurations which exist for this configuration, these can be used to populate the child configuration
        /// filter.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ChildConfigurationType[] ChildConfigurationType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).ChildConfigurationTypes; }

        /// <summary>Default url to display billing information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string CostInformationBillingInfoUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).CostInformationBillingInfoUrl; }

        /// <summary>Details on the various billing aspects for the product system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IBillingMeterDetails[] CostInformationBillingMeterDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).CostInformationBillingMeterDetail; }

        /// <summary>Attributes for the product system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string[] DescriptionAttribute { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).DescriptionAttribute; }

        /// <summary>Keywords for the product system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string[] DescriptionKeyword { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).DescriptionKeyword; }

        /// <summary>Links for the product system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.ILink[] DescriptionLink { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).DescriptionLink; }

        /// <summary>Long description of the product system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string DescriptionLongDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).DescriptionLongDescription; }

        /// <summary>Short description of the product system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string DescriptionShortDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).DescriptionShortDescription; }

        /// <summary>Type of description.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DescriptionType? DescriptionType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).DescriptionType; }

        /// <summary>Depth of the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public double? DimensionDepth { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).DimensionDepth; }

        /// <summary>Height of the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public double? DimensionHeight { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).DimensionHeight; }

        /// <summary>Length of the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public double? DimensionLength { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).DimensionLength; }

        /// <summary>Unit for the dimensions of length, height and width.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.LengthHeightUnit? DimensionLengthHeightUnit { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).DimensionLengthHeightUnit; }

        /// <summary>Weight of the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public double? DimensionWeight { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).DimensionWeight; }

        /// <summary>Unit for the dimensions of weight.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.WeightMeasurementUnit? DimensionWeightUnit { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).DimensionWeightUnit; }

        /// <summary>Width of the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public double? DimensionWidth { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).DimensionWidth; }

        /// <summary>Display Name for the product system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string DisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).DisplayName; }

        /// <summary>List of filters supported for a product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IFilterableProperty[] FilterableProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).FilterableProperty; }

        /// <summary>
        /// The entity responsible for fulfillment of the item at the given hierarchy level.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.FulfillmentType? FulfilledBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).FulfilledBy; }

        /// <summary>
        /// Child configurations present for the configuration after applying child configuration filter, grouped by the category
        /// name of the child configuration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IGroupedChildConfigurations[] GroupedChildConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).GroupedChildConfiguration; }

        /// <summary>Represents configuration name that uniquely identifies configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string HierarchyInformationConfigurationName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).HierarchyInformationConfigurationName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).HierarchyInformationConfigurationName = value ?? null; }

        /// <summary>Represents product family name that uniquely identifies product family.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string HierarchyInformationProductFamilyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).HierarchyInformationProductFamilyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).HierarchyInformationProductFamilyName = value ?? null; }

        /// <summary>Represents product line name that uniquely identifies product line.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string HierarchyInformationProductLineName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).HierarchyInformationProductLineName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).HierarchyInformationProductLineName = value ?? null; }

        /// <summary>Represents product name that uniquely identifies product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string HierarchyInformationProductName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).HierarchyInformationProductName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).HierarchyInformationProductName = value ?? null; }

        /// <summary>Image information for the product system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IImageInformation[] ImageInformation { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).ImageInformation; }

        /// <summary>
        /// Flag to indicate if the child configuration is part of the base configuration, which means the customer need not pass
        /// this configuration in OptInAdditionalConfigurations while placing an order, it will be shipped by default.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public bool? IsPartOfBaseConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).IsPartOfBaseConfiguration; }

        /// <summary>Maximum quantity a customer can order while choosing this configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public int? MaximumQuantity { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).MaximumQuantity; }

        /// <summary>Internal Acessors for AvailabilityInformation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IAvailabilityInformation Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationInternal.AvailabilityInformation { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).AvailabilityInformation; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).AvailabilityInformation = value; }

        /// <summary>Internal Acessors for AvailabilityInformationAvailabilityStage</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.AvailabilityStage? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationInternal.AvailabilityInformationAvailabilityStage { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).AvailabilityInformationAvailabilityStage; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).AvailabilityInformationAvailabilityStage = value; }

        /// <summary>Internal Acessors for AvailabilityInformationDisabledReason</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DisabledReason? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationInternal.AvailabilityInformationDisabledReason { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).AvailabilityInformationDisabledReason; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).AvailabilityInformationDisabledReason = value; }

        /// <summary>Internal Acessors for AvailabilityInformationDisabledReasonMessage</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationInternal.AvailabilityInformationDisabledReasonMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).AvailabilityInformationDisabledReasonMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).AvailabilityInformationDisabledReasonMessage = value; }

        /// <summary>Internal Acessors for ChildConfigurationType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ChildConfigurationType[] Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationInternal.ChildConfigurationType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).ChildConfigurationTypes; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).ChildConfigurationTypes = value; }

        /// <summary>Internal Acessors for CostInformation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.ICostInformation Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationInternal.CostInformation { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).CostInformation; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).CostInformation = value; }

        /// <summary>Internal Acessors for CostInformationBillingInfoUrl</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationInternal.CostInformationBillingInfoUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).CostInformationBillingInfoUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).CostInformationBillingInfoUrl = value; }

        /// <summary>Internal Acessors for CostInformationBillingMeterDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IBillingMeterDetails[] Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationInternal.CostInformationBillingMeterDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).CostInformationBillingMeterDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).CostInformationBillingMeterDetail = value; }

        /// <summary>Internal Acessors for Description</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IDescription Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationInternal.Description { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).Description = value; }

        /// <summary>Internal Acessors for DescriptionAttribute</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationInternal.DescriptionAttribute { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).DescriptionAttribute; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).DescriptionAttribute = value; }

        /// <summary>Internal Acessors for DescriptionKeyword</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationInternal.DescriptionKeyword { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).DescriptionKeyword; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).DescriptionKeyword = value; }

        /// <summary>Internal Acessors for DescriptionLink</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.ILink[] Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationInternal.DescriptionLink { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).DescriptionLink; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).DescriptionLink = value; }

        /// <summary>Internal Acessors for DescriptionLongDescription</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationInternal.DescriptionLongDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).DescriptionLongDescription; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).DescriptionLongDescription = value; }

        /// <summary>Internal Acessors for DescriptionShortDescription</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationInternal.DescriptionShortDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).DescriptionShortDescription; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).DescriptionShortDescription = value; }

        /// <summary>Internal Acessors for DescriptionType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DescriptionType? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationInternal.DescriptionType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).DescriptionType; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).DescriptionType = value; }

        /// <summary>Internal Acessors for Dimension</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IDimensions Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationInternal.Dimension { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).Dimension; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).Dimension = value; }

        /// <summary>Internal Acessors for DimensionDepth</summary>
        double? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationInternal.DimensionDepth { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).DimensionDepth; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).DimensionDepth = value; }

        /// <summary>Internal Acessors for DimensionHeight</summary>
        double? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationInternal.DimensionHeight { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).DimensionHeight; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).DimensionHeight = value; }

        /// <summary>Internal Acessors for DimensionLength</summary>
        double? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationInternal.DimensionLength { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).DimensionLength; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).DimensionLength = value; }

        /// <summary>Internal Acessors for DimensionLengthHeightUnit</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.LengthHeightUnit? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationInternal.DimensionLengthHeightUnit { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).DimensionLengthHeightUnit; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).DimensionLengthHeightUnit = value; }

        /// <summary>Internal Acessors for DimensionWeight</summary>
        double? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationInternal.DimensionWeight { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).DimensionWeight; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).DimensionWeight = value; }

        /// <summary>Internal Acessors for DimensionWeightUnit</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.WeightMeasurementUnit? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationInternal.DimensionWeightUnit { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).DimensionWeightUnit; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).DimensionWeightUnit = value; }

        /// <summary>Internal Acessors for DimensionWidth</summary>
        double? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationInternal.DimensionWidth { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).DimensionWidth; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).DimensionWidth = value; }

        /// <summary>Internal Acessors for DisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationInternal.DisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).DisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).DisplayName = value; }

        /// <summary>Internal Acessors for FilterableProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IFilterableProperty[] Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationInternal.FilterableProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).FilterableProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).FilterableProperty = value; }

        /// <summary>Internal Acessors for FulfilledBy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.FulfillmentType? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationInternal.FulfilledBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).FulfilledBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).FulfilledBy = value; }

        /// <summary>Internal Acessors for GroupedChildConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IGroupedChildConfigurations[] Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationInternal.GroupedChildConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).GroupedChildConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).GroupedChildConfiguration = value; }

        /// <summary>Internal Acessors for HierarchyInformation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IHierarchyInformation Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationInternal.HierarchyInformation { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).HierarchyInformation; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).HierarchyInformation = value; }

        /// <summary>Internal Acessors for ImageInformation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IImageInformation[] Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationInternal.ImageInformation { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).ImageInformation; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).ImageInformation = value; }

        /// <summary>Internal Acessors for IsPartOfBaseConfiguration</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationInternal.IsPartOfBaseConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).IsPartOfBaseConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).IsPartOfBaseConfiguration = value; }

        /// <summary>Internal Acessors for MaximumQuantity</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationInternal.MaximumQuantity { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).MaximumQuantity; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).MaximumQuantity = value; }

        /// <summary>Internal Acessors for MinimumQuantity</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationInternal.MinimumQuantity { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).MinimumQuantity; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).MinimumQuantity = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationProperties Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.ChildConfigurationProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for Specification</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.ISpecification[] Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationInternal.Specification { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).Specification; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).Specification = value; }

        /// <summary>Internal Acessors for Type</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ChildConfigurationType? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).ChildConfigurationType; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).ChildConfigurationType = value; }

        /// <summary>Minimum quantity a customer can order while choosing this configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public int? MinimumQuantity { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).MinimumQuantity; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationProperties _property;

        /// <summary>Properties of child configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.ChildConfigurationProperties()); }

        /// <summary>Specifications of the configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.ISpecification[] Specification { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).Specification; }

        /// <summary>Child configuration type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ChildConfigurationType? Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationPropertiesInternal)Property).ChildConfigurationType; }

        /// <summary>Creates an new <see cref="ChildConfiguration" /> instance.</summary>
        public ChildConfiguration()
        {

        }
    }
    /// Child configuration object.
    public partial interface IChildConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.IJsonSerializable
    {
        /// <summary>Current availability stage of the product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Current availability stage of the product.",
        SerializedName = @"availabilityStage",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.AvailabilityStage) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.AvailabilityStage? AvailabilityInformationAvailabilityStage { get;  }
        /// <summary>Reason why the product is disabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Reason why the product is disabled.",
        SerializedName = @"disabledReason",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DisabledReason) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DisabledReason? AvailabilityInformationDisabledReason { get;  }
        /// <summary>Message for why the product is disabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Message for why the product is disabled.",
        SerializedName = @"disabledReasonMessage",
        PossibleTypes = new [] { typeof(string) })]
        string AvailabilityInformationDisabledReasonMessage { get;  }
        /// <summary>
        /// Different types of child configurations which exist for this configuration, these can be used to populate the child configuration
        /// filter.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Different types of child configurations which exist for this configuration, these can be used to populate the child configuration filter.",
        SerializedName = @"childConfigurationTypes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ChildConfigurationType) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ChildConfigurationType[] ChildConfigurationType { get;  }
        /// <summary>Default url to display billing information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Default url to display billing information.",
        SerializedName = @"billingInfoUrl",
        PossibleTypes = new [] { typeof(string) })]
        string CostInformationBillingInfoUrl { get;  }
        /// <summary>Details on the various billing aspects for the product system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Details on the various billing aspects for the product system.",
        SerializedName = @"billingMeterDetails",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IBillingMeterDetails) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IBillingMeterDetails[] CostInformationBillingMeterDetail { get;  }
        /// <summary>Attributes for the product system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Attributes for the product system.",
        SerializedName = @"attributes",
        PossibleTypes = new [] { typeof(string) })]
        string[] DescriptionAttribute { get;  }
        /// <summary>Keywords for the product system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Keywords for the product system.",
        SerializedName = @"keywords",
        PossibleTypes = new [] { typeof(string) })]
        string[] DescriptionKeyword { get;  }
        /// <summary>Links for the product system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Links for the product system.",
        SerializedName = @"links",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.ILink) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.ILink[] DescriptionLink { get;  }
        /// <summary>Long description of the product system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Long description of the product system.",
        SerializedName = @"longDescription",
        PossibleTypes = new [] { typeof(string) })]
        string DescriptionLongDescription { get;  }
        /// <summary>Short description of the product system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Short description of the product system.",
        SerializedName = @"shortDescription",
        PossibleTypes = new [] { typeof(string) })]
        string DescriptionShortDescription { get;  }
        /// <summary>Type of description.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Type of description.",
        SerializedName = @"descriptionType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DescriptionType) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DescriptionType? DescriptionType { get;  }
        /// <summary>Depth of the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Depth of the device.",
        SerializedName = @"depth",
        PossibleTypes = new [] { typeof(double) })]
        double? DimensionDepth { get;  }
        /// <summary>Height of the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Height of the device.",
        SerializedName = @"height",
        PossibleTypes = new [] { typeof(double) })]
        double? DimensionHeight { get;  }
        /// <summary>Length of the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Length of the device.",
        SerializedName = @"length",
        PossibleTypes = new [] { typeof(double) })]
        double? DimensionLength { get;  }
        /// <summary>Unit for the dimensions of length, height and width.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Unit for the dimensions of length, height and width.",
        SerializedName = @"lengthHeightUnit",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.LengthHeightUnit) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.LengthHeightUnit? DimensionLengthHeightUnit { get;  }
        /// <summary>Weight of the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Weight of the device.",
        SerializedName = @"weight",
        PossibleTypes = new [] { typeof(double) })]
        double? DimensionWeight { get;  }
        /// <summary>Unit for the dimensions of weight.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Unit for the dimensions of weight.",
        SerializedName = @"weightUnit",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.WeightMeasurementUnit) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.WeightMeasurementUnit? DimensionWeightUnit { get;  }
        /// <summary>Width of the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Width of the device.",
        SerializedName = @"width",
        PossibleTypes = new [] { typeof(double) })]
        double? DimensionWidth { get;  }
        /// <summary>Display Name for the product system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Display Name for the product system.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get;  }
        /// <summary>List of filters supported for a product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of filters supported for a product.",
        SerializedName = @"filterableProperties",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IFilterableProperty) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IFilterableProperty[] FilterableProperty { get;  }
        /// <summary>
        /// The entity responsible for fulfillment of the item at the given hierarchy level.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The entity responsible for fulfillment of the item at the given hierarchy level.",
        SerializedName = @"fulfilledBy",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.FulfillmentType) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.FulfillmentType? FulfilledBy { get;  }
        /// <summary>
        /// Child configurations present for the configuration after applying child configuration filter, grouped by the category
        /// name of the child configuration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Child configurations present for the configuration after applying child configuration filter, grouped by the category name of the child configuration.",
        SerializedName = @"groupedChildConfigurations",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IGroupedChildConfigurations) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IGroupedChildConfigurations[] GroupedChildConfiguration { get;  }
        /// <summary>Represents configuration name that uniquely identifies configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents configuration name that uniquely identifies configuration.",
        SerializedName = @"configurationName",
        PossibleTypes = new [] { typeof(string) })]
        string HierarchyInformationConfigurationName { get; set; }
        /// <summary>Represents product family name that uniquely identifies product family.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents product family name that uniquely identifies product family.",
        SerializedName = @"productFamilyName",
        PossibleTypes = new [] { typeof(string) })]
        string HierarchyInformationProductFamilyName { get; set; }
        /// <summary>Represents product line name that uniquely identifies product line.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents product line name that uniquely identifies product line.",
        SerializedName = @"productLineName",
        PossibleTypes = new [] { typeof(string) })]
        string HierarchyInformationProductLineName { get; set; }
        /// <summary>Represents product name that uniquely identifies product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents product name that uniquely identifies product.",
        SerializedName = @"productName",
        PossibleTypes = new [] { typeof(string) })]
        string HierarchyInformationProductName { get; set; }
        /// <summary>Image information for the product system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Image information for the product system.",
        SerializedName = @"imageInformation",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IImageInformation) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IImageInformation[] ImageInformation { get;  }
        /// <summary>
        /// Flag to indicate if the child configuration is part of the base configuration, which means the customer need not pass
        /// this configuration in OptInAdditionalConfigurations while placing an order, it will be shipped by default.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Flag to indicate if the child configuration is part of the base configuration, which means the customer need not pass this configuration in OptInAdditionalConfigurations while placing an order, it will be shipped by default.",
        SerializedName = @"isPartOfBaseConfiguration",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsPartOfBaseConfiguration { get;  }
        /// <summary>Maximum quantity a customer can order while choosing this configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Maximum quantity a customer can order while choosing this configuration.",
        SerializedName = @"maximumQuantity",
        PossibleTypes = new [] { typeof(int) })]
        int? MaximumQuantity { get;  }
        /// <summary>Minimum quantity a customer can order while choosing this configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Minimum quantity a customer can order while choosing this configuration.",
        SerializedName = @"minimumQuantity",
        PossibleTypes = new [] { typeof(int) })]
        int? MinimumQuantity { get;  }
        /// <summary>Specifications of the configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Specifications of the configuration.",
        SerializedName = @"specifications",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.ISpecification) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.ISpecification[] Specification { get;  }
        /// <summary>Child configuration type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Child configuration type.",
        SerializedName = @"childConfigurationType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ChildConfigurationType) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ChildConfigurationType? Type { get;  }

    }
    /// Child configuration object.
    internal partial interface IChildConfigurationInternal

    {
        /// <summary>Availability information of the product system.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IAvailabilityInformation AvailabilityInformation { get; set; }
        /// <summary>Current availability stage of the product.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.AvailabilityStage? AvailabilityInformationAvailabilityStage { get; set; }
        /// <summary>Reason why the product is disabled.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DisabledReason? AvailabilityInformationDisabledReason { get; set; }
        /// <summary>Message for why the product is disabled.</summary>
        string AvailabilityInformationDisabledReasonMessage { get; set; }
        /// <summary>
        /// Different types of child configurations which exist for this configuration, these can be used to populate the child configuration
        /// filter.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ChildConfigurationType[] ChildConfigurationType { get; set; }
        /// <summary>Cost information for the product system.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.ICostInformation CostInformation { get; set; }
        /// <summary>Default url to display billing information.</summary>
        string CostInformationBillingInfoUrl { get; set; }
        /// <summary>Details on the various billing aspects for the product system.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IBillingMeterDetails[] CostInformationBillingMeterDetail { get; set; }
        /// <summary>Description related to the product system.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IDescription Description { get; set; }
        /// <summary>Attributes for the product system.</summary>
        string[] DescriptionAttribute { get; set; }
        /// <summary>Keywords for the product system.</summary>
        string[] DescriptionKeyword { get; set; }
        /// <summary>Links for the product system.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.ILink[] DescriptionLink { get; set; }
        /// <summary>Long description of the product system.</summary>
        string DescriptionLongDescription { get; set; }
        /// <summary>Short description of the product system.</summary>
        string DescriptionShortDescription { get; set; }
        /// <summary>Type of description.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DescriptionType? DescriptionType { get; set; }
        /// <summary>Dimensions of the configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IDimensions Dimension { get; set; }
        /// <summary>Depth of the device.</summary>
        double? DimensionDepth { get; set; }
        /// <summary>Height of the device.</summary>
        double? DimensionHeight { get; set; }
        /// <summary>Length of the device.</summary>
        double? DimensionLength { get; set; }
        /// <summary>Unit for the dimensions of length, height and width.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.LengthHeightUnit? DimensionLengthHeightUnit { get; set; }
        /// <summary>Weight of the device.</summary>
        double? DimensionWeight { get; set; }
        /// <summary>Unit for the dimensions of weight.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.WeightMeasurementUnit? DimensionWeightUnit { get; set; }
        /// <summary>Width of the device.</summary>
        double? DimensionWidth { get; set; }
        /// <summary>Display Name for the product system.</summary>
        string DisplayName { get; set; }
        /// <summary>List of filters supported for a product.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IFilterableProperty[] FilterableProperty { get; set; }
        /// <summary>
        /// The entity responsible for fulfillment of the item at the given hierarchy level.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.FulfillmentType? FulfilledBy { get; set; }
        /// <summary>
        /// Child configurations present for the configuration after applying child configuration filter, grouped by the category
        /// name of the child configuration.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IGroupedChildConfigurations[] GroupedChildConfiguration { get; set; }
        /// <summary>Hierarchy information of a product.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IHierarchyInformation HierarchyInformation { get; set; }
        /// <summary>Represents configuration name that uniquely identifies configuration.</summary>
        string HierarchyInformationConfigurationName { get; set; }
        /// <summary>Represents product family name that uniquely identifies product family.</summary>
        string HierarchyInformationProductFamilyName { get; set; }
        /// <summary>Represents product line name that uniquely identifies product line.</summary>
        string HierarchyInformationProductLineName { get; set; }
        /// <summary>Represents product name that uniquely identifies product.</summary>
        string HierarchyInformationProductName { get; set; }
        /// <summary>Image information for the product system.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IImageInformation[] ImageInformation { get; set; }
        /// <summary>
        /// Flag to indicate if the child configuration is part of the base configuration, which means the customer need not pass
        /// this configuration in OptInAdditionalConfigurations while placing an order, it will be shipped by default.
        /// </summary>
        bool? IsPartOfBaseConfiguration { get; set; }
        /// <summary>Maximum quantity a customer can order while choosing this configuration.</summary>
        int? MaximumQuantity { get; set; }
        /// <summary>Minimum quantity a customer can order while choosing this configuration.</summary>
        int? MinimumQuantity { get; set; }
        /// <summary>Properties of child configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationProperties Property { get; set; }
        /// <summary>Specifications of the configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.ISpecification[] Specification { get; set; }
        /// <summary>Child configuration type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ChildConfigurationType? Type { get; set; }

    }
}