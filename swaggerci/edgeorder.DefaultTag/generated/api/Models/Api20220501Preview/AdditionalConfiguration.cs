// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Extensions;

    /// <summary>Additional Configuration details.</summary>
    public partial class AdditionalConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IAdditionalConfiguration,
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IAdditionalConfigurationInternal
    {

        /// <summary>Backing field for <see cref="HierarchyInformation" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IHierarchyInformation _hierarchyInformation;

        /// <summary>Hierarchy of the product which uniquely identifies the configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IHierarchyInformation HierarchyInformation { get => (this._hierarchyInformation = this._hierarchyInformation ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.HierarchyInformation()); set => this._hierarchyInformation = value; }

        /// <summary>Represents configuration name that uniquely identifies configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string HierarchyInformationConfigurationName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IHierarchyInformationInternal)HierarchyInformation).ConfigurationName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IHierarchyInformationInternal)HierarchyInformation).ConfigurationName = value ?? null; }

        /// <summary>Represents product family name that uniquely identifies product family.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string HierarchyInformationProductFamilyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IHierarchyInformationInternal)HierarchyInformation).ProductFamilyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IHierarchyInformationInternal)HierarchyInformation).ProductFamilyName = value ?? null; }

        /// <summary>Represents product line name that uniquely identifies product line.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string HierarchyInformationProductLineName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IHierarchyInformationInternal)HierarchyInformation).ProductLineName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IHierarchyInformationInternal)HierarchyInformation).ProductLineName = value ?? null; }

        /// <summary>Represents product name that uniquely identifies product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string HierarchyInformationProductName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IHierarchyInformationInternal)HierarchyInformation).ProductName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IHierarchyInformationInternal)HierarchyInformation).ProductName = value ?? null; }

        /// <summary>Internal Acessors for HierarchyInformation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IHierarchyInformation Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IAdditionalConfigurationInternal.HierarchyInformation { get => (this._hierarchyInformation = this._hierarchyInformation ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.HierarchyInformation()); set { {_hierarchyInformation = value;} } }

        /// <summary>Backing field for <see cref="Quantity" /> property.</summary>
        private int _quantity;

        /// <summary>Quantity of the product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        public int Quantity { get => this._quantity; set => this._quantity = value; }

        /// <summary>Creates an new <see cref="AdditionalConfiguration" /> instance.</summary>
        public AdditionalConfiguration()
        {

        }
    }
    /// Additional Configuration details.
    public partial interface IAdditionalConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.IJsonSerializable
    {
        /// <summary>Represents configuration name that uniquely identifies configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents configuration name that uniquely identifies configuration.",
        SerializedName = @"configurationName",
        PossibleTypes = new [] { typeof(string) })]
        string HierarchyInformationConfigurationName { get; set; }
        /// <summary>Represents product family name that uniquely identifies product family.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents product family name that uniquely identifies product family.",
        SerializedName = @"productFamilyName",
        PossibleTypes = new [] { typeof(string) })]
        string HierarchyInformationProductFamilyName { get; set; }
        /// <summary>Represents product line name that uniquely identifies product line.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents product line name that uniquely identifies product line.",
        SerializedName = @"productLineName",
        PossibleTypes = new [] { typeof(string) })]
        string HierarchyInformationProductLineName { get; set; }
        /// <summary>Represents product name that uniquely identifies product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents product name that uniquely identifies product.",
        SerializedName = @"productName",
        PossibleTypes = new [] { typeof(string) })]
        string HierarchyInformationProductName { get; set; }
        /// <summary>Quantity of the product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Quantity of the product.",
        SerializedName = @"quantity",
        PossibleTypes = new [] { typeof(int) })]
        int Quantity { get; set; }

    }
    /// Additional Configuration details.
    internal partial interface IAdditionalConfigurationInternal

    {
        /// <summary>Hierarchy of the product which uniquely identifies the configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IHierarchyInformation HierarchyInformation { get; set; }
        /// <summary>Represents configuration name that uniquely identifies configuration.</summary>
        string HierarchyInformationConfigurationName { get; set; }
        /// <summary>Represents product family name that uniquely identifies product family.</summary>
        string HierarchyInformationProductFamilyName { get; set; }
        /// <summary>Represents product line name that uniquely identifies product line.</summary>
        string HierarchyInformationProductLineName { get; set; }
        /// <summary>Represents product name that uniquely identifies product.</summary>
        string HierarchyInformationProductName { get; set; }
        /// <summary>Quantity of the product.</summary>
        int Quantity { get; set; }

    }
}