// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Extensions;

    /// <summary>Child configuration filter.</summary>
    public partial class ChildConfigurationFilter :
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationFilter,
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationFilterInternal
    {

        /// <summary>Backing field for <see cref="ChildConfigurationType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ChildConfigurationType[] _childConfigurationType;

        /// <summary>
        /// Filter to fetch all child configurations belonging to the given list of configuration types.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ChildConfigurationType[] ChildConfigurationType { get => this._childConfigurationType; set => this._childConfigurationType = value; }

        /// <summary>Backing field for <see cref="HierarchyInformation" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IHierarchyInformation[] _hierarchyInformation;

        /// <summary>
        /// The list of child configuration hierarchy customer wants to filter for the given configuration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IHierarchyInformation[] HierarchyInformation { get => this._hierarchyInformation; set => this._hierarchyInformation = value; }

        /// <summary>Creates an new <see cref="ChildConfigurationFilter" /> instance.</summary>
        public ChildConfigurationFilter()
        {

        }
    }
    /// Child configuration filter.
    public partial interface IChildConfigurationFilter :
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Filter to fetch all child configurations belonging to the given list of configuration types.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Filter to fetch all child configurations belonging to the given list of configuration types.",
        SerializedName = @"childConfigurationTypes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ChildConfigurationType) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ChildConfigurationType[] ChildConfigurationType { get; set; }
        /// <summary>
        /// The list of child configuration hierarchy customer wants to filter for the given configuration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of child configuration hierarchy customer wants to filter for the given configuration.",
        SerializedName = @"hierarchyInformations",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IHierarchyInformation) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IHierarchyInformation[] HierarchyInformation { get; set; }

    }
    /// Child configuration filter.
    internal partial interface IChildConfigurationFilterInternal

    {
        /// <summary>
        /// Filter to fetch all child configurations belonging to the given list of configuration types.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ChildConfigurationType[] ChildConfigurationType { get; set; }
        /// <summary>
        /// The list of child configuration hierarchy customer wants to filter for the given configuration.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IHierarchyInformation[] HierarchyInformation { get; set; }

    }
}