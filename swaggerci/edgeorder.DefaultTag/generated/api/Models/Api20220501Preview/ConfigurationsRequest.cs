// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Extensions;

    /// <summary>Configuration request object.</summary>
    public partial class ConfigurationsRequest :
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IConfigurationsRequest,
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IConfigurationsRequestInternal
    {

        /// <summary>
        /// Filter to fetch all child configurations belonging to the given list of configuration types.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ChildConfigurationType[] ChildConfigurationFilterChildConfigurationType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IConfigurationFilterInternal)ConfigurationFilter).ChildConfigurationFilterChildConfigurationType; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IConfigurationFilterInternal)ConfigurationFilter).ChildConfigurationFilterChildConfigurationType = value ?? null /* arrayOf */; }

        /// <summary>
        /// The list of child configuration hierarchy customer wants to filter for the given configuration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IHierarchyInformation[] ChildConfigurationFilterHierarchyInformation { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IConfigurationFilterInternal)ConfigurationFilter).ChildConfigurationFilterHierarchyInformation; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IConfigurationFilterInternal)ConfigurationFilter).ChildConfigurationFilterHierarchyInformation = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="ConfigurationFilter" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IConfigurationFilter _configurationFilter;

        /// <summary>Holds details about product hierarchy information and filterable property.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IConfigurationFilter ConfigurationFilter { get => (this._configurationFilter = this._configurationFilter ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.ConfigurationFilter()); set => this._configurationFilter = value; }

        /// <summary>Filters specific to product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IFilterableProperty[] ConfigurationFilterFilterableProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IConfigurationFilterInternal)ConfigurationFilter).FilterableProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IConfigurationFilterInternal)ConfigurationFilter).FilterableProperty = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="CustomerSubscriptionDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.ICustomerSubscriptionDetails _customerSubscriptionDetail;

        /// <summary>
        /// Customer subscription properties. Clients can display available products to unregistered customers by explicitly passing
        /// subscription details.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.ICustomerSubscriptionDetails CustomerSubscriptionDetail { get => (this._customerSubscriptionDetail = this._customerSubscriptionDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.CustomerSubscriptionDetails()); set => this._customerSubscriptionDetail = value; }

        /// <summary>Location placement Id of a subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string CustomerSubscriptionDetailLocationPlacementId { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.ICustomerSubscriptionDetailsInternal)CustomerSubscriptionDetail).LocationPlacementId; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.ICustomerSubscriptionDetailsInternal)CustomerSubscriptionDetail).LocationPlacementId = value ?? null; }

        /// <summary>Quota ID of a subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string CustomerSubscriptionDetailQuotaId { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.ICustomerSubscriptionDetailsInternal)CustomerSubscriptionDetail).QuotaId; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.ICustomerSubscriptionDetailsInternal)CustomerSubscriptionDetail).QuotaId = value ?? null; }

        /// <summary>List of registered feature flags for subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.ICustomerSubscriptionRegisteredFeatures[] CustomerSubscriptionDetailRegisteredFeature { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.ICustomerSubscriptionDetailsInternal)CustomerSubscriptionDetail).RegisteredFeature; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.ICustomerSubscriptionDetailsInternal)CustomerSubscriptionDetail).RegisteredFeature = value ?? null /* arrayOf */; }

        /// <summary>Represents configuration name that uniquely identifies configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string HierarchyInformationConfigurationName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IConfigurationFilterInternal)ConfigurationFilter).HierarchyInformationConfigurationName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IConfigurationFilterInternal)ConfigurationFilter).HierarchyInformationConfigurationName = value ?? null; }

        /// <summary>Represents product family name that uniquely identifies product family.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string HierarchyInformationProductFamilyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IConfigurationFilterInternal)ConfigurationFilter).HierarchyInformationProductFamilyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IConfigurationFilterInternal)ConfigurationFilter).HierarchyInformationProductFamilyName = value ?? null; }

        /// <summary>Represents product line name that uniquely identifies product line.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string HierarchyInformationProductLineName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IConfigurationFilterInternal)ConfigurationFilter).HierarchyInformationProductLineName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IConfigurationFilterInternal)ConfigurationFilter).HierarchyInformationProductLineName = value ?? null; }

        /// <summary>Represents product name that uniquely identifies product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string HierarchyInformationProductName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IConfigurationFilterInternal)ConfigurationFilter).HierarchyInformationProductName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IConfigurationFilterInternal)ConfigurationFilter).HierarchyInformationProductName = value ?? null; }

        /// <summary>Internal Acessors for ConfigurationFilter</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IConfigurationFilter Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IConfigurationsRequestInternal.ConfigurationFilter { get => (this._configurationFilter = this._configurationFilter ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.ConfigurationFilter()); set { {_configurationFilter = value;} } }

        /// <summary>Internal Acessors for ConfigurationFilterChildConfigurationFilter</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationFilter Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IConfigurationsRequestInternal.ConfigurationFilterChildConfigurationFilter { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IConfigurationFilterInternal)ConfigurationFilter).ChildConfigurationFilter; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IConfigurationFilterInternal)ConfigurationFilter).ChildConfigurationFilter = value; }

        /// <summary>Internal Acessors for ConfigurationFilterHierarchyInformation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IHierarchyInformation Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IConfigurationsRequestInternal.ConfigurationFilterHierarchyInformation { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IConfigurationFilterInternal)ConfigurationFilter).HierarchyInformation; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IConfigurationFilterInternal)ConfigurationFilter).HierarchyInformation = value; }

        /// <summary>Internal Acessors for CustomerSubscriptionDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.ICustomerSubscriptionDetails Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IConfigurationsRequestInternal.CustomerSubscriptionDetail { get => (this._customerSubscriptionDetail = this._customerSubscriptionDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.CustomerSubscriptionDetails()); set { {_customerSubscriptionDetail = value;} } }

        /// <summary>Creates an new <see cref="ConfigurationsRequest" /> instance.</summary>
        public ConfigurationsRequest()
        {

        }
    }
    /// Configuration request object.
    public partial interface IConfigurationsRequest :
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Filter to fetch all child configurations belonging to the given list of configuration types.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Filter to fetch all child configurations belonging to the given list of configuration types.",
        SerializedName = @"childConfigurationTypes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ChildConfigurationType) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ChildConfigurationType[] ChildConfigurationFilterChildConfigurationType { get; set; }
        /// <summary>
        /// The list of child configuration hierarchy customer wants to filter for the given configuration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of child configuration hierarchy customer wants to filter for the given configuration.",
        SerializedName = @"hierarchyInformations",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IHierarchyInformation) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IHierarchyInformation[] ChildConfigurationFilterHierarchyInformation { get; set; }
        /// <summary>Filters specific to product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Filters specific to product.",
        SerializedName = @"filterableProperty",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IFilterableProperty) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IFilterableProperty[] ConfigurationFilterFilterableProperty { get; set; }
        /// <summary>Location placement Id of a subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Location placement Id of a subscription.",
        SerializedName = @"locationPlacementId",
        PossibleTypes = new [] { typeof(string) })]
        string CustomerSubscriptionDetailLocationPlacementId { get; set; }
        /// <summary>Quota ID of a subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Quota ID of a subscription.",
        SerializedName = @"quotaId",
        PossibleTypes = new [] { typeof(string) })]
        string CustomerSubscriptionDetailQuotaId { get; set; }
        /// <summary>List of registered feature flags for subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of registered feature flags for subscription.",
        SerializedName = @"registeredFeatures",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.ICustomerSubscriptionRegisteredFeatures) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.ICustomerSubscriptionRegisteredFeatures[] CustomerSubscriptionDetailRegisteredFeature { get; set; }
        /// <summary>Represents configuration name that uniquely identifies configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents configuration name that uniquely identifies configuration.",
        SerializedName = @"configurationName",
        PossibleTypes = new [] { typeof(string) })]
        string HierarchyInformationConfigurationName { get; set; }
        /// <summary>Represents product family name that uniquely identifies product family.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents product family name that uniquely identifies product family.",
        SerializedName = @"productFamilyName",
        PossibleTypes = new [] { typeof(string) })]
        string HierarchyInformationProductFamilyName { get; set; }
        /// <summary>Represents product line name that uniquely identifies product line.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents product line name that uniquely identifies product line.",
        SerializedName = @"productLineName",
        PossibleTypes = new [] { typeof(string) })]
        string HierarchyInformationProductLineName { get; set; }
        /// <summary>Represents product name that uniquely identifies product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents product name that uniquely identifies product.",
        SerializedName = @"productName",
        PossibleTypes = new [] { typeof(string) })]
        string HierarchyInformationProductName { get; set; }

    }
    /// Configuration request object.
    internal partial interface IConfigurationsRequestInternal

    {
        /// <summary>
        /// Filter to fetch all child configurations belonging to the given list of configuration types.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ChildConfigurationType[] ChildConfigurationFilterChildConfigurationType { get; set; }
        /// <summary>
        /// The list of child configuration hierarchy customer wants to filter for the given configuration.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IHierarchyInformation[] ChildConfigurationFilterHierarchyInformation { get; set; }
        /// <summary>Holds details about product hierarchy information and filterable property.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IConfigurationFilter ConfigurationFilter { get; set; }
        /// <summary>
        /// Filter to fetch specific child configurations that exist in the configuration. This must be passed to either fetch a list
        /// of specific child configurations, or all child configurations of specific types of child configurations.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IChildConfigurationFilter ConfigurationFilterChildConfigurationFilter { get; set; }
        /// <summary>Filters specific to product.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IFilterableProperty[] ConfigurationFilterFilterableProperty { get; set; }
        /// <summary>Product hierarchy information.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IHierarchyInformation ConfigurationFilterHierarchyInformation { get; set; }
        /// <summary>
        /// Customer subscription properties. Clients can display available products to unregistered customers by explicitly passing
        /// subscription details.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.ICustomerSubscriptionDetails CustomerSubscriptionDetail { get; set; }
        /// <summary>Location placement Id of a subscription.</summary>
        string CustomerSubscriptionDetailLocationPlacementId { get; set; }
        /// <summary>Quota ID of a subscription.</summary>
        string CustomerSubscriptionDetailQuotaId { get; set; }
        /// <summary>List of registered feature flags for subscription.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.ICustomerSubscriptionRegisteredFeatures[] CustomerSubscriptionDetailRegisteredFeature { get; set; }
        /// <summary>Represents configuration name that uniquely identifies configuration.</summary>
        string HierarchyInformationConfigurationName { get; set; }
        /// <summary>Represents product family name that uniquely identifies product family.</summary>
        string HierarchyInformationProductFamilyName { get; set; }
        /// <summary>Represents product line name that uniquely identifies product line.</summary>
        string HierarchyInformationProductLineName { get; set; }
        /// <summary>Represents product name that uniquely identifies product.</summary>
        string HierarchyInformationProductName { get; set; }

    }
}