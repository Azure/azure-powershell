// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Extensions;

    /// <summary>Order item details.</summary>
    public partial class OrderItemDetails :
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IOrderItemDetails,
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IOrderItemDetailsInternal
    {

        /// <summary>The error additional info.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20.IErrorAdditionalInfo[] AdditionalInfo { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20.IErrorDetailInternal)Error).AdditionalInfo; }

        /// <summary>Backing field for <see cref="CancellationReason" /> property.</summary>
        private string _cancellationReason;

        /// <summary>Cancellation reason.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        public string CancellationReason { get => this._cancellationReason; }

        /// <summary>Backing field for <see cref="CancellationStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.OrderItemCancellationEnum? _cancellationStatus;

        /// <summary>Describes whether the order item is cancellable or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.OrderItemCancellationEnum? CancellationStatus { get => this._cancellationStatus; }

        /// <summary>The error code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string Code { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20.IErrorDetailInternal)Error).Code; }

        /// <summary>Backing field for <see cref="CurrentStage" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IStageDetails _currentStage;

        /// <summary>Current Order item Status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IStageDetails CurrentStage { get => (this._currentStage = this._currentStage ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.StageDetails()); }

        /// <summary>Display name of the resource stage.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string CurrentStageDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IStageDetailsInternal)CurrentStage).DisplayName; }

        /// <summary>Stage name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.StageName? CurrentStageName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IStageDetailsInternal)CurrentStage).StageName; }

        /// <summary>Stage start time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public global::System.DateTime? CurrentStageStartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IStageDetailsInternal)CurrentStage).StartTime; }

        /// <summary>Stage status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.StageStatus? CurrentStageStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IStageDetailsInternal)CurrentStage).StageStatus; }

        /// <summary>Backing field for <see cref="DeletionStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ActionStatusEnum? _deletionStatus;

        /// <summary>Describes whether the order item is deletable or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ActionStatusEnum? DeletionStatus { get => this._deletionStatus; }

        /// <summary>The error details.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20.IErrorDetail[] Detail { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20.IErrorDetailInternal)Error).Detail; }

        /// <summary>Configuration display name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string DisplayInfoConfigurationDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal)ProductDetail).DisplayInfoConfigurationDisplayName; }

        /// <summary>Product family display name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string DisplayInfoProductFamilyDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal)ProductDetail).DisplayInfoProductFamilyDisplayName; }

        /// <summary>
        /// Double encryption status as entered by the customer. It is compulsory to give this parameter if the 'Deny' or 'Disabled'
        /// policy is configured.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DoubleEncryptionStatus? EncryptionPreferenceDoubleEncryptionStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IPreferencesInternal)Preference).EncryptionPreferenceDoubleEncryptionStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IPreferencesInternal)Preference).EncryptionPreferenceDoubleEncryptionStatus = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DoubleEncryptionStatus)""); }

        /// <summary>Backing field for <see cref="Error" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20.IErrorDetail _error;

        /// <summary>Top level error for the job.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20.IErrorDetail Error { get => (this._error = this._error ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20.ErrorDetail()); }

        /// <summary>Backing field for <see cref="ForwardShippingDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IForwardShippingDetails _forwardShippingDetail;

        /// <summary>Forward Package Shipping details.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IForwardShippingDetails ForwardShippingDetail { get => (this._forwardShippingDetail = this._forwardShippingDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.ForwardShippingDetails()); }

        /// <summary>Carrier Name for display purpose. Not to be used for any processing.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string ForwardShippingDetailCarrierDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IForwardShippingDetailsInternal)ForwardShippingDetail).CarrierDisplayName; }

        /// <summary>Name of the carrier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string ForwardShippingDetailCarrierName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IForwardShippingDetailsInternal)ForwardShippingDetail).CarrierName; }

        /// <summary>TrackingId of the package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string ForwardShippingDetailTrackingId { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IForwardShippingDetailsInternal)ForwardShippingDetail).TrackingId; }

        /// <summary>TrackingUrl of the package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string ForwardShippingDetailTrackingUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IForwardShippingDetailsInternal)ForwardShippingDetail).TrackingUrl; }

        /// <summary>Represents configuration name that uniquely identifies configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string HierarchyInformationConfigurationName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal)ProductDetail).HierarchyInformationConfigurationName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal)ProductDetail).HierarchyInformationConfigurationName = value ?? null; }

        /// <summary>Represents product family name that uniquely identifies product family.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string HierarchyInformationProductFamilyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal)ProductDetail).HierarchyInformationProductFamilyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal)ProductDetail).HierarchyInformationProductFamilyName = value ?? null; }

        /// <summary>Represents product line name that uniquely identifies product line.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string HierarchyInformationProductLineName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal)ProductDetail).HierarchyInformationProductLineName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal)ProductDetail).HierarchyInformationProductLineName = value ?? null; }

        /// <summary>Represents product name that uniquely identifies product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string HierarchyInformationProductName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal)ProductDetail).HierarchyInformationProductName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal)ProductDetail).HierarchyInformationProductName = value ?? null; }

        /// <summary>Customer preferred Management resource ARM ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string ManagementResourcePreferencePreferredManagementResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IPreferencesInternal)Preference).ManagementResourcePreferencePreferredManagementResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IPreferencesInternal)Preference).ManagementResourcePreferencePreferredManagementResourceId = value ?? null; }

        /// <summary>Backing field for <see cref="ManagementRpDetailsList" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IResourceProviderDetails[] _managementRpDetailsList;

        /// <summary>List of parent RP details supported for configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IResourceProviderDetails[] ManagementRpDetailsList { get => this._managementRpDetailsList; }

        /// <summary>The error message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string Message { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20.IErrorDetailInternal)Error).Message; }

        /// <summary>Internal Acessors for AdditionalInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20.IErrorAdditionalInfo[] Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IOrderItemDetailsInternal.AdditionalInfo { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20.IErrorDetailInternal)Error).AdditionalInfo; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20.IErrorDetailInternal)Error).AdditionalInfo = value; }

        /// <summary>Internal Acessors for CancellationReason</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IOrderItemDetailsInternal.CancellationReason { get => this._cancellationReason; set { {_cancellationReason = value;} } }

        /// <summary>Internal Acessors for CancellationStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.OrderItemCancellationEnum? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IOrderItemDetailsInternal.CancellationStatus { get => this._cancellationStatus; set { {_cancellationStatus = value;} } }

        /// <summary>Internal Acessors for Code</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IOrderItemDetailsInternal.Code { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20.IErrorDetailInternal)Error).Code; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20.IErrorDetailInternal)Error).Code = value; }

        /// <summary>Internal Acessors for CurrentStage</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IStageDetails Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IOrderItemDetailsInternal.CurrentStage { get => (this._currentStage = this._currentStage ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.StageDetails()); set { {_currentStage = value;} } }

        /// <summary>Internal Acessors for CurrentStageDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IOrderItemDetailsInternal.CurrentStageDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IStageDetailsInternal)CurrentStage).DisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IStageDetailsInternal)CurrentStage).DisplayName = value; }

        /// <summary>Internal Acessors for CurrentStageName</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.StageName? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IOrderItemDetailsInternal.CurrentStageName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IStageDetailsInternal)CurrentStage).StageName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IStageDetailsInternal)CurrentStage).StageName = value; }

        /// <summary>Internal Acessors for CurrentStageStartTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IOrderItemDetailsInternal.CurrentStageStartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IStageDetailsInternal)CurrentStage).StartTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IStageDetailsInternal)CurrentStage).StartTime = value; }

        /// <summary>Internal Acessors for CurrentStageStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.StageStatus? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IOrderItemDetailsInternal.CurrentStageStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IStageDetailsInternal)CurrentStage).StageStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IStageDetailsInternal)CurrentStage).StageStatus = value; }

        /// <summary>Internal Acessors for DeletionStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ActionStatusEnum? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IOrderItemDetailsInternal.DeletionStatus { get => this._deletionStatus; set { {_deletionStatus = value;} } }

        /// <summary>Internal Acessors for Detail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20.IErrorDetail[] Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IOrderItemDetailsInternal.Detail { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20.IErrorDetailInternal)Error).Detail; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20.IErrorDetailInternal)Error).Detail = value; }

        /// <summary>Internal Acessors for DisplayInfoConfigurationDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IOrderItemDetailsInternal.DisplayInfoConfigurationDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal)ProductDetail).DisplayInfoConfigurationDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal)ProductDetail).DisplayInfoConfigurationDisplayName = value; }

        /// <summary>Internal Acessors for DisplayInfoProductFamilyDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IOrderItemDetailsInternal.DisplayInfoProductFamilyDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal)ProductDetail).DisplayInfoProductFamilyDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal)ProductDetail).DisplayInfoProductFamilyDisplayName = value; }

        /// <summary>Internal Acessors for Error</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20.IErrorDetail Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IOrderItemDetailsInternal.Error { get => (this._error = this._error ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20.ErrorDetail()); set { {_error = value;} } }

        /// <summary>Internal Acessors for ForwardShippingDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IForwardShippingDetails Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IOrderItemDetailsInternal.ForwardShippingDetail { get => (this._forwardShippingDetail = this._forwardShippingDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.ForwardShippingDetails()); set { {_forwardShippingDetail = value;} } }

        /// <summary>Internal Acessors for ForwardShippingDetailCarrierDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IOrderItemDetailsInternal.ForwardShippingDetailCarrierDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IForwardShippingDetailsInternal)ForwardShippingDetail).CarrierDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IForwardShippingDetailsInternal)ForwardShippingDetail).CarrierDisplayName = value; }

        /// <summary>Internal Acessors for ForwardShippingDetailCarrierName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IOrderItemDetailsInternal.ForwardShippingDetailCarrierName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IForwardShippingDetailsInternal)ForwardShippingDetail).CarrierName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IForwardShippingDetailsInternal)ForwardShippingDetail).CarrierName = value; }

        /// <summary>Internal Acessors for ForwardShippingDetailTrackingId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IOrderItemDetailsInternal.ForwardShippingDetailTrackingId { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IForwardShippingDetailsInternal)ForwardShippingDetail).TrackingId; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IForwardShippingDetailsInternal)ForwardShippingDetail).TrackingId = value; }

        /// <summary>Internal Acessors for ForwardShippingDetailTrackingUrl</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IOrderItemDetailsInternal.ForwardShippingDetailTrackingUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IForwardShippingDetailsInternal)ForwardShippingDetail).TrackingUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IForwardShippingDetailsInternal)ForwardShippingDetail).TrackingUrl = value; }

        /// <summary>Internal Acessors for ManagementRpDetailsList</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IResourceProviderDetails[] Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IOrderItemDetailsInternal.ManagementRpDetailsList { get => this._managementRpDetailsList; set { {_managementRpDetailsList = value;} } }

        /// <summary>Internal Acessors for Message</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IOrderItemDetailsInternal.Message { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20.IErrorDetailInternal)Error).Message; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20.IErrorDetailInternal)Error).Message = value; }

        /// <summary>Internal Acessors for OrderItemStageHistory</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IStageDetails[] Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IOrderItemDetailsInternal.OrderItemStageHistory { get => this._orderItemStageHistory; set { {_orderItemStageHistory = value;} } }

        /// <summary>Internal Acessors for ParentDeviceDetailManagementResourceId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IOrderItemDetailsInternal.ParentDeviceDetailManagementResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal)ProductDetail).ParentDeviceDetailManagementResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal)ProductDetail).ParentDeviceDetailManagementResourceId = value; }

        /// <summary>Internal Acessors for ParentDeviceDetailManagementResourceTenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IOrderItemDetailsInternal.ParentDeviceDetailManagementResourceTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal)ProductDetail).ParentDeviceDetailManagementResourceTenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal)ProductDetail).ParentDeviceDetailManagementResourceTenantId = value; }

        /// <summary>Internal Acessors for ParentDeviceDetailSerialNumber</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IOrderItemDetailsInternal.ParentDeviceDetailSerialNumber { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal)ProductDetail).ParentDeviceDetailSerialNumber; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal)ProductDetail).ParentDeviceDetailSerialNumber = value; }

        /// <summary>Internal Acessors for Preference</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IPreferences Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IOrderItemDetailsInternal.Preference { get => (this._preference = this._preference ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.Preferences()); set { {_preference = value;} } }

        /// <summary>Internal Acessors for PreferenceEncryptionPreference</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IEncryptionPreferences Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IOrderItemDetailsInternal.PreferenceEncryptionPreference { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IPreferencesInternal)Preference).EncryptionPreference; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IPreferencesInternal)Preference).EncryptionPreference = value; }

        /// <summary>Internal Acessors for PreferenceManagementResourcePreference</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IManagementResourcePreferences Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IOrderItemDetailsInternal.PreferenceManagementResourcePreference { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IPreferencesInternal)Preference).ManagementResourcePreference; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IPreferencesInternal)Preference).ManagementResourcePreference = value; }

        /// <summary>Internal Acessors for PreferenceTransportPreference</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.ITransportPreferences Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IOrderItemDetailsInternal.PreferenceTransportPreference { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IPreferencesInternal)Preference).TransportPreference; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IPreferencesInternal)Preference).TransportPreference = value; }

        /// <summary>Internal Acessors for ProductDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetails Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IOrderItemDetailsInternal.ProductDetail { get => (this._productDetail = this._productDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.ProductDetails()); set { {_productDetail = value;} } }

        /// <summary>Internal Acessors for ProductDetailChildConfigurationDeviceDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IConfigurationDeviceDetails[] Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IOrderItemDetailsInternal.ProductDetailChildConfigurationDeviceDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal)ProductDetail).ChildConfigurationDeviceDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal)ProductDetail).ChildConfigurationDeviceDetail = value; }

        /// <summary>Internal Acessors for ProductDetailDisplayInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IDisplayInfo Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IOrderItemDetailsInternal.ProductDetailDisplayInfo { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal)ProductDetail).DisplayInfo; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal)ProductDetail).DisplayInfo = value; }

        /// <summary>Internal Acessors for ProductDetailHierarchyInformation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IHierarchyInformation Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IOrderItemDetailsInternal.ProductDetailHierarchyInformation { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal)ProductDetail).HierarchyInformation; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal)ProductDetail).HierarchyInformation = value; }

        /// <summary>Internal Acessors for ProductDetailIdentificationType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.IdentificationType? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IOrderItemDetailsInternal.ProductDetailIdentificationType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal)ProductDetail).IdentificationType; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal)ProductDetail).IdentificationType = value; }

        /// <summary>Internal Acessors for ProductDetailParentDeviceDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IDeviceDetails Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IOrderItemDetailsInternal.ProductDetailParentDeviceDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal)ProductDetail).ParentDeviceDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal)ProductDetail).ParentDeviceDetail = value; }

        /// <summary>Internal Acessors for ProductDetailProductDoubleEncryptionStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DoubleEncryptionStatus? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IOrderItemDetailsInternal.ProductDetailProductDoubleEncryptionStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal)ProductDetail).ProductDoubleEncryptionStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal)ProductDetail).ProductDoubleEncryptionStatus = value; }

        /// <summary>Internal Acessors for ReturnReason</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IOrderItemDetailsInternal.ReturnReason { get => this._returnReason; set { {_returnReason = value;} } }

        /// <summary>Internal Acessors for ReturnStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.OrderItemReturnEnum? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IOrderItemDetailsInternal.ReturnStatus { get => this._returnStatus; set { {_returnStatus = value;} } }

        /// <summary>Internal Acessors for ReverseShippingDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IReverseShippingDetails Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IOrderItemDetailsInternal.ReverseShippingDetail { get => (this._reverseShippingDetail = this._reverseShippingDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.ReverseShippingDetails()); set { {_reverseShippingDetail = value;} } }

        /// <summary>Internal Acessors for ReverseShippingDetailCarrierDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IOrderItemDetailsInternal.ReverseShippingDetailCarrierDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IReverseShippingDetailsInternal)ReverseShippingDetail).CarrierDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IReverseShippingDetailsInternal)ReverseShippingDetail).CarrierDisplayName = value; }

        /// <summary>Internal Acessors for ReverseShippingDetailCarrierName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IOrderItemDetailsInternal.ReverseShippingDetailCarrierName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IReverseShippingDetailsInternal)ReverseShippingDetail).CarrierName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IReverseShippingDetailsInternal)ReverseShippingDetail).CarrierName = value; }

        /// <summary>Internal Acessors for ReverseShippingDetailSasKeyForLabel</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IOrderItemDetailsInternal.ReverseShippingDetailSasKeyForLabel { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IReverseShippingDetailsInternal)ReverseShippingDetail).SasKeyForLabel; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IReverseShippingDetailsInternal)ReverseShippingDetail).SasKeyForLabel = value; }

        /// <summary>Internal Acessors for ReverseShippingDetailTrackingId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IOrderItemDetailsInternal.ReverseShippingDetailTrackingId { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IReverseShippingDetailsInternal)ReverseShippingDetail).TrackingId; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IReverseShippingDetailsInternal)ReverseShippingDetail).TrackingId = value; }

        /// <summary>Internal Acessors for ReverseShippingDetailTrackingUrl</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IOrderItemDetailsInternal.ReverseShippingDetailTrackingUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IReverseShippingDetailsInternal)ReverseShippingDetail).TrackingUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IReverseShippingDetailsInternal)ReverseShippingDetail).TrackingUrl = value; }

        /// <summary>Internal Acessors for Target</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IOrderItemDetailsInternal.Target { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20.IErrorDetailInternal)Error).Target; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20.IErrorDetailInternal)Error).Target = value; }

        /// <summary>Backing field for <see cref="NotificationEmailList" /> property.</summary>
        private string[] _notificationEmailList;

        /// <summary>Additional notification email list.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        public string[] NotificationEmailList { get => this._notificationEmailList; set => this._notificationEmailList = value; }

        /// <summary>Backing field for <see cref="OrderItemMode" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.OrderMode? _orderItemMode;

        /// <summary>Defines the mode of the Order item.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.OrderMode? OrderItemMode { get => this._orderItemMode; set => this._orderItemMode = value; }

        /// <summary>Backing field for <see cref="OrderItemStageHistory" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IStageDetails[] _orderItemStageHistory;

        /// <summary>Order item status history.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IStageDetails[] OrderItemStageHistory { get => this._orderItemStageHistory; }

        /// <summary>Backing field for <see cref="OrderItemType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.OrderItemType _orderItemType;

        /// <summary>Order item type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.OrderItemType OrderItemType { get => this._orderItemType; set => this._orderItemType = value; }

        /// <summary>Management Resource Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string ParentDeviceDetailManagementResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal)ProductDetail).ParentDeviceDetailManagementResourceId; }

        /// <summary>Management Resource Tenant ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string ParentDeviceDetailManagementResourceTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal)ProductDetail).ParentDeviceDetailManagementResourceTenantId; }

        /// <summary>Device serial number.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string ParentDeviceDetailSerialNumber { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal)ProductDetail).ParentDeviceDetailSerialNumber; }

        /// <summary>Backing field for <see cref="Preference" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IPreferences _preference;

        /// <summary>Customer notification Preferences.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IPreferences Preference { get => (this._preference = this._preference ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.Preferences()); set => this._preference = value; }

        /// <summary>Notification preferences.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.INotificationPreference[] PreferenceNotificationPreference { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IPreferencesInternal)Preference).NotificationPreference; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IPreferencesInternal)Preference).NotificationPreference = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="ProductDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetails _productDetail;

        /// <summary>Unique identifier for configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetails ProductDetail { get => (this._productDetail = this._productDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.ProductDetails()); set => this._productDetail = value; }

        /// <summary>Details of all child configurations that are part of the order item.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IConfigurationDeviceDetails[] ProductDetailChildConfigurationDeviceDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal)ProductDetail).ChildConfigurationDeviceDetail; }

        /// <summary>Identification type of the configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.IdentificationType? ProductDetailIdentificationType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal)ProductDetail).IdentificationType; }

        /// <summary>
        /// List of additional configurations customer wants in the order item apart from the ones included in the base configuration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IAdditionalConfiguration[] ProductDetailOptInAdditionalConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal)ProductDetail).OptInAdditionalConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal)ProductDetail).OptInAdditionalConfiguration = value ?? null /* arrayOf */; }

        /// <summary>Double encryption status of the configuration. Read-only field.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DoubleEncryptionStatus? ProductDetailProductDoubleEncryptionStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal)ProductDetail).ProductDoubleEncryptionStatus; }

        /// <summary>Backing field for <see cref="ReturnReason" /> property.</summary>
        private string _returnReason;

        /// <summary>Return reason.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        public string ReturnReason { get => this._returnReason; }

        /// <summary>Backing field for <see cref="ReturnStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.OrderItemReturnEnum? _returnStatus;

        /// <summary>Describes whether the order item is returnable or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.OrderItemReturnEnum? ReturnStatus { get => this._returnStatus; }

        /// <summary>Backing field for <see cref="ReverseShippingDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IReverseShippingDetails _reverseShippingDetail;

        /// <summary>Reverse Package Shipping details.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IReverseShippingDetails ReverseShippingDetail { get => (this._reverseShippingDetail = this._reverseShippingDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.ReverseShippingDetails()); }

        /// <summary>Carrier Name for display purpose. Not to be used for any processing.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string ReverseShippingDetailCarrierDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IReverseShippingDetailsInternal)ReverseShippingDetail).CarrierDisplayName; }

        /// <summary>Name of the carrier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string ReverseShippingDetailCarrierName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IReverseShippingDetailsInternal)ReverseShippingDetail).CarrierName; }

        /// <summary>SAS key to download the reverse shipment label of the package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string ReverseShippingDetailSasKeyForLabel { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IReverseShippingDetailsInternal)ReverseShippingDetail).SasKeyForLabel; }

        /// <summary>TrackingId of the package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string ReverseShippingDetailTrackingId { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IReverseShippingDetailsInternal)ReverseShippingDetail).TrackingId; }

        /// <summary>TrackingUrl of the package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string ReverseShippingDetailTrackingUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IReverseShippingDetailsInternal)ReverseShippingDetail).TrackingUrl; }

        /// <summary>The error target.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string Target { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20.IErrorDetailInternal)Error).Target; }

        /// <summary>Indicates Shipment Logistics type that the customer preferred.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.TransportShipmentTypes? TransportPreferencePreferredShipmentType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IPreferencesInternal)Preference).TransportPreferencePreferredShipmentType; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IPreferencesInternal)Preference).TransportPreferencePreferredShipmentType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.TransportShipmentTypes)""); }

        /// <summary>Creates an new <see cref="OrderItemDetails" /> instance.</summary>
        public OrderItemDetails()
        {

        }
    }
    /// Order item details.
    public partial interface IOrderItemDetails :
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.IJsonSerializable
    {
        /// <summary>The error additional info.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The error additional info.",
        SerializedName = @"additionalInfo",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20.IErrorAdditionalInfo) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20.IErrorAdditionalInfo[] AdditionalInfo { get;  }
        /// <summary>Cancellation reason.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Cancellation reason.",
        SerializedName = @"cancellationReason",
        PossibleTypes = new [] { typeof(string) })]
        string CancellationReason { get;  }
        /// <summary>Describes whether the order item is cancellable or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Describes whether the order item is cancellable or not.",
        SerializedName = @"cancellationStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.OrderItemCancellationEnum) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.OrderItemCancellationEnum? CancellationStatus { get;  }
        /// <summary>The error code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The error code.",
        SerializedName = @"code",
        PossibleTypes = new [] { typeof(string) })]
        string Code { get;  }
        /// <summary>Display name of the resource stage.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Display name of the resource stage.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string CurrentStageDisplayName { get;  }
        /// <summary>Stage name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Stage name.",
        SerializedName = @"stageName",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.StageName) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.StageName? CurrentStageName { get;  }
        /// <summary>Stage start time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Stage start time.",
        SerializedName = @"startTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CurrentStageStartTime { get;  }
        /// <summary>Stage status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Stage status.",
        SerializedName = @"stageStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.StageStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.StageStatus? CurrentStageStatus { get;  }
        /// <summary>Describes whether the order item is deletable or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Describes whether the order item is deletable or not.",
        SerializedName = @"deletionStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ActionStatusEnum) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ActionStatusEnum? DeletionStatus { get;  }
        /// <summary>The error details.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The error details.",
        SerializedName = @"details",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20.IErrorDetail) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20.IErrorDetail[] Detail { get;  }
        /// <summary>Configuration display name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Configuration display name.",
        SerializedName = @"configurationDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayInfoConfigurationDisplayName { get;  }
        /// <summary>Product family display name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Product family display name.",
        SerializedName = @"productFamilyDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayInfoProductFamilyDisplayName { get;  }
        /// <summary>
        /// Double encryption status as entered by the customer. It is compulsory to give this parameter if the 'Deny' or 'Disabled'
        /// policy is configured.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Double encryption status as entered by the customer. It is compulsory to give this parameter if the 'Deny' or 'Disabled' policy is configured.",
        SerializedName = @"doubleEncryptionStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DoubleEncryptionStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DoubleEncryptionStatus? EncryptionPreferenceDoubleEncryptionStatus { get; set; }
        /// <summary>Carrier Name for display purpose. Not to be used for any processing.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Carrier Name for display purpose. Not to be used for any processing.",
        SerializedName = @"carrierDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string ForwardShippingDetailCarrierDisplayName { get;  }
        /// <summary>Name of the carrier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Name of the carrier.",
        SerializedName = @"carrierName",
        PossibleTypes = new [] { typeof(string) })]
        string ForwardShippingDetailCarrierName { get;  }
        /// <summary>TrackingId of the package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"TrackingId of the package.",
        SerializedName = @"trackingId",
        PossibleTypes = new [] { typeof(string) })]
        string ForwardShippingDetailTrackingId { get;  }
        /// <summary>TrackingUrl of the package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"TrackingUrl of the package.",
        SerializedName = @"trackingUrl",
        PossibleTypes = new [] { typeof(string) })]
        string ForwardShippingDetailTrackingUrl { get;  }
        /// <summary>Represents configuration name that uniquely identifies configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents configuration name that uniquely identifies configuration.",
        SerializedName = @"configurationName",
        PossibleTypes = new [] { typeof(string) })]
        string HierarchyInformationConfigurationName { get; set; }
        /// <summary>Represents product family name that uniquely identifies product family.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents product family name that uniquely identifies product family.",
        SerializedName = @"productFamilyName",
        PossibleTypes = new [] { typeof(string) })]
        string HierarchyInformationProductFamilyName { get; set; }
        /// <summary>Represents product line name that uniquely identifies product line.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents product line name that uniquely identifies product line.",
        SerializedName = @"productLineName",
        PossibleTypes = new [] { typeof(string) })]
        string HierarchyInformationProductLineName { get; set; }
        /// <summary>Represents product name that uniquely identifies product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents product name that uniquely identifies product.",
        SerializedName = @"productName",
        PossibleTypes = new [] { typeof(string) })]
        string HierarchyInformationProductName { get; set; }
        /// <summary>Customer preferred Management resource ARM ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Customer preferred Management resource ARM ID.",
        SerializedName = @"preferredManagementResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string ManagementResourcePreferencePreferredManagementResourceId { get; set; }
        /// <summary>List of parent RP details supported for configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of parent RP details supported for configuration.",
        SerializedName = @"managementRpDetailsList",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IResourceProviderDetails) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IResourceProviderDetails[] ManagementRpDetailsList { get;  }
        /// <summary>The error message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The error message.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string Message { get;  }
        /// <summary>Additional notification email list.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Additional notification email list.",
        SerializedName = @"notificationEmailList",
        PossibleTypes = new [] { typeof(string) })]
        string[] NotificationEmailList { get; set; }
        /// <summary>Defines the mode of the Order item.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Defines the mode of the Order item.",
        SerializedName = @"orderItemMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.OrderMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.OrderMode? OrderItemMode { get; set; }
        /// <summary>Order item status history.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Order item status history.",
        SerializedName = @"orderItemStageHistory",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IStageDetails) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IStageDetails[] OrderItemStageHistory { get;  }
        /// <summary>Order item type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Order item type.",
        SerializedName = @"orderItemType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.OrderItemType) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.OrderItemType OrderItemType { get; set; }
        /// <summary>Management Resource Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Management Resource Id.",
        SerializedName = @"managementResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string ParentDeviceDetailManagementResourceId { get;  }
        /// <summary>Management Resource Tenant ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Management Resource Tenant ID.",
        SerializedName = @"managementResourceTenantId",
        PossibleTypes = new [] { typeof(string) })]
        string ParentDeviceDetailManagementResourceTenantId { get;  }
        /// <summary>Device serial number.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Device serial number.",
        SerializedName = @"serialNumber",
        PossibleTypes = new [] { typeof(string) })]
        string ParentDeviceDetailSerialNumber { get;  }
        /// <summary>Notification preferences.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Notification preferences.",
        SerializedName = @"notificationPreferences",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.INotificationPreference) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.INotificationPreference[] PreferenceNotificationPreference { get; set; }
        /// <summary>Details of all child configurations that are part of the order item.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Details of all child configurations that are part of the order item.",
        SerializedName = @"childConfigurationDeviceDetails",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IConfigurationDeviceDetails) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IConfigurationDeviceDetails[] ProductDetailChildConfigurationDeviceDetail { get;  }
        /// <summary>Identification type of the configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Identification type of the configuration.",
        SerializedName = @"identificationType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.IdentificationType) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.IdentificationType? ProductDetailIdentificationType { get;  }
        /// <summary>
        /// List of additional configurations customer wants in the order item apart from the ones included in the base configuration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of additional configurations customer wants in the order item apart from the ones included in the base configuration.",
        SerializedName = @"optInAdditionalConfigurations",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IAdditionalConfiguration) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IAdditionalConfiguration[] ProductDetailOptInAdditionalConfiguration { get; set; }
        /// <summary>Double encryption status of the configuration. Read-only field.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Double encryption status of the configuration. Read-only field.",
        SerializedName = @"productDoubleEncryptionStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DoubleEncryptionStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DoubleEncryptionStatus? ProductDetailProductDoubleEncryptionStatus { get;  }
        /// <summary>Return reason.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Return reason.",
        SerializedName = @"returnReason",
        PossibleTypes = new [] { typeof(string) })]
        string ReturnReason { get;  }
        /// <summary>Describes whether the order item is returnable or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Describes whether the order item is returnable or not.",
        SerializedName = @"returnStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.OrderItemReturnEnum) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.OrderItemReturnEnum? ReturnStatus { get;  }
        /// <summary>Carrier Name for display purpose. Not to be used for any processing.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Carrier Name for display purpose. Not to be used for any processing.",
        SerializedName = @"carrierDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string ReverseShippingDetailCarrierDisplayName { get;  }
        /// <summary>Name of the carrier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Name of the carrier.",
        SerializedName = @"carrierName",
        PossibleTypes = new [] { typeof(string) })]
        string ReverseShippingDetailCarrierName { get;  }
        /// <summary>SAS key to download the reverse shipment label of the package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"SAS key to download the reverse shipment label of the package.",
        SerializedName = @"sasKeyForLabel",
        PossibleTypes = new [] { typeof(string) })]
        string ReverseShippingDetailSasKeyForLabel { get;  }
        /// <summary>TrackingId of the package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"TrackingId of the package.",
        SerializedName = @"trackingId",
        PossibleTypes = new [] { typeof(string) })]
        string ReverseShippingDetailTrackingId { get;  }
        /// <summary>TrackingUrl of the package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"TrackingUrl of the package.",
        SerializedName = @"trackingUrl",
        PossibleTypes = new [] { typeof(string) })]
        string ReverseShippingDetailTrackingUrl { get;  }
        /// <summary>The error target.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The error target.",
        SerializedName = @"target",
        PossibleTypes = new [] { typeof(string) })]
        string Target { get;  }
        /// <summary>Indicates Shipment Logistics type that the customer preferred.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates Shipment Logistics type that the customer preferred.",
        SerializedName = @"preferredShipmentType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.TransportShipmentTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.TransportShipmentTypes? TransportPreferencePreferredShipmentType { get; set; }

    }
    /// Order item details.
    internal partial interface IOrderItemDetailsInternal

    {
        /// <summary>The error additional info.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20.IErrorAdditionalInfo[] AdditionalInfo { get; set; }
        /// <summary>Cancellation reason.</summary>
        string CancellationReason { get; set; }
        /// <summary>Describes whether the order item is cancellable or not.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.OrderItemCancellationEnum? CancellationStatus { get; set; }
        /// <summary>The error code.</summary>
        string Code { get; set; }
        /// <summary>Current Order item Status.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IStageDetails CurrentStage { get; set; }
        /// <summary>Display name of the resource stage.</summary>
        string CurrentStageDisplayName { get; set; }
        /// <summary>Stage name.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.StageName? CurrentStageName { get; set; }
        /// <summary>Stage start time.</summary>
        global::System.DateTime? CurrentStageStartTime { get; set; }
        /// <summary>Stage status.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.StageStatus? CurrentStageStatus { get; set; }
        /// <summary>Describes whether the order item is deletable or not.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ActionStatusEnum? DeletionStatus { get; set; }
        /// <summary>The error details.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20.IErrorDetail[] Detail { get; set; }
        /// <summary>Configuration display name.</summary>
        string DisplayInfoConfigurationDisplayName { get; set; }
        /// <summary>Product family display name.</summary>
        string DisplayInfoProductFamilyDisplayName { get; set; }
        /// <summary>
        /// Double encryption status as entered by the customer. It is compulsory to give this parameter if the 'Deny' or 'Disabled'
        /// policy is configured.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DoubleEncryptionStatus? EncryptionPreferenceDoubleEncryptionStatus { get; set; }
        /// <summary>Top level error for the job.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20.IErrorDetail Error { get; set; }
        /// <summary>Forward Package Shipping details.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IForwardShippingDetails ForwardShippingDetail { get; set; }
        /// <summary>Carrier Name for display purpose. Not to be used for any processing.</summary>
        string ForwardShippingDetailCarrierDisplayName { get; set; }
        /// <summary>Name of the carrier.</summary>
        string ForwardShippingDetailCarrierName { get; set; }
        /// <summary>TrackingId of the package.</summary>
        string ForwardShippingDetailTrackingId { get; set; }
        /// <summary>TrackingUrl of the package.</summary>
        string ForwardShippingDetailTrackingUrl { get; set; }
        /// <summary>Represents configuration name that uniquely identifies configuration.</summary>
        string HierarchyInformationConfigurationName { get; set; }
        /// <summary>Represents product family name that uniquely identifies product family.</summary>
        string HierarchyInformationProductFamilyName { get; set; }
        /// <summary>Represents product line name that uniquely identifies product line.</summary>
        string HierarchyInformationProductLineName { get; set; }
        /// <summary>Represents product name that uniquely identifies product.</summary>
        string HierarchyInformationProductName { get; set; }
        /// <summary>Customer preferred Management resource ARM ID.</summary>
        string ManagementResourcePreferencePreferredManagementResourceId { get; set; }
        /// <summary>List of parent RP details supported for configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IResourceProviderDetails[] ManagementRpDetailsList { get; set; }
        /// <summary>The error message.</summary>
        string Message { get; set; }
        /// <summary>Additional notification email list.</summary>
        string[] NotificationEmailList { get; set; }
        /// <summary>Defines the mode of the Order item.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.OrderMode? OrderItemMode { get; set; }
        /// <summary>Order item status history.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IStageDetails[] OrderItemStageHistory { get; set; }
        /// <summary>Order item type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.OrderItemType OrderItemType { get; set; }
        /// <summary>Management Resource Id.</summary>
        string ParentDeviceDetailManagementResourceId { get; set; }
        /// <summary>Management Resource Tenant ID.</summary>
        string ParentDeviceDetailManagementResourceTenantId { get; set; }
        /// <summary>Device serial number.</summary>
        string ParentDeviceDetailSerialNumber { get; set; }
        /// <summary>Customer notification Preferences.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IPreferences Preference { get; set; }
        /// <summary>Preferences related to the Encryption.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IEncryptionPreferences PreferenceEncryptionPreference { get; set; }
        /// <summary>Preferences related to the Management resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IManagementResourcePreferences PreferenceManagementResourcePreference { get; set; }
        /// <summary>Notification preferences.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.INotificationPreference[] PreferenceNotificationPreference { get; set; }
        /// <summary>Preferences related to the shipment logistics of the order.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.ITransportPreferences PreferenceTransportPreference { get; set; }
        /// <summary>Unique identifier for configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetails ProductDetail { get; set; }
        /// <summary>Details of all child configurations that are part of the order item.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IConfigurationDeviceDetails[] ProductDetailChildConfigurationDeviceDetail { get; set; }
        /// <summary>Display details of the product.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IDisplayInfo ProductDetailDisplayInfo { get; set; }
        /// <summary>Hierarchy of the product which uniquely identifies the product.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IHierarchyInformation ProductDetailHierarchyInformation { get; set; }
        /// <summary>Identification type of the configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.IdentificationType? ProductDetailIdentificationType { get; set; }
        /// <summary>
        /// List of additional configurations customer wants in the order item apart from the ones included in the base configuration.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IAdditionalConfiguration[] ProductDetailOptInAdditionalConfiguration { get; set; }
        /// <summary>Device details of the parent configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IDeviceDetails ProductDetailParentDeviceDetail { get; set; }
        /// <summary>Double encryption status of the configuration. Read-only field.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DoubleEncryptionStatus? ProductDetailProductDoubleEncryptionStatus { get; set; }
        /// <summary>Return reason.</summary>
        string ReturnReason { get; set; }
        /// <summary>Describes whether the order item is returnable or not.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.OrderItemReturnEnum? ReturnStatus { get; set; }
        /// <summary>Reverse Package Shipping details.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IReverseShippingDetails ReverseShippingDetail { get; set; }
        /// <summary>Carrier Name for display purpose. Not to be used for any processing.</summary>
        string ReverseShippingDetailCarrierDisplayName { get; set; }
        /// <summary>Name of the carrier.</summary>
        string ReverseShippingDetailCarrierName { get; set; }
        /// <summary>SAS key to download the reverse shipment label of the package.</summary>
        string ReverseShippingDetailSasKeyForLabel { get; set; }
        /// <summary>TrackingId of the package.</summary>
        string ReverseShippingDetailTrackingId { get; set; }
        /// <summary>TrackingUrl of the package.</summary>
        string ReverseShippingDetailTrackingUrl { get; set; }
        /// <summary>The error target.</summary>
        string Target { get; set; }
        /// <summary>Indicates Shipment Logistics type that the customer preferred.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.TransportShipmentTypes? TransportPreferencePreferredShipmentType { get; set; }

    }
}