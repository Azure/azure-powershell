// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Extensions;

    /// <summary>Represents product details.</summary>
    public partial class ProductDetails :
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetails,
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal
    {

        /// <summary>Backing field for <see cref="ChildConfigurationDeviceDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IConfigurationDeviceDetails[] _childConfigurationDeviceDetail;

        /// <summary>Details of all child configurations that are part of the order item.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IConfigurationDeviceDetails[] ChildConfigurationDeviceDetail { get => this._childConfigurationDeviceDetail; }

        /// <summary>Backing field for <see cref="DisplayInfo" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IDisplayInfo _displayInfo;

        /// <summary>Display details of the product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IDisplayInfo DisplayInfo { get => (this._displayInfo = this._displayInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.DisplayInfo()); set => this._displayInfo = value; }

        /// <summary>Configuration display name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string DisplayInfoConfigurationDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IDisplayInfoInternal)DisplayInfo).ConfigurationDisplayName; }

        /// <summary>Product family display name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string DisplayInfoProductFamilyDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IDisplayInfoInternal)DisplayInfo).ProductFamilyDisplayName; }

        /// <summary>Backing field for <see cref="HierarchyInformation" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IHierarchyInformation _hierarchyInformation;

        /// <summary>Hierarchy of the product which uniquely identifies the product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IHierarchyInformation HierarchyInformation { get => (this._hierarchyInformation = this._hierarchyInformation ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.HierarchyInformation()); set => this._hierarchyInformation = value; }

        /// <summary>Represents configuration name that uniquely identifies configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string HierarchyInformationConfigurationName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IHierarchyInformationInternal)HierarchyInformation).ConfigurationName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IHierarchyInformationInternal)HierarchyInformation).ConfigurationName = value ?? null; }

        /// <summary>Represents product family name that uniquely identifies product family.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string HierarchyInformationProductFamilyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IHierarchyInformationInternal)HierarchyInformation).ProductFamilyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IHierarchyInformationInternal)HierarchyInformation).ProductFamilyName = value ?? null; }

        /// <summary>Represents product line name that uniquely identifies product line.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string HierarchyInformationProductLineName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IHierarchyInformationInternal)HierarchyInformation).ProductLineName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IHierarchyInformationInternal)HierarchyInformation).ProductLineName = value ?? null; }

        /// <summary>Represents product name that uniquely identifies product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string HierarchyInformationProductName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IHierarchyInformationInternal)HierarchyInformation).ProductName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IHierarchyInformationInternal)HierarchyInformation).ProductName = value ?? null; }

        /// <summary>Backing field for <see cref="IdentificationType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.IdentificationType? _identificationType;

        /// <summary>Identification type of the configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.IdentificationType? IdentificationType { get => this._identificationType; }

        /// <summary>Internal Acessors for ChildConfigurationDeviceDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IConfigurationDeviceDetails[] Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal.ChildConfigurationDeviceDetail { get => this._childConfigurationDeviceDetail; set { {_childConfigurationDeviceDetail = value;} } }

        /// <summary>Internal Acessors for DisplayInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IDisplayInfo Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal.DisplayInfo { get => (this._displayInfo = this._displayInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.DisplayInfo()); set { {_displayInfo = value;} } }

        /// <summary>Internal Acessors for DisplayInfoConfigurationDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal.DisplayInfoConfigurationDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IDisplayInfoInternal)DisplayInfo).ConfigurationDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IDisplayInfoInternal)DisplayInfo).ConfigurationDisplayName = value; }

        /// <summary>Internal Acessors for DisplayInfoProductFamilyDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal.DisplayInfoProductFamilyDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IDisplayInfoInternal)DisplayInfo).ProductFamilyDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IDisplayInfoInternal)DisplayInfo).ProductFamilyDisplayName = value; }

        /// <summary>Internal Acessors for HierarchyInformation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IHierarchyInformation Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal.HierarchyInformation { get => (this._hierarchyInformation = this._hierarchyInformation ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.HierarchyInformation()); set { {_hierarchyInformation = value;} } }

        /// <summary>Internal Acessors for IdentificationType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.IdentificationType? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal.IdentificationType { get => this._identificationType; set { {_identificationType = value;} } }

        /// <summary>Internal Acessors for ParentDeviceDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IDeviceDetails Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal.ParentDeviceDetail { get => (this._parentDeviceDetail = this._parentDeviceDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.DeviceDetails()); set { {_parentDeviceDetail = value;} } }

        /// <summary>Internal Acessors for ParentDeviceDetailManagementResourceId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal.ParentDeviceDetailManagementResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IDeviceDetailsInternal)ParentDeviceDetail).ManagementResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IDeviceDetailsInternal)ParentDeviceDetail).ManagementResourceId = value; }

        /// <summary>Internal Acessors for ParentDeviceDetailManagementResourceTenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal.ParentDeviceDetailManagementResourceTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IDeviceDetailsInternal)ParentDeviceDetail).ManagementResourceTenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IDeviceDetailsInternal)ParentDeviceDetail).ManagementResourceTenantId = value; }

        /// <summary>Internal Acessors for ParentDeviceDetailSerialNumber</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal.ParentDeviceDetailSerialNumber { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IDeviceDetailsInternal)ParentDeviceDetail).SerialNumber; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IDeviceDetailsInternal)ParentDeviceDetail).SerialNumber = value; }

        /// <summary>Internal Acessors for ProductDoubleEncryptionStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DoubleEncryptionStatus? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IProductDetailsInternal.ProductDoubleEncryptionStatus { get => this._productDoubleEncryptionStatus; set { {_productDoubleEncryptionStatus = value;} } }

        /// <summary>Backing field for <see cref="OptInAdditionalConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IAdditionalConfiguration[] _optInAdditionalConfiguration;

        /// <summary>
        /// List of additional configurations customer wants in the order item apart from the ones included in the base configuration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IAdditionalConfiguration[] OptInAdditionalConfiguration { get => this._optInAdditionalConfiguration; set => this._optInAdditionalConfiguration = value; }

        /// <summary>Backing field for <see cref="ParentDeviceDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IDeviceDetails _parentDeviceDetail;

        /// <summary>Device details of the parent configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IDeviceDetails ParentDeviceDetail { get => (this._parentDeviceDetail = this._parentDeviceDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.DeviceDetails()); }

        /// <summary>Management Resource Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string ParentDeviceDetailManagementResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IDeviceDetailsInternal)ParentDeviceDetail).ManagementResourceId; }

        /// <summary>Management Resource Tenant ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string ParentDeviceDetailManagementResourceTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IDeviceDetailsInternal)ParentDeviceDetail).ManagementResourceTenantId; }

        /// <summary>Device serial number.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string ParentDeviceDetailSerialNumber { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IDeviceDetailsInternal)ParentDeviceDetail).SerialNumber; }

        /// <summary>Backing field for <see cref="ProductDoubleEncryptionStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DoubleEncryptionStatus? _productDoubleEncryptionStatus;

        /// <summary>Double encryption status of the configuration. Read-only field.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DoubleEncryptionStatus? ProductDoubleEncryptionStatus { get => this._productDoubleEncryptionStatus; }

        /// <summary>Creates an new <see cref="ProductDetails" /> instance.</summary>
        public ProductDetails()
        {

        }
    }
    /// Represents product details.
    public partial interface IProductDetails :
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.IJsonSerializable
    {
        /// <summary>Details of all child configurations that are part of the order item.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Details of all child configurations that are part of the order item.",
        SerializedName = @"childConfigurationDeviceDetails",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IConfigurationDeviceDetails) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IConfigurationDeviceDetails[] ChildConfigurationDeviceDetail { get;  }
        /// <summary>Configuration display name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Configuration display name.",
        SerializedName = @"configurationDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayInfoConfigurationDisplayName { get;  }
        /// <summary>Product family display name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Product family display name.",
        SerializedName = @"productFamilyDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayInfoProductFamilyDisplayName { get;  }
        /// <summary>Represents configuration name that uniquely identifies configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents configuration name that uniquely identifies configuration.",
        SerializedName = @"configurationName",
        PossibleTypes = new [] { typeof(string) })]
        string HierarchyInformationConfigurationName { get; set; }
        /// <summary>Represents product family name that uniquely identifies product family.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents product family name that uniquely identifies product family.",
        SerializedName = @"productFamilyName",
        PossibleTypes = new [] { typeof(string) })]
        string HierarchyInformationProductFamilyName { get; set; }
        /// <summary>Represents product line name that uniquely identifies product line.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents product line name that uniquely identifies product line.",
        SerializedName = @"productLineName",
        PossibleTypes = new [] { typeof(string) })]
        string HierarchyInformationProductLineName { get; set; }
        /// <summary>Represents product name that uniquely identifies product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents product name that uniquely identifies product.",
        SerializedName = @"productName",
        PossibleTypes = new [] { typeof(string) })]
        string HierarchyInformationProductName { get; set; }
        /// <summary>Identification type of the configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Identification type of the configuration.",
        SerializedName = @"identificationType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.IdentificationType) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.IdentificationType? IdentificationType { get;  }
        /// <summary>
        /// List of additional configurations customer wants in the order item apart from the ones included in the base configuration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of additional configurations customer wants in the order item apart from the ones included in the base configuration.",
        SerializedName = @"optInAdditionalConfigurations",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IAdditionalConfiguration) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IAdditionalConfiguration[] OptInAdditionalConfiguration { get; set; }
        /// <summary>Management Resource Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Management Resource Id.",
        SerializedName = @"managementResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string ParentDeviceDetailManagementResourceId { get;  }
        /// <summary>Management Resource Tenant ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Management Resource Tenant ID.",
        SerializedName = @"managementResourceTenantId",
        PossibleTypes = new [] { typeof(string) })]
        string ParentDeviceDetailManagementResourceTenantId { get;  }
        /// <summary>Device serial number.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Device serial number.",
        SerializedName = @"serialNumber",
        PossibleTypes = new [] { typeof(string) })]
        string ParentDeviceDetailSerialNumber { get;  }
        /// <summary>Double encryption status of the configuration. Read-only field.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Double encryption status of the configuration. Read-only field.",
        SerializedName = @"productDoubleEncryptionStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DoubleEncryptionStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DoubleEncryptionStatus? ProductDoubleEncryptionStatus { get;  }

    }
    /// Represents product details.
    internal partial interface IProductDetailsInternal

    {
        /// <summary>Details of all child configurations that are part of the order item.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IConfigurationDeviceDetails[] ChildConfigurationDeviceDetail { get; set; }
        /// <summary>Display details of the product.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IDisplayInfo DisplayInfo { get; set; }
        /// <summary>Configuration display name.</summary>
        string DisplayInfoConfigurationDisplayName { get; set; }
        /// <summary>Product family display name.</summary>
        string DisplayInfoProductFamilyDisplayName { get; set; }
        /// <summary>Hierarchy of the product which uniquely identifies the product.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IHierarchyInformation HierarchyInformation { get; set; }
        /// <summary>Represents configuration name that uniquely identifies configuration.</summary>
        string HierarchyInformationConfigurationName { get; set; }
        /// <summary>Represents product family name that uniquely identifies product family.</summary>
        string HierarchyInformationProductFamilyName { get; set; }
        /// <summary>Represents product line name that uniquely identifies product line.</summary>
        string HierarchyInformationProductLineName { get; set; }
        /// <summary>Represents product name that uniquely identifies product.</summary>
        string HierarchyInformationProductName { get; set; }
        /// <summary>Identification type of the configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.IdentificationType? IdentificationType { get; set; }
        /// <summary>
        /// List of additional configurations customer wants in the order item apart from the ones included in the base configuration.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IAdditionalConfiguration[] OptInAdditionalConfiguration { get; set; }
        /// <summary>Device details of the parent configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20220501Preview.IDeviceDetails ParentDeviceDetail { get; set; }
        /// <summary>Management Resource Id.</summary>
        string ParentDeviceDetailManagementResourceId { get; set; }
        /// <summary>Management Resource Tenant ID.</summary>
        string ParentDeviceDetailManagementResourceTenantId { get; set; }
        /// <summary>Device serial number.</summary>
        string ParentDeviceDetailSerialNumber { get; set; }
        /// <summary>Double encryption status of the configuration. Read-only field.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DoubleEncryptionStatus? ProductDoubleEncryptionStatus { get; set; }

    }
}