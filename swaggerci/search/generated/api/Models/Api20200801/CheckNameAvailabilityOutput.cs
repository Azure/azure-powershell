// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Extensions;

    /// <summary>Output of check name availability API.</summary>
    public partial class CheckNameAvailabilityOutput :
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ICheckNameAvailabilityOutput,
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ICheckNameAvailabilityOutputInternal
    {

        /// <summary>Backing field for <see cref="IsNameAvailable" /> property.</summary>
        private bool? _isNameAvailable;

        /// <summary>A value indicating whether the name is available.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Owned)]
        public bool? IsNameAvailable { get => this._isNameAvailable; }

        /// <summary>Backing field for <see cref="Message" /> property.</summary>
        private string _message;

        /// <summary>
        /// A message that explains why the name is invalid and provides resource naming requirements. Available only if 'Invalid'
        /// is returned in the 'reason' property.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Owned)]
        public string Message { get => this._message; }

        /// <summary>Internal Acessors for IsNameAvailable</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ICheckNameAvailabilityOutputInternal.IsNameAvailable { get => this._isNameAvailable; set { {_isNameAvailable = value;} } }

        /// <summary>Internal Acessors for Message</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ICheckNameAvailabilityOutputInternal.Message { get => this._message; set { {_message = value;} } }

        /// <summary>Internal Acessors for Reason</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.UnavailableNameReason? Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ICheckNameAvailabilityOutputInternal.Reason { get => this._reason; set { {_reason = value;} } }

        /// <summary>Backing field for <see cref="Reason" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Search.Support.UnavailableNameReason? _reason;

        /// <summary>
        /// The reason why the name is not available. 'Invalid' indicates the name provided does not match the naming requirements
        /// (incorrect length, unsupported characters, etc.). 'AlreadyExists' indicates that the name is already in use and is therefore
        /// unavailable.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Support.UnavailableNameReason? Reason { get => this._reason; }

        /// <summary>Creates an new <see cref="CheckNameAvailabilityOutput" /> instance.</summary>
        public CheckNameAvailabilityOutput()
        {

        }
    }
    /// Output of check name availability API.
    public partial interface ICheckNameAvailabilityOutput :
        Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.IJsonSerializable
    {
        /// <summary>A value indicating whether the name is available.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"A value indicating whether the name is available.",
        SerializedName = @"nameAvailable",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsNameAvailable { get;  }
        /// <summary>
        /// A message that explains why the name is invalid and provides resource naming requirements. Available only if 'Invalid'
        /// is returned in the 'reason' property.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"A message that explains why the name is invalid and provides resource naming requirements. Available only if 'Invalid' is returned in the 'reason' property.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string Message { get;  }
        /// <summary>
        /// The reason why the name is not available. 'Invalid' indicates the name provided does not match the naming requirements
        /// (incorrect length, unsupported characters, etc.). 'AlreadyExists' indicates that the name is already in use and is therefore
        /// unavailable.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The reason why the name is not available. 'Invalid' indicates the name provided does not match the naming requirements (incorrect length, unsupported characters, etc.). 'AlreadyExists' indicates that the name is already in use and is therefore unavailable.",
        SerializedName = @"reason",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Support.UnavailableNameReason) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.UnavailableNameReason? Reason { get;  }

    }
    /// Output of check name availability API.
    internal partial interface ICheckNameAvailabilityOutputInternal

    {
        /// <summary>A value indicating whether the name is available.</summary>
        bool? IsNameAvailable { get; set; }
        /// <summary>
        /// A message that explains why the name is invalid and provides resource naming requirements. Available only if 'Invalid'
        /// is returned in the 'reason' property.
        /// </summary>
        string Message { get; set; }
        /// <summary>
        /// The reason why the name is not available. 'Invalid' indicates the name provided does not match the naming requirements
        /// (incorrect length, unsupported characters, etc.). 'AlreadyExists' indicates that the name is already in use and is therefore
        /// unavailable.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.UnavailableNameReason? Reason { get; set; }

    }
}