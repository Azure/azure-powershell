// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Extensions;

    /// <summary>The parameters used to update an Azure Cognitive Search service.</summary>
    public partial class SearchServiceUpdate :
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServiceUpdate,
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServiceUpdateInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20.IResource" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20.Resource();

        /// <summary>
        /// Applicable only for the standard3 SKU. You can set this property to enable up to 3 high density partitions that allow
        /// up to 1000 indexes, which is much higher than the maximum indexes allowed for any other SKU. For the standard3 SKU, the
        /// value is either 'default' or 'highDensity'. For all other SKUs, this value must be 'default'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Support.HostingMode? HostingMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServicePropertiesInternal)Property).HostingMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServicePropertiesInternal)Property).HostingMode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Search.Support.HostingMode)""); }

        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20.IResourceInternal)__resource).Id; }

        /// <summary>Backing field for <see cref="Identity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.IIdentity _identity;

        /// <summary>The identity of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.IIdentity Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.Identity()); set => this._identity = value; }

        /// <summary>The principal ID of resource identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inlined)]
        public string IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.IIdentityInternal)Identity).PrincipalId; }

        /// <summary>The tenant ID of resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inlined)]
        public string IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.IIdentityInternal)Identity).TenantId; }

        /// <summary>The identity type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Support.IdentityType? IdentityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.IIdentityInternal)Identity).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.IIdentityInternal)Identity).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Search.Support.IdentityType)""); }

        /// <summary>Backing field for <see cref="Location" /> property.</summary>
        private string _location;

        /// <summary>
        /// The geographic location of the resource. This must be one of the supported and registered Azure Geo Regions (for example,
        /// West US, East US, Southeast Asia, and so forth). This property is required when creating a new resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Owned)]
        public string Location { get => this._location; set => this._location = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20.IResourceInternal)__resource).Type = value; }

        /// <summary>Internal Acessors for Identity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.IIdentity Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServiceUpdateInternal.Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.Identity()); set { {_identity = value;} } }

        /// <summary>Internal Acessors for IdentityPrincipalId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServiceUpdateInternal.IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.IIdentityInternal)Identity).PrincipalId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.IIdentityInternal)Identity).PrincipalId = value; }

        /// <summary>Internal Acessors for IdentityTenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServiceUpdateInternal.IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.IIdentityInternal)Identity).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.IIdentityInternal)Identity).TenantId = value; }

        /// <summary>Internal Acessors for NetworkRuleSet</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.INetworkRuleSet Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServiceUpdateInternal.NetworkRuleSet { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServicePropertiesInternal)Property).NetworkRuleSet; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServicePropertiesInternal)Property).NetworkRuleSet = value; }

        /// <summary>Internal Acessors for PrivateEndpointConnection</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.IPrivateEndpointConnection[] Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServiceUpdateInternal.PrivateEndpointConnection { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServicePropertiesInternal)Property).PrivateEndpointConnection; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServicePropertiesInternal)Property).PrivateEndpointConnection = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServiceProperties Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServiceUpdateInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.SearchServiceProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServiceUpdateInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServicePropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServicePropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for SharedPrivateLinkResource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISharedPrivateLinkResource[] Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServiceUpdateInternal.SharedPrivateLinkResource { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServicePropertiesInternal)Property).SharedPrivateLinkResource; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServicePropertiesInternal)Property).SharedPrivateLinkResource = value; }

        /// <summary>Internal Acessors for Sku</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISku Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServiceUpdateInternal.Sku { get => (this._sku = this._sku ?? new Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.Sku()); set { {_sku = value;} } }

        /// <summary>Internal Acessors for Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchServiceStatus? Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServiceUpdateInternal.Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServicePropertiesInternal)Property).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServicePropertiesInternal)Property).Status = value; }

        /// <summary>Internal Acessors for StatusDetail</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServiceUpdateInternal.StatusDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServicePropertiesInternal)Property).StatusDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServicePropertiesInternal)Property).StatusDetail = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20.IResourceInternal)__resource).Name; }

        /// <summary>
        /// A list of IP restriction rules that defines the inbound network(s) with allowing access to the search service endpoint.
        /// At the meantime, all other public IP networks are blocked by the firewall. These restriction rules are applied only when
        /// the 'publicNetworkAccess' of the search service is 'enabled'; otherwise, traffic over public interface is not allowed
        /// even with any public IP rules, and private endpoint connections would be the exclusive access method.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.IIPRule[] NetworkRuleSetIPRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServicePropertiesInternal)Property).NetworkRuleSetIPRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServicePropertiesInternal)Property).NetworkRuleSetIPRule = value ?? null /* arrayOf */; }

        /// <summary>
        /// The number of partitions in the search service; if specified, it can be 1, 2, 3, 4, 6, or 12. Values greater than 1 are
        /// only valid for standard SKUs. For 'standard3' services with hostingMode set to 'highDensity', the allowed values are between
        /// 1 and 3.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inlined)]
        public int? PartitionCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServicePropertiesInternal)Property).PartitionCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServicePropertiesInternal)Property).PartitionCount = value ?? default(int); }

        /// <summary>The list of private endpoint connections to the Azure Cognitive Search service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.IPrivateEndpointConnection[] PrivateEndpointConnection { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServicePropertiesInternal)Property).PrivateEndpointConnection; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServiceProperties _property;

        /// <summary>Properties of the search service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServiceProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.SearchServiceProperties()); set => this._property = value; }

        /// <summary>
        /// The state of the last provisioning operation performed on the search service. Provisioning is an intermediate state that
        /// occurs while service capacity is being established. After capacity is set up, provisioningState changes to either 'succeeded'
        /// or 'failed'. Client applications can poll provisioning status (the recommended polling interval is from 30 seconds to
        /// one minute) by using the Get Search Service operation to see when an operation is completed. If you are using the free
        /// service, this value tends to come back as 'succeeded' directly in the call to Create search service. This is because the
        /// free service uses capacity that is already set up.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Support.ProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServicePropertiesInternal)Property).ProvisioningState; }

        /// <summary>
        /// This value can be set to 'enabled' to avoid breaking changes on existing customer resources and templates. If set to 'disabled',
        /// traffic over public interface is not allowed, and private endpoint connections would be the exclusive access method.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Support.PublicNetworkAccess? PublicNetworkAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServicePropertiesInternal)Property).PublicNetworkAccess; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServicePropertiesInternal)Property).PublicNetworkAccess = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Search.Support.PublicNetworkAccess)""); }

        /// <summary>
        /// The number of replicas in the search service. If specified, it must be a value between 1 and 12 inclusive for standard
        /// SKUs or between 1 and 3 inclusive for basic SKU.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inlined)]
        public int? ReplicaCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServicePropertiesInternal)Property).ReplicaCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServicePropertiesInternal)Property).ReplicaCount = value ?? default(int); }

        /// <summary>
        /// The list of shared private link resources managed by the Azure Cognitive Search service.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISharedPrivateLinkResource[] SharedPrivateLinkResource { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServicePropertiesInternal)Property).SharedPrivateLinkResource; }

        /// <summary>Backing field for <see cref="Sku" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISku _sku;

        /// <summary>
        /// The SKU of the Search Service, which determines price tier and capacity limits. This property is required when creating
        /// a new Search Service.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISku Sku { get => (this._sku = this._sku ?? new Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.Sku()); set => this._sku = value; }

        /// <summary>
        /// The SKU of the search service. Valid values include: 'free': Shared service. 'basic': Dedicated service with up to 3 replicas.
        /// 'standard': Dedicated service with up to 12 partitions and 12 replicas. 'standard2': Similar to standard, but with more
        /// capacity per search unit. 'standard3': The largest Standard offering with up to 12 partitions and 12 replicas (or up to
        /// 3 partitions with more indexes if you also set the hostingMode property to 'highDensity'). 'storage_optimized_l1': Supports
        /// 1TB per partition, up to 12 partitions. 'storage_optimized_l2': Supports 2TB per partition, up to 12 partitions.'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SkuName? SkuName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISkuInternal)Sku).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISkuInternal)Sku).Name = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SkuName)""); }

        /// <summary>
        /// The status of the search service. Possible values include: 'running': The search service is running and no provisioning
        /// operations are underway. 'provisioning': The search service is being provisioned or scaled up or down. 'deleting': The
        /// search service is being deleted. 'degraded': The search service is degraded. This can occur when the underlying search
        /// units are not healthy. The search service is most likely operational, but performance might be slow and some requests
        /// might be dropped. 'disabled': The search service is disabled. In this state, the service will reject all API requests.
        /// 'error': The search service is in an error state. If your service is in the degraded, disabled, or error states, it means
        /// the Azure Cognitive Search team is actively investigating the underlying issue. Dedicated services in these states are
        /// still chargeable based on the number of search units provisioned.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchServiceStatus? Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServicePropertiesInternal)Property).Status; }

        /// <summary>The details of the search service status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inlined)]
        public string StatusDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServicePropertiesInternal)Property).StatusDetail; }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServiceUpdateTags _tag;

        /// <summary>Tags to help categorize the resource in the Azure portal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServiceUpdateTags Tag { get => (this._tag = this._tag ?? new Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.SearchServiceUpdateTags()); set => this._tag = value; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20.IResourceInternal)__resource).Type; }

        /// <summary>Creates an new <see cref="SearchServiceUpdate" /> instance.</summary>
        public SearchServiceUpdate()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// The parameters used to update an Azure Cognitive Search service.
    public partial interface ISearchServiceUpdate :
        Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20.IResource
    {
        /// <summary>
        /// Applicable only for the standard3 SKU. You can set this property to enable up to 3 high density partitions that allow
        /// up to 1000 indexes, which is much higher than the maximum indexes allowed for any other SKU. For the standard3 SKU, the
        /// value is either 'default' or 'highDensity'. For all other SKUs, this value must be 'default'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Applicable only for the standard3 SKU. You can set this property to enable up to 3 high density partitions that allow up to 1000 indexes, which is much higher than the maximum indexes allowed for any other SKU. For the standard3 SKU, the value is either 'default' or 'highDensity'. For all other SKUs, this value must be 'default'.",
        SerializedName = @"hostingMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Support.HostingMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.HostingMode? HostingMode { get; set; }
        /// <summary>The principal ID of resource identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The principal ID of resource identity.",
        SerializedName = @"principalId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityPrincipalId { get;  }
        /// <summary>The tenant ID of resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The tenant ID of resource.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityTenantId { get;  }
        /// <summary>The identity type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity type.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Support.IdentityType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.IdentityType? IdentityType { get; set; }
        /// <summary>
        /// The geographic location of the resource. This must be one of the supported and registered Azure Geo Regions (for example,
        /// West US, East US, Southeast Asia, and so forth). This property is required when creating a new resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The geographic location of the resource. This must be one of the supported and registered Azure Geo Regions (for example, West US, East US, Southeast Asia, and so forth). This property is required when creating a new resource.",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string Location { get; set; }
        /// <summary>
        /// A list of IP restriction rules that defines the inbound network(s) with allowing access to the search service endpoint.
        /// At the meantime, all other public IP networks are blocked by the firewall. These restriction rules are applied only when
        /// the 'publicNetworkAccess' of the search service is 'enabled'; otherwise, traffic over public interface is not allowed
        /// even with any public IP rules, and private endpoint connections would be the exclusive access method.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of IP restriction rules that defines the inbound network(s) with allowing access to the search service endpoint. At the meantime, all other public IP networks are blocked by the firewall. These restriction rules are applied only when the 'publicNetworkAccess' of the search service is 'enabled'; otherwise, traffic over public interface is not allowed even with any public IP rules, and private endpoint connections would be the exclusive access method.",
        SerializedName = @"ipRules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.IIPRule) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.IIPRule[] NetworkRuleSetIPRule { get; set; }
        /// <summary>
        /// The number of partitions in the search service; if specified, it can be 1, 2, 3, 4, 6, or 12. Values greater than 1 are
        /// only valid for standard SKUs. For 'standard3' services with hostingMode set to 'highDensity', the allowed values are between
        /// 1 and 3.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of partitions in the search service; if specified, it can be 1, 2, 3, 4, 6, or 12. Values greater than 1 are only valid for standard SKUs. For 'standard3' services with hostingMode set to 'highDensity', the allowed values are between 1 and 3.",
        SerializedName = @"partitionCount",
        PossibleTypes = new [] { typeof(int) })]
        int? PartitionCount { get; set; }
        /// <summary>The list of private endpoint connections to the Azure Cognitive Search service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of private endpoint connections to the Azure Cognitive Search service.",
        SerializedName = @"privateEndpointConnections",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.IPrivateEndpointConnection) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.IPrivateEndpointConnection[] PrivateEndpointConnection { get;  }
        /// <summary>
        /// The state of the last provisioning operation performed on the search service. Provisioning is an intermediate state that
        /// occurs while service capacity is being established. After capacity is set up, provisioningState changes to either 'succeeded'
        /// or 'failed'. Client applications can poll provisioning status (the recommended polling interval is from 30 seconds to
        /// one minute) by using the Get Search Service operation to see when an operation is completed. If you are using the free
        /// service, this value tends to come back as 'succeeded' directly in the call to Create search service. This is because the
        /// free service uses capacity that is already set up.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The state of the last provisioning operation performed on the search service. Provisioning is an intermediate state that occurs while service capacity is being established. After capacity is set up, provisioningState changes to either 'succeeded' or 'failed'. Client applications can poll provisioning status (the recommended polling interval is from 30 seconds to one minute) by using the Get Search Service operation to see when an operation is completed. If you are using the free service, this value tends to come back as 'succeeded' directly in the call to Create search service. This is because the free service uses capacity that is already set up.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>
        /// This value can be set to 'enabled' to avoid breaking changes on existing customer resources and templates. If set to 'disabled',
        /// traffic over public interface is not allowed, and private endpoint connections would be the exclusive access method.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This value can be set to 'enabled' to avoid breaking changes on existing customer resources and templates. If set to 'disabled', traffic over public interface is not allowed, and private endpoint connections would be the exclusive access method.",
        SerializedName = @"publicNetworkAccess",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Support.PublicNetworkAccess) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.PublicNetworkAccess? PublicNetworkAccess { get; set; }
        /// <summary>
        /// The number of replicas in the search service. If specified, it must be a value between 1 and 12 inclusive for standard
        /// SKUs or between 1 and 3 inclusive for basic SKU.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of replicas in the search service. If specified, it must be a value between 1 and 12 inclusive for standard SKUs or between 1 and 3 inclusive for basic SKU.",
        SerializedName = @"replicaCount",
        PossibleTypes = new [] { typeof(int) })]
        int? ReplicaCount { get; set; }
        /// <summary>
        /// The list of shared private link resources managed by the Azure Cognitive Search service.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of shared private link resources managed by the Azure Cognitive Search service.",
        SerializedName = @"sharedPrivateLinkResources",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISharedPrivateLinkResource) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISharedPrivateLinkResource[] SharedPrivateLinkResource { get;  }
        /// <summary>
        /// The SKU of the search service. Valid values include: 'free': Shared service. 'basic': Dedicated service with up to 3 replicas.
        /// 'standard': Dedicated service with up to 12 partitions and 12 replicas. 'standard2': Similar to standard, but with more
        /// capacity per search unit. 'standard3': The largest Standard offering with up to 12 partitions and 12 replicas (or up to
        /// 3 partitions with more indexes if you also set the hostingMode property to 'highDensity'). 'storage_optimized_l1': Supports
        /// 1TB per partition, up to 12 partitions. 'storage_optimized_l2': Supports 2TB per partition, up to 12 partitions.'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The SKU of the search service. Valid values include: 'free': Shared service. 'basic': Dedicated service with up to 3 replicas. 'standard': Dedicated service with up to 12 partitions and 12 replicas. 'standard2': Similar to standard, but with more capacity per search unit. 'standard3': The largest Standard offering with up to 12 partitions and 12 replicas (or up to 3 partitions with more indexes if you also set the hostingMode property to 'highDensity'). 'storage_optimized_l1': Supports 1TB per partition, up to 12 partitions. 'storage_optimized_l2': Supports 2TB per partition, up to 12 partitions.'",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SkuName) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SkuName? SkuName { get; set; }
        /// <summary>
        /// The status of the search service. Possible values include: 'running': The search service is running and no provisioning
        /// operations are underway. 'provisioning': The search service is being provisioned or scaled up or down. 'deleting': The
        /// search service is being deleted. 'degraded': The search service is degraded. This can occur when the underlying search
        /// units are not healthy. The search service is most likely operational, but performance might be slow and some requests
        /// might be dropped. 'disabled': The search service is disabled. In this state, the service will reject all API requests.
        /// 'error': The search service is in an error state. If your service is in the degraded, disabled, or error states, it means
        /// the Azure Cognitive Search team is actively investigating the underlying issue. Dedicated services in these states are
        /// still chargeable based on the number of search units provisioned.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The status of the search service. Possible values include: 'running': The search service is running and no provisioning operations are underway. 'provisioning': The search service is being provisioned or scaled up or down. 'deleting': The search service is being deleted. 'degraded': The search service is degraded. This can occur when the underlying search units are not healthy. The search service is most likely operational, but performance might be slow and some requests might be dropped. 'disabled': The search service is disabled. In this state, the service will reject all API requests. 'error': The search service is in an error state. If your service is in the degraded, disabled, or error states, it means the Azure Cognitive Search team is actively investigating the underlying issue. Dedicated services in these states are still chargeable based on the number of search units provisioned.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchServiceStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchServiceStatus? Status { get;  }
        /// <summary>The details of the search service status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The details of the search service status.",
        SerializedName = @"statusDetails",
        PossibleTypes = new [] { typeof(string) })]
        string StatusDetail { get;  }
        /// <summary>Tags to help categorize the resource in the Azure portal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Tags to help categorize the resource in the Azure portal.",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServiceUpdateTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServiceUpdateTags Tag { get; set; }

    }
    /// The parameters used to update an Azure Cognitive Search service.
    internal partial interface ISearchServiceUpdateInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20.IResourceInternal
    {
        /// <summary>
        /// Applicable only for the standard3 SKU. You can set this property to enable up to 3 high density partitions that allow
        /// up to 1000 indexes, which is much higher than the maximum indexes allowed for any other SKU. For the standard3 SKU, the
        /// value is either 'default' or 'highDensity'. For all other SKUs, this value must be 'default'.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.HostingMode? HostingMode { get; set; }
        /// <summary>The identity of the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.IIdentity Identity { get; set; }
        /// <summary>The principal ID of resource identity.</summary>
        string IdentityPrincipalId { get; set; }
        /// <summary>The tenant ID of resource.</summary>
        string IdentityTenantId { get; set; }
        /// <summary>The identity type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.IdentityType? IdentityType { get; set; }
        /// <summary>
        /// The geographic location of the resource. This must be one of the supported and registered Azure Geo Regions (for example,
        /// West US, East US, Southeast Asia, and so forth). This property is required when creating a new resource.
        /// </summary>
        string Location { get; set; }
        /// <summary>
        /// Network specific rules that determine how the Azure Cognitive Search service may be reached.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.INetworkRuleSet NetworkRuleSet { get; set; }
        /// <summary>
        /// A list of IP restriction rules that defines the inbound network(s) with allowing access to the search service endpoint.
        /// At the meantime, all other public IP networks are blocked by the firewall. These restriction rules are applied only when
        /// the 'publicNetworkAccess' of the search service is 'enabled'; otherwise, traffic over public interface is not allowed
        /// even with any public IP rules, and private endpoint connections would be the exclusive access method.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.IIPRule[] NetworkRuleSetIPRule { get; set; }
        /// <summary>
        /// The number of partitions in the search service; if specified, it can be 1, 2, 3, 4, 6, or 12. Values greater than 1 are
        /// only valid for standard SKUs. For 'standard3' services with hostingMode set to 'highDensity', the allowed values are between
        /// 1 and 3.
        /// </summary>
        int? PartitionCount { get; set; }
        /// <summary>The list of private endpoint connections to the Azure Cognitive Search service.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.IPrivateEndpointConnection[] PrivateEndpointConnection { get; set; }
        /// <summary>Properties of the search service.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServiceProperties Property { get; set; }
        /// <summary>
        /// The state of the last provisioning operation performed on the search service. Provisioning is an intermediate state that
        /// occurs while service capacity is being established. After capacity is set up, provisioningState changes to either 'succeeded'
        /// or 'failed'. Client applications can poll provisioning status (the recommended polling interval is from 30 seconds to
        /// one minute) by using the Get Search Service operation to see when an operation is completed. If you are using the free
        /// service, this value tends to come back as 'succeeded' directly in the call to Create search service. This is because the
        /// free service uses capacity that is already set up.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>
        /// This value can be set to 'enabled' to avoid breaking changes on existing customer resources and templates. If set to 'disabled',
        /// traffic over public interface is not allowed, and private endpoint connections would be the exclusive access method.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.PublicNetworkAccess? PublicNetworkAccess { get; set; }
        /// <summary>
        /// The number of replicas in the search service. If specified, it must be a value between 1 and 12 inclusive for standard
        /// SKUs or between 1 and 3 inclusive for basic SKU.
        /// </summary>
        int? ReplicaCount { get; set; }
        /// <summary>
        /// The list of shared private link resources managed by the Azure Cognitive Search service.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISharedPrivateLinkResource[] SharedPrivateLinkResource { get; set; }
        /// <summary>
        /// The SKU of the Search Service, which determines price tier and capacity limits. This property is required when creating
        /// a new Search Service.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISku Sku { get; set; }
        /// <summary>
        /// The SKU of the search service. Valid values include: 'free': Shared service. 'basic': Dedicated service with up to 3 replicas.
        /// 'standard': Dedicated service with up to 12 partitions and 12 replicas. 'standard2': Similar to standard, but with more
        /// capacity per search unit. 'standard3': The largest Standard offering with up to 12 partitions and 12 replicas (or up to
        /// 3 partitions with more indexes if you also set the hostingMode property to 'highDensity'). 'storage_optimized_l1': Supports
        /// 1TB per partition, up to 12 partitions. 'storage_optimized_l2': Supports 2TB per partition, up to 12 partitions.'
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SkuName? SkuName { get; set; }
        /// <summary>
        /// The status of the search service. Possible values include: 'running': The search service is running and no provisioning
        /// operations are underway. 'provisioning': The search service is being provisioned or scaled up or down. 'deleting': The
        /// search service is being deleted. 'degraded': The search service is degraded. This can occur when the underlying search
        /// units are not healthy. The search service is most likely operational, but performance might be slow and some requests
        /// might be dropped. 'disabled': The search service is disabled. In this state, the service will reject all API requests.
        /// 'error': The search service is in an error state. If your service is in the degraded, disabled, or error states, it means
        /// the Azure Cognitive Search team is actively investigating the underlying issue. Dedicated services in these states are
        /// still chargeable based on the number of search units provisioned.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchServiceStatus? Status { get; set; }
        /// <summary>The details of the search service status.</summary>
        string StatusDetail { get; set; }
        /// <summary>Tags to help categorize the resource in the Azure portal.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServiceUpdateTags Tag { get; set; }

    }
}