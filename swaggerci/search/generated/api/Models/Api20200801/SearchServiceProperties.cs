// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Extensions;

    /// <summary>Properties of the search service.</summary>
    public partial class SearchServiceProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServiceProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServicePropertiesInternal
    {

        /// <summary>Backing field for <see cref="HostingMode" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Search.Support.HostingMode? _hostingMode;

        /// <summary>
        /// Applicable only for the standard3 SKU. You can set this property to enable up to 3 high density partitions that allow
        /// up to 1000 indexes, which is much higher than the maximum indexes allowed for any other SKU. For the standard3 SKU, the
        /// value is either 'default' or 'highDensity'. For all other SKUs, this value must be 'default'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Support.HostingMode? HostingMode { get => this._hostingMode; set => this._hostingMode = value; }

        /// <summary>Internal Acessors for NetworkRuleSet</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.INetworkRuleSet Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServicePropertiesInternal.NetworkRuleSet { get => (this._networkRuleSet = this._networkRuleSet ?? new Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.NetworkRuleSet()); set { {_networkRuleSet = value;} } }

        /// <summary>Internal Acessors for PrivateEndpointConnection</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.IPrivateEndpointConnection[] Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServicePropertiesInternal.PrivateEndpointConnection { get => this._privateEndpointConnection; set { {_privateEndpointConnection = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServicePropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for SharedPrivateLinkResource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISharedPrivateLinkResource[] Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServicePropertiesInternal.SharedPrivateLinkResource { get => this._sharedPrivateLinkResource; set { {_sharedPrivateLinkResource = value;} } }

        /// <summary>Internal Acessors for Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchServiceStatus? Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServicePropertiesInternal.Status { get => this._status; set { {_status = value;} } }

        /// <summary>Internal Acessors for StatusDetail</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISearchServicePropertiesInternal.StatusDetail { get => this._statusDetail; set { {_statusDetail = value;} } }

        /// <summary>Backing field for <see cref="NetworkRuleSet" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.INetworkRuleSet _networkRuleSet;

        /// <summary>
        /// Network specific rules that determine how the Azure Cognitive Search service may be reached.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.INetworkRuleSet NetworkRuleSet { get => (this._networkRuleSet = this._networkRuleSet ?? new Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.NetworkRuleSet()); set => this._networkRuleSet = value; }

        /// <summary>
        /// A list of IP restriction rules that defines the inbound network(s) with allowing access to the search service endpoint.
        /// At the meantime, all other public IP networks are blocked by the firewall. These restriction rules are applied only when
        /// the 'publicNetworkAccess' of the search service is 'enabled'; otherwise, traffic over public interface is not allowed
        /// even with any public IP rules, and private endpoint connections would be the exclusive access method.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.IIPRule[] NetworkRuleSetIPRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.INetworkRuleSetInternal)NetworkRuleSet).IPRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.INetworkRuleSetInternal)NetworkRuleSet).IPRule = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="PartitionCount" /> property.</summary>
        private int? _partitionCount;

        /// <summary>
        /// The number of partitions in the search service; if specified, it can be 1, 2, 3, 4, 6, or 12. Values greater than 1 are
        /// only valid for standard SKUs. For 'standard3' services with hostingMode set to 'highDensity', the allowed values are between
        /// 1 and 3.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Owned)]
        public int? PartitionCount { get => this._partitionCount; set => this._partitionCount = value; }

        /// <summary>Backing field for <see cref="PrivateEndpointConnection" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.IPrivateEndpointConnection[] _privateEndpointConnection;

        /// <summary>The list of private endpoint connections to the Azure Cognitive Search service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.IPrivateEndpointConnection[] PrivateEndpointConnection { get => this._privateEndpointConnection; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Search.Support.ProvisioningState? _provisioningState;

        /// <summary>
        /// The state of the last provisioning operation performed on the search service. Provisioning is an intermediate state that
        /// occurs while service capacity is being established. After capacity is set up, provisioningState changes to either 'succeeded'
        /// or 'failed'. Client applications can poll provisioning status (the recommended polling interval is from 30 seconds to
        /// one minute) by using the Get Search Service operation to see when an operation is completed. If you are using the free
        /// service, this value tends to come back as 'succeeded' directly in the call to Create search service. This is because the
        /// free service uses capacity that is already set up.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Support.ProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="PublicNetworkAccess" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Search.Support.PublicNetworkAccess? _publicNetworkAccess;

        /// <summary>
        /// This value can be set to 'enabled' to avoid breaking changes on existing customer resources and templates. If set to 'disabled',
        /// traffic over public interface is not allowed, and private endpoint connections would be the exclusive access method.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Support.PublicNetworkAccess? PublicNetworkAccess { get => this._publicNetworkAccess; set => this._publicNetworkAccess = value; }

        /// <summary>Backing field for <see cref="ReplicaCount" /> property.</summary>
        private int? _replicaCount;

        /// <summary>
        /// The number of replicas in the search service. If specified, it must be a value between 1 and 12 inclusive for standard
        /// SKUs or between 1 and 3 inclusive for basic SKU.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Owned)]
        public int? ReplicaCount { get => this._replicaCount; set => this._replicaCount = value; }

        /// <summary>Backing field for <see cref="SharedPrivateLinkResource" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISharedPrivateLinkResource[] _sharedPrivateLinkResource;

        /// <summary>
        /// The list of shared private link resources managed by the Azure Cognitive Search service.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISharedPrivateLinkResource[] SharedPrivateLinkResource { get => this._sharedPrivateLinkResource; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchServiceStatus? _status;

        /// <summary>
        /// The status of the search service. Possible values include: 'running': The search service is running and no provisioning
        /// operations are underway. 'provisioning': The search service is being provisioned or scaled up or down. 'deleting': The
        /// search service is being deleted. 'degraded': The search service is degraded. This can occur when the underlying search
        /// units are not healthy. The search service is most likely operational, but performance might be slow and some requests
        /// might be dropped. 'disabled': The search service is disabled. In this state, the service will reject all API requests.
        /// 'error': The search service is in an error state. If your service is in the degraded, disabled, or error states, it means
        /// the Azure Cognitive Search team is actively investigating the underlying issue. Dedicated services in these states are
        /// still chargeable based on the number of search units provisioned.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchServiceStatus? Status { get => this._status; }

        /// <summary>Backing field for <see cref="StatusDetail" /> property.</summary>
        private string _statusDetail;

        /// <summary>The details of the search service status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Owned)]
        public string StatusDetail { get => this._statusDetail; }

        /// <summary>Creates an new <see cref="SearchServiceProperties" /> instance.</summary>
        public SearchServiceProperties()
        {

        }
    }
    /// Properties of the search service.
    public partial interface ISearchServiceProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Applicable only for the standard3 SKU. You can set this property to enable up to 3 high density partitions that allow
        /// up to 1000 indexes, which is much higher than the maximum indexes allowed for any other SKU. For the standard3 SKU, the
        /// value is either 'default' or 'highDensity'. For all other SKUs, this value must be 'default'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Applicable only for the standard3 SKU. You can set this property to enable up to 3 high density partitions that allow up to 1000 indexes, which is much higher than the maximum indexes allowed for any other SKU. For the standard3 SKU, the value is either 'default' or 'highDensity'. For all other SKUs, this value must be 'default'.",
        SerializedName = @"hostingMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Support.HostingMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.HostingMode? HostingMode { get; set; }
        /// <summary>
        /// A list of IP restriction rules that defines the inbound network(s) with allowing access to the search service endpoint.
        /// At the meantime, all other public IP networks are blocked by the firewall. These restriction rules are applied only when
        /// the 'publicNetworkAccess' of the search service is 'enabled'; otherwise, traffic over public interface is not allowed
        /// even with any public IP rules, and private endpoint connections would be the exclusive access method.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of IP restriction rules that defines the inbound network(s) with allowing access to the search service endpoint. At the meantime, all other public IP networks are blocked by the firewall. These restriction rules are applied only when the 'publicNetworkAccess' of the search service is 'enabled'; otherwise, traffic over public interface is not allowed even with any public IP rules, and private endpoint connections would be the exclusive access method.",
        SerializedName = @"ipRules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.IIPRule) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.IIPRule[] NetworkRuleSetIPRule { get; set; }
        /// <summary>
        /// The number of partitions in the search service; if specified, it can be 1, 2, 3, 4, 6, or 12. Values greater than 1 are
        /// only valid for standard SKUs. For 'standard3' services with hostingMode set to 'highDensity', the allowed values are between
        /// 1 and 3.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of partitions in the search service; if specified, it can be 1, 2, 3, 4, 6, or 12. Values greater than 1 are only valid for standard SKUs. For 'standard3' services with hostingMode set to 'highDensity', the allowed values are between 1 and 3.",
        SerializedName = @"partitionCount",
        PossibleTypes = new [] { typeof(int) })]
        int? PartitionCount { get; set; }
        /// <summary>The list of private endpoint connections to the Azure Cognitive Search service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of private endpoint connections to the Azure Cognitive Search service.",
        SerializedName = @"privateEndpointConnections",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.IPrivateEndpointConnection) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.IPrivateEndpointConnection[] PrivateEndpointConnection { get;  }
        /// <summary>
        /// The state of the last provisioning operation performed on the search service. Provisioning is an intermediate state that
        /// occurs while service capacity is being established. After capacity is set up, provisioningState changes to either 'succeeded'
        /// or 'failed'. Client applications can poll provisioning status (the recommended polling interval is from 30 seconds to
        /// one minute) by using the Get Search Service operation to see when an operation is completed. If you are using the free
        /// service, this value tends to come back as 'succeeded' directly in the call to Create search service. This is because the
        /// free service uses capacity that is already set up.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The state of the last provisioning operation performed on the search service. Provisioning is an intermediate state that occurs while service capacity is being established. After capacity is set up, provisioningState changes to either 'succeeded' or 'failed'. Client applications can poll provisioning status (the recommended polling interval is from 30 seconds to one minute) by using the Get Search Service operation to see when an operation is completed. If you are using the free service, this value tends to come back as 'succeeded' directly in the call to Create search service. This is because the free service uses capacity that is already set up.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>
        /// This value can be set to 'enabled' to avoid breaking changes on existing customer resources and templates. If set to 'disabled',
        /// traffic over public interface is not allowed, and private endpoint connections would be the exclusive access method.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This value can be set to 'enabled' to avoid breaking changes on existing customer resources and templates. If set to 'disabled', traffic over public interface is not allowed, and private endpoint connections would be the exclusive access method.",
        SerializedName = @"publicNetworkAccess",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Support.PublicNetworkAccess) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.PublicNetworkAccess? PublicNetworkAccess { get; set; }
        /// <summary>
        /// The number of replicas in the search service. If specified, it must be a value between 1 and 12 inclusive for standard
        /// SKUs or between 1 and 3 inclusive for basic SKU.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of replicas in the search service. If specified, it must be a value between 1 and 12 inclusive for standard SKUs or between 1 and 3 inclusive for basic SKU.",
        SerializedName = @"replicaCount",
        PossibleTypes = new [] { typeof(int) })]
        int? ReplicaCount { get; set; }
        /// <summary>
        /// The list of shared private link resources managed by the Azure Cognitive Search service.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of shared private link resources managed by the Azure Cognitive Search service.",
        SerializedName = @"sharedPrivateLinkResources",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISharedPrivateLinkResource) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISharedPrivateLinkResource[] SharedPrivateLinkResource { get;  }
        /// <summary>
        /// The status of the search service. Possible values include: 'running': The search service is running and no provisioning
        /// operations are underway. 'provisioning': The search service is being provisioned or scaled up or down. 'deleting': The
        /// search service is being deleted. 'degraded': The search service is degraded. This can occur when the underlying search
        /// units are not healthy. The search service is most likely operational, but performance might be slow and some requests
        /// might be dropped. 'disabled': The search service is disabled. In this state, the service will reject all API requests.
        /// 'error': The search service is in an error state. If your service is in the degraded, disabled, or error states, it means
        /// the Azure Cognitive Search team is actively investigating the underlying issue. Dedicated services in these states are
        /// still chargeable based on the number of search units provisioned.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The status of the search service. Possible values include: 'running': The search service is running and no provisioning operations are underway. 'provisioning': The search service is being provisioned or scaled up or down. 'deleting': The search service is being deleted. 'degraded': The search service is degraded. This can occur when the underlying search units are not healthy. The search service is most likely operational, but performance might be slow and some requests might be dropped. 'disabled': The search service is disabled. In this state, the service will reject all API requests. 'error': The search service is in an error state. If your service is in the degraded, disabled, or error states, it means the Azure Cognitive Search team is actively investigating the underlying issue. Dedicated services in these states are still chargeable based on the number of search units provisioned.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchServiceStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchServiceStatus? Status { get;  }
        /// <summary>The details of the search service status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The details of the search service status.",
        SerializedName = @"statusDetails",
        PossibleTypes = new [] { typeof(string) })]
        string StatusDetail { get;  }

    }
    /// Properties of the search service.
    internal partial interface ISearchServicePropertiesInternal

    {
        /// <summary>
        /// Applicable only for the standard3 SKU. You can set this property to enable up to 3 high density partitions that allow
        /// up to 1000 indexes, which is much higher than the maximum indexes allowed for any other SKU. For the standard3 SKU, the
        /// value is either 'default' or 'highDensity'. For all other SKUs, this value must be 'default'.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.HostingMode? HostingMode { get; set; }
        /// <summary>
        /// Network specific rules that determine how the Azure Cognitive Search service may be reached.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.INetworkRuleSet NetworkRuleSet { get; set; }
        /// <summary>
        /// A list of IP restriction rules that defines the inbound network(s) with allowing access to the search service endpoint.
        /// At the meantime, all other public IP networks are blocked by the firewall. These restriction rules are applied only when
        /// the 'publicNetworkAccess' of the search service is 'enabled'; otherwise, traffic over public interface is not allowed
        /// even with any public IP rules, and private endpoint connections would be the exclusive access method.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.IIPRule[] NetworkRuleSetIPRule { get; set; }
        /// <summary>
        /// The number of partitions in the search service; if specified, it can be 1, 2, 3, 4, 6, or 12. Values greater than 1 are
        /// only valid for standard SKUs. For 'standard3' services with hostingMode set to 'highDensity', the allowed values are between
        /// 1 and 3.
        /// </summary>
        int? PartitionCount { get; set; }
        /// <summary>The list of private endpoint connections to the Azure Cognitive Search service.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.IPrivateEndpointConnection[] PrivateEndpointConnection { get; set; }
        /// <summary>
        /// The state of the last provisioning operation performed on the search service. Provisioning is an intermediate state that
        /// occurs while service capacity is being established. After capacity is set up, provisioningState changes to either 'succeeded'
        /// or 'failed'. Client applications can poll provisioning status (the recommended polling interval is from 30 seconds to
        /// one minute) by using the Get Search Service operation to see when an operation is completed. If you are using the free
        /// service, this value tends to come back as 'succeeded' directly in the call to Create search service. This is because the
        /// free service uses capacity that is already set up.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>
        /// This value can be set to 'enabled' to avoid breaking changes on existing customer resources and templates. If set to 'disabled',
        /// traffic over public interface is not allowed, and private endpoint connections would be the exclusive access method.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.PublicNetworkAccess? PublicNetworkAccess { get; set; }
        /// <summary>
        /// The number of replicas in the search service. If specified, it must be a value between 1 and 12 inclusive for standard
        /// SKUs or between 1 and 3 inclusive for basic SKU.
        /// </summary>
        int? ReplicaCount { get; set; }
        /// <summary>
        /// The list of shared private link resources managed by the Azure Cognitive Search service.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20200801.ISharedPrivateLinkResource[] SharedPrivateLinkResource { get; set; }
        /// <summary>
        /// The status of the search service. Possible values include: 'running': The search service is running and no provisioning
        /// operations are underway. 'provisioning': The search service is being provisioned or scaled up or down. 'deleting': The
        /// search service is being deleted. 'degraded': The search service is degraded. This can occur when the underlying search
        /// units are not healthy. The search service is most likely operational, but performance might be slow and some requests
        /// might be dropped. 'disabled': The search service is disabled. In this state, the service will reject all API requests.
        /// 'error': The search service is in an error state. If your service is in the degraded, disabled, or error states, it means
        /// the Azure Cognitive Search team is actively investigating the underlying issue. Dedicated services in these states are
        /// still chargeable based on the number of search units provisioned.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchServiceStatus? Status { get; set; }
        /// <summary>The details of the search service status.</summary>
        string StatusDetail { get; set; }

    }
}