// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.PowerBiEmbedded.Models.Api20160129
{
    using static Microsoft.Azure.PowerShell.Cmdlets.PowerBiEmbedded.Runtime.Extensions;

    public partial class CheckNameResponse :
        Microsoft.Azure.PowerShell.Cmdlets.PowerBiEmbedded.Models.Api20160129.ICheckNameResponse,
        Microsoft.Azure.PowerShell.Cmdlets.PowerBiEmbedded.Models.Api20160129.ICheckNameResponseInternal
    {

        /// <summary>Backing field for <see cref="Message" /> property.</summary>
        private string _message;

        /// <summary>
        /// Message indicating an unavailable name due to a conflict, or a description of the naming rules that are violated.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerBiEmbedded.Origin(Microsoft.Azure.PowerShell.Cmdlets.PowerBiEmbedded.PropertyOrigin.Owned)]
        public string Message { get => this._message; set => this._message = value; }

        /// <summary>Backing field for <see cref="NameAvailable" /> property.</summary>
        private bool? _nameAvailable;

        /// <summary>
        /// Specifies a Boolean value that indicates whether the specified Power BI Workspace Collection name is available to use.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerBiEmbedded.Origin(Microsoft.Azure.PowerShell.Cmdlets.PowerBiEmbedded.PropertyOrigin.Owned)]
        public bool? NameAvailable { get => this._nameAvailable; set => this._nameAvailable = value; }

        /// <summary>Backing field for <see cref="Reason" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PowerBiEmbedded.Support.CheckNameReason? _reason;

        /// <summary>Reason why the workspace collection name cannot be used.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerBiEmbedded.Origin(Microsoft.Azure.PowerShell.Cmdlets.PowerBiEmbedded.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.PowerBiEmbedded.Support.CheckNameReason? Reason { get => this._reason; set => this._reason = value; }

        /// <summary>Creates an new <see cref="CheckNameResponse" /> instance.</summary>
        public CheckNameResponse()
        {

        }
    }
    public partial interface ICheckNameResponse :
        Microsoft.Azure.PowerShell.Cmdlets.PowerBiEmbedded.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Message indicating an unavailable name due to a conflict, or a description of the naming rules that are violated.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerBiEmbedded.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Message indicating an unavailable name due to a conflict, or a description of the naming rules that are violated.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string Message { get; set; }
        /// <summary>
        /// Specifies a Boolean value that indicates whether the specified Power BI Workspace Collection name is available to use.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerBiEmbedded.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies a Boolean value that indicates whether the specified Power BI Workspace Collection name is available to use.",
        SerializedName = @"nameAvailable",
        PossibleTypes = new [] { typeof(bool) })]
        bool? NameAvailable { get; set; }
        /// <summary>Reason why the workspace collection name cannot be used.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerBiEmbedded.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Reason why the workspace collection name cannot be used.",
        SerializedName = @"reason",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PowerBiEmbedded.Support.CheckNameReason) })]
        Microsoft.Azure.PowerShell.Cmdlets.PowerBiEmbedded.Support.CheckNameReason? Reason { get; set; }

    }
    internal partial interface ICheckNameResponseInternal

    {
        /// <summary>
        /// Message indicating an unavailable name due to a conflict, or a description of the naming rules that are violated.
        /// </summary>
        string Message { get; set; }
        /// <summary>
        /// Specifies a Boolean value that indicates whether the specified Power BI Workspace Collection name is available to use.
        /// </summary>
        bool? NameAvailable { get; set; }
        /// <summary>Reason why the workspace collection name cannot be used.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PowerBiEmbedded.Support.CheckNameReason? Reason { get; set; }

    }
}