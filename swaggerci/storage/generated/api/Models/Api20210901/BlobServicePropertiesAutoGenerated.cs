// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Extensions;

    /// <summary>The properties of a storage account’s Blob service.</summary>
    public partial class BlobServicePropertiesAutoGenerated :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IBlobServicePropertiesAutoGenerated,
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IBlobServicePropertiesAutoGeneratedInternal
    {

        /// <summary>Backing field for <see cref="AutomaticSnapshotPolicyEnabled" /> property.</summary>
        private bool? _automaticSnapshotPolicyEnabled;

        /// <summary>Deprecated in favor of isVersioningEnabled property.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public bool? AutomaticSnapshotPolicyEnabled { get => this._automaticSnapshotPolicyEnabled; set => this._automaticSnapshotPolicyEnabled = value; }

        /// <summary>Backing field for <see cref="ChangeFeed" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IChangeFeed _changeFeed;

        /// <summary>The blob service properties for change feed events.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IChangeFeed ChangeFeed { get => (this._changeFeed = this._changeFeed ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.ChangeFeed()); set => this._changeFeed = value; }

        /// <summary>Indicates whether change feed event logging is enabled for the Blob service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public bool? ChangeFeedEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IChangeFeedInternal)ChangeFeed).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IChangeFeedInternal)ChangeFeed).Enabled = value ?? default(bool); }

        /// <summary>
        /// Indicates the duration of changeFeed retention in days. Minimum value is 1 day and maximum value is 146000 days (400 years).
        /// A null value indicates an infinite retention of the change feed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? ChangeFeedRetentionInDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IChangeFeedInternal)ChangeFeed).RetentionInDay; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IChangeFeedInternal)ChangeFeed).RetentionInDay = value ?? default(int); }

        /// <summary>Backing field for <see cref="ContainerDeleteRetentionPolicy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IDeleteRetentionPolicy _containerDeleteRetentionPolicy;

        /// <summary>The blob service properties for container soft delete.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IDeleteRetentionPolicy ContainerDeleteRetentionPolicy { get => (this._containerDeleteRetentionPolicy = this._containerDeleteRetentionPolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.DeleteRetentionPolicy()); set => this._containerDeleteRetentionPolicy = value; }

        /// <summary>
        /// This property when set to true allows deletion of the soft deleted blob versions and snapshots. This property cannot be
        /// used blob restore policy. This property only applies to blob service and does not apply to containers or file share.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public bool? ContainerDeleteRetentionPolicyAllowPermanentDelete { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IDeleteRetentionPolicyInternal)ContainerDeleteRetentionPolicy).AllowPermanentDelete; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IDeleteRetentionPolicyInternal)ContainerDeleteRetentionPolicy).AllowPermanentDelete = value ?? default(bool); }

        /// <summary>
        /// Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and the maximum
        /// value can be 365.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? ContainerDeleteRetentionPolicyDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IDeleteRetentionPolicyInternal)ContainerDeleteRetentionPolicy).Day; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IDeleteRetentionPolicyInternal)ContainerDeleteRetentionPolicy).Day = value ?? default(int); }

        /// <summary>Indicates whether DeleteRetentionPolicy is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public bool? ContainerDeleteRetentionPolicyEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IDeleteRetentionPolicyInternal)ContainerDeleteRetentionPolicy).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IDeleteRetentionPolicyInternal)ContainerDeleteRetentionPolicy).Enabled = value ?? default(bool); }

        /// <summary>Backing field for <see cref="Cor" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.ICorsRules _cor;

        /// <summary>
        /// Specifies CORS rules for the Blob service. You can include up to five CorsRule elements in the request. If no CorsRule
        /// elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Blob service.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.ICorsRules Cor { get => (this._cor = this._cor ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.CorsRules()); set => this._cor = value; }

        /// <summary>
        /// The List of CORS rules. You can include up to five CorsRule elements in the request.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.ICorsRule[] CorCorsRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.ICorsRulesInternal)Cor).CorsRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.ICorsRulesInternal)Cor).CorsRule = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="DefaultServiceVersion" /> property.</summary>
        private string _defaultServiceVersion;

        /// <summary>
        /// DefaultServiceVersion indicates the default version to use for requests to the Blob service if an incoming request’s version
        /// is not specified. Possible values include version 2008-10-27 and all more recent versions.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public string DefaultServiceVersion { get => this._defaultServiceVersion; set => this._defaultServiceVersion = value; }

        /// <summary>Backing field for <see cref="DeleteRetentionPolicy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IDeleteRetentionPolicy _deleteRetentionPolicy;

        /// <summary>The blob service properties for blob soft delete.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IDeleteRetentionPolicy DeleteRetentionPolicy { get => (this._deleteRetentionPolicy = this._deleteRetentionPolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.DeleteRetentionPolicy()); set => this._deleteRetentionPolicy = value; }

        /// <summary>
        /// This property when set to true allows deletion of the soft deleted blob versions and snapshots. This property cannot be
        /// used blob restore policy. This property only applies to blob service and does not apply to containers or file share.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public bool? DeleteRetentionPolicyAllowPermanentDelete { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IDeleteRetentionPolicyInternal)DeleteRetentionPolicy).AllowPermanentDelete; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IDeleteRetentionPolicyInternal)DeleteRetentionPolicy).AllowPermanentDelete = value ?? default(bool); }

        /// <summary>
        /// Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and the maximum
        /// value can be 365.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? DeleteRetentionPolicyDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IDeleteRetentionPolicyInternal)DeleteRetentionPolicy).Day; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IDeleteRetentionPolicyInternal)DeleteRetentionPolicy).Day = value ?? default(int); }

        /// <summary>Indicates whether DeleteRetentionPolicy is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public bool? DeleteRetentionPolicyEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IDeleteRetentionPolicyInternal)DeleteRetentionPolicy).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IDeleteRetentionPolicyInternal)DeleteRetentionPolicy).Enabled = value ?? default(bool); }

        /// <summary>Backing field for <see cref="IsVersioningEnabled" /> property.</summary>
        private bool? _isVersioningEnabled;

        /// <summary>Versioning is enabled if set to true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public bool? IsVersioningEnabled { get => this._isVersioningEnabled; set => this._isVersioningEnabled = value; }

        /// <summary>Backing field for <see cref="LastAccessTimeTrackingPolicy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.ILastAccessTimeTrackingPolicy _lastAccessTimeTrackingPolicy;

        /// <summary>The blob service property to configure last access time based tracking policy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.ILastAccessTimeTrackingPolicy LastAccessTimeTrackingPolicy { get => (this._lastAccessTimeTrackingPolicy = this._lastAccessTimeTrackingPolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.LastAccessTimeTrackingPolicy()); set => this._lastAccessTimeTrackingPolicy = value; }

        /// <summary>
        /// An array of predefined supported blob types. Only blockBlob is the supported value. This field is currently read only
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string[] LastAccessTimeTrackingPolicyBlobType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.ILastAccessTimeTrackingPolicyInternal)LastAccessTimeTrackingPolicy).BlobType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.ILastAccessTimeTrackingPolicyInternal)LastAccessTimeTrackingPolicy).BlobType = value ?? null /* arrayOf */; }

        /// <summary>When set to true last access time based tracking is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public bool? LastAccessTimeTrackingPolicyEnable { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.ILastAccessTimeTrackingPolicyInternal)LastAccessTimeTrackingPolicy).Enable; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.ILastAccessTimeTrackingPolicyInternal)LastAccessTimeTrackingPolicy).Enable = value ?? default(bool); }

        /// <summary>
        /// Name of the policy. The valid value is AccessTimeTracking. This field is currently read only
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.Name? LastAccessTimeTrackingPolicyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.ILastAccessTimeTrackingPolicyInternal)LastAccessTimeTrackingPolicy).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.ILastAccessTimeTrackingPolicyInternal)LastAccessTimeTrackingPolicy).Name = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.Name)""); }

        /// <summary>
        /// The field specifies blob object tracking granularity in days, typically how often the blob object should be tracked.This
        /// field is currently read only with value as 1
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? LastAccessTimeTrackingPolicyTrackingGranularityInDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.ILastAccessTimeTrackingPolicyInternal)LastAccessTimeTrackingPolicy).TrackingGranularityInDay; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.ILastAccessTimeTrackingPolicyInternal)LastAccessTimeTrackingPolicy).TrackingGranularityInDay = value ?? default(int); }

        /// <summary>Internal Acessors for ChangeFeed</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IChangeFeed Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IBlobServicePropertiesAutoGeneratedInternal.ChangeFeed { get => (this._changeFeed = this._changeFeed ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.ChangeFeed()); set { {_changeFeed = value;} } }

        /// <summary>Internal Acessors for ContainerDeleteRetentionPolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IDeleteRetentionPolicy Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IBlobServicePropertiesAutoGeneratedInternal.ContainerDeleteRetentionPolicy { get => (this._containerDeleteRetentionPolicy = this._containerDeleteRetentionPolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.DeleteRetentionPolicy()); set { {_containerDeleteRetentionPolicy = value;} } }

        /// <summary>Internal Acessors for Cor</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.ICorsRules Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IBlobServicePropertiesAutoGeneratedInternal.Cor { get => (this._cor = this._cor ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.CorsRules()); set { {_cor = value;} } }

        /// <summary>Internal Acessors for DeleteRetentionPolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IDeleteRetentionPolicy Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IBlobServicePropertiesAutoGeneratedInternal.DeleteRetentionPolicy { get => (this._deleteRetentionPolicy = this._deleteRetentionPolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.DeleteRetentionPolicy()); set { {_deleteRetentionPolicy = value;} } }

        /// <summary>Internal Acessors for LastAccessTimeTrackingPolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.ILastAccessTimeTrackingPolicy Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IBlobServicePropertiesAutoGeneratedInternal.LastAccessTimeTrackingPolicy { get => (this._lastAccessTimeTrackingPolicy = this._lastAccessTimeTrackingPolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.LastAccessTimeTrackingPolicy()); set { {_lastAccessTimeTrackingPolicy = value;} } }

        /// <summary>Internal Acessors for RestorePolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IRestorePolicyProperties Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IBlobServicePropertiesAutoGeneratedInternal.RestorePolicy { get => (this._restorePolicy = this._restorePolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.RestorePolicyProperties()); set { {_restorePolicy = value;} } }

        /// <summary>Internal Acessors for RestorePolicyLastEnabledTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IBlobServicePropertiesAutoGeneratedInternal.RestorePolicyLastEnabledTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IRestorePolicyPropertiesInternal)RestorePolicy).LastEnabledTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IRestorePolicyPropertiesInternal)RestorePolicy).LastEnabledTime = value; }

        /// <summary>Internal Acessors for RestorePolicyMinRestoreTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IBlobServicePropertiesAutoGeneratedInternal.RestorePolicyMinRestoreTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IRestorePolicyPropertiesInternal)RestorePolicy).MinRestoreTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IRestorePolicyPropertiesInternal)RestorePolicy).MinRestoreTime = value; }

        /// <summary>Backing field for <see cref="RestorePolicy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IRestorePolicyProperties _restorePolicy;

        /// <summary>The blob service properties for blob restore policy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IRestorePolicyProperties RestorePolicy { get => (this._restorePolicy = this._restorePolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.RestorePolicyProperties()); set => this._restorePolicy = value; }

        /// <summary>
        /// how long this blob can be restored. It should be great than zero and less than DeleteRetentionPolicy.days.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? RestorePolicyDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IRestorePolicyPropertiesInternal)RestorePolicy).Day; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IRestorePolicyPropertiesInternal)RestorePolicy).Day = value ?? default(int); }

        /// <summary>Blob restore is enabled if set to true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public bool? RestorePolicyEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IRestorePolicyPropertiesInternal)RestorePolicy).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IRestorePolicyPropertiesInternal)RestorePolicy).Enabled = value ?? default(bool); }

        /// <summary>Deprecated in favor of minRestoreTime property.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public global::System.DateTime? RestorePolicyLastEnabledTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IRestorePolicyPropertiesInternal)RestorePolicy).LastEnabledTime; }

        /// <summary>Returns the minimum date and time that the restore can be started.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public global::System.DateTime? RestorePolicyMinRestoreTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IRestorePolicyPropertiesInternal)RestorePolicy).MinRestoreTime; }

        /// <summary>Creates an new <see cref="BlobServicePropertiesAutoGenerated" /> instance.</summary>
        public BlobServicePropertiesAutoGenerated()
        {

        }
    }
    /// The properties of a storage account’s Blob service.
    public partial interface IBlobServicePropertiesAutoGenerated :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.IJsonSerializable
    {
        /// <summary>Deprecated in favor of isVersioningEnabled property.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Deprecated in favor of isVersioningEnabled property.",
        SerializedName = @"automaticSnapshotPolicyEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AutomaticSnapshotPolicyEnabled { get; set; }
        /// <summary>Indicates whether change feed event logging is enabled for the Blob service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether change feed event logging is enabled for the Blob service.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ChangeFeedEnabled { get; set; }
        /// <summary>
        /// Indicates the duration of changeFeed retention in days. Minimum value is 1 day and maximum value is 146000 days (400 years).
        /// A null value indicates an infinite retention of the change feed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates the duration of changeFeed retention in days. Minimum value is 1 day and maximum value is 146000 days (400 years). A null value indicates an infinite retention of the change feed.",
        SerializedName = @"retentionInDays",
        PossibleTypes = new [] { typeof(int) })]
        int? ChangeFeedRetentionInDay { get; set; }
        /// <summary>
        /// This property when set to true allows deletion of the soft deleted blob versions and snapshots. This property cannot be
        /// used blob restore policy. This property only applies to blob service and does not apply to containers or file share.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This property when set to true allows deletion of the soft deleted blob versions and snapshots. This property cannot be used blob restore policy. This property only applies to blob service and does not apply to containers or file share.",
        SerializedName = @"allowPermanentDelete",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ContainerDeleteRetentionPolicyAllowPermanentDelete { get; set; }
        /// <summary>
        /// Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and the maximum
        /// value can be 365.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and the maximum value can be 365.",
        SerializedName = @"days",
        PossibleTypes = new [] { typeof(int) })]
        int? ContainerDeleteRetentionPolicyDay { get; set; }
        /// <summary>Indicates whether DeleteRetentionPolicy is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether DeleteRetentionPolicy is enabled.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ContainerDeleteRetentionPolicyEnabled { get; set; }
        /// <summary>
        /// The List of CORS rules. You can include up to five CorsRule elements in the request.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The List of CORS rules. You can include up to five CorsRule elements in the request. ",
        SerializedName = @"corsRules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.ICorsRule) })]
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.ICorsRule[] CorCorsRule { get; set; }
        /// <summary>
        /// DefaultServiceVersion indicates the default version to use for requests to the Blob service if an incoming request’s version
        /// is not specified. Possible values include version 2008-10-27 and all more recent versions.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"DefaultServiceVersion indicates the default version to use for requests to the Blob service if an incoming request’s version is not specified. Possible values include version 2008-10-27 and all more recent versions.",
        SerializedName = @"defaultServiceVersion",
        PossibleTypes = new [] { typeof(string) })]
        string DefaultServiceVersion { get; set; }
        /// <summary>
        /// This property when set to true allows deletion of the soft deleted blob versions and snapshots. This property cannot be
        /// used blob restore policy. This property only applies to blob service and does not apply to containers or file share.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This property when set to true allows deletion of the soft deleted blob versions and snapshots. This property cannot be used blob restore policy. This property only applies to blob service and does not apply to containers or file share.",
        SerializedName = @"allowPermanentDelete",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DeleteRetentionPolicyAllowPermanentDelete { get; set; }
        /// <summary>
        /// Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and the maximum
        /// value can be 365.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and the maximum value can be 365.",
        SerializedName = @"days",
        PossibleTypes = new [] { typeof(int) })]
        int? DeleteRetentionPolicyDay { get; set; }
        /// <summary>Indicates whether DeleteRetentionPolicy is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether DeleteRetentionPolicy is enabled.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DeleteRetentionPolicyEnabled { get; set; }
        /// <summary>Versioning is enabled if set to true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Versioning is enabled if set to true.",
        SerializedName = @"isVersioningEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsVersioningEnabled { get; set; }
        /// <summary>
        /// An array of predefined supported blob types. Only blockBlob is the supported value. This field is currently read only
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"An array of predefined supported blob types. Only blockBlob is the supported value. This field is currently read only",
        SerializedName = @"blobType",
        PossibleTypes = new [] { typeof(string) })]
        string[] LastAccessTimeTrackingPolicyBlobType { get; set; }
        /// <summary>When set to true last access time based tracking is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"When set to true last access time based tracking is enabled.",
        SerializedName = @"enable",
        PossibleTypes = new [] { typeof(bool) })]
        bool? LastAccessTimeTrackingPolicyEnable { get; set; }
        /// <summary>
        /// Name of the policy. The valid value is AccessTimeTracking. This field is currently read only
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the policy. The valid value is AccessTimeTracking. This field is currently read only",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.Name) })]
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.Name? LastAccessTimeTrackingPolicyName { get; set; }
        /// <summary>
        /// The field specifies blob object tracking granularity in days, typically how often the blob object should be tracked.This
        /// field is currently read only with value as 1
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The field specifies blob object tracking granularity in days, typically how often the blob object should be tracked.This field is currently read only with value as 1",
        SerializedName = @"trackingGranularityInDays",
        PossibleTypes = new [] { typeof(int) })]
        int? LastAccessTimeTrackingPolicyTrackingGranularityInDay { get; set; }
        /// <summary>
        /// how long this blob can be restored. It should be great than zero and less than DeleteRetentionPolicy.days.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"how long this blob can be restored. It should be great than zero and less than DeleteRetentionPolicy.days.",
        SerializedName = @"days",
        PossibleTypes = new [] { typeof(int) })]
        int? RestorePolicyDay { get; set; }
        /// <summary>Blob restore is enabled if set to true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Blob restore is enabled if set to true.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? RestorePolicyEnabled { get; set; }
        /// <summary>Deprecated in favor of minRestoreTime property.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Deprecated in favor of minRestoreTime property.",
        SerializedName = @"lastEnabledTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? RestorePolicyLastEnabledTime { get;  }
        /// <summary>Returns the minimum date and time that the restore can be started.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Returns the minimum date and time that the restore can be started.",
        SerializedName = @"minRestoreTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? RestorePolicyMinRestoreTime { get;  }

    }
    /// The properties of a storage account’s Blob service.
    internal partial interface IBlobServicePropertiesAutoGeneratedInternal

    {
        /// <summary>Deprecated in favor of isVersioningEnabled property.</summary>
        bool? AutomaticSnapshotPolicyEnabled { get; set; }
        /// <summary>The blob service properties for change feed events.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IChangeFeed ChangeFeed { get; set; }
        /// <summary>Indicates whether change feed event logging is enabled for the Blob service.</summary>
        bool? ChangeFeedEnabled { get; set; }
        /// <summary>
        /// Indicates the duration of changeFeed retention in days. Minimum value is 1 day and maximum value is 146000 days (400 years).
        /// A null value indicates an infinite retention of the change feed.
        /// </summary>
        int? ChangeFeedRetentionInDay { get; set; }
        /// <summary>The blob service properties for container soft delete.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IDeleteRetentionPolicy ContainerDeleteRetentionPolicy { get; set; }
        /// <summary>
        /// This property when set to true allows deletion of the soft deleted blob versions and snapshots. This property cannot be
        /// used blob restore policy. This property only applies to blob service and does not apply to containers or file share.
        /// </summary>
        bool? ContainerDeleteRetentionPolicyAllowPermanentDelete { get; set; }
        /// <summary>
        /// Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and the maximum
        /// value can be 365.
        /// </summary>
        int? ContainerDeleteRetentionPolicyDay { get; set; }
        /// <summary>Indicates whether DeleteRetentionPolicy is enabled.</summary>
        bool? ContainerDeleteRetentionPolicyEnabled { get; set; }
        /// <summary>
        /// Specifies CORS rules for the Blob service. You can include up to five CorsRule elements in the request. If no CorsRule
        /// elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Blob service.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.ICorsRules Cor { get; set; }
        /// <summary>
        /// The List of CORS rules. You can include up to five CorsRule elements in the request.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.ICorsRule[] CorCorsRule { get; set; }
        /// <summary>
        /// DefaultServiceVersion indicates the default version to use for requests to the Blob service if an incoming request’s version
        /// is not specified. Possible values include version 2008-10-27 and all more recent versions.
        /// </summary>
        string DefaultServiceVersion { get; set; }
        /// <summary>The blob service properties for blob soft delete.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IDeleteRetentionPolicy DeleteRetentionPolicy { get; set; }
        /// <summary>
        /// This property when set to true allows deletion of the soft deleted blob versions and snapshots. This property cannot be
        /// used blob restore policy. This property only applies to blob service and does not apply to containers or file share.
        /// </summary>
        bool? DeleteRetentionPolicyAllowPermanentDelete { get; set; }
        /// <summary>
        /// Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and the maximum
        /// value can be 365.
        /// </summary>
        int? DeleteRetentionPolicyDay { get; set; }
        /// <summary>Indicates whether DeleteRetentionPolicy is enabled.</summary>
        bool? DeleteRetentionPolicyEnabled { get; set; }
        /// <summary>Versioning is enabled if set to true.</summary>
        bool? IsVersioningEnabled { get; set; }
        /// <summary>The blob service property to configure last access time based tracking policy.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.ILastAccessTimeTrackingPolicy LastAccessTimeTrackingPolicy { get; set; }
        /// <summary>
        /// An array of predefined supported blob types. Only blockBlob is the supported value. This field is currently read only
        /// </summary>
        string[] LastAccessTimeTrackingPolicyBlobType { get; set; }
        /// <summary>When set to true last access time based tracking is enabled.</summary>
        bool? LastAccessTimeTrackingPolicyEnable { get; set; }
        /// <summary>
        /// Name of the policy. The valid value is AccessTimeTracking. This field is currently read only
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.Name? LastAccessTimeTrackingPolicyName { get; set; }
        /// <summary>
        /// The field specifies blob object tracking granularity in days, typically how often the blob object should be tracked.This
        /// field is currently read only with value as 1
        /// </summary>
        int? LastAccessTimeTrackingPolicyTrackingGranularityInDay { get; set; }
        /// <summary>The blob service properties for blob restore policy.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IRestorePolicyProperties RestorePolicy { get; set; }
        /// <summary>
        /// how long this blob can be restored. It should be great than zero and less than DeleteRetentionPolicy.days.
        /// </summary>
        int? RestorePolicyDay { get; set; }
        /// <summary>Blob restore is enabled if set to true.</summary>
        bool? RestorePolicyEnabled { get; set; }
        /// <summary>Deprecated in favor of minRestoreTime property.</summary>
        global::System.DateTime? RestorePolicyLastEnabledTime { get; set; }
        /// <summary>Returns the minimum date and time that the restore can be started.</summary>
        global::System.DateTime? RestorePolicyMinRestoreTime { get; set; }

    }
}