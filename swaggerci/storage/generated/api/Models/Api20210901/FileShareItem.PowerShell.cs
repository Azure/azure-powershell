// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901
{
    using Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.PowerShell;

    /// <summary>The file share properties be listed out.</summary>
    [System.ComponentModel.TypeConverter(typeof(FileShareItemTypeConverter))]
    public partial class FileShareItem
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.FileShareItem"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItem" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItem DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new FileShareItem(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.FileShareItem"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItem" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItem DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new FileShareItem(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.FileShareItem"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal FileShareItem(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.FileSharePropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api10.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api10.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api10.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api10.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api10.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api10.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Etag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api10.IAzureEntityResourceInternal)this).Etag = (string) content.GetValueForProperty("Etag",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api10.IAzureEntityResourceInternal)this).Etag, global::System.Convert.ToString);
            }
            if (content.Contains("EnabledProtocol"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).EnabledProtocol = (Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.EnabledProtocols?) content.GetValueForProperty("EnabledProtocol",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).EnabledProtocol, Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.EnabledProtocols.CreateFrom);
            }
            if (content.Contains("LeaseStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).LeaseStatus = (Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.LeaseStatus?) content.GetValueForProperty("LeaseStatus",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).LeaseStatus, Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.LeaseStatus.CreateFrom);
            }
            if (content.Contains("LeaseState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).LeaseState = (Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.LeaseState?) content.GetValueForProperty("LeaseState",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).LeaseState, Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.LeaseState.CreateFrom);
            }
            if (content.Contains("LeaseDuration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).LeaseDuration = (Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.LeaseDuration?) content.GetValueForProperty("LeaseDuration",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).LeaseDuration, Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.LeaseDuration.CreateFrom);
            }
            if (content.Contains("LastModifiedTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).LastModifiedTime = (global::System.DateTime?) content.GetValueForProperty("LastModifiedTime",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).LastModifiedTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("Metadata"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).Metadata = (Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileSharePropertiesMetadata) content.GetValueForProperty("Metadata",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).Metadata, Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.FileSharePropertiesMetadataTypeConverter.ConvertFrom);
            }
            if (content.Contains("ShareQuota"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).ShareQuota = (int?) content.GetValueForProperty("ShareQuota",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).ShareQuota, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("RootSquash"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).RootSquash = (Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.RootSquashType?) content.GetValueForProperty("RootSquash",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).RootSquash, Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.RootSquashType.CreateFrom);
            }
            if (content.Contains("Version"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).Version = (string) content.GetValueForProperty("Version",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).Version, global::System.Convert.ToString);
            }
            if (content.Contains("Deleted"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).Deleted = (bool?) content.GetValueForProperty("Deleted",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).Deleted, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("DeletedTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).DeletedTime = (global::System.DateTime?) content.GetValueForProperty("DeletedTime",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).DeletedTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("RemainingRetentionDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).RemainingRetentionDay = (int?) content.GetValueForProperty("RemainingRetentionDay",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).RemainingRetentionDay, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("AccessTier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).AccessTier = (Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.ShareAccessTier?) content.GetValueForProperty("AccessTier",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).AccessTier, Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.ShareAccessTier.CreateFrom);
            }
            if (content.Contains("AccessTierChangeTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).AccessTierChangeTime = (global::System.DateTime?) content.GetValueForProperty("AccessTierChangeTime",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).AccessTierChangeTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("AccessTierStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).AccessTierStatus = (string) content.GetValueForProperty("AccessTierStatus",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).AccessTierStatus, global::System.Convert.ToString);
            }
            if (content.Contains("ShareUsageByte"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).ShareUsageByte = (long?) content.GetValueForProperty("ShareUsageByte",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).ShareUsageByte, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("SignedIdentifier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).SignedIdentifier = (Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.ISignedIdentifier[]) content.GetValueForProperty("SignedIdentifier",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).SignedIdentifier, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.ISignedIdentifier>(__y, Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.SignedIdentifierTypeConverter.ConvertFrom));
            }
            if (content.Contains("SnapshotTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).SnapshotTime = (global::System.DateTime?) content.GetValueForProperty("SnapshotTime",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).SnapshotTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.FileShareItem"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal FileShareItem(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.FileSharePropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api10.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api10.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api10.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api10.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api10.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api10.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Etag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api10.IAzureEntityResourceInternal)this).Etag = (string) content.GetValueForProperty("Etag",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api10.IAzureEntityResourceInternal)this).Etag, global::System.Convert.ToString);
            }
            if (content.Contains("EnabledProtocol"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).EnabledProtocol = (Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.EnabledProtocols?) content.GetValueForProperty("EnabledProtocol",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).EnabledProtocol, Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.EnabledProtocols.CreateFrom);
            }
            if (content.Contains("LeaseStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).LeaseStatus = (Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.LeaseStatus?) content.GetValueForProperty("LeaseStatus",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).LeaseStatus, Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.LeaseStatus.CreateFrom);
            }
            if (content.Contains("LeaseState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).LeaseState = (Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.LeaseState?) content.GetValueForProperty("LeaseState",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).LeaseState, Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.LeaseState.CreateFrom);
            }
            if (content.Contains("LeaseDuration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).LeaseDuration = (Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.LeaseDuration?) content.GetValueForProperty("LeaseDuration",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).LeaseDuration, Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.LeaseDuration.CreateFrom);
            }
            if (content.Contains("LastModifiedTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).LastModifiedTime = (global::System.DateTime?) content.GetValueForProperty("LastModifiedTime",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).LastModifiedTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("Metadata"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).Metadata = (Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileSharePropertiesMetadata) content.GetValueForProperty("Metadata",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).Metadata, Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.FileSharePropertiesMetadataTypeConverter.ConvertFrom);
            }
            if (content.Contains("ShareQuota"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).ShareQuota = (int?) content.GetValueForProperty("ShareQuota",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).ShareQuota, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("RootSquash"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).RootSquash = (Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.RootSquashType?) content.GetValueForProperty("RootSquash",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).RootSquash, Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.RootSquashType.CreateFrom);
            }
            if (content.Contains("Version"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).Version = (string) content.GetValueForProperty("Version",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).Version, global::System.Convert.ToString);
            }
            if (content.Contains("Deleted"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).Deleted = (bool?) content.GetValueForProperty("Deleted",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).Deleted, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("DeletedTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).DeletedTime = (global::System.DateTime?) content.GetValueForProperty("DeletedTime",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).DeletedTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("RemainingRetentionDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).RemainingRetentionDay = (int?) content.GetValueForProperty("RemainingRetentionDay",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).RemainingRetentionDay, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("AccessTier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).AccessTier = (Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.ShareAccessTier?) content.GetValueForProperty("AccessTier",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).AccessTier, Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.ShareAccessTier.CreateFrom);
            }
            if (content.Contains("AccessTierChangeTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).AccessTierChangeTime = (global::System.DateTime?) content.GetValueForProperty("AccessTierChangeTime",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).AccessTierChangeTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("AccessTierStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).AccessTierStatus = (string) content.GetValueForProperty("AccessTierStatus",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).AccessTierStatus, global::System.Convert.ToString);
            }
            if (content.Contains("ShareUsageByte"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).ShareUsageByte = (long?) content.GetValueForProperty("ShareUsageByte",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).ShareUsageByte, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("SignedIdentifier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).SignedIdentifier = (Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.ISignedIdentifier[]) content.GetValueForProperty("SignedIdentifier",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).SignedIdentifier, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.ISignedIdentifier>(__y, Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.SignedIdentifierTypeConverter.ConvertFrom));
            }
            if (content.Contains("SnapshotTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).SnapshotTime = (global::System.DateTime?) content.GetValueForProperty("SnapshotTime",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItemInternal)this).SnapshotTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="FileShareItem" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="FileShareItem" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IFileShareItem FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// The file share properties be listed out.
    [System.ComponentModel.TypeConverter(typeof(FileShareItemTypeConverter))]
    public partial interface IFileShareItem

    {

    }
}