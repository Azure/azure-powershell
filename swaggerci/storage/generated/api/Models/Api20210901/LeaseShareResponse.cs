// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Extensions;

    /// <summary>Lease Share response schema.</summary>
    public partial class LeaseShareResponse :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.ILeaseShareResponse,
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.ILeaseShareResponseInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.IHeaderSerializable
    {

        /// <summary>Backing field for <see cref="ETag" /> property.</summary>
        private string _eTag;

        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public string ETag { get => this._eTag; set => this._eTag = value; }

        /// <summary>Backing field for <see cref="LeaseId" /> property.</summary>
        private string _leaseId;

        /// <summary>
        /// Returned unique lease ID that must be included with any request to delete the share, or to renew, change, or release the
        /// lease.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public string LeaseId { get => this._leaseId; set => this._leaseId = value; }

        /// <summary>Backing field for <see cref="LeaseTimeSecond" /> property.</summary>
        private string _leaseTimeSecond;

        /// <summary>Approximate time remaining in the lease period, in seconds.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public string LeaseTimeSecond { get => this._leaseTimeSecond; set => this._leaseTimeSecond = value; }

        /// <summary>Creates an new <see cref="LeaseShareResponse" /> instance.</summary>
        public LeaseShareResponse()
        {

        }

        /// <param name="headers"></param>
        void Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.IHeaderSerializable.ReadHeaders(global::System.Net.Http.Headers.HttpResponseHeaders headers)
        {
            if (headers.TryGetValues("ETag", out var __eTagHeader0))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.ILeaseShareResponseInternal)this).ETag = System.Linq.Enumerable.FirstOrDefault(__eTagHeader0) is string __headerETagHeader0 ? __headerETagHeader0 : (string)null;
            }
        }
    }
    /// Lease Share response schema.
    public partial interface ILeaseShareResponse :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.IJsonSerializable
    {
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"ETag",
        PossibleTypes = new [] { typeof(string) })]
        string ETag { get; set; }
        /// <summary>
        /// Returned unique lease ID that must be included with any request to delete the share, or to renew, change, or release the
        /// lease.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Returned unique lease ID that must be included with any request to delete the share, or to renew, change, or release the lease.",
        SerializedName = @"leaseId",
        PossibleTypes = new [] { typeof(string) })]
        string LeaseId { get; set; }
        /// <summary>Approximate time remaining in the lease period, in seconds.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Approximate time remaining in the lease period, in seconds.",
        SerializedName = @"leaseTimeSeconds",
        PossibleTypes = new [] { typeof(string) })]
        string LeaseTimeSecond { get; set; }

    }
    /// Lease Share response schema.
    internal partial interface ILeaseShareResponseInternal

    {
        string ETag { get; set; }
        /// <summary>
        /// Returned unique lease ID that must be included with any request to delete the share, or to renew, change, or release the
        /// lease.
        /// </summary>
        string LeaseId { get; set; }
        /// <summary>Approximate time remaining in the lease period, in seconds.</summary>
        string LeaseTimeSecond { get; set; }

    }
}