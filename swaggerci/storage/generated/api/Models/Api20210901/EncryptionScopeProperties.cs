// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Extensions;

    /// <summary>Properties of the encryption scope.</summary>
    public partial class EncryptionScopeProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IEncryptionScopeProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IEncryptionScopePropertiesInternal
    {

        /// <summary>Backing field for <see cref="CreationTime" /> property.</summary>
        private global::System.DateTime? _creationTime;

        /// <summary>Gets the creation date and time of the encryption scope in UTC.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public global::System.DateTime? CreationTime { get => this._creationTime; }

        /// <summary>Backing field for <see cref="KeyVaultProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IEncryptionScopeKeyVaultProperties _keyVaultProperty;

        /// <summary>
        /// The key vault properties for the encryption scope. This is a required field if encryption scope 'source' attribute is
        /// set to 'Microsoft.KeyVault'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IEncryptionScopeKeyVaultProperties KeyVaultProperty { get => (this._keyVaultProperty = this._keyVaultProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.EncryptionScopeKeyVaultProperties()); set => this._keyVaultProperty = value; }

        /// <summary>The object identifier of the current versioned Key Vault Key in use.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string KeyVaultPropertyCurrentVersionedKeyIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IEncryptionScopeKeyVaultPropertiesInternal)KeyVaultProperty).CurrentVersionedKeyIdentifier; }

        /// <summary>
        /// The object identifier for a key vault key object. When applied, the encryption scope will use the key referenced by the
        /// identifier to enable customer-managed key support on this encryption scope.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string KeyVaultPropertyKeyUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IEncryptionScopeKeyVaultPropertiesInternal)KeyVaultProperty).KeyUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IEncryptionScopeKeyVaultPropertiesInternal)KeyVaultProperty).KeyUri = value ?? null; }

        /// <summary>Timestamp of last rotation of the Key Vault Key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public global::System.DateTime? KeyVaultPropertyLastKeyRotationTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IEncryptionScopeKeyVaultPropertiesInternal)KeyVaultProperty).LastKeyRotationTimestamp; }

        /// <summary>Backing field for <see cref="LastModifiedTime" /> property.</summary>
        private global::System.DateTime? _lastModifiedTime;

        /// <summary>Gets the last modification date and time of the encryption scope in UTC.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public global::System.DateTime? LastModifiedTime { get => this._lastModifiedTime; }

        /// <summary>Internal Acessors for CreationTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IEncryptionScopePropertiesInternal.CreationTime { get => this._creationTime; set { {_creationTime = value;} } }

        /// <summary>Internal Acessors for KeyVaultProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IEncryptionScopeKeyVaultProperties Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IEncryptionScopePropertiesInternal.KeyVaultProperty { get => (this._keyVaultProperty = this._keyVaultProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.EncryptionScopeKeyVaultProperties()); set { {_keyVaultProperty = value;} } }

        /// <summary>Internal Acessors for KeyVaultPropertyCurrentVersionedKeyIdentifier</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IEncryptionScopePropertiesInternal.KeyVaultPropertyCurrentVersionedKeyIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IEncryptionScopeKeyVaultPropertiesInternal)KeyVaultProperty).CurrentVersionedKeyIdentifier; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IEncryptionScopeKeyVaultPropertiesInternal)KeyVaultProperty).CurrentVersionedKeyIdentifier = value; }

        /// <summary>Internal Acessors for KeyVaultPropertyLastKeyRotationTimestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IEncryptionScopePropertiesInternal.KeyVaultPropertyLastKeyRotationTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IEncryptionScopeKeyVaultPropertiesInternal)KeyVaultProperty).LastKeyRotationTimestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IEncryptionScopeKeyVaultPropertiesInternal)KeyVaultProperty).LastKeyRotationTimestamp = value; }

        /// <summary>Internal Acessors for LastModifiedTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IEncryptionScopePropertiesInternal.LastModifiedTime { get => this._lastModifiedTime; set { {_lastModifiedTime = value;} } }

        /// <summary>Backing field for <see cref="RequireInfrastructureEncryption" /> property.</summary>
        private bool? _requireInfrastructureEncryption;

        /// <summary>
        /// A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for
        /// data at rest.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public bool? RequireInfrastructureEncryption { get => this._requireInfrastructureEncryption; set => this._requireInfrastructureEncryption = value; }

        /// <summary>Backing field for <see cref="Source" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.EncryptionScopeSource? _source;

        /// <summary>
        /// The provider for the encryption scope. Possible values (case-insensitive): Microsoft.Storage, Microsoft.KeyVault.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.EncryptionScopeSource? Source { get => this._source; set => this._source = value; }

        /// <summary>Backing field for <see cref="State" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.EncryptionScopeState? _state;

        /// <summary>
        /// The state of the encryption scope. Possible values (case-insensitive): Enabled, Disabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.EncryptionScopeState? State { get => this._state; set => this._state = value; }

        /// <summary>Creates an new <see cref="EncryptionScopeProperties" /> instance.</summary>
        public EncryptionScopeProperties()
        {

        }
    }
    /// Properties of the encryption scope.
    public partial interface IEncryptionScopeProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.IJsonSerializable
    {
        /// <summary>Gets the creation date and time of the encryption scope in UTC.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets the creation date and time of the encryption scope in UTC.",
        SerializedName = @"creationTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CreationTime { get;  }
        /// <summary>The object identifier of the current versioned Key Vault Key in use.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The object identifier of the current versioned Key Vault Key in use.",
        SerializedName = @"currentVersionedKeyIdentifier",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultPropertyCurrentVersionedKeyIdentifier { get;  }
        /// <summary>
        /// The object identifier for a key vault key object. When applied, the encryption scope will use the key referenced by the
        /// identifier to enable customer-managed key support on this encryption scope.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The object identifier for a key vault key object. When applied, the encryption scope will use the key referenced by the identifier to enable customer-managed key support on this encryption scope.",
        SerializedName = @"keyUri",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultPropertyKeyUri { get; set; }
        /// <summary>Timestamp of last rotation of the Key Vault Key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Timestamp of last rotation of the Key Vault Key.",
        SerializedName = @"lastKeyRotationTimestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? KeyVaultPropertyLastKeyRotationTimestamp { get;  }
        /// <summary>Gets the last modification date and time of the encryption scope in UTC.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets the last modification date and time of the encryption scope in UTC.",
        SerializedName = @"lastModifiedTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastModifiedTime { get;  }
        /// <summary>
        /// A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for
        /// data at rest.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest.",
        SerializedName = @"requireInfrastructureEncryption",
        PossibleTypes = new [] { typeof(bool) })]
        bool? RequireInfrastructureEncryption { get; set; }
        /// <summary>
        /// The provider for the encryption scope. Possible values (case-insensitive): Microsoft.Storage, Microsoft.KeyVault.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The provider for the encryption scope. Possible values (case-insensitive):  Microsoft.Storage, Microsoft.KeyVault.",
        SerializedName = @"source",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.EncryptionScopeSource) })]
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.EncryptionScopeSource? Source { get; set; }
        /// <summary>
        /// The state of the encryption scope. Possible values (case-insensitive): Enabled, Disabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The state of the encryption scope. Possible values (case-insensitive):  Enabled, Disabled.",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.EncryptionScopeState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.EncryptionScopeState? State { get; set; }

    }
    /// Properties of the encryption scope.
    internal partial interface IEncryptionScopePropertiesInternal

    {
        /// <summary>Gets the creation date and time of the encryption scope in UTC.</summary>
        global::System.DateTime? CreationTime { get; set; }
        /// <summary>
        /// The key vault properties for the encryption scope. This is a required field if encryption scope 'source' attribute is
        /// set to 'Microsoft.KeyVault'.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IEncryptionScopeKeyVaultProperties KeyVaultProperty { get; set; }
        /// <summary>The object identifier of the current versioned Key Vault Key in use.</summary>
        string KeyVaultPropertyCurrentVersionedKeyIdentifier { get; set; }
        /// <summary>
        /// The object identifier for a key vault key object. When applied, the encryption scope will use the key referenced by the
        /// identifier to enable customer-managed key support on this encryption scope.
        /// </summary>
        string KeyVaultPropertyKeyUri { get; set; }
        /// <summary>Timestamp of last rotation of the Key Vault Key.</summary>
        global::System.DateTime? KeyVaultPropertyLastKeyRotationTimestamp { get; set; }
        /// <summary>Gets the last modification date and time of the encryption scope in UTC.</summary>
        global::System.DateTime? LastModifiedTime { get; set; }
        /// <summary>
        /// A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for
        /// data at rest.
        /// </summary>
        bool? RequireInfrastructureEncryption { get; set; }
        /// <summary>
        /// The provider for the encryption scope. Possible values (case-insensitive): Microsoft.Storage, Microsoft.KeyVault.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.EncryptionScopeSource? Source { get; set; }
        /// <summary>
        /// The state of the encryption scope. Possible values (case-insensitive): Enabled, Disabled.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.EncryptionScopeState? State { get; set; }

    }
}