// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Extensions;

    /// <summary>
    /// Protected append writes history setting for the blob container with Legal holds.
    /// </summary>
    public partial class ProtectedAppendWritesHistory :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IProtectedAppendWritesHistory,
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IProtectedAppendWritesHistoryInternal
    {

        /// <summary>Backing field for <see cref="AllowProtectedAppendWritesAll" /> property.</summary>
        private bool? _allowProtectedAppendWritesAll;

        /// <summary>
        /// When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining legal hold protection and compliance.
        /// Only new blocks can be added and any existing blocks cannot be modified or deleted.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public bool? AllowProtectedAppendWritesAll { get => this._allowProtectedAppendWritesAll; set => this._allowProtectedAppendWritesAll = value; }

        /// <summary>Internal Acessors for Timestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IProtectedAppendWritesHistoryInternal.Timestamp { get => this._timestamp; set { {_timestamp = value;} } }

        /// <summary>Backing field for <see cref="Timestamp" /> property.</summary>
        private global::System.DateTime? _timestamp;

        /// <summary>Returns the date and time the tag was added.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public global::System.DateTime? Timestamp { get => this._timestamp; }

        /// <summary>Creates an new <see cref="ProtectedAppendWritesHistory" /> instance.</summary>
        public ProtectedAppendWritesHistory()
        {

        }
    }
    /// Protected append writes history setting for the blob container with Legal holds.
    public partial interface IProtectedAppendWritesHistory :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.IJsonSerializable
    {
        /// <summary>
        /// When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining legal hold protection and compliance.
        /// Only new blocks can be added and any existing blocks cannot be modified or deleted.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining legal hold protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted.",
        SerializedName = @"allowProtectedAppendWritesAll",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AllowProtectedAppendWritesAll { get; set; }
        /// <summary>Returns the date and time the tag was added.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Returns the date and time the tag was added.",
        SerializedName = @"timestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? Timestamp { get;  }

    }
    /// Protected append writes history setting for the blob container with Legal holds.
    internal partial interface IProtectedAppendWritesHistoryInternal

    {
        /// <summary>
        /// When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining legal hold protection and compliance.
        /// Only new blocks can be added and any existing blocks cannot be modified or deleted.
        /// </summary>
        bool? AllowProtectedAppendWritesAll { get; set; }
        /// <summary>Returns the date and time the tag was added.</summary>
        global::System.DateTime? Timestamp { get; set; }

    }
}