// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Extensions;

    /// <summary>The properties of an ImmutabilityPolicy of a blob container.</summary>
    public partial class ImmutabilityPolicyProperty :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IImmutabilityPolicyProperty,
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IImmutabilityPolicyPropertyInternal
    {

        /// <summary>Backing field for <see cref="AllowProtectedAppendWrite" /> property.</summary>
        private bool? _allowProtectedAppendWrite;

        /// <summary>
        /// This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written
        /// to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing
        /// blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public bool? AllowProtectedAppendWrite { get => this._allowProtectedAppendWrite; set => this._allowProtectedAppendWrite = value; }

        /// <summary>Backing field for <see cref="AllowProtectedAppendWritesAll" /> property.</summary>
        private bool? _allowProtectedAppendWritesAll;

        /// <summary>
        /// This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written
        /// to both 'Append and Bock Blobs' while maintaining immutability protection and compliance. Only new blocks can be added
        /// and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API.
        /// The 'allowProtectedAppendWrites' and 'allowProtectedAppendWritesAll' properties are mutually exclusive.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public bool? AllowProtectedAppendWritesAll { get => this._allowProtectedAppendWritesAll; set => this._allowProtectedAppendWritesAll = value; }

        /// <summary>Backing field for <see cref="ImmutabilityPeriodSinceCreationInDay" /> property.</summary>
        private int? _immutabilityPeriodSinceCreationInDay;

        /// <summary>
        /// The immutability period for the blobs in the container since the policy creation, in days.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public int? ImmutabilityPeriodSinceCreationInDay { get => this._immutabilityPeriodSinceCreationInDay; set => this._immutabilityPeriodSinceCreationInDay = value; }

        /// <summary>Internal Acessors for State</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.ImmutabilityPolicyState? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.IImmutabilityPolicyPropertyInternal.State { get => this._state; set { {_state = value;} } }

        /// <summary>Backing field for <see cref="State" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.ImmutabilityPolicyState? _state;

        /// <summary>
        /// The ImmutabilityPolicy state of a blob container, possible values include: Locked and Unlocked.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.ImmutabilityPolicyState? State { get => this._state; }

        /// <summary>Creates an new <see cref="ImmutabilityPolicyProperty" /> instance.</summary>
        public ImmutabilityPolicyProperty()
        {

        }
    }
    /// The properties of an ImmutabilityPolicy of a blob container.
    public partial interface IImmutabilityPolicyProperty :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.IJsonSerializable
    {
        /// <summary>
        /// This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written
        /// to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing
        /// blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API.",
        SerializedName = @"allowProtectedAppendWrites",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AllowProtectedAppendWrite { get; set; }
        /// <summary>
        /// This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written
        /// to both 'Append and Bock Blobs' while maintaining immutability protection and compliance. Only new blocks can be added
        /// and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API.
        /// The 'allowProtectedAppendWrites' and 'allowProtectedAppendWritesAll' properties are mutually exclusive.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API. The 'allowProtectedAppendWrites' and 'allowProtectedAppendWritesAll' properties are mutually exclusive.",
        SerializedName = @"allowProtectedAppendWritesAll",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AllowProtectedAppendWritesAll { get; set; }
        /// <summary>
        /// The immutability period for the blobs in the container since the policy creation, in days.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The immutability period for the blobs in the container since the policy creation, in days.",
        SerializedName = @"immutabilityPeriodSinceCreationInDays",
        PossibleTypes = new [] { typeof(int) })]
        int? ImmutabilityPeriodSinceCreationInDay { get; set; }
        /// <summary>
        /// The ImmutabilityPolicy state of a blob container, possible values include: Locked and Unlocked.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The ImmutabilityPolicy state of a blob container, possible values include: Locked and Unlocked.",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.ImmutabilityPolicyState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.ImmutabilityPolicyState? State { get;  }

    }
    /// The properties of an ImmutabilityPolicy of a blob container.
    internal partial interface IImmutabilityPolicyPropertyInternal

    {
        /// <summary>
        /// This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written
        /// to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing
        /// blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API.
        /// </summary>
        bool? AllowProtectedAppendWrite { get; set; }
        /// <summary>
        /// This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written
        /// to both 'Append and Bock Blobs' while maintaining immutability protection and compliance. Only new blocks can be added
        /// and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API.
        /// The 'allowProtectedAppendWrites' and 'allowProtectedAppendWritesAll' properties are mutually exclusive.
        /// </summary>
        bool? AllowProtectedAppendWritesAll { get; set; }
        /// <summary>
        /// The immutability period for the blobs in the container since the policy creation, in days.
        /// </summary>
        int? ImmutabilityPeriodSinceCreationInDay { get; set; }
        /// <summary>
        /// The ImmutabilityPolicy state of a blob container, possible values include: Locked and Unlocked.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.ImmutabilityPolicyState? State { get; set; }

    }
}