// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Extensions;

    /// <summary>The LegalHold property of a blob container.</summary>
    public partial class LegalHold :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.ILegalHold,
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.ILegalHoldInternal
    {

        /// <summary>Backing field for <see cref="AllowProtectedAppendWritesAll" /> property.</summary>
        private bool? _allowProtectedAppendWritesAll;

        /// <summary>
        /// When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining legal hold protection and compliance.
        /// Only new blocks can be added and any existing blocks cannot be modified or deleted.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public bool? AllowProtectedAppendWritesAll { get => this._allowProtectedAppendWritesAll; set => this._allowProtectedAppendWritesAll = value; }

        /// <summary>Backing field for <see cref="HasLegalHold" /> property.</summary>
        private bool? _hasLegalHold;

        /// <summary>
        /// The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public
        /// property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers
        /// with hasLegalHold=true for a given account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public bool? HasLegalHold { get => this._hasLegalHold; }

        /// <summary>Internal Acessors for HasLegalHold</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20210901.ILegalHoldInternal.HasLegalHold { get => this._hasLegalHold; set { {_hasLegalHold = value;} } }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private string[] _tag;

        /// <summary>
        /// Each tag should be 3 to 23 alphanumeric characters and is normalized to lower case at SRP.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public string[] Tag { get => this._tag; set => this._tag = value; }

        /// <summary>Creates an new <see cref="LegalHold" /> instance.</summary>
        public LegalHold()
        {

        }
    }
    /// The LegalHold property of a blob container.
    public partial interface ILegalHold :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.IJsonSerializable
    {
        /// <summary>
        /// When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining legal hold protection and compliance.
        /// Only new blocks can be added and any existing blocks cannot be modified or deleted.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining legal hold protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted.",
        SerializedName = @"allowProtectedAppendWritesAll",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AllowProtectedAppendWritesAll { get; set; }
        /// <summary>
        /// The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public
        /// property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers
        /// with hasLegalHold=true for a given account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account.",
        SerializedName = @"hasLegalHold",
        PossibleTypes = new [] { typeof(bool) })]
        bool? HasLegalHold { get;  }
        /// <summary>
        /// Each tag should be 3 to 23 alphanumeric characters and is normalized to lower case at SRP.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Each tag should be 3 to 23 alphanumeric characters and is normalized to lower case at SRP.",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(string) })]
        string[] Tag { get; set; }

    }
    /// The LegalHold property of a blob container.
    internal partial interface ILegalHoldInternal

    {
        /// <summary>
        /// When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining legal hold protection and compliance.
        /// Only new blocks can be added and any existing blocks cannot be modified or deleted.
        /// </summary>
        bool? AllowProtectedAppendWritesAll { get; set; }
        /// <summary>
        /// The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public
        /// property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers
        /// with hasLegalHold=true for a given account.
        /// </summary>
        bool? HasLegalHold { get; set; }
        /// <summary>
        /// Each tag should be 3 to 23 alphanumeric characters and is normalized to lower case at SRP.
        /// </summary>
        string[] Tag { get; set; }

    }
}