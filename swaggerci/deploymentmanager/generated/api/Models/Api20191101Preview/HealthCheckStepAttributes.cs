// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DeploymentManager.Models.Api20191101Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DeploymentManager.Runtime.Extensions;

    /// <summary>The attributes for the health check step.</summary>
    public partial class HealthCheckStepAttributes :
        Microsoft.Azure.PowerShell.Cmdlets.DeploymentManager.Models.Api20191101Preview.IHealthCheckStepAttributes,
        Microsoft.Azure.PowerShell.Cmdlets.DeploymentManager.Models.Api20191101Preview.IHealthCheckStepAttributesInternal
    {

        /// <summary>Backing field for <see cref="HealthyStateDuration" /> property.</summary>
        private string _healthyStateDuration;

        /// <summary>
        /// The duration in ISO 8601 format for which the resource is expected to be continuously healthy. If maxElasticDuration is
        /// specified, healthy state duration is enforced after the detection of first healthy signal.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeploymentManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeploymentManager.PropertyOrigin.Owned)]
        public string HealthyStateDuration { get => this._healthyStateDuration; set => this._healthyStateDuration = value; }

        /// <summary>Backing field for <see cref="MaxElasticDuration" /> property.</summary>
        private string _maxElasticDuration;

        /// <summary>
        /// The duration in ISO 8601 format for which the health check waits for the resource to become healthy. Health check fails
        /// if it doesn't. Health check starts to enforce healthyStateDuration once resource becomes healthy.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeploymentManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeploymentManager.PropertyOrigin.Owned)]
        public string MaxElasticDuration { get => this._maxElasticDuration; set => this._maxElasticDuration = value; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>The type of health check.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeploymentManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeploymentManager.PropertyOrigin.Owned)]
        public string Type { get => this._type; set => this._type = value; }

        /// <summary>Backing field for <see cref="WaitDuration" /> property.</summary>
        private string _waitDuration;

        /// <summary>
        /// The duration in ISO 8601 format for which health check waits idly without any checks.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeploymentManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeploymentManager.PropertyOrigin.Owned)]
        public string WaitDuration { get => this._waitDuration; set => this._waitDuration = value; }

        /// <summary>Creates an new <see cref="HealthCheckStepAttributes" /> instance.</summary>
        public HealthCheckStepAttributes()
        {

        }
    }
    /// The attributes for the health check step.
    public partial interface IHealthCheckStepAttributes :
        Microsoft.Azure.PowerShell.Cmdlets.DeploymentManager.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The duration in ISO 8601 format for which the resource is expected to be continuously healthy. If maxElasticDuration is
        /// specified, healthy state duration is enforced after the detection of first healthy signal.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeploymentManager.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The duration in ISO 8601 format for which the resource is expected to be continuously healthy. If maxElasticDuration is specified, healthy state duration is enforced after the detection of first healthy signal.",
        SerializedName = @"healthyStateDuration",
        PossibleTypes = new [] { typeof(string) })]
        string HealthyStateDuration { get; set; }
        /// <summary>
        /// The duration in ISO 8601 format for which the health check waits for the resource to become healthy. Health check fails
        /// if it doesn't. Health check starts to enforce healthyStateDuration once resource becomes healthy.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeploymentManager.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The duration in ISO 8601 format for which the health check waits for the resource to become healthy. Health check fails if it doesn't. Health check starts to enforce healthyStateDuration once resource becomes healthy.",
        SerializedName = @"maxElasticDuration",
        PossibleTypes = new [] { typeof(string) })]
        string MaxElasticDuration { get; set; }
        /// <summary>The type of health check.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeploymentManager.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The type of health check.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get; set; }
        /// <summary>
        /// The duration in ISO 8601 format for which health check waits idly without any checks.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeploymentManager.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The duration in ISO 8601 format for which health check waits idly without any checks.",
        SerializedName = @"waitDuration",
        PossibleTypes = new [] { typeof(string) })]
        string WaitDuration { get; set; }

    }
    /// The attributes for the health check step.
    internal partial interface IHealthCheckStepAttributesInternal

    {
        /// <summary>
        /// The duration in ISO 8601 format for which the resource is expected to be continuously healthy. If maxElasticDuration is
        /// specified, healthy state duration is enforced after the detection of first healthy signal.
        /// </summary>
        string HealthyStateDuration { get; set; }
        /// <summary>
        /// The duration in ISO 8601 format for which the health check waits for the resource to become healthy. Health check fails
        /// if it doesn't. Health check starts to enforce healthyStateDuration once resource becomes healthy.
        /// </summary>
        string MaxElasticDuration { get; set; }
        /// <summary>The type of health check.</summary>
        string Type { get; set; }
        /// <summary>
        /// The duration in ISO 8601 format for which health check waits idly without any checks.
        /// </summary>
        string WaitDuration { get; set; }

    }
}