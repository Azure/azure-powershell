// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Runtime.Extensions;

    public partial class CloudShellIdentity :
        Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Models.ICloudShellIdentity,
        Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Models.ICloudShellIdentityInternal
    {

        /// <summary>Backing field for <see cref="ConsoleName" /> property.</summary>
        private string _consoleName;

        /// <summary>The name of the console</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Origin(Microsoft.Azure.PowerShell.Cmdlets.CloudShell.PropertyOrigin.Owned)]
        public string ConsoleName { get => this._consoleName; set => this._consoleName = value; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>Resource identity path</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Origin(Microsoft.Azure.PowerShell.Cmdlets.CloudShell.PropertyOrigin.Owned)]
        public string Id { get => this._id; set => this._id = value; }

        /// <summary>Backing field for <see cref="Location" /> property.</summary>
        private string _location;

        /// <summary>The provider location</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Origin(Microsoft.Azure.PowerShell.Cmdlets.CloudShell.PropertyOrigin.Owned)]
        public string Location { get => this._location; set => this._location = value; }

        /// <summary>Backing field for <see cref="UserSettingsName" /> property.</summary>
        private string _userSettingsName;

        /// <summary>The name of the user settings</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Origin(Microsoft.Azure.PowerShell.Cmdlets.CloudShell.PropertyOrigin.Owned)]
        public string UserSettingsName { get => this._userSettingsName; set => this._userSettingsName = value; }

        /// <summary>Creates an new <see cref="CloudShellIdentity" /> instance.</summary>
        public CloudShellIdentity()
        {

        }
    }
    public partial interface ICloudShellIdentity :
        Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Runtime.IJsonSerializable
    {
        /// <summary>The name of the console</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the console",
        SerializedName = @"consoleName",
        PossibleTypes = new [] { typeof(string) })]
        string ConsoleName { get; set; }
        /// <summary>Resource identity path</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource identity path",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get; set; }
        /// <summary>The provider location</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The provider location",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string Location { get; set; }
        /// <summary>The name of the user settings</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the user settings",
        SerializedName = @"userSettingsName",
        PossibleTypes = new [] { typeof(string) })]
        string UserSettingsName { get; set; }

    }
    internal partial interface ICloudShellIdentityInternal

    {
        /// <summary>The name of the console</summary>
        string ConsoleName { get; set; }
        /// <summary>Resource identity path</summary>
        string Id { get; set; }
        /// <summary>The provider location</summary>
        string Location { get; set; }
        /// <summary>The name of the user settings</summary>
        string UserSettingsName { get; set; }

    }
}