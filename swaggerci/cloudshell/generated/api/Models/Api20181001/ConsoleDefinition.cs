// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Models.Api20181001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Runtime.Extensions;

    /// <summary>Console definition</summary>
    public partial class ConsoleDefinition :
        Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Models.Api20181001.IConsoleDefinition,
        Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Models.Api20181001.IConsoleDefinitionInternal,
        Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Models.IAny" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Models.IAny __any = new Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Models.Any();

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Models.Api20181001.IConsoleCreateProperties Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Models.Api20181001.IConsoleDefinitionInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Models.Api20181001.ConsoleCreateProperties()); set { {_property = value;} } }

        /// <summary>The operating system type of the cloud shell.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Origin(Microsoft.Azure.PowerShell.Cmdlets.CloudShell.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Support.OSType OSType { get => ((Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Models.Api20181001.IConsoleCreatePropertiesInternal)Property).OSType; set => ((Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Models.Api20181001.IConsoleCreatePropertiesInternal)Property).OSType = value ; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Models.Api20181001.IConsoleCreateProperties _property;

        /// <summary>Cloud shell properties for creating a console.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Origin(Microsoft.Azure.PowerShell.Cmdlets.CloudShell.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Models.Api20181001.IConsoleCreateProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Models.Api20181001.ConsoleCreateProperties()); set => this._property = value; }

        /// <summary>Provisioning state of the console.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Origin(Microsoft.Azure.PowerShell.Cmdlets.CloudShell.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Support.ProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Models.Api20181001.IConsoleCreatePropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Models.Api20181001.IConsoleCreatePropertiesInternal)Property).ProvisioningState = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Support.ProvisioningState)""); }

        /// <summary>Uri of the console.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Origin(Microsoft.Azure.PowerShell.Cmdlets.CloudShell.PropertyOrigin.Inlined)]
        public string Uri { get => ((Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Models.Api20181001.IConsoleCreatePropertiesInternal)Property).Uri; set => ((Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Models.Api20181001.IConsoleCreatePropertiesInternal)Property).Uri = value ?? null; }

        /// <summary>Creates an new <see cref="ConsoleDefinition" /> instance.</summary>
        public ConsoleDefinition()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__any), __any);
            await eventListener.AssertObjectIsValid(nameof(__any), __any);
        }
    }
    /// Console definition
    public partial interface IConsoleDefinition :
        Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Models.IAny
    {
        /// <summary>The operating system type of the cloud shell.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The operating system type of the cloud shell.",
        SerializedName = @"osType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Support.OSType) })]
        Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Support.OSType OSType { get; set; }
        /// <summary>Provisioning state of the console.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Provisioning state of the console.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>Uri of the console.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Uri of the console.",
        SerializedName = @"uri",
        PossibleTypes = new [] { typeof(string) })]
        string Uri { get; set; }

    }
    /// Console definition
    internal partial interface IConsoleDefinitionInternal :
        Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Models.IAnyInternal
    {
        /// <summary>The operating system type of the cloud shell.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Support.OSType OSType { get; set; }
        /// <summary>Cloud shell properties for creating a console.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Models.Api20181001.IConsoleCreateProperties Property { get; set; }
        /// <summary>Provisioning state of the console.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CloudShell.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>Uri of the console.</summary>
        string Uri { get; set; }

    }
}