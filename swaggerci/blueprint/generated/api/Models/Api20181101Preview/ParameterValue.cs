// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Blueprint.Models.Api20181101Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Blueprint.Runtime.Extensions;

    /// <summary>
    /// Value for the specified parameter. Can be either 'value' or 'reference' but not both.
    /// </summary>
    public partial class ParameterValue :
        Microsoft.Azure.PowerShell.Cmdlets.Blueprint.Models.Api20181101Preview.IParameterValue,
        Microsoft.Azure.PowerShell.Cmdlets.Blueprint.Models.Api20181101Preview.IParameterValueInternal
    {

        /// <summary>Azure resource ID of the Key Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Blueprint.Origin(Microsoft.Azure.PowerShell.Cmdlets.Blueprint.PropertyOrigin.Inlined)]
        public string KeyVaultId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Blueprint.Models.Api20181101Preview.ISecretValueReferenceInternal)Reference).KeyVaultId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Blueprint.Models.Api20181101Preview.ISecretValueReferenceInternal)Reference).KeyVaultId = value ?? null; }

        /// <summary>Internal Acessors for Reference</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Blueprint.Models.Api20181101Preview.ISecretValueReference Microsoft.Azure.PowerShell.Cmdlets.Blueprint.Models.Api20181101Preview.IParameterValueInternal.Reference { get => (this._reference = this._reference ?? new Microsoft.Azure.PowerShell.Cmdlets.Blueprint.Models.Api20181101Preview.SecretValueReference()); set { {_reference = value;} } }

        /// <summary>Internal Acessors for ReferenceKeyVault</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Blueprint.Models.Api20181101Preview.IKeyVaultReference Microsoft.Azure.PowerShell.Cmdlets.Blueprint.Models.Api20181101Preview.IParameterValueInternal.ReferenceKeyVault { get => ((Microsoft.Azure.PowerShell.Cmdlets.Blueprint.Models.Api20181101Preview.ISecretValueReferenceInternal)Reference).KeyVault; set => ((Microsoft.Azure.PowerShell.Cmdlets.Blueprint.Models.Api20181101Preview.ISecretValueReferenceInternal)Reference).KeyVault = value; }

        /// <summary>Backing field for <see cref="Reference" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Blueprint.Models.Api20181101Preview.ISecretValueReference _reference;

        /// <summary>Parameter value as reference type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Blueprint.Origin(Microsoft.Azure.PowerShell.Cmdlets.Blueprint.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Blueprint.Models.Api20181101Preview.ISecretValueReference Reference { get => (this._reference = this._reference ?? new Microsoft.Azure.PowerShell.Cmdlets.Blueprint.Models.Api20181101Preview.SecretValueReference()); set => this._reference = value; }

        /// <summary>Name of the secret.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Blueprint.Origin(Microsoft.Azure.PowerShell.Cmdlets.Blueprint.PropertyOrigin.Inlined)]
        public string ReferenceSecretName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Blueprint.Models.Api20181101Preview.ISecretValueReferenceInternal)Reference).SecretName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Blueprint.Models.Api20181101Preview.ISecretValueReferenceInternal)Reference).SecretName = value ?? null; }

        /// <summary>
        /// The version of the secret to use. If left blank, the latest version of the secret is used.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Blueprint.Origin(Microsoft.Azure.PowerShell.Cmdlets.Blueprint.PropertyOrigin.Inlined)]
        public string ReferenceSecretVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Blueprint.Models.Api20181101Preview.ISecretValueReferenceInternal)Reference).SecretVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Blueprint.Models.Api20181101Preview.ISecretValueReferenceInternal)Reference).SecretVersion = value ?? null; }

        /// <summary>Backing field for <see cref="Value" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Blueprint.Models.IAny _value;

        /// <summary>
        /// Parameter value. Any valid JSON value is allowed including objects, arrays, strings, numbers and booleans.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Blueprint.Origin(Microsoft.Azure.PowerShell.Cmdlets.Blueprint.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Blueprint.Models.IAny Value { get => (this._value = this._value ?? new Microsoft.Azure.PowerShell.Cmdlets.Blueprint.Models.Any()); set => this._value = value; }

        /// <summary>Creates an new <see cref="ParameterValue" /> instance.</summary>
        public ParameterValue()
        {

        }
    }
    /// Value for the specified parameter. Can be either 'value' or 'reference' but not both.
    public partial interface IParameterValue :
        Microsoft.Azure.PowerShell.Cmdlets.Blueprint.Runtime.IJsonSerializable
    {
        /// <summary>Azure resource ID of the Key Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Blueprint.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Azure resource ID of the Key Vault.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultId { get; set; }
        /// <summary>Name of the secret.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Blueprint.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the secret.",
        SerializedName = @"secretName",
        PossibleTypes = new [] { typeof(string) })]
        string ReferenceSecretName { get; set; }
        /// <summary>
        /// The version of the secret to use. If left blank, the latest version of the secret is used.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Blueprint.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The version of the secret to use. If left blank, the latest version of the secret is used.",
        SerializedName = @"secretVersion",
        PossibleTypes = new [] { typeof(string) })]
        string ReferenceSecretVersion { get; set; }
        /// <summary>
        /// Parameter value. Any valid JSON value is allowed including objects, arrays, strings, numbers and booleans.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Blueprint.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Parameter value. Any valid JSON value is allowed including objects, arrays, strings, numbers and booleans.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Blueprint.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.Blueprint.Models.IAny Value { get; set; }

    }
    /// Value for the specified parameter. Can be either 'value' or 'reference' but not both.
    internal partial interface IParameterValueInternal

    {
        /// <summary>Azure resource ID of the Key Vault.</summary>
        string KeyVaultId { get; set; }
        /// <summary>Parameter value as reference type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Blueprint.Models.Api20181101Preview.ISecretValueReference Reference { get; set; }
        /// <summary>Specifies the reference to a given Azure Key Vault.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Blueprint.Models.Api20181101Preview.IKeyVaultReference ReferenceKeyVault { get; set; }
        /// <summary>Name of the secret.</summary>
        string ReferenceSecretName { get; set; }
        /// <summary>
        /// The version of the secret to use. If left blank, the latest version of the secret is used.
        /// </summary>
        string ReferenceSecretVersion { get; set; }
        /// <summary>
        /// Parameter value. Any valid JSON value is allowed including objects, arrays, strings, numbers and booleans.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Blueprint.Models.IAny Value { get; set; }

    }
}