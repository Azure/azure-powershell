// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Extensions;

    /// <summary>Configuration properties for apps environment custom domain</summary>
    public partial class CustomDomainConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICustomDomainConfiguration,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICustomDomainConfigurationInternal
    {

        /// <summary>Backing field for <see cref="CertificatePassword" /> property.</summary>
        private string _certificatePassword;

        /// <summary>Certificate password</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public string CertificatePassword { get => this._certificatePassword; set => this._certificatePassword = value; }

        /// <summary>Backing field for <see cref="CertificateValue" /> property.</summary>
        private byte[] _certificateValue;

        /// <summary>PFX or PEM blob</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public byte[] CertificateValue { get => this._certificateValue; set => this._certificateValue = value; }

        /// <summary>Backing field for <see cref="CustomDomainVerificationId" /> property.</summary>
        private string _customDomainVerificationId;

        /// <summary>Id used to verify domain name ownership</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public string CustomDomainVerificationId { get => this._customDomainVerificationId; }

        /// <summary>Backing field for <see cref="DnsSuffix" /> property.</summary>
        private string _dnsSuffix;

        /// <summary>Dns suffix for the environment domain</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public string DnsSuffix { get => this._dnsSuffix; set => this._dnsSuffix = value; }

        /// <summary>Backing field for <see cref="ExpirationDate" /> property.</summary>
        private global::System.DateTime? _expirationDate;

        /// <summary>Certificate expiration date.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public global::System.DateTime? ExpirationDate { get => this._expirationDate; }

        /// <summary>Internal Acessors for CustomDomainVerificationId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICustomDomainConfigurationInternal.CustomDomainVerificationId { get => this._customDomainVerificationId; set { {_customDomainVerificationId = value;} } }

        /// <summary>Internal Acessors for ExpirationDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICustomDomainConfigurationInternal.ExpirationDate { get => this._expirationDate; set { {_expirationDate = value;} } }

        /// <summary>Internal Acessors for SubjectName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICustomDomainConfigurationInternal.SubjectName { get => this._subjectName; set { {_subjectName = value;} } }

        /// <summary>Internal Acessors for Thumbprint</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICustomDomainConfigurationInternal.Thumbprint { get => this._thumbprint; set { {_thumbprint = value;} } }

        /// <summary>Backing field for <see cref="SubjectName" /> property.</summary>
        private string _subjectName;

        /// <summary>Subject name of the certificate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public string SubjectName { get => this._subjectName; }

        /// <summary>Backing field for <see cref="Thumbprint" /> property.</summary>
        private string _thumbprint;

        /// <summary>Certificate thumbprint.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public string Thumbprint { get => this._thumbprint; }

        /// <summary>Creates an new <see cref="CustomDomainConfiguration" /> instance.</summary>
        public CustomDomainConfiguration()
        {

        }
    }
    /// Configuration properties for apps environment custom domain
    public partial interface ICustomDomainConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.IJsonSerializable
    {
        /// <summary>Certificate password</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Certificate password",
        SerializedName = @"certificatePassword",
        PossibleTypes = new [] { typeof(string) })]
        string CertificatePassword { get; set; }
        /// <summary>PFX or PEM blob</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"PFX or PEM blob",
        SerializedName = @"certificateValue",
        PossibleTypes = new [] { typeof(byte[]) })]
        byte[] CertificateValue { get; set; }
        /// <summary>Id used to verify domain name ownership</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Id used to verify domain name ownership",
        SerializedName = @"customDomainVerificationId",
        PossibleTypes = new [] { typeof(string) })]
        string CustomDomainVerificationId { get;  }
        /// <summary>Dns suffix for the environment domain</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Dns suffix for the environment domain",
        SerializedName = @"dnsSuffix",
        PossibleTypes = new [] { typeof(string) })]
        string DnsSuffix { get; set; }
        /// <summary>Certificate expiration date.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Certificate expiration date.",
        SerializedName = @"expirationDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ExpirationDate { get;  }
        /// <summary>Subject name of the certificate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Subject name of the certificate.",
        SerializedName = @"subjectName",
        PossibleTypes = new [] { typeof(string) })]
        string SubjectName { get;  }
        /// <summary>Certificate thumbprint.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Certificate thumbprint.",
        SerializedName = @"thumbprint",
        PossibleTypes = new [] { typeof(string) })]
        string Thumbprint { get;  }

    }
    /// Configuration properties for apps environment custom domain
    internal partial interface ICustomDomainConfigurationInternal

    {
        /// <summary>Certificate password</summary>
        string CertificatePassword { get; set; }
        /// <summary>PFX or PEM blob</summary>
        byte[] CertificateValue { get; set; }
        /// <summary>Id used to verify domain name ownership</summary>
        string CustomDomainVerificationId { get; set; }
        /// <summary>Dns suffix for the environment domain</summary>
        string DnsSuffix { get; set; }
        /// <summary>Certificate expiration date.</summary>
        global::System.DateTime? ExpirationDate { get; set; }
        /// <summary>Subject name of the certificate.</summary>
        string SubjectName { get; set; }
        /// <summary>Certificate thumbprint.</summary>
        string Thumbprint { get; set; }

    }
}