// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Extensions;

    /// <summary>Container App Ingress configuration.</summary>
    public partial class Ingress :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IIngress,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IIngressInternal
    {

        /// <summary>Backing field for <see cref="AllowInsecure" /> property.</summary>
        private bool? _allowInsecure;

        /// <summary>
        /// Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS
        /// connections
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public bool? AllowInsecure { get => this._allowInsecure; set => this._allowInsecure = value; }

        /// <summary>Backing field for <see cref="ClientCertificateMode" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.IngressClientCertificateMode? _clientCertificateMode;

        /// <summary>
        /// Client certificate mode for mTLS authentication. Ignore indicates server drops client certificate on forwarding. Accept
        /// indicates server forwards client certificate but does not require a client certificate. Require indicates server requires
        /// a client certificate.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.IngressClientCertificateMode? ClientCertificateMode { get => this._clientCertificateMode; set => this._clientCertificateMode = value; }

        /// <summary>Specifies whether the resource allows credentials</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public bool? CorPolicyAllowCredentials { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICorsPolicyInternal)CorsPolicy).AllowCredentials; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICorsPolicyInternal)CorsPolicy).AllowCredentials = value ?? default(bool); }

        /// <summary>Specifies the content for the access-control-allow-headers header</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string[] CorPolicyAllowedHeader { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICorsPolicyInternal)CorsPolicy).AllowedHeader; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICorsPolicyInternal)CorsPolicy).AllowedHeader = value ?? null /* arrayOf */; }

        /// <summary>Specifies the content for the access-control-allow-methods header</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string[] CorPolicyAllowedMethod { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICorsPolicyInternal)CorsPolicy).AllowedMethod; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICorsPolicyInternal)CorsPolicy).AllowedMethod = value ?? null /* arrayOf */; }

        /// <summary>Specifies the content for the access-control-allow-origins header</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string[] CorPolicyAllowedOrigin { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICorsPolicyInternal)CorsPolicy).AllowedOrigin; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICorsPolicyInternal)CorsPolicy).AllowedOrigin = value ?? null /* arrayOf */; }

        /// <summary>Specifies the content for the access-control-expose-headers header</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string[] CorPolicyExposeHeader { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICorsPolicyInternal)CorsPolicy).ExposeHeader; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICorsPolicyInternal)CorsPolicy).ExposeHeader = value ?? null /* arrayOf */; }

        /// <summary>Specifies the content for the access-control-max-age header</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public int? CorPolicyMaxAge { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICorsPolicyInternal)CorsPolicy).MaxAge; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICorsPolicyInternal)CorsPolicy).MaxAge = value ?? default(int); }

        /// <summary>Backing field for <see cref="CorsPolicy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICorsPolicy _corsPolicy;

        /// <summary>CORS policy for container app</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICorsPolicy CorsPolicy { get => (this._corsPolicy = this._corsPolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.CorsPolicy()); set => this._corsPolicy = value; }

        /// <summary>Backing field for <see cref="CustomDomain" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICustomDomain[] _customDomain;

        /// <summary>custom domain bindings for Container Apps' hostnames.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICustomDomain[] CustomDomain { get => this._customDomain; set => this._customDomain = value; }

        /// <summary>Backing field for <see cref="ExposedPort" /> property.</summary>
        private int? _exposedPort;

        /// <summary>Exposed Port in containers for TCP traffic from ingress</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public int? ExposedPort { get => this._exposedPort; set => this._exposedPort = value; }

        /// <summary>Backing field for <see cref="External" /> property.</summary>
        private bool? _external;

        /// <summary>Bool indicating if app exposes an external http endpoint</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public bool? External { get => this._external; set => this._external = value; }

        /// <summary>Backing field for <see cref="Fqdn" /> property.</summary>
        private string _fqdn;

        /// <summary>Hostname.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public string Fqdn { get => this._fqdn; }

        /// <summary>Backing field for <see cref="IPSecurityRestriction" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IIPSecurityRestrictionRule[] _iPSecurityRestriction;

        /// <summary>Rules to restrict incoming IP address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IIPSecurityRestrictionRule[] IPSecurityRestriction { get => this._iPSecurityRestriction; set => this._iPSecurityRestriction = value; }

        /// <summary>Internal Acessors for CorsPolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICorsPolicy Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IIngressInternal.CorsPolicy { get => (this._corsPolicy = this._corsPolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.CorsPolicy()); set { {_corsPolicy = value;} } }

        /// <summary>Internal Acessors for Fqdn</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IIngressInternal.Fqdn { get => this._fqdn; set { {_fqdn = value;} } }

        /// <summary>Internal Acessors for StickySession</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IIngressStickySessions Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IIngressInternal.StickySession { get => (this._stickySession = this._stickySession ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IngressStickySessions()); set { {_stickySession = value;} } }

        /// <summary>Backing field for <see cref="StickySession" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IIngressStickySessions _stickySession;

        /// <summary>Sticky Sessions for Single Revision Mode</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IIngressStickySessions StickySession { get => (this._stickySession = this._stickySession ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IngressStickySessions()); set => this._stickySession = value; }

        /// <summary>Sticky Session Affinity</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.Affinity? StickySessionAffinity { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IIngressStickySessionsInternal)StickySession).Affinity; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IIngressStickySessionsInternal)StickySession).Affinity = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.Affinity)""); }

        /// <summary>Backing field for <see cref="TargetPort" /> property.</summary>
        private int? _targetPort;

        /// <summary>Target Port in containers for traffic from ingress</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public int? TargetPort { get => this._targetPort; set => this._targetPort = value; }

        /// <summary>Backing field for <see cref="Traffic" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ITrafficWeight[] _traffic;

        /// <summary>Traffic weights for app's revisions</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ITrafficWeight[] Traffic { get => this._traffic; set => this._traffic = value; }

        /// <summary>Backing field for <see cref="Transport" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.IngressTransportMethod? _transport;

        /// <summary>Ingress transport protocol</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.IngressTransportMethod? Transport { get => this._transport; set => this._transport = value; }

        /// <summary>Creates an new <see cref="Ingress" /> instance.</summary>
        public Ingress()
        {

        }
    }
    /// Container App Ingress configuration.
    public partial interface IIngress :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS
        /// connections
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS connections",
        SerializedName = @"allowInsecure",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AllowInsecure { get; set; }
        /// <summary>
        /// Client certificate mode for mTLS authentication. Ignore indicates server drops client certificate on forwarding. Accept
        /// indicates server forwards client certificate but does not require a client certificate. Require indicates server requires
        /// a client certificate.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Client certificate mode for mTLS authentication. Ignore indicates server drops client certificate on forwarding. Accept indicates server forwards client certificate but does not require a client certificate. Require indicates server requires a client certificate.",
        SerializedName = @"clientCertificateMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.IngressClientCertificateMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.IngressClientCertificateMode? ClientCertificateMode { get; set; }
        /// <summary>Specifies whether the resource allows credentials</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies whether the resource allows credentials",
        SerializedName = @"allowCredentials",
        PossibleTypes = new [] { typeof(bool) })]
        bool? CorPolicyAllowCredentials { get; set; }
        /// <summary>Specifies the content for the access-control-allow-headers header</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the content for the access-control-allow-headers header",
        SerializedName = @"allowedHeaders",
        PossibleTypes = new [] { typeof(string) })]
        string[] CorPolicyAllowedHeader { get; set; }
        /// <summary>Specifies the content for the access-control-allow-methods header</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the content for the access-control-allow-methods header",
        SerializedName = @"allowedMethods",
        PossibleTypes = new [] { typeof(string) })]
        string[] CorPolicyAllowedMethod { get; set; }
        /// <summary>Specifies the content for the access-control-allow-origins header</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the content for the access-control-allow-origins header",
        SerializedName = @"allowedOrigins",
        PossibleTypes = new [] { typeof(string) })]
        string[] CorPolicyAllowedOrigin { get; set; }
        /// <summary>Specifies the content for the access-control-expose-headers header</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the content for the access-control-expose-headers header ",
        SerializedName = @"exposeHeaders",
        PossibleTypes = new [] { typeof(string) })]
        string[] CorPolicyExposeHeader { get; set; }
        /// <summary>Specifies the content for the access-control-max-age header</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the content for the access-control-max-age header",
        SerializedName = @"maxAge",
        PossibleTypes = new [] { typeof(int) })]
        int? CorPolicyMaxAge { get; set; }
        /// <summary>custom domain bindings for Container Apps' hostnames.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"custom domain bindings for Container Apps' hostnames.",
        SerializedName = @"customDomains",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICustomDomain) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICustomDomain[] CustomDomain { get; set; }
        /// <summary>Exposed Port in containers for TCP traffic from ingress</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Exposed Port in containers for TCP traffic from ingress",
        SerializedName = @"exposedPort",
        PossibleTypes = new [] { typeof(int) })]
        int? ExposedPort { get; set; }
        /// <summary>Bool indicating if app exposes an external http endpoint</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Bool indicating if app exposes an external http endpoint",
        SerializedName = @"external",
        PossibleTypes = new [] { typeof(bool) })]
        bool? External { get; set; }
        /// <summary>Hostname.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Hostname.",
        SerializedName = @"fqdn",
        PossibleTypes = new [] { typeof(string) })]
        string Fqdn { get;  }
        /// <summary>Rules to restrict incoming IP address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Rules to restrict incoming IP address.",
        SerializedName = @"ipSecurityRestrictions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IIPSecurityRestrictionRule) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IIPSecurityRestrictionRule[] IPSecurityRestriction { get; set; }
        /// <summary>Sticky Session Affinity</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Sticky Session Affinity",
        SerializedName = @"affinity",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.Affinity) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.Affinity? StickySessionAffinity { get; set; }
        /// <summary>Target Port in containers for traffic from ingress</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Target Port in containers for traffic from ingress",
        SerializedName = @"targetPort",
        PossibleTypes = new [] { typeof(int) })]
        int? TargetPort { get; set; }
        /// <summary>Traffic weights for app's revisions</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Traffic weights for app's revisions",
        SerializedName = @"traffic",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ITrafficWeight) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ITrafficWeight[] Traffic { get; set; }
        /// <summary>Ingress transport protocol</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Ingress transport protocol",
        SerializedName = @"transport",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.IngressTransportMethod) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.IngressTransportMethod? Transport { get; set; }

    }
    /// Container App Ingress configuration.
    internal partial interface IIngressInternal

    {
        /// <summary>
        /// Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS
        /// connections
        /// </summary>
        bool? AllowInsecure { get; set; }
        /// <summary>
        /// Client certificate mode for mTLS authentication. Ignore indicates server drops client certificate on forwarding. Accept
        /// indicates server forwards client certificate but does not require a client certificate. Require indicates server requires
        /// a client certificate.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.IngressClientCertificateMode? ClientCertificateMode { get; set; }
        /// <summary>Specifies whether the resource allows credentials</summary>
        bool? CorPolicyAllowCredentials { get; set; }
        /// <summary>Specifies the content for the access-control-allow-headers header</summary>
        string[] CorPolicyAllowedHeader { get; set; }
        /// <summary>Specifies the content for the access-control-allow-methods header</summary>
        string[] CorPolicyAllowedMethod { get; set; }
        /// <summary>Specifies the content for the access-control-allow-origins header</summary>
        string[] CorPolicyAllowedOrigin { get; set; }
        /// <summary>Specifies the content for the access-control-expose-headers header</summary>
        string[] CorPolicyExposeHeader { get; set; }
        /// <summary>Specifies the content for the access-control-max-age header</summary>
        int? CorPolicyMaxAge { get; set; }
        /// <summary>CORS policy for container app</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICorsPolicy CorsPolicy { get; set; }
        /// <summary>custom domain bindings for Container Apps' hostnames.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICustomDomain[] CustomDomain { get; set; }
        /// <summary>Exposed Port in containers for TCP traffic from ingress</summary>
        int? ExposedPort { get; set; }
        /// <summary>Bool indicating if app exposes an external http endpoint</summary>
        bool? External { get; set; }
        /// <summary>Hostname.</summary>
        string Fqdn { get; set; }
        /// <summary>Rules to restrict incoming IP address.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IIPSecurityRestrictionRule[] IPSecurityRestriction { get; set; }
        /// <summary>Sticky Sessions for Single Revision Mode</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IIngressStickySessions StickySession { get; set; }
        /// <summary>Sticky Session Affinity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.Affinity? StickySessionAffinity { get; set; }
        /// <summary>Target Port in containers for traffic from ingress</summary>
        int? TargetPort { get; set; }
        /// <summary>Traffic weights for app's revisions</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ITrafficWeight[] Traffic { get; set; }
        /// <summary>Ingress transport protocol</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.IngressTransportMethod? Transport { get; set; }

    }
}