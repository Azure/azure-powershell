// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Extensions;

    /// <summary>Diagnostics resource specific properties</summary>
    public partial class DiagnosticsProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsPropertiesInternal
    {

        /// <summary>Backing field for <see cref="DataProviderMetadata" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticDataProviderMetadata _dataProviderMetadata;

        /// <summary>List of data providers' metadata.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticDataProviderMetadata DataProviderMetadata { get => (this._dataProviderMetadata = this._dataProviderMetadata ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.DiagnosticDataProviderMetadata()); set => this._dataProviderMetadata = value; }

        /// <summary>Collection of properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticDataProviderMetadataPropertyBagItem[] DataProviderMetadataPropertyBag { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticDataProviderMetadataInternal)DataProviderMetadata).PropertyBag; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticDataProviderMetadataInternal)DataProviderMetadata).PropertyBag = value ?? null /* arrayOf */; }

        /// <summary>Name of data provider</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string DataProviderMetadataProviderName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticDataProviderMetadataInternal)DataProviderMetadata).ProviderName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticDataProviderMetadataInternal)DataProviderMetadata).ProviderName = value ?? null; }

        /// <summary>Backing field for <see cref="Dataset" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsDataApiResponse[] _dataset;

        /// <summary>Set of data collections associated with the response.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsDataApiResponse[] Dataset { get => this._dataset; set => this._dataset = value; }

        /// <summary>Backing field for <see cref="Metadata" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsDefinition _metadata;

        /// <summary>Metadata of the diagnostics response.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsDefinition Metadata { get => (this._metadata = this._metadata ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.DiagnosticsDefinition()); set => this._metadata = value; }

        /// <summary>List of analysis types</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string[] MetadataAnalysisType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsDefinitionInternal)Metadata).AnalysisType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsDefinitionInternal)Metadata).AnalysisType = value ?? null /* arrayOf */; }

        /// <summary>Authors' names of the detector</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string MetadataAuthor { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsDefinitionInternal)Metadata).Author; }

        /// <summary>Category of the detector</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string MetadataCategory { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsDefinitionInternal)Metadata).Category; }

        /// <summary>Details of the diagnostics info</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string MetadataDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsDefinitionInternal)Metadata).Description; }

        /// <summary>Unique detector name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string MetadataId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsDefinitionInternal)Metadata).Id; }

        /// <summary>Display Name of the detector</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string MetadataName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsDefinitionInternal)Metadata).Name; }

        /// <summary>Authors' names of the detector</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public float? MetadataScore { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsDefinitionInternal)Metadata).Score; }

        /// <summary>List of support topics</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticSupportTopic[] MetadataSupportTopicList { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsDefinitionInternal)Metadata).SupportTopicList; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsDefinitionInternal)Metadata).SupportTopicList = value ?? null /* arrayOf */; }

        /// <summary>Authors' names of the detector</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string MetadataType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsDefinitionInternal)Metadata).Type; }

        /// <summary>Internal Acessors for DataProviderMetadata</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticDataProviderMetadata Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsPropertiesInternal.DataProviderMetadata { get => (this._dataProviderMetadata = this._dataProviderMetadata ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.DiagnosticDataProviderMetadata()); set { {_dataProviderMetadata = value;} } }

        /// <summary>Internal Acessors for Metadata</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsDefinition Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsPropertiesInternal.Metadata { get => (this._metadata = this._metadata ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.DiagnosticsDefinition()); set { {_metadata = value;} } }

        /// <summary>Internal Acessors for MetadataAuthor</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsPropertiesInternal.MetadataAuthor { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsDefinitionInternal)Metadata).Author; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsDefinitionInternal)Metadata).Author = value; }

        /// <summary>Internal Acessors for MetadataCategory</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsPropertiesInternal.MetadataCategory { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsDefinitionInternal)Metadata).Category; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsDefinitionInternal)Metadata).Category = value; }

        /// <summary>Internal Acessors for MetadataDescription</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsPropertiesInternal.MetadataDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsDefinitionInternal)Metadata).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsDefinitionInternal)Metadata).Description = value; }

        /// <summary>Internal Acessors for MetadataId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsPropertiesInternal.MetadataId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsDefinitionInternal)Metadata).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsDefinitionInternal)Metadata).Id = value; }

        /// <summary>Internal Acessors for MetadataName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsPropertiesInternal.MetadataName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsDefinitionInternal)Metadata).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsDefinitionInternal)Metadata).Name = value; }

        /// <summary>Internal Acessors for MetadataScore</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsPropertiesInternal.MetadataScore { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsDefinitionInternal)Metadata).Score; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsDefinitionInternal)Metadata).Score = value; }

        /// <summary>Internal Acessors for MetadataType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsPropertiesInternal.MetadataType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsDefinitionInternal)Metadata).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsDefinitionInternal)Metadata).Type = value; }

        /// <summary>Internal Acessors for Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsStatus Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsPropertiesInternal.Status { get => (this._status = this._status ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.DiagnosticsStatus()); set { {_status = value;} } }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsStatus _status;

        /// <summary>Status of the diagnostics response.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsStatus Status { get => (this._status = this._status ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.DiagnosticsStatus()); set => this._status = value; }

        /// <summary>Status</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public int? StatusId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsStatusInternal)Status).StatusId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsStatusInternal)Status).StatusId = value ?? default(int); }

        /// <summary>Diagnostic message</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string StatusMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsStatusInternal)Status).Message; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsStatusInternal)Status).Message = value ?? null; }

        /// <summary>Creates an new <see cref="DiagnosticsProperties" /> instance.</summary>
        public DiagnosticsProperties()
        {

        }
    }
    /// Diagnostics resource specific properties
    public partial interface IDiagnosticsProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.IJsonSerializable
    {
        /// <summary>Collection of properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Collection of properties",
        SerializedName = @"propertyBag",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticDataProviderMetadataPropertyBagItem) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticDataProviderMetadataPropertyBagItem[] DataProviderMetadataPropertyBag { get; set; }
        /// <summary>Name of data provider</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of data provider",
        SerializedName = @"providerName",
        PossibleTypes = new [] { typeof(string) })]
        string DataProviderMetadataProviderName { get; set; }
        /// <summary>Set of data collections associated with the response.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Set of data collections associated with the response.",
        SerializedName = @"dataset",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsDataApiResponse) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsDataApiResponse[] Dataset { get; set; }
        /// <summary>List of analysis types</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of analysis types",
        SerializedName = @"analysisTypes",
        PossibleTypes = new [] { typeof(string) })]
        string[] MetadataAnalysisType { get; set; }
        /// <summary>Authors' names of the detector</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Authors' names of the detector",
        SerializedName = @"author",
        PossibleTypes = new [] { typeof(string) })]
        string MetadataAuthor { get;  }
        /// <summary>Category of the detector</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Category of the detector",
        SerializedName = @"category",
        PossibleTypes = new [] { typeof(string) })]
        string MetadataCategory { get;  }
        /// <summary>Details of the diagnostics info</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Details of the diagnostics info",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string MetadataDescription { get;  }
        /// <summary>Unique detector name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Unique detector name",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string MetadataId { get;  }
        /// <summary>Display Name of the detector</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Display Name of the detector",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string MetadataName { get;  }
        /// <summary>Authors' names of the detector</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Authors' names of the detector",
        SerializedName = @"score",
        PossibleTypes = new [] { typeof(float) })]
        float? MetadataScore { get;  }
        /// <summary>List of support topics</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of support topics",
        SerializedName = @"supportTopicList",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticSupportTopic) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticSupportTopic[] MetadataSupportTopicList { get; set; }
        /// <summary>Authors' names of the detector</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Authors' names of the detector",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string MetadataType { get;  }
        /// <summary>Status</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Status",
        SerializedName = @"statusId",
        PossibleTypes = new [] { typeof(int) })]
        int? StatusId { get; set; }
        /// <summary>Diagnostic message</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Diagnostic message",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string StatusMessage { get; set; }

    }
    /// Diagnostics resource specific properties
    internal partial interface IDiagnosticsPropertiesInternal

    {
        /// <summary>List of data providers' metadata.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticDataProviderMetadata DataProviderMetadata { get; set; }
        /// <summary>Collection of properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticDataProviderMetadataPropertyBagItem[] DataProviderMetadataPropertyBag { get; set; }
        /// <summary>Name of data provider</summary>
        string DataProviderMetadataProviderName { get; set; }
        /// <summary>Set of data collections associated with the response.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsDataApiResponse[] Dataset { get; set; }
        /// <summary>Metadata of the diagnostics response.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsDefinition Metadata { get; set; }
        /// <summary>List of analysis types</summary>
        string[] MetadataAnalysisType { get; set; }
        /// <summary>Authors' names of the detector</summary>
        string MetadataAuthor { get; set; }
        /// <summary>Category of the detector</summary>
        string MetadataCategory { get; set; }
        /// <summary>Details of the diagnostics info</summary>
        string MetadataDescription { get; set; }
        /// <summary>Unique detector name</summary>
        string MetadataId { get; set; }
        /// <summary>Display Name of the detector</summary>
        string MetadataName { get; set; }
        /// <summary>Authors' names of the detector</summary>
        float? MetadataScore { get; set; }
        /// <summary>List of support topics</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticSupportTopic[] MetadataSupportTopicList { get; set; }
        /// <summary>Authors' names of the detector</summary>
        string MetadataType { get; set; }
        /// <summary>Status of the diagnostics response.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDiagnosticsStatus Status { get; set; }
        /// <summary>Status</summary>
        int? StatusId { get; set; }
        /// <summary>Diagnostic message</summary>
        string StatusMessage { get; set; }

    }
}