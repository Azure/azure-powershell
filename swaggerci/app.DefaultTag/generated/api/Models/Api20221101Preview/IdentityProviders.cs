// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Extensions;

    /// <summary>
    /// The configuration settings of each of the identity providers used to configure ContainerApp Service Authentication/Authorization.
    /// </summary>
    public partial class IdentityProviders :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IIdentityProviders,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IIdentityProvidersInternal
    {

        /// <summary>The list of the allowed groups.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string[] AllowedPrincipalGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectoryInternal)AzureActiveDirectory).AllowedPrincipalGroup; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectoryInternal)AzureActiveDirectory).AllowedPrincipalGroup = value ?? null /* arrayOf */; }

        /// <summary>The list of the allowed identities.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string[] AllowedPrincipalIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectoryInternal)AzureActiveDirectory).AllowedPrincipalIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectoryInternal)AzureActiveDirectory).AllowedPrincipalIdentity = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Apple" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IApple _apple;

        /// <summary>The configuration settings of the Apple provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IApple Apple { get => (this._apple = this._apple ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.Apple()); set => this._apple = value; }

        /// <summary>
        /// <code>false</code> if the Apple provider should not be enabled despite the set registration; otherwise, <code>true</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public bool? AppleEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAppleInternal)Apple).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAppleInternal)Apple).Enabled = value ?? default(bool); }

        /// <summary>A list of the scopes that should be requested while authenticating.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string[] AppleLoginScope { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAppleInternal)Apple).LoginScope; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAppleInternal)Apple).LoginScope = value ?? null /* arrayOf */; }

        /// <summary>The Client ID of the app used for login.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string AppleRegistrationClientId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAppleInternal)Apple).RegistrationClientId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAppleInternal)Apple).RegistrationClientId = value ?? null; }

        /// <summary>The app setting name that contains the client secret.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string AppleRegistrationClientSecretSettingName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAppleInternal)Apple).RegistrationClientSecretSettingName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAppleInternal)Apple).RegistrationClientSecretSettingName = value ?? null; }

        /// <summary>Backing field for <see cref="AzureActiveDirectory" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectory _azureActiveDirectory;

        /// <summary>The configuration settings of the Azure Active directory provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectory AzureActiveDirectory { get => (this._azureActiveDirectory = this._azureActiveDirectory ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.AzureActiveDirectory()); set => this._azureActiveDirectory = value; }

        /// <summary>
        /// <code>false</code> if the Azure Active Directory provider should not be enabled despite the set registration; otherwise,
        /// <code>true</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public bool? AzureActiveDirectoryEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectoryInternal)AzureActiveDirectory).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectoryInternal)AzureActiveDirectory).Enabled = value ?? default(bool); }

        /// <summary>
        /// Gets a value indicating whether the Azure AD configuration was auto-provisioned using 1st party tooling.
        /// This is an internal flag primarily intended to support the Azure Management Portal. Users should not
        /// read or write to this property.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public bool? AzureActiveDirectoryIsAutoProvisioned { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectoryInternal)AzureActiveDirectory).IsAutoProvisioned; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectoryInternal)AzureActiveDirectory).IsAutoProvisioned = value ?? default(bool); }

        /// <summary>
        /// The Client ID of this relying party application, known as the client_id.
        /// This setting is required for enabling OpenID Connection authentication with Azure Active Directory or
        /// other 3rd party OpenID Connect providers.
        /// More information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string AzureActiveDirectoryRegistrationClientId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectoryInternal)AzureActiveDirectory).RegistrationClientId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectoryInternal)AzureActiveDirectory).RegistrationClientId = value ?? null; }

        /// <summary>
        /// The app setting name that contains the client secret of the relying party application.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string AzureActiveDirectoryRegistrationClientSecretSettingName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectoryInternal)AzureActiveDirectory).RegistrationClientSecretSettingName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectoryInternal)AzureActiveDirectory).RegistrationClientSecretSettingName = value ?? null; }

        /// <summary>
        /// The list of audiences that can make successful authentication/authorization requests.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string[] AzureActiveDirectoryValidationAllowedAudience { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectoryInternal)AzureActiveDirectory).ValidationAllowedAudience; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectoryInternal)AzureActiveDirectory).ValidationAllowedAudience = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="AzureStaticWebApp" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureStaticWebApps _azureStaticWebApp;

        /// <summary>The configuration settings of the Azure Static Web Apps provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureStaticWebApps AzureStaticWebApp { get => (this._azureStaticWebApp = this._azureStaticWebApp ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.AzureStaticWebApps()); set => this._azureStaticWebApp = value; }

        /// <summary>
        /// <code>false</code> if the Azure Static Web Apps provider should not be enabled despite the set registration; otherwise,
        /// <code>true</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public bool? AzureStaticWebAppEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureStaticWebAppsInternal)AzureStaticWebApp).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureStaticWebAppsInternal)AzureStaticWebApp).Enabled = value ?? default(bool); }

        /// <summary>The Client ID of the app used for login.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string AzureStaticWebAppsRegistrationClientId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureStaticWebAppsInternal)AzureStaticWebApp).RegistrationClientId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureStaticWebAppsInternal)AzureStaticWebApp).RegistrationClientId = value ?? null; }

        /// <summary>Backing field for <see cref="CustomOpenIdConnectProvider" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IIdentityProvidersCustomOpenIdConnectProviders _customOpenIdConnectProvider;

        /// <summary>
        /// The map of the name of the alias of each custom Open ID Connect provider to the
        /// configuration settings of the custom Open ID Connect provider.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IIdentityProvidersCustomOpenIdConnectProviders CustomOpenIdConnectProvider { get => (this._customOpenIdConnectProvider = this._customOpenIdConnectProvider ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IdentityProvidersCustomOpenIdConnectProviders()); set => this._customOpenIdConnectProvider = value; }

        /// <summary>The configuration settings of the Azure Active Directory allowed applications.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string[] DefaultAuthorizationPolicyAllowedApplication { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectoryInternal)AzureActiveDirectory).DefaultAuthorizationPolicyAllowedApplication; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectoryInternal)AzureActiveDirectory).DefaultAuthorizationPolicyAllowedApplication = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Facebook" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IFacebook _facebook;

        /// <summary>The configuration settings of the Facebook provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IFacebook Facebook { get => (this._facebook = this._facebook ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.Facebook()); set => this._facebook = value; }

        /// <summary>
        /// <code>false</code> if the Facebook provider should not be enabled despite the set registration; otherwise, <code>true</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public bool? FacebookEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IFacebookInternal)Facebook).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IFacebookInternal)Facebook).Enabled = value ?? default(bool); }

        /// <summary>The version of the Facebook api to be used while logging in.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string FacebookGraphApiVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IFacebookInternal)Facebook).GraphApiVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IFacebookInternal)Facebook).GraphApiVersion = value ?? null; }

        /// <summary>A list of the scopes that should be requested while authenticating.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string[] FacebookLoginScope { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IFacebookInternal)Facebook).LoginScope; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IFacebookInternal)Facebook).LoginScope = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="GitHub" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IGitHub _gitHub;

        /// <summary>The configuration settings of the GitHub provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IGitHub GitHub { get => (this._gitHub = this._gitHub ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.GitHub()); set => this._gitHub = value; }

        /// <summary>
        /// <code>false</code> if the GitHub provider should not be enabled despite the set registration; otherwise, <code>true</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public bool? GitHubEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IGitHubInternal)GitHub).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IGitHubInternal)GitHub).Enabled = value ?? default(bool); }

        /// <summary>A list of the scopes that should be requested while authenticating.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string[] GitHubLoginScope { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IGitHubInternal)GitHub).LoginScope; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IGitHubInternal)GitHub).LoginScope = value ?? null /* arrayOf */; }

        /// <summary>The Client ID of the app used for login.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string GitHubRegistrationClientId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IGitHubInternal)GitHub).RegistrationClientId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IGitHubInternal)GitHub).RegistrationClientId = value ?? null; }

        /// <summary>The app setting name that contains the client secret.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string GitHubRegistrationClientSecretSettingName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IGitHubInternal)GitHub).RegistrationClientSecretSettingName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IGitHubInternal)GitHub).RegistrationClientSecretSettingName = value ?? null; }

        /// <summary>Backing field for <see cref="Google" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IGoogle _google;

        /// <summary>The configuration settings of the Google provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IGoogle Google { get => (this._google = this._google ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.Google()); set => this._google = value; }

        /// <summary>
        /// <code>false</code> if the Google provider should not be enabled despite the set registration; otherwise, <code>true</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public bool? GoogleEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IGoogleInternal)Google).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IGoogleInternal)Google).Enabled = value ?? default(bool); }

        /// <summary>A list of the scopes that should be requested while authenticating.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string[] GoogleLoginScope { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IGoogleInternal)Google).LoginScope; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IGoogleInternal)Google).LoginScope = value ?? null /* arrayOf */; }

        /// <summary>The Client ID of the app used for login.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string GoogleRegistrationClientId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IGoogleInternal)Google).RegistrationClientId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IGoogleInternal)Google).RegistrationClientId = value ?? null; }

        /// <summary>The app setting name that contains the client secret.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string GoogleRegistrationClientSecretSettingName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IGoogleInternal)Google).RegistrationClientSecretSettingName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IGoogleInternal)Google).RegistrationClientSecretSettingName = value ?? null; }

        /// <summary>
        /// The configuration settings of the allowed list of audiences from which to validate the JWT token.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string[] GoogleValidationAllowedAudience { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IGoogleInternal)Google).ValidationAllowedAudience; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IGoogleInternal)Google).ValidationAllowedAudience = value ?? null /* arrayOf */; }

        /// <summary>The list of the allowed client applications.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string[] JwtClaimCheckAllowedClientApplication { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectoryInternal)AzureActiveDirectory).JwtClaimCheckAllowedClientApplication; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectoryInternal)AzureActiveDirectory).JwtClaimCheckAllowedClientApplication = value ?? null /* arrayOf */; }

        /// <summary>The list of the allowed groups.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string[] JwtClaimCheckAllowedGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectoryInternal)AzureActiveDirectory).JwtClaimCheckAllowedGroup; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectoryInternal)AzureActiveDirectory).JwtClaimCheckAllowedGroup = value ?? null /* arrayOf */; }

        /// <summary>
        /// <code>true</code> if the www-authenticate provider should be omitted from the request; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public bool? LoginDisableWwwAuthenticate { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectoryInternal)AzureActiveDirectory).LoginDisableWwwAuthenticate; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectoryInternal)AzureActiveDirectory).LoginDisableWwwAuthenticate = value ?? default(bool); }

        /// <summary>
        /// Login parameters to send to the OpenID Connect authorization endpoint when
        /// a user logs in. Each parameter must be in the form "key=value".
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string[] LoginParameter { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectoryInternal)AzureActiveDirectory).LoginParameter; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectoryInternal)AzureActiveDirectory).LoginParameter = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for Apple</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IApple Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IIdentityProvidersInternal.Apple { get => (this._apple = this._apple ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.Apple()); set { {_apple = value;} } }

        /// <summary>Internal Acessors for AppleLogin</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ILoginScopes Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IIdentityProvidersInternal.AppleLogin { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAppleInternal)Apple).Login; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAppleInternal)Apple).Login = value; }

        /// <summary>Internal Acessors for AppleRegistration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAppleRegistration Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IIdentityProvidersInternal.AppleRegistration { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAppleInternal)Apple).Registration; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAppleInternal)Apple).Registration = value; }

        /// <summary>Internal Acessors for AzureActiveDirectory</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectory Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IIdentityProvidersInternal.AzureActiveDirectory { get => (this._azureActiveDirectory = this._azureActiveDirectory ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.AzureActiveDirectory()); set { {_azureActiveDirectory = value;} } }

        /// <summary>Internal Acessors for AzureActiveDirectoryLogin</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectoryLogin Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IIdentityProvidersInternal.AzureActiveDirectoryLogin { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectoryInternal)AzureActiveDirectory).Login; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectoryInternal)AzureActiveDirectory).Login = value; }

        /// <summary>Internal Acessors for AzureActiveDirectoryRegistration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectoryRegistration Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IIdentityProvidersInternal.AzureActiveDirectoryRegistration { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectoryInternal)AzureActiveDirectory).Registration; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectoryInternal)AzureActiveDirectory).Registration = value; }

        /// <summary>Internal Acessors for AzureActiveDirectoryValidation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectoryValidation Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IIdentityProvidersInternal.AzureActiveDirectoryValidation { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectoryInternal)AzureActiveDirectory).Validation; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectoryInternal)AzureActiveDirectory).Validation = value; }

        /// <summary>Internal Acessors for AzureStaticWebApp</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureStaticWebApps Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IIdentityProvidersInternal.AzureStaticWebApp { get => (this._azureStaticWebApp = this._azureStaticWebApp ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.AzureStaticWebApps()); set { {_azureStaticWebApp = value;} } }

        /// <summary>Internal Acessors for AzureStaticWebAppRegistration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureStaticWebAppsRegistration Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IIdentityProvidersInternal.AzureStaticWebAppRegistration { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureStaticWebAppsInternal)AzureStaticWebApp).Registration; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureStaticWebAppsInternal)AzureStaticWebApp).Registration = value; }

        /// <summary>Internal Acessors for DefaultAuthorizationPolicyAllowedPrincipal</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAllowedPrincipals Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IIdentityProvidersInternal.DefaultAuthorizationPolicyAllowedPrincipal { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectoryInternal)AzureActiveDirectory).DefaultAuthorizationPolicyAllowedPrincipal; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectoryInternal)AzureActiveDirectory).DefaultAuthorizationPolicyAllowedPrincipal = value; }

        /// <summary>Internal Acessors for Facebook</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IFacebook Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IIdentityProvidersInternal.Facebook { get => (this._facebook = this._facebook ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.Facebook()); set { {_facebook = value;} } }

        /// <summary>Internal Acessors for FacebookLogin</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ILoginScopes Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IIdentityProvidersInternal.FacebookLogin { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IFacebookInternal)Facebook).Login; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IFacebookInternal)Facebook).Login = value; }

        /// <summary>Internal Acessors for FacebookRegistration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAppRegistration Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IIdentityProvidersInternal.FacebookRegistration { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IFacebookInternal)Facebook).Registration; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IFacebookInternal)Facebook).Registration = value; }

        /// <summary>Internal Acessors for GitHub</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IGitHub Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IIdentityProvidersInternal.GitHub { get => (this._gitHub = this._gitHub ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.GitHub()); set { {_gitHub = value;} } }

        /// <summary>Internal Acessors for GitHubLogin</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ILoginScopes Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IIdentityProvidersInternal.GitHubLogin { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IGitHubInternal)GitHub).Login; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IGitHubInternal)GitHub).Login = value; }

        /// <summary>Internal Acessors for GitHubRegistration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IClientRegistration Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IIdentityProvidersInternal.GitHubRegistration { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IGitHubInternal)GitHub).Registration; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IGitHubInternal)GitHub).Registration = value; }

        /// <summary>Internal Acessors for Google</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IGoogle Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IIdentityProvidersInternal.Google { get => (this._google = this._google ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.Google()); set { {_google = value;} } }

        /// <summary>Internal Acessors for GoogleLogin</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ILoginScopes Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IIdentityProvidersInternal.GoogleLogin { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IGoogleInternal)Google).Login; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IGoogleInternal)Google).Login = value; }

        /// <summary>Internal Acessors for GoogleRegistration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IClientRegistration Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IIdentityProvidersInternal.GoogleRegistration { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IGoogleInternal)Google).Registration; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IGoogleInternal)Google).Registration = value; }

        /// <summary>Internal Acessors for GoogleValidation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAllowedAudiencesValidation Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IIdentityProvidersInternal.GoogleValidation { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IGoogleInternal)Google).Validation; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IGoogleInternal)Google).Validation = value; }

        /// <summary>Internal Acessors for Twitter</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ITwitter Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IIdentityProvidersInternal.Twitter { get => (this._twitter = this._twitter ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.Twitter()); set { {_twitter = value;} } }

        /// <summary>Internal Acessors for TwitterRegistration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ITwitterRegistration Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IIdentityProvidersInternal.TwitterRegistration { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ITwitterInternal)Twitter).Registration; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ITwitterInternal)Twitter).Registration = value; }

        /// <summary>Internal Acessors for ValidationDefaultAuthorizationPolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDefaultAuthorizationPolicy Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IIdentityProvidersInternal.ValidationDefaultAuthorizationPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectoryInternal)AzureActiveDirectory).ValidationDefaultAuthorizationPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectoryInternal)AzureActiveDirectory).ValidationDefaultAuthorizationPolicy = value; }

        /// <summary>Internal Acessors for ValidationJwtClaimCheck</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IJwtClaimChecks Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IIdentityProvidersInternal.ValidationJwtClaimCheck { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectoryInternal)AzureActiveDirectory).ValidationJwtClaimCheck; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectoryInternal)AzureActiveDirectory).ValidationJwtClaimCheck = value; }

        /// <summary>The App ID of the app used for login.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string RegistrationAppId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IFacebookInternal)Facebook).RegistrationAppId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IFacebookInternal)Facebook).RegistrationAppId = value ?? null; }

        /// <summary>The app setting name that contains the app secret.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string RegistrationAppSecretSettingName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IFacebookInternal)Facebook).RegistrationAppSecretSettingName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IFacebookInternal)Facebook).RegistrationAppSecretSettingName = value ?? null; }

        /// <summary>
        /// An alternative to the client secret thumbprint, that is the issuer of a certificate used for signing purposes. This property
        /// acts as
        /// a replacement for the Client Secret Certificate Thumbprint. It is also optional.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string RegistrationClientSecretCertificateIssuer { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectoryInternal)AzureActiveDirectory).RegistrationClientSecretCertificateIssuer; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectoryInternal)AzureActiveDirectory).RegistrationClientSecretCertificateIssuer = value ?? null; }

        /// <summary>
        /// An alternative to the client secret thumbprint, that is the subject alternative name of a certificate used for signing
        /// purposes. This property acts as
        /// a replacement for the Client Secret Certificate Thumbprint. It is also optional.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string RegistrationClientSecretCertificateSubjectAlternativeName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectoryInternal)AzureActiveDirectory).RegistrationClientSecretCertificateSubjectAlternativeName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectoryInternal)AzureActiveDirectory).RegistrationClientSecretCertificateSubjectAlternativeName = value ?? null; }

        /// <summary>
        /// An alternative to the client secret, that is the thumbprint of a certificate used for signing purposes. This property
        /// acts as
        /// a replacement for the Client Secret. It is also optional.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string RegistrationClientSecretCertificateThumbprint { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectoryInternal)AzureActiveDirectory).RegistrationClientSecretCertificateThumbprint; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectoryInternal)AzureActiveDirectory).RegistrationClientSecretCertificateThumbprint = value ?? null; }

        /// <summary>
        /// The OAuth 1.0a consumer key of the Twitter application used for sign-in.
        /// This setting is required for enabling Twitter Sign-In.
        /// Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string RegistrationConsumerKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ITwitterInternal)Twitter).RegistrationConsumerKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ITwitterInternal)Twitter).RegistrationConsumerKey = value ?? null; }

        /// <summary>
        /// The app setting name that contains the OAuth 1.0a consumer secret of the Twitter
        /// application used for sign-in.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string RegistrationConsumerSecretSettingName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ITwitterInternal)Twitter).RegistrationConsumerSecretSettingName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ITwitterInternal)Twitter).RegistrationConsumerSecretSettingName = value ?? null; }

        /// <summary>
        /// The OpenID Connect Issuer URI that represents the entity which issues access tokens for this application.
        /// When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://login.microsoftonline.com/v2.0/{tenant-guid}/.
        /// This URI is a case-sensitive identifier for the token issuer.
        /// More information on OpenID Connect Discovery: http://openid.net/specs/openid-connect-discovery-1_0.html
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string RegistrationOpenIdIssuer { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectoryInternal)AzureActiveDirectory).RegistrationOpenIdIssuer; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectoryInternal)AzureActiveDirectory).RegistrationOpenIdIssuer = value ?? null; }

        /// <summary>Backing field for <see cref="Twitter" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ITwitter _twitter;

        /// <summary>The configuration settings of the Twitter provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ITwitter Twitter { get => (this._twitter = this._twitter ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.Twitter()); set => this._twitter = value; }

        /// <summary>
        /// <code>false</code> if the Twitter provider should not be enabled despite the set registration; otherwise, <code>true</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public bool? TwitterEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ITwitterInternal)Twitter).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ITwitterInternal)Twitter).Enabled = value ?? default(bool); }

        /// <summary>Creates an new <see cref="IdentityProviders" /> instance.</summary>
        public IdentityProviders()
        {

        }
    }
    /// The configuration settings of each of the identity providers used to configure ContainerApp Service Authentication/Authorization.
    public partial interface IIdentityProviders :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.IJsonSerializable
    {
        /// <summary>The list of the allowed groups.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of the allowed groups.",
        SerializedName = @"groups",
        PossibleTypes = new [] { typeof(string) })]
        string[] AllowedPrincipalGroup { get; set; }
        /// <summary>The list of the allowed identities.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of the allowed identities.",
        SerializedName = @"identities",
        PossibleTypes = new [] { typeof(string) })]
        string[] AllowedPrincipalIdentity { get; set; }
        /// <summary>
        /// <code>false</code> if the Apple provider should not be enabled despite the set registration; otherwise, <code>true</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<code>false</code> if the Apple provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AppleEnabled { get; set; }
        /// <summary>A list of the scopes that should be requested while authenticating.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of the scopes that should be requested while authenticating.",
        SerializedName = @"scopes",
        PossibleTypes = new [] { typeof(string) })]
        string[] AppleLoginScope { get; set; }
        /// <summary>The Client ID of the app used for login.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Client ID of the app used for login.",
        SerializedName = @"clientId",
        PossibleTypes = new [] { typeof(string) })]
        string AppleRegistrationClientId { get; set; }
        /// <summary>The app setting name that contains the client secret.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The app setting name that contains the client secret.",
        SerializedName = @"clientSecretSettingName",
        PossibleTypes = new [] { typeof(string) })]
        string AppleRegistrationClientSecretSettingName { get; set; }
        /// <summary>
        /// <code>false</code> if the Azure Active Directory provider should not be enabled despite the set registration; otherwise,
        /// <code>true</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<code>false</code> if the Azure Active Directory provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AzureActiveDirectoryEnabled { get; set; }
        /// <summary>
        /// Gets a value indicating whether the Azure AD configuration was auto-provisioned using 1st party tooling.
        /// This is an internal flag primarily intended to support the Azure Management Portal. Users should not
        /// read or write to this property.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets a value indicating whether the Azure AD configuration was auto-provisioned using 1st party tooling.
        This is an internal flag primarily intended to support the Azure Management Portal. Users should not
        read or write to this property.",
        SerializedName = @"isAutoProvisioned",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AzureActiveDirectoryIsAutoProvisioned { get; set; }
        /// <summary>
        /// The Client ID of this relying party application, known as the client_id.
        /// This setting is required for enabling OpenID Connection authentication with Azure Active Directory or
        /// other 3rd party OpenID Connect providers.
        /// More information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Client ID of this relying party application, known as the client_id.
        This setting is required for enabling OpenID Connection authentication with Azure Active Directory or
        other 3rd party OpenID Connect providers.
        More information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html",
        SerializedName = @"clientId",
        PossibleTypes = new [] { typeof(string) })]
        string AzureActiveDirectoryRegistrationClientId { get; set; }
        /// <summary>
        /// The app setting name that contains the client secret of the relying party application.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The app setting name that contains the client secret of the relying party application.",
        SerializedName = @"clientSecretSettingName",
        PossibleTypes = new [] { typeof(string) })]
        string AzureActiveDirectoryRegistrationClientSecretSettingName { get; set; }
        /// <summary>
        /// The list of audiences that can make successful authentication/authorization requests.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of audiences that can make successful authentication/authorization requests.",
        SerializedName = @"allowedAudiences",
        PossibleTypes = new [] { typeof(string) })]
        string[] AzureActiveDirectoryValidationAllowedAudience { get; set; }
        /// <summary>
        /// <code>false</code> if the Azure Static Web Apps provider should not be enabled despite the set registration; otherwise,
        /// <code>true</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<code>false</code> if the Azure Static Web Apps provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AzureStaticWebAppEnabled { get; set; }
        /// <summary>The Client ID of the app used for login.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Client ID of the app used for login.",
        SerializedName = @"clientId",
        PossibleTypes = new [] { typeof(string) })]
        string AzureStaticWebAppsRegistrationClientId { get; set; }
        /// <summary>
        /// The map of the name of the alias of each custom Open ID Connect provider to the
        /// configuration settings of the custom Open ID Connect provider.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The map of the name of the alias of each custom Open ID Connect provider to the
        configuration settings of the custom Open ID Connect provider.",
        SerializedName = @"customOpenIdConnectProviders",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IIdentityProvidersCustomOpenIdConnectProviders) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IIdentityProvidersCustomOpenIdConnectProviders CustomOpenIdConnectProvider { get; set; }
        /// <summary>The configuration settings of the Azure Active Directory allowed applications.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The configuration settings of the Azure Active Directory allowed applications.",
        SerializedName = @"allowedApplications",
        PossibleTypes = new [] { typeof(string) })]
        string[] DefaultAuthorizationPolicyAllowedApplication { get; set; }
        /// <summary>
        /// <code>false</code> if the Facebook provider should not be enabled despite the set registration; otherwise, <code>true</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<code>false</code> if the Facebook provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? FacebookEnabled { get; set; }
        /// <summary>The version of the Facebook api to be used while logging in.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The version of the Facebook api to be used while logging in.",
        SerializedName = @"graphApiVersion",
        PossibleTypes = new [] { typeof(string) })]
        string FacebookGraphApiVersion { get; set; }
        /// <summary>A list of the scopes that should be requested while authenticating.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of the scopes that should be requested while authenticating.",
        SerializedName = @"scopes",
        PossibleTypes = new [] { typeof(string) })]
        string[] FacebookLoginScope { get; set; }
        /// <summary>
        /// <code>false</code> if the GitHub provider should not be enabled despite the set registration; otherwise, <code>true</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<code>false</code> if the GitHub provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? GitHubEnabled { get; set; }
        /// <summary>A list of the scopes that should be requested while authenticating.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of the scopes that should be requested while authenticating.",
        SerializedName = @"scopes",
        PossibleTypes = new [] { typeof(string) })]
        string[] GitHubLoginScope { get; set; }
        /// <summary>The Client ID of the app used for login.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Client ID of the app used for login.",
        SerializedName = @"clientId",
        PossibleTypes = new [] { typeof(string) })]
        string GitHubRegistrationClientId { get; set; }
        /// <summary>The app setting name that contains the client secret.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The app setting name that contains the client secret.",
        SerializedName = @"clientSecretSettingName",
        PossibleTypes = new [] { typeof(string) })]
        string GitHubRegistrationClientSecretSettingName { get; set; }
        /// <summary>
        /// <code>false</code> if the Google provider should not be enabled despite the set registration; otherwise, <code>true</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<code>false</code> if the Google provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? GoogleEnabled { get; set; }
        /// <summary>A list of the scopes that should be requested while authenticating.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of the scopes that should be requested while authenticating.",
        SerializedName = @"scopes",
        PossibleTypes = new [] { typeof(string) })]
        string[] GoogleLoginScope { get; set; }
        /// <summary>The Client ID of the app used for login.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Client ID of the app used for login.",
        SerializedName = @"clientId",
        PossibleTypes = new [] { typeof(string) })]
        string GoogleRegistrationClientId { get; set; }
        /// <summary>The app setting name that contains the client secret.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The app setting name that contains the client secret.",
        SerializedName = @"clientSecretSettingName",
        PossibleTypes = new [] { typeof(string) })]
        string GoogleRegistrationClientSecretSettingName { get; set; }
        /// <summary>
        /// The configuration settings of the allowed list of audiences from which to validate the JWT token.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The configuration settings of the allowed list of audiences from which to validate the JWT token.",
        SerializedName = @"allowedAudiences",
        PossibleTypes = new [] { typeof(string) })]
        string[] GoogleValidationAllowedAudience { get; set; }
        /// <summary>The list of the allowed client applications.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of the allowed client applications.",
        SerializedName = @"allowedClientApplications",
        PossibleTypes = new [] { typeof(string) })]
        string[] JwtClaimCheckAllowedClientApplication { get; set; }
        /// <summary>The list of the allowed groups.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of the allowed groups.",
        SerializedName = @"allowedGroups",
        PossibleTypes = new [] { typeof(string) })]
        string[] JwtClaimCheckAllowedGroup { get; set; }
        /// <summary>
        /// <code>true</code> if the www-authenticate provider should be omitted from the request; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<code>true</code> if the www-authenticate provider should be omitted from the request; otherwise, <code>false</code>.",
        SerializedName = @"disableWWWAuthenticate",
        PossibleTypes = new [] { typeof(bool) })]
        bool? LoginDisableWwwAuthenticate { get; set; }
        /// <summary>
        /// Login parameters to send to the OpenID Connect authorization endpoint when
        /// a user logs in. Each parameter must be in the form "key=value".
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Login parameters to send to the OpenID Connect authorization endpoint when
        a user logs in. Each parameter must be in the form ""key=value"".",
        SerializedName = @"loginParameters",
        PossibleTypes = new [] { typeof(string) })]
        string[] LoginParameter { get; set; }
        /// <summary>The App ID of the app used for login.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The App ID of the app used for login.",
        SerializedName = @"appId",
        PossibleTypes = new [] { typeof(string) })]
        string RegistrationAppId { get; set; }
        /// <summary>The app setting name that contains the app secret.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The app setting name that contains the app secret.",
        SerializedName = @"appSecretSettingName",
        PossibleTypes = new [] { typeof(string) })]
        string RegistrationAppSecretSettingName { get; set; }
        /// <summary>
        /// An alternative to the client secret thumbprint, that is the issuer of a certificate used for signing purposes. This property
        /// acts as
        /// a replacement for the Client Secret Certificate Thumbprint. It is also optional.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"An alternative to the client secret thumbprint, that is the issuer of a certificate used for signing purposes. This property acts as
        a replacement for the Client Secret Certificate Thumbprint. It is also optional.",
        SerializedName = @"clientSecretCertificateIssuer",
        PossibleTypes = new [] { typeof(string) })]
        string RegistrationClientSecretCertificateIssuer { get; set; }
        /// <summary>
        /// An alternative to the client secret thumbprint, that is the subject alternative name of a certificate used for signing
        /// purposes. This property acts as
        /// a replacement for the Client Secret Certificate Thumbprint. It is also optional.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"An alternative to the client secret thumbprint, that is the subject alternative name of a certificate used for signing purposes. This property acts as
        a replacement for the Client Secret Certificate Thumbprint. It is also optional.",
        SerializedName = @"clientSecretCertificateSubjectAlternativeName",
        PossibleTypes = new [] { typeof(string) })]
        string RegistrationClientSecretCertificateSubjectAlternativeName { get; set; }
        /// <summary>
        /// An alternative to the client secret, that is the thumbprint of a certificate used for signing purposes. This property
        /// acts as
        /// a replacement for the Client Secret. It is also optional.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"An alternative to the client secret, that is the thumbprint of a certificate used for signing purposes. This property acts as
        a replacement for the Client Secret. It is also optional.",
        SerializedName = @"clientSecretCertificateThumbprint",
        PossibleTypes = new [] { typeof(string) })]
        string RegistrationClientSecretCertificateThumbprint { get; set; }
        /// <summary>
        /// The OAuth 1.0a consumer key of the Twitter application used for sign-in.
        /// This setting is required for enabling Twitter Sign-In.
        /// Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The OAuth 1.0a consumer key of the Twitter application used for sign-in.
        This setting is required for enabling Twitter Sign-In.
        Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in",
        SerializedName = @"consumerKey",
        PossibleTypes = new [] { typeof(string) })]
        string RegistrationConsumerKey { get; set; }
        /// <summary>
        /// The app setting name that contains the OAuth 1.0a consumer secret of the Twitter
        /// application used for sign-in.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The app setting name that contains the OAuth 1.0a consumer secret of the Twitter
        application used for sign-in.",
        SerializedName = @"consumerSecretSettingName",
        PossibleTypes = new [] { typeof(string) })]
        string RegistrationConsumerSecretSettingName { get; set; }
        /// <summary>
        /// The OpenID Connect Issuer URI that represents the entity which issues access tokens for this application.
        /// When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://login.microsoftonline.com/v2.0/{tenant-guid}/.
        /// This URI is a case-sensitive identifier for the token issuer.
        /// More information on OpenID Connect Discovery: http://openid.net/specs/openid-connect-discovery-1_0.html
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The OpenID Connect Issuer URI that represents the entity which issues access tokens for this application.
        When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://login.microsoftonline.com/v2.0/{tenant-guid}/.
        This URI is a case-sensitive identifier for the token issuer.
        More information on OpenID Connect Discovery: http://openid.net/specs/openid-connect-discovery-1_0.html",
        SerializedName = @"openIdIssuer",
        PossibleTypes = new [] { typeof(string) })]
        string RegistrationOpenIdIssuer { get; set; }
        /// <summary>
        /// <code>false</code> if the Twitter provider should not be enabled despite the set registration; otherwise, <code>true</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<code>false</code> if the Twitter provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? TwitterEnabled { get; set; }

    }
    /// The configuration settings of each of the identity providers used to configure ContainerApp Service Authentication/Authorization.
    internal partial interface IIdentityProvidersInternal

    {
        /// <summary>The list of the allowed groups.</summary>
        string[] AllowedPrincipalGroup { get; set; }
        /// <summary>The list of the allowed identities.</summary>
        string[] AllowedPrincipalIdentity { get; set; }
        /// <summary>The configuration settings of the Apple provider.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IApple Apple { get; set; }
        /// <summary>
        /// <code>false</code> if the Apple provider should not be enabled despite the set registration; otherwise, <code>true</code>.
        /// </summary>
        bool? AppleEnabled { get; set; }
        /// <summary>The configuration settings of the login flow.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ILoginScopes AppleLogin { get; set; }
        /// <summary>A list of the scopes that should be requested while authenticating.</summary>
        string[] AppleLoginScope { get; set; }
        /// <summary>The configuration settings of the Apple registration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAppleRegistration AppleRegistration { get; set; }
        /// <summary>The Client ID of the app used for login.</summary>
        string AppleRegistrationClientId { get; set; }
        /// <summary>The app setting name that contains the client secret.</summary>
        string AppleRegistrationClientSecretSettingName { get; set; }
        /// <summary>The configuration settings of the Azure Active directory provider.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectory AzureActiveDirectory { get; set; }
        /// <summary>
        /// <code>false</code> if the Azure Active Directory provider should not be enabled despite the set registration; otherwise,
        /// <code>true</code>.
        /// </summary>
        bool? AzureActiveDirectoryEnabled { get; set; }
        /// <summary>
        /// Gets a value indicating whether the Azure AD configuration was auto-provisioned using 1st party tooling.
        /// This is an internal flag primarily intended to support the Azure Management Portal. Users should not
        /// read or write to this property.
        /// </summary>
        bool? AzureActiveDirectoryIsAutoProvisioned { get; set; }
        /// <summary>The configuration settings of the Azure Active Directory login flow.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectoryLogin AzureActiveDirectoryLogin { get; set; }
        /// <summary>The configuration settings of the Azure Active Directory app registration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectoryRegistration AzureActiveDirectoryRegistration { get; set; }
        /// <summary>
        /// The Client ID of this relying party application, known as the client_id.
        /// This setting is required for enabling OpenID Connection authentication with Azure Active Directory or
        /// other 3rd party OpenID Connect providers.
        /// More information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html
        /// </summary>
        string AzureActiveDirectoryRegistrationClientId { get; set; }
        /// <summary>
        /// The app setting name that contains the client secret of the relying party application.
        /// </summary>
        string AzureActiveDirectoryRegistrationClientSecretSettingName { get; set; }
        /// <summary>The configuration settings of the Azure Active Directory token validation flow.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureActiveDirectoryValidation AzureActiveDirectoryValidation { get; set; }
        /// <summary>
        /// The list of audiences that can make successful authentication/authorization requests.
        /// </summary>
        string[] AzureActiveDirectoryValidationAllowedAudience { get; set; }
        /// <summary>The configuration settings of the Azure Static Web Apps provider.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureStaticWebApps AzureStaticWebApp { get; set; }
        /// <summary>
        /// <code>false</code> if the Azure Static Web Apps provider should not be enabled despite the set registration; otherwise,
        /// <code>true</code>.
        /// </summary>
        bool? AzureStaticWebAppEnabled { get; set; }
        /// <summary>The configuration settings of the Azure Static Web Apps registration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAzureStaticWebAppsRegistration AzureStaticWebAppRegistration { get; set; }
        /// <summary>The Client ID of the app used for login.</summary>
        string AzureStaticWebAppsRegistrationClientId { get; set; }
        /// <summary>
        /// The map of the name of the alias of each custom Open ID Connect provider to the
        /// configuration settings of the custom Open ID Connect provider.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IIdentityProvidersCustomOpenIdConnectProviders CustomOpenIdConnectProvider { get; set; }
        /// <summary>The configuration settings of the Azure Active Directory allowed applications.</summary>
        string[] DefaultAuthorizationPolicyAllowedApplication { get; set; }
        /// <summary>The configuration settings of the Azure Active Directory allowed principals.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAllowedPrincipals DefaultAuthorizationPolicyAllowedPrincipal { get; set; }
        /// <summary>The configuration settings of the Facebook provider.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IFacebook Facebook { get; set; }
        /// <summary>
        /// <code>false</code> if the Facebook provider should not be enabled despite the set registration; otherwise, <code>true</code>.
        /// </summary>
        bool? FacebookEnabled { get; set; }
        /// <summary>The version of the Facebook api to be used while logging in.</summary>
        string FacebookGraphApiVersion { get; set; }
        /// <summary>The configuration settings of the login flow.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ILoginScopes FacebookLogin { get; set; }
        /// <summary>A list of the scopes that should be requested while authenticating.</summary>
        string[] FacebookLoginScope { get; set; }
        /// <summary>The configuration settings of the app registration for the Facebook provider.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAppRegistration FacebookRegistration { get; set; }
        /// <summary>The configuration settings of the GitHub provider.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IGitHub GitHub { get; set; }
        /// <summary>
        /// <code>false</code> if the GitHub provider should not be enabled despite the set registration; otherwise, <code>true</code>.
        /// </summary>
        bool? GitHubEnabled { get; set; }
        /// <summary>The configuration settings of the login flow.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ILoginScopes GitHubLogin { get; set; }
        /// <summary>A list of the scopes that should be requested while authenticating.</summary>
        string[] GitHubLoginScope { get; set; }
        /// <summary>The configuration settings of the app registration for the GitHub provider.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IClientRegistration GitHubRegistration { get; set; }
        /// <summary>The Client ID of the app used for login.</summary>
        string GitHubRegistrationClientId { get; set; }
        /// <summary>The app setting name that contains the client secret.</summary>
        string GitHubRegistrationClientSecretSettingName { get; set; }
        /// <summary>The configuration settings of the Google provider.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IGoogle Google { get; set; }
        /// <summary>
        /// <code>false</code> if the Google provider should not be enabled despite the set registration; otherwise, <code>true</code>.
        /// </summary>
        bool? GoogleEnabled { get; set; }
        /// <summary>The configuration settings of the login flow.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ILoginScopes GoogleLogin { get; set; }
        /// <summary>A list of the scopes that should be requested while authenticating.</summary>
        string[] GoogleLoginScope { get; set; }
        /// <summary>The configuration settings of the app registration for the Google provider.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IClientRegistration GoogleRegistration { get; set; }
        /// <summary>The Client ID of the app used for login.</summary>
        string GoogleRegistrationClientId { get; set; }
        /// <summary>The app setting name that contains the client secret.</summary>
        string GoogleRegistrationClientSecretSettingName { get; set; }
        /// <summary>The configuration settings of the Azure Active Directory token validation flow.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IAllowedAudiencesValidation GoogleValidation { get; set; }
        /// <summary>
        /// The configuration settings of the allowed list of audiences from which to validate the JWT token.
        /// </summary>
        string[] GoogleValidationAllowedAudience { get; set; }
        /// <summary>The list of the allowed client applications.</summary>
        string[] JwtClaimCheckAllowedClientApplication { get; set; }
        /// <summary>The list of the allowed groups.</summary>
        string[] JwtClaimCheckAllowedGroup { get; set; }
        /// <summary>
        /// <code>true</code> if the www-authenticate provider should be omitted from the request; otherwise, <code>false</code>.
        /// </summary>
        bool? LoginDisableWwwAuthenticate { get; set; }
        /// <summary>
        /// Login parameters to send to the OpenID Connect authorization endpoint when
        /// a user logs in. Each parameter must be in the form "key=value".
        /// </summary>
        string[] LoginParameter { get; set; }
        /// <summary>The App ID of the app used for login.</summary>
        string RegistrationAppId { get; set; }
        /// <summary>The app setting name that contains the app secret.</summary>
        string RegistrationAppSecretSettingName { get; set; }
        /// <summary>
        /// An alternative to the client secret thumbprint, that is the issuer of a certificate used for signing purposes. This property
        /// acts as
        /// a replacement for the Client Secret Certificate Thumbprint. It is also optional.
        /// </summary>
        string RegistrationClientSecretCertificateIssuer { get; set; }
        /// <summary>
        /// An alternative to the client secret thumbprint, that is the subject alternative name of a certificate used for signing
        /// purposes. This property acts as
        /// a replacement for the Client Secret Certificate Thumbprint. It is also optional.
        /// </summary>
        string RegistrationClientSecretCertificateSubjectAlternativeName { get; set; }
        /// <summary>
        /// An alternative to the client secret, that is the thumbprint of a certificate used for signing purposes. This property
        /// acts as
        /// a replacement for the Client Secret. It is also optional.
        /// </summary>
        string RegistrationClientSecretCertificateThumbprint { get; set; }
        /// <summary>
        /// The OAuth 1.0a consumer key of the Twitter application used for sign-in.
        /// This setting is required for enabling Twitter Sign-In.
        /// Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in
        /// </summary>
        string RegistrationConsumerKey { get; set; }
        /// <summary>
        /// The app setting name that contains the OAuth 1.0a consumer secret of the Twitter
        /// application used for sign-in.
        /// </summary>
        string RegistrationConsumerSecretSettingName { get; set; }
        /// <summary>
        /// The OpenID Connect Issuer URI that represents the entity which issues access tokens for this application.
        /// When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://login.microsoftonline.com/v2.0/{tenant-guid}/.
        /// This URI is a case-sensitive identifier for the token issuer.
        /// More information on OpenID Connect Discovery: http://openid.net/specs/openid-connect-discovery-1_0.html
        /// </summary>
        string RegistrationOpenIdIssuer { get; set; }
        /// <summary>The configuration settings of the Twitter provider.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ITwitter Twitter { get; set; }
        /// <summary>
        /// <code>false</code> if the Twitter provider should not be enabled despite the set registration; otherwise, <code>true</code>.
        /// </summary>
        bool? TwitterEnabled { get; set; }
        /// <summary>The configuration settings of the app registration for the Twitter provider.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ITwitterRegistration TwitterRegistration { get; set; }
        /// <summary>The configuration settings of the default authorization policy.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IDefaultAuthorizationPolicy ValidationDefaultAuthorizationPolicy { get; set; }
        /// <summary>
        /// The configuration settings of the checks that should be made while validating the JWT Claims.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IJwtClaimChecks ValidationJwtClaimCheck { get; set; }

    }
}