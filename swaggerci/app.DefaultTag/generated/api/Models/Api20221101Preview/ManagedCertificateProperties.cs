// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Extensions;

    /// <summary>Certificate resource specific properties</summary>
    public partial class ManagedCertificateProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IManagedCertificateProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IManagedCertificatePropertiesInternal
    {

        /// <summary>Backing field for <see cref="DomainControlValidation" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.ManagedCertificateDomainControlValidation? _domainControlValidation;

        /// <summary>Selected type of domain control validation for managed certificates.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.ManagedCertificateDomainControlValidation? DomainControlValidation { get => this._domainControlValidation; set => this._domainControlValidation = value; }

        /// <summary>Backing field for <see cref="Error" /> property.</summary>
        private string _error;

        /// <summary>Any error occurred during the certificate provision.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public string Error { get => this._error; }

        /// <summary>Internal Acessors for Error</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IManagedCertificatePropertiesInternal.Error { get => this._error; set { {_error = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.CertificateProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IManagedCertificatePropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for ValidationToken</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.IManagedCertificatePropertiesInternal.ValidationToken { get => this._validationToken; set { {_validationToken = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.CertificateProvisioningState? _provisioningState;

        /// <summary>Provisioning state of the certificate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.CertificateProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="SubjectName" /> property.</summary>
        private string _subjectName;

        /// <summary>Subject name of the certificate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public string SubjectName { get => this._subjectName; set => this._subjectName = value; }

        /// <summary>Backing field for <see cref="ValidationToken" /> property.</summary>
        private string _validationToken;

        /// <summary>
        /// A TXT token used for DNS TXT domain control validation when issuing this type of managed certificates.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public string ValidationToken { get => this._validationToken; }

        /// <summary>Creates an new <see cref="ManagedCertificateProperties" /> instance.</summary>
        public ManagedCertificateProperties()
        {

        }
    }
    /// Certificate resource specific properties
    public partial interface IManagedCertificateProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.IJsonSerializable
    {
        /// <summary>Selected type of domain control validation for managed certificates.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Selected type of domain control validation for managed certificates.",
        SerializedName = @"domainControlValidation",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.ManagedCertificateDomainControlValidation) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.ManagedCertificateDomainControlValidation? DomainControlValidation { get; set; }
        /// <summary>Any error occurred during the certificate provision.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Any error occurred during the certificate provision.",
        SerializedName = @"error",
        PossibleTypes = new [] { typeof(string) })]
        string Error { get;  }
        /// <summary>Provisioning state of the certificate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Provisioning state of the certificate.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.CertificateProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.CertificateProvisioningState? ProvisioningState { get;  }
        /// <summary>Subject name of the certificate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Subject name of the certificate.",
        SerializedName = @"subjectName",
        PossibleTypes = new [] { typeof(string) })]
        string SubjectName { get; set; }
        /// <summary>
        /// A TXT token used for DNS TXT domain control validation when issuing this type of managed certificates.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"A TXT token used for DNS TXT domain control validation when issuing this type of managed certificates.",
        SerializedName = @"validationToken",
        PossibleTypes = new [] { typeof(string) })]
        string ValidationToken { get;  }

    }
    /// Certificate resource specific properties
    internal partial interface IManagedCertificatePropertiesInternal

    {
        /// <summary>Selected type of domain control validation for managed certificates.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.ManagedCertificateDomainControlValidation? DomainControlValidation { get; set; }
        /// <summary>Any error occurred during the certificate provision.</summary>
        string Error { get; set; }
        /// <summary>Provisioning state of the certificate.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.CertificateProvisioningState? ProvisioningState { get; set; }
        /// <summary>Subject name of the certificate.</summary>
        string SubjectName { get; set; }
        /// <summary>
        /// A TXT token used for DNS TXT domain control validation when issuing this type of managed certificates.
        /// </summary>
        string ValidationToken { get; set; }

    }
}