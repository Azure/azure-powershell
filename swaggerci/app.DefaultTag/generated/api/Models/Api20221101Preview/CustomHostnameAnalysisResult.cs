// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Extensions;

    /// <summary>Custom domain analysis.</summary>
    public partial class CustomHostnameAnalysisResult :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICustomHostnameAnalysisResult,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICustomHostnameAnalysisResultInternal
    {

        /// <summary>Backing field for <see cref="ARecord" /> property.</summary>
        private string[] _aRecord;

        /// <summary>A records visible for this hostname.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public string[] ARecord { get => this._aRecord; set => this._aRecord = value; }

        /// <summary>Backing field for <see cref="AlternateCNameRecord" /> property.</summary>
        private string[] _alternateCNameRecord;

        /// <summary>Alternate CName records visible for this hostname.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public string[] AlternateCNameRecord { get => this._alternateCNameRecord; set => this._alternateCNameRecord = value; }

        /// <summary>Backing field for <see cref="AlternateTxtRecord" /> property.</summary>
        private string[] _alternateTxtRecord;

        /// <summary>Alternate TXT records visible for this hostname.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public string[] AlternateTxtRecord { get => this._alternateTxtRecord; set => this._alternateTxtRecord = value; }

        /// <summary>Backing field for <see cref="CNameRecord" /> property.</summary>
        private string[] _cNameRecord;

        /// <summary>CName records visible for this hostname.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public string[] CNameRecord { get => this._cNameRecord; set => this._cNameRecord = value; }

        /// <summary>Backing field for <see cref="ConflictWithEnvironmentCustomDomain" /> property.</summary>
        private bool? _conflictWithEnvironmentCustomDomain;

        /// <summary>
        /// <code>true</code> if there is a conflict on the Container App's managed environment level custom domain; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public bool? ConflictWithEnvironmentCustomDomain { get => this._conflictWithEnvironmentCustomDomain; }

        /// <summary>Backing field for <see cref="ConflictingContainerAppResourceId" /> property.</summary>
        private string _conflictingContainerAppResourceId;

        /// <summary>
        /// Name of the conflicting Container App on the Managed Environment if it's within the same subscription.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public string ConflictingContainerAppResourceId { get => this._conflictingContainerAppResourceId; }

        /// <summary>Backing field for <see cref="CustomDomainVerificationFailureInfo" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICustomHostnameAnalysisResultCustomDomainVerificationFailureInfo _customDomainVerificationFailureInfo;

        /// <summary>Raw failure information if DNS verification fails.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICustomHostnameAnalysisResultCustomDomainVerificationFailureInfo CustomDomainVerificationFailureInfo { get => (this._customDomainVerificationFailureInfo = this._customDomainVerificationFailureInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.CustomHostnameAnalysisResultCustomDomainVerificationFailureInfo()); }

        /// <summary>Standardized string to programmatically identify the error.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string CustomDomainVerificationFailureInfoCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICustomHostnameAnalysisResultCustomDomainVerificationFailureInfoInternal)CustomDomainVerificationFailureInfo).Code; }

        /// <summary>Details or the error</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICustomHostnameAnalysisResultCustomDomainVerificationFailureInfoDetailsItem[] CustomDomainVerificationFailureInfoDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICustomHostnameAnalysisResultCustomDomainVerificationFailureInfoInternal)CustomDomainVerificationFailureInfo).Detail; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICustomHostnameAnalysisResultCustomDomainVerificationFailureInfoInternal)CustomDomainVerificationFailureInfo).Detail = value ?? null /* arrayOf */; }

        /// <summary>Detailed error description and debugging information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string CustomDomainVerificationFailureInfoMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICustomHostnameAnalysisResultCustomDomainVerificationFailureInfoInternal)CustomDomainVerificationFailureInfo).Message; }

        /// <summary>Detailed error description and debugging information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string CustomDomainVerificationFailureInfoTarget { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICustomHostnameAnalysisResultCustomDomainVerificationFailureInfoInternal)CustomDomainVerificationFailureInfo).Target; }

        /// <summary>Backing field for <see cref="CustomDomainVerificationTest" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.DnsVerificationTestResult? _customDomainVerificationTest;

        /// <summary>DNS verification test result.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.DnsVerificationTestResult? CustomDomainVerificationTest { get => this._customDomainVerificationTest; }

        /// <summary>Backing field for <see cref="HasConflictOnManagedEnvironment" /> property.</summary>
        private bool? _hasConflictOnManagedEnvironment;

        /// <summary>
        /// <code>true</code> if there is a conflict on the Container App's managed environment; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public bool? HasConflictOnManagedEnvironment { get => this._hasConflictOnManagedEnvironment; }

        /// <summary>Backing field for <see cref="HostName" /> property.</summary>
        private string _hostName;

        /// <summary>Host name that was analyzed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public string HostName { get => this._hostName; }

        /// <summary>Backing field for <see cref="IsHostnameAlreadyVerified" /> property.</summary>
        private bool? _isHostnameAlreadyVerified;

        /// <summary>
        /// <code>true</code> if hostname is already verified; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public bool? IsHostnameAlreadyVerified { get => this._isHostnameAlreadyVerified; }

        /// <summary>Internal Acessors for ConflictWithEnvironmentCustomDomain</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICustomHostnameAnalysisResultInternal.ConflictWithEnvironmentCustomDomain { get => this._conflictWithEnvironmentCustomDomain; set { {_conflictWithEnvironmentCustomDomain = value;} } }

        /// <summary>Internal Acessors for ConflictingContainerAppResourceId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICustomHostnameAnalysisResultInternal.ConflictingContainerAppResourceId { get => this._conflictingContainerAppResourceId; set { {_conflictingContainerAppResourceId = value;} } }

        /// <summary>Internal Acessors for CustomDomainVerificationFailureInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICustomHostnameAnalysisResultCustomDomainVerificationFailureInfo Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICustomHostnameAnalysisResultInternal.CustomDomainVerificationFailureInfo { get => (this._customDomainVerificationFailureInfo = this._customDomainVerificationFailureInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.CustomHostnameAnalysisResultCustomDomainVerificationFailureInfo()); set { {_customDomainVerificationFailureInfo = value;} } }

        /// <summary>Internal Acessors for CustomDomainVerificationFailureInfoCode</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICustomHostnameAnalysisResultInternal.CustomDomainVerificationFailureInfoCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICustomHostnameAnalysisResultCustomDomainVerificationFailureInfoInternal)CustomDomainVerificationFailureInfo).Code; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICustomHostnameAnalysisResultCustomDomainVerificationFailureInfoInternal)CustomDomainVerificationFailureInfo).Code = value; }

        /// <summary>Internal Acessors for CustomDomainVerificationFailureInfoMessage</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICustomHostnameAnalysisResultInternal.CustomDomainVerificationFailureInfoMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICustomHostnameAnalysisResultCustomDomainVerificationFailureInfoInternal)CustomDomainVerificationFailureInfo).Message; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICustomHostnameAnalysisResultCustomDomainVerificationFailureInfoInternal)CustomDomainVerificationFailureInfo).Message = value; }

        /// <summary>Internal Acessors for CustomDomainVerificationFailureInfoTarget</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICustomHostnameAnalysisResultInternal.CustomDomainVerificationFailureInfoTarget { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICustomHostnameAnalysisResultCustomDomainVerificationFailureInfoInternal)CustomDomainVerificationFailureInfo).Target; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICustomHostnameAnalysisResultCustomDomainVerificationFailureInfoInternal)CustomDomainVerificationFailureInfo).Target = value; }

        /// <summary>Internal Acessors for CustomDomainVerificationTest</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.DnsVerificationTestResult? Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICustomHostnameAnalysisResultInternal.CustomDomainVerificationTest { get => this._customDomainVerificationTest; set { {_customDomainVerificationTest = value;} } }

        /// <summary>Internal Acessors for HasConflictOnManagedEnvironment</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICustomHostnameAnalysisResultInternal.HasConflictOnManagedEnvironment { get => this._hasConflictOnManagedEnvironment; set { {_hasConflictOnManagedEnvironment = value;} } }

        /// <summary>Internal Acessors for HostName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICustomHostnameAnalysisResultInternal.HostName { get => this._hostName; set { {_hostName = value;} } }

        /// <summary>Internal Acessors for IsHostnameAlreadyVerified</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICustomHostnameAnalysisResultInternal.IsHostnameAlreadyVerified { get => this._isHostnameAlreadyVerified; set { {_isHostnameAlreadyVerified = value;} } }

        /// <summary>Backing field for <see cref="TxtRecord" /> property.</summary>
        private string[] _txtRecord;

        /// <summary>TXT records visible for this hostname.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public string[] TxtRecord { get => this._txtRecord; set => this._txtRecord = value; }

        /// <summary>Creates an new <see cref="CustomHostnameAnalysisResult" /> instance.</summary>
        public CustomHostnameAnalysisResult()
        {

        }
    }
    /// Custom domain analysis.
    public partial interface ICustomHostnameAnalysisResult :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.IJsonSerializable
    {
        /// <summary>A records visible for this hostname.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A records visible for this hostname.",
        SerializedName = @"aRecords",
        PossibleTypes = new [] { typeof(string) })]
        string[] ARecord { get; set; }
        /// <summary>Alternate CName records visible for this hostname.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Alternate CName records visible for this hostname.",
        SerializedName = @"alternateCNameRecords",
        PossibleTypes = new [] { typeof(string) })]
        string[] AlternateCNameRecord { get; set; }
        /// <summary>Alternate TXT records visible for this hostname.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Alternate TXT records visible for this hostname.",
        SerializedName = @"alternateTxtRecords",
        PossibleTypes = new [] { typeof(string) })]
        string[] AlternateTxtRecord { get; set; }
        /// <summary>CName records visible for this hostname.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"CName records visible for this hostname.",
        SerializedName = @"cNameRecords",
        PossibleTypes = new [] { typeof(string) })]
        string[] CNameRecord { get; set; }
        /// <summary>
        /// <code>true</code> if there is a conflict on the Container App's managed environment level custom domain; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"<code>true</code> if there is a conflict on the Container App's managed environment level custom domain; otherwise, <code>false</code>.",
        SerializedName = @"conflictWithEnvironmentCustomDomain",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ConflictWithEnvironmentCustomDomain { get;  }
        /// <summary>
        /// Name of the conflicting Container App on the Managed Environment if it's within the same subscription.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Name of the conflicting Container App on the Managed Environment if it's within the same subscription.",
        SerializedName = @"conflictingContainerAppResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string ConflictingContainerAppResourceId { get;  }
        /// <summary>Standardized string to programmatically identify the error.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Standardized string to programmatically identify the error.",
        SerializedName = @"code",
        PossibleTypes = new [] { typeof(string) })]
        string CustomDomainVerificationFailureInfoCode { get;  }
        /// <summary>Details or the error</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Details or the error",
        SerializedName = @"details",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICustomHostnameAnalysisResultCustomDomainVerificationFailureInfoDetailsItem) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICustomHostnameAnalysisResultCustomDomainVerificationFailureInfoDetailsItem[] CustomDomainVerificationFailureInfoDetail { get; set; }
        /// <summary>Detailed error description and debugging information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Detailed error description and debugging information.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string CustomDomainVerificationFailureInfoMessage { get;  }
        /// <summary>Detailed error description and debugging information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Detailed error description and debugging information.",
        SerializedName = @"target",
        PossibleTypes = new [] { typeof(string) })]
        string CustomDomainVerificationFailureInfoTarget { get;  }
        /// <summary>DNS verification test result.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"DNS verification test result.",
        SerializedName = @"customDomainVerificationTest",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.DnsVerificationTestResult) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.DnsVerificationTestResult? CustomDomainVerificationTest { get;  }
        /// <summary>
        /// <code>true</code> if there is a conflict on the Container App's managed environment; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"<code>true</code> if there is a conflict on the Container App's managed environment; otherwise, <code>false</code>.",
        SerializedName = @"hasConflictOnManagedEnvironment",
        PossibleTypes = new [] { typeof(bool) })]
        bool? HasConflictOnManagedEnvironment { get;  }
        /// <summary>Host name that was analyzed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Host name that was analyzed",
        SerializedName = @"hostName",
        PossibleTypes = new [] { typeof(string) })]
        string HostName { get;  }
        /// <summary>
        /// <code>true</code> if hostname is already verified; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"<code>true</code> if hostname is already verified; otherwise, <code>false</code>.",
        SerializedName = @"isHostnameAlreadyVerified",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsHostnameAlreadyVerified { get;  }
        /// <summary>TXT records visible for this hostname.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"TXT records visible for this hostname.",
        SerializedName = @"txtRecords",
        PossibleTypes = new [] { typeof(string) })]
        string[] TxtRecord { get; set; }

    }
    /// Custom domain analysis.
    internal partial interface ICustomHostnameAnalysisResultInternal

    {
        /// <summary>A records visible for this hostname.</summary>
        string[] ARecord { get; set; }
        /// <summary>Alternate CName records visible for this hostname.</summary>
        string[] AlternateCNameRecord { get; set; }
        /// <summary>Alternate TXT records visible for this hostname.</summary>
        string[] AlternateTxtRecord { get; set; }
        /// <summary>CName records visible for this hostname.</summary>
        string[] CNameRecord { get; set; }
        /// <summary>
        /// <code>true</code> if there is a conflict on the Container App's managed environment level custom domain; otherwise, <code>false</code>.
        /// </summary>
        bool? ConflictWithEnvironmentCustomDomain { get; set; }
        /// <summary>
        /// Name of the conflicting Container App on the Managed Environment if it's within the same subscription.
        /// </summary>
        string ConflictingContainerAppResourceId { get; set; }
        /// <summary>Raw failure information if DNS verification fails.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICustomHostnameAnalysisResultCustomDomainVerificationFailureInfo CustomDomainVerificationFailureInfo { get; set; }
        /// <summary>Standardized string to programmatically identify the error.</summary>
        string CustomDomainVerificationFailureInfoCode { get; set; }
        /// <summary>Details or the error</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20221101Preview.ICustomHostnameAnalysisResultCustomDomainVerificationFailureInfoDetailsItem[] CustomDomainVerificationFailureInfoDetail { get; set; }
        /// <summary>Detailed error description and debugging information.</summary>
        string CustomDomainVerificationFailureInfoMessage { get; set; }
        /// <summary>Detailed error description and debugging information.</summary>
        string CustomDomainVerificationFailureInfoTarget { get; set; }
        /// <summary>DNS verification test result.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.DnsVerificationTestResult? CustomDomainVerificationTest { get; set; }
        /// <summary>
        /// <code>true</code> if there is a conflict on the Container App's managed environment; otherwise, <code>false</code>.
        /// </summary>
        bool? HasConflictOnManagedEnvironment { get; set; }
        /// <summary>Host name that was analyzed</summary>
        string HostName { get; set; }
        /// <summary>
        /// <code>true</code> if hostname is already verified; otherwise, <code>false</code>.
        /// </summary>
        bool? IsHostnameAlreadyVerified { get; set; }
        /// <summary>TXT records visible for this hostname.</summary>
        string[] TxtRecord { get; set; }

    }
}