// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.IotCentral.Models.Api20211101Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.IotCentral.Runtime.Extensions;

    /// <summary>
    /// The properties indicating whether a given IoT Central application name or subdomain is available.
    /// </summary>
    public partial class AppAvailabilityInfo :
        Microsoft.Azure.PowerShell.Cmdlets.IotCentral.Models.Api20211101Preview.IAppAvailabilityInfo,
        Microsoft.Azure.PowerShell.Cmdlets.IotCentral.Models.Api20211101Preview.IAppAvailabilityInfoInternal
    {

        /// <summary>Backing field for <see cref="Message" /> property.</summary>
        private string _message;

        /// <summary>The detailed reason message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IotCentral.Origin(Microsoft.Azure.PowerShell.Cmdlets.IotCentral.PropertyOrigin.Owned)]
        public string Message { get => this._message; }

        /// <summary>Internal Acessors for Message</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.IotCentral.Models.Api20211101Preview.IAppAvailabilityInfoInternal.Message { get => this._message; set { {_message = value;} } }

        /// <summary>Internal Acessors for NameAvailable</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.IotCentral.Models.Api20211101Preview.IAppAvailabilityInfoInternal.NameAvailable { get => this._nameAvailable; set { {_nameAvailable = value;} } }

        /// <summary>Internal Acessors for Reason</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.IotCentral.Models.Api20211101Preview.IAppAvailabilityInfoInternal.Reason { get => this._reason; set { {_reason = value;} } }

        /// <summary>Backing field for <see cref="NameAvailable" /> property.</summary>
        private bool? _nameAvailable;

        /// <summary>The value which indicates whether the provided name is available.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IotCentral.Origin(Microsoft.Azure.PowerShell.Cmdlets.IotCentral.PropertyOrigin.Owned)]
        public bool? NameAvailable { get => this._nameAvailable; }

        /// <summary>Backing field for <see cref="Reason" /> property.</summary>
        private string _reason;

        /// <summary>The reason for unavailability.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IotCentral.Origin(Microsoft.Azure.PowerShell.Cmdlets.IotCentral.PropertyOrigin.Owned)]
        public string Reason { get => this._reason; }

        /// <summary>Creates an new <see cref="AppAvailabilityInfo" /> instance.</summary>
        public AppAvailabilityInfo()
        {

        }
    }
    /// The properties indicating whether a given IoT Central application name or subdomain is available.
    public partial interface IAppAvailabilityInfo :
        Microsoft.Azure.PowerShell.Cmdlets.IotCentral.Runtime.IJsonSerializable
    {
        /// <summary>The detailed reason message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IotCentral.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The detailed reason message.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string Message { get;  }
        /// <summary>The value which indicates whether the provided name is available.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IotCentral.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The value which indicates whether the provided name is available.",
        SerializedName = @"nameAvailable",
        PossibleTypes = new [] { typeof(bool) })]
        bool? NameAvailable { get;  }
        /// <summary>The reason for unavailability.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IotCentral.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The reason for unavailability.",
        SerializedName = @"reason",
        PossibleTypes = new [] { typeof(string) })]
        string Reason { get;  }

    }
    /// The properties indicating whether a given IoT Central application name or subdomain is available.
    internal partial interface IAppAvailabilityInfoInternal

    {
        /// <summary>The detailed reason message.</summary>
        string Message { get; set; }
        /// <summary>The value which indicates whether the provided name is available.</summary>
        bool? NameAvailable { get; set; }
        /// <summary>The reason for unavailability.</summary>
        string Reason { get; set; }

    }
}