// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models
{
    using Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.PowerShell;

    [System.ComponentModel.TypeConverter(typeof(CustomerInsightsIdentityTypeConverter))]
    public partial class CustomerInsightsIdentity
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.CustomerInsightsIdentity"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal CustomerInsightsIdentity(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("ResourceGroupName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).ResourceGroupName = (string) content.GetValueForProperty("ResourceGroupName",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).ResourceGroupName, global::System.Convert.ToString);
            }
            if (content.Contains("HubName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).HubName = (string) content.GetValueForProperty("HubName",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).HubName, global::System.Convert.ToString);
            }
            if (content.Contains("SubscriptionId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).SubscriptionId = (string) content.GetValueForProperty("SubscriptionId",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).SubscriptionId, global::System.Convert.ToString);
            }
            if (content.Contains("ProfileName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).ProfileName = (string) content.GetValueForProperty("ProfileName",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).ProfileName, global::System.Convert.ToString);
            }
            if (content.Contains("InteractionName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).InteractionName = (string) content.GetValueForProperty("InteractionName",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).InteractionName, global::System.Convert.ToString);
            }
            if (content.Contains("RelationshipName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).RelationshipName = (string) content.GetValueForProperty("RelationshipName",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).RelationshipName, global::System.Convert.ToString);
            }
            if (content.Contains("RelationshipLinkName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).RelationshipLinkName = (string) content.GetValueForProperty("RelationshipLinkName",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).RelationshipLinkName, global::System.Convert.ToString);
            }
            if (content.Contains("AuthorizationPolicyName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).AuthorizationPolicyName = (string) content.GetValueForProperty("AuthorizationPolicyName",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).AuthorizationPolicyName, global::System.Convert.ToString);
            }
            if (content.Contains("ConnectorName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).ConnectorName = (string) content.GetValueForProperty("ConnectorName",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).ConnectorName, global::System.Convert.ToString);
            }
            if (content.Contains("MappingName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).MappingName = (string) content.GetValueForProperty("MappingName",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).MappingName, global::System.Convert.ToString);
            }
            if (content.Contains("KpiName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).KpiName = (string) content.GetValueForProperty("KpiName",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).KpiName, global::System.Convert.ToString);
            }
            if (content.Contains("WidgetTypeName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).WidgetTypeName = (string) content.GetValueForProperty("WidgetTypeName",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).WidgetTypeName, global::System.Convert.ToString);
            }
            if (content.Contains("ViewName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).ViewName = (string) content.GetValueForProperty("ViewName",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).ViewName, global::System.Convert.ToString);
            }
            if (content.Contains("LinkName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).LinkName = (string) content.GetValueForProperty("LinkName",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).LinkName, global::System.Convert.ToString);
            }
            if (content.Contains("AssignmentName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).AssignmentName = (string) content.GetValueForProperty("AssignmentName",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).AssignmentName, global::System.Convert.ToString);
            }
            if (content.Contains("PredictionName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).PredictionName = (string) content.GetValueForProperty("PredictionName",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).PredictionName, global::System.Convert.ToString);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).Id, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.CustomerInsightsIdentity"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal CustomerInsightsIdentity(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("ResourceGroupName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).ResourceGroupName = (string) content.GetValueForProperty("ResourceGroupName",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).ResourceGroupName, global::System.Convert.ToString);
            }
            if (content.Contains("HubName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).HubName = (string) content.GetValueForProperty("HubName",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).HubName, global::System.Convert.ToString);
            }
            if (content.Contains("SubscriptionId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).SubscriptionId = (string) content.GetValueForProperty("SubscriptionId",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).SubscriptionId, global::System.Convert.ToString);
            }
            if (content.Contains("ProfileName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).ProfileName = (string) content.GetValueForProperty("ProfileName",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).ProfileName, global::System.Convert.ToString);
            }
            if (content.Contains("InteractionName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).InteractionName = (string) content.GetValueForProperty("InteractionName",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).InteractionName, global::System.Convert.ToString);
            }
            if (content.Contains("RelationshipName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).RelationshipName = (string) content.GetValueForProperty("RelationshipName",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).RelationshipName, global::System.Convert.ToString);
            }
            if (content.Contains("RelationshipLinkName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).RelationshipLinkName = (string) content.GetValueForProperty("RelationshipLinkName",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).RelationshipLinkName, global::System.Convert.ToString);
            }
            if (content.Contains("AuthorizationPolicyName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).AuthorizationPolicyName = (string) content.GetValueForProperty("AuthorizationPolicyName",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).AuthorizationPolicyName, global::System.Convert.ToString);
            }
            if (content.Contains("ConnectorName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).ConnectorName = (string) content.GetValueForProperty("ConnectorName",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).ConnectorName, global::System.Convert.ToString);
            }
            if (content.Contains("MappingName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).MappingName = (string) content.GetValueForProperty("MappingName",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).MappingName, global::System.Convert.ToString);
            }
            if (content.Contains("KpiName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).KpiName = (string) content.GetValueForProperty("KpiName",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).KpiName, global::System.Convert.ToString);
            }
            if (content.Contains("WidgetTypeName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).WidgetTypeName = (string) content.GetValueForProperty("WidgetTypeName",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).WidgetTypeName, global::System.Convert.ToString);
            }
            if (content.Contains("ViewName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).ViewName = (string) content.GetValueForProperty("ViewName",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).ViewName, global::System.Convert.ToString);
            }
            if (content.Contains("LinkName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).LinkName = (string) content.GetValueForProperty("LinkName",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).LinkName, global::System.Convert.ToString);
            }
            if (content.Contains("AssignmentName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).AssignmentName = (string) content.GetValueForProperty("AssignmentName",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).AssignmentName, global::System.Convert.ToString);
            }
            if (content.Contains("PredictionName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).PredictionName = (string) content.GetValueForProperty("PredictionName",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).PredictionName, global::System.Convert.ToString);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentityInternal)this).Id, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.CustomerInsightsIdentity"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentity" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentity DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new CustomerInsightsIdentity(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.CustomerInsightsIdentity"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentity" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentity DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new CustomerInsightsIdentity(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="CustomerInsightsIdentity" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="className" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.ICustomerInsightsIdentity FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    [System.ComponentModel.TypeConverter(typeof(CustomerInsightsIdentityTypeConverter))]
    public partial interface ICustomerInsightsIdentity

    {

    }
}