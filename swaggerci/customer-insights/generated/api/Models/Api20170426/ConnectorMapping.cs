// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426
{
    using static Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Extensions;

    /// <summary>The connector mapping definition.</summary>
    public partial class ConnectorMapping :
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMapping,
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal
    {

        /// <summary>The frequency to update.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.FrequencyTypes? AvailabilityFrequency { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingPropertiesInternal)MappingProperty).AvailabilityFrequency; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingPropertiesInternal)MappingProperty).AvailabilityFrequency = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.FrequencyTypes)""); }

        /// <summary>The interval of the given frequency to use.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public int AvailabilityInterval { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingPropertiesInternal)MappingProperty).AvailabilityInterval; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingPropertiesInternal)MappingProperty).AvailabilityInterval = value ; }

        /// <summary>The type of completion operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.CompletionOperationTypes? CompleteOperationCompletionOperationType { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingPropertiesInternal)MappingProperty).CompleteOperationCompletionOperationType; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingPropertiesInternal)MappingProperty).CompleteOperationCompletionOperationType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.CompletionOperationTypes)""); }

        /// <summary>The destination folder where files will be moved to once the import is done.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string CompleteOperationDestinationFolder { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingPropertiesInternal)MappingProperty).CompleteOperationDestinationFolder; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingPropertiesInternal)MappingProperty).CompleteOperationDestinationFolder = value ?? null; }

        /// <summary>Backing field for <see cref="ConnectorName" /> property.</summary>
        private string _connectorName;

        /// <summary>The connector name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        public string ConnectorName { get => this._connectorName; }

        /// <summary>Backing field for <see cref="ConnectorType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ConnectorTypes? _connectorType;

        /// <summary>Type of connector.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ConnectorTypes? ConnectorType { get => this._connectorType; set => this._connectorType = value; }

        /// <summary>Backing field for <see cref="Created" /> property.</summary>
        private global::System.DateTime? _created;

        /// <summary>The created time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        public global::System.DateTime? Created { get => this._created; }

        /// <summary>Backing field for <see cref="DataFormatId" /> property.</summary>
        private string _dataFormatId;

        /// <summary>The DataFormat ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        public string DataFormatId { get => this._dataFormatId; }

        /// <summary>Backing field for <see cref="Description" /> property.</summary>
        private string _description;

        /// <summary>The description of the connector mapping.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        public string Description { get => this._description; set => this._description = value; }

        /// <summary>Backing field for <see cref="DisplayName" /> property.</summary>
        private string _displayName;

        /// <summary>Display name for the connector mapping.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        public string DisplayName { get => this._displayName; set => this._displayName = value; }

        /// <summary>Backing field for <see cref="EntityType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.EntityTypes _entityType;

        /// <summary>Defines which entity type the file should map to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.EntityTypes EntityType { get => this._entityType; set => this._entityType = value; }

        /// <summary>Backing field for <see cref="EntityTypeName" /> property.</summary>
        private string _entityTypeName;

        /// <summary>The mapping entity name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        public string EntityTypeName { get => this._entityTypeName; set => this._entityTypeName = value; }

        /// <summary>The error limit allowed while importing data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public int? ErrorManagementErrorLimit { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingPropertiesInternal)MappingProperty).ErrorManagementErrorLimit; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingPropertiesInternal)MappingProperty).ErrorManagementErrorLimit = value ?? default(int); }

        /// <summary>The type of error management to use for the mapping.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ErrorManagementTypes ErrorManagementType { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingPropertiesInternal)MappingProperty).ErrorManagementType; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingPropertiesInternal)MappingProperty).ErrorManagementType = value ; }

        /// <summary>The oData language.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string FormatAcceptLanguage { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingPropertiesInternal)MappingProperty).FormatAcceptLanguage; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingPropertiesInternal)MappingProperty).FormatAcceptLanguage = value ?? null; }

        /// <summary>Character separating array elements.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string FormatArraySeparator { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingPropertiesInternal)MappingProperty).FormatArraySeparator; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingPropertiesInternal)MappingProperty).FormatArraySeparator = value ?? null; }

        /// <summary>The character that signifies a break between columns.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string FormatColumnDelimiter { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingPropertiesInternal)MappingProperty).FormatColumnDelimiter; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingPropertiesInternal)MappingProperty).FormatColumnDelimiter = value ?? null; }

        /// <summary>Quote character, used to indicate enquoted fields.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string FormatQuoteCharacter { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingPropertiesInternal)MappingProperty).FormatQuoteCharacter; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingPropertiesInternal)MappingProperty).FormatQuoteCharacter = value ?? null; }

        /// <summary>Escape character for quotes, can be the same as the quoteCharacter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string FormatQuoteEscapeCharacter { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingPropertiesInternal)MappingProperty).FormatQuoteEscapeCharacter; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingPropertiesInternal)MappingProperty).FormatQuoteEscapeCharacter = value ?? null; }

        /// <summary>The type mapping format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string FormatType { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingPropertiesInternal)MappingProperty).FormatType; }

        /// <summary>Backing field for <see cref="LastModified" /> property.</summary>
        private global::System.DateTime? _lastModified;

        /// <summary>The last modified time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        public global::System.DateTime? LastModified { get => this._lastModified; }

        /// <summary>Backing field for <see cref="MappingProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingProperties _mappingProperty;

        /// <summary>The properties of the mapping.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingProperties MappingProperty { get => (this._mappingProperty = this._mappingProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ConnectorMappingProperties()); set => this._mappingProperty = value; }

        /// <summary>The file filter for the mapping.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string MappingPropertyFileFilter { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingPropertiesInternal)MappingProperty).FileFilter; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingPropertiesInternal)MappingProperty).FileFilter = value ?? null; }

        /// <summary>The folder path for the mapping.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string MappingPropertyFolderPath { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingPropertiesInternal)MappingProperty).FolderPath; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingPropertiesInternal)MappingProperty).FolderPath = value ?? null; }

        /// <summary>If the file contains a header or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public bool? MappingPropertyHasHeader { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingPropertiesInternal)MappingProperty).HasHeader; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingPropertiesInternal)MappingProperty).HasHeader = value ?? default(bool); }

        /// <summary>Ingestion mapping information at property level.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingStructure[] MappingPropertyStructure { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingPropertiesInternal)MappingProperty).Structure; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingPropertiesInternal)MappingProperty).Structure = value ; }

        /// <summary>Internal Acessors for ConnectorName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal.ConnectorName { get => this._connectorName; set { {_connectorName = value;} } }

        /// <summary>Internal Acessors for Created</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal.Created { get => this._created; set { {_created = value;} } }

        /// <summary>Internal Acessors for DataFormatId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal.DataFormatId { get => this._dataFormatId; set { {_dataFormatId = value;} } }

        /// <summary>Internal Acessors for FormatType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal.FormatType { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingPropertiesInternal)MappingProperty).FormatType; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingPropertiesInternal)MappingProperty).FormatType = value; }

        /// <summary>Internal Acessors for LastModified</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal.LastModified { get => this._lastModified; set { {_lastModified = value;} } }

        /// <summary>Internal Acessors for MappingProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingProperties Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal.MappingProperty { get => (this._mappingProperty = this._mappingProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ConnectorMappingProperties()); set { {_mappingProperty = value;} } }

        /// <summary>Internal Acessors for MappingPropertyAvailability</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingAvailability Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal.MappingPropertyAvailability { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingPropertiesInternal)MappingProperty).Availability; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingPropertiesInternal)MappingProperty).Availability = value; }

        /// <summary>Internal Acessors for MappingPropertyCompleteOperation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingCompleteOperation Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal.MappingPropertyCompleteOperation { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingPropertiesInternal)MappingProperty).CompleteOperation; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingPropertiesInternal)MappingProperty).CompleteOperation = value; }

        /// <summary>Internal Acessors for MappingPropertyErrorManagement</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingErrorManagement Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal.MappingPropertyErrorManagement { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingPropertiesInternal)MappingProperty).ErrorManagement; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingPropertiesInternal)MappingProperty).ErrorManagement = value; }

        /// <summary>Internal Acessors for MappingPropertyFormat</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingFormat Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal.MappingPropertyFormat { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingPropertiesInternal)MappingProperty).Format; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingPropertiesInternal)MappingProperty).Format = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal.Name { get => this._name; set { {_name = value;} } }

        /// <summary>Internal Acessors for NextRunTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal.NextRunTime { get => this._nextRunTime; set { {_nextRunTime = value;} } }

        /// <summary>Internal Acessors for RunId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal.RunId { get => this._runId; set { {_runId = value;} } }

        /// <summary>Internal Acessors for State</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ConnectorMappingStates? Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal.State { get => this._state; set { {_state = value;} } }

        /// <summary>Internal Acessors for TenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal.TenantId { get => this._tenantId; set { {_tenantId = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>The connector mapping name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        public string Name { get => this._name; }

        /// <summary>Backing field for <see cref="NextRunTime" /> property.</summary>
        private global::System.DateTime? _nextRunTime;

        /// <summary>The next run time based on customer's settings.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        public global::System.DateTime? NextRunTime { get => this._nextRunTime; }

        /// <summary>Backing field for <see cref="RunId" /> property.</summary>
        private string _runId;

        /// <summary>The RunId.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        public string RunId { get => this._runId; }

        /// <summary>Backing field for <see cref="State" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ConnectorMappingStates? _state;

        /// <summary>State of connector mapping.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ConnectorMappingStates? State { get => this._state; }

        /// <summary>Backing field for <see cref="TenantId" /> property.</summary>
        private string _tenantId;

        /// <summary>The hub name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        public string TenantId { get => this._tenantId; }

        /// <summary>Creates an new <see cref="ConnectorMapping" /> instance.</summary>
        public ConnectorMapping()
        {

        }
    }
    /// The connector mapping definition.
    public partial interface IConnectorMapping :
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.IJsonSerializable
    {
        /// <summary>The frequency to update.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The frequency to update.",
        SerializedName = @"frequency",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.FrequencyTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.FrequencyTypes? AvailabilityFrequency { get; set; }
        /// <summary>The interval of the given frequency to use.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The interval of the given frequency to use.",
        SerializedName = @"interval",
        PossibleTypes = new [] { typeof(int) })]
        int AvailabilityInterval { get; set; }
        /// <summary>The type of completion operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of completion operation.",
        SerializedName = @"completionOperationType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.CompletionOperationTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.CompletionOperationTypes? CompleteOperationCompletionOperationType { get; set; }
        /// <summary>The destination folder where files will be moved to once the import is done.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The destination folder where files will be moved to once the import is done.",
        SerializedName = @"destinationFolder",
        PossibleTypes = new [] { typeof(string) })]
        string CompleteOperationDestinationFolder { get; set; }
        /// <summary>The connector name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The connector name.",
        SerializedName = @"connectorName",
        PossibleTypes = new [] { typeof(string) })]
        string ConnectorName { get;  }
        /// <summary>Type of connector.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of connector.",
        SerializedName = @"connectorType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ConnectorTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ConnectorTypes? ConnectorType { get; set; }
        /// <summary>The created time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The created time.",
        SerializedName = @"created",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? Created { get;  }
        /// <summary>The DataFormat ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The DataFormat ID.",
        SerializedName = @"dataFormatId",
        PossibleTypes = new [] { typeof(string) })]
        string DataFormatId { get;  }
        /// <summary>The description of the connector mapping.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The description of the connector mapping.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>Display name for the connector mapping.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Display name for the connector mapping.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>Defines which entity type the file should map to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Defines which entity type the file should map to.",
        SerializedName = @"entityType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.EntityTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.EntityTypes EntityType { get; set; }
        /// <summary>The mapping entity name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The mapping entity name.",
        SerializedName = @"entityTypeName",
        PossibleTypes = new [] { typeof(string) })]
        string EntityTypeName { get; set; }
        /// <summary>The error limit allowed while importing data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The error limit allowed while importing data.",
        SerializedName = @"errorLimit",
        PossibleTypes = new [] { typeof(int) })]
        int? ErrorManagementErrorLimit { get; set; }
        /// <summary>The type of error management to use for the mapping.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The type of error management to use for the mapping.",
        SerializedName = @"errorManagementType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ErrorManagementTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ErrorManagementTypes ErrorManagementType { get; set; }
        /// <summary>The oData language.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The oData language.",
        SerializedName = @"acceptLanguage",
        PossibleTypes = new [] { typeof(string) })]
        string FormatAcceptLanguage { get; set; }
        /// <summary>Character separating array elements.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Character separating array elements.",
        SerializedName = @"arraySeparator",
        PossibleTypes = new [] { typeof(string) })]
        string FormatArraySeparator { get; set; }
        /// <summary>The character that signifies a break between columns.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The character that signifies a break between columns.",
        SerializedName = @"columnDelimiter",
        PossibleTypes = new [] { typeof(string) })]
        string FormatColumnDelimiter { get; set; }
        /// <summary>Quote character, used to indicate enquoted fields.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Quote character, used to indicate enquoted fields.",
        SerializedName = @"quoteCharacter",
        PossibleTypes = new [] { typeof(string) })]
        string FormatQuoteCharacter { get; set; }
        /// <summary>Escape character for quotes, can be the same as the quoteCharacter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Escape character for quotes, can be the same as the quoteCharacter.",
        SerializedName = @"quoteEscapeCharacter",
        PossibleTypes = new [] { typeof(string) })]
        string FormatQuoteEscapeCharacter { get; set; }
        /// <summary>The type mapping format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = true,
        ReadOnly = true,
        Description = @"The type mapping format.",
        SerializedName = @"formatType",
        PossibleTypes = new [] { typeof(string) })]
        string FormatType { get;  }
        /// <summary>The last modified time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The last modified time.",
        SerializedName = @"lastModified",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastModified { get;  }
        /// <summary>The file filter for the mapping.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The file filter for the mapping.",
        SerializedName = @"fileFilter",
        PossibleTypes = new [] { typeof(string) })]
        string MappingPropertyFileFilter { get; set; }
        /// <summary>The folder path for the mapping.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The folder path for the mapping.",
        SerializedName = @"folderPath",
        PossibleTypes = new [] { typeof(string) })]
        string MappingPropertyFolderPath { get; set; }
        /// <summary>If the file contains a header or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If the file contains a header or not.",
        SerializedName = @"hasHeader",
        PossibleTypes = new [] { typeof(bool) })]
        bool? MappingPropertyHasHeader { get; set; }
        /// <summary>Ingestion mapping information at property level.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Ingestion mapping information at property level.",
        SerializedName = @"structure",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingStructure) })]
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingStructure[] MappingPropertyStructure { get; set; }
        /// <summary>The connector mapping name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The connector mapping name",
        SerializedName = @"connectorMappingName",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get;  }
        /// <summary>The next run time based on customer's settings.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The next run time based on customer's settings.",
        SerializedName = @"nextRunTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? NextRunTime { get;  }
        /// <summary>The RunId.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The RunId.",
        SerializedName = @"runId",
        PossibleTypes = new [] { typeof(string) })]
        string RunId { get;  }
        /// <summary>State of connector mapping.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"State of connector mapping.",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ConnectorMappingStates) })]
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ConnectorMappingStates? State { get;  }
        /// <summary>The hub name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The hub name.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string TenantId { get;  }

    }
    /// The connector mapping definition.
    internal partial interface IConnectorMappingInternal

    {
        /// <summary>The frequency to update.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.FrequencyTypes? AvailabilityFrequency { get; set; }
        /// <summary>The interval of the given frequency to use.</summary>
        int AvailabilityInterval { get; set; }
        /// <summary>The type of completion operation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.CompletionOperationTypes? CompleteOperationCompletionOperationType { get; set; }
        /// <summary>The destination folder where files will be moved to once the import is done.</summary>
        string CompleteOperationDestinationFolder { get; set; }
        /// <summary>The connector name.</summary>
        string ConnectorName { get; set; }
        /// <summary>Type of connector.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ConnectorTypes? ConnectorType { get; set; }
        /// <summary>The created time.</summary>
        global::System.DateTime? Created { get; set; }
        /// <summary>The DataFormat ID.</summary>
        string DataFormatId { get; set; }
        /// <summary>The description of the connector mapping.</summary>
        string Description { get; set; }
        /// <summary>Display name for the connector mapping.</summary>
        string DisplayName { get; set; }
        /// <summary>Defines which entity type the file should map to.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.EntityTypes EntityType { get; set; }
        /// <summary>The mapping entity name.</summary>
        string EntityTypeName { get; set; }
        /// <summary>The error limit allowed while importing data.</summary>
        int? ErrorManagementErrorLimit { get; set; }
        /// <summary>The type of error management to use for the mapping.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ErrorManagementTypes ErrorManagementType { get; set; }
        /// <summary>The oData language.</summary>
        string FormatAcceptLanguage { get; set; }
        /// <summary>Character separating array elements.</summary>
        string FormatArraySeparator { get; set; }
        /// <summary>The character that signifies a break between columns.</summary>
        string FormatColumnDelimiter { get; set; }
        /// <summary>Quote character, used to indicate enquoted fields.</summary>
        string FormatQuoteCharacter { get; set; }
        /// <summary>Escape character for quotes, can be the same as the quoteCharacter.</summary>
        string FormatQuoteEscapeCharacter { get; set; }
        /// <summary>The type mapping format.</summary>
        string FormatType { get; set; }
        /// <summary>The last modified time.</summary>
        global::System.DateTime? LastModified { get; set; }
        /// <summary>The properties of the mapping.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingProperties MappingProperty { get; set; }
        /// <summary>The availability of mapping property.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingAvailability MappingPropertyAvailability { get; set; }
        /// <summary>The operation after import is done.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingCompleteOperation MappingPropertyCompleteOperation { get; set; }
        /// <summary>The error management setting for the mapping.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingErrorManagement MappingPropertyErrorManagement { get; set; }
        /// <summary>The file filter for the mapping.</summary>
        string MappingPropertyFileFilter { get; set; }
        /// <summary>The folder path for the mapping.</summary>
        string MappingPropertyFolderPath { get; set; }
        /// <summary>The format of mapping property.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingFormat MappingPropertyFormat { get; set; }
        /// <summary>If the file contains a header or not.</summary>
        bool? MappingPropertyHasHeader { get; set; }
        /// <summary>Ingestion mapping information at property level.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingStructure[] MappingPropertyStructure { get; set; }
        /// <summary>The connector mapping name</summary>
        string Name { get; set; }
        /// <summary>The next run time based on customer's settings.</summary>
        global::System.DateTime? NextRunTime { get; set; }
        /// <summary>The RunId.</summary>
        string RunId { get; set; }
        /// <summary>State of connector mapping.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ConnectorMappingStates? State { get; set; }
        /// <summary>The hub name.</summary>
        string TenantId { get; set; }

    }
}