// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426
{
    using static Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Extensions;

    /// <summary>Defines the KPI Threshold limits.</summary>
    public partial class KpiDefinition
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json erialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinition.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinition.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinition FromJson(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject json ? new KpiDefinition(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject into a new instance of <see cref="KpiDefinition" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal KpiDefinition(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_thresHold = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject>("thresHolds"), out var __jsonThresHolds) ? Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.KpiThresholds.FromJson(__jsonThresHolds) : ThresHold;}
            {_entityType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonString>("entityType"), out var __jsonEntityType) ? (string)__jsonEntityType : (string)EntityType;}
            {_entityTypeName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonString>("entityTypeName"), out var __jsonEntityTypeName) ? (string)__jsonEntityTypeName : (string)EntityTypeName;}
            {_tenantId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonString>("tenantId"), out var __jsonTenantId) ? (string)__jsonTenantId : (string)TenantId;}
            {_kpiName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonString>("kpiName"), out var __jsonKpiName) ? (string)__jsonKpiName : (string)KpiName;}
            {_displayName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject>("displayName"), out var __jsonDisplayName) ? Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.KpiDefinitionDisplayName.FromJson(__jsonDisplayName) : DisplayName;}
            {_description = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject>("description"), out var __jsonDescription) ? Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.KpiDefinitionDescription.FromJson(__jsonDescription) : Description;}
            {_calculationWindow = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonString>("calculationWindow"), out var __jsonCalculationWindow) ? (string)__jsonCalculationWindow : (string)CalculationWindow;}
            {_calculationWindowFieldName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonString>("calculationWindowFieldName"), out var __jsonCalculationWindowFieldName) ? (string)__jsonCalculationWindowFieldName : (string)CalculationWindowFieldName;}
            {_function = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonString>("function"), out var __jsonFunction) ? (string)__jsonFunction : (string)Function;}
            {_expression = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonString>("expression"), out var __jsonExpression) ? (string)__jsonExpression : (string)Expression;}
            {_unit = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonString>("unit"), out var __jsonUnit) ? (string)__jsonUnit : (string)Unit;}
            {_filter = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonString>("filter"), out var __jsonFilter) ? (string)__jsonFilter : (string)Filter;}
            {_groupBy = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonArray>("groupBy"), out var __jsonGroupBy) ? If( __jsonGroupBy as Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(string) (__u is Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonString __t ? (string)(__t.ToString()) : null)) ))() : null : GroupBy;}
            {_groupByMetadata = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonArray>("groupByMetadata"), out var __jsonGroupByMetadata) ? If( __jsonGroupByMetadata as Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonArray, out var __q) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiGroupByMetadata[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__q, (__p)=>(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiGroupByMetadata) (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.KpiGroupByMetadata.FromJson(__p) )) ))() : null : GroupByMetadata;}
            {_participantProfilesMetadata = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonArray>("participantProfilesMetadata"), out var __jsonParticipantProfilesMetadata) ? If( __jsonParticipantProfilesMetadata as Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonArray, out var __l) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiParticipantProfilesMetadata[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__l, (__k)=>(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiParticipantProfilesMetadata) (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.KpiParticipantProfilesMetadata.FromJson(__k) )) ))() : null : ParticipantProfilesMetadata;}
            {_provisioningState = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonString>("provisioningState"), out var __jsonProvisioningState) ? (string)__jsonProvisioningState : (string)ProvisioningState;}
            {_alias = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonArray>("aliases"), out var __jsonAliases) ? If( __jsonAliases as Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonArray, out var __g) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiAlias[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__g, (__f)=>(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiAlias) (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.KpiAlias.FromJson(__f) )) ))() : null : Alias;}
            {_extract = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonArray>("extracts"), out var __jsonExtracts) ? If( __jsonExtracts as Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonArray, out var __b) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiExtract[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__b, (__a)=>(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiExtract) (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.KpiExtract.FromJson(__a) )) ))() : null : Extract;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="KpiDefinition" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="KpiDefinition" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != this._thresHold ? (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode) this._thresHold.ToJson(null,serializationMode) : null, "thresHolds" ,container.Add );
            AddIf( null != (((object)this._entityType)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonString(this._entityType.ToString()) : null, "entityType" ,container.Add );
            AddIf( null != (((object)this._entityTypeName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonString(this._entityTypeName.ToString()) : null, "entityTypeName" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._tenantId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonString(this._tenantId.ToString()) : null, "tenantId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._kpiName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonString(this._kpiName.ToString()) : null, "kpiName" ,container.Add );
            }
            AddIf( null != this._displayName ? (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode) this._displayName.ToJson(null,serializationMode) : null, "displayName" ,container.Add );
            AddIf( null != this._description ? (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode) this._description.ToJson(null,serializationMode) : null, "description" ,container.Add );
            AddIf( null != (((object)this._calculationWindow)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonString(this._calculationWindow.ToString()) : null, "calculationWindow" ,container.Add );
            AddIf( null != (((object)this._calculationWindowFieldName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonString(this._calculationWindowFieldName.ToString()) : null, "calculationWindowFieldName" ,container.Add );
            AddIf( null != (((object)this._function)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonString(this._function.ToString()) : null, "function" ,container.Add );
            AddIf( null != (((object)this._expression)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonString(this._expression.ToString()) : null, "expression" ,container.Add );
            AddIf( null != (((object)this._unit)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonString(this._unit.ToString()) : null, "unit" ,container.Add );
            AddIf( null != (((object)this._filter)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonString(this._filter.ToString()) : null, "filter" ,container.Add );
            if (null != this._groupBy)
            {
                var __w = new Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.XNodeArray();
                foreach( var __x in this._groupBy )
                {
                    AddIf(null != (((object)__x)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonString(__x.ToString()) : null ,__w.Add);
                }
                container.Add("groupBy",__w);
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.SerializationMode.IncludeReadOnly))
            {
                if (null != this._groupByMetadata)
                {
                    var __r = new Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.XNodeArray();
                    foreach( var __s in this._groupByMetadata )
                    {
                        AddIf(__s?.ToJson(null, serializationMode) ,__r.Add);
                    }
                    container.Add("groupByMetadata",__r);
                }
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.SerializationMode.IncludeReadOnly))
            {
                if (null != this._participantProfilesMetadata)
                {
                    var __m = new Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.XNodeArray();
                    foreach( var __n in this._participantProfilesMetadata )
                    {
                        AddIf(__n?.ToJson(null, serializationMode) ,__m.Add);
                    }
                    container.Add("participantProfilesMetadata",__m);
                }
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._provisioningState)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonString(this._provisioningState.ToString()) : null, "provisioningState" ,container.Add );
            }
            if (null != this._alias)
            {
                var __h = new Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.XNodeArray();
                foreach( var __i in this._alias )
                {
                    AddIf(__i?.ToJson(null, serializationMode) ,__h.Add);
                }
                container.Add("aliases",__h);
            }
            if (null != this._extract)
            {
                var __c = new Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.XNodeArray();
                foreach( var __d in this._extract )
                {
                    AddIf(__d?.ToJson(null, serializationMode) ,__c.Add);
                }
                container.Add("extracts",__c);
            }
            AfterToJson(ref container);
            return container;
        }
    }
}