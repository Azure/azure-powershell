// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426
{
    using static Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Extensions;

    /// <summary>The link resource format.</summary>
    public partial class LinkResourceFormat :
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ILinkResourceFormat,
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ILinkResourceFormatInternal,
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProxyResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProxyResource __proxyResource = new Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ProxyResource();

        /// <summary>Localized descriptions for the Link.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ILinkDefinitionDescription Description { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ILinkDefinitionInternal)Property).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ILinkDefinitionInternal)Property).Description = value ?? null /* model class */; }

        /// <summary>Localized display name for the Link.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ILinkDefinitionDisplayName DisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ILinkDefinitionInternal)Property).DisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ILinkDefinitionInternal)Property).DisplayName = value ?? null /* model class */; }

        /// <summary>Resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProxyResourceInternal)__proxyResource).Id; }

        /// <summary>The link name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string LinkName { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ILinkDefinitionInternal)Property).LinkName; }

        /// <summary>The set of properties mappings between the source and target Types.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ITypePropertiesMapping[] Mapping { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ILinkDefinitionInternal)Property).Mapping; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ILinkDefinitionInternal)Property).Mapping = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for LinkName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ILinkResourceFormatInternal.LinkName { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ILinkDefinitionInternal)Property).LinkName; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ILinkDefinitionInternal)Property).LinkName = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ILinkDefinition Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ILinkResourceFormatInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.LinkDefinition()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ProvisioningStates? Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ILinkResourceFormatInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ILinkDefinitionInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ILinkDefinitionInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for TenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ILinkResourceFormatInternal.TenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ILinkDefinitionInternal)Property).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ILinkDefinitionInternal)Property).TenantId = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProxyResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProxyResourceInternal)__proxyResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProxyResourceInternal)__proxyResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProxyResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProxyResourceInternal)__proxyResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProxyResourceInternal)__proxyResource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProxyResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProxyResourceInternal)__proxyResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProxyResourceInternal)__proxyResource).Type = value; }

        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProxyResourceInternal)__proxyResource).Name; }

        /// <summary>
        /// Determines whether this link is supposed to create or delete instances if Link is NOT Reference Only.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.InstanceOperationType? OperationType { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ILinkDefinitionInternal)Property).OperationType; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ILinkDefinitionInternal)Property).OperationType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.InstanceOperationType)""); }

        /// <summary>The properties that represent the participating profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IParticipantPropertyReference[] ParticipantPropertyReference { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ILinkDefinitionInternal)Property).ParticipantPropertyReference; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ILinkDefinitionInternal)Property).ParticipantPropertyReference = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ILinkDefinition _property;

        /// <summary>The definition of Link.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ILinkDefinition Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.LinkDefinition()); set => this._property = value; }

        /// <summary>Provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ProvisioningStates? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ILinkDefinitionInternal)Property).ProvisioningState; }

        /// <summary>
        /// Indicating whether the link is reference only link. This flag is ignored if the Mappings are defined. If the mappings
        /// are not defined and it is set to true, links processing will not create or update profiles.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public bool? ReferenceOnly { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ILinkDefinitionInternal)Property).ReferenceOnly; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ILinkDefinitionInternal)Property).ReferenceOnly = value ?? default(bool); }

        /// <summary>Type of source entity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.EntityType? SourceEntityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ILinkDefinitionInternal)Property).SourceEntityType; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ILinkDefinitionInternal)Property).SourceEntityType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.EntityType)""); }

        /// <summary>Name of the source Entity Type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string SourceEntityTypeName { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ILinkDefinitionInternal)Property).SourceEntityTypeName; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ILinkDefinitionInternal)Property).SourceEntityTypeName = value ?? null; }

        /// <summary>Type of target entity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.EntityType? TargetEntityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ILinkDefinitionInternal)Property).TargetEntityType; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ILinkDefinitionInternal)Property).TargetEntityType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.EntityType)""); }

        /// <summary>Name of the target Entity Type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string TargetEntityTypeName { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ILinkDefinitionInternal)Property).TargetEntityTypeName; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ILinkDefinitionInternal)Property).TargetEntityTypeName = value ?? null; }

        /// <summary>The hub name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string TenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ILinkDefinitionInternal)Property).TenantId; }

        /// <summary>Resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProxyResourceInternal)__proxyResource).Type; }

        /// <summary>Creates an new <see cref="LinkResourceFormat" /> instance.</summary>
        public LinkResourceFormat()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__proxyResource), __proxyResource);
            await eventListener.AssertObjectIsValid(nameof(__proxyResource), __proxyResource);
        }
    }
    /// The link resource format.
    public partial interface ILinkResourceFormat :
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProxyResource
    {
        /// <summary>Localized descriptions for the Link.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Localized descriptions for the Link.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ILinkDefinitionDescription) })]
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ILinkDefinitionDescription Description { get; set; }
        /// <summary>Localized display name for the Link.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Localized display name for the Link.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ILinkDefinitionDisplayName) })]
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ILinkDefinitionDisplayName DisplayName { get; set; }
        /// <summary>The link name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The link name.",
        SerializedName = @"linkName",
        PossibleTypes = new [] { typeof(string) })]
        string LinkName { get;  }
        /// <summary>The set of properties mappings between the source and target Types.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The set of properties mappings between the source and target Types.",
        SerializedName = @"mappings",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ITypePropertiesMapping) })]
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ITypePropertiesMapping[] Mapping { get; set; }
        /// <summary>
        /// Determines whether this link is supposed to create or delete instances if Link is NOT Reference Only.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Determines whether this link is supposed to create or delete instances if Link is NOT Reference Only.",
        SerializedName = @"operationType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.InstanceOperationType) })]
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.InstanceOperationType? OperationType { get; set; }
        /// <summary>The properties that represent the participating profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The properties that represent the participating profile.",
        SerializedName = @"participantPropertyReferences",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IParticipantPropertyReference) })]
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IParticipantPropertyReference[] ParticipantPropertyReference { get; set; }
        /// <summary>Provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Provisioning state.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ProvisioningStates) })]
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ProvisioningStates? ProvisioningState { get;  }
        /// <summary>
        /// Indicating whether the link is reference only link. This flag is ignored if the Mappings are defined. If the mappings
        /// are not defined and it is set to true, links processing will not create or update profiles.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicating whether the link is reference only link. This flag is ignored if the Mappings are defined. If the mappings are not defined and it is set to true, links processing will not create or update profiles.",
        SerializedName = @"referenceOnly",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ReferenceOnly { get; set; }
        /// <summary>Type of source entity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of source entity.",
        SerializedName = @"sourceEntityType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.EntityType) })]
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.EntityType? SourceEntityType { get; set; }
        /// <summary>Name of the source Entity Type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the source Entity Type.",
        SerializedName = @"sourceEntityTypeName",
        PossibleTypes = new [] { typeof(string) })]
        string SourceEntityTypeName { get; set; }
        /// <summary>Type of target entity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of target entity.",
        SerializedName = @"targetEntityType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.EntityType) })]
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.EntityType? TargetEntityType { get; set; }
        /// <summary>Name of the target Entity Type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the target Entity Type.",
        SerializedName = @"targetEntityTypeName",
        PossibleTypes = new [] { typeof(string) })]
        string TargetEntityTypeName { get; set; }
        /// <summary>The hub name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The hub name.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string TenantId { get;  }

    }
    /// The link resource format.
    internal partial interface ILinkResourceFormatInternal :
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProxyResourceInternal
    {
        /// <summary>Localized descriptions for the Link.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ILinkDefinitionDescription Description { get; set; }
        /// <summary>Localized display name for the Link.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ILinkDefinitionDisplayName DisplayName { get; set; }
        /// <summary>The link name.</summary>
        string LinkName { get; set; }
        /// <summary>The set of properties mappings between the source and target Types.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ITypePropertiesMapping[] Mapping { get; set; }
        /// <summary>
        /// Determines whether this link is supposed to create or delete instances if Link is NOT Reference Only.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.InstanceOperationType? OperationType { get; set; }
        /// <summary>The properties that represent the participating profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IParticipantPropertyReference[] ParticipantPropertyReference { get; set; }
        /// <summary>The definition of Link.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ILinkDefinition Property { get; set; }
        /// <summary>Provisioning state.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ProvisioningStates? ProvisioningState { get; set; }
        /// <summary>
        /// Indicating whether the link is reference only link. This flag is ignored if the Mappings are defined. If the mappings
        /// are not defined and it is set to true, links processing will not create or update profiles.
        /// </summary>
        bool? ReferenceOnly { get; set; }
        /// <summary>Type of source entity.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.EntityType? SourceEntityType { get; set; }
        /// <summary>Name of the source Entity Type.</summary>
        string SourceEntityTypeName { get; set; }
        /// <summary>Type of target entity.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.EntityType? TargetEntityType { get; set; }
        /// <summary>Name of the target Entity Type.</summary>
        string TargetEntityTypeName { get; set; }
        /// <summary>The hub name.</summary>
        string TenantId { get; set; }

    }
}