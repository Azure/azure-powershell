// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426
{
    using static Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Extensions;

    /// <summary>Property definition.</summary>
    public partial class PropertyDefinition :
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IPropertyDefinition,
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IPropertyDefinitionInternal
    {

        /// <summary>Backing field for <see cref="ArrayValueSeparator" /> property.</summary>
        private string _arrayValueSeparator;

        /// <summary>Array value separator for properties with isArray set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        public string ArrayValueSeparator { get => this._arrayValueSeparator; set => this._arrayValueSeparator = value; }

        /// <summary>Backing field for <see cref="DataSourcePrecedenceRule" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IDataSourcePrecedence[] _dataSourcePrecedenceRule;

        /// <summary>
        /// This is specific to interactions modeled as activities. Data sources are used to determine where data is stored and also
        /// in precedence rules.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IDataSourcePrecedence[] DataSourcePrecedenceRule { get => this._dataSourcePrecedenceRule; }

        /// <summary>Backing field for <see cref="EnumValidValue" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProfileEnumValidValuesFormat[] _enumValidValue;

        /// <summary>Describes valid values for an enum property.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProfileEnumValidValuesFormat[] EnumValidValue { get => this._enumValidValue; set => this._enumValidValue = value; }

        /// <summary>Backing field for <see cref="FieldName" /> property.</summary>
        private string _fieldName;

        /// <summary>Name of the property.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        public string FieldName { get => this._fieldName; set => this._fieldName = value; }

        /// <summary>Backing field for <see cref="FieldType" /> property.</summary>
        private string _fieldType;

        /// <summary>Type of the property.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        public string FieldType { get => this._fieldType; set => this._fieldType = value; }

        /// <summary>Backing field for <see cref="IsArray" /> property.</summary>
        private bool? _isArray;

        /// <summary>
        /// Indicates if the property is actually an array of the fieldType above on the data api.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        public bool? IsArray { get => this._isArray; set => this._isArray = value; }

        /// <summary>Backing field for <see cref="IsAvailableInGraph" /> property.</summary>
        private bool? _isAvailableInGraph;

        /// <summary>Whether property is available in graph or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        public bool? IsAvailableInGraph { get => this._isAvailableInGraph; set => this._isAvailableInGraph = value; }

        /// <summary>Backing field for <see cref="IsEnum" /> property.</summary>
        private bool? _isEnum;

        /// <summary>Indicates if the property is an enum.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        public bool? IsEnum { get => this._isEnum; set => this._isEnum = value; }

        /// <summary>Backing field for <see cref="IsFlagEnum" /> property.</summary>
        private bool? _isFlagEnum;

        /// <summary>Indicates if the property is an flag enum.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        public bool? IsFlagEnum { get => this._isFlagEnum; set => this._isFlagEnum = value; }

        /// <summary>Backing field for <see cref="IsImage" /> property.</summary>
        private bool? _isImage;

        /// <summary>Whether the property is an Image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        public bool? IsImage { get => this._isImage; set => this._isImage = value; }

        /// <summary>Backing field for <see cref="IsLocalizedString" /> property.</summary>
        private bool? _isLocalizedString;

        /// <summary>Whether the property is a localized string.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        public bool? IsLocalizedString { get => this._isLocalizedString; set => this._isLocalizedString = value; }

        /// <summary>Backing field for <see cref="IsName" /> property.</summary>
        private bool? _isName;

        /// <summary>Whether the property is a name or a part of name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        public bool? IsName { get => this._isName; set => this._isName = value; }

        /// <summary>Backing field for <see cref="IsRequired" /> property.</summary>
        private bool? _isRequired;

        /// <summary>
        /// Whether property value is required on instances, IsRequired field only for Interaction. Profile Instance will not check
        /// for required field.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        public bool? IsRequired { get => this._isRequired; set => this._isRequired = value; }

        /// <summary>Backing field for <see cref="MaxLength" /> property.</summary>
        private int? _maxLength;

        /// <summary>Max length of string. Used only if type is string.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        public int? MaxLength { get => this._maxLength; set => this._maxLength = value; }

        /// <summary>Internal Acessors for DataSourcePrecedenceRule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IDataSourcePrecedence[] Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IPropertyDefinitionInternal.DataSourcePrecedenceRule { get => this._dataSourcePrecedenceRule; set { {_dataSourcePrecedenceRule = value;} } }

        /// <summary>Backing field for <see cref="PropertyId" /> property.</summary>
        private string _propertyId;

        /// <summary>The ID associated with the property.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        public string PropertyId { get => this._propertyId; set => this._propertyId = value; }

        /// <summary>Backing field for <see cref="SchemaItemPropLink" /> property.</summary>
        private string _schemaItemPropLink;

        /// <summary>URL encoded schema.org item prop link for the property.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        public string SchemaItemPropLink { get => this._schemaItemPropLink; set => this._schemaItemPropLink = value; }

        /// <summary>Creates an new <see cref="PropertyDefinition" /> instance.</summary>
        public PropertyDefinition()
        {

        }
    }
    /// Property definition.
    public partial interface IPropertyDefinition :
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.IJsonSerializable
    {
        /// <summary>Array value separator for properties with isArray set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Array value separator for properties with isArray set.",
        SerializedName = @"arrayValueSeparator",
        PossibleTypes = new [] { typeof(string) })]
        string ArrayValueSeparator { get; set; }
        /// <summary>
        /// This is specific to interactions modeled as activities. Data sources are used to determine where data is stored and also
        /// in precedence rules.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"This is specific to interactions modeled as activities. Data sources are used to determine where data is stored and also in precedence rules.",
        SerializedName = @"dataSourcePrecedenceRules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IDataSourcePrecedence) })]
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IDataSourcePrecedence[] DataSourcePrecedenceRule { get;  }
        /// <summary>Describes valid values for an enum property.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Describes valid values for an enum property.",
        SerializedName = @"enumValidValues",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProfileEnumValidValuesFormat) })]
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProfileEnumValidValuesFormat[] EnumValidValue { get; set; }
        /// <summary>Name of the property.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Name of the property.",
        SerializedName = @"fieldName",
        PossibleTypes = new [] { typeof(string) })]
        string FieldName { get; set; }
        /// <summary>Type of the property.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Type of the property.",
        SerializedName = @"fieldType",
        PossibleTypes = new [] { typeof(string) })]
        string FieldType { get; set; }
        /// <summary>
        /// Indicates if the property is actually an array of the fieldType above on the data api.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates if the property is actually an array of the fieldType above on the data api.",
        SerializedName = @"isArray",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsArray { get; set; }
        /// <summary>Whether property is available in graph or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether property is available in graph or not.",
        SerializedName = @"isAvailableInGraph",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsAvailableInGraph { get; set; }
        /// <summary>Indicates if the property is an enum.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates if the property is an enum.",
        SerializedName = @"isEnum",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsEnum { get; set; }
        /// <summary>Indicates if the property is an flag enum.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates if the property is an flag enum.",
        SerializedName = @"isFlagEnum",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsFlagEnum { get; set; }
        /// <summary>Whether the property is an Image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether the property is an Image.",
        SerializedName = @"isImage",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsImage { get; set; }
        /// <summary>Whether the property is a localized string.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether the property is a localized string.",
        SerializedName = @"isLocalizedString",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsLocalizedString { get; set; }
        /// <summary>Whether the property is a name or a part of name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether the property is a name or a part of name.",
        SerializedName = @"isName",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsName { get; set; }
        /// <summary>
        /// Whether property value is required on instances, IsRequired field only for Interaction. Profile Instance will not check
        /// for required field.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether property value is required on instances, IsRequired field only for Interaction. Profile Instance will not check for required field.",
        SerializedName = @"isRequired",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsRequired { get; set; }
        /// <summary>Max length of string. Used only if type is string.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Max length of string. Used only if type is string.",
        SerializedName = @"maxLength",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxLength { get; set; }
        /// <summary>The ID associated with the property.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ID associated with the property.",
        SerializedName = @"propertyId",
        PossibleTypes = new [] { typeof(string) })]
        string PropertyId { get; set; }
        /// <summary>URL encoded schema.org item prop link for the property.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"URL encoded schema.org item prop link for the property.",
        SerializedName = @"schemaItemPropLink",
        PossibleTypes = new [] { typeof(string) })]
        string SchemaItemPropLink { get; set; }

    }
    /// Property definition.
    internal partial interface IPropertyDefinitionInternal

    {
        /// <summary>Array value separator for properties with isArray set.</summary>
        string ArrayValueSeparator { get; set; }
        /// <summary>
        /// This is specific to interactions modeled as activities. Data sources are used to determine where data is stored and also
        /// in precedence rules.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IDataSourcePrecedence[] DataSourcePrecedenceRule { get; set; }
        /// <summary>Describes valid values for an enum property.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProfileEnumValidValuesFormat[] EnumValidValue { get; set; }
        /// <summary>Name of the property.</summary>
        string FieldName { get; set; }
        /// <summary>Type of the property.</summary>
        string FieldType { get; set; }
        /// <summary>
        /// Indicates if the property is actually an array of the fieldType above on the data api.
        /// </summary>
        bool? IsArray { get; set; }
        /// <summary>Whether property is available in graph or not.</summary>
        bool? IsAvailableInGraph { get; set; }
        /// <summary>Indicates if the property is an enum.</summary>
        bool? IsEnum { get; set; }
        /// <summary>Indicates if the property is an flag enum.</summary>
        bool? IsFlagEnum { get; set; }
        /// <summary>Whether the property is an Image.</summary>
        bool? IsImage { get; set; }
        /// <summary>Whether the property is a localized string.</summary>
        bool? IsLocalizedString { get; set; }
        /// <summary>Whether the property is a name or a part of name.</summary>
        bool? IsName { get; set; }
        /// <summary>
        /// Whether property value is required on instances, IsRequired field only for Interaction. Profile Instance will not check
        /// for required field.
        /// </summary>
        bool? IsRequired { get; set; }
        /// <summary>Max length of string. Used only if type is string.</summary>
        int? MaxLength { get; set; }
        /// <summary>The ID associated with the property.</summary>
        string PropertyId { get; set; }
        /// <summary>URL encoded schema.org item prop link for the property.</summary>
        string SchemaItemPropLink { get; set; }

    }
}