// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426
{
    using static Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Extensions;

    /// <summary>The Interaction Type Definition</summary>
    public partial class InteractionTypeDefinition
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json erialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IInteractionTypeDefinition.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IInteractionTypeDefinition.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IInteractionTypeDefinition FromJson(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject json ? new InteractionTypeDefinition(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject into a new instance of <see cref="InteractionTypeDefinition" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal InteractionTypeDefinition(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            __entityTypeDefinition = new Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.EntityTypeDefinition(json);
            {_defaultDataSource = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject>("defaultDataSource"), out var __jsonDefaultDataSource) ? Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.DataSource.FromJson(__jsonDefaultDataSource) : DefaultDataSource;}
            {_idPropertyName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonArray>("idPropertyNames"), out var __jsonIdPropertyNames) ? If( __jsonIdPropertyNames as Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(string) (__u is Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonString __t ? (string)(__t.ToString()) : null)) ))() : null : IdPropertyName;}
            {_participantProfile = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonArray>("participantProfiles"), out var __jsonParticipantProfiles) ? If( __jsonParticipantProfiles as Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonArray, out var __q) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IParticipant[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__q, (__p)=>(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IParticipant) (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.Participant.FromJson(__p) )) ))() : null : ParticipantProfile;}
            {_primaryParticipantProfilePropertyName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonString>("primaryParticipantProfilePropertyName"), out var __jsonPrimaryParticipantProfilePropertyName) ? (string)__jsonPrimaryParticipantProfilePropertyName : (string)PrimaryParticipantProfilePropertyName;}
            {_dataSourcePrecedenceRule = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonArray>("dataSourcePrecedenceRules"), out var __jsonDataSourcePrecedenceRules) ? If( __jsonDataSourcePrecedenceRules as Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonArray, out var __l) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IDataSourcePrecedence[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__l, (__k)=>(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IDataSourcePrecedence) (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.DataSourcePrecedence.FromJson(__k) )) ))() : null : DataSourcePrecedenceRule;}
            {_isActivity = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonBoolean>("isActivity"), out var __jsonIsActivity) ? (bool?)__jsonIsActivity : IsActivity;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="InteractionTypeDefinition" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="InteractionTypeDefinition" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            __entityTypeDefinition?.ToJson(container, serializationMode);
            AddIf( null != this._defaultDataSource ? (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode) this._defaultDataSource.ToJson(null,serializationMode) : null, "defaultDataSource" ,container.Add );
            if (null != this._idPropertyName)
            {
                var __w = new Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.XNodeArray();
                foreach( var __x in this._idPropertyName )
                {
                    AddIf(null != (((object)__x)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonString(__x.ToString()) : null ,__w.Add);
                }
                container.Add("idPropertyNames",__w);
            }
            if (null != this._participantProfile)
            {
                var __r = new Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.XNodeArray();
                foreach( var __s in this._participantProfile )
                {
                    AddIf(__s?.ToJson(null, serializationMode) ,__r.Add);
                }
                container.Add("participantProfiles",__r);
            }
            AddIf( null != (((object)this._primaryParticipantProfilePropertyName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonString(this._primaryParticipantProfilePropertyName.ToString()) : null, "primaryParticipantProfilePropertyName" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.SerializationMode.IncludeReadOnly))
            {
                if (null != this._dataSourcePrecedenceRule)
                {
                    var __m = new Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.XNodeArray();
                    foreach( var __n in this._dataSourcePrecedenceRule )
                    {
                        AddIf(__n?.ToJson(null, serializationMode) ,__m.Add);
                    }
                    container.Add("dataSourcePrecedenceRules",__m);
                }
            }
            AddIf( null != this._isActivity ? (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonBoolean((bool)this._isActivity) : null, "isActivity" ,container.Add );
            AfterToJson(ref container);
            return container;
        }
    }
}