// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426
{
    using Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.PowerShell;

    /// <summary>The connector mapping definition.</summary>
    [System.ComponentModel.TypeConverter(typeof(ConnectorMappingTypeConverter))]
    public partial class ConnectorMapping
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ConnectorMapping"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal ConnectorMapping(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("MappingProperty"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).MappingProperty = (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingProperties) content.GetValueForProperty("MappingProperty",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).MappingProperty, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ConnectorMappingPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("ConnectorName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).ConnectorName = (string) content.GetValueForProperty("ConnectorName",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).ConnectorName, global::System.Convert.ToString);
            }
            if (content.Contains("ConnectorType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).ConnectorType = (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ConnectorTypes?) content.GetValueForProperty("ConnectorType",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).ConnectorType, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ConnectorTypes.CreateFrom);
            }
            if (content.Contains("Created"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).Created = (global::System.DateTime?) content.GetValueForProperty("Created",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).Created, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("LastModified"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).LastModified = (global::System.DateTime?) content.GetValueForProperty("LastModified",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).LastModified, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("EntityType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).EntityType = (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.EntityTypes) content.GetValueForProperty("EntityType",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).EntityType, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.EntityTypes.CreateFrom);
            }
            if (content.Contains("EntityTypeName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).EntityTypeName = (string) content.GetValueForProperty("EntityTypeName",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).EntityTypeName, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("DisplayName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).DisplayName = (string) content.GetValueForProperty("DisplayName",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).DisplayName, global::System.Convert.ToString);
            }
            if (content.Contains("Description"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).Description = (string) content.GetValueForProperty("Description",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).Description, global::System.Convert.ToString);
            }
            if (content.Contains("DataFormatId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).DataFormatId = (string) content.GetValueForProperty("DataFormatId",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).DataFormatId, global::System.Convert.ToString);
            }
            if (content.Contains("NextRunTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).NextRunTime = (global::System.DateTime?) content.GetValueForProperty("NextRunTime",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).NextRunTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("RunId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).RunId = (string) content.GetValueForProperty("RunId",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).RunId, global::System.Convert.ToString);
            }
            if (content.Contains("State"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).State = (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ConnectorMappingStates?) content.GetValueForProperty("State",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).State, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ConnectorMappingStates.CreateFrom);
            }
            if (content.Contains("TenantId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).TenantId = (string) content.GetValueForProperty("TenantId",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).TenantId, global::System.Convert.ToString);
            }
            if (content.Contains("MappingPropertyErrorManagement"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).MappingPropertyErrorManagement = (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingErrorManagement) content.GetValueForProperty("MappingPropertyErrorManagement",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).MappingPropertyErrorManagement, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ConnectorMappingErrorManagementTypeConverter.ConvertFrom);
            }
            if (content.Contains("MappingPropertyFormat"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).MappingPropertyFormat = (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingFormat) content.GetValueForProperty("MappingPropertyFormat",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).MappingPropertyFormat, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ConnectorMappingFormatTypeConverter.ConvertFrom);
            }
            if (content.Contains("MappingPropertyAvailability"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).MappingPropertyAvailability = (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingAvailability) content.GetValueForProperty("MappingPropertyAvailability",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).MappingPropertyAvailability, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ConnectorMappingAvailabilityTypeConverter.ConvertFrom);
            }
            if (content.Contains("MappingPropertyCompleteOperation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).MappingPropertyCompleteOperation = (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingCompleteOperation) content.GetValueForProperty("MappingPropertyCompleteOperation",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).MappingPropertyCompleteOperation, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ConnectorMappingCompleteOperationTypeConverter.ConvertFrom);
            }
            if (content.Contains("MappingPropertyFolderPath"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).MappingPropertyFolderPath = (string) content.GetValueForProperty("MappingPropertyFolderPath",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).MappingPropertyFolderPath, global::System.Convert.ToString);
            }
            if (content.Contains("MappingPropertyFileFilter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).MappingPropertyFileFilter = (string) content.GetValueForProperty("MappingPropertyFileFilter",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).MappingPropertyFileFilter, global::System.Convert.ToString);
            }
            if (content.Contains("MappingPropertyHasHeader"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).MappingPropertyHasHeader = (bool?) content.GetValueForProperty("MappingPropertyHasHeader",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).MappingPropertyHasHeader, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("MappingPropertyStructure"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).MappingPropertyStructure = (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingStructure[]) content.GetValueForProperty("MappingPropertyStructure",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).MappingPropertyStructure, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingStructure>(__y, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ConnectorMappingStructureTypeConverter.ConvertFrom));
            }
            if (content.Contains("ErrorManagementType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).ErrorManagementType = (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ErrorManagementTypes) content.GetValueForProperty("ErrorManagementType",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).ErrorManagementType, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ErrorManagementTypes.CreateFrom);
            }
            if (content.Contains("ErrorManagementErrorLimit"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).ErrorManagementErrorLimit = (int?) content.GetValueForProperty("ErrorManagementErrorLimit",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).ErrorManagementErrorLimit, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("FormatType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).FormatType = (string) content.GetValueForProperty("FormatType",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).FormatType, global::System.Convert.ToString);
            }
            if (content.Contains("FormatColumnDelimiter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).FormatColumnDelimiter = (string) content.GetValueForProperty("FormatColumnDelimiter",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).FormatColumnDelimiter, global::System.Convert.ToString);
            }
            if (content.Contains("FormatAcceptLanguage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).FormatAcceptLanguage = (string) content.GetValueForProperty("FormatAcceptLanguage",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).FormatAcceptLanguage, global::System.Convert.ToString);
            }
            if (content.Contains("FormatQuoteCharacter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).FormatQuoteCharacter = (string) content.GetValueForProperty("FormatQuoteCharacter",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).FormatQuoteCharacter, global::System.Convert.ToString);
            }
            if (content.Contains("FormatQuoteEscapeCharacter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).FormatQuoteEscapeCharacter = (string) content.GetValueForProperty("FormatQuoteEscapeCharacter",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).FormatQuoteEscapeCharacter, global::System.Convert.ToString);
            }
            if (content.Contains("FormatArraySeparator"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).FormatArraySeparator = (string) content.GetValueForProperty("FormatArraySeparator",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).FormatArraySeparator, global::System.Convert.ToString);
            }
            if (content.Contains("AvailabilityFrequency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).AvailabilityFrequency = (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.FrequencyTypes?) content.GetValueForProperty("AvailabilityFrequency",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).AvailabilityFrequency, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.FrequencyTypes.CreateFrom);
            }
            if (content.Contains("AvailabilityInterval"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).AvailabilityInterval = (int) content.GetValueForProperty("AvailabilityInterval",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).AvailabilityInterval, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("CompleteOperationCompletionOperationType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).CompleteOperationCompletionOperationType = (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.CompletionOperationTypes?) content.GetValueForProperty("CompleteOperationCompletionOperationType",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).CompleteOperationCompletionOperationType, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.CompletionOperationTypes.CreateFrom);
            }
            if (content.Contains("CompleteOperationDestinationFolder"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).CompleteOperationDestinationFolder = (string) content.GetValueForProperty("CompleteOperationDestinationFolder",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).CompleteOperationDestinationFolder, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ConnectorMapping"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal ConnectorMapping(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("MappingProperty"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).MappingProperty = (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingProperties) content.GetValueForProperty("MappingProperty",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).MappingProperty, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ConnectorMappingPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("ConnectorName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).ConnectorName = (string) content.GetValueForProperty("ConnectorName",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).ConnectorName, global::System.Convert.ToString);
            }
            if (content.Contains("ConnectorType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).ConnectorType = (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ConnectorTypes?) content.GetValueForProperty("ConnectorType",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).ConnectorType, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ConnectorTypes.CreateFrom);
            }
            if (content.Contains("Created"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).Created = (global::System.DateTime?) content.GetValueForProperty("Created",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).Created, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("LastModified"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).LastModified = (global::System.DateTime?) content.GetValueForProperty("LastModified",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).LastModified, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("EntityType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).EntityType = (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.EntityTypes) content.GetValueForProperty("EntityType",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).EntityType, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.EntityTypes.CreateFrom);
            }
            if (content.Contains("EntityTypeName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).EntityTypeName = (string) content.GetValueForProperty("EntityTypeName",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).EntityTypeName, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("DisplayName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).DisplayName = (string) content.GetValueForProperty("DisplayName",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).DisplayName, global::System.Convert.ToString);
            }
            if (content.Contains("Description"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).Description = (string) content.GetValueForProperty("Description",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).Description, global::System.Convert.ToString);
            }
            if (content.Contains("DataFormatId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).DataFormatId = (string) content.GetValueForProperty("DataFormatId",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).DataFormatId, global::System.Convert.ToString);
            }
            if (content.Contains("NextRunTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).NextRunTime = (global::System.DateTime?) content.GetValueForProperty("NextRunTime",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).NextRunTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("RunId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).RunId = (string) content.GetValueForProperty("RunId",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).RunId, global::System.Convert.ToString);
            }
            if (content.Contains("State"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).State = (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ConnectorMappingStates?) content.GetValueForProperty("State",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).State, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ConnectorMappingStates.CreateFrom);
            }
            if (content.Contains("TenantId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).TenantId = (string) content.GetValueForProperty("TenantId",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).TenantId, global::System.Convert.ToString);
            }
            if (content.Contains("MappingPropertyErrorManagement"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).MappingPropertyErrorManagement = (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingErrorManagement) content.GetValueForProperty("MappingPropertyErrorManagement",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).MappingPropertyErrorManagement, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ConnectorMappingErrorManagementTypeConverter.ConvertFrom);
            }
            if (content.Contains("MappingPropertyFormat"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).MappingPropertyFormat = (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingFormat) content.GetValueForProperty("MappingPropertyFormat",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).MappingPropertyFormat, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ConnectorMappingFormatTypeConverter.ConvertFrom);
            }
            if (content.Contains("MappingPropertyAvailability"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).MappingPropertyAvailability = (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingAvailability) content.GetValueForProperty("MappingPropertyAvailability",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).MappingPropertyAvailability, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ConnectorMappingAvailabilityTypeConverter.ConvertFrom);
            }
            if (content.Contains("MappingPropertyCompleteOperation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).MappingPropertyCompleteOperation = (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingCompleteOperation) content.GetValueForProperty("MappingPropertyCompleteOperation",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).MappingPropertyCompleteOperation, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ConnectorMappingCompleteOperationTypeConverter.ConvertFrom);
            }
            if (content.Contains("MappingPropertyFolderPath"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).MappingPropertyFolderPath = (string) content.GetValueForProperty("MappingPropertyFolderPath",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).MappingPropertyFolderPath, global::System.Convert.ToString);
            }
            if (content.Contains("MappingPropertyFileFilter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).MappingPropertyFileFilter = (string) content.GetValueForProperty("MappingPropertyFileFilter",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).MappingPropertyFileFilter, global::System.Convert.ToString);
            }
            if (content.Contains("MappingPropertyHasHeader"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).MappingPropertyHasHeader = (bool?) content.GetValueForProperty("MappingPropertyHasHeader",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).MappingPropertyHasHeader, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("MappingPropertyStructure"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).MappingPropertyStructure = (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingStructure[]) content.GetValueForProperty("MappingPropertyStructure",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).MappingPropertyStructure, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingStructure>(__y, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ConnectorMappingStructureTypeConverter.ConvertFrom));
            }
            if (content.Contains("ErrorManagementType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).ErrorManagementType = (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ErrorManagementTypes) content.GetValueForProperty("ErrorManagementType",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).ErrorManagementType, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ErrorManagementTypes.CreateFrom);
            }
            if (content.Contains("ErrorManagementErrorLimit"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).ErrorManagementErrorLimit = (int?) content.GetValueForProperty("ErrorManagementErrorLimit",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).ErrorManagementErrorLimit, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("FormatType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).FormatType = (string) content.GetValueForProperty("FormatType",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).FormatType, global::System.Convert.ToString);
            }
            if (content.Contains("FormatColumnDelimiter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).FormatColumnDelimiter = (string) content.GetValueForProperty("FormatColumnDelimiter",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).FormatColumnDelimiter, global::System.Convert.ToString);
            }
            if (content.Contains("FormatAcceptLanguage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).FormatAcceptLanguage = (string) content.GetValueForProperty("FormatAcceptLanguage",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).FormatAcceptLanguage, global::System.Convert.ToString);
            }
            if (content.Contains("FormatQuoteCharacter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).FormatQuoteCharacter = (string) content.GetValueForProperty("FormatQuoteCharacter",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).FormatQuoteCharacter, global::System.Convert.ToString);
            }
            if (content.Contains("FormatQuoteEscapeCharacter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).FormatQuoteEscapeCharacter = (string) content.GetValueForProperty("FormatQuoteEscapeCharacter",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).FormatQuoteEscapeCharacter, global::System.Convert.ToString);
            }
            if (content.Contains("FormatArraySeparator"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).FormatArraySeparator = (string) content.GetValueForProperty("FormatArraySeparator",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).FormatArraySeparator, global::System.Convert.ToString);
            }
            if (content.Contains("AvailabilityFrequency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).AvailabilityFrequency = (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.FrequencyTypes?) content.GetValueForProperty("AvailabilityFrequency",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).AvailabilityFrequency, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.FrequencyTypes.CreateFrom);
            }
            if (content.Contains("AvailabilityInterval"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).AvailabilityInterval = (int) content.GetValueForProperty("AvailabilityInterval",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).AvailabilityInterval, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("CompleteOperationCompletionOperationType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).CompleteOperationCompletionOperationType = (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.CompletionOperationTypes?) content.GetValueForProperty("CompleteOperationCompletionOperationType",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).CompleteOperationCompletionOperationType, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.CompletionOperationTypes.CreateFrom);
            }
            if (content.Contains("CompleteOperationDestinationFolder"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).CompleteOperationDestinationFolder = (string) content.GetValueForProperty("CompleteOperationDestinationFolder",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)this).CompleteOperationDestinationFolder, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ConnectorMapping"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMapping" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMapping DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new ConnectorMapping(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ConnectorMapping"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMapping" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMapping DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new ConnectorMapping(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="ConnectorMapping" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="className" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMapping FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// The connector mapping definition.
    [System.ComponentModel.TypeConverter(typeof(ConnectorMappingTypeConverter))]
    public partial interface IConnectorMapping

    {

    }
}