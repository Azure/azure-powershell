// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426
{
    using static Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Extensions;

    /// <summary>The prediction model status.</summary>
    public partial class PredictionModelStatus :
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IPredictionModelStatus,
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IPredictionModelStatusInternal
    {

        /// <summary>Backing field for <see cref="Message" /> property.</summary>
        private string _message;

        /// <summary>The model status message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        public string Message { get => this._message; }

        /// <summary>Internal Acessors for Message</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IPredictionModelStatusInternal.Message { get => this._message; set { {_message = value;} } }

        /// <summary>Internal Acessors for ModelVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IPredictionModelStatusInternal.ModelVersion { get => this._modelVersion; set { {_modelVersion = value;} } }

        /// <summary>Internal Acessors for PredictionGuidId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IPredictionModelStatusInternal.PredictionGuidId { get => this._predictionGuidId; set { {_predictionGuidId = value;} } }

        /// <summary>Internal Acessors for PredictionName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IPredictionModelStatusInternal.PredictionName { get => this._predictionName; set { {_predictionName = value;} } }

        /// <summary>Internal Acessors for SignalsUsed</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IPredictionModelStatusInternal.SignalsUsed { get => this._signalsUsed; set { {_signalsUsed = value;} } }

        /// <summary>Internal Acessors for TenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IPredictionModelStatusInternal.TenantId { get => this._tenantId; set { {_tenantId = value;} } }

        /// <summary>Internal Acessors for TestSetCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IPredictionModelStatusInternal.TestSetCount { get => this._testSetCount; set { {_testSetCount = value;} } }

        /// <summary>Internal Acessors for TrainingAccuracy</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IPredictionModelStatusInternal.TrainingAccuracy { get => this._trainingAccuracy; set { {_trainingAccuracy = value;} } }

        /// <summary>Internal Acessors for TrainingSetCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IPredictionModelStatusInternal.TrainingSetCount { get => this._trainingSetCount; set { {_trainingSetCount = value;} } }

        /// <summary>Internal Acessors for ValidationSetCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IPredictionModelStatusInternal.ValidationSetCount { get => this._validationSetCount; set { {_validationSetCount = value;} } }

        /// <summary>Backing field for <see cref="ModelVersion" /> property.</summary>
        private string _modelVersion;

        /// <summary>Version of the model.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        public string ModelVersion { get => this._modelVersion; }

        /// <summary>Backing field for <see cref="PredictionGuidId" /> property.</summary>
        private string _predictionGuidId;

        /// <summary>The prediction GUID ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        public string PredictionGuidId { get => this._predictionGuidId; }

        /// <summary>Backing field for <see cref="PredictionName" /> property.</summary>
        private string _predictionName;

        /// <summary>The prediction name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        public string PredictionName { get => this._predictionName; }

        /// <summary>Backing field for <see cref="SignalsUsed" /> property.</summary>
        private int? _signalsUsed;

        /// <summary>The signals used.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        public int? SignalsUsed { get => this._signalsUsed; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.PredictionModelLifeCycle _status;

        /// <summary>
        /// Prediction model life cycle. When prediction is in PendingModelConfirmation status, it is allowed to update the status
        /// to PendingFeaturing or Active through API.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.PredictionModelLifeCycle Status { get => this._status; set => this._status = value; }

        /// <summary>Backing field for <see cref="TenantId" /> property.</summary>
        private string _tenantId;

        /// <summary>The hub name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        public string TenantId { get => this._tenantId; }

        /// <summary>Backing field for <see cref="TestSetCount" /> property.</summary>
        private int? _testSetCount;

        /// <summary>Count of the test set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        public int? TestSetCount { get => this._testSetCount; }

        /// <summary>Backing field for <see cref="TrainingAccuracy" /> property.</summary>
        private decimal? _trainingAccuracy;

        /// <summary>The training accuracy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        public decimal? TrainingAccuracy { get => this._trainingAccuracy; }

        /// <summary>Backing field for <see cref="TrainingSetCount" /> property.</summary>
        private int? _trainingSetCount;

        /// <summary>Count of the training set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        public int? TrainingSetCount { get => this._trainingSetCount; }

        /// <summary>Backing field for <see cref="ValidationSetCount" /> property.</summary>
        private int? _validationSetCount;

        /// <summary>Count of the validation set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        public int? ValidationSetCount { get => this._validationSetCount; }

        /// <summary>Creates an new <see cref="PredictionModelStatus" /> instance.</summary>
        public PredictionModelStatus()
        {

        }
    }
    /// The prediction model status.
    public partial interface IPredictionModelStatus :
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.IJsonSerializable
    {
        /// <summary>The model status message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The model status message.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string Message { get;  }
        /// <summary>Version of the model.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Version of the model.",
        SerializedName = @"modelVersion",
        PossibleTypes = new [] { typeof(string) })]
        string ModelVersion { get;  }
        /// <summary>The prediction GUID ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The prediction GUID ID.",
        SerializedName = @"predictionGuidId",
        PossibleTypes = new [] { typeof(string) })]
        string PredictionGuidId { get;  }
        /// <summary>The prediction name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The prediction name.",
        SerializedName = @"predictionName",
        PossibleTypes = new [] { typeof(string) })]
        string PredictionName { get;  }
        /// <summary>The signals used.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The signals used.",
        SerializedName = @"signalsUsed",
        PossibleTypes = new [] { typeof(int) })]
        int? SignalsUsed { get;  }
        /// <summary>
        /// Prediction model life cycle. When prediction is in PendingModelConfirmation status, it is allowed to update the status
        /// to PendingFeaturing or Active through API.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Prediction model life cycle.  When prediction is in PendingModelConfirmation status, it is allowed to update the status to PendingFeaturing or Active through API.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.PredictionModelLifeCycle) })]
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.PredictionModelLifeCycle Status { get; set; }
        /// <summary>The hub name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The hub name.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string TenantId { get;  }
        /// <summary>Count of the test set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Count of the test set.",
        SerializedName = @"testSetCount",
        PossibleTypes = new [] { typeof(int) })]
        int? TestSetCount { get;  }
        /// <summary>The training accuracy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The training accuracy.",
        SerializedName = @"trainingAccuracy",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? TrainingAccuracy { get;  }
        /// <summary>Count of the training set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Count of the training set.",
        SerializedName = @"trainingSetCount",
        PossibleTypes = new [] { typeof(int) })]
        int? TrainingSetCount { get;  }
        /// <summary>Count of the validation set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Count of the validation set.",
        SerializedName = @"validationSetCount",
        PossibleTypes = new [] { typeof(int) })]
        int? ValidationSetCount { get;  }

    }
    /// The prediction model status.
    internal partial interface IPredictionModelStatusInternal

    {
        /// <summary>The model status message.</summary>
        string Message { get; set; }
        /// <summary>Version of the model.</summary>
        string ModelVersion { get; set; }
        /// <summary>The prediction GUID ID.</summary>
        string PredictionGuidId { get; set; }
        /// <summary>The prediction name.</summary>
        string PredictionName { get; set; }
        /// <summary>The signals used.</summary>
        int? SignalsUsed { get; set; }
        /// <summary>
        /// Prediction model life cycle. When prediction is in PendingModelConfirmation status, it is allowed to update the status
        /// to PendingFeaturing or Active through API.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.PredictionModelLifeCycle Status { get; set; }
        /// <summary>The hub name.</summary>
        string TenantId { get; set; }
        /// <summary>Count of the test set.</summary>
        int? TestSetCount { get; set; }
        /// <summary>The training accuracy.</summary>
        decimal? TrainingAccuracy { get; set; }
        /// <summary>Count of the training set.</summary>
        int? TrainingSetCount { get; set; }
        /// <summary>Count of the validation set.</summary>
        int? ValidationSetCount { get; set; }

    }
}