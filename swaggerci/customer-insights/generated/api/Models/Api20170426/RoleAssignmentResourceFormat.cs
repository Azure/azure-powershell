// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426
{
    using static Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Extensions;

    /// <summary>The Role Assignment resource format.</summary>
    public partial class RoleAssignmentResourceFormat :
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentResourceFormat,
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentResourceFormatInternal,
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProxyResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProxyResource __proxyResource = new Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ProxyResource();

        /// <summary>The name of the metadata object.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string AssignmentName { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).AssignmentName; }

        /// <summary>The elements included in the set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string[] ConflationPolicyElement { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).ConflationPolicyElement; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).ConflationPolicyElement = value ?? null /* arrayOf */; }

        /// <summary>
        /// The elements that are not included in the set, in case elements contains '*' indicating 'all'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string[] ConflationPolicyException { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).ConflationPolicyException; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).ConflationPolicyException = value ?? null /* arrayOf */; }

        /// <summary>The elements included in the set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string[] ConnectorElement { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).ConnectorElement; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).ConnectorElement = value ?? null /* arrayOf */; }

        /// <summary>
        /// The elements that are not included in the set, in case elements contains '*' indicating 'all'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string[] ConnectorException { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).ConnectorException; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).ConnectorException = value ?? null /* arrayOf */; }

        /// <summary>Localized description for the metadata.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentDescription Description { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).Description = value ?? null /* model class */; }

        /// <summary>Localized display names for the metadata.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentDisplayName DisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).DisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).DisplayName = value ?? null /* model class */; }

        /// <summary>Resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProxyResourceInternal)__proxyResource).Id; }

        /// <summary>The elements included in the set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string[] InteractionElement { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).InteractionElement; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).InteractionElement = value ?? null /* arrayOf */; }

        /// <summary>
        /// The elements that are not included in the set, in case elements contains '*' indicating 'all'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string[] InteractionException { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).InteractionException; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).InteractionException = value ?? null /* arrayOf */; }

        /// <summary>The elements included in the set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string[] KpiElement { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).KpiElement; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).KpiElement = value ?? null /* arrayOf */; }

        /// <summary>
        /// The elements that are not included in the set, in case elements contains '*' indicating 'all'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string[] KpiException { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).KpiException; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).KpiException = value ?? null /* arrayOf */; }

        /// <summary>The elements included in the set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string[] LinkElement { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).LinkElement; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).LinkElement = value ?? null /* arrayOf */; }

        /// <summary>
        /// The elements that are not included in the set, in case elements contains '*' indicating 'all'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string[] LinkException { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).LinkException; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).LinkException = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProxyResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProxyResourceInternal)__proxyResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProxyResourceInternal)__proxyResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProxyResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProxyResourceInternal)__proxyResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProxyResourceInternal)__proxyResource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProxyResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProxyResourceInternal)__proxyResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProxyResourceInternal)__proxyResource).Type = value; }

        /// <summary>Internal Acessors for AssignmentName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentResourceFormatInternal.AssignmentName { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).AssignmentName; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).AssignmentName = value; }

        /// <summary>Internal Acessors for ConflationPolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IResourceSetDescription Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentResourceFormatInternal.ConflationPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).ConflationPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).ConflationPolicy = value; }

        /// <summary>Internal Acessors for Connector</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IResourceSetDescription Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentResourceFormatInternal.Connector { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).Connector; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).Connector = value; }

        /// <summary>Internal Acessors for Interaction</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IResourceSetDescription Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentResourceFormatInternal.Interaction { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).Interaction; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).Interaction = value; }

        /// <summary>Internal Acessors for Kpi</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IResourceSetDescription Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentResourceFormatInternal.Kpi { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).Kpi; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).Kpi = value; }

        /// <summary>Internal Acessors for Link</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IResourceSetDescription Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentResourceFormatInternal.Link { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).Link; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).Link = value; }

        /// <summary>Internal Acessors for Profile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IResourceSetDescription Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentResourceFormatInternal.Profile { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).Profile; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).Profile = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignment Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentResourceFormatInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.RoleAssignment()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ProvisioningStates? Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentResourceFormatInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for Relationship</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IResourceSetDescription Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentResourceFormatInternal.Relationship { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).Relationship; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).Relationship = value; }

        /// <summary>Internal Acessors for RelationshipLink</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IResourceSetDescription Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentResourceFormatInternal.RelationshipLink { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).RelationshipLink; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).RelationshipLink = value; }

        /// <summary>Internal Acessors for RoleAssignment</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IResourceSetDescription Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentResourceFormatInternal.RoleAssignment { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).RoleAssignments; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).RoleAssignments = value; }

        /// <summary>Internal Acessors for SasPolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IResourceSetDescription Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentResourceFormatInternal.SasPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).SasPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).SasPolicy = value; }

        /// <summary>Internal Acessors for Segment</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IResourceSetDescription Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentResourceFormatInternal.Segment { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).Segment; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).Segment = value; }

        /// <summary>Internal Acessors for TenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentResourceFormatInternal.TenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).TenantId = value; }

        /// <summary>Internal Acessors for View</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IResourceSetDescription Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentResourceFormatInternal.View { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).View; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).View = value; }

        /// <summary>Internal Acessors for WidgetType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IResourceSetDescription Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentResourceFormatInternal.WidgetType { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).WidgetType; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).WidgetType = value; }

        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProxyResourceInternal)__proxyResource).Name; }

        /// <summary>The principals being assigned to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IAssignmentPrincipal[] Principal { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).Principal; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).Principal = value ?? null /* arrayOf */; }

        /// <summary>The elements included in the set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string[] ProfileElement { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).ProfileElement; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).ProfileElement = value ?? null /* arrayOf */; }

        /// <summary>
        /// The elements that are not included in the set, in case elements contains '*' indicating 'all'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string[] ProfileException { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).ProfileException; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).ProfileException = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignment _property;

        /// <summary>The Role Assignment definition.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignment Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.RoleAssignment()); set => this._property = value; }

        /// <summary>Provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ProvisioningStates? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).ProvisioningState; }

        /// <summary>The elements included in the set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string[] RelationshipElement { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).RelationshipElement; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).RelationshipElement = value ?? null /* arrayOf */; }

        /// <summary>
        /// The elements that are not included in the set, in case elements contains '*' indicating 'all'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string[] RelationshipException { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).RelationshipException; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).RelationshipException = value ?? null /* arrayOf */; }

        /// <summary>The elements included in the set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string[] RelationshipLinkElement { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).RelationshipLinkElement; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).RelationshipLinkElement = value ?? null /* arrayOf */; }

        /// <summary>
        /// The elements that are not included in the set, in case elements contains '*' indicating 'all'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string[] RelationshipLinkException { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).RelationshipLinkException; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).RelationshipLinkException = value ?? null /* arrayOf */; }

        /// <summary>Type of roles.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.RoleTypes? Role { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).Role; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).Role = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.RoleTypes)""); }

        /// <summary>The elements included in the set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string[] RoleAssignmentElement { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).Element; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).Element = value ?? null /* arrayOf */; }

        /// <summary>
        /// The elements that are not included in the set, in case elements contains '*' indicating 'all'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string[] RoleAssignmentException { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).Exception; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).Exception = value ?? null /* arrayOf */; }

        /// <summary>The elements included in the set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string[] SasPolicyElement { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).SasPolicyElement; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).SasPolicyElement = value ?? null /* arrayOf */; }

        /// <summary>
        /// The elements that are not included in the set, in case elements contains '*' indicating 'all'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string[] SasPolicyException { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).SasPolicyException; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).SasPolicyException = value ?? null /* arrayOf */; }

        /// <summary>The elements included in the set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string[] SegmentElement { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).SegmentElement; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).SegmentElement = value ?? null /* arrayOf */; }

        /// <summary>
        /// The elements that are not included in the set, in case elements contains '*' indicating 'all'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string[] SegmentException { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).SegmentException; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).SegmentException = value ?? null /* arrayOf */; }

        /// <summary>The hub name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string TenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).TenantId; }

        /// <summary>Resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProxyResourceInternal)__proxyResource).Type; }

        /// <summary>The elements included in the set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string[] ViewElement { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).ViewElement; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).ViewElement = value ?? null /* arrayOf */; }

        /// <summary>
        /// The elements that are not included in the set, in case elements contains '*' indicating 'all'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string[] ViewException { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).ViewException; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).ViewException = value ?? null /* arrayOf */; }

        /// <summary>The elements included in the set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string[] WidgetTypeElement { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).WidgetTypeElement; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).WidgetTypeElement = value ?? null /* arrayOf */; }

        /// <summary>
        /// The elements that are not included in the set, in case elements contains '*' indicating 'all'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string[] WidgetTypeException { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).WidgetTypeException; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentInternal)Property).WidgetTypeException = value ?? null /* arrayOf */; }

        /// <summary>Creates an new <see cref="RoleAssignmentResourceFormat" /> instance.</summary>
        public RoleAssignmentResourceFormat()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__proxyResource), __proxyResource);
            await eventListener.AssertObjectIsValid(nameof(__proxyResource), __proxyResource);
        }
    }
    /// The Role Assignment resource format.
    public partial interface IRoleAssignmentResourceFormat :
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProxyResource
    {
        /// <summary>The name of the metadata object.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of the metadata object.",
        SerializedName = @"assignmentName",
        PossibleTypes = new [] { typeof(string) })]
        string AssignmentName { get;  }
        /// <summary>The elements included in the set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The elements included in the set.",
        SerializedName = @"elements",
        PossibleTypes = new [] { typeof(string) })]
        string[] ConflationPolicyElement { get; set; }
        /// <summary>
        /// The elements that are not included in the set, in case elements contains '*' indicating 'all'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The elements that are not included in the set, in case elements contains '*' indicating 'all'.",
        SerializedName = @"exceptions",
        PossibleTypes = new [] { typeof(string) })]
        string[] ConflationPolicyException { get; set; }
        /// <summary>The elements included in the set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The elements included in the set.",
        SerializedName = @"elements",
        PossibleTypes = new [] { typeof(string) })]
        string[] ConnectorElement { get; set; }
        /// <summary>
        /// The elements that are not included in the set, in case elements contains '*' indicating 'all'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The elements that are not included in the set, in case elements contains '*' indicating 'all'.",
        SerializedName = @"exceptions",
        PossibleTypes = new [] { typeof(string) })]
        string[] ConnectorException { get; set; }
        /// <summary>Localized description for the metadata.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Localized description for the metadata.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentDescription) })]
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentDescription Description { get; set; }
        /// <summary>Localized display names for the metadata.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Localized display names for the metadata.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentDisplayName) })]
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentDisplayName DisplayName { get; set; }
        /// <summary>The elements included in the set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The elements included in the set.",
        SerializedName = @"elements",
        PossibleTypes = new [] { typeof(string) })]
        string[] InteractionElement { get; set; }
        /// <summary>
        /// The elements that are not included in the set, in case elements contains '*' indicating 'all'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The elements that are not included in the set, in case elements contains '*' indicating 'all'.",
        SerializedName = @"exceptions",
        PossibleTypes = new [] { typeof(string) })]
        string[] InteractionException { get; set; }
        /// <summary>The elements included in the set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The elements included in the set.",
        SerializedName = @"elements",
        PossibleTypes = new [] { typeof(string) })]
        string[] KpiElement { get; set; }
        /// <summary>
        /// The elements that are not included in the set, in case elements contains '*' indicating 'all'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The elements that are not included in the set, in case elements contains '*' indicating 'all'.",
        SerializedName = @"exceptions",
        PossibleTypes = new [] { typeof(string) })]
        string[] KpiException { get; set; }
        /// <summary>The elements included in the set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The elements included in the set.",
        SerializedName = @"elements",
        PossibleTypes = new [] { typeof(string) })]
        string[] LinkElement { get; set; }
        /// <summary>
        /// The elements that are not included in the set, in case elements contains '*' indicating 'all'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The elements that are not included in the set, in case elements contains '*' indicating 'all'.",
        SerializedName = @"exceptions",
        PossibleTypes = new [] { typeof(string) })]
        string[] LinkException { get; set; }
        /// <summary>The principals being assigned to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The principals being assigned to.",
        SerializedName = @"principals",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IAssignmentPrincipal) })]
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IAssignmentPrincipal[] Principal { get; set; }
        /// <summary>The elements included in the set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The elements included in the set.",
        SerializedName = @"elements",
        PossibleTypes = new [] { typeof(string) })]
        string[] ProfileElement { get; set; }
        /// <summary>
        /// The elements that are not included in the set, in case elements contains '*' indicating 'all'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The elements that are not included in the set, in case elements contains '*' indicating 'all'.",
        SerializedName = @"exceptions",
        PossibleTypes = new [] { typeof(string) })]
        string[] ProfileException { get; set; }
        /// <summary>Provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Provisioning state.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ProvisioningStates) })]
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ProvisioningStates? ProvisioningState { get;  }
        /// <summary>The elements included in the set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The elements included in the set.",
        SerializedName = @"elements",
        PossibleTypes = new [] { typeof(string) })]
        string[] RelationshipElement { get; set; }
        /// <summary>
        /// The elements that are not included in the set, in case elements contains '*' indicating 'all'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The elements that are not included in the set, in case elements contains '*' indicating 'all'.",
        SerializedName = @"exceptions",
        PossibleTypes = new [] { typeof(string) })]
        string[] RelationshipException { get; set; }
        /// <summary>The elements included in the set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The elements included in the set.",
        SerializedName = @"elements",
        PossibleTypes = new [] { typeof(string) })]
        string[] RelationshipLinkElement { get; set; }
        /// <summary>
        /// The elements that are not included in the set, in case elements contains '*' indicating 'all'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The elements that are not included in the set, in case elements contains '*' indicating 'all'.",
        SerializedName = @"exceptions",
        PossibleTypes = new [] { typeof(string) })]
        string[] RelationshipLinkException { get; set; }
        /// <summary>Type of roles.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of roles.",
        SerializedName = @"role",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.RoleTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.RoleTypes? Role { get; set; }
        /// <summary>The elements included in the set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The elements included in the set.",
        SerializedName = @"elements",
        PossibleTypes = new [] { typeof(string) })]
        string[] RoleAssignmentElement { get; set; }
        /// <summary>
        /// The elements that are not included in the set, in case elements contains '*' indicating 'all'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The elements that are not included in the set, in case elements contains '*' indicating 'all'.",
        SerializedName = @"exceptions",
        PossibleTypes = new [] { typeof(string) })]
        string[] RoleAssignmentException { get; set; }
        /// <summary>The elements included in the set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The elements included in the set.",
        SerializedName = @"elements",
        PossibleTypes = new [] { typeof(string) })]
        string[] SasPolicyElement { get; set; }
        /// <summary>
        /// The elements that are not included in the set, in case elements contains '*' indicating 'all'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The elements that are not included in the set, in case elements contains '*' indicating 'all'.",
        SerializedName = @"exceptions",
        PossibleTypes = new [] { typeof(string) })]
        string[] SasPolicyException { get; set; }
        /// <summary>The elements included in the set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The elements included in the set.",
        SerializedName = @"elements",
        PossibleTypes = new [] { typeof(string) })]
        string[] SegmentElement { get; set; }
        /// <summary>
        /// The elements that are not included in the set, in case elements contains '*' indicating 'all'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The elements that are not included in the set, in case elements contains '*' indicating 'all'.",
        SerializedName = @"exceptions",
        PossibleTypes = new [] { typeof(string) })]
        string[] SegmentException { get; set; }
        /// <summary>The hub name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The hub name.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string TenantId { get;  }
        /// <summary>The elements included in the set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The elements included in the set.",
        SerializedName = @"elements",
        PossibleTypes = new [] { typeof(string) })]
        string[] ViewElement { get; set; }
        /// <summary>
        /// The elements that are not included in the set, in case elements contains '*' indicating 'all'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The elements that are not included in the set, in case elements contains '*' indicating 'all'.",
        SerializedName = @"exceptions",
        PossibleTypes = new [] { typeof(string) })]
        string[] ViewException { get; set; }
        /// <summary>The elements included in the set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The elements included in the set.",
        SerializedName = @"elements",
        PossibleTypes = new [] { typeof(string) })]
        string[] WidgetTypeElement { get; set; }
        /// <summary>
        /// The elements that are not included in the set, in case elements contains '*' indicating 'all'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The elements that are not included in the set, in case elements contains '*' indicating 'all'.",
        SerializedName = @"exceptions",
        PossibleTypes = new [] { typeof(string) })]
        string[] WidgetTypeException { get; set; }

    }
    /// The Role Assignment resource format.
    internal partial interface IRoleAssignmentResourceFormatInternal :
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProxyResourceInternal
    {
        /// <summary>The name of the metadata object.</summary>
        string AssignmentName { get; set; }
        /// <summary>Widget types set for the assignment.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IResourceSetDescription ConflationPolicy { get; set; }
        /// <summary>The elements included in the set.</summary>
        string[] ConflationPolicyElement { get; set; }
        /// <summary>
        /// The elements that are not included in the set, in case elements contains '*' indicating 'all'.
        /// </summary>
        string[] ConflationPolicyException { get; set; }
        /// <summary>Connectors set for the assignment.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IResourceSetDescription Connector { get; set; }
        /// <summary>The elements included in the set.</summary>
        string[] ConnectorElement { get; set; }
        /// <summary>
        /// The elements that are not included in the set, in case elements contains '*' indicating 'all'.
        /// </summary>
        string[] ConnectorException { get; set; }
        /// <summary>Localized description for the metadata.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentDescription Description { get; set; }
        /// <summary>Localized display names for the metadata.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignmentDisplayName DisplayName { get; set; }
        /// <summary>Interactions set for the assignment.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IResourceSetDescription Interaction { get; set; }
        /// <summary>The elements included in the set.</summary>
        string[] InteractionElement { get; set; }
        /// <summary>
        /// The elements that are not included in the set, in case elements contains '*' indicating 'all'.
        /// </summary>
        string[] InteractionException { get; set; }
        /// <summary>Kpis set for the assignment.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IResourceSetDescription Kpi { get; set; }
        /// <summary>The elements included in the set.</summary>
        string[] KpiElement { get; set; }
        /// <summary>
        /// The elements that are not included in the set, in case elements contains '*' indicating 'all'.
        /// </summary>
        string[] KpiException { get; set; }
        /// <summary>Links set for the assignment.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IResourceSetDescription Link { get; set; }
        /// <summary>The elements included in the set.</summary>
        string[] LinkElement { get; set; }
        /// <summary>
        /// The elements that are not included in the set, in case elements contains '*' indicating 'all'.
        /// </summary>
        string[] LinkException { get; set; }
        /// <summary>The principals being assigned to.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IAssignmentPrincipal[] Principal { get; set; }
        /// <summary>Profiles set for the assignment.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IResourceSetDescription Profile { get; set; }
        /// <summary>The elements included in the set.</summary>
        string[] ProfileElement { get; set; }
        /// <summary>
        /// The elements that are not included in the set, in case elements contains '*' indicating 'all'.
        /// </summary>
        string[] ProfileException { get; set; }
        /// <summary>The Role Assignment definition.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignment Property { get; set; }
        /// <summary>Provisioning state.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ProvisioningStates? ProvisioningState { get; set; }
        /// <summary>The Role assignments set for the relationships.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IResourceSetDescription Relationship { get; set; }
        /// <summary>The elements included in the set.</summary>
        string[] RelationshipElement { get; set; }
        /// <summary>
        /// The elements that are not included in the set, in case elements contains '*' indicating 'all'.
        /// </summary>
        string[] RelationshipException { get; set; }
        /// <summary>The Role assignments set for the relationship links.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IResourceSetDescription RelationshipLink { get; set; }
        /// <summary>The elements included in the set.</summary>
        string[] RelationshipLinkElement { get; set; }
        /// <summary>
        /// The elements that are not included in the set, in case elements contains '*' indicating 'all'.
        /// </summary>
        string[] RelationshipLinkException { get; set; }
        /// <summary>Type of roles.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.RoleTypes? Role { get; set; }
        /// <summary>The Role assignments set for the assignment.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IResourceSetDescription RoleAssignment { get; set; }
        /// <summary>The elements included in the set.</summary>
        string[] RoleAssignmentElement { get; set; }
        /// <summary>
        /// The elements that are not included in the set, in case elements contains '*' indicating 'all'.
        /// </summary>
        string[] RoleAssignmentException { get; set; }
        /// <summary>Sas Policies set for the assignment.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IResourceSetDescription SasPolicy { get; set; }
        /// <summary>The elements included in the set.</summary>
        string[] SasPolicyElement { get; set; }
        /// <summary>
        /// The elements that are not included in the set, in case elements contains '*' indicating 'all'.
        /// </summary>
        string[] SasPolicyException { get; set; }
        /// <summary>The Role assignments set for the assignment.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IResourceSetDescription Segment { get; set; }
        /// <summary>The elements included in the set.</summary>
        string[] SegmentElement { get; set; }
        /// <summary>
        /// The elements that are not included in the set, in case elements contains '*' indicating 'all'.
        /// </summary>
        string[] SegmentException { get; set; }
        /// <summary>The hub name.</summary>
        string TenantId { get; set; }
        /// <summary>Views set for the assignment.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IResourceSetDescription View { get; set; }
        /// <summary>The elements included in the set.</summary>
        string[] ViewElement { get; set; }
        /// <summary>
        /// The elements that are not included in the set, in case elements contains '*' indicating 'all'.
        /// </summary>
        string[] ViewException { get; set; }
        /// <summary>Widget types set for the assignment.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IResourceSetDescription WidgetType { get; set; }
        /// <summary>The elements included in the set.</summary>
        string[] WidgetTypeElement { get; set; }
        /// <summary>
        /// The elements that are not included in the set, in case elements contains '*' indicating 'all'.
        /// </summary>
        string[] WidgetTypeException { get; set; }

    }
}