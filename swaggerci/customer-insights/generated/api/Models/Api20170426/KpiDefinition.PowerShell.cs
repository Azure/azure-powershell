// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426
{
    using Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.PowerShell;

    /// <summary>Defines the KPI Threshold limits.</summary>
    [System.ComponentModel.TypeConverter(typeof(KpiDefinitionTypeConverter))]
    public partial class KpiDefinition
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.KpiDefinition"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinition" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinition DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new KpiDefinition(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.KpiDefinition"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinition" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinition DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new KpiDefinition(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="KpiDefinition" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="className" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinition FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.KpiDefinition"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal KpiDefinition(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("ThresHold"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).ThresHold = (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiThresholds) content.GetValueForProperty("ThresHold",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).ThresHold, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.KpiThresholdsTypeConverter.ConvertFrom);
            }
            if (content.Contains("EntityType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).EntityType = (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.EntityTypes) content.GetValueForProperty("EntityType",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).EntityType, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.EntityTypes.CreateFrom);
            }
            if (content.Contains("EntityTypeName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).EntityTypeName = (string) content.GetValueForProperty("EntityTypeName",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).EntityTypeName, global::System.Convert.ToString);
            }
            if (content.Contains("TenantId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).TenantId = (string) content.GetValueForProperty("TenantId",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).TenantId, global::System.Convert.ToString);
            }
            if (content.Contains("KpiName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).KpiName = (string) content.GetValueForProperty("KpiName",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).KpiName, global::System.Convert.ToString);
            }
            if (content.Contains("DisplayName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).DisplayName = (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionDisplayName) content.GetValueForProperty("DisplayName",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).DisplayName, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.KpiDefinitionDisplayNameTypeConverter.ConvertFrom);
            }
            if (content.Contains("Description"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).Description = (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionDescription) content.GetValueForProperty("Description",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).Description, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.KpiDefinitionDescriptionTypeConverter.ConvertFrom);
            }
            if (content.Contains("CalculationWindow"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).CalculationWindow = (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.CalculationWindowTypes) content.GetValueForProperty("CalculationWindow",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).CalculationWindow, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.CalculationWindowTypes.CreateFrom);
            }
            if (content.Contains("CalculationWindowFieldName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).CalculationWindowFieldName = (string) content.GetValueForProperty("CalculationWindowFieldName",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).CalculationWindowFieldName, global::System.Convert.ToString);
            }
            if (content.Contains("Function"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).Function = (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.KpiFunctions) content.GetValueForProperty("Function",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).Function, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.KpiFunctions.CreateFrom);
            }
            if (content.Contains("Expression"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).Expression = (string) content.GetValueForProperty("Expression",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).Expression, global::System.Convert.ToString);
            }
            if (content.Contains("Unit"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).Unit = (string) content.GetValueForProperty("Unit",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).Unit, global::System.Convert.ToString);
            }
            if (content.Contains("Filter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).Filter = (string) content.GetValueForProperty("Filter",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).Filter, global::System.Convert.ToString);
            }
            if (content.Contains("GroupBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).GroupBy = (string[]) content.GetValueForProperty("GroupBy",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).GroupBy, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("GroupByMetadata"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).GroupByMetadata = (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiGroupByMetadata[]) content.GetValueForProperty("GroupByMetadata",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).GroupByMetadata, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiGroupByMetadata>(__y, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.KpiGroupByMetadataTypeConverter.ConvertFrom));
            }
            if (content.Contains("ParticipantProfilesMetadata"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).ParticipantProfilesMetadata = (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiParticipantProfilesMetadata[]) content.GetValueForProperty("ParticipantProfilesMetadata",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).ParticipantProfilesMetadata, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiParticipantProfilesMetadata>(__y, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.KpiParticipantProfilesMetadataTypeConverter.ConvertFrom));
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ProvisioningStates?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ProvisioningStates.CreateFrom);
            }
            if (content.Contains("Alias"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).Alias = (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiAlias[]) content.GetValueForProperty("Alias",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).Alias, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiAlias>(__y, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.KpiAliasTypeConverter.ConvertFrom));
            }
            if (content.Contains("Extract"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).Extract = (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiExtract[]) content.GetValueForProperty("Extract",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).Extract, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiExtract>(__y, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.KpiExtractTypeConverter.ConvertFrom));
            }
            if (content.Contains("ThreHoldLowerLimit"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).ThreHoldLowerLimit = (decimal) content.GetValueForProperty("ThreHoldLowerLimit",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).ThreHoldLowerLimit, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("ThreHoldUpperLimit"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).ThreHoldUpperLimit = (decimal) content.GetValueForProperty("ThreHoldUpperLimit",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).ThreHoldUpperLimit, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("ThreHoldIncreasingKpi"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).ThreHoldIncreasingKpi = (bool) content.GetValueForProperty("ThreHoldIncreasingKpi",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).ThreHoldIncreasingKpi, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.KpiDefinition"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal KpiDefinition(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("ThresHold"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).ThresHold = (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiThresholds) content.GetValueForProperty("ThresHold",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).ThresHold, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.KpiThresholdsTypeConverter.ConvertFrom);
            }
            if (content.Contains("EntityType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).EntityType = (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.EntityTypes) content.GetValueForProperty("EntityType",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).EntityType, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.EntityTypes.CreateFrom);
            }
            if (content.Contains("EntityTypeName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).EntityTypeName = (string) content.GetValueForProperty("EntityTypeName",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).EntityTypeName, global::System.Convert.ToString);
            }
            if (content.Contains("TenantId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).TenantId = (string) content.GetValueForProperty("TenantId",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).TenantId, global::System.Convert.ToString);
            }
            if (content.Contains("KpiName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).KpiName = (string) content.GetValueForProperty("KpiName",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).KpiName, global::System.Convert.ToString);
            }
            if (content.Contains("DisplayName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).DisplayName = (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionDisplayName) content.GetValueForProperty("DisplayName",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).DisplayName, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.KpiDefinitionDisplayNameTypeConverter.ConvertFrom);
            }
            if (content.Contains("Description"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).Description = (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionDescription) content.GetValueForProperty("Description",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).Description, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.KpiDefinitionDescriptionTypeConverter.ConvertFrom);
            }
            if (content.Contains("CalculationWindow"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).CalculationWindow = (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.CalculationWindowTypes) content.GetValueForProperty("CalculationWindow",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).CalculationWindow, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.CalculationWindowTypes.CreateFrom);
            }
            if (content.Contains("CalculationWindowFieldName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).CalculationWindowFieldName = (string) content.GetValueForProperty("CalculationWindowFieldName",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).CalculationWindowFieldName, global::System.Convert.ToString);
            }
            if (content.Contains("Function"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).Function = (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.KpiFunctions) content.GetValueForProperty("Function",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).Function, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.KpiFunctions.CreateFrom);
            }
            if (content.Contains("Expression"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).Expression = (string) content.GetValueForProperty("Expression",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).Expression, global::System.Convert.ToString);
            }
            if (content.Contains("Unit"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).Unit = (string) content.GetValueForProperty("Unit",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).Unit, global::System.Convert.ToString);
            }
            if (content.Contains("Filter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).Filter = (string) content.GetValueForProperty("Filter",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).Filter, global::System.Convert.ToString);
            }
            if (content.Contains("GroupBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).GroupBy = (string[]) content.GetValueForProperty("GroupBy",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).GroupBy, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("GroupByMetadata"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).GroupByMetadata = (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiGroupByMetadata[]) content.GetValueForProperty("GroupByMetadata",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).GroupByMetadata, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiGroupByMetadata>(__y, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.KpiGroupByMetadataTypeConverter.ConvertFrom));
            }
            if (content.Contains("ParticipantProfilesMetadata"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).ParticipantProfilesMetadata = (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiParticipantProfilesMetadata[]) content.GetValueForProperty("ParticipantProfilesMetadata",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).ParticipantProfilesMetadata, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiParticipantProfilesMetadata>(__y, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.KpiParticipantProfilesMetadataTypeConverter.ConvertFrom));
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ProvisioningStates?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ProvisioningStates.CreateFrom);
            }
            if (content.Contains("Alias"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).Alias = (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiAlias[]) content.GetValueForProperty("Alias",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).Alias, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiAlias>(__y, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.KpiAliasTypeConverter.ConvertFrom));
            }
            if (content.Contains("Extract"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).Extract = (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiExtract[]) content.GetValueForProperty("Extract",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).Extract, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiExtract>(__y, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.KpiExtractTypeConverter.ConvertFrom));
            }
            if (content.Contains("ThreHoldLowerLimit"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).ThreHoldLowerLimit = (decimal) content.GetValueForProperty("ThreHoldLowerLimit",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).ThreHoldLowerLimit, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("ThreHoldUpperLimit"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).ThreHoldUpperLimit = (decimal) content.GetValueForProperty("ThreHoldUpperLimit",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).ThreHoldUpperLimit, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("ThreHoldIncreasingKpi"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).ThreHoldIncreasingKpi = (bool) content.GetValueForProperty("ThreHoldIncreasingKpi",((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IKpiDefinitionInternal)this).ThreHoldIncreasingKpi, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Defines the KPI Threshold limits.
    [System.ComponentModel.TypeConverter(typeof(KpiDefinitionTypeConverter))]
    public partial interface IKpiDefinition

    {

    }
}