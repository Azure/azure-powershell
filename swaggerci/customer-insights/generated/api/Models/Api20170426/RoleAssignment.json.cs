// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426
{
    using static Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Extensions;

    /// <summary>The Role Assignment definition.</summary>
    public partial class RoleAssignment
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json erialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignment.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignment.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRoleAssignment FromJson(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject json ? new RoleAssignment(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject into a new instance of <see cref="RoleAssignment" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal RoleAssignment(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_profile = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject>("profiles"), out var __jsonProfiles) ? Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ResourceSetDescription.FromJson(__jsonProfiles) : Profile;}
            {_interaction = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject>("interactions"), out var __jsonInteractions) ? Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ResourceSetDescription.FromJson(__jsonInteractions) : Interaction;}
            {_link = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject>("links"), out var __jsonLinks) ? Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ResourceSetDescription.FromJson(__jsonLinks) : Link;}
            {_kpi = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject>("kpis"), out var __jsonKpis) ? Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ResourceSetDescription.FromJson(__jsonKpis) : Kpi;}
            {_sasPolicy = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject>("sasPolicies"), out var __jsonSasPolicies) ? Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ResourceSetDescription.FromJson(__jsonSasPolicies) : SasPolicy;}
            {_connector = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject>("connectors"), out var __jsonConnectors) ? Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ResourceSetDescription.FromJson(__jsonConnectors) : Connector;}
            {_view = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject>("views"), out var __jsonViews) ? Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ResourceSetDescription.FromJson(__jsonViews) : View;}
            {_relationshipLink = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject>("relationshipLinks"), out var __jsonRelationshipLinks) ? Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ResourceSetDescription.FromJson(__jsonRelationshipLinks) : RelationshipLink;}
            {_relationship = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject>("relationships"), out var __jsonRelationships) ? Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ResourceSetDescription.FromJson(__jsonRelationships) : Relationship;}
            {_widgetType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject>("widgetTypes"), out var __jsonWidgetTypes) ? Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ResourceSetDescription.FromJson(__jsonWidgetTypes) : WidgetType;}
            {_roleAssignments = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject>("roleAssignments"), out var __jsonRoleAssignments) ? Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ResourceSetDescription.FromJson(__jsonRoleAssignments) : RoleAssignments;}
            {_conflationPolicy = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject>("conflationPolicies"), out var __jsonConflationPolicies) ? Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ResourceSetDescription.FromJson(__jsonConflationPolicies) : ConflationPolicy;}
            {_segment = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject>("segments"), out var __jsonSegments) ? Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ResourceSetDescription.FromJson(__jsonSegments) : Segment;}
            {_tenantId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonString>("tenantId"), out var __jsonTenantId) ? (string)__jsonTenantId : (string)TenantId;}
            {_assignmentName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonString>("assignmentName"), out var __jsonAssignmentName) ? (string)__jsonAssignmentName : (string)AssignmentName;}
            {_displayName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject>("displayName"), out var __jsonDisplayName) ? Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.RoleAssignmentDisplayName.FromJson(__jsonDisplayName) : DisplayName;}
            {_description = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject>("description"), out var __jsonDescription) ? Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.RoleAssignmentDescription.FromJson(__jsonDescription) : Description;}
            {_provisioningState = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonString>("provisioningState"), out var __jsonProvisioningState) ? (string)__jsonProvisioningState : (string)ProvisioningState;}
            {_role = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonString>("role"), out var __jsonRole) ? (string)__jsonRole : (string)Role;}
            {_principal = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonArray>("principals"), out var __jsonPrincipals) ? If( __jsonPrincipals as Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IAssignmentPrincipal[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IAssignmentPrincipal) (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.AssignmentPrincipal.FromJson(__u) )) ))() : null : Principal;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="RoleAssignment" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="RoleAssignment" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != this._profile ? (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode) this._profile.ToJson(null,serializationMode) : null, "profiles" ,container.Add );
            AddIf( null != this._interaction ? (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode) this._interaction.ToJson(null,serializationMode) : null, "interactions" ,container.Add );
            AddIf( null != this._link ? (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode) this._link.ToJson(null,serializationMode) : null, "links" ,container.Add );
            AddIf( null != this._kpi ? (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode) this._kpi.ToJson(null,serializationMode) : null, "kpis" ,container.Add );
            AddIf( null != this._sasPolicy ? (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode) this._sasPolicy.ToJson(null,serializationMode) : null, "sasPolicies" ,container.Add );
            AddIf( null != this._connector ? (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode) this._connector.ToJson(null,serializationMode) : null, "connectors" ,container.Add );
            AddIf( null != this._view ? (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode) this._view.ToJson(null,serializationMode) : null, "views" ,container.Add );
            AddIf( null != this._relationshipLink ? (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode) this._relationshipLink.ToJson(null,serializationMode) : null, "relationshipLinks" ,container.Add );
            AddIf( null != this._relationship ? (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode) this._relationship.ToJson(null,serializationMode) : null, "relationships" ,container.Add );
            AddIf( null != this._widgetType ? (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode) this._widgetType.ToJson(null,serializationMode) : null, "widgetTypes" ,container.Add );
            AddIf( null != this._roleAssignments ? (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode) this._roleAssignments.ToJson(null,serializationMode) : null, "roleAssignments" ,container.Add );
            AddIf( null != this._conflationPolicy ? (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode) this._conflationPolicy.ToJson(null,serializationMode) : null, "conflationPolicies" ,container.Add );
            AddIf( null != this._segment ? (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode) this._segment.ToJson(null,serializationMode) : null, "segments" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._tenantId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonString(this._tenantId.ToString()) : null, "tenantId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._assignmentName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonString(this._assignmentName.ToString()) : null, "assignmentName" ,container.Add );
            }
            AddIf( null != this._displayName ? (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode) this._displayName.ToJson(null,serializationMode) : null, "displayName" ,container.Add );
            AddIf( null != this._description ? (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode) this._description.ToJson(null,serializationMode) : null, "description" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._provisioningState)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonString(this._provisioningState.ToString()) : null, "provisioningState" ,container.Add );
            }
            AddIf( null != (((object)this._role)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.JsonString(this._role.ToString()) : null, "role" ,container.Add );
            if (null != this._principal)
            {
                var __w = new Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Json.XNodeArray();
                foreach( var __x in this._principal )
                {
                    AddIf(__x?.ToJson(null, serializationMode) ,__w.Add);
                }
                container.Add("principals",__w);
            }
            AfterToJson(ref container);
            return container;
        }
    }
}