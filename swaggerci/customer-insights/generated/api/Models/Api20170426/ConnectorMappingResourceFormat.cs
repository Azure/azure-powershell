// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426
{
    using static Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Extensions;

    /// <summary>The connector mapping resource format.</summary>
    public partial class ConnectorMappingResourceFormat :
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingResourceFormat,
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingResourceFormatInternal,
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProxyResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProxyResource __proxyResource = new Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ProxyResource();

        /// <summary>The frequency to update.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.FrequencyTypes? AvailabilityFrequency { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).AvailabilityFrequency; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).AvailabilityFrequency = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.FrequencyTypes)""); }

        /// <summary>The interval of the given frequency to use.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public int? AvailabilityInterval { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).AvailabilityInterval; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).AvailabilityInterval = value ?? default(int); }

        /// <summary>The type of completion operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.CompletionOperationTypes? CompleteOperationCompletionOperationType { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).CompleteOperationCompletionOperationType; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).CompleteOperationCompletionOperationType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.CompletionOperationTypes)""); }

        /// <summary>The destination folder where files will be moved to once the import is done.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string CompleteOperationDestinationFolder { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).CompleteOperationDestinationFolder; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).CompleteOperationDestinationFolder = value ?? null; }

        /// <summary>The connector mapping name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string ConnectorMappingName { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).Name; }

        /// <summary>The connector name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string ConnectorName { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).ConnectorName; }

        /// <summary>Type of connector.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ConnectorTypes? ConnectorType { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).ConnectorType; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).ConnectorType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ConnectorTypes)""); }

        /// <summary>The created time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public global::System.DateTime? Created { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).Created; }

        /// <summary>The DataFormat ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string DataFormatId { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).DataFormatId; }

        /// <summary>The description of the connector mapping.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string Description { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).Description = value ?? null; }

        /// <summary>Display name for the connector mapping.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string DisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).DisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).DisplayName = value ?? null; }

        /// <summary>Defines which entity type the file should map to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.EntityTypes? EntityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).EntityType; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).EntityType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.EntityTypes)""); }

        /// <summary>The mapping entity name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string EntityTypeName { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).EntityTypeName; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).EntityTypeName = value ?? null; }

        /// <summary>The error limit allowed while importing data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public int? ErrorManagementErrorLimit { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).ErrorManagementErrorLimit; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).ErrorManagementErrorLimit = value ?? default(int); }

        /// <summary>The type of error management to use for the mapping.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ErrorManagementTypes? ErrorManagementType { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).ErrorManagementType; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).ErrorManagementType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ErrorManagementTypes)""); }

        /// <summary>The oData language.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string FormatAcceptLanguage { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).FormatAcceptLanguage; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).FormatAcceptLanguage = value ?? null; }

        /// <summary>Character separating array elements.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string FormatArraySeparator { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).FormatArraySeparator; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).FormatArraySeparator = value ?? null; }

        /// <summary>The character that signifies a break between columns.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string FormatColumnDelimiter { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).FormatColumnDelimiter; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).FormatColumnDelimiter = value ?? null; }

        /// <summary>Quote character, used to indicate enquoted fields.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string FormatQuoteCharacter { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).FormatQuoteCharacter; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).FormatQuoteCharacter = value ?? null; }

        /// <summary>Escape character for quotes, can be the same as the quoteCharacter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string FormatQuoteEscapeCharacter { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).FormatQuoteEscapeCharacter; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).FormatQuoteEscapeCharacter = value ?? null; }

        /// <summary>The type mapping format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string FormatType { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).FormatType; }

        /// <summary>Resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProxyResourceInternal)__proxyResource).Id; }

        /// <summary>The last modified time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public global::System.DateTime? LastModified { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).LastModified; }

        /// <summary>The file filter for the mapping.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string MappingPropertyFileFilter { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).MappingPropertyFileFilter; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).MappingPropertyFileFilter = value ?? null; }

        /// <summary>The folder path for the mapping.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string MappingPropertyFolderPath { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).MappingPropertyFolderPath; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).MappingPropertyFolderPath = value ?? null; }

        /// <summary>If the file contains a header or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public bool? MappingPropertyHasHeader { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).MappingPropertyHasHeader; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).MappingPropertyHasHeader = value ?? default(bool); }

        /// <summary>Ingestion mapping information at property level.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingStructure[] MappingPropertyStructure { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).MappingPropertyStructure; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).MappingPropertyStructure = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for ConnectorMappingName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingResourceFormatInternal.ConnectorMappingName { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).Name = value; }

        /// <summary>Internal Acessors for ConnectorName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingResourceFormatInternal.ConnectorName { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).ConnectorName; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).ConnectorName = value; }

        /// <summary>Internal Acessors for Created</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingResourceFormatInternal.Created { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).Created; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).Created = value; }

        /// <summary>Internal Acessors for DataFormatId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingResourceFormatInternal.DataFormatId { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).DataFormatId; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).DataFormatId = value; }

        /// <summary>Internal Acessors for FormatType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingResourceFormatInternal.FormatType { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).FormatType; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).FormatType = value; }

        /// <summary>Internal Acessors for LastModified</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingResourceFormatInternal.LastModified { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).LastModified; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).LastModified = value; }

        /// <summary>Internal Acessors for MappingProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingProperties Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingResourceFormatInternal.MappingProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).MappingProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).MappingProperty = value; }

        /// <summary>Internal Acessors for MappingPropertyAvailability</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingAvailability Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingResourceFormatInternal.MappingPropertyAvailability { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).MappingPropertyAvailability; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).MappingPropertyAvailability = value; }

        /// <summary>Internal Acessors for MappingPropertyCompleteOperation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingCompleteOperation Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingResourceFormatInternal.MappingPropertyCompleteOperation { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).MappingPropertyCompleteOperation; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).MappingPropertyCompleteOperation = value; }

        /// <summary>Internal Acessors for MappingPropertyErrorManagement</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingErrorManagement Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingResourceFormatInternal.MappingPropertyErrorManagement { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).MappingPropertyErrorManagement; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).MappingPropertyErrorManagement = value; }

        /// <summary>Internal Acessors for MappingPropertyFormat</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingFormat Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingResourceFormatInternal.MappingPropertyFormat { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).MappingPropertyFormat; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).MappingPropertyFormat = value; }

        /// <summary>Internal Acessors for NextRunTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingResourceFormatInternal.NextRunTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).NextRunTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).NextRunTime = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMapping Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingResourceFormatInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ConnectorMapping()); set { {_property = value;} } }

        /// <summary>Internal Acessors for RunId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingResourceFormatInternal.RunId { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).RunId; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).RunId = value; }

        /// <summary>Internal Acessors for State</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ConnectorMappingStates? Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingResourceFormatInternal.State { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).State; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).State = value; }

        /// <summary>Internal Acessors for TenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingResourceFormatInternal.TenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).TenantId = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProxyResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProxyResourceInternal)__proxyResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProxyResourceInternal)__proxyResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProxyResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProxyResourceInternal)__proxyResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProxyResourceInternal)__proxyResource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProxyResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProxyResourceInternal)__proxyResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProxyResourceInternal)__proxyResource).Type = value; }

        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProxyResourceInternal)__proxyResource).Name; }

        /// <summary>The next run time based on customer's settings.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public global::System.DateTime? NextRunTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).NextRunTime; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMapping _property;

        /// <summary>The connector mapping definition.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMapping Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ConnectorMapping()); set => this._property = value; }

        /// <summary>The RunId.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string RunId { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).RunId; }

        /// <summary>State of connector mapping.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ConnectorMappingStates? State { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).State; }

        /// <summary>The hub name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string TenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingInternal)Property).TenantId; }

        /// <summary>Resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProxyResourceInternal)__proxyResource).Type; }

        /// <summary>Creates an new <see cref="ConnectorMappingResourceFormat" /> instance.</summary>
        public ConnectorMappingResourceFormat()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__proxyResource), __proxyResource);
            await eventListener.AssertObjectIsValid(nameof(__proxyResource), __proxyResource);
        }
    }
    /// The connector mapping resource format.
    public partial interface IConnectorMappingResourceFormat :
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProxyResource
    {
        /// <summary>The frequency to update.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The frequency to update.",
        SerializedName = @"frequency",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.FrequencyTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.FrequencyTypes? AvailabilityFrequency { get; set; }
        /// <summary>The interval of the given frequency to use.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The interval of the given frequency to use.",
        SerializedName = @"interval",
        PossibleTypes = new [] { typeof(int) })]
        int? AvailabilityInterval { get; set; }
        /// <summary>The type of completion operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of completion operation.",
        SerializedName = @"completionOperationType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.CompletionOperationTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.CompletionOperationTypes? CompleteOperationCompletionOperationType { get; set; }
        /// <summary>The destination folder where files will be moved to once the import is done.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The destination folder where files will be moved to once the import is done.",
        SerializedName = @"destinationFolder",
        PossibleTypes = new [] { typeof(string) })]
        string CompleteOperationDestinationFolder { get; set; }
        /// <summary>The connector mapping name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The connector mapping name",
        SerializedName = @"connectorMappingName",
        PossibleTypes = new [] { typeof(string) })]
        string ConnectorMappingName { get;  }
        /// <summary>The connector name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The connector name.",
        SerializedName = @"connectorName",
        PossibleTypes = new [] { typeof(string) })]
        string ConnectorName { get;  }
        /// <summary>Type of connector.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of connector.",
        SerializedName = @"connectorType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ConnectorTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ConnectorTypes? ConnectorType { get; set; }
        /// <summary>The created time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The created time.",
        SerializedName = @"created",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? Created { get;  }
        /// <summary>The DataFormat ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The DataFormat ID.",
        SerializedName = @"dataFormatId",
        PossibleTypes = new [] { typeof(string) })]
        string DataFormatId { get;  }
        /// <summary>The description of the connector mapping.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The description of the connector mapping.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>Display name for the connector mapping.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Display name for the connector mapping.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>Defines which entity type the file should map to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Defines which entity type the file should map to.",
        SerializedName = @"entityType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.EntityTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.EntityTypes? EntityType { get; set; }
        /// <summary>The mapping entity name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The mapping entity name.",
        SerializedName = @"entityTypeName",
        PossibleTypes = new [] { typeof(string) })]
        string EntityTypeName { get; set; }
        /// <summary>The error limit allowed while importing data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The error limit allowed while importing data.",
        SerializedName = @"errorLimit",
        PossibleTypes = new [] { typeof(int) })]
        int? ErrorManagementErrorLimit { get; set; }
        /// <summary>The type of error management to use for the mapping.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of error management to use for the mapping.",
        SerializedName = @"errorManagementType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ErrorManagementTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ErrorManagementTypes? ErrorManagementType { get; set; }
        /// <summary>The oData language.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The oData language.",
        SerializedName = @"acceptLanguage",
        PossibleTypes = new [] { typeof(string) })]
        string FormatAcceptLanguage { get; set; }
        /// <summary>Character separating array elements.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Character separating array elements.",
        SerializedName = @"arraySeparator",
        PossibleTypes = new [] { typeof(string) })]
        string FormatArraySeparator { get; set; }
        /// <summary>The character that signifies a break between columns.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The character that signifies a break between columns.",
        SerializedName = @"columnDelimiter",
        PossibleTypes = new [] { typeof(string) })]
        string FormatColumnDelimiter { get; set; }
        /// <summary>Quote character, used to indicate enquoted fields.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Quote character, used to indicate enquoted fields.",
        SerializedName = @"quoteCharacter",
        PossibleTypes = new [] { typeof(string) })]
        string FormatQuoteCharacter { get; set; }
        /// <summary>Escape character for quotes, can be the same as the quoteCharacter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Escape character for quotes, can be the same as the quoteCharacter.",
        SerializedName = @"quoteEscapeCharacter",
        PossibleTypes = new [] { typeof(string) })]
        string FormatQuoteEscapeCharacter { get; set; }
        /// <summary>The type mapping format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The type mapping format.",
        SerializedName = @"formatType",
        PossibleTypes = new [] { typeof(string) })]
        string FormatType { get;  }
        /// <summary>The last modified time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The last modified time.",
        SerializedName = @"lastModified",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastModified { get;  }
        /// <summary>The file filter for the mapping.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The file filter for the mapping.",
        SerializedName = @"fileFilter",
        PossibleTypes = new [] { typeof(string) })]
        string MappingPropertyFileFilter { get; set; }
        /// <summary>The folder path for the mapping.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The folder path for the mapping.",
        SerializedName = @"folderPath",
        PossibleTypes = new [] { typeof(string) })]
        string MappingPropertyFolderPath { get; set; }
        /// <summary>If the file contains a header or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If the file contains a header or not.",
        SerializedName = @"hasHeader",
        PossibleTypes = new [] { typeof(bool) })]
        bool? MappingPropertyHasHeader { get; set; }
        /// <summary>Ingestion mapping information at property level.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Ingestion mapping information at property level.",
        SerializedName = @"structure",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingStructure) })]
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingStructure[] MappingPropertyStructure { get; set; }
        /// <summary>The next run time based on customer's settings.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The next run time based on customer's settings.",
        SerializedName = @"nextRunTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? NextRunTime { get;  }
        /// <summary>The RunId.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The RunId.",
        SerializedName = @"runId",
        PossibleTypes = new [] { typeof(string) })]
        string RunId { get;  }
        /// <summary>State of connector mapping.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"State of connector mapping.",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ConnectorMappingStates) })]
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ConnectorMappingStates? State { get;  }
        /// <summary>The hub name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The hub name.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string TenantId { get;  }

    }
    /// The connector mapping resource format.
    internal partial interface IConnectorMappingResourceFormatInternal :
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IProxyResourceInternal
    {
        /// <summary>The frequency to update.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.FrequencyTypes? AvailabilityFrequency { get; set; }
        /// <summary>The interval of the given frequency to use.</summary>
        int? AvailabilityInterval { get; set; }
        /// <summary>The type of completion operation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.CompletionOperationTypes? CompleteOperationCompletionOperationType { get; set; }
        /// <summary>The destination folder where files will be moved to once the import is done.</summary>
        string CompleteOperationDestinationFolder { get; set; }
        /// <summary>The connector mapping name</summary>
        string ConnectorMappingName { get; set; }
        /// <summary>The connector name.</summary>
        string ConnectorName { get; set; }
        /// <summary>Type of connector.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ConnectorTypes? ConnectorType { get; set; }
        /// <summary>The created time.</summary>
        global::System.DateTime? Created { get; set; }
        /// <summary>The DataFormat ID.</summary>
        string DataFormatId { get; set; }
        /// <summary>The description of the connector mapping.</summary>
        string Description { get; set; }
        /// <summary>Display name for the connector mapping.</summary>
        string DisplayName { get; set; }
        /// <summary>Defines which entity type the file should map to.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.EntityTypes? EntityType { get; set; }
        /// <summary>The mapping entity name.</summary>
        string EntityTypeName { get; set; }
        /// <summary>The error limit allowed while importing data.</summary>
        int? ErrorManagementErrorLimit { get; set; }
        /// <summary>The type of error management to use for the mapping.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ErrorManagementTypes? ErrorManagementType { get; set; }
        /// <summary>The oData language.</summary>
        string FormatAcceptLanguage { get; set; }
        /// <summary>Character separating array elements.</summary>
        string FormatArraySeparator { get; set; }
        /// <summary>The character that signifies a break between columns.</summary>
        string FormatColumnDelimiter { get; set; }
        /// <summary>Quote character, used to indicate enquoted fields.</summary>
        string FormatQuoteCharacter { get; set; }
        /// <summary>Escape character for quotes, can be the same as the quoteCharacter.</summary>
        string FormatQuoteEscapeCharacter { get; set; }
        /// <summary>The type mapping format.</summary>
        string FormatType { get; set; }
        /// <summary>The last modified time.</summary>
        global::System.DateTime? LastModified { get; set; }
        /// <summary>The properties of the mapping.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingProperties MappingProperty { get; set; }
        /// <summary>The availability of mapping property.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingAvailability MappingPropertyAvailability { get; set; }
        /// <summary>The operation after import is done.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingCompleteOperation MappingPropertyCompleteOperation { get; set; }
        /// <summary>The error management setting for the mapping.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingErrorManagement MappingPropertyErrorManagement { get; set; }
        /// <summary>The file filter for the mapping.</summary>
        string MappingPropertyFileFilter { get; set; }
        /// <summary>The folder path for the mapping.</summary>
        string MappingPropertyFolderPath { get; set; }
        /// <summary>The format of mapping property.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingFormat MappingPropertyFormat { get; set; }
        /// <summary>If the file contains a header or not.</summary>
        bool? MappingPropertyHasHeader { get; set; }
        /// <summary>Ingestion mapping information at property level.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingStructure[] MappingPropertyStructure { get; set; }
        /// <summary>The next run time based on customer's settings.</summary>
        global::System.DateTime? NextRunTime { get; set; }
        /// <summary>The connector mapping definition.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMapping Property { get; set; }
        /// <summary>The RunId.</summary>
        string RunId { get; set; }
        /// <summary>State of connector mapping.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ConnectorMappingStates? State { get; set; }
        /// <summary>The hub name.</summary>
        string TenantId { get; set; }

    }
}