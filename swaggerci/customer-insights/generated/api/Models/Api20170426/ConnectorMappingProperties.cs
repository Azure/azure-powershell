// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426
{
    using static Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Extensions;

    /// <summary>The connector mapping properties.</summary>
    public partial class ConnectorMappingProperties :
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingProperties,
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingPropertiesInternal
    {

        /// <summary>Backing field for <see cref="Availability" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingAvailability _availability;

        /// <summary>The availability of mapping property.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingAvailability Availability { get => (this._availability = this._availability ?? new Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ConnectorMappingAvailability()); set => this._availability = value; }

        /// <summary>The frequency to update.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.FrequencyTypes? AvailabilityFrequency { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingAvailabilityInternal)Availability).Frequency; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingAvailabilityInternal)Availability).Frequency = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.FrequencyTypes)""); }

        /// <summary>The interval of the given frequency to use.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public int AvailabilityInterval { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingAvailabilityInternal)Availability).Interval; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingAvailabilityInternal)Availability).Interval = value ; }

        /// <summary>Backing field for <see cref="CompleteOperation" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingCompleteOperation _completeOperation;

        /// <summary>The operation after import is done.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingCompleteOperation CompleteOperation { get => (this._completeOperation = this._completeOperation ?? new Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ConnectorMappingCompleteOperation()); set => this._completeOperation = value; }

        /// <summary>The type of completion operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.CompletionOperationTypes? CompleteOperationCompletionOperationType { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingCompleteOperationInternal)CompleteOperation).CompletionOperationType; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingCompleteOperationInternal)CompleteOperation).CompletionOperationType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.CompletionOperationTypes)""); }

        /// <summary>The destination folder where files will be moved to once the import is done.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string CompleteOperationDestinationFolder { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingCompleteOperationInternal)CompleteOperation).DestinationFolder; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingCompleteOperationInternal)CompleteOperation).DestinationFolder = value ?? null; }

        /// <summary>Backing field for <see cref="ErrorManagement" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingErrorManagement _errorManagement;

        /// <summary>The error management setting for the mapping.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingErrorManagement ErrorManagement { get => (this._errorManagement = this._errorManagement ?? new Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ConnectorMappingErrorManagement()); set => this._errorManagement = value; }

        /// <summary>The error limit allowed while importing data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public int? ErrorManagementErrorLimit { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingErrorManagementInternal)ErrorManagement).ErrorLimit; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingErrorManagementInternal)ErrorManagement).ErrorLimit = value ?? default(int); }

        /// <summary>The type of error management to use for the mapping.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ErrorManagementTypes ErrorManagementType { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingErrorManagementInternal)ErrorManagement).ErrorManagementType; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingErrorManagementInternal)ErrorManagement).ErrorManagementType = value ; }

        /// <summary>Backing field for <see cref="FileFilter" /> property.</summary>
        private string _fileFilter;

        /// <summary>The file filter for the mapping.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        public string FileFilter { get => this._fileFilter; set => this._fileFilter = value; }

        /// <summary>Backing field for <see cref="FolderPath" /> property.</summary>
        private string _folderPath;

        /// <summary>The folder path for the mapping.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        public string FolderPath { get => this._folderPath; set => this._folderPath = value; }

        /// <summary>Backing field for <see cref="Format" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingFormat _format;

        /// <summary>The format of mapping property.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingFormat Format { get => (this._format = this._format ?? new Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ConnectorMappingFormat()); set => this._format = value; }

        /// <summary>The oData language.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string FormatAcceptLanguage { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingFormatInternal)Format).AcceptLanguage; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingFormatInternal)Format).AcceptLanguage = value ?? null; }

        /// <summary>Character separating array elements.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string FormatArraySeparator { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingFormatInternal)Format).ArraySeparator; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingFormatInternal)Format).ArraySeparator = value ?? null; }

        /// <summary>The character that signifies a break between columns.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string FormatColumnDelimiter { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingFormatInternal)Format).ColumnDelimiter; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingFormatInternal)Format).ColumnDelimiter = value ?? null; }

        /// <summary>Quote character, used to indicate enquoted fields.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string FormatQuoteCharacter { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingFormatInternal)Format).QuoteCharacter; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingFormatInternal)Format).QuoteCharacter = value ?? null; }

        /// <summary>Escape character for quotes, can be the same as the quoteCharacter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string FormatQuoteEscapeCharacter { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingFormatInternal)Format).QuoteEscapeCharacter; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingFormatInternal)Format).QuoteEscapeCharacter = value ?? null; }

        /// <summary>The type mapping format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Inlined)]
        public string FormatType { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingFormatInternal)Format).FormatType; }

        /// <summary>Backing field for <see cref="HasHeader" /> property.</summary>
        private bool? _hasHeader;

        /// <summary>If the file contains a header or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        public bool? HasHeader { get => this._hasHeader; set => this._hasHeader = value; }

        /// <summary>Internal Acessors for Availability</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingAvailability Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingPropertiesInternal.Availability { get => (this._availability = this._availability ?? new Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ConnectorMappingAvailability()); set { {_availability = value;} } }

        /// <summary>Internal Acessors for CompleteOperation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingCompleteOperation Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingPropertiesInternal.CompleteOperation { get => (this._completeOperation = this._completeOperation ?? new Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ConnectorMappingCompleteOperation()); set { {_completeOperation = value;} } }

        /// <summary>Internal Acessors for ErrorManagement</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingErrorManagement Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingPropertiesInternal.ErrorManagement { get => (this._errorManagement = this._errorManagement ?? new Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ConnectorMappingErrorManagement()); set { {_errorManagement = value;} } }

        /// <summary>Internal Acessors for Format</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingFormat Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingPropertiesInternal.Format { get => (this._format = this._format ?? new Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.ConnectorMappingFormat()); set { {_format = value;} } }

        /// <summary>Internal Acessors for FormatType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingPropertiesInternal.FormatType { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingFormatInternal)Format).FormatType; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingFormatInternal)Format).FormatType = value; }

        /// <summary>Backing field for <see cref="Structure" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingStructure[] _structure;

        /// <summary>Ingestion mapping information at property level.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingStructure[] Structure { get => this._structure; set => this._structure = value; }

        /// <summary>Creates an new <see cref="ConnectorMappingProperties" /> instance.</summary>
        public ConnectorMappingProperties()
        {

        }
    }
    /// The connector mapping properties.
    public partial interface IConnectorMappingProperties :
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.IJsonSerializable
    {
        /// <summary>The frequency to update.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The frequency to update.",
        SerializedName = @"frequency",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.FrequencyTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.FrequencyTypes? AvailabilityFrequency { get; set; }
        /// <summary>The interval of the given frequency to use.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The interval of the given frequency to use.",
        SerializedName = @"interval",
        PossibleTypes = new [] { typeof(int) })]
        int AvailabilityInterval { get; set; }
        /// <summary>The type of completion operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of completion operation.",
        SerializedName = @"completionOperationType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.CompletionOperationTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.CompletionOperationTypes? CompleteOperationCompletionOperationType { get; set; }
        /// <summary>The destination folder where files will be moved to once the import is done.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The destination folder where files will be moved to once the import is done.",
        SerializedName = @"destinationFolder",
        PossibleTypes = new [] { typeof(string) })]
        string CompleteOperationDestinationFolder { get; set; }
        /// <summary>The error limit allowed while importing data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The error limit allowed while importing data.",
        SerializedName = @"errorLimit",
        PossibleTypes = new [] { typeof(int) })]
        int? ErrorManagementErrorLimit { get; set; }
        /// <summary>The type of error management to use for the mapping.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The type of error management to use for the mapping.",
        SerializedName = @"errorManagementType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ErrorManagementTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ErrorManagementTypes ErrorManagementType { get; set; }
        /// <summary>The file filter for the mapping.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The file filter for the mapping.",
        SerializedName = @"fileFilter",
        PossibleTypes = new [] { typeof(string) })]
        string FileFilter { get; set; }
        /// <summary>The folder path for the mapping.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The folder path for the mapping.",
        SerializedName = @"folderPath",
        PossibleTypes = new [] { typeof(string) })]
        string FolderPath { get; set; }
        /// <summary>The oData language.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The oData language.",
        SerializedName = @"acceptLanguage",
        PossibleTypes = new [] { typeof(string) })]
        string FormatAcceptLanguage { get; set; }
        /// <summary>Character separating array elements.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Character separating array elements.",
        SerializedName = @"arraySeparator",
        PossibleTypes = new [] { typeof(string) })]
        string FormatArraySeparator { get; set; }
        /// <summary>The character that signifies a break between columns.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The character that signifies a break between columns.",
        SerializedName = @"columnDelimiter",
        PossibleTypes = new [] { typeof(string) })]
        string FormatColumnDelimiter { get; set; }
        /// <summary>Quote character, used to indicate enquoted fields.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Quote character, used to indicate enquoted fields.",
        SerializedName = @"quoteCharacter",
        PossibleTypes = new [] { typeof(string) })]
        string FormatQuoteCharacter { get; set; }
        /// <summary>Escape character for quotes, can be the same as the quoteCharacter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Escape character for quotes, can be the same as the quoteCharacter.",
        SerializedName = @"quoteEscapeCharacter",
        PossibleTypes = new [] { typeof(string) })]
        string FormatQuoteEscapeCharacter { get; set; }
        /// <summary>The type mapping format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = true,
        ReadOnly = true,
        Description = @"The type mapping format.",
        SerializedName = @"formatType",
        PossibleTypes = new [] { typeof(string) })]
        string FormatType { get;  }
        /// <summary>If the file contains a header or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If the file contains a header or not.",
        SerializedName = @"hasHeader",
        PossibleTypes = new [] { typeof(bool) })]
        bool? HasHeader { get; set; }
        /// <summary>Ingestion mapping information at property level.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Ingestion mapping information at property level.",
        SerializedName = @"structure",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingStructure) })]
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingStructure[] Structure { get; set; }

    }
    /// The connector mapping properties.
    internal partial interface IConnectorMappingPropertiesInternal

    {
        /// <summary>The availability of mapping property.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingAvailability Availability { get; set; }
        /// <summary>The frequency to update.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.FrequencyTypes? AvailabilityFrequency { get; set; }
        /// <summary>The interval of the given frequency to use.</summary>
        int AvailabilityInterval { get; set; }
        /// <summary>The operation after import is done.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingCompleteOperation CompleteOperation { get; set; }
        /// <summary>The type of completion operation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.CompletionOperationTypes? CompleteOperationCompletionOperationType { get; set; }
        /// <summary>The destination folder where files will be moved to once the import is done.</summary>
        string CompleteOperationDestinationFolder { get; set; }
        /// <summary>The error management setting for the mapping.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingErrorManagement ErrorManagement { get; set; }
        /// <summary>The error limit allowed while importing data.</summary>
        int? ErrorManagementErrorLimit { get; set; }
        /// <summary>The type of error management to use for the mapping.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Support.ErrorManagementTypes ErrorManagementType { get; set; }
        /// <summary>The file filter for the mapping.</summary>
        string FileFilter { get; set; }
        /// <summary>The folder path for the mapping.</summary>
        string FolderPath { get; set; }
        /// <summary>The format of mapping property.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingFormat Format { get; set; }
        /// <summary>The oData language.</summary>
        string FormatAcceptLanguage { get; set; }
        /// <summary>Character separating array elements.</summary>
        string FormatArraySeparator { get; set; }
        /// <summary>The character that signifies a break between columns.</summary>
        string FormatColumnDelimiter { get; set; }
        /// <summary>Quote character, used to indicate enquoted fields.</summary>
        string FormatQuoteCharacter { get; set; }
        /// <summary>Escape character for quotes, can be the same as the quoteCharacter.</summary>
        string FormatQuoteEscapeCharacter { get; set; }
        /// <summary>The type mapping format.</summary>
        string FormatType { get; set; }
        /// <summary>If the file contains a header or not.</summary>
        bool? HasHeader { get; set; }
        /// <summary>Ingestion mapping information at property level.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IConnectorMappingStructure[] Structure { get; set; }

    }
}