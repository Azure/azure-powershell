// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426
{
    using static Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Extensions;

    /// <summary>Maps fields in Profile to their corresponding StrongIds in Related Profile.</summary>
    public partial class RelationshipTypeMapping :
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRelationshipTypeMapping,
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRelationshipTypeMappingInternal
    {

        /// <summary>Backing field for <see cref="FieldMapping" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRelationshipTypeFieldMapping[] _fieldMapping;

        /// <summary>
        /// Maps a profile property with the StrongId of related profile. This is an array to support StrongIds that are composite
        /// key as well.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRelationshipTypeFieldMapping[] FieldMapping { get => this._fieldMapping; set => this._fieldMapping = value; }

        /// <summary>Creates an new <see cref="RelationshipTypeMapping" /> instance.</summary>
        public RelationshipTypeMapping()
        {

        }
    }
    /// Maps fields in Profile to their corresponding StrongIds in Related Profile.
    public partial interface IRelationshipTypeMapping :
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Maps a profile property with the StrongId of related profile. This is an array to support StrongIds that are composite
        /// key as well.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Maps a profile property with the StrongId of related profile. This is an array to support StrongIds that are composite key as well.",
        SerializedName = @"fieldMappings",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRelationshipTypeFieldMapping) })]
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRelationshipTypeFieldMapping[] FieldMapping { get; set; }

    }
    /// Maps fields in Profile to their corresponding StrongIds in Related Profile.
    internal partial interface IRelationshipTypeMappingInternal

    {
        /// <summary>
        /// Maps a profile property with the StrongId of related profile. This is an array to support StrongIds that are composite
        /// key as well.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerInsights.Models.Api20170426.IRelationshipTypeFieldMapping[] FieldMapping { get; set; }

    }
}