// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Extensions;

    /// <summary>
    /// A Lockbox request response object, containing all information associated with the request.
    /// </summary>
    public partial class LockboxRequestResponse :
        Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponse,
        Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponseInternal
    {

        /// <summary>Access level for requested resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.PropertyOrigin.Inlined)]
        public string AccessLevel { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponsePropertiesInternal)Property).AccessLevel; }

        /// <summary>The creation time of the request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.PropertyOrigin.Inlined)]
        public global::System.DateTime? CreatedDateTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponsePropertiesInternal)Property).CreatedDateTime; }

        /// <summary>The duration of the request in hours.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.PropertyOrigin.Inlined)]
        public string Duration { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponsePropertiesInternal)Property).Duration; }

        /// <summary>The expiration time of the request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.PropertyOrigin.Inlined)]
        public global::System.DateTime? ExpirationDateTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponsePropertiesInternal)Property).ExpirationDateTime; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>The Arm resource id of the Lockbox request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.PropertyOrigin.Owned)]
        public string Id { get => this._id; }

        /// <summary>The justification of the requestor.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.PropertyOrigin.Inlined)]
        public string Justification { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponsePropertiesInternal)Property).Justification; }

        /// <summary>Internal Acessors for AccessLevel</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponseInternal.AccessLevel { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponsePropertiesInternal)Property).AccessLevel; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponsePropertiesInternal)Property).AccessLevel = value; }

        /// <summary>Internal Acessors for CreatedDateTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponseInternal.CreatedDateTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponsePropertiesInternal)Property).CreatedDateTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponsePropertiesInternal)Property).CreatedDateTime = value; }

        /// <summary>Internal Acessors for Duration</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponseInternal.Duration { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponsePropertiesInternal)Property).Duration; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponsePropertiesInternal)Property).Duration = value; }

        /// <summary>Internal Acessors for ExpirationDateTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponseInternal.ExpirationDateTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponsePropertiesInternal)Property).ExpirationDateTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponsePropertiesInternal)Property).ExpirationDateTime = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponseInternal.Id { get => this._id; set { {_id = value;} } }

        /// <summary>Internal Acessors for Justification</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponseInternal.Justification { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponsePropertiesInternal)Property).Justification; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponsePropertiesInternal)Property).Justification = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponseInternal.Name { get => this._name; set { {_name = value;} } }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponseProperties Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponseInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.LockboxRequestResponseProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for RequestId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponseInternal.RequestId { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponsePropertiesInternal)Property).RequestId; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponsePropertiesInternal)Property).RequestId = value; }

        /// <summary>Internal Acessors for ResourceId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponseInternal.ResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponsePropertiesInternal)Property).ResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponsePropertiesInternal)Property).ResourceId = value; }

        /// <summary>Internal Acessors for ResourceType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponseInternal.ResourceType { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponsePropertiesInternal)Property).ResourceType; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponsePropertiesInternal)Property).ResourceType = value; }

        /// <summary>Internal Acessors for SubscriptionId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponseInternal.SubscriptionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponsePropertiesInternal)Property).SubscriptionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponsePropertiesInternal)Property).SubscriptionId = value; }

        /// <summary>Internal Acessors for SupportCaseUrl</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponseInternal.SupportCaseUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponsePropertiesInternal)Property).SupportCaseUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponsePropertiesInternal)Property).SupportCaseUrl = value; }

        /// <summary>Internal Acessors for SupportRequest</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponseInternal.SupportRequest { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponsePropertiesInternal)Property).SupportRequest; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponsePropertiesInternal)Property).SupportRequest = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponseInternal.Type { get => this._type; set { {_type = value;} } }

        /// <summary>Internal Acessors for Workitemsource</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponseInternal.Workitemsource { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponsePropertiesInternal)Property).Workitemsource; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponsePropertiesInternal)Property).Workitemsource = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>The name of the Lockbox request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.PropertyOrigin.Owned)]
        public string Name { get => this._name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponseProperties _property;

        /// <summary>The properties that are associated with a lockbox request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponseProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.LockboxRequestResponseProperties()); set => this._property = value; }

        /// <summary>The Lockbox request ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.PropertyOrigin.Inlined)]
        public string RequestId { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponsePropertiesInternal)Property).RequestId; }

        /// <summary>A list of resource IDs associated with the Lockbox request separated by ','.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.PropertyOrigin.Inlined)]
        public string ResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponsePropertiesInternal)Property).ResourceId; }

        /// <summary>The resource type of the requested resources.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.PropertyOrigin.Inlined)]
        public string ResourceType { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponsePropertiesInternal)Property).ResourceType; }

        /// <summary>The status of the request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Support.Status? Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponsePropertiesInternal)Property).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponsePropertiesInternal)Property).Status = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Support.Status)""); }

        /// <summary>The subscription ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.PropertyOrigin.Inlined)]
        public string SubscriptionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponsePropertiesInternal)Property).SubscriptionId; }

        /// <summary>The url of the support case.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.PropertyOrigin.Inlined)]
        public string SupportCaseUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponsePropertiesInternal)Property).SupportCaseUrl; }

        /// <summary>The id of the support request associated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.PropertyOrigin.Inlined)]
        public string SupportRequest { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponsePropertiesInternal)Property).SupportRequest; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>The type of the Lockbox request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.PropertyOrigin.Owned)]
        public string Type { get => this._type; }

        /// <summary>The support case system that was used to initiate the request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Origin(Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.PropertyOrigin.Inlined)]
        public string Workitemsource { get => ((Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponsePropertiesInternal)Property).Workitemsource; }

        /// <summary>Creates an new <see cref="LockboxRequestResponse" /> instance.</summary>
        public LockboxRequestResponse()
        {

        }
    }
    /// A Lockbox request response object, containing all information associated with the request.
    public partial interface ILockboxRequestResponse :
        Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.IJsonSerializable
    {
        /// <summary>Access level for requested resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Access level for requested resource",
        SerializedName = @"accessLevel",
        PossibleTypes = new [] { typeof(string) })]
        string AccessLevel { get;  }
        /// <summary>The creation time of the request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The creation time of the request.",
        SerializedName = @"createdDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CreatedDateTime { get;  }
        /// <summary>The duration of the request in hours.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The duration of the request in hours.",
        SerializedName = @"duration",
        PossibleTypes = new [] { typeof(string) })]
        string Duration { get;  }
        /// <summary>The expiration time of the request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The expiration time of the request.",
        SerializedName = @"expirationDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ExpirationDateTime { get;  }
        /// <summary>The Arm resource id of the Lockbox request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The Arm resource id of the Lockbox request.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get;  }
        /// <summary>The justification of the requestor.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The justification of the requestor.",
        SerializedName = @"justification",
        PossibleTypes = new [] { typeof(string) })]
        string Justification { get;  }
        /// <summary>The name of the Lockbox request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of the Lockbox request.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get;  }
        /// <summary>The Lockbox request ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The Lockbox request ID.",
        SerializedName = @"requestId",
        PossibleTypes = new [] { typeof(string) })]
        string RequestId { get;  }
        /// <summary>A list of resource IDs associated with the Lockbox request separated by ','.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"A list of resource IDs associated with the Lockbox request separated by ','.",
        SerializedName = @"resourceIds",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceId { get;  }
        /// <summary>The resource type of the requested resources.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The resource type of the requested resources.",
        SerializedName = @"resourceType",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceType { get;  }
        /// <summary>The status of the request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The status of the request.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Support.Status) })]
        Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Support.Status? Status { get; set; }
        /// <summary>The subscription ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The subscription ID.",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionId { get;  }
        /// <summary>The url of the support case.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The url of the support case.",
        SerializedName = @"supportCaseUrl",
        PossibleTypes = new [] { typeof(string) })]
        string SupportCaseUrl { get;  }
        /// <summary>The id of the support request associated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The id of the support request associated.",
        SerializedName = @"supportRequest",
        PossibleTypes = new [] { typeof(string) })]
        string SupportRequest { get;  }
        /// <summary>The type of the Lockbox request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The type of the Lockbox request.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get;  }
        /// <summary>The support case system that was used to initiate the request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The support case system that was used to initiate the request.",
        SerializedName = @"workitemsource",
        PossibleTypes = new [] { typeof(string) })]
        string Workitemsource { get;  }

    }
    /// A Lockbox request response object, containing all information associated with the request.
    internal partial interface ILockboxRequestResponseInternal

    {
        /// <summary>Access level for requested resource</summary>
        string AccessLevel { get; set; }
        /// <summary>The creation time of the request.</summary>
        global::System.DateTime? CreatedDateTime { get; set; }
        /// <summary>The duration of the request in hours.</summary>
        string Duration { get; set; }
        /// <summary>The expiration time of the request.</summary>
        global::System.DateTime? ExpirationDateTime { get; set; }
        /// <summary>The Arm resource id of the Lockbox request.</summary>
        string Id { get; set; }
        /// <summary>The justification of the requestor.</summary>
        string Justification { get; set; }
        /// <summary>The name of the Lockbox request.</summary>
        string Name { get; set; }
        /// <summary>The properties that are associated with a lockbox request.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponseProperties Property { get; set; }
        /// <summary>The Lockbox request ID.</summary>
        string RequestId { get; set; }
        /// <summary>A list of resource IDs associated with the Lockbox request separated by ','.</summary>
        string ResourceId { get; set; }
        /// <summary>The resource type of the requested resources.</summary>
        string ResourceType { get; set; }
        /// <summary>The status of the request.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Support.Status? Status { get; set; }
        /// <summary>The subscription ID.</summary>
        string SubscriptionId { get; set; }
        /// <summary>The url of the support case.</summary>
        string SupportCaseUrl { get; set; }
        /// <summary>The id of the support request associated.</summary>
        string SupportRequest { get; set; }
        /// <summary>The type of the Lockbox request.</summary>
        string Type { get; set; }
        /// <summary>The support case system that was used to initiate the request.</summary>
        string Workitemsource { get; set; }

    }
}