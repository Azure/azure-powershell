// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Extensions;

    /// <summary>The properties that are associated with a lockbox request.</summary>
    public partial class LockboxRequestResponseProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json erialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponseProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponseProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Models.Api20180228Preview.ILockboxRequestResponseProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonObject json ? new LockboxRequestResponseProperties(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonObject into a new instance of <see cref="LockboxRequestResponseProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal LockboxRequestResponseProperties(Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_requestId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonString>("requestId"), out var __jsonRequestId) ? (string)__jsonRequestId : (string)RequestId;}
            {_justification = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonString>("justification"), out var __jsonJustification) ? (string)__jsonJustification : (string)Justification;}
            {_status = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonString>("status"), out var __jsonStatus) ? (string)__jsonStatus : (string)Status;}
            {_createdDateTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonString>("createdDateTime"), out var __jsonCreatedDateTime) ? global::System.DateTime.TryParse((string)__jsonCreatedDateTime, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonCreatedDateTimeValue) ? __jsonCreatedDateTimeValue : CreatedDateTime : CreatedDateTime;}
            {_expirationDateTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonString>("expirationDateTime"), out var __jsonExpirationDateTime) ? global::System.DateTime.TryParse((string)__jsonExpirationDateTime, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonExpirationDateTimeValue) ? __jsonExpirationDateTimeValue : ExpirationDateTime : ExpirationDateTime;}
            {_duration = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonString>("duration"), out var __jsonDuration) ? (string)__jsonDuration : (string)Duration;}
            {_resourceId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonString>("resourceIds"), out var __jsonResourceIds) ? (string)__jsonResourceIds : (string)ResourceId;}
            {_resourceType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonString>("resourceType"), out var __jsonResourceType) ? (string)__jsonResourceType : (string)ResourceType;}
            {_supportRequest = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonString>("supportRequest"), out var __jsonSupportRequest) ? (string)__jsonSupportRequest : (string)SupportRequest;}
            {_supportCaseUrl = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonString>("supportCaseUrl"), out var __jsonSupportCaseUrl) ? (string)__jsonSupportCaseUrl : (string)SupportCaseUrl;}
            {_workitemsource = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonString>("workitemsource"), out var __jsonWorkitemsource) ? (string)__jsonWorkitemsource : (string)Workitemsource;}
            {_subscriptionId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonString>("subscriptionId"), out var __jsonSubscriptionId) ? (string)__jsonSubscriptionId : (string)SubscriptionId;}
            {_accessLevel = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonString>("accessLevel"), out var __jsonAccessLevel) ? (string)__jsonAccessLevel : (string)AccessLevel;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="LockboxRequestResponseProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="LockboxRequestResponseProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._requestId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonString(this._requestId.ToString()) : null, "requestId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._justification)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonString(this._justification.ToString()) : null, "justification" ,container.Add );
            }
            AddIf( null != (((object)this._status)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonString(this._status.ToString()) : null, "status" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._createdDateTime ? (Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonString(this._createdDateTime?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "createdDateTime" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._expirationDateTime ? (Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonString(this._expirationDateTime?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "expirationDateTime" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._duration)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonString(this._duration.ToString()) : null, "duration" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._resourceId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonString(this._resourceId.ToString()) : null, "resourceIds" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._resourceType)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonString(this._resourceType.ToString()) : null, "resourceType" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._supportRequest)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonString(this._supportRequest.ToString()) : null, "supportRequest" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._supportCaseUrl)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonString(this._supportCaseUrl.ToString()) : null, "supportCaseUrl" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._workitemsource)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonString(this._workitemsource.ToString()) : null, "workitemsource" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._subscriptionId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonString(this._subscriptionId.ToString()) : null, "subscriptionId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._accessLevel)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CustomerLockbox.Runtime.Json.JsonString(this._accessLevel.ToString()) : null, "accessLevel" ,container.Add );
            }
            AfterToJson(ref container);
            return container;
        }
    }
}