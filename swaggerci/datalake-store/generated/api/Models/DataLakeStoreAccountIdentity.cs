// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Runtime.Extensions;

    public partial class DataLakeStoreAccountIdentity :
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.IDataLakeStoreAccountIdentity,
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.IDataLakeStoreAccountIdentityInternal
    {

        /// <summary>Backing field for <see cref="AccountName" /> property.</summary>
        private string _accountName;

        /// <summary>The name of the Data Lake Store account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.PropertyOrigin.Owned)]
        public string AccountName { get => this._accountName; set => this._accountName = value; }

        /// <summary>Backing field for <see cref="FirewallRuleName" /> property.</summary>
        private string _firewallRuleName;

        /// <summary>The name of the firewall rule to create or update.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.PropertyOrigin.Owned)]
        public string FirewallRuleName { get => this._firewallRuleName; set => this._firewallRuleName = value; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>Resource identity path</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.PropertyOrigin.Owned)]
        public string Id { get => this._id; set => this._id = value; }

        /// <summary>Backing field for <see cref="Location" /> property.</summary>
        private string _location;

        /// <summary>The resource location without whitespace.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.PropertyOrigin.Owned)]
        public string Location { get => this._location; set => this._location = value; }

        /// <summary>Backing field for <see cref="ResourceGroupName" /> property.</summary>
        private string _resourceGroupName;

        /// <summary>The name of the Azure resource group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.PropertyOrigin.Owned)]
        public string ResourceGroupName { get => this._resourceGroupName; set => this._resourceGroupName = value; }

        /// <summary>Backing field for <see cref="SubscriptionId" /> property.</summary>
        private string _subscriptionId;

        /// <summary>
        /// Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of
        /// the URI for every service call.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.PropertyOrigin.Owned)]
        public string SubscriptionId { get => this._subscriptionId; set => this._subscriptionId = value; }

        /// <summary>Backing field for <see cref="TrustedIdProviderName" /> property.</summary>
        private string _trustedIdProviderName;

        /// <summary>
        /// The name of the trusted identity provider. This is used for differentiation of providers in the account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.PropertyOrigin.Owned)]
        public string TrustedIdProviderName { get => this._trustedIdProviderName; set => this._trustedIdProviderName = value; }

        /// <summary>Backing field for <see cref="VirtualNetworkRuleName" /> property.</summary>
        private string _virtualNetworkRuleName;

        /// <summary>The name of the virtual network rule to create or update.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.PropertyOrigin.Owned)]
        public string VirtualNetworkRuleName { get => this._virtualNetworkRuleName; set => this._virtualNetworkRuleName = value; }

        /// <summary>Creates an new <see cref="DataLakeStoreAccountIdentity" /> instance.</summary>
        public DataLakeStoreAccountIdentity()
        {

        }
    }
    public partial interface IDataLakeStoreAccountIdentity :
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Runtime.IJsonSerializable
    {
        /// <summary>The name of the Data Lake Store account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the Data Lake Store account.",
        SerializedName = @"accountName",
        PossibleTypes = new [] { typeof(string) })]
        string AccountName { get; set; }
        /// <summary>The name of the firewall rule to create or update.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the firewall rule to create or update.",
        SerializedName = @"firewallRuleName",
        PossibleTypes = new [] { typeof(string) })]
        string FirewallRuleName { get; set; }
        /// <summary>Resource identity path</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource identity path",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get; set; }
        /// <summary>The resource location without whitespace.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource location without whitespace.",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string Location { get; set; }
        /// <summary>The name of the Azure resource group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the Azure resource group.",
        SerializedName = @"resourceGroupName",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceGroupName { get; set; }
        /// <summary>
        /// Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of
        /// the URI for every service call.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionId { get; set; }
        /// <summary>
        /// The name of the trusted identity provider. This is used for differentiation of providers in the account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the trusted identity provider. This is used for differentiation of providers in the account.",
        SerializedName = @"trustedIdProviderName",
        PossibleTypes = new [] { typeof(string) })]
        string TrustedIdProviderName { get; set; }
        /// <summary>The name of the virtual network rule to create or update.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the virtual network rule to create or update.",
        SerializedName = @"virtualNetworkRuleName",
        PossibleTypes = new [] { typeof(string) })]
        string VirtualNetworkRuleName { get; set; }

    }
    internal partial interface IDataLakeStoreAccountIdentityInternal

    {
        /// <summary>The name of the Data Lake Store account.</summary>
        string AccountName { get; set; }
        /// <summary>The name of the firewall rule to create or update.</summary>
        string FirewallRuleName { get; set; }
        /// <summary>Resource identity path</summary>
        string Id { get; set; }
        /// <summary>The resource location without whitespace.</summary>
        string Location { get; set; }
        /// <summary>The name of the Azure resource group.</summary>
        string ResourceGroupName { get; set; }
        /// <summary>
        /// Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of
        /// the URI for every service call.
        /// </summary>
        string SubscriptionId { get; set; }
        /// <summary>
        /// The name of the trusted identity provider. This is used for differentiation of providers in the account.
        /// </summary>
        string TrustedIdProviderName { get; set; }
        /// <summary>The name of the virtual network rule to create or update.</summary>
        string VirtualNetworkRuleName { get; set; }

    }
}