// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101
{
    using Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Runtime.PowerShell;

    [System.ComponentModel.TypeConverter(typeof(CreateDataLakeStoreAccountPropertiesTypeConverter))]
    public partial class CreateDataLakeStoreAccountProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.CreateDataLakeStoreAccountProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal CreateDataLakeStoreAccountProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("EncryptionConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).EncryptionConfig = (Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.IEncryptionConfig) content.GetValueForProperty("EncryptionConfig",((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).EncryptionConfig, Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.EncryptionConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("DefaultGroup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).DefaultGroup = (string) content.GetValueForProperty("DefaultGroup",((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).DefaultGroup, global::System.Convert.ToString);
            }
            if (content.Contains("EncryptionState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).EncryptionState = (Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Support.EncryptionState?) content.GetValueForProperty("EncryptionState",((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).EncryptionState, Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Support.EncryptionState.CreateFrom);
            }
            if (content.Contains("FirewallRule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).FirewallRule = (Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateFirewallRuleWithAccountParameters[]) content.GetValueForProperty("FirewallRule",((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).FirewallRule, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateFirewallRuleWithAccountParameters>(__y, Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.CreateFirewallRuleWithAccountParametersTypeConverter.ConvertFrom));
            }
            if (content.Contains("VirtualNetworkRule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).VirtualNetworkRule = (Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateVirtualNetworkRuleWithAccountParameters[]) content.GetValueForProperty("VirtualNetworkRule",((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).VirtualNetworkRule, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateVirtualNetworkRuleWithAccountParameters>(__y, Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.CreateVirtualNetworkRuleWithAccountParametersTypeConverter.ConvertFrom));
            }
            if (content.Contains("FirewallState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).FirewallState = (Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Support.FirewallState?) content.GetValueForProperty("FirewallState",((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).FirewallState, Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Support.FirewallState.CreateFrom);
            }
            if (content.Contains("FirewallAllowAzureIP"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).FirewallAllowAzureIP = (Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Support.FirewallAllowAzureIpsState?) content.GetValueForProperty("FirewallAllowAzureIP",((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).FirewallAllowAzureIP, Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Support.FirewallAllowAzureIpsState.CreateFrom);
            }
            if (content.Contains("TrustedIdProvider"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).TrustedIdProvider = (Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateTrustedIdProviderWithAccountParameters[]) content.GetValueForProperty("TrustedIdProvider",((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).TrustedIdProvider, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateTrustedIdProviderWithAccountParameters>(__y, Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.CreateTrustedIdProviderWithAccountParametersTypeConverter.ConvertFrom));
            }
            if (content.Contains("TrustedIdProviderState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).TrustedIdProviderState = (Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Support.TrustedIdProviderState?) content.GetValueForProperty("TrustedIdProviderState",((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).TrustedIdProviderState, Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Support.TrustedIdProviderState.CreateFrom);
            }
            if (content.Contains("NewTier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).NewTier = (Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Support.TierType?) content.GetValueForProperty("NewTier",((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).NewTier, Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Support.TierType.CreateFrom);
            }
            if (content.Contains("EncryptionConfigType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).EncryptionConfigType = (Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Support.EncryptionConfigType) content.GetValueForProperty("EncryptionConfigType",((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).EncryptionConfigType, Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Support.EncryptionConfigType.CreateFrom);
            }
            if (content.Contains("EncryptionConfigKeyVaultMetaInfo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).EncryptionConfigKeyVaultMetaInfo = (Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.IKeyVaultMetaInfo) content.GetValueForProperty("EncryptionConfigKeyVaultMetaInfo",((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).EncryptionConfigKeyVaultMetaInfo, Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.KeyVaultMetaInfoTypeConverter.ConvertFrom);
            }
            if (content.Contains("KeyVaultMetaInfoKeyVaultResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).KeyVaultMetaInfoKeyVaultResourceId = (string) content.GetValueForProperty("KeyVaultMetaInfoKeyVaultResourceId",((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).KeyVaultMetaInfoKeyVaultResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("KeyVaultMetaInfoEncryptionKeyName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).KeyVaultMetaInfoEncryptionKeyName = (string) content.GetValueForProperty("KeyVaultMetaInfoEncryptionKeyName",((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).KeyVaultMetaInfoEncryptionKeyName, global::System.Convert.ToString);
            }
            if (content.Contains("KeyVaultMetaInfoEncryptionKeyVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).KeyVaultMetaInfoEncryptionKeyVersion = (string) content.GetValueForProperty("KeyVaultMetaInfoEncryptionKeyVersion",((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).KeyVaultMetaInfoEncryptionKeyVersion, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.CreateDataLakeStoreAccountProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal CreateDataLakeStoreAccountProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("EncryptionConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).EncryptionConfig = (Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.IEncryptionConfig) content.GetValueForProperty("EncryptionConfig",((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).EncryptionConfig, Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.EncryptionConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("DefaultGroup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).DefaultGroup = (string) content.GetValueForProperty("DefaultGroup",((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).DefaultGroup, global::System.Convert.ToString);
            }
            if (content.Contains("EncryptionState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).EncryptionState = (Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Support.EncryptionState?) content.GetValueForProperty("EncryptionState",((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).EncryptionState, Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Support.EncryptionState.CreateFrom);
            }
            if (content.Contains("FirewallRule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).FirewallRule = (Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateFirewallRuleWithAccountParameters[]) content.GetValueForProperty("FirewallRule",((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).FirewallRule, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateFirewallRuleWithAccountParameters>(__y, Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.CreateFirewallRuleWithAccountParametersTypeConverter.ConvertFrom));
            }
            if (content.Contains("VirtualNetworkRule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).VirtualNetworkRule = (Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateVirtualNetworkRuleWithAccountParameters[]) content.GetValueForProperty("VirtualNetworkRule",((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).VirtualNetworkRule, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateVirtualNetworkRuleWithAccountParameters>(__y, Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.CreateVirtualNetworkRuleWithAccountParametersTypeConverter.ConvertFrom));
            }
            if (content.Contains("FirewallState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).FirewallState = (Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Support.FirewallState?) content.GetValueForProperty("FirewallState",((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).FirewallState, Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Support.FirewallState.CreateFrom);
            }
            if (content.Contains("FirewallAllowAzureIP"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).FirewallAllowAzureIP = (Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Support.FirewallAllowAzureIpsState?) content.GetValueForProperty("FirewallAllowAzureIP",((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).FirewallAllowAzureIP, Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Support.FirewallAllowAzureIpsState.CreateFrom);
            }
            if (content.Contains("TrustedIdProvider"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).TrustedIdProvider = (Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateTrustedIdProviderWithAccountParameters[]) content.GetValueForProperty("TrustedIdProvider",((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).TrustedIdProvider, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateTrustedIdProviderWithAccountParameters>(__y, Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.CreateTrustedIdProviderWithAccountParametersTypeConverter.ConvertFrom));
            }
            if (content.Contains("TrustedIdProviderState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).TrustedIdProviderState = (Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Support.TrustedIdProviderState?) content.GetValueForProperty("TrustedIdProviderState",((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).TrustedIdProviderState, Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Support.TrustedIdProviderState.CreateFrom);
            }
            if (content.Contains("NewTier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).NewTier = (Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Support.TierType?) content.GetValueForProperty("NewTier",((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).NewTier, Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Support.TierType.CreateFrom);
            }
            if (content.Contains("EncryptionConfigType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).EncryptionConfigType = (Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Support.EncryptionConfigType) content.GetValueForProperty("EncryptionConfigType",((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).EncryptionConfigType, Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Support.EncryptionConfigType.CreateFrom);
            }
            if (content.Contains("EncryptionConfigKeyVaultMetaInfo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).EncryptionConfigKeyVaultMetaInfo = (Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.IKeyVaultMetaInfo) content.GetValueForProperty("EncryptionConfigKeyVaultMetaInfo",((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).EncryptionConfigKeyVaultMetaInfo, Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.KeyVaultMetaInfoTypeConverter.ConvertFrom);
            }
            if (content.Contains("KeyVaultMetaInfoKeyVaultResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).KeyVaultMetaInfoKeyVaultResourceId = (string) content.GetValueForProperty("KeyVaultMetaInfoKeyVaultResourceId",((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).KeyVaultMetaInfoKeyVaultResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("KeyVaultMetaInfoEncryptionKeyName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).KeyVaultMetaInfoEncryptionKeyName = (string) content.GetValueForProperty("KeyVaultMetaInfoEncryptionKeyName",((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).KeyVaultMetaInfoEncryptionKeyName, global::System.Convert.ToString);
            }
            if (content.Contains("KeyVaultMetaInfoEncryptionKeyVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).KeyVaultMetaInfoEncryptionKeyVersion = (string) content.GetValueForProperty("KeyVaultMetaInfoEncryptionKeyVersion",((Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountPropertiesInternal)this).KeyVaultMetaInfoEncryptionKeyVersion, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.CreateDataLakeStoreAccountProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new CreateDataLakeStoreAccountProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.CreateDataLakeStoreAccountProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new CreateDataLakeStoreAccountProperties(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="CreateDataLakeStoreAccountProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="className" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Models.Api20161101.ICreateDataLakeStoreAccountProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.DataLakeStoreAccount.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    [System.ComponentModel.TypeConverter(typeof(CreateDataLakeStoreAccountPropertiesTypeConverter))]
    public partial interface ICreateDataLakeStoreAccountProperties

    {

    }
}