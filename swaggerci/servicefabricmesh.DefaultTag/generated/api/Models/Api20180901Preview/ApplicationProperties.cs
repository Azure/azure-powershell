// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Extensions;

    /// <summary>Describes properties of a application resource.</summary>
    public partial class ApplicationProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationPropertiesInternal
    {

        /// <summary>Backing field for <see cref="DebugParam" /> property.</summary>
        private string _debugParam;

        /// <summary>
        /// Internal - used by Visual Studio to setup the debugging session on the local development environment.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Owned)]
        public string DebugParam { get => this._debugParam; set => this._debugParam = value; }

        /// <summary>Backing field for <see cref="Description" /> property.</summary>
        private string _description;

        /// <summary>User readable description of the application.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Owned)]
        public string Description { get => this._description; set => this._description = value; }

        /// <summary>Backing field for <see cref="Diagnostic" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IDiagnosticsDescription _diagnostic;

        /// <summary>Describes the diagnostics definition and usage for an application resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IDiagnosticsDescription Diagnostic { get => (this._diagnostic = this._diagnostic ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.DiagnosticsDescription()); set => this._diagnostic = value; }

        /// <summary>
        /// The sinks to be used if diagnostics is enabled. Sink choices can be overridden at the service and code package level.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inlined)]
        public string[] DiagnosticDefaultSinkRef { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IDiagnosticsDescriptionInternal)Diagnostic).DefaultSinkRef; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IDiagnosticsDescriptionInternal)Diagnostic).DefaultSinkRef = value ?? null /* arrayOf */; }

        /// <summary>Status of whether or not sinks are enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inlined)]
        public bool? DiagnosticEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IDiagnosticsDescriptionInternal)Diagnostic).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IDiagnosticsDescriptionInternal)Diagnostic).Enabled = value ?? default(bool); }

        /// <summary>List of supported sinks that can be referenced.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IDiagnosticsSinkProperties[] DiagnosticSink { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IDiagnosticsDescriptionInternal)Diagnostic).Sink; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IDiagnosticsDescriptionInternal)Diagnostic).Sink = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="HealthState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Support.HealthState? _healthState;

        /// <summary>Describes the health state of an application resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Support.HealthState? HealthState { get => this._healthState; }

        /// <summary>Internal Acessors for Diagnostic</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IDiagnosticsDescription Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationPropertiesInternal.Diagnostic { get => (this._diagnostic = this._diagnostic ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.DiagnosticsDescription()); set { {_diagnostic = value;} } }

        /// <summary>Internal Acessors for HealthState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Support.HealthState? Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationPropertiesInternal.HealthState { get => this._healthState; set { {_healthState = value;} } }

        /// <summary>Internal Acessors for ServiceName</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationPropertiesInternal.ServiceName { get => this._serviceName; set { {_serviceName = value;} } }

        /// <summary>Internal Acessors for Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Support.ResourceStatus? Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationPropertiesInternal.Status { get => this._status; set { {_status = value;} } }

        /// <summary>Internal Acessors for StatusDetail</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationPropertiesInternal.StatusDetail { get => this._statusDetail; set { {_statusDetail = value;} } }

        /// <summary>Internal Acessors for UnhealthyEvaluation</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationPropertiesInternal.UnhealthyEvaluation { get => this._unhealthyEvaluation; set { {_unhealthyEvaluation = value;} } }

        /// <summary>Backing field for <see cref="Service" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServiceResourceDescription[] _service;

        /// <summary>
        /// Describes the services in the application. This property is used to create or modify services of the application. On get
        /// only the name of the service is returned. The service description can be obtained by querying for the service resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServiceResourceDescription[] Service { get => this._service; set => this._service = value; }

        /// <summary>Backing field for <see cref="ServiceName" /> property.</summary>
        private string[] _serviceName;

        /// <summary>Names of the services in the application.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Owned)]
        public string[] ServiceName { get => this._serviceName; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Support.ResourceStatus? _status;

        /// <summary>Status of the application.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Support.ResourceStatus? Status { get => this._status; }

        /// <summary>Backing field for <see cref="StatusDetail" /> property.</summary>
        private string _statusDetail;

        /// <summary>Gives additional information about the current status of the application.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Owned)]
        public string StatusDetail { get => this._statusDetail; }

        /// <summary>Backing field for <see cref="UnhealthyEvaluation" /> property.</summary>
        private string _unhealthyEvaluation;

        /// <summary>
        /// When the application's health state is not 'Ok', this additional details from service fabric Health Manager for the user
        /// to know why the application is marked unhealthy.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Owned)]
        public string UnhealthyEvaluation { get => this._unhealthyEvaluation; }

        /// <summary>Creates an new <see cref="ApplicationProperties" /> instance.</summary>
        public ApplicationProperties()
        {

        }
    }
    /// Describes properties of a application resource.
    public partial interface IApplicationProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Internal - used by Visual Studio to setup the debugging session on the local development environment.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Internal - used by Visual Studio to setup the debugging session on the local development environment.",
        SerializedName = @"debugParams",
        PossibleTypes = new [] { typeof(string) })]
        string DebugParam { get; set; }
        /// <summary>User readable description of the application.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"User readable description of the application.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>
        /// The sinks to be used if diagnostics is enabled. Sink choices can be overridden at the service and code package level.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The sinks to be used if diagnostics is enabled. Sink choices can be overridden at the service and code package level.",
        SerializedName = @"defaultSinkRefs",
        PossibleTypes = new [] { typeof(string) })]
        string[] DiagnosticDefaultSinkRef { get; set; }
        /// <summary>Status of whether or not sinks are enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Status of whether or not sinks are enabled.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DiagnosticEnabled { get; set; }
        /// <summary>List of supported sinks that can be referenced.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of supported sinks that can be referenced.",
        SerializedName = @"sinks",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IDiagnosticsSinkProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IDiagnosticsSinkProperties[] DiagnosticSink { get; set; }
        /// <summary>Describes the health state of an application resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Describes the health state of an application resource.",
        SerializedName = @"healthState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Support.HealthState) })]
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Support.HealthState? HealthState { get;  }
        /// <summary>
        /// Describes the services in the application. This property is used to create or modify services of the application. On get
        /// only the name of the service is returned. The service description can be obtained by querying for the service resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Describes the services in the application. This property is used to create or modify services of the application. On get only the name of the service is returned. The service description can be obtained by querying for the service resource.",
        SerializedName = @"services",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServiceResourceDescription) })]
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServiceResourceDescription[] Service { get; set; }
        /// <summary>Names of the services in the application.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Names of the services in the application.",
        SerializedName = @"serviceNames",
        PossibleTypes = new [] { typeof(string) })]
        string[] ServiceName { get;  }
        /// <summary>Status of the application.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Status of the application.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Support.ResourceStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Support.ResourceStatus? Status { get;  }
        /// <summary>Gives additional information about the current status of the application.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gives additional information about the current status of the application.",
        SerializedName = @"statusDetails",
        PossibleTypes = new [] { typeof(string) })]
        string StatusDetail { get;  }
        /// <summary>
        /// When the application's health state is not 'Ok', this additional details from service fabric Health Manager for the user
        /// to know why the application is marked unhealthy.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"When the application's health state is not 'Ok', this additional details from service fabric Health Manager for the user to know why the application is marked unhealthy.",
        SerializedName = @"unhealthyEvaluation",
        PossibleTypes = new [] { typeof(string) })]
        string UnhealthyEvaluation { get;  }

    }
    /// Describes properties of a application resource.
    internal partial interface IApplicationPropertiesInternal

    {
        /// <summary>
        /// Internal - used by Visual Studio to setup the debugging session on the local development environment.
        /// </summary>
        string DebugParam { get; set; }
        /// <summary>User readable description of the application.</summary>
        string Description { get; set; }
        /// <summary>Describes the diagnostics definition and usage for an application resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IDiagnosticsDescription Diagnostic { get; set; }
        /// <summary>
        /// The sinks to be used if diagnostics is enabled. Sink choices can be overridden at the service and code package level.
        /// </summary>
        string[] DiagnosticDefaultSinkRef { get; set; }
        /// <summary>Status of whether or not sinks are enabled.</summary>
        bool? DiagnosticEnabled { get; set; }
        /// <summary>List of supported sinks that can be referenced.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IDiagnosticsSinkProperties[] DiagnosticSink { get; set; }
        /// <summary>Describes the health state of an application resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Support.HealthState? HealthState { get; set; }
        /// <summary>
        /// Describes the services in the application. This property is used to create or modify services of the application. On get
        /// only the name of the service is returned. The service description can be obtained by querying for the service resource.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServiceResourceDescription[] Service { get; set; }
        /// <summary>Names of the services in the application.</summary>
        string[] ServiceName { get; set; }
        /// <summary>Status of the application.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Support.ResourceStatus? Status { get; set; }
        /// <summary>Gives additional information about the current status of the application.</summary>
        string StatusDetail { get; set; }
        /// <summary>
        /// When the application's health state is not 'Ok', this additional details from service fabric Health Manager for the user
        /// to know why the application is marked unhealthy.
        /// </summary>
        string UnhealthyEvaluation { get; set; }

    }
}