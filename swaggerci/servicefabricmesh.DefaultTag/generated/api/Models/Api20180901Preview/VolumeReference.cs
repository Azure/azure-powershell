// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Extensions;

    /// <summary>Describes a reference to a volume resource.</summary>
    public partial class VolumeReference :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IVolumeReference,
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IVolumeReferenceInternal
    {

        /// <summary>Backing field for <see cref="DestinationPath" /> property.</summary>
        private string _destinationPath;

        /// <summary>
        /// The path within the container at which the volume should be mounted. Only valid path characters are allowed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Owned)]
        public string DestinationPath { get => this._destinationPath; set => this._destinationPath = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Name of the volume being referenced.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="ReadOnly" /> property.</summary>
        private bool? _readOnly;

        /// <summary>The flag indicating whether the volume is read only. Default is 'false'.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Owned)]
        public bool? ReadOnly { get => this._readOnly; set => this._readOnly = value; }

        /// <summary>Creates an new <see cref="VolumeReference" /> instance.</summary>
        public VolumeReference()
        {

        }
    }
    /// Describes a reference to a volume resource.
    public partial interface IVolumeReference :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The path within the container at which the volume should be mounted. Only valid path characters are allowed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The path within the container at which the volume should be mounted. Only valid path characters are allowed.",
        SerializedName = @"destinationPath",
        PossibleTypes = new [] { typeof(string) })]
        string DestinationPath { get; set; }
        /// <summary>Name of the volume being referenced.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Name of the volume being referenced.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>The flag indicating whether the volume is read only. Default is 'false'.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The flag indicating whether the volume is read only. Default is 'false'.",
        SerializedName = @"readOnly",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ReadOnly { get; set; }

    }
    /// Describes a reference to a volume resource.
    internal partial interface IVolumeReferenceInternal

    {
        /// <summary>
        /// The path within the container at which the volume should be mounted. Only valid path characters are allowed.
        /// </summary>
        string DestinationPath { get; set; }
        /// <summary>Name of the volume being referenced.</summary>
        string Name { get; set; }
        /// <summary>The flag indicating whether the volume is read only. Default is 'false'.</summary>
        bool? ReadOnly { get; set; }

    }
}