// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Extensions;

    /// <summary>Defines the resource properties.</summary>
    public partial class OSProfile :
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IOSProfile,
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IOSProfileInternal
    {

        /// <summary>Backing field for <see cref="AdminPassword" /> property.</summary>
        private string _adminPassword;

        /// <summary>Gets or sets administrator password.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public string AdminPassword { get => this._adminPassword; set => this._adminPassword = value; }

        /// <summary>Backing field for <see cref="AdminUsername" /> property.</summary>
        private string _adminUsername;

        /// <summary>Gets or sets administrator username.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public string AdminUsername { get => this._adminUsername; set => this._adminUsername = value; }

        /// <summary>Backing field for <see cref="ComputerName" /> property.</summary>
        private string _computerName;

        /// <summary>Gets or sets computer name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public string ComputerName { get => this._computerName; set => this._computerName = value; }

        /// <summary>Internal Acessors for OSName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IOSProfileInternal.OSName { get => this._oSName; set { {_oSName = value;} } }

        /// <summary>Internal Acessors for ToolsRunningStatus</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IOSProfileInternal.ToolsRunningStatus { get => this._toolsRunningStatus; set { {_toolsRunningStatus = value;} } }

        /// <summary>Internal Acessors for ToolsVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IOSProfileInternal.ToolsVersion { get => this._toolsVersion; set { {_toolsVersion = value;} } }

        /// <summary>Internal Acessors for ToolsVersionStatus</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IOSProfileInternal.ToolsVersionStatus { get => this._toolsVersionStatus; set { {_toolsVersionStatus = value;} } }

        /// <summary>Backing field for <see cref="OSName" /> property.</summary>
        private string _oSName;

        /// <summary>Gets or sets os name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public string OSName { get => this._oSName; }

        /// <summary>Backing field for <see cref="OSType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.OSType? _oSType;

        /// <summary>Gets or sets the type of the os.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.OSType? OSType { get => this._oSType; set => this._oSType = value; }

        /// <summary>Backing field for <see cref="ToolsRunningStatus" /> property.</summary>
        private string _toolsRunningStatus;

        /// <summary>
        /// Gets or sets the current running status of VMware Tools running in the guest operating system.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public string ToolsRunningStatus { get => this._toolsRunningStatus; }

        /// <summary>Backing field for <see cref="ToolsVersion" /> property.</summary>
        private string _toolsVersion;

        /// <summary>Gets or sets the current version of VMware Tools.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public string ToolsVersion { get => this._toolsVersion; }

        /// <summary>Backing field for <see cref="ToolsVersionStatus" /> property.</summary>
        private string _toolsVersionStatus;

        /// <summary>
        /// Gets or sets the current version status of VMware Tools installed in the guest operating system.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public string ToolsVersionStatus { get => this._toolsVersionStatus; }

        /// <summary>Creates an new <see cref="OSProfile" /> instance.</summary>
        public OSProfile()
        {

        }
    }
    /// Defines the resource properties.
    public partial interface IOSProfile :
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.IJsonSerializable
    {
        /// <summary>Gets or sets administrator password.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets or sets administrator password.",
        SerializedName = @"adminPassword",
        PossibleTypes = new [] { typeof(string) })]
        string AdminPassword { get; set; }
        /// <summary>Gets or sets administrator username.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets or sets administrator username.",
        SerializedName = @"adminUsername",
        PossibleTypes = new [] { typeof(string) })]
        string AdminUsername { get; set; }
        /// <summary>Gets or sets computer name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets or sets computer name.",
        SerializedName = @"computerName",
        PossibleTypes = new [] { typeof(string) })]
        string ComputerName { get; set; }
        /// <summary>Gets or sets os name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets os name.",
        SerializedName = @"osName",
        PossibleTypes = new [] { typeof(string) })]
        string OSName { get;  }
        /// <summary>Gets or sets the type of the os.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets or sets the type of the os.",
        SerializedName = @"osType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.OSType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.OSType? OSType { get; set; }
        /// <summary>
        /// Gets or sets the current running status of VMware Tools running in the guest operating system.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets the current running status of VMware Tools running in the guest operating system.",
        SerializedName = @"toolsRunningStatus",
        PossibleTypes = new [] { typeof(string) })]
        string ToolsRunningStatus { get;  }
        /// <summary>Gets or sets the current version of VMware Tools.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets the current version of VMware Tools.",
        SerializedName = @"toolsVersion",
        PossibleTypes = new [] { typeof(string) })]
        string ToolsVersion { get;  }
        /// <summary>
        /// Gets or sets the current version status of VMware Tools installed in the guest operating system.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets the current version status of VMware Tools installed in the guest operating system.",
        SerializedName = @"toolsVersionStatus",
        PossibleTypes = new [] { typeof(string) })]
        string ToolsVersionStatus { get;  }

    }
    /// Defines the resource properties.
    internal partial interface IOSProfileInternal

    {
        /// <summary>Gets or sets administrator password.</summary>
        string AdminPassword { get; set; }
        /// <summary>Gets or sets administrator username.</summary>
        string AdminUsername { get; set; }
        /// <summary>Gets or sets computer name.</summary>
        string ComputerName { get; set; }
        /// <summary>Gets or sets os name.</summary>
        string OSName { get; set; }
        /// <summary>Gets or sets the type of the os.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.OSType? OSType { get; set; }
        /// <summary>
        /// Gets or sets the current running status of VMware Tools running in the guest operating system.
        /// </summary>
        string ToolsRunningStatus { get; set; }
        /// <summary>Gets or sets the current version of VMware Tools.</summary>
        string ToolsVersion { get; set; }
        /// <summary>
        /// Gets or sets the current version status of VMware Tools installed in the guest operating system.
        /// </summary>
        string ToolsVersionStatus { get; set; }

    }
}