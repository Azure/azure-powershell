// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Extensions;

    /// <summary>Defines the resource properties.</summary>
    public partial class VCenterProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVCenterProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVCenterPropertiesInternal
    {

        /// <summary>Backing field for <see cref="ConnectionStatus" /> property.</summary>
        private string _connectionStatus;

        /// <summary>Gets or sets the connection status to the vCenter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public string ConnectionStatus { get => this._connectionStatus; }

        /// <summary>Backing field for <see cref="Credentials" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IViCredential _credentials;

        /// <summary>Username / Password Credentials to connect to vcenter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IViCredential Credentials { get => (this._credentials = this._credentials ?? new Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.ViCredential()); set => this._credentials = value; }

        /// <summary>Gets or sets the password to connect with the vCenter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Inlined)]
        public string CredentialsPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IViCredentialInternal)Credentials).Password; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IViCredentialInternal)Credentials).Password = value ?? null; }

        /// <summary>Gets or sets username to connect with the vCenter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Inlined)]
        public string CredentialsUsername { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IViCredentialInternal)Credentials).Username; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IViCredentialInternal)Credentials).Username = value ?? null; }

        /// <summary>Backing field for <see cref="CustomResourceName" /> property.</summary>
        private string _customResourceName;

        /// <summary>Gets the name of the corresponding resource in Kubernetes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public string CustomResourceName { get => this._customResourceName; }

        /// <summary>Backing field for <see cref="Fqdn" /> property.</summary>
        private string _fqdn;

        /// <summary>Gets or sets the FQDN/IPAddress of the vCenter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public string Fqdn { get => this._fqdn; set => this._fqdn = value; }

        /// <summary>Backing field for <see cref="InstanceUuid" /> property.</summary>
        private string _instanceUuid;

        /// <summary>Gets or sets the instance UUID of the vCenter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public string InstanceUuid { get => this._instanceUuid; }

        /// <summary>Internal Acessors for ConnectionStatus</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVCenterPropertiesInternal.ConnectionStatus { get => this._connectionStatus; set { {_connectionStatus = value;} } }

        /// <summary>Internal Acessors for Credentials</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IViCredential Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVCenterPropertiesInternal.Credentials { get => (this._credentials = this._credentials ?? new Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.ViCredential()); set { {_credentials = value;} } }

        /// <summary>Internal Acessors for CustomResourceName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVCenterPropertiesInternal.CustomResourceName { get => this._customResourceName; set { {_customResourceName = value;} } }

        /// <summary>Internal Acessors for InstanceUuid</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVCenterPropertiesInternal.InstanceUuid { get => this._instanceUuid; set { {_instanceUuid = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVCenterPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for Statuses</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IResourceStatus[] Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVCenterPropertiesInternal.Statuses { get => this._statuses; set { {_statuses = value;} } }

        /// <summary>Internal Acessors for Uuid</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVCenterPropertiesInternal.Uuid { get => this._uuid; set { {_uuid = value;} } }

        /// <summary>Internal Acessors for Version</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVCenterPropertiesInternal.Version { get => this._version; set { {_version = value;} } }

        /// <summary>Backing field for <see cref="Port" /> property.</summary>
        private int? _port;

        /// <summary>Gets or sets the port of the vCenter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public int? Port { get => this._port; set => this._port = value; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>Gets or sets the provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="Statuses" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IResourceStatus[] _statuses;

        /// <summary>The resource status information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IResourceStatus[] Statuses { get => this._statuses; }

        /// <summary>Backing field for <see cref="Uuid" /> property.</summary>
        private string _uuid;

        /// <summary>Gets or sets a unique identifier for this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public string Uuid { get => this._uuid; }

        /// <summary>Backing field for <see cref="Version" /> property.</summary>
        private string _version;

        /// <summary>Gets or sets the version of the vCenter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public string Version { get => this._version; }

        /// <summary>Creates an new <see cref="VCenterProperties" /> instance.</summary>
        public VCenterProperties()
        {

        }
    }
    /// Defines the resource properties.
    public partial interface IVCenterProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.IJsonSerializable
    {
        /// <summary>Gets or sets the connection status to the vCenter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets the connection status to the vCenter.",
        SerializedName = @"connectionStatus",
        PossibleTypes = new [] { typeof(string) })]
        string ConnectionStatus { get;  }
        /// <summary>Gets or sets the password to connect with the vCenter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets or sets the password to connect with the vCenter.",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(string) })]
        string CredentialsPassword { get; set; }
        /// <summary>Gets or sets username to connect with the vCenter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets or sets username to connect with the vCenter.",
        SerializedName = @"username",
        PossibleTypes = new [] { typeof(string) })]
        string CredentialsUsername { get; set; }
        /// <summary>Gets the name of the corresponding resource in Kubernetes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets the name of the corresponding resource in Kubernetes.",
        SerializedName = @"customResourceName",
        PossibleTypes = new [] { typeof(string) })]
        string CustomResourceName { get;  }
        /// <summary>Gets or sets the FQDN/IPAddress of the vCenter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Gets or sets the FQDN/IPAddress of the vCenter.",
        SerializedName = @"fqdn",
        PossibleTypes = new [] { typeof(string) })]
        string Fqdn { get; set; }
        /// <summary>Gets or sets the instance UUID of the vCenter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets the instance UUID of the vCenter.",
        SerializedName = @"instanceUuid",
        PossibleTypes = new [] { typeof(string) })]
        string InstanceUuid { get;  }
        /// <summary>Gets or sets the port of the vCenter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets or sets the port of the vCenter.",
        SerializedName = @"port",
        PossibleTypes = new [] { typeof(int) })]
        int? Port { get; set; }
        /// <summary>Gets or sets the provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets the provisioning state.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>The resource status information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The resource status information.",
        SerializedName = @"statuses",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IResourceStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IResourceStatus[] Statuses { get;  }
        /// <summary>Gets or sets a unique identifier for this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets a unique identifier for this resource.",
        SerializedName = @"uuid",
        PossibleTypes = new [] { typeof(string) })]
        string Uuid { get;  }
        /// <summary>Gets or sets the version of the vCenter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets the version of the vCenter.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string Version { get;  }

    }
    /// Defines the resource properties.
    internal partial interface IVCenterPropertiesInternal

    {
        /// <summary>Gets or sets the connection status to the vCenter.</summary>
        string ConnectionStatus { get; set; }
        /// <summary>Username / Password Credentials to connect to vcenter.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IViCredential Credentials { get; set; }
        /// <summary>Gets or sets the password to connect with the vCenter.</summary>
        string CredentialsPassword { get; set; }
        /// <summary>Gets or sets username to connect with the vCenter.</summary>
        string CredentialsUsername { get; set; }
        /// <summary>Gets the name of the corresponding resource in Kubernetes.</summary>
        string CustomResourceName { get; set; }
        /// <summary>Gets or sets the FQDN/IPAddress of the vCenter.</summary>
        string Fqdn { get; set; }
        /// <summary>Gets or sets the instance UUID of the vCenter.</summary>
        string InstanceUuid { get; set; }
        /// <summary>Gets or sets the port of the vCenter.</summary>
        int? Port { get; set; }
        /// <summary>Gets or sets the provisioning state.</summary>
        string ProvisioningState { get; set; }
        /// <summary>The resource status information.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IResourceStatus[] Statuses { get; set; }
        /// <summary>Gets or sets a unique identifier for this resource.</summary>
        string Uuid { get; set; }
        /// <summary>Gets or sets the version of the vCenter.</summary>
        string Version { get; set; }

    }
}