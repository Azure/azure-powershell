// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Extensions;

    /// <summary>Define the virtualMachineTemplate.</summary>
    public partial class VirtualMachineTemplate :
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplate,
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplateInternal
    {

        /// <summary>Gets the name of the corresponding resource in Kubernetes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Inlined)]
        public string CustomResourceName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).CustomResourceName; }

        /// <summary>Gets or sets the disks the template.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualDisk[] Disk { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).Disk; }

        /// <summary>Backing field for <see cref="ExtendedLocation" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IExtendedLocation _extendedLocation;

        /// <summary>Gets or sets the extended location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IExtendedLocation ExtendedLocation { get => (this._extendedLocation = this._extendedLocation ?? new Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.ExtendedLocation()); set => this._extendedLocation = value; }

        /// <summary>The extended location name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Inlined)]
        public string ExtendedLocationName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IExtendedLocationInternal)ExtendedLocation).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IExtendedLocationInternal)ExtendedLocation).Name = value ?? null; }

        /// <summary>The extended location type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Inlined)]
        public string ExtendedLocationType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IExtendedLocationInternal)ExtendedLocation).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IExtendedLocationInternal)ExtendedLocation).Type = value ?? null; }

        /// <summary>Firmware type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.FirmwareType? FirmwareType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).FirmwareType; }

        /// <summary>Gets or sets the folder path of the template.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Inlined)]
        public string FolderPath { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).FolderPath; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>Gets or sets the Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public string Id { get => this._id; }

        /// <summary>Gets or sets the inventory Item ID for the virtual machine template.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Inlined)]
        public string InventoryItemId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).InventoryItemId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).InventoryItemId = value ?? null; }

        /// <summary>Backing field for <see cref="Kind" /> property.</summary>
        private string _kind;

        /// <summary>
        /// Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are
        /// a kind of Microsoft.Web/sites type. If supported, the resource provider must validate and persist this value.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public string Kind { get => this._kind; set => this._kind = value; }

        /// <summary>Backing field for <see cref="Location" /> property.</summary>
        private string _location;

        /// <summary>Gets or sets the location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public string Location { get => this._location; set => this._location = value; }

        /// <summary>Gets or sets memory size in MBs for the template.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Inlined)]
        public int? MemorySizeMb { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).MemorySizeMb; }

        /// <summary>Internal Acessors for CustomResourceName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplateInternal.CustomResourceName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).CustomResourceName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).CustomResourceName = value; }

        /// <summary>Internal Acessors for Disk</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualDisk[] Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplateInternal.Disk { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).Disk; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).Disk = value; }

        /// <summary>Internal Acessors for ExtendedLocation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IExtendedLocation Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplateInternal.ExtendedLocation { get => (this._extendedLocation = this._extendedLocation ?? new Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.ExtendedLocation()); set { {_extendedLocation = value;} } }

        /// <summary>Internal Acessors for FirmwareType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.FirmwareType? Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplateInternal.FirmwareType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).FirmwareType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).FirmwareType = value; }

        /// <summary>Internal Acessors for FolderPath</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplateInternal.FolderPath { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).FolderPath; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).FolderPath = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplateInternal.Id { get => this._id; set { {_id = value;} } }

        /// <summary>Internal Acessors for MemorySizeMb</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplateInternal.MemorySizeMb { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).MemorySizeMb; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).MemorySizeMb = value; }

        /// <summary>Internal Acessors for MoName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplateInternal.MoName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).MoName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).MoName = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplateInternal.Name { get => this._name; set { {_name = value;} } }

        /// <summary>Internal Acessors for NetworkInterface</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.INetworkInterface[] Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplateInternal.NetworkInterface { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).NetworkInterface; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).NetworkInterface = value; }

        /// <summary>Internal Acessors for NumCoresPerSocket</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplateInternal.NumCoresPerSocket { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).NumCoresPerSocket; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).NumCoresPerSocket = value; }

        /// <summary>Internal Acessors for NumCpUs</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplateInternal.NumCpUs { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).NumCpUs; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).NumCpUs = value; }

        /// <summary>Internal Acessors for OSName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplateInternal.OSName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).OSName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).OSName = value; }

        /// <summary>Internal Acessors for OSType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.OSType? Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplateInternal.OSType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).OSType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).OSType = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplateProperties Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplateInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.VirtualMachineTemplateProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplateInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for Statuses</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IResourceStatus[] Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplateInternal.Statuses { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).Statuses; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).Statuses = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20.ISystemData Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplateInternal.SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20.SystemData()); set { {_systemData = value;} } }

        /// <summary>Internal Acessors for ToolsVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplateInternal.ToolsVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).ToolsVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).ToolsVersion = value; }

        /// <summary>Internal Acessors for ToolsVersionStatus</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplateInternal.ToolsVersionStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).ToolsVersionStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).ToolsVersionStatus = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplateInternal.Type { get => this._type; set { {_type = value;} } }

        /// <summary>Internal Acessors for Uuid</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplateInternal.Uuid { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).Uuid; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).Uuid = value; }

        /// <summary>Gets or sets the vCenter Managed Object name for the virtual machine template.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Inlined)]
        public string MoName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).MoName; }

        /// <summary>
        /// Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine
        /// template.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Inlined)]
        public string MoRefId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).MoRefId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).MoRefId = value ?? null; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Gets or sets the name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public string Name { get => this._name; }

        /// <summary>Gets or sets the network interfaces of the template.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.INetworkInterface[] NetworkInterface { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).NetworkInterface; }

        /// <summary>
        /// Gets or sets the number of cores per socket for the template.
        /// Defaults to 1 if unspecified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Inlined)]
        public int? NumCoresPerSocket { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).NumCoresPerSocket; }

        /// <summary>Gets or sets the number of vCPUs for the template.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Inlined)]
        public int? NumCpUs { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).NumCpUs; }

        /// <summary>Gets or sets os name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Inlined)]
        public string OSName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).OSName; }

        /// <summary>Gets or sets the type of the os.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.OSType? OSType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).OSType; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplateProperties _property;

        /// <summary>Resource properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplateProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.VirtualMachineTemplateProperties()); set => this._property = value; }

        /// <summary>Gets or sets the provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).ProvisioningState; }

        /// <summary>The resource status information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IResourceStatus[] Statuses { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).Statuses; }

        /// <summary>Backing field for <see cref="SystemData" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20.ISystemData _systemData;

        /// <summary>The system data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20.ISystemData SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20.SystemData()); }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20.ISystemDataInternal)SystemData).CreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20.ISystemDataInternal)SystemData).CreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Inlined)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20.ISystemDataInternal)SystemData).CreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20.ISystemDataInternal)SystemData).CreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20.ISystemDataInternal)SystemData).CreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20.ISystemDataInternal)SystemData).CreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20.ISystemDataInternal)SystemData).LastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20.ISystemDataInternal)SystemData).LastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Inlined)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20.ISystemDataInternal)SystemData).LastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20.ISystemDataInternal)SystemData).LastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20.ISystemDataInternal)SystemData).LastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20.ISystemDataInternal)SystemData).LastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.CreatedByType)""); }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplateTags _tag;

        /// <summary>Gets or sets the Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplateTags Tag { get => (this._tag = this._tag ?? new Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.VirtualMachineTemplateTags()); set => this._tag = value; }

        /// <summary>Gets or sets the current version of VMware Tools.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Inlined)]
        public string ToolsVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).ToolsVersion; }

        /// <summary>
        /// Gets or sets the current version status of VMware Tools installed in the guest operating system.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Inlined)]
        public string ToolsVersionStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).ToolsVersionStatus; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>Gets or sets the type of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public string Type { get => this._type; }

        /// <summary>Gets or sets a unique identifier for this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Inlined)]
        public string Uuid { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).Uuid; }

        /// <summary>Gets or sets the ARM Id of the vCenter resource in which this template resides.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Inlined)]
        public string VCenterId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).VCenterId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplatePropertiesInternal)Property).VCenterId = value ?? null; }

        /// <summary>Creates an new <see cref="VirtualMachineTemplate" /> instance.</summary>
        public VirtualMachineTemplate()
        {

        }
    }
    /// Define the virtualMachineTemplate.
    public partial interface IVirtualMachineTemplate :
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.IJsonSerializable
    {
        /// <summary>Gets the name of the corresponding resource in Kubernetes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets the name of the corresponding resource in Kubernetes.",
        SerializedName = @"customResourceName",
        PossibleTypes = new [] { typeof(string) })]
        string CustomResourceName { get;  }
        /// <summary>Gets or sets the disks the template.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets the disks the template.",
        SerializedName = @"disks",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualDisk) })]
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualDisk[] Disk { get;  }
        /// <summary>The extended location name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The extended location name.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string ExtendedLocationName { get; set; }
        /// <summary>The extended location type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The extended location type.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string ExtendedLocationType { get; set; }
        /// <summary>Firmware type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Firmware type",
        SerializedName = @"firmwareType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.FirmwareType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.FirmwareType? FirmwareType { get;  }
        /// <summary>Gets or sets the folder path of the template.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets the folder path of the template.",
        SerializedName = @"folderPath",
        PossibleTypes = new [] { typeof(string) })]
        string FolderPath { get;  }
        /// <summary>Gets or sets the Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets the Id.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get;  }
        /// <summary>Gets or sets the inventory Item ID for the virtual machine template.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets or sets the inventory Item ID for the virtual machine template.",
        SerializedName = @"inventoryItemId",
        PossibleTypes = new [] { typeof(string) })]
        string InventoryItemId { get; set; }
        /// <summary>
        /// Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are
        /// a kind of Microsoft.Web/sites type. If supported, the resource provider must validate and persist this value.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
        SerializedName = @"kind",
        PossibleTypes = new [] { typeof(string) })]
        string Kind { get; set; }
        /// <summary>Gets or sets the location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Gets or sets the location.",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string Location { get; set; }
        /// <summary>Gets or sets memory size in MBs for the template.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets memory size in MBs for the template.",
        SerializedName = @"memorySizeMB",
        PossibleTypes = new [] { typeof(int) })]
        int? MemorySizeMb { get;  }
        /// <summary>Gets or sets the vCenter Managed Object name for the virtual machine template.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets the vCenter Managed Object name for the virtual machine template.",
        SerializedName = @"moName",
        PossibleTypes = new [] { typeof(string) })]
        string MoName { get;  }
        /// <summary>
        /// Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine
        /// template.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine
        template.",
        SerializedName = @"moRefId",
        PossibleTypes = new [] { typeof(string) })]
        string MoRefId { get; set; }
        /// <summary>Gets or sets the name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets the name.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get;  }
        /// <summary>Gets or sets the network interfaces of the template.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets the network interfaces of the template.",
        SerializedName = @"networkInterfaces",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.INetworkInterface) })]
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.INetworkInterface[] NetworkInterface { get;  }
        /// <summary>
        /// Gets or sets the number of cores per socket for the template.
        /// Defaults to 1 if unspecified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets the number of cores per socket for the template.
        Defaults to 1 if unspecified.",
        SerializedName = @"numCoresPerSocket",
        PossibleTypes = new [] { typeof(int) })]
        int? NumCoresPerSocket { get;  }
        /// <summary>Gets or sets the number of vCPUs for the template.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets the number of vCPUs for the template.",
        SerializedName = @"numCPUs",
        PossibleTypes = new [] { typeof(int) })]
        int? NumCpUs { get;  }
        /// <summary>Gets or sets os name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets os name.",
        SerializedName = @"osName",
        PossibleTypes = new [] { typeof(string) })]
        string OSName { get;  }
        /// <summary>Gets or sets the type of the os.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets the type of the os.",
        SerializedName = @"osType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.OSType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.OSType? OSType { get;  }
        /// <summary>Gets or sets the provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets the provisioning state.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>The resource status information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The resource status information.",
        SerializedName = @"statuses",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IResourceStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IResourceStatus[] Statuses { get;  }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp of resource creation (UTC).",
        SerializedName = @"createdAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity that created the resource.",
        SerializedName = @"createdBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity that created the resource.",
        SerializedName = @"createdByType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.CreatedByType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.CreatedByType? SystemDataCreatedByType { get; set; }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp of resource last modification (UTC)",
        SerializedName = @"lastModifiedAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity that last modified the resource.",
        SerializedName = @"lastModifiedBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity that last modified the resource.",
        SerializedName = @"lastModifiedByType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.CreatedByType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.CreatedByType? SystemDataLastModifiedByType { get; set; }
        /// <summary>Gets or sets the Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets or sets the Resource tags.",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplateTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplateTags Tag { get; set; }
        /// <summary>Gets or sets the current version of VMware Tools.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets the current version of VMware Tools.",
        SerializedName = @"toolsVersion",
        PossibleTypes = new [] { typeof(string) })]
        string ToolsVersion { get;  }
        /// <summary>
        /// Gets or sets the current version status of VMware Tools installed in the guest operating system.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets the current version status of VMware Tools installed in the guest operating system.",
        SerializedName = @"toolsVersionStatus",
        PossibleTypes = new [] { typeof(string) })]
        string ToolsVersionStatus { get;  }
        /// <summary>Gets or sets the type of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets the type of the resource.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get;  }
        /// <summary>Gets or sets a unique identifier for this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets a unique identifier for this resource.",
        SerializedName = @"uuid",
        PossibleTypes = new [] { typeof(string) })]
        string Uuid { get;  }
        /// <summary>Gets or sets the ARM Id of the vCenter resource in which this template resides.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets or sets the ARM Id of the vCenter resource in which this template resides.",
        SerializedName = @"vCenterId",
        PossibleTypes = new [] { typeof(string) })]
        string VCenterId { get; set; }

    }
    /// Define the virtualMachineTemplate.
    internal partial interface IVirtualMachineTemplateInternal

    {
        /// <summary>Gets the name of the corresponding resource in Kubernetes.</summary>
        string CustomResourceName { get; set; }
        /// <summary>Gets or sets the disks the template.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualDisk[] Disk { get; set; }
        /// <summary>Gets or sets the extended location.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IExtendedLocation ExtendedLocation { get; set; }
        /// <summary>The extended location name.</summary>
        string ExtendedLocationName { get; set; }
        /// <summary>The extended location type.</summary>
        string ExtendedLocationType { get; set; }
        /// <summary>Firmware type</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.FirmwareType? FirmwareType { get; set; }
        /// <summary>Gets or sets the folder path of the template.</summary>
        string FolderPath { get; set; }
        /// <summary>Gets or sets the Id.</summary>
        string Id { get; set; }
        /// <summary>Gets or sets the inventory Item ID for the virtual machine template.</summary>
        string InventoryItemId { get; set; }
        /// <summary>
        /// Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are
        /// a kind of Microsoft.Web/sites type. If supported, the resource provider must validate and persist this value.
        /// </summary>
        string Kind { get; set; }
        /// <summary>Gets or sets the location.</summary>
        string Location { get; set; }
        /// <summary>Gets or sets memory size in MBs for the template.</summary>
        int? MemorySizeMb { get; set; }
        /// <summary>Gets or sets the vCenter Managed Object name for the virtual machine template.</summary>
        string MoName { get; set; }
        /// <summary>
        /// Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine
        /// template.
        /// </summary>
        string MoRefId { get; set; }
        /// <summary>Gets or sets the name.</summary>
        string Name { get; set; }
        /// <summary>Gets or sets the network interfaces of the template.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.INetworkInterface[] NetworkInterface { get; set; }
        /// <summary>
        /// Gets or sets the number of cores per socket for the template.
        /// Defaults to 1 if unspecified.
        /// </summary>
        int? NumCoresPerSocket { get; set; }
        /// <summary>Gets or sets the number of vCPUs for the template.</summary>
        int? NumCpUs { get; set; }
        /// <summary>Gets or sets os name.</summary>
        string OSName { get; set; }
        /// <summary>Gets or sets the type of the os.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.OSType? OSType { get; set; }
        /// <summary>Resource properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplateProperties Property { get; set; }
        /// <summary>Gets or sets the provisioning state.</summary>
        string ProvisioningState { get; set; }
        /// <summary>The resource status information.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IResourceStatus[] Statuses { get; set; }
        /// <summary>The system data.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20.ISystemData SystemData { get; set; }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        global::System.DateTime? SystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        string SystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.CreatedByType? SystemDataCreatedByType { get; set; }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        global::System.DateTime? SystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        string SystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.CreatedByType? SystemDataLastModifiedByType { get; set; }
        /// <summary>Gets or sets the Resource tags.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineTemplateTags Tag { get; set; }
        /// <summary>Gets or sets the current version of VMware Tools.</summary>
        string ToolsVersion { get; set; }
        /// <summary>
        /// Gets or sets the current version status of VMware Tools installed in the guest operating system.
        /// </summary>
        string ToolsVersionStatus { get; set; }
        /// <summary>Gets or sets the type of the resource.</summary>
        string Type { get; set; }
        /// <summary>Gets or sets a unique identifier for this resource.</summary>
        string Uuid { get; set; }
        /// <summary>Gets or sets the ARM Id of the vCenter resource in which this template resides.</summary>
        string VCenterId { get; set; }

    }
}