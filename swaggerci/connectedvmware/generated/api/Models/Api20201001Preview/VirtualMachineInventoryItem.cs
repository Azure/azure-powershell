// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Extensions;

    /// <summary>The VM inventory item.</summary>
    public partial class VirtualMachineInventoryItem :
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineInventoryItem,
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineInventoryItemInternal,
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IInventoryItemProperties"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IInventoryItemProperties __inventoryItemProperties = new Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.InventoryItemProperties();

        /// <summary>Backing field for <see cref="FolderPath" /> property.</summary>
        private string _folderPath;

        /// <summary>Gets or sets the folder path of the vm.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public string FolderPath { get => this._folderPath; set => this._folderPath = value; }

        /// <summary>Backing field for <see cref="Host" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IInventoryItemDetails _host;

        /// <summary>Host inventory resource details.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IInventoryItemDetails Host { get => (this._host = this._host ?? new Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.InventoryItemDetails()); set => this._host = value; }

        /// <summary>Gets or sets the inventory Item ID for the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Inlined)]
        public string HostInventoryItemId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IInventoryItemDetailsInternal)Host).InventoryItemId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IInventoryItemDetailsInternal)Host).InventoryItemId = value ?? null; }

        /// <summary>Gets or sets the vCenter Managed Object name for the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Inlined)]
        public string HostMoName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IInventoryItemDetailsInternal)Host).MoName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IInventoryItemDetailsInternal)Host).MoName = value ?? null; }

        /// <summary>Backing field for <see cref="IPAddress" /> property.</summary>
        private string[] _iPAddress;

        /// <summary>Gets or sets the nic ip addresses.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public string[] IPAddress { get => this._iPAddress; set => this._iPAddress = value; }

        /// <summary>Backing field for <see cref="InstanceUuid" /> property.</summary>
        private string _instanceUuid;

        /// <summary>Gets or sets the instance uuid of the vm.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public string InstanceUuid { get => this._instanceUuid; set => this._instanceUuid = value; }

        /// <summary>They inventory type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.InventoryType InventoryType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IInventoryItemPropertiesInternal)__inventoryItemProperties).InventoryType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IInventoryItemPropertiesInternal)__inventoryItemProperties).InventoryType = value ; }

        /// <summary>Gets or sets the tracked resource id corresponding to the inventory resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Inherited)]
        public string ManagedResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IInventoryItemPropertiesInternal)__inventoryItemProperties).ManagedResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IInventoryItemPropertiesInternal)__inventoryItemProperties).ManagedResourceId = value ?? null; }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IInventoryItemPropertiesInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IInventoryItemPropertiesInternal)__inventoryItemProperties).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IInventoryItemPropertiesInternal)__inventoryItemProperties).ProvisioningState = value; }

        /// <summary>Internal Acessors for Host</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IInventoryItemDetails Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineInventoryItemInternal.Host { get => (this._host = this._host ?? new Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.InventoryItemDetails()); set { {_host = value;} } }

        /// <summary>Internal Acessors for PowerState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineInventoryItemInternal.PowerState { get => this._powerState; set { {_powerState = value;} } }

        /// <summary>Internal Acessors for ResourcePool</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IInventoryItemDetails Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineInventoryItemInternal.ResourcePool { get => (this._resourcePool = this._resourcePool ?? new Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.InventoryItemDetails()); set { {_resourcePool = value;} } }

        /// <summary>Internal Acessors for ToolsRunningStatus</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineInventoryItemInternal.ToolsRunningStatus { get => this._toolsRunningStatus; set { {_toolsRunningStatus = value;} } }

        /// <summary>Internal Acessors for ToolsVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineInventoryItemInternal.ToolsVersion { get => this._toolsVersion; set { {_toolsVersion = value;} } }

        /// <summary>Internal Acessors for ToolsVersionStatus</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IVirtualMachineInventoryItemInternal.ToolsVersionStatus { get => this._toolsVersionStatus; set { {_toolsVersionStatus = value;} } }

        /// <summary>Gets or sets the vCenter Managed Object name for the inventory item.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Inherited)]
        public string MoName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IInventoryItemPropertiesInternal)__inventoryItemProperties).MoName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IInventoryItemPropertiesInternal)__inventoryItemProperties).MoName = value ?? null; }

        /// <summary>Gets or sets the MoRef (Managed Object Reference) ID for the inventory item.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Inherited)]
        public string MoRefId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IInventoryItemPropertiesInternal)__inventoryItemProperties).MoRefId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IInventoryItemPropertiesInternal)__inventoryItemProperties).MoRefId = value ?? null; }

        /// <summary>Backing field for <see cref="OSName" /> property.</summary>
        private string _oSName;

        /// <summary>Gets or sets os name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public string OSName { get => this._oSName; set => this._oSName = value; }

        /// <summary>Backing field for <see cref="OSType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.OSType? _oSType;

        /// <summary>Gets or sets the type of the os.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.OSType? OSType { get => this._oSType; set => this._oSType = value; }

        /// <summary>Backing field for <see cref="PowerState" /> property.</summary>
        private string _powerState;

        /// <summary>Gets the power state of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public string PowerState { get => this._powerState; }

        /// <summary>Gets or sets the provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Inherited)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IInventoryItemPropertiesInternal)__inventoryItemProperties).ProvisioningState; }

        /// <summary>Backing field for <see cref="ResourcePool" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IInventoryItemDetails _resourcePool;

        /// <summary>ResourcePool inventory resource details.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IInventoryItemDetails ResourcePool { get => (this._resourcePool = this._resourcePool ?? new Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.InventoryItemDetails()); set => this._resourcePool = value; }

        /// <summary>Gets or sets the inventory Item ID for the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Inlined)]
        public string ResourcePoolInventoryItemId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IInventoryItemDetailsInternal)ResourcePool).InventoryItemId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IInventoryItemDetailsInternal)ResourcePool).InventoryItemId = value ?? null; }

        /// <summary>Gets or sets the vCenter Managed Object name for the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Inlined)]
        public string ResourcePoolMoName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IInventoryItemDetailsInternal)ResourcePool).MoName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IInventoryItemDetailsInternal)ResourcePool).MoName = value ?? null; }

        /// <summary>Backing field for <see cref="SmbiosUuid" /> property.</summary>
        private string _smbiosUuid;

        /// <summary>Gets or sets the SMBIOS UUID of the vm.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public string SmbiosUuid { get => this._smbiosUuid; set => this._smbiosUuid = value; }

        /// <summary>Backing field for <see cref="ToolsRunningStatus" /> property.</summary>
        private string _toolsRunningStatus;

        /// <summary>
        /// Gets or sets the current running status of VMware Tools running in the guest operating system.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public string ToolsRunningStatus { get => this._toolsRunningStatus; }

        /// <summary>Backing field for <see cref="ToolsVersion" /> property.</summary>
        private string _toolsVersion;

        /// <summary>Gets or sets the current version of VMware Tools.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public string ToolsVersion { get => this._toolsVersion; }

        /// <summary>Backing field for <see cref="ToolsVersionStatus" /> property.</summary>
        private string _toolsVersionStatus;

        /// <summary>
        /// Gets or sets the current version status of VMware Tools installed in the guest operating system.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public string ToolsVersionStatus { get => this._toolsVersionStatus; }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__inventoryItemProperties), __inventoryItemProperties);
            await eventListener.AssertObjectIsValid(nameof(__inventoryItemProperties), __inventoryItemProperties);
        }

        /// <summary>Creates an new <see cref="VirtualMachineInventoryItem" /> instance.</summary>
        public VirtualMachineInventoryItem()
        {

        }
    }
    /// The VM inventory item.
    public partial interface IVirtualMachineInventoryItem :
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IInventoryItemProperties
    {
        /// <summary>Gets or sets the folder path of the vm.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets or sets the folder path of the vm.",
        SerializedName = @"folderPath",
        PossibleTypes = new [] { typeof(string) })]
        string FolderPath { get; set; }
        /// <summary>Gets or sets the inventory Item ID for the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets or sets the inventory Item ID for the resource.",
        SerializedName = @"inventoryItemId",
        PossibleTypes = new [] { typeof(string) })]
        string HostInventoryItemId { get; set; }
        /// <summary>Gets or sets the vCenter Managed Object name for the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets or sets the vCenter Managed Object name for the resource.",
        SerializedName = @"moName",
        PossibleTypes = new [] { typeof(string) })]
        string HostMoName { get; set; }
        /// <summary>Gets or sets the nic ip addresses.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets or sets the nic ip addresses.",
        SerializedName = @"ipAddresses",
        PossibleTypes = new [] { typeof(string) })]
        string[] IPAddress { get; set; }
        /// <summary>Gets or sets the instance uuid of the vm.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets or sets the instance uuid of the vm.",
        SerializedName = @"instanceUuid",
        PossibleTypes = new [] { typeof(string) })]
        string InstanceUuid { get; set; }
        /// <summary>Gets or sets os name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets or sets os name.",
        SerializedName = @"osName",
        PossibleTypes = new [] { typeof(string) })]
        string OSName { get; set; }
        /// <summary>Gets or sets the type of the os.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets or sets the type of the os.",
        SerializedName = @"osType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.OSType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.OSType? OSType { get; set; }
        /// <summary>Gets the power state of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets the power state of the virtual machine.",
        SerializedName = @"powerState",
        PossibleTypes = new [] { typeof(string) })]
        string PowerState { get;  }
        /// <summary>Gets or sets the inventory Item ID for the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets or sets the inventory Item ID for the resource.",
        SerializedName = @"inventoryItemId",
        PossibleTypes = new [] { typeof(string) })]
        string ResourcePoolInventoryItemId { get; set; }
        /// <summary>Gets or sets the vCenter Managed Object name for the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets or sets the vCenter Managed Object name for the resource.",
        SerializedName = @"moName",
        PossibleTypes = new [] { typeof(string) })]
        string ResourcePoolMoName { get; set; }
        /// <summary>Gets or sets the SMBIOS UUID of the vm.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets or sets the SMBIOS UUID of the vm.",
        SerializedName = @"smbiosUuid",
        PossibleTypes = new [] { typeof(string) })]
        string SmbiosUuid { get; set; }
        /// <summary>
        /// Gets or sets the current running status of VMware Tools running in the guest operating system.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets the current running status of VMware Tools running in the guest operating system.",
        SerializedName = @"toolsRunningStatus",
        PossibleTypes = new [] { typeof(string) })]
        string ToolsRunningStatus { get;  }
        /// <summary>Gets or sets the current version of VMware Tools.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets the current version of VMware Tools.",
        SerializedName = @"toolsVersion",
        PossibleTypes = new [] { typeof(string) })]
        string ToolsVersion { get;  }
        /// <summary>
        /// Gets or sets the current version status of VMware Tools installed in the guest operating system.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets the current version status of VMware Tools installed in the guest operating system.",
        SerializedName = @"toolsVersionStatus",
        PossibleTypes = new [] { typeof(string) })]
        string ToolsVersionStatus { get;  }

    }
    /// The VM inventory item.
    internal partial interface IVirtualMachineInventoryItemInternal :
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IInventoryItemPropertiesInternal
    {
        /// <summary>Gets or sets the folder path of the vm.</summary>
        string FolderPath { get; set; }
        /// <summary>Host inventory resource details.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IInventoryItemDetails Host { get; set; }
        /// <summary>Gets or sets the inventory Item ID for the resource.</summary>
        string HostInventoryItemId { get; set; }
        /// <summary>Gets or sets the vCenter Managed Object name for the resource.</summary>
        string HostMoName { get; set; }
        /// <summary>Gets or sets the nic ip addresses.</summary>
        string[] IPAddress { get; set; }
        /// <summary>Gets or sets the instance uuid of the vm.</summary>
        string InstanceUuid { get; set; }
        /// <summary>Gets or sets os name.</summary>
        string OSName { get; set; }
        /// <summary>Gets or sets the type of the os.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.OSType? OSType { get; set; }
        /// <summary>Gets the power state of the virtual machine.</summary>
        string PowerState { get; set; }
        /// <summary>ResourcePool inventory resource details.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20201001Preview.IInventoryItemDetails ResourcePool { get; set; }
        /// <summary>Gets or sets the inventory Item ID for the resource.</summary>
        string ResourcePoolInventoryItemId { get; set; }
        /// <summary>Gets or sets the vCenter Managed Object name for the resource.</summary>
        string ResourcePoolMoName { get; set; }
        /// <summary>Gets or sets the SMBIOS UUID of the vm.</summary>
        string SmbiosUuid { get; set; }
        /// <summary>
        /// Gets or sets the current running status of VMware Tools running in the guest operating system.
        /// </summary>
        string ToolsRunningStatus { get; set; }
        /// <summary>Gets or sets the current version of VMware Tools.</summary>
        string ToolsVersion { get; set; }
        /// <summary>
        /// Gets or sets the current version status of VMware Tools installed in the guest operating system.
        /// </summary>
        string ToolsVersionStatus { get; set; }

    }
}