// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Extensions;

    /// <summary>The properties of a source based trigger.</summary>
    public partial class SourceTrigger :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISourceTrigger,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISourceTriggerInternal
    {

        /// <summary>Backing field for <see cref="Event" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.SourceTriggerEvent[] _event;

        /// <summary>The source event corresponding to the trigger.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.SourceTriggerEvent[] Event { get => this._event; set => this._event = value; }

        /// <summary>Internal Acessors for SourceRepository</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISourceProperties Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISourceTriggerInternal.SourceRepository { get => (this._sourceRepository = this._sourceRepository ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.SourceProperties()); set { {_sourceRepository = value;} } }

        /// <summary>Internal Acessors for SourceRepositorySourceControlAuthProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IAuthInfo Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISourceTriggerInternal.SourceRepositorySourceControlAuthProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISourcePropertiesInternal)SourceRepository).SourceControlAuthProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISourcePropertiesInternal)SourceRepository).SourceControlAuthProperty = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>The name of the trigger.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Time in seconds that the token remains valid</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public int? SourceControlAuthPropertyExpiresIn { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISourcePropertiesInternal)SourceRepository).SourceControlAuthPropertyExpiresIn; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISourcePropertiesInternal)SourceRepository).SourceControlAuthPropertyExpiresIn = value ?? default(int); }

        /// <summary>The refresh token used to refresh the access token.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string SourceControlAuthPropertyRefreshToken { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISourcePropertiesInternal)SourceRepository).SourceControlAuthPropertyRefreshToken; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISourcePropertiesInternal)SourceRepository).SourceControlAuthPropertyRefreshToken = value ?? null; }

        /// <summary>The scope of the access token.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string SourceControlAuthPropertyScope { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISourcePropertiesInternal)SourceRepository).SourceControlAuthPropertyScope; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISourcePropertiesInternal)SourceRepository).SourceControlAuthPropertyScope = value ?? null; }

        /// <summary>The access token used to access the source control provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string SourceControlAuthPropertyToken { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISourcePropertiesInternal)SourceRepository).SourceControlAuthPropertyToken; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISourcePropertiesInternal)SourceRepository).SourceControlAuthPropertyToken = value ?? null; }

        /// <summary>The type of Auth token.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.TokenType? SourceControlAuthPropertyTokenType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISourcePropertiesInternal)SourceRepository).SourceControlAuthPropertyTokenType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISourcePropertiesInternal)SourceRepository).SourceControlAuthPropertyTokenType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.TokenType)""); }

        /// <summary>Backing field for <see cref="SourceRepository" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISourceProperties _sourceRepository;

        /// <summary>The properties that describes the source(code) for the task.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISourceProperties SourceRepository { get => (this._sourceRepository = this._sourceRepository ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.SourceProperties()); set => this._sourceRepository = value; }

        /// <summary>The branch name of the source code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string SourceRepositoryBranch { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISourcePropertiesInternal)SourceRepository).Branch; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISourcePropertiesInternal)SourceRepository).Branch = value ?? null; }

        /// <summary>The type of source control service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.SourceControlType SourceRepositorySourceControlType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISourcePropertiesInternal)SourceRepository).SourceControlType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISourcePropertiesInternal)SourceRepository).SourceControlType = value ; }

        /// <summary>The full URL to the source code repository</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string SourceRepositoryUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISourcePropertiesInternal)SourceRepository).RepositoryUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISourcePropertiesInternal)SourceRepository).RepositoryUrl = value ; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.TriggerStatus? _status;

        /// <summary>The current status of trigger.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.TriggerStatus? Status { get => this._status; set => this._status = value; }

        /// <summary>Creates an new <see cref="SourceTrigger" /> instance.</summary>
        public SourceTrigger()
        {

        }
    }
    /// The properties of a source based trigger.
    public partial interface ISourceTrigger :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.IJsonSerializable
    {
        /// <summary>The source event corresponding to the trigger.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The source event corresponding to the trigger.",
        SerializedName = @"sourceTriggerEvents",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.SourceTriggerEvent) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.SourceTriggerEvent[] Event { get; set; }
        /// <summary>The name of the trigger.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The name of the trigger.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>Time in seconds that the token remains valid</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Time in seconds that the token remains valid",
        SerializedName = @"expiresIn",
        PossibleTypes = new [] { typeof(int) })]
        int? SourceControlAuthPropertyExpiresIn { get; set; }
        /// <summary>The refresh token used to refresh the access token.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The refresh token used to refresh the access token.",
        SerializedName = @"refreshToken",
        PossibleTypes = new [] { typeof(string) })]
        string SourceControlAuthPropertyRefreshToken { get; set; }
        /// <summary>The scope of the access token.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The scope of the access token.",
        SerializedName = @"scope",
        PossibleTypes = new [] { typeof(string) })]
        string SourceControlAuthPropertyScope { get; set; }
        /// <summary>The access token used to access the source control provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The access token used to access the source control provider.",
        SerializedName = @"token",
        PossibleTypes = new [] { typeof(string) })]
        string SourceControlAuthPropertyToken { get; set; }
        /// <summary>The type of Auth token.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of Auth token.",
        SerializedName = @"tokenType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.TokenType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.TokenType? SourceControlAuthPropertyTokenType { get; set; }
        /// <summary>The branch name of the source code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The branch name of the source code.",
        SerializedName = @"branch",
        PossibleTypes = new [] { typeof(string) })]
        string SourceRepositoryBranch { get; set; }
        /// <summary>The type of source control service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The type of source control service.",
        SerializedName = @"sourceControlType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.SourceControlType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.SourceControlType SourceRepositorySourceControlType { get; set; }
        /// <summary>The full URL to the source code repository</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The full URL to the source code repository",
        SerializedName = @"repositoryUrl",
        PossibleTypes = new [] { typeof(string) })]
        string SourceRepositoryUrl { get; set; }
        /// <summary>The current status of trigger.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The current status of trigger.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.TriggerStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.TriggerStatus? Status { get; set; }

    }
    /// The properties of a source based trigger.
    internal partial interface ISourceTriggerInternal

    {
        /// <summary>The source event corresponding to the trigger.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.SourceTriggerEvent[] Event { get; set; }
        /// <summary>The name of the trigger.</summary>
        string Name { get; set; }
        /// <summary>Time in seconds that the token remains valid</summary>
        int? SourceControlAuthPropertyExpiresIn { get; set; }
        /// <summary>The refresh token used to refresh the access token.</summary>
        string SourceControlAuthPropertyRefreshToken { get; set; }
        /// <summary>The scope of the access token.</summary>
        string SourceControlAuthPropertyScope { get; set; }
        /// <summary>The access token used to access the source control provider.</summary>
        string SourceControlAuthPropertyToken { get; set; }
        /// <summary>The type of Auth token.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.TokenType? SourceControlAuthPropertyTokenType { get; set; }
        /// <summary>The properties that describes the source(code) for the task.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISourceProperties SourceRepository { get; set; }
        /// <summary>The branch name of the source code.</summary>
        string SourceRepositoryBranch { get; set; }
        /// <summary>
        /// The authorization properties for accessing the source code repository and to set up
        /// webhooks for notifications.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IAuthInfo SourceRepositorySourceControlAuthProperty { get; set; }
        /// <summary>The type of source control service.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.SourceControlType SourceRepositorySourceControlType { get; set; }
        /// <summary>The full URL to the source code repository</summary>
        string SourceRepositoryUrl { get; set; }
        /// <summary>The current status of trigger.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.TriggerStatus? Status { get; set; }

    }
}