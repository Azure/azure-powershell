// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Extensions;

    /// <summary>
    /// Video sink in a live topology allows for video and audio to be captured, optionally archived, and published via a video
    /// resource. If archiving is enabled, this results in a video of type 'archive'. If used in a batch topology, this allows
    /// for video and audio to be stored as a file, and published via a video resource of type 'file'
    /// </summary>
    public partial class VideoSink :
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IVideoSink,
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IVideoSinkInternal,
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.ISinkNodeBase"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.ISinkNodeBase __sinkNodeBase = new Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.SinkNodeBase();

        /// <summary>
        /// An array of upstream node references within the topology to be used as inputs for this node.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.INodeInput[] Input { get => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.ISinkNodeBaseInternal)__sinkNodeBase).Input; set => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.ISinkNodeBaseInternal)__sinkNodeBase).Input = value ; }

        /// <summary>Internal Acessors for VideoCreationProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IVideoCreationProperties Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IVideoSinkInternal.VideoCreationProperty { get => (this._videoCreationProperty = this._videoCreationProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.VideoCreationProperties()); set { {_videoCreationProperty = value;} } }

        /// <summary>Internal Acessors for VideoPublishingOption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IVideoPublishingOptions Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IVideoSinkInternal.VideoPublishingOption { get => (this._videoPublishingOption = this._videoPublishingOption ?? new Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.VideoPublishingOptions()); set { {_videoPublishingOption = value;} } }

        /// <summary>Node name. Must be unique within the topology.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.INodeBaseInternal)__sinkNodeBase).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.INodeBaseInternal)__sinkNodeBase).Name = value ; }

        /// <summary>The discriminator for derived types.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.INodeBaseInternal)__sinkNodeBase).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.INodeBaseInternal)__sinkNodeBase).Type = value ; }

        /// <summary>Backing field for <see cref="VideoCreationProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IVideoCreationProperties _videoCreationProperty;

        /// <summary>
        /// Optional video properties to be used in case a new video resource needs to be created on the service.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IVideoCreationProperties VideoCreationProperty { get => (this._videoCreationProperty = this._videoCreationProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.VideoCreationProperties()); set => this._videoCreationProperty = value; }

        /// <summary>
        /// Optional description provided by the user. Value can be up to 2048 characters long.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Inlined)]
        public string VideoCreationPropertyDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IVideoCreationPropertiesInternal)VideoCreationProperty).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IVideoCreationPropertiesInternal)VideoCreationProperty).Description = value ?? null; }

        /// <summary>
        /// Video retention period indicates how long the video is kept in storage. Value must be specified in ISO8601 duration format
        /// (i.e. "P1D" equals 1 day) and can vary between 1 day to 10 years, in 1 day increments. When absent (null), all video content
        /// is retained indefinitely. This property is only allowed for topologies where "kind" is set to "live".
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Inlined)]
        public string VideoCreationPropertyRetentionPeriod { get => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IVideoCreationPropertiesInternal)VideoCreationProperty).RetentionPeriod; set => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IVideoCreationPropertiesInternal)VideoCreationProperty).RetentionPeriod = value ?? null; }

        /// <summary>
        /// Segment length indicates the length of individual content files (segments) which are persisted to storage. Smaller segments
        /// provide lower archive playback latency but generate larger volume of storage transactions. Larger segments reduce the
        /// amount of storage transactions while increasing the archive playback latency. Value must be specified in ISO8601 duration
        /// format (i.e. "PT30S" equals 30 seconds) and can vary between 30 seconds to 5 minutes, in 30 seconds increments. Changing
        /// this value after the initial call to create the video resource can lead to errors when uploading content to the archive.
        /// Default value is 30 seconds. This property is only allowed for topologies where "kind" is set to "live".
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Inlined)]
        public string VideoCreationPropertySegmentLength { get => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IVideoCreationPropertiesInternal)VideoCreationProperty).SegmentLength; set => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IVideoCreationPropertiesInternal)VideoCreationProperty).SegmentLength = value ?? null; }

        /// <summary>Optional title provided by the user. Value can be up to 256 characters long.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Inlined)]
        public string VideoCreationPropertyTitle { get => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IVideoCreationPropertiesInternal)VideoCreationProperty).Title; set => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IVideoCreationPropertiesInternal)VideoCreationProperty).Title = value ?? null; }

        /// <summary>Backing field for <see cref="VideoName" /> property.</summary>
        private string _videoName;

        /// <summary>
        /// Name of a new or existing video resource used to capture and publish content. Note: if downstream of RTSP source, and
        /// if disableArchive is set to true, then no content is archived.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Owned)]
        public string VideoName { get => this._videoName; set => this._videoName = value; }

        /// <summary>Backing field for <see cref="VideoPublishingOption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IVideoPublishingOptions _videoPublishingOption;

        /// <summary>
        /// Options to change how the video sink publishes content via the video resource. This property is only allowed for topologies
        /// where "kind" is set to "live".
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IVideoPublishingOptions VideoPublishingOption { get => (this._videoPublishingOption = this._videoPublishingOption ?? new Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.VideoPublishingOptions()); set => this._videoPublishingOption = value; }

        /// <summary>
        /// When set to 'true' content will not be archived or recorded. This is used, for example, when the topology is used only
        /// for low latency video streaming. Default is 'false'. If set to 'true', then "disableRtspPublishing" must be set to 'false'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Inlined)]
        public string VideoPublishingOptionDisableArchive { get => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IVideoPublishingOptionsInternal)VideoPublishingOption).DisableArchive; set => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IVideoPublishingOptionsInternal)VideoPublishingOption).DisableArchive = value ?? null; }

        /// <summary>
        /// When set to 'true' the RTSP playback URL will not be published, disabling low latency streaming. This is used, for example,
        /// when the topology is used only for archiving content. Default is 'false'. If set to 'true', then "disableArchive" must
        /// be set to 'false'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Inlined)]
        public string VideoPublishingOptionDisableRtspPublishing { get => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IVideoPublishingOptionsInternal)VideoPublishingOption).DisableRtspPublishing; set => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IVideoPublishingOptionsInternal)VideoPublishingOption).DisableRtspPublishing = value ?? null; }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__sinkNodeBase), __sinkNodeBase);
            await eventListener.AssertObjectIsValid(nameof(__sinkNodeBase), __sinkNodeBase);
        }

        /// <summary>Creates an new <see cref="VideoSink" /> instance.</summary>
        public VideoSink()
        {

        }
    }
    /// Video sink in a live topology allows for video and audio to be captured, optionally archived, and published via a video
    /// resource. If archiving is enabled, this results in a video of type 'archive'. If used in a batch topology, this allows
    /// for video and audio to be stored as a file, and published via a video resource of type 'file'
    public partial interface IVideoSink :
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.ISinkNodeBase
    {
        /// <summary>
        /// Optional description provided by the user. Value can be up to 2048 characters long.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Optional description provided by the user. Value can be up to 2048 characters long.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string VideoCreationPropertyDescription { get; set; }
        /// <summary>
        /// Video retention period indicates how long the video is kept in storage. Value must be specified in ISO8601 duration format
        /// (i.e. "P1D" equals 1 day) and can vary between 1 day to 10 years, in 1 day increments. When absent (null), all video content
        /// is retained indefinitely. This property is only allowed for topologies where "kind" is set to "live".
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Video retention period indicates how long the video is kept in storage. Value must be specified in ISO8601 duration format (i.e. ""P1D"" equals 1 day) and can vary between 1 day to 10 years, in 1 day increments. When absent (null), all video content is retained indefinitely. This property is only allowed for topologies where ""kind"" is set to ""live"".",
        SerializedName = @"retentionPeriod",
        PossibleTypes = new [] { typeof(string) })]
        string VideoCreationPropertyRetentionPeriod { get; set; }
        /// <summary>
        /// Segment length indicates the length of individual content files (segments) which are persisted to storage. Smaller segments
        /// provide lower archive playback latency but generate larger volume of storage transactions. Larger segments reduce the
        /// amount of storage transactions while increasing the archive playback latency. Value must be specified in ISO8601 duration
        /// format (i.e. "PT30S" equals 30 seconds) and can vary between 30 seconds to 5 minutes, in 30 seconds increments. Changing
        /// this value after the initial call to create the video resource can lead to errors when uploading content to the archive.
        /// Default value is 30 seconds. This property is only allowed for topologies where "kind" is set to "live".
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Segment length indicates the length of individual content files (segments) which are persisted to storage. Smaller segments provide lower archive playback latency but generate larger volume of storage transactions. Larger segments reduce the amount of storage transactions while increasing the archive playback latency. Value must be specified in ISO8601 duration format (i.e. ""PT30S"" equals 30 seconds) and can vary between 30 seconds to 5 minutes, in 30 seconds increments. Changing this value after the initial call to create the video resource can lead to errors when uploading content to the archive. Default value is 30 seconds. This property is only allowed for topologies where ""kind"" is set to ""live"".",
        SerializedName = @"segmentLength",
        PossibleTypes = new [] { typeof(string) })]
        string VideoCreationPropertySegmentLength { get; set; }
        /// <summary>Optional title provided by the user. Value can be up to 256 characters long.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Optional title provided by the user. Value can be up to 256 characters long.",
        SerializedName = @"title",
        PossibleTypes = new [] { typeof(string) })]
        string VideoCreationPropertyTitle { get; set; }
        /// <summary>
        /// Name of a new or existing video resource used to capture and publish content. Note: if downstream of RTSP source, and
        /// if disableArchive is set to true, then no content is archived.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Name of a new or existing video resource used to capture and publish content. Note: if downstream of RTSP source, and if disableArchive is set to true, then no content is archived.",
        SerializedName = @"videoName",
        PossibleTypes = new [] { typeof(string) })]
        string VideoName { get; set; }
        /// <summary>
        /// When set to 'true' content will not be archived or recorded. This is used, for example, when the topology is used only
        /// for low latency video streaming. Default is 'false'. If set to 'true', then "disableRtspPublishing" must be set to 'false'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"When set to 'true' content will not be archived or recorded. This is used, for example, when the topology is used only for low latency video streaming. Default is 'false'.  If set to 'true', then ""disableRtspPublishing"" must be set to 'false'.",
        SerializedName = @"disableArchive",
        PossibleTypes = new [] { typeof(string) })]
        string VideoPublishingOptionDisableArchive { get; set; }
        /// <summary>
        /// When set to 'true' the RTSP playback URL will not be published, disabling low latency streaming. This is used, for example,
        /// when the topology is used only for archiving content. Default is 'false'. If set to 'true', then "disableArchive" must
        /// be set to 'false'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"When set to 'true' the RTSP playback URL will not be published, disabling low latency streaming. This is used, for example, when the topology is used only for archiving content. Default is 'false'.  If set to 'true', then ""disableArchive"" must be set to 'false'.",
        SerializedName = @"disableRtspPublishing",
        PossibleTypes = new [] { typeof(string) })]
        string VideoPublishingOptionDisableRtspPublishing { get; set; }

    }
    /// Video sink in a live topology allows for video and audio to be captured, optionally archived, and published via a video
    /// resource. If archiving is enabled, this results in a video of type 'archive'. If used in a batch topology, this allows
    /// for video and audio to be stored as a file, and published via a video resource of type 'file'
    internal partial interface IVideoSinkInternal :
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.ISinkNodeBaseInternal
    {
        /// <summary>
        /// Optional video properties to be used in case a new video resource needs to be created on the service.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IVideoCreationProperties VideoCreationProperty { get; set; }
        /// <summary>
        /// Optional description provided by the user. Value can be up to 2048 characters long.
        /// </summary>
        string VideoCreationPropertyDescription { get; set; }
        /// <summary>
        /// Video retention period indicates how long the video is kept in storage. Value must be specified in ISO8601 duration format
        /// (i.e. "P1D" equals 1 day) and can vary between 1 day to 10 years, in 1 day increments. When absent (null), all video content
        /// is retained indefinitely. This property is only allowed for topologies where "kind" is set to "live".
        /// </summary>
        string VideoCreationPropertyRetentionPeriod { get; set; }
        /// <summary>
        /// Segment length indicates the length of individual content files (segments) which are persisted to storage. Smaller segments
        /// provide lower archive playback latency but generate larger volume of storage transactions. Larger segments reduce the
        /// amount of storage transactions while increasing the archive playback latency. Value must be specified in ISO8601 duration
        /// format (i.e. "PT30S" equals 30 seconds) and can vary between 30 seconds to 5 minutes, in 30 seconds increments. Changing
        /// this value after the initial call to create the video resource can lead to errors when uploading content to the archive.
        /// Default value is 30 seconds. This property is only allowed for topologies where "kind" is set to "live".
        /// </summary>
        string VideoCreationPropertySegmentLength { get; set; }
        /// <summary>Optional title provided by the user. Value can be up to 256 characters long.</summary>
        string VideoCreationPropertyTitle { get; set; }
        /// <summary>
        /// Name of a new or existing video resource used to capture and publish content. Note: if downstream of RTSP source, and
        /// if disableArchive is set to true, then no content is archived.
        /// </summary>
        string VideoName { get; set; }
        /// <summary>
        /// Options to change how the video sink publishes content via the video resource. This property is only allowed for topologies
        /// where "kind" is set to "live".
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IVideoPublishingOptions VideoPublishingOption { get; set; }
        /// <summary>
        /// When set to 'true' content will not be archived or recorded. This is used, for example, when the topology is used only
        /// for low latency video streaming. Default is 'false'. If set to 'true', then "disableRtspPublishing" must be set to 'false'.
        /// </summary>
        string VideoPublishingOptionDisableArchive { get; set; }
        /// <summary>
        /// When set to 'true' the RTSP playback URL will not be published, disabling low latency streaming. This is used, for example,
        /// when the topology is used only for archiving content. Default is 'false'. If set to 'true', then "disableArchive" must
        /// be set to 'false'.
        /// </summary>
        string VideoPublishingOptionDisableRtspPublishing { get; set; }

    }
}