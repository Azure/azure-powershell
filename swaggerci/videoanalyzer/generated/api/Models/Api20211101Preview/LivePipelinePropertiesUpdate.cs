// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Extensions;

    /// <summary>Live pipeline properties.</summary>
    public partial class LivePipelinePropertiesUpdate :
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.ILivePipelinePropertiesUpdate,
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.ILivePipelinePropertiesUpdateInternal
    {

        /// <summary>Backing field for <see cref="BitrateKbps" /> property.</summary>
        private int? _bitrateKbps;

        /// <summary>
        /// Maximum bitrate capacity in Kbps reserved for the live pipeline. The allowed range is from 500 to 3000 Kbps in increments
        /// of 100 Kbps. If the RTSP camera exceeds this capacity, then the service will disconnect temporarily from the camera. It
        /// will retry to re-establish connection (with exponential backoff), checking to see if the camera bitrate is now below the
        /// reserved capacity. Doing so will ensure that one 'noisy neighbor' does not affect other live pipelines in your account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Owned)]
        public int? BitrateKbps { get => this._bitrateKbps; set => this._bitrateKbps = value; }

        /// <summary>Backing field for <see cref="Description" /> property.</summary>
        private string _description;

        /// <summary>An optional description for the pipeline.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Owned)]
        public string Description { get => this._description; set => this._description = value; }

        /// <summary>Internal Acessors for State</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.LivePipelineState? Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.ILivePipelinePropertiesUpdateInternal.State { get => this._state; set { {_state = value;} } }

        /// <summary>Backing field for <see cref="Parameter" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IParameterDefinition[] _parameter;

        /// <summary>
        /// List of the instance level parameter values for the user-defined topology parameters. A pipeline can only define or override
        /// parameters values for parameters which have been declared in the referenced topology. Topology parameters without a default
        /// value must be defined. Topology parameters with a default value can be optionally be overridden.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IParameterDefinition[] Parameter { get => this._parameter; set => this._parameter = value; }

        /// <summary>Backing field for <see cref="State" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.LivePipelineState? _state;

        /// <summary>Current state of the pipeline (read-only).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.LivePipelineState? State { get => this._state; }

        /// <summary>Backing field for <see cref="TopologyName" /> property.</summary>
        private string _topologyName;

        /// <summary>
        /// The reference to an existing pipeline topology defined for real-time content processing. When activated, this live pipeline
        /// will process content according to the pipeline topology definition.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Owned)]
        public string TopologyName { get => this._topologyName; set => this._topologyName = value; }

        /// <summary>Creates an new <see cref="LivePipelinePropertiesUpdate" /> instance.</summary>
        public LivePipelinePropertiesUpdate()
        {

        }
    }
    /// Live pipeline properties.
    public partial interface ILivePipelinePropertiesUpdate :
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Maximum bitrate capacity in Kbps reserved for the live pipeline. The allowed range is from 500 to 3000 Kbps in increments
        /// of 100 Kbps. If the RTSP camera exceeds this capacity, then the service will disconnect temporarily from the camera. It
        /// will retry to re-establish connection (with exponential backoff), checking to see if the camera bitrate is now below the
        /// reserved capacity. Doing so will ensure that one 'noisy neighbor' does not affect other live pipelines in your account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Maximum bitrate capacity in Kbps reserved for the live pipeline. The allowed range is from 500 to 3000 Kbps in increments of 100 Kbps. If the RTSP camera exceeds this capacity, then the service will disconnect temporarily from the camera. It will retry to re-establish connection (with exponential backoff), checking to see if the camera bitrate is now below the reserved capacity. Doing so will ensure that one 'noisy neighbor' does not affect other live pipelines in your account.",
        SerializedName = @"bitrateKbps",
        PossibleTypes = new [] { typeof(int) })]
        int? BitrateKbps { get; set; }
        /// <summary>An optional description for the pipeline.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"An optional description for the pipeline.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>
        /// List of the instance level parameter values for the user-defined topology parameters. A pipeline can only define or override
        /// parameters values for parameters which have been declared in the referenced topology. Topology parameters without a default
        /// value must be defined. Topology parameters with a default value can be optionally be overridden.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of the instance level parameter values for the user-defined topology parameters. A pipeline can only define or override parameters values for parameters which have been declared in the referenced topology. Topology parameters without a default value must be defined. Topology parameters with a default value can be optionally be overridden.",
        SerializedName = @"parameters",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IParameterDefinition) })]
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IParameterDefinition[] Parameter { get; set; }
        /// <summary>Current state of the pipeline (read-only).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Current state of the pipeline (read-only).",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.LivePipelineState) })]
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.LivePipelineState? State { get;  }
        /// <summary>
        /// The reference to an existing pipeline topology defined for real-time content processing. When activated, this live pipeline
        /// will process content according to the pipeline topology definition.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The reference to an existing pipeline topology defined for real-time content processing. When activated, this live pipeline will process content according to the pipeline topology definition.",
        SerializedName = @"topologyName",
        PossibleTypes = new [] { typeof(string) })]
        string TopologyName { get; set; }

    }
    /// Live pipeline properties.
    internal partial interface ILivePipelinePropertiesUpdateInternal

    {
        /// <summary>
        /// Maximum bitrate capacity in Kbps reserved for the live pipeline. The allowed range is from 500 to 3000 Kbps in increments
        /// of 100 Kbps. If the RTSP camera exceeds this capacity, then the service will disconnect temporarily from the camera. It
        /// will retry to re-establish connection (with exponential backoff), checking to see if the camera bitrate is now below the
        /// reserved capacity. Doing so will ensure that one 'noisy neighbor' does not affect other live pipelines in your account.
        /// </summary>
        int? BitrateKbps { get; set; }
        /// <summary>An optional description for the pipeline.</summary>
        string Description { get; set; }
        /// <summary>
        /// List of the instance level parameter values for the user-defined topology parameters. A pipeline can only define or override
        /// parameters values for parameters which have been declared in the referenced topology. Topology parameters without a default
        /// value must be defined. Topology parameters with a default value can be optionally be overridden.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IParameterDefinition[] Parameter { get; set; }
        /// <summary>Current state of the pipeline (read-only).</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.LivePipelineState? State { get; set; }
        /// <summary>
        /// The reference to an existing pipeline topology defined for real-time content processing. When activated, this live pipeline
        /// will process content according to the pipeline topology definition.
        /// </summary>
        string TopologyName { get; set; }

    }
}