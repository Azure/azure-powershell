// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Extensions;

    /// <summary>
    /// Pipeline topology describes the processing steps to be applied when processing content for a particular outcome. The topology
    /// should be defined according to the scenario to be achieved and can be reused across many pipeline instances which share
    /// the same processing characteristics. For instance, a pipeline topology which captures content from a RTSP camera and archives
    /// the content can be reused across many different cameras, as long as the same processing is to be applied across all the
    /// cameras. Individual instance properties can be defined through the use of user-defined parameters, which allow for a topology
    /// to be parameterized. This allows individual pipelines refer to different values, such as individual cameras' RTSP endpoints
    /// and credentials. Overall a topology is composed of the following:
    ///
    /// - Parameters: list of user defined parameters that can be references across the topology nodes.
    /// - Sources: list of one or more data sources nodes such as an RTSP source which allows for content to be ingested from
    /// cameras.
    /// - Processors: list of nodes which perform data analysis or transformations.
    /// - Sinks: list of one or more data sinks which allow for data to be stored or exported to other destinations.
    /// </summary>
    public partial class PipelineTopologyUpdate :
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IPipelineTopologyUpdate,
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IPipelineTopologyUpdateInternal,
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api30.IResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api30.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api30.Resource();

        /// <summary>
        /// An optional description of the pipeline topology. It is recommended that the expected use of the topology to be described
        /// here.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Inlined)]
        public string Description { get => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IPipelineTopologyPropertiesUpdateInternal)Property).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IPipelineTopologyPropertiesUpdateInternal)Property).Description = value ?? null; }

        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api30.IResourceInternal)__resource).Id; }

        /// <summary>Backing field for <see cref="Kind" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.Kind? _kind;

        /// <summary>Topology kind.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.Kind? Kind { get => this._kind; set => this._kind = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IPipelineTopologyPropertiesUpdate Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IPipelineTopologyUpdateInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.PipelineTopologyPropertiesUpdate()); set { {_property = value;} } }

        /// <summary>Internal Acessors for Sku</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.ISku Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IPipelineTopologyUpdateInternal.Sku { get => (this._sku = this._sku ?? new Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.Sku()); set { {_sku = value;} } }

        /// <summary>Internal Acessors for SkuTier</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.SkuTier? Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IPipelineTopologyUpdateInternal.SkuTier { get => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.ISkuInternal)Sku).Tier; set => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.ISkuInternal)Sku).Tier = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api30.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api30.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api30.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api30.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api30.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api30.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api30.ISystemData Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api30.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api30.IResourceInternal)__resource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api30.IResourceInternal)__resource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api30.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api30.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api30.IResourceInternal)__resource).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api30.IResourceInternal)__resource).Name; }

        /// <summary>
        /// List of the topology parameter declarations. Parameters declared here can be referenced throughout the topology nodes
        /// through the use of "${PARAMETER_NAME}" string pattern. Parameters can have optional default values and can later be defined
        /// in individual instances of the pipeline.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IParameterDeclaration[] Parameter { get => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IPipelineTopologyPropertiesUpdateInternal)Property).Parameter; set => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IPipelineTopologyPropertiesUpdateInternal)Property).Parameter = value ?? null /* arrayOf */; }

        /// <summary>
        /// List of the topology processor nodes. Processor nodes enable pipeline data to be analyzed, processed or transformed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IProcessorNodeBase[] Processor { get => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IPipelineTopologyPropertiesUpdateInternal)Property).Processor; set => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IPipelineTopologyPropertiesUpdateInternal)Property).Processor = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IPipelineTopologyPropertiesUpdate _property;

        /// <summary>The resource properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IPipelineTopologyPropertiesUpdate Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.PipelineTopologyPropertiesUpdate()); set => this._property = value; }

        /// <summary>
        /// List of the topology sink nodes. Sink nodes allow pipeline data to be stored or exported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.ISinkNodeBase[] Sink { get => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IPipelineTopologyPropertiesUpdateInternal)Property).Sink; set => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IPipelineTopologyPropertiesUpdateInternal)Property).Sink = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Sku" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.ISku _sku;

        /// <summary>Describes the properties of a SKU.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.ISku Sku { get => (this._sku = this._sku ?? new Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.Sku()); set => this._sku = value; }

        /// <summary>The SKU name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.SkuName? SkuName { get => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.ISkuInternal)Sku).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.ISkuInternal)Sku).Name = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.SkuName)""); }

        /// <summary>The SKU tier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.SkuTier? SkuTier { get => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.ISkuInternal)Sku).Tier; }

        /// <summary>
        /// List of the topology source nodes. Source nodes enable external data to be ingested by the pipeline.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.ISourceNodeBase[] Source { get => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IPipelineTopologyPropertiesUpdateInternal)Property).Source; set => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IPipelineTopologyPropertiesUpdateInternal)Property).Source = value ?? null /* arrayOf */; }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api30.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api30.IResourceInternal)__resource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api30.IResourceInternal)__resource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api30.IResourceInternal)__resource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api30.IResourceInternal)__resource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api30.IResourceInternal)__resource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api30.IResourceInternal)__resource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api30.IResourceInternal)__resource).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.CreatedByType)""); }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api30.IResourceInternal)__resource).Type; }

        /// <summary>Creates an new <see cref="PipelineTopologyUpdate" /> instance.</summary>
        public PipelineTopologyUpdate()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// Pipeline topology describes the processing steps to be applied when processing content for a particular outcome. The topology
    /// should be defined according to the scenario to be achieved and can be reused across many pipeline instances which share
    /// the same processing characteristics. For instance, a pipeline topology which captures content from a RTSP camera and archives
    /// the content can be reused across many different cameras, as long as the same processing is to be applied across all the
    /// cameras. Individual instance properties can be defined through the use of user-defined parameters, which allow for a topology
    /// to be parameterized. This allows individual pipelines refer to different values, such as individual cameras' RTSP endpoints
    /// and credentials. Overall a topology is composed of the following:
    ///
    /// - Parameters: list of user defined parameters that can be references across the topology nodes.
    /// - Sources: list of one or more data sources nodes such as an RTSP source which allows for content to be ingested from
    /// cameras.
    /// - Processors: list of nodes which perform data analysis or transformations.
    /// - Sinks: list of one or more data sinks which allow for data to be stored or exported to other destinations.
    public partial interface IPipelineTopologyUpdate :
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api30.IResource
    {
        /// <summary>
        /// An optional description of the pipeline topology. It is recommended that the expected use of the topology to be described
        /// here.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"An optional description of the pipeline topology. It is recommended that the expected use of the topology to be described here.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>Topology kind.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Topology kind.",
        SerializedName = @"kind",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.Kind) })]
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.Kind? Kind { get; set; }
        /// <summary>
        /// List of the topology parameter declarations. Parameters declared here can be referenced throughout the topology nodes
        /// through the use of "${PARAMETER_NAME}" string pattern. Parameters can have optional default values and can later be defined
        /// in individual instances of the pipeline.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of the topology parameter declarations. Parameters declared here can be referenced throughout the topology nodes through the use of ""${PARAMETER_NAME}"" string pattern. Parameters can have optional default values and can later be defined in individual instances of the pipeline.",
        SerializedName = @"parameters",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IParameterDeclaration) })]
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IParameterDeclaration[] Parameter { get; set; }
        /// <summary>
        /// List of the topology processor nodes. Processor nodes enable pipeline data to be analyzed, processed or transformed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of the topology processor nodes. Processor nodes enable pipeline data to be analyzed, processed or transformed.",
        SerializedName = @"processors",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IProcessorNodeBase) })]
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IProcessorNodeBase[] Processor { get; set; }
        /// <summary>
        /// List of the topology sink nodes. Sink nodes allow pipeline data to be stored or exported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of the topology sink nodes. Sink nodes allow pipeline data to be stored or exported.",
        SerializedName = @"sinks",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.ISinkNodeBase) })]
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.ISinkNodeBase[] Sink { get; set; }
        /// <summary>The SKU name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The SKU name.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.SkuName) })]
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.SkuName? SkuName { get; set; }
        /// <summary>The SKU tier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The SKU tier.",
        SerializedName = @"tier",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.SkuTier) })]
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.SkuTier? SkuTier { get;  }
        /// <summary>
        /// List of the topology source nodes. Source nodes enable external data to be ingested by the pipeline.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of the topology source nodes. Source nodes enable external data to be ingested by the pipeline.",
        SerializedName = @"sources",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.ISourceNodeBase) })]
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.ISourceNodeBase[] Source { get; set; }

    }
    /// Pipeline topology describes the processing steps to be applied when processing content for a particular outcome. The topology
    /// should be defined according to the scenario to be achieved and can be reused across many pipeline instances which share
    /// the same processing characteristics. For instance, a pipeline topology which captures content from a RTSP camera and archives
    /// the content can be reused across many different cameras, as long as the same processing is to be applied across all the
    /// cameras. Individual instance properties can be defined through the use of user-defined parameters, which allow for a topology
    /// to be parameterized. This allows individual pipelines refer to different values, such as individual cameras' RTSP endpoints
    /// and credentials. Overall a topology is composed of the following:
    ///
    /// - Parameters: list of user defined parameters that can be references across the topology nodes.
    /// - Sources: list of one or more data sources nodes such as an RTSP source which allows for content to be ingested from
    /// cameras.
    /// - Processors: list of nodes which perform data analysis or transformations.
    /// - Sinks: list of one or more data sinks which allow for data to be stored or exported to other destinations.
    internal partial interface IPipelineTopologyUpdateInternal :
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api30.IResourceInternal
    {
        /// <summary>
        /// An optional description of the pipeline topology. It is recommended that the expected use of the topology to be described
        /// here.
        /// </summary>
        string Description { get; set; }
        /// <summary>Topology kind.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.Kind? Kind { get; set; }
        /// <summary>
        /// List of the topology parameter declarations. Parameters declared here can be referenced throughout the topology nodes
        /// through the use of "${PARAMETER_NAME}" string pattern. Parameters can have optional default values and can later be defined
        /// in individual instances of the pipeline.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IParameterDeclaration[] Parameter { get; set; }
        /// <summary>
        /// List of the topology processor nodes. Processor nodes enable pipeline data to be analyzed, processed or transformed.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IProcessorNodeBase[] Processor { get; set; }
        /// <summary>The resource properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IPipelineTopologyPropertiesUpdate Property { get; set; }
        /// <summary>
        /// List of the topology sink nodes. Sink nodes allow pipeline data to be stored or exported.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.ISinkNodeBase[] Sink { get; set; }
        /// <summary>Describes the properties of a SKU.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.ISku Sku { get; set; }
        /// <summary>The SKU name.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.SkuName? SkuName { get; set; }
        /// <summary>The SKU tier.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.SkuTier? SkuTier { get; set; }
        /// <summary>
        /// List of the topology source nodes. Source nodes enable external data to be ingested by the pipeline.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.ISourceNodeBase[] Source { get; set; }

    }
}