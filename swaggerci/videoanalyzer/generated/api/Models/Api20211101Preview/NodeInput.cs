// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Extensions;

    /// <summary>Describes an input signal to be used on a pipeline node.</summary>
    public partial class NodeInput :
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.INodeInput,
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.INodeInputInternal
    {

        /// <summary>Backing field for <see cref="NodeName" /> property.</summary>
        private string _nodeName;

        /// <summary>
        /// The name of the upstream node in the pipeline which output is used as input of the current node.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Owned)]
        public string NodeName { get => this._nodeName; set => this._nodeName = value; }

        /// <summary>Creates an new <see cref="NodeInput" /> instance.</summary>
        public NodeInput()
        {

        }
    }
    /// Describes an input signal to be used on a pipeline node.
    public partial interface INodeInput :
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The name of the upstream node in the pipeline which output is used as input of the current node.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The name of the upstream node in the pipeline which output is used as input of the current node.",
        SerializedName = @"nodeName",
        PossibleTypes = new [] { typeof(string) })]
        string NodeName { get; set; }

    }
    /// Describes an input signal to be used on a pipeline node.
    internal partial interface INodeInputInternal

    {
        /// <summary>
        /// The name of the upstream node in the pipeline which output is used as input of the current node.
        /// </summary>
        string NodeName { get; set; }

    }
}