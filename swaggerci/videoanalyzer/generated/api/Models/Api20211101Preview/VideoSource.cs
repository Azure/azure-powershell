// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Extensions;

    /// <summary>
    /// Video source allows for content from a Video Analyzer video resource to be ingested into a pipeline. Currently supported
    /// only with batch pipelines.
    /// </summary>
    public partial class VideoSource :
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IVideoSource,
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IVideoSourceInternal,
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.ISourceNodeBase"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.ISourceNodeBase __sourceNodeBase = new Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.SourceNodeBase();

        /// <summary>Internal Acessors for TimeSequence</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.ITimeSequenceBase Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IVideoSourceInternal.TimeSequence { get => (this._timeSequence = this._timeSequence ?? new Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.TimeSequenceBase()); set { {_timeSequence = value;} } }

        /// <summary>Node name. Must be unique within the topology.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.INodeBaseInternal)__sourceNodeBase).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.INodeBaseInternal)__sourceNodeBase).Name = value ; }

        /// <summary>Backing field for <see cref="TimeSequence" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.ITimeSequenceBase _timeSequence;

        /// <summary>
        /// Describes a sequence of datetime ranges. The video source only picks up recorded media within these ranges.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.ITimeSequenceBase TimeSequence { get => (this._timeSequence = this._timeSequence ?? new Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.TimeSequenceBase()); set => this._timeSequence = value; }

        /// <summary>The discriminator for derived types.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Inlined)]
        public string TimeSequenceType { get => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.ITimeSequenceBaseInternal)TimeSequence).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.ITimeSequenceBaseInternal)TimeSequence).Type = value ; }

        /// <summary>The discriminator for derived types.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.INodeBaseInternal)__sourceNodeBase).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.INodeBaseInternal)__sourceNodeBase).Type = value ; }

        /// <summary>Backing field for <see cref="VideoName" /> property.</summary>
        private string _videoName;

        /// <summary>Name of the Video Analyzer video resource to be used as the source.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Owned)]
        public string VideoName { get => this._videoName; set => this._videoName = value; }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__sourceNodeBase), __sourceNodeBase);
            await eventListener.AssertObjectIsValid(nameof(__sourceNodeBase), __sourceNodeBase);
        }

        /// <summary>Creates an new <see cref="VideoSource" /> instance.</summary>
        public VideoSource()
        {

        }
    }
    /// Video source allows for content from a Video Analyzer video resource to be ingested into a pipeline. Currently supported
    /// only with batch pipelines.
    public partial interface IVideoSource :
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.ISourceNodeBase
    {
        /// <summary>The discriminator for derived types.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The discriminator for derived types.",
        SerializedName = @"@type",
        PossibleTypes = new [] { typeof(string) })]
        string TimeSequenceType { get; set; }
        /// <summary>Name of the Video Analyzer video resource to be used as the source.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Name of the Video Analyzer video resource to be used as the source.",
        SerializedName = @"videoName",
        PossibleTypes = new [] { typeof(string) })]
        string VideoName { get; set; }

    }
    /// Video source allows for content from a Video Analyzer video resource to be ingested into a pipeline. Currently supported
    /// only with batch pipelines.
    internal partial interface IVideoSourceInternal :
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.ISourceNodeBaseInternal
    {
        /// <summary>
        /// Describes a sequence of datetime ranges. The video source only picks up recorded media within these ranges.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.ITimeSequenceBase TimeSequence { get; set; }
        /// <summary>The discriminator for derived types.</summary>
        string TimeSequenceType { get; set; }
        /// <summary>Name of the Video Analyzer video resource to be used as the source.</summary>
        string VideoName { get; set; }

    }
}