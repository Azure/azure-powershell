// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Extensions;

    /// <summary>
    /// Base type for all audio encoder presets, which define the recipe or instructions on how audio should be processed.
    /// </summary>
    public partial class AudioEncoderBase :
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IAudioEncoderBase,
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IAudioEncoderBaseInternal
    {

        /// <summary>Backing field for <see cref="BitrateKbps" /> property.</summary>
        private string _bitrateKbps;

        /// <summary>
        /// Bitrate, in kilobits per second or Kbps, at which audio should be encoded (2-channel stereo audio at a sampling rate of
        /// 48 kHz). Allowed values are 96, 112, 128, 160, 192, 224, and 256. If omitted, the bitrate of the input audio is used.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Owned)]
        public string BitrateKbps { get => this._bitrateKbps; set => this._bitrateKbps = value; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>The discriminator for derived types.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Owned)]
        public string Type { get => this._type; set => this._type = value; }

        /// <summary>Creates an new <see cref="AudioEncoderBase" /> instance.</summary>
        public AudioEncoderBase()
        {

        }
    }
    /// Base type for all audio encoder presets, which define the recipe or instructions on how audio should be processed.
    public partial interface IAudioEncoderBase :
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Bitrate, in kilobits per second or Kbps, at which audio should be encoded (2-channel stereo audio at a sampling rate of
        /// 48 kHz). Allowed values are 96, 112, 128, 160, 192, 224, and 256. If omitted, the bitrate of the input audio is used.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Bitrate, in kilobits per second or Kbps, at which audio should be encoded (2-channel stereo audio at a sampling rate of 48 kHz). Allowed values are 96, 112, 128, 160, 192, 224, and 256. If omitted, the bitrate of the input audio is used.",
        SerializedName = @"bitrateKbps",
        PossibleTypes = new [] { typeof(string) })]
        string BitrateKbps { get; set; }
        /// <summary>The discriminator for derived types.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The discriminator for derived types.",
        SerializedName = @"@type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get; set; }

    }
    /// Base type for all audio encoder presets, which define the recipe or instructions on how audio should be processed.
    internal partial interface IAudioEncoderBaseInternal

    {
        /// <summary>
        /// Bitrate, in kilobits per second or Kbps, at which audio should be encoded (2-channel stereo audio at a sampling rate of
        /// 48 kHz). Allowed values are 96, 112, 128, 160, 192, 224, and 256. If omitted, the bitrate of the input audio is used.
        /// </summary>
        string BitrateKbps { get; set; }
        /// <summary>The discriminator for derived types.</summary>
        string Type { get; set; }

    }
}