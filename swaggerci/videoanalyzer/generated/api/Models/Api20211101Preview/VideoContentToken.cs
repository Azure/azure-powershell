// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Extensions;

    /// <summary>"Video content token grants access to the video content URLs."</summary>
    public partial class VideoContentToken :
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IVideoContentToken,
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IVideoContentTokenInternal
    {

        /// <summary>Backing field for <see cref="ExpirationDate" /> property.</summary>
        private global::System.DateTime? _expirationDate;

        /// <summary>The content token expiration date in ISO8601 format (eg. 2021-01-01T00:00:00Z).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Owned)]
        public global::System.DateTime? ExpirationDate { get => this._expirationDate; }

        /// <summary>Internal Acessors for ExpirationDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IVideoContentTokenInternal.ExpirationDate { get => this._expirationDate; set { {_expirationDate = value;} } }

        /// <summary>Internal Acessors for Token</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IVideoContentTokenInternal.Token { get => this._token; set { {_token = value;} } }

        /// <summary>Backing field for <see cref="Token" /> property.</summary>
        private string _token;

        /// <summary>
        /// The content token value to be added to the video content URL as the value for the "token" query string parameter. The
        /// token is specific to a single video.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Owned)]
        public string Token { get => this._token; }

        /// <summary>Creates an new <see cref="VideoContentToken" /> instance.</summary>
        public VideoContentToken()
        {

        }
    }
    /// "Video content token grants access to the video content URLs."
    public partial interface IVideoContentToken :
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.IJsonSerializable
    {
        /// <summary>The content token expiration date in ISO8601 format (eg. 2021-01-01T00:00:00Z).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The content token expiration date in ISO8601 format (eg. 2021-01-01T00:00:00Z).",
        SerializedName = @"expirationDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ExpirationDate { get;  }
        /// <summary>
        /// The content token value to be added to the video content URL as the value for the "token" query string parameter. The
        /// token is specific to a single video.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The content token value to be added to the video content URL as the value for the ""token"" query string parameter. The token is specific to a single video.",
        SerializedName = @"token",
        PossibleTypes = new [] { typeof(string) })]
        string Token { get;  }

    }
    /// "Video content token grants access to the video content URLs."
    internal partial interface IVideoContentTokenInternal

    {
        /// <summary>The content token expiration date in ISO8601 format (eg. 2021-01-01T00:00:00Z).</summary>
        global::System.DateTime? ExpirationDate { get; set; }
        /// <summary>
        /// The content token value to be added to the video content URL as the value for the "token" query string parameter. The
        /// token is specific to a single video.
        /// </summary>
        string Token { get; set; }

    }
}