// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Extensions;

    /// <summary>The properties of the Video Analyzer account.</summary>
    public partial class VideoAnalyzerPropertiesUpdate :
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IVideoAnalyzerPropertiesUpdate,
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IVideoAnalyzerPropertiesUpdateInternal
    {

        /// <summary>
        /// Whether or not public network access is allowed for specified resources under the Video Analyzer account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.PublicNetworkAccess? ConsumptionPublicNetworkAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.INetworkAccessControlInternal)NetworkAccessControl).ConsumptionPublicNetworkAccess; set => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.INetworkAccessControlInternal)NetworkAccessControl).ConsumptionPublicNetworkAccess = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.PublicNetworkAccess)""); }

        /// <summary>Backing field for <see cref="Encryption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IAccountEncryption _encryption;

        /// <summary>The account encryption properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IAccountEncryption Encryption { get => (this._encryption = this._encryption ?? new Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.AccountEncryption()); set => this._encryption = value; }

        /// <summary>The current status of the Key Vault mapping.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Inlined)]
        public string EncryptionStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IAccountEncryptionInternal)Encryption).Status; }

        /// <summary>The type of key used to encrypt the Account Key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.AccountEncryptionKeyType? EncryptionType { get => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IAccountEncryptionInternal)Encryption).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IAccountEncryptionInternal)Encryption).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.AccountEncryptionKeyType)""); }

        /// <summary>Backing field for <see cref="Endpoint" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IEndpoint[] _endpoint;

        /// <summary>The endpoints associated with this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IEndpoint[] Endpoint { get => this._endpoint; }

        /// <summary>
        /// The user assigned managed identity's resource identifier to use when accessing a resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Inlined)]
        public string IdentityUserAssignedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IAccountEncryptionInternal)Encryption).IdentityUserAssignedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IAccountEncryptionInternal)Encryption).IdentityUserAssignedIdentity = value ?? null; }

        /// <summary>
        /// Whether or not public network access is allowed for specified resources under the Video Analyzer account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.PublicNetworkAccess? IngestionPublicNetworkAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.INetworkAccessControlInternal)NetworkAccessControl).IngestionPublicNetworkAccess; set => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.INetworkAccessControlInternal)NetworkAccessControl).IngestionPublicNetworkAccess = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.PublicNetworkAccess)""); }

        /// <summary>
        /// Whether or not public network access is allowed for specified resources under the Video Analyzer account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.PublicNetworkAccess? IntegrationPublicNetworkAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.INetworkAccessControlInternal)NetworkAccessControl).IntegrationPublicNetworkAccess; set => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.INetworkAccessControlInternal)NetworkAccessControl).IntegrationPublicNetworkAccess = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.PublicNetworkAccess)""); }

        /// <summary>Backing field for <see cref="IotHub" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IIotHub[] _iotHub;

        /// <summary>The IoT Hubs for this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IIotHub[] IotHub { get => this._iotHub; set => this._iotHub = value; }

        /// <summary>
        /// The current key used to encrypt Video Analyzer account, including the key version.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Inlined)]
        public string KeyVaultPropertyCurrentKeyIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IAccountEncryptionInternal)Encryption).KeyVaultPropertyCurrentKeyIdentifier; }

        /// <summary>
        /// The URL of the Key Vault key used to encrypt the account. The key may either be versioned (for example https://vault/keys/mykey/version1)
        /// or reference a key without a version (for example https://vault/keys/mykey).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Inlined)]
        public string KeyVaultPropertyKeyIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IAccountEncryptionInternal)Encryption).KeyVaultPropertyKeyIdentifier; set => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IAccountEncryptionInternal)Encryption).KeyVaultPropertyKeyIdentifier = value ?? null; }

        /// <summary>Internal Acessors for Encryption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IAccountEncryption Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IVideoAnalyzerPropertiesUpdateInternal.Encryption { get => (this._encryption = this._encryption ?? new Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.AccountEncryption()); set { {_encryption = value;} } }

        /// <summary>Internal Acessors for EncryptionIdentity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IResourceIdentity Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IVideoAnalyzerPropertiesUpdateInternal.EncryptionIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IAccountEncryptionInternal)Encryption).Identity; set => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IAccountEncryptionInternal)Encryption).Identity = value; }

        /// <summary>Internal Acessors for EncryptionKeyVaultProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IKeyVaultProperties Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IVideoAnalyzerPropertiesUpdateInternal.EncryptionKeyVaultProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IAccountEncryptionInternal)Encryption).KeyVaultProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IAccountEncryptionInternal)Encryption).KeyVaultProperty = value; }

        /// <summary>Internal Acessors for EncryptionStatus</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IVideoAnalyzerPropertiesUpdateInternal.EncryptionStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IAccountEncryptionInternal)Encryption).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IAccountEncryptionInternal)Encryption).Status = value; }

        /// <summary>Internal Acessors for Endpoint</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IEndpoint[] Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IVideoAnalyzerPropertiesUpdateInternal.Endpoint { get => this._endpoint; set { {_endpoint = value;} } }

        /// <summary>Internal Acessors for KeyVaultPropertyCurrentKeyIdentifier</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IVideoAnalyzerPropertiesUpdateInternal.KeyVaultPropertyCurrentKeyIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IAccountEncryptionInternal)Encryption).KeyVaultPropertyCurrentKeyIdentifier; set => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IAccountEncryptionInternal)Encryption).KeyVaultPropertyCurrentKeyIdentifier = value; }

        /// <summary>Internal Acessors for NetworkAccessControl</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.INetworkAccessControl Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IVideoAnalyzerPropertiesUpdateInternal.NetworkAccessControl { get => (this._networkAccessControl = this._networkAccessControl ?? new Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.NetworkAccessControl()); set { {_networkAccessControl = value;} } }

        /// <summary>Internal Acessors for NetworkAccessControlConsumption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IGroupLevelAccessControl Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IVideoAnalyzerPropertiesUpdateInternal.NetworkAccessControlConsumption { get => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.INetworkAccessControlInternal)NetworkAccessControl).Consumption; set => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.INetworkAccessControlInternal)NetworkAccessControl).Consumption = value; }

        /// <summary>Internal Acessors for NetworkAccessControlIngestion</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IGroupLevelAccessControl Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IVideoAnalyzerPropertiesUpdateInternal.NetworkAccessControlIngestion { get => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.INetworkAccessControlInternal)NetworkAccessControl).Ingestion; set => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.INetworkAccessControlInternal)NetworkAccessControl).Ingestion = value; }

        /// <summary>Internal Acessors for NetworkAccessControlIntegration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IGroupLevelAccessControl Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IVideoAnalyzerPropertiesUpdateInternal.NetworkAccessControlIntegration { get => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.INetworkAccessControlInternal)NetworkAccessControl).Integration; set => ((Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.INetworkAccessControlInternal)NetworkAccessControl).Integration = value; }

        /// <summary>Internal Acessors for PrivateEndpointConnection</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api30.IPrivateEndpointConnection[] Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IVideoAnalyzerPropertiesUpdateInternal.PrivateEndpointConnection { get => this._privateEndpointConnection; set { {_privateEndpointConnection = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IVideoAnalyzerPropertiesUpdateInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Backing field for <see cref="NetworkAccessControl" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.INetworkAccessControl _networkAccessControl;

        /// <summary>Network access control for Video Analyzer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.INetworkAccessControl NetworkAccessControl { get => (this._networkAccessControl = this._networkAccessControl ?? new Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.NetworkAccessControl()); set => this._networkAccessControl = value; }

        /// <summary>Backing field for <see cref="PrivateEndpointConnection" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api30.IPrivateEndpointConnection[] _privateEndpointConnection;

        /// <summary>Private Endpoint Connections created under Video Analyzer account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api30.IPrivateEndpointConnection[] PrivateEndpointConnection { get => this._privateEndpointConnection; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.ProvisioningState? _provisioningState;

        /// <summary>Provisioning state of the Video Analyzer account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.ProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="PublicNetworkAccess" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.PublicNetworkAccess? _publicNetworkAccess;

        /// <summary>
        /// Whether or not public network access is allowed for resources under the Video Analyzer account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.PublicNetworkAccess? PublicNetworkAccess { get => this._publicNetworkAccess; set => this._publicNetworkAccess = value; }

        /// <summary>Backing field for <see cref="StorageAccount" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IStorageAccount[] _storageAccount;

        /// <summary>The storage accounts for this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IStorageAccount[] StorageAccount { get => this._storageAccount; set => this._storageAccount = value; }

        /// <summary>Creates an new <see cref="VideoAnalyzerPropertiesUpdate" /> instance.</summary>
        public VideoAnalyzerPropertiesUpdate()
        {

        }
    }
    /// The properties of the Video Analyzer account.
    public partial interface IVideoAnalyzerPropertiesUpdate :
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Whether or not public network access is allowed for specified resources under the Video Analyzer account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether or not public network access is allowed for specified resources under the Video Analyzer account.",
        SerializedName = @"publicNetworkAccess",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.PublicNetworkAccess) })]
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.PublicNetworkAccess? ConsumptionPublicNetworkAccess { get; set; }
        /// <summary>The current status of the Key Vault mapping.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The current status of the Key Vault mapping.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(string) })]
        string EncryptionStatus { get;  }
        /// <summary>The type of key used to encrypt the Account Key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of key used to encrypt the Account Key.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.AccountEncryptionKeyType) })]
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.AccountEncryptionKeyType? EncryptionType { get; set; }
        /// <summary>The endpoints associated with this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The endpoints associated with this resource.",
        SerializedName = @"endpoints",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IEndpoint) })]
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IEndpoint[] Endpoint { get;  }
        /// <summary>
        /// The user assigned managed identity's resource identifier to use when accessing a resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The user assigned managed identity's resource identifier to use when accessing a resource.",
        SerializedName = @"userAssignedIdentity",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityUserAssignedIdentity { get; set; }
        /// <summary>
        /// Whether or not public network access is allowed for specified resources under the Video Analyzer account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether or not public network access is allowed for specified resources under the Video Analyzer account.",
        SerializedName = @"publicNetworkAccess",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.PublicNetworkAccess) })]
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.PublicNetworkAccess? IngestionPublicNetworkAccess { get; set; }
        /// <summary>
        /// Whether or not public network access is allowed for specified resources under the Video Analyzer account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether or not public network access is allowed for specified resources under the Video Analyzer account.",
        SerializedName = @"publicNetworkAccess",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.PublicNetworkAccess) })]
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.PublicNetworkAccess? IntegrationPublicNetworkAccess { get; set; }
        /// <summary>The IoT Hubs for this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The IoT Hubs for this resource.",
        SerializedName = @"iotHubs",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IIotHub) })]
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IIotHub[] IotHub { get; set; }
        /// <summary>
        /// The current key used to encrypt Video Analyzer account, including the key version.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The current key used to encrypt Video Analyzer account, including the key version.",
        SerializedName = @"currentKeyIdentifier",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultPropertyCurrentKeyIdentifier { get;  }
        /// <summary>
        /// The URL of the Key Vault key used to encrypt the account. The key may either be versioned (for example https://vault/keys/mykey/version1)
        /// or reference a key without a version (for example https://vault/keys/mykey).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The URL of the Key Vault key used to encrypt the account. The key may either be versioned (for example https://vault/keys/mykey/version1) or reference a key without a version (for example https://vault/keys/mykey).",
        SerializedName = @"keyIdentifier",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultPropertyKeyIdentifier { get; set; }
        /// <summary>Private Endpoint Connections created under Video Analyzer account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Private Endpoint Connections created under Video Analyzer account.",
        SerializedName = @"privateEndpointConnections",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api30.IPrivateEndpointConnection) })]
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api30.IPrivateEndpointConnection[] PrivateEndpointConnection { get;  }
        /// <summary>Provisioning state of the Video Analyzer account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Provisioning state of the Video Analyzer account.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>
        /// Whether or not public network access is allowed for resources under the Video Analyzer account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether or not public network access is allowed for resources under the Video Analyzer account.",
        SerializedName = @"publicNetworkAccess",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.PublicNetworkAccess) })]
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.PublicNetworkAccess? PublicNetworkAccess { get; set; }
        /// <summary>The storage accounts for this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The storage accounts for this resource.",
        SerializedName = @"storageAccounts",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IStorageAccount) })]
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IStorageAccount[] StorageAccount { get; set; }

    }
    /// The properties of the Video Analyzer account.
    internal partial interface IVideoAnalyzerPropertiesUpdateInternal

    {
        /// <summary>
        /// Whether or not public network access is allowed for specified resources under the Video Analyzer account.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.PublicNetworkAccess? ConsumptionPublicNetworkAccess { get; set; }
        /// <summary>The account encryption properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IAccountEncryption Encryption { get; set; }
        /// <summary>The Key Vault identity.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IResourceIdentity EncryptionIdentity { get; set; }
        /// <summary>The properties of the key used to encrypt the account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IKeyVaultProperties EncryptionKeyVaultProperty { get; set; }
        /// <summary>The current status of the Key Vault mapping.</summary>
        string EncryptionStatus { get; set; }
        /// <summary>The type of key used to encrypt the Account Key.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.AccountEncryptionKeyType? EncryptionType { get; set; }
        /// <summary>The endpoints associated with this resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IEndpoint[] Endpoint { get; set; }
        /// <summary>
        /// The user assigned managed identity's resource identifier to use when accessing a resource.
        /// </summary>
        string IdentityUserAssignedIdentity { get; set; }
        /// <summary>
        /// Whether or not public network access is allowed for specified resources under the Video Analyzer account.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.PublicNetworkAccess? IngestionPublicNetworkAccess { get; set; }
        /// <summary>
        /// Whether or not public network access is allowed for specified resources under the Video Analyzer account.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.PublicNetworkAccess? IntegrationPublicNetworkAccess { get; set; }
        /// <summary>The IoT Hubs for this resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IIotHub[] IotHub { get; set; }
        /// <summary>
        /// The current key used to encrypt Video Analyzer account, including the key version.
        /// </summary>
        string KeyVaultPropertyCurrentKeyIdentifier { get; set; }
        /// <summary>
        /// The URL of the Key Vault key used to encrypt the account. The key may either be versioned (for example https://vault/keys/mykey/version1)
        /// or reference a key without a version (for example https://vault/keys/mykey).
        /// </summary>
        string KeyVaultPropertyKeyIdentifier { get; set; }
        /// <summary>Network access control for Video Analyzer.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.INetworkAccessControl NetworkAccessControl { get; set; }
        /// <summary>Public network access for consumption group.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IGroupLevelAccessControl NetworkAccessControlConsumption { get; set; }
        /// <summary>Public network access for ingestion group.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IGroupLevelAccessControl NetworkAccessControlIngestion { get; set; }
        /// <summary>Public network access for integration group.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IGroupLevelAccessControl NetworkAccessControlIntegration { get; set; }
        /// <summary>Private Endpoint Connections created under Video Analyzer account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api30.IPrivateEndpointConnection[] PrivateEndpointConnection { get; set; }
        /// <summary>Provisioning state of the Video Analyzer account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>
        /// Whether or not public network access is allowed for resources under the Video Analyzer account.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Support.PublicNetworkAccess? PublicNetworkAccess { get; set; }
        /// <summary>The storage accounts for this resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IStorageAccount[] StorageAccount { get; set; }

    }
}