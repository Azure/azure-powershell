// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Extensions;

    /// <summary>
    /// Video preview image URLs. These URLs can be used in conjunction with the video content authorization token to download
    /// the most recent still image from the video archive in different resolutions. They are available when the video type is
    /// 'archive' and preview images are enabled.
    /// </summary>
    public partial class VideoPreviewImageUrls :
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IVideoPreviewImageUrls,
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Models.Api20211101Preview.IVideoPreviewImageUrlsInternal
    {

        /// <summary>Backing field for <see cref="Large" /> property.</summary>
        private string _large;

        /// <summary>High resolution preview image URL.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Owned)]
        public string Large { get => this._large; set => this._large = value; }

        /// <summary>Backing field for <see cref="Medium" /> property.</summary>
        private string _medium;

        /// <summary>Medium resolution preview image URL.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Owned)]
        public string Medium { get => this._medium; set => this._medium = value; }

        /// <summary>Backing field for <see cref="Small" /> property.</summary>
        private string _small;

        /// <summary>Low resolution preview image URL.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Origin(Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.PropertyOrigin.Owned)]
        public string Small { get => this._small; set => this._small = value; }

        /// <summary>Creates an new <see cref="VideoPreviewImageUrls" /> instance.</summary>
        public VideoPreviewImageUrls()
        {

        }
    }
    /// Video preview image URLs. These URLs can be used in conjunction with the video content authorization token to download
    /// the most recent still image from the video archive in different resolutions. They are available when the video type is
    /// 'archive' and preview images are enabled.
    public partial interface IVideoPreviewImageUrls :
        Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.IJsonSerializable
    {
        /// <summary>High resolution preview image URL.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"High resolution preview image URL.",
        SerializedName = @"large",
        PossibleTypes = new [] { typeof(string) })]
        string Large { get; set; }
        /// <summary>Medium resolution preview image URL.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Medium resolution preview image URL.",
        SerializedName = @"medium",
        PossibleTypes = new [] { typeof(string) })]
        string Medium { get; set; }
        /// <summary>Low resolution preview image URL.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VideoAnalyzer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Low resolution preview image URL.",
        SerializedName = @"small",
        PossibleTypes = new [] { typeof(string) })]
        string Small { get; set; }

    }
    /// Video preview image URLs. These URLs can be used in conjunction with the video content authorization token to download
    /// the most recent still image from the video archive in different resolutions. They are available when the video type is
    /// 'archive' and preview images are enabled.
    internal partial interface IVideoPreviewImageUrlsInternal

    {
        /// <summary>High resolution preview image URL.</summary>
        string Large { get; set; }
        /// <summary>Medium resolution preview image URL.</summary>
        string Medium { get; set; }
        /// <summary>Low resolution preview image URL.</summary>
        string Small { get; set; }

    }
}