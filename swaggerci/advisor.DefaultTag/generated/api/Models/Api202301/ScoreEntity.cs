// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Advisor.Models.Api202301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Advisor.Runtime.Extensions;

    /// <summary>The details of Advisor Score</summary>
    public partial class ScoreEntity :
        Microsoft.Azure.PowerShell.Cmdlets.Advisor.Models.Api202301.IScoreEntity,
        Microsoft.Azure.PowerShell.Cmdlets.Advisor.Models.Api202301.IScoreEntityInternal
    {

        /// <summary>Backing field for <see cref="CategoryCount" /> property.</summary>
        private float? _categoryCount;

        /// <summary>The count of impacted categories.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Advisor.Origin(Microsoft.Azure.PowerShell.Cmdlets.Advisor.PropertyOrigin.Owned)]
        public float? CategoryCount { get => this._categoryCount; }

        /// <summary>Backing field for <see cref="ConsumptionUnit" /> property.</summary>
        private float? _consumptionUnit;

        /// <summary>The consumption units for the score.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Advisor.Origin(Microsoft.Azure.PowerShell.Cmdlets.Advisor.PropertyOrigin.Owned)]
        public float? ConsumptionUnit { get => this._consumptionUnit; set => this._consumptionUnit = value; }

        /// <summary>Backing field for <see cref="Date" /> property.</summary>
        private string _date;

        /// <summary>The date score was calculated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Advisor.Origin(Microsoft.Azure.PowerShell.Cmdlets.Advisor.PropertyOrigin.Owned)]
        public string Date { get => this._date; set => this._date = value; }

        /// <summary>Backing field for <see cref="ImpactedResourceCount" /> property.</summary>
        private float? _impactedResourceCount;

        /// <summary>The number of impacted resources.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Advisor.Origin(Microsoft.Azure.PowerShell.Cmdlets.Advisor.PropertyOrigin.Owned)]
        public float? ImpactedResourceCount { get => this._impactedResourceCount; set => this._impactedResourceCount = value; }

        /// <summary>Internal Acessors for CategoryCount</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.Advisor.Models.Api202301.IScoreEntityInternal.CategoryCount { get => this._categoryCount; set { {_categoryCount = value;} } }

        /// <summary>Backing field for <see cref="PotentialScoreIncrease" /> property.</summary>
        private float? _potentialScoreIncrease;

        /// <summary>
        /// The potential percentage increase in overall score at subscription level once all recommendations in this scope are implemented.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Advisor.Origin(Microsoft.Azure.PowerShell.Cmdlets.Advisor.PropertyOrigin.Owned)]
        public float? PotentialScoreIncrease { get => this._potentialScoreIncrease; set => this._potentialScoreIncrease = value; }

        /// <summary>Backing field for <see cref="Score" /> property.</summary>
        private float? _score;

        /// <summary>The percentage score.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Advisor.Origin(Microsoft.Azure.PowerShell.Cmdlets.Advisor.PropertyOrigin.Owned)]
        public float? Score { get => this._score; set => this._score = value; }

        /// <summary>Creates an new <see cref="ScoreEntity" /> instance.</summary>
        public ScoreEntity()
        {

        }
    }
    /// The details of Advisor Score
    public partial interface IScoreEntity :
        Microsoft.Azure.PowerShell.Cmdlets.Advisor.Runtime.IJsonSerializable
    {
        /// <summary>The count of impacted categories.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Advisor.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The count of impacted categories.",
        SerializedName = @"categoryCount",
        PossibleTypes = new [] { typeof(float) })]
        float? CategoryCount { get;  }
        /// <summary>The consumption units for the score.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Advisor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The consumption units for the score.",
        SerializedName = @"consumptionUnits",
        PossibleTypes = new [] { typeof(float) })]
        float? ConsumptionUnit { get; set; }
        /// <summary>The date score was calculated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Advisor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The date score was calculated.",
        SerializedName = @"date",
        PossibleTypes = new [] { typeof(string) })]
        string Date { get; set; }
        /// <summary>The number of impacted resources.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Advisor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of impacted resources.",
        SerializedName = @"impactedResourceCount",
        PossibleTypes = new [] { typeof(float) })]
        float? ImpactedResourceCount { get; set; }
        /// <summary>
        /// The potential percentage increase in overall score at subscription level once all recommendations in this scope are implemented.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Advisor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The potential percentage increase in overall score at subscription level once all recommendations in this scope are implemented.",
        SerializedName = @"potentialScoreIncrease",
        PossibleTypes = new [] { typeof(float) })]
        float? PotentialScoreIncrease { get; set; }
        /// <summary>The percentage score.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Advisor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The percentage score.",
        SerializedName = @"score",
        PossibleTypes = new [] { typeof(float) })]
        float? Score { get; set; }

    }
    /// The details of Advisor Score
    internal partial interface IScoreEntityInternal

    {
        /// <summary>The count of impacted categories.</summary>
        float? CategoryCount { get; set; }
        /// <summary>The consumption units for the score.</summary>
        float? ConsumptionUnit { get; set; }
        /// <summary>The date score was calculated.</summary>
        string Date { get; set; }
        /// <summary>The number of impacted resources.</summary>
        float? ImpactedResourceCount { get; set; }
        /// <summary>
        /// The potential percentage increase in overall score at subscription level once all recommendations in this scope are implemented.
        /// </summary>
        float? PotentialScoreIncrease { get; set; }
        /// <summary>The percentage score.</summary>
        float? Score { get; set; }

    }
}