// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Search.Support
{

    /// <summary>
    /// The status of the search service. Possible values include: 'running': The search service is running and no provisioning
    /// operations are underway. 'provisioning': The search service is being provisioned or scaled up or down. 'deleting': The
    /// search service is being deleted. 'degraded': The search service is degraded. This can occur when the underlying search
    /// units are not healthy. The search service is most likely operational, but performance might be slow and some requests
    /// might be dropped. 'disabled': The search service is disabled. In this state, the service will reject all API requests.
    /// 'error': The search service is in an error state. If your service is in the degraded, disabled, or error states, it means
    /// the Azure Cognitive Search team is actively investigating the underlying issue. Dedicated services in these states are
    /// still chargeable based on the number of search units provisioned.
    /// </summary>
    public partial struct SearchServiceStatus :
        System.IEquatable<SearchServiceStatus>
    {
        /// <summary>The search service is degraded because underlying search units are not healthy.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchServiceStatus Degraded = @"degraded";

        /// <summary>The search service is being deleted.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchServiceStatus Deleting = @"deleting";

        /// <summary>The search service is disabled and all API requests will be rejected.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchServiceStatus Disabled = @"disabled";

        /// <summary>
        /// The search service is in error state, indicating either a failure to provision or to be deleted.
        /// </summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchServiceStatus Error = @"error";

        /// <summary>The search service is being provisioned or scaled up or down.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchServiceStatus Provisioning = @"provisioning";

        /// <summary>The search service is running and no provisioning operations are underway.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchServiceStatus Running = @"running";

        /// <summary>The search service is in a subscription that's disabled.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchServiceStatus Stopped = @"stopped";

        /// <summary>the value for an instance of the <see cref="SearchServiceStatus" /> Enum.</summary>
        private string _value { get; set; }

        /// <summary>Conversion from arbitrary object to SearchServiceStatus</summary>
        /// <param name="value">the value to convert to an instance of <see cref="SearchServiceStatus" />.</param>
        internal static object CreateFrom(object value)
        {
            return new SearchServiceStatus(global::System.Convert.ToString(value));
        }

        /// <summary>Compares values of enum type SearchServiceStatus</summary>
        /// <param name="e">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public bool Equals(Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchServiceStatus e)
        {
            return _value.Equals(e._value);
        }

        /// <summary>Compares values of enum type SearchServiceStatus (override for Object)</summary>
        /// <param name="obj">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public override bool Equals(object obj)
        {
            return obj is SearchServiceStatus && Equals((SearchServiceStatus)obj);
        }

        /// <summary>Returns hashCode for enum SearchServiceStatus</summary>
        /// <returns>The hashCode of the value</returns>
        public override int GetHashCode()
        {
            return this._value.GetHashCode();
        }

        /// <summary>Creates an instance of the <see cref="SearchServiceStatus"/> Enum class.</summary>
        /// <param name="underlyingValue">the value to create an instance for.</param>
        private SearchServiceStatus(string underlyingValue)
        {
            this._value = underlyingValue;
        }

        /// <summary>Returns string representation for SearchServiceStatus</summary>
        /// <returns>A string for this value.</returns>
        public override string ToString()
        {
            return this._value;
        }

        /// <summary>Implicit operator to convert string to SearchServiceStatus</summary>
        /// <param name="value">the value to convert to an instance of <see cref="SearchServiceStatus" />.</param>

        public static implicit operator SearchServiceStatus(string value)
        {
            return new SearchServiceStatus(value);
        }

        /// <summary>Implicit operator to convert SearchServiceStatus to string</summary>
        /// <param name="e">the value to convert to an instance of <see cref="SearchServiceStatus" />.</param>

        public static implicit operator string(Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchServiceStatus e)
        {
            return e._value;
        }

        /// <summary>Overriding != operator for enum SearchServiceStatus</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are not equal to the same value</returns>
        public static bool operator !=(Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchServiceStatus e1, Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchServiceStatus e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>Overriding == operator for enum SearchServiceStatus</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public static bool operator ==(Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchServiceStatus e1, Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchServiceStatus e2)
        {
            return e2.Equals(e1);
        }
    }
}