// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Extensions;

    /// <summary>Approval Step.</summary>
    public partial class AccessReviewDecisionProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewDecisionProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewDecisionPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AppliedBy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewActorIdentity _appliedBy;

        /// <summary>Details of the approver.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewActorIdentity AppliedBy { get => (this._appliedBy = this._appliedBy ?? new Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.AccessReviewActorIdentity()); }

        /// <summary>The identity id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public string AppliedByPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewActorIdentityInternal)AppliedBy).PrincipalId; }

        /// <summary>The identity display name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public string AppliedByPrincipalName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewActorIdentityInternal)AppliedBy).PrincipalName; }

        /// <summary>The identity type : user/servicePrincipal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewActorIdentityType? AppliedByPrincipalType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewActorIdentityInternal)AppliedBy).PrincipalType; }

        /// <summary>The user principal name(if valid)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public string AppliedByUserPrincipalName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewActorIdentityInternal)AppliedBy).UserPrincipalName; }

        /// <summary>Backing field for <see cref="AppliedDateTime" /> property.</summary>
        private global::System.DateTime? _appliedDateTime;

        /// <summary>The date and time when the review decision was applied.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public global::System.DateTime? AppliedDateTime { get => this._appliedDateTime; }

        /// <summary>Backing field for <see cref="ApplyResult" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewApplyResult? _applyResult;

        /// <summary>The outcome of applying the decision.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewApplyResult? ApplyResult { get => this._applyResult; }

        /// <summary>Backing field for <see cref="Decision" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewResult? _decision;

        /// <summary>
        /// The decision on the approval step. This value is initially set to NotReviewed. Approvers can take action of Approve/Deny
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewResult? Decision { get => this._decision; set => this._decision = value; }

        /// <summary>Backing field for <see cref="Justification" /> property.</summary>
        private string _justification;

        /// <summary>Justification provided by approvers for their action</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public string Justification { get => this._justification; set => this._justification = value; }

        /// <summary>Internal Acessors for AppliedBy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewActorIdentity Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewDecisionPropertiesInternal.AppliedBy { get => (this._appliedBy = this._appliedBy ?? new Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.AccessReviewActorIdentity()); set { {_appliedBy = value;} } }

        /// <summary>Internal Acessors for AppliedByPrincipalId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewDecisionPropertiesInternal.AppliedByPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewActorIdentityInternal)AppliedBy).PrincipalId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewActorIdentityInternal)AppliedBy).PrincipalId = value; }

        /// <summary>Internal Acessors for AppliedByPrincipalName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewDecisionPropertiesInternal.AppliedByPrincipalName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewActorIdentityInternal)AppliedBy).PrincipalName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewActorIdentityInternal)AppliedBy).PrincipalName = value; }

        /// <summary>Internal Acessors for AppliedByPrincipalType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewActorIdentityType? Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewDecisionPropertiesInternal.AppliedByPrincipalType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewActorIdentityInternal)AppliedBy).PrincipalType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewActorIdentityInternal)AppliedBy).PrincipalType = value; }

        /// <summary>Internal Acessors for AppliedByUserPrincipalName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewDecisionPropertiesInternal.AppliedByUserPrincipalName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewActorIdentityInternal)AppliedBy).UserPrincipalName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewActorIdentityInternal)AppliedBy).UserPrincipalName = value; }

        /// <summary>Internal Acessors for AppliedDateTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewDecisionPropertiesInternal.AppliedDateTime { get => this._appliedDateTime; set { {_appliedDateTime = value;} } }

        /// <summary>Internal Acessors for ApplyResult</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewApplyResult? Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewDecisionPropertiesInternal.ApplyResult { get => this._applyResult; set { {_applyResult = value;} } }

        /// <summary>Internal Acessors for Principal</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewDecisionIdentity Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewDecisionPropertiesInternal.Principal { get => (this._principal = this._principal ?? new Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.AccessReviewDecisionIdentity()); set { {_principal = value;} } }

        /// <summary>Internal Acessors for PrincipalDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewDecisionPropertiesInternal.PrincipalDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewDecisionIdentityInternal)Principal).DisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewDecisionIdentityInternal)Principal).DisplayName = value; }

        /// <summary>Internal Acessors for PrincipalId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewDecisionPropertiesInternal.PrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewDecisionIdentityInternal)Principal).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewDecisionIdentityInternal)Principal).Id = value; }

        /// <summary>Internal Acessors for Recommendation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessRecommendationType? Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewDecisionPropertiesInternal.Recommendation { get => this._recommendation; set { {_recommendation = value;} } }

        /// <summary>Internal Acessors for Resource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewDecisionResource Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewDecisionPropertiesInternal.Resource { get => (this._resource = this._resource ?? new Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.AccessReviewDecisionResource()); set { {_resource = value;} } }

        /// <summary>Internal Acessors for ResourceDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewDecisionPropertiesInternal.ResourceDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewDecisionResourceInternal)Resource).DisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewDecisionResourceInternal)Resource).DisplayName = value; }

        /// <summary>Internal Acessors for ResourceId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewDecisionPropertiesInternal.ResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewDecisionResourceInternal)Resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewDecisionResourceInternal)Resource).Id = value; }

        /// <summary>Internal Acessors for ResourceType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewDecisionPropertiesInternal.ResourceType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewDecisionResourceInternal)Resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewDecisionResourceInternal)Resource).Type = value; }

        /// <summary>Internal Acessors for ReviewedBy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewActorIdentity Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewDecisionPropertiesInternal.ReviewedBy { get => (this._reviewedBy = this._reviewedBy ?? new Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.AccessReviewActorIdentity()); set { {_reviewedBy = value;} } }

        /// <summary>Internal Acessors for ReviewedByPrincipalId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewDecisionPropertiesInternal.ReviewedByPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewActorIdentityInternal)ReviewedBy).PrincipalId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewActorIdentityInternal)ReviewedBy).PrincipalId = value; }

        /// <summary>Internal Acessors for ReviewedByPrincipalName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewDecisionPropertiesInternal.ReviewedByPrincipalName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewActorIdentityInternal)ReviewedBy).PrincipalName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewActorIdentityInternal)ReviewedBy).PrincipalName = value; }

        /// <summary>Internal Acessors for ReviewedByPrincipalType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewActorIdentityType? Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewDecisionPropertiesInternal.ReviewedByPrincipalType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewActorIdentityInternal)ReviewedBy).PrincipalType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewActorIdentityInternal)ReviewedBy).PrincipalType = value; }

        /// <summary>Internal Acessors for ReviewedByUserPrincipalName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewDecisionPropertiesInternal.ReviewedByUserPrincipalName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewActorIdentityInternal)ReviewedBy).UserPrincipalName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewActorIdentityInternal)ReviewedBy).UserPrincipalName = value; }

        /// <summary>Internal Acessors for ReviewedDateTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewDecisionPropertiesInternal.ReviewedDateTime { get => this._reviewedDateTime; set { {_reviewedDateTime = value;} } }

        /// <summary>Backing field for <see cref="Principal" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewDecisionIdentity _principal;

        /// <summary>
        /// Principal associated with the decision record. Can be AccessReviewDecisionUserIdentity or AccessReviewDecisionServicePrincipalIdentity
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewDecisionIdentity Principal { get => (this._principal = this._principal ?? new Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.AccessReviewDecisionIdentity()); }

        /// <summary>The display name of the user whose access was reviewed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public string PrincipalDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewDecisionIdentityInternal)Principal).DisplayName; }

        /// <summary>The id of principal whose access was reviewed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public string PrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewDecisionIdentityInternal)Principal).Id; }

        /// <summary>The type of decision target : User/ServicePrincipal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.DecisionTargetType? PrincipalType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewDecisionIdentityInternal)Principal).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewDecisionIdentityInternal)Principal).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.DecisionTargetType)""); }

        /// <summary>Backing field for <see cref="Recommendation" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessRecommendationType? _recommendation;

        /// <summary>The feature- generated recommendation shown to the reviewer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessRecommendationType? Recommendation { get => this._recommendation; }

        /// <summary>Backing field for <see cref="Resource" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewDecisionResource _resource;

        /// <summary>Resource associated with this decision record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewDecisionResource Resource { get => (this._resource = this._resource ?? new Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.AccessReviewDecisionResource()); }

        /// <summary>The display name of resource associated with a decision record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public string ResourceDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewDecisionResourceInternal)Resource).DisplayName; }

        /// <summary>The id of resource associated with a decision record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public string ResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewDecisionResourceInternal)Resource).Id; }

        /// <summary>The type of resource: azureRole</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public string ResourceType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewDecisionResourceInternal)Resource).Type; }

        /// <summary>Backing field for <see cref="ReviewedBy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewActorIdentity _reviewedBy;

        /// <summary>Details of the approver.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewActorIdentity ReviewedBy { get => (this._reviewedBy = this._reviewedBy ?? new Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.AccessReviewActorIdentity()); }

        /// <summary>The identity id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public string ReviewedByPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewActorIdentityInternal)ReviewedBy).PrincipalId; }

        /// <summary>The identity display name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public string ReviewedByPrincipalName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewActorIdentityInternal)ReviewedBy).PrincipalName; }

        /// <summary>The identity type : user/servicePrincipal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewActorIdentityType? ReviewedByPrincipalType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewActorIdentityInternal)ReviewedBy).PrincipalType; }

        /// <summary>The user principal name(if valid)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public string ReviewedByUserPrincipalName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewActorIdentityInternal)ReviewedBy).UserPrincipalName; }

        /// <summary>Backing field for <see cref="ReviewedDateTime" /> property.</summary>
        private global::System.DateTime? _reviewedDateTime;

        /// <summary>Date Time when a decision was taken.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public global::System.DateTime? ReviewedDateTime { get => this._reviewedDateTime; }

        /// <summary>Creates an new <see cref="AccessReviewDecisionProperties" /> instance.</summary>
        public AccessReviewDecisionProperties()
        {

        }
    }
    /// Approval Step.
    public partial interface IAccessReviewDecisionProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.IJsonSerializable
    {
        /// <summary>The identity id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The identity id",
        SerializedName = @"principalId",
        PossibleTypes = new [] { typeof(string) })]
        string AppliedByPrincipalId { get;  }
        /// <summary>The identity display name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The identity display name",
        SerializedName = @"principalName",
        PossibleTypes = new [] { typeof(string) })]
        string AppliedByPrincipalName { get;  }
        /// <summary>The identity type : user/servicePrincipal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The identity type : user/servicePrincipal",
        SerializedName = @"principalType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewActorIdentityType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewActorIdentityType? AppliedByPrincipalType { get;  }
        /// <summary>The user principal name(if valid)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The user principal name(if valid)",
        SerializedName = @"userPrincipalName",
        PossibleTypes = new [] { typeof(string) })]
        string AppliedByUserPrincipalName { get;  }
        /// <summary>The date and time when the review decision was applied.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The date and time when the review decision was applied.",
        SerializedName = @"appliedDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? AppliedDateTime { get;  }
        /// <summary>The outcome of applying the decision.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The outcome of applying the decision.",
        SerializedName = @"applyResult",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewApplyResult) })]
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewApplyResult? ApplyResult { get;  }
        /// <summary>
        /// The decision on the approval step. This value is initially set to NotReviewed. Approvers can take action of Approve/Deny
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The decision on the approval step. This value is initially set to NotReviewed. Approvers can take action of Approve/Deny",
        SerializedName = @"decision",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewResult) })]
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewResult? Decision { get; set; }
        /// <summary>Justification provided by approvers for their action</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Justification provided by approvers for their action",
        SerializedName = @"justification",
        PossibleTypes = new [] { typeof(string) })]
        string Justification { get; set; }
        /// <summary>The display name of the user whose access was reviewed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The display name of the user whose access was reviewed.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string PrincipalDisplayName { get;  }
        /// <summary>The id of principal whose access was reviewed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The id of principal whose access was reviewed.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string PrincipalId { get;  }
        /// <summary>The type of decision target : User/ServicePrincipal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of decision target : User/ServicePrincipal",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.DecisionTargetType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.DecisionTargetType? PrincipalType { get; set; }
        /// <summary>The feature- generated recommendation shown to the reviewer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The feature- generated recommendation shown to the reviewer.",
        SerializedName = @"recommendation",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessRecommendationType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessRecommendationType? Recommendation { get;  }
        /// <summary>The display name of resource associated with a decision record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The display name of resource associated with a decision record.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceDisplayName { get;  }
        /// <summary>The id of resource associated with a decision record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The id of resource associated with a decision record.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceId { get;  }
        /// <summary>The type of resource: azureRole</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The type of resource: azureRole",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceType { get;  }
        /// <summary>The identity id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The identity id",
        SerializedName = @"principalId",
        PossibleTypes = new [] { typeof(string) })]
        string ReviewedByPrincipalId { get;  }
        /// <summary>The identity display name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The identity display name",
        SerializedName = @"principalName",
        PossibleTypes = new [] { typeof(string) })]
        string ReviewedByPrincipalName { get;  }
        /// <summary>The identity type : user/servicePrincipal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The identity type : user/servicePrincipal",
        SerializedName = @"principalType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewActorIdentityType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewActorIdentityType? ReviewedByPrincipalType { get;  }
        /// <summary>The user principal name(if valid)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The user principal name(if valid)",
        SerializedName = @"userPrincipalName",
        PossibleTypes = new [] { typeof(string) })]
        string ReviewedByUserPrincipalName { get;  }
        /// <summary>Date Time when a decision was taken.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Date Time when a decision was taken.",
        SerializedName = @"reviewedDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ReviewedDateTime { get;  }

    }
    /// Approval Step.
    internal partial interface IAccessReviewDecisionPropertiesInternal

    {
        /// <summary>Details of the approver.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewActorIdentity AppliedBy { get; set; }
        /// <summary>The identity id</summary>
        string AppliedByPrincipalId { get; set; }
        /// <summary>The identity display name</summary>
        string AppliedByPrincipalName { get; set; }
        /// <summary>The identity type : user/servicePrincipal</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewActorIdentityType? AppliedByPrincipalType { get; set; }
        /// <summary>The user principal name(if valid)</summary>
        string AppliedByUserPrincipalName { get; set; }
        /// <summary>The date and time when the review decision was applied.</summary>
        global::System.DateTime? AppliedDateTime { get; set; }
        /// <summary>The outcome of applying the decision.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewApplyResult? ApplyResult { get; set; }
        /// <summary>
        /// The decision on the approval step. This value is initially set to NotReviewed. Approvers can take action of Approve/Deny
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewResult? Decision { get; set; }
        /// <summary>Justification provided by approvers for their action</summary>
        string Justification { get; set; }
        /// <summary>
        /// Principal associated with the decision record. Can be AccessReviewDecisionUserIdentity or AccessReviewDecisionServicePrincipalIdentity
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewDecisionIdentity Principal { get; set; }
        /// <summary>The display name of the user whose access was reviewed.</summary>
        string PrincipalDisplayName { get; set; }
        /// <summary>The id of principal whose access was reviewed.</summary>
        string PrincipalId { get; set; }
        /// <summary>The type of decision target : User/ServicePrincipal</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.DecisionTargetType? PrincipalType { get; set; }
        /// <summary>The feature- generated recommendation shown to the reviewer.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessRecommendationType? Recommendation { get; set; }
        /// <summary>Resource associated with this decision record.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewDecisionResource Resource { get; set; }
        /// <summary>The display name of resource associated with a decision record.</summary>
        string ResourceDisplayName { get; set; }
        /// <summary>The id of resource associated with a decision record.</summary>
        string ResourceId { get; set; }
        /// <summary>The type of resource: azureRole</summary>
        string ResourceType { get; set; }
        /// <summary>Details of the approver.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewActorIdentity ReviewedBy { get; set; }
        /// <summary>The identity id</summary>
        string ReviewedByPrincipalId { get; set; }
        /// <summary>The identity display name</summary>
        string ReviewedByPrincipalName { get; set; }
        /// <summary>The identity type : user/servicePrincipal</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewActorIdentityType? ReviewedByPrincipalType { get; set; }
        /// <summary>The user principal name(if valid)</summary>
        string ReviewedByUserPrincipalName { get; set; }
        /// <summary>Date Time when a decision was taken.</summary>
        global::System.DateTime? ReviewedDateTime { get; set; }

    }
}