// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview
{
    using Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.PowerShell;

    /// <summary>Settings of an Access Review.</summary>
    [System.ComponentModel.TypeConverter(typeof(AccessReviewScheduleSettingsTypeConverter))]
    public partial class AccessReviewScheduleSettings
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.AccessReviewScheduleSettings"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal AccessReviewScheduleSettings(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Recurrence"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).Recurrence = (Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewRecurrenceSettings) content.GetValueForProperty("Recurrence",((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).Recurrence, Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.AccessReviewRecurrenceSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("MailNotificationsEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).MailNotificationsEnabled = (bool?) content.GetValueForProperty("MailNotificationsEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).MailNotificationsEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ReminderNotificationsEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).ReminderNotificationsEnabled = (bool?) content.GetValueForProperty("ReminderNotificationsEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).ReminderNotificationsEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("DefaultDecisionEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).DefaultDecisionEnabled = (bool?) content.GetValueForProperty("DefaultDecisionEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).DefaultDecisionEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("JustificationRequiredOnApproval"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).JustificationRequiredOnApproval = (bool?) content.GetValueForProperty("JustificationRequiredOnApproval",((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).JustificationRequiredOnApproval, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("DefaultDecision"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).DefaultDecision = (Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.DefaultDecisionType?) content.GetValueForProperty("DefaultDecision",((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).DefaultDecision, Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.DefaultDecisionType.CreateFrom);
            }
            if (content.Contains("AutoApplyDecisionsEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).AutoApplyDecisionsEnabled = (bool?) content.GetValueForProperty("AutoApplyDecisionsEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).AutoApplyDecisionsEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("RecommendationsEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).RecommendationsEnabled = (bool?) content.GetValueForProperty("RecommendationsEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).RecommendationsEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("RecommendationLookBackDuration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).RecommendationLookBackDuration = (global::System.TimeSpan?) content.GetValueForProperty("RecommendationLookBackDuration",((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).RecommendationLookBackDuration, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("InstanceDurationInDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).InstanceDurationInDay = (int?) content.GetValueForProperty("InstanceDurationInDay",((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).InstanceDurationInDay, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("RecurrencePattern"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).RecurrencePattern = (Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewRecurrencePattern) content.GetValueForProperty("RecurrencePattern",((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).RecurrencePattern, Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.AccessReviewRecurrencePatternTypeConverter.ConvertFrom);
            }
            if (content.Contains("RecurrenceRange"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).RecurrenceRange = (Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewRecurrenceRange) content.GetValueForProperty("RecurrenceRange",((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).RecurrenceRange, Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.AccessReviewRecurrenceRangeTypeConverter.ConvertFrom);
            }
            if (content.Contains("PatternType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).PatternType = (Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewRecurrencePatternType?) content.GetValueForProperty("PatternType",((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).PatternType, Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewRecurrencePatternType.CreateFrom);
            }
            if (content.Contains("PatternInterval"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).PatternInterval = (int?) content.GetValueForProperty("PatternInterval",((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).PatternInterval, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("RangeType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).RangeType = (Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewRecurrenceRangeType?) content.GetValueForProperty("RangeType",((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).RangeType, Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewRecurrenceRangeType.CreateFrom);
            }
            if (content.Contains("RangeNumberOfOccurrence"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).RangeNumberOfOccurrence = (int?) content.GetValueForProperty("RangeNumberOfOccurrence",((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).RangeNumberOfOccurrence, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("RangeStartDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).RangeStartDate = (global::System.DateTime?) content.GetValueForProperty("RangeStartDate",((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).RangeStartDate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("RangeEndDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).RangeEndDate = (global::System.DateTime?) content.GetValueForProperty("RangeEndDate",((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).RangeEndDate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.AccessReviewScheduleSettings"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal AccessReviewScheduleSettings(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Recurrence"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).Recurrence = (Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewRecurrenceSettings) content.GetValueForProperty("Recurrence",((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).Recurrence, Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.AccessReviewRecurrenceSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("MailNotificationsEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).MailNotificationsEnabled = (bool?) content.GetValueForProperty("MailNotificationsEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).MailNotificationsEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ReminderNotificationsEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).ReminderNotificationsEnabled = (bool?) content.GetValueForProperty("ReminderNotificationsEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).ReminderNotificationsEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("DefaultDecisionEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).DefaultDecisionEnabled = (bool?) content.GetValueForProperty("DefaultDecisionEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).DefaultDecisionEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("JustificationRequiredOnApproval"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).JustificationRequiredOnApproval = (bool?) content.GetValueForProperty("JustificationRequiredOnApproval",((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).JustificationRequiredOnApproval, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("DefaultDecision"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).DefaultDecision = (Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.DefaultDecisionType?) content.GetValueForProperty("DefaultDecision",((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).DefaultDecision, Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.DefaultDecisionType.CreateFrom);
            }
            if (content.Contains("AutoApplyDecisionsEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).AutoApplyDecisionsEnabled = (bool?) content.GetValueForProperty("AutoApplyDecisionsEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).AutoApplyDecisionsEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("RecommendationsEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).RecommendationsEnabled = (bool?) content.GetValueForProperty("RecommendationsEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).RecommendationsEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("RecommendationLookBackDuration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).RecommendationLookBackDuration = (global::System.TimeSpan?) content.GetValueForProperty("RecommendationLookBackDuration",((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).RecommendationLookBackDuration, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("InstanceDurationInDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).InstanceDurationInDay = (int?) content.GetValueForProperty("InstanceDurationInDay",((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).InstanceDurationInDay, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("RecurrencePattern"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).RecurrencePattern = (Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewRecurrencePattern) content.GetValueForProperty("RecurrencePattern",((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).RecurrencePattern, Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.AccessReviewRecurrencePatternTypeConverter.ConvertFrom);
            }
            if (content.Contains("RecurrenceRange"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).RecurrenceRange = (Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewRecurrenceRange) content.GetValueForProperty("RecurrenceRange",((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).RecurrenceRange, Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.AccessReviewRecurrenceRangeTypeConverter.ConvertFrom);
            }
            if (content.Contains("PatternType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).PatternType = (Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewRecurrencePatternType?) content.GetValueForProperty("PatternType",((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).PatternType, Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewRecurrencePatternType.CreateFrom);
            }
            if (content.Contains("PatternInterval"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).PatternInterval = (int?) content.GetValueForProperty("PatternInterval",((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).PatternInterval, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("RangeType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).RangeType = (Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewRecurrenceRangeType?) content.GetValueForProperty("RangeType",((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).RangeType, Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewRecurrenceRangeType.CreateFrom);
            }
            if (content.Contains("RangeNumberOfOccurrence"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).RangeNumberOfOccurrence = (int?) content.GetValueForProperty("RangeNumberOfOccurrence",((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).RangeNumberOfOccurrence, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("RangeStartDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).RangeStartDate = (global::System.DateTime?) content.GetValueForProperty("RangeStartDate",((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).RangeStartDate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("RangeEndDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).RangeEndDate = (global::System.DateTime?) content.GetValueForProperty("RangeEndDate",((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettingsInternal)this).RangeEndDate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.AccessReviewScheduleSettings"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettings"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettings DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new AccessReviewScheduleSettings(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.AccessReviewScheduleSettings"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettings"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettings DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new AccessReviewScheduleSettings(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="AccessReviewScheduleSettings" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="className" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettings FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Settings of an Access Review.
    [System.ComponentModel.TypeConverter(typeof(AccessReviewScheduleSettingsTypeConverter))]
    public partial interface IAccessReviewScheduleSettings

    {

    }
}