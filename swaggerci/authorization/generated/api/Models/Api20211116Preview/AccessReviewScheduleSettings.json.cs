// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Extensions;

    /// <summary>Settings of an Access Review.</summary>
    public partial class AccessReviewScheduleSettings
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json erialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Json.JsonObject into a new instance of <see cref="AccessReviewScheduleSettings" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal AccessReviewScheduleSettings(Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_recurrence = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Json.JsonObject>("recurrence"), out var __jsonRecurrence) ? Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.AccessReviewRecurrenceSettings.FromJson(__jsonRecurrence) : Recurrence;}
            {_mailNotificationsEnabled = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Json.JsonBoolean>("mailNotificationsEnabled"), out var __jsonMailNotificationsEnabled) ? (bool?)__jsonMailNotificationsEnabled : MailNotificationsEnabled;}
            {_reminderNotificationsEnabled = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Json.JsonBoolean>("reminderNotificationsEnabled"), out var __jsonReminderNotificationsEnabled) ? (bool?)__jsonReminderNotificationsEnabled : ReminderNotificationsEnabled;}
            {_defaultDecisionEnabled = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Json.JsonBoolean>("defaultDecisionEnabled"), out var __jsonDefaultDecisionEnabled) ? (bool?)__jsonDefaultDecisionEnabled : DefaultDecisionEnabled;}
            {_justificationRequiredOnApproval = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Json.JsonBoolean>("justificationRequiredOnApproval"), out var __jsonJustificationRequiredOnApproval) ? (bool?)__jsonJustificationRequiredOnApproval : JustificationRequiredOnApproval;}
            {_defaultDecision = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Json.JsonString>("defaultDecision"), out var __jsonDefaultDecision) ? (string)__jsonDefaultDecision : (string)DefaultDecision;}
            {_autoApplyDecisionsEnabled = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Json.JsonBoolean>("autoApplyDecisionsEnabled"), out var __jsonAutoApplyDecisionsEnabled) ? (bool?)__jsonAutoApplyDecisionsEnabled : AutoApplyDecisionsEnabled;}
            {_recommendationsEnabled = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Json.JsonBoolean>("recommendationsEnabled"), out var __jsonRecommendationsEnabled) ? (bool?)__jsonRecommendationsEnabled : RecommendationsEnabled;}
            {_recommendationLookBackDuration = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Json.JsonString>("recommendationLookBackDuration"), out var __jsonRecommendationLookBackDuration) ? global::System.Xml.XmlConvert.ToTimeSpan( __jsonRecommendationLookBackDuration ) : RecommendationLookBackDuration;}
            {_instanceDurationInDay = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Json.JsonNumber>("instanceDurationInDays"), out var __jsonInstanceDurationInDays) ? (int?)__jsonInstanceDurationInDays : InstanceDurationInDay;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettings.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettings.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScheduleSettings FromJson(Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Json.JsonObject json ? new AccessReviewScheduleSettings(json) : null;
        }

        /// <summary>
        /// Serializes this instance of <see cref="AccessReviewScheduleSettings" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="AccessReviewScheduleSettings" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != this._recurrence ? (Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Json.JsonNode) this._recurrence.ToJson(null,serializationMode) : null, "recurrence" ,container.Add );
            AddIf( null != this._mailNotificationsEnabled ? (Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Json.JsonBoolean((bool)this._mailNotificationsEnabled) : null, "mailNotificationsEnabled" ,container.Add );
            AddIf( null != this._reminderNotificationsEnabled ? (Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Json.JsonBoolean((bool)this._reminderNotificationsEnabled) : null, "reminderNotificationsEnabled" ,container.Add );
            AddIf( null != this._defaultDecisionEnabled ? (Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Json.JsonBoolean((bool)this._defaultDecisionEnabled) : null, "defaultDecisionEnabled" ,container.Add );
            AddIf( null != this._justificationRequiredOnApproval ? (Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Json.JsonBoolean((bool)this._justificationRequiredOnApproval) : null, "justificationRequiredOnApproval" ,container.Add );
            AddIf( null != (((object)this._defaultDecision)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Json.JsonString(this._defaultDecision.ToString()) : null, "defaultDecision" ,container.Add );
            AddIf( null != this._autoApplyDecisionsEnabled ? (Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Json.JsonBoolean((bool)this._autoApplyDecisionsEnabled) : null, "autoApplyDecisionsEnabled" ,container.Add );
            AddIf( null != this._recommendationsEnabled ? (Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Json.JsonBoolean((bool)this._recommendationsEnabled) : null, "recommendationsEnabled" ,container.Add );
            AddIf( (Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Json.JsonNode)(null != this._recommendationLookBackDuration ? new Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Json.JsonString(global::System.Xml.XmlConvert.ToString((global::System.TimeSpan)this._recommendationLookBackDuration)): null), "recommendationLookBackDuration" ,container.Add );
            AddIf( null != this._instanceDurationInDay ? (Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Json.JsonNumber((int)this._instanceDurationInDay) : null, "instanceDurationInDays" ,container.Add );
            AfterToJson(ref container);
            return container;
        }
    }
}