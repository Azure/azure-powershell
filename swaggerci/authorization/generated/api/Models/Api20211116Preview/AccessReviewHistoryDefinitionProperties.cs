// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Extensions;

    /// <summary>Access Review History Instances.</summary>
    public partial class AccessReviewHistoryDefinitionProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryDefinitionProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryDefinitionPropertiesInternal
    {

        /// <summary>Backing field for <see cref="CreatedBy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewActorIdentity _createdBy;

        /// <summary>The user or other identity who created this history definition.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewActorIdentity CreatedBy { get => (this._createdBy = this._createdBy ?? new Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.AccessReviewActorIdentity()); }

        /// <summary>The identity id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public string CreatedByPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewActorIdentityInternal)CreatedBy).PrincipalId; }

        /// <summary>The identity display name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public string CreatedByPrincipalName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewActorIdentityInternal)CreatedBy).PrincipalName; }

        /// <summary>The identity type : user/servicePrincipal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewActorIdentityType? CreatedByPrincipalType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewActorIdentityInternal)CreatedBy).PrincipalType; }

        /// <summary>The user principal name(if valid)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public string CreatedByUserPrincipalName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewActorIdentityInternal)CreatedBy).UserPrincipalName; }

        /// <summary>Backing field for <see cref="CreatedDateTime" /> property.</summary>
        private global::System.DateTime? _createdDateTime;

        /// <summary>Date time when history definition was created</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public global::System.DateTime? CreatedDateTime { get => this._createdDateTime; }

        /// <summary>Backing field for <see cref="Decision" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewResult[] _decision;

        /// <summary>
        /// Collection of review decisions which the history data should be filtered on. For example if Approve and Deny are supplied
        /// the data will only contain review results in which the decision maker approved or denied a review request.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewResult[] Decision { get => this._decision; set => this._decision = value; }

        /// <summary>Backing field for <see cref="DisplayName" /> property.</summary>
        private string _displayName;

        /// <summary>The display name for the history definition.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public string DisplayName { get => this._displayName; set => this._displayName = value; }

        /// <summary>Backing field for <see cref="Instance" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryInstance[] _instance;

        /// <summary>Set of access review history instances for this history definition.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryInstance[] Instance { get => this._instance; set => this._instance = value; }

        /// <summary>Internal Acessors for CreatedBy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewActorIdentity Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryDefinitionPropertiesInternal.CreatedBy { get => (this._createdBy = this._createdBy ?? new Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.AccessReviewActorIdentity()); set { {_createdBy = value;} } }

        /// <summary>Internal Acessors for CreatedByPrincipalId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryDefinitionPropertiesInternal.CreatedByPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewActorIdentityInternal)CreatedBy).PrincipalId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewActorIdentityInternal)CreatedBy).PrincipalId = value; }

        /// <summary>Internal Acessors for CreatedByPrincipalName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryDefinitionPropertiesInternal.CreatedByPrincipalName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewActorIdentityInternal)CreatedBy).PrincipalName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewActorIdentityInternal)CreatedBy).PrincipalName = value; }

        /// <summary>Internal Acessors for CreatedByPrincipalType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewActorIdentityType? Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryDefinitionPropertiesInternal.CreatedByPrincipalType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewActorIdentityInternal)CreatedBy).PrincipalType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewActorIdentityInternal)CreatedBy).PrincipalType = value; }

        /// <summary>Internal Acessors for CreatedByUserPrincipalName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryDefinitionPropertiesInternal.CreatedByUserPrincipalName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewActorIdentityInternal)CreatedBy).UserPrincipalName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewActorIdentityInternal)CreatedBy).UserPrincipalName = value; }

        /// <summary>Internal Acessors for CreatedDateTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryDefinitionPropertiesInternal.CreatedDateTime { get => this._createdDateTime; set { {_createdDateTime = value;} } }

        /// <summary>Internal Acessors for ReviewHistoryPeriodEndDateTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryDefinitionPropertiesInternal.ReviewHistoryPeriodEndDateTime { get => this._reviewHistoryPeriodEndDateTime; set { {_reviewHistoryPeriodEndDateTime = value;} } }

        /// <summary>Internal Acessors for ReviewHistoryPeriodStartDateTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryDefinitionPropertiesInternal.ReviewHistoryPeriodStartDateTime { get => this._reviewHistoryPeriodStartDateTime; set { {_reviewHistoryPeriodStartDateTime = value;} } }

        /// <summary>Internal Acessors for Setting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryScheduleSettings Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryDefinitionPropertiesInternal.Setting { get => (this._setting = this._setting ?? new Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.AccessReviewHistoryScheduleSettings()); set { {_setting = value;} } }

        /// <summary>Internal Acessors for SettingPattern</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewRecurrencePattern Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryDefinitionPropertiesInternal.SettingPattern { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryScheduleSettingsInternal)Setting).Pattern; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryScheduleSettingsInternal)Setting).Pattern = value; }

        /// <summary>Internal Acessors for SettingRange</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewRecurrenceRange Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryDefinitionPropertiesInternal.SettingRange { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryScheduleSettingsInternal)Setting).Range; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryScheduleSettingsInternal)Setting).Range = value; }

        /// <summary>Internal Acessors for Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewHistoryDefinitionStatus? Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryDefinitionPropertiesInternal.Status { get => this._status; set { {_status = value;} } }

        /// <summary>
        /// The interval for recurrence. For a quarterly review, the interval is 3 for type : absoluteMonthly.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public int? PatternInterval { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryScheduleSettingsInternal)Setting).PatternInterval; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryScheduleSettingsInternal)Setting).PatternInterval = value ?? default(int); }

        /// <summary>The recurrence type : weekly, monthly, etc.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewRecurrencePatternType? PatternType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryScheduleSettingsInternal)Setting).PatternType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryScheduleSettingsInternal)Setting).PatternType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewRecurrencePatternType)""); }

        /// <summary>The DateTime when the review is scheduled to end. Required if type is endDate</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public global::System.DateTime? RangeEndDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryScheduleSettingsInternal)Setting).RangeEndDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryScheduleSettingsInternal)Setting).RangeEndDate = value ?? default(global::System.DateTime); }

        /// <summary>
        /// The number of times to repeat the access review. Required and must be positive if type is numbered.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public int? RangeNumberOfOccurrence { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryScheduleSettingsInternal)Setting).RangeNumberOfOccurrence; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryScheduleSettingsInternal)Setting).RangeNumberOfOccurrence = value ?? default(int); }

        /// <summary>
        /// The DateTime when the review is scheduled to be start. This could be a date in the future. Required on create.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public global::System.DateTime? RangeStartDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryScheduleSettingsInternal)Setting).RangeStartDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryScheduleSettingsInternal)Setting).RangeStartDate = value ?? default(global::System.DateTime); }

        /// <summary>The recurrence range type. The possible values are: endDate, noEnd, numbered.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewRecurrenceRangeType? RangeType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryScheduleSettingsInternal)Setting).RangeType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryScheduleSettingsInternal)Setting).RangeType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewRecurrenceRangeType)""); }

        /// <summary>Backing field for <see cref="ReviewHistoryPeriodEndDateTime" /> property.</summary>
        private global::System.DateTime? _reviewHistoryPeriodEndDateTime;

        /// <summary>
        /// Date time used when selecting review data, all reviews included in data end on or before this date. For use only with
        /// one-time/non-recurring reports.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public global::System.DateTime? ReviewHistoryPeriodEndDateTime { get => this._reviewHistoryPeriodEndDateTime; }

        /// <summary>Backing field for <see cref="ReviewHistoryPeriodStartDateTime" /> property.</summary>
        private global::System.DateTime? _reviewHistoryPeriodStartDateTime;

        /// <summary>
        /// Date time used when selecting review data, all reviews included in data start on or after this date. For use only with
        /// one-time/non-recurring reports.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public global::System.DateTime? ReviewHistoryPeriodStartDateTime { get => this._reviewHistoryPeriodStartDateTime; }

        /// <summary>Backing field for <see cref="Scope" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScope[] _scope;

        /// <summary>A collection of scopes used when selecting review history data</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScope[] Scope { get => this._scope; set => this._scope = value; }

        /// <summary>Backing field for <see cref="Setting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryScheduleSettings _setting;

        /// <summary>Recurrence settings for recurring history reports, skip for one-time reports.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryScheduleSettings Setting { get => (this._setting = this._setting ?? new Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.AccessReviewHistoryScheduleSettings()); set => this._setting = value; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewHistoryDefinitionStatus? _status;

        /// <summary>
        /// This read-only field specifies the of the requested review history data. This is either requested, in-progress, done or
        /// error.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewHistoryDefinitionStatus? Status { get => this._status; }

        /// <summary>Creates an new <see cref="AccessReviewHistoryDefinitionProperties" /> instance.</summary>
        public AccessReviewHistoryDefinitionProperties()
        {

        }
    }
    /// Access Review History Instances.
    public partial interface IAccessReviewHistoryDefinitionProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.IJsonSerializable
    {
        /// <summary>The identity id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The identity id",
        SerializedName = @"principalId",
        PossibleTypes = new [] { typeof(string) })]
        string CreatedByPrincipalId { get;  }
        /// <summary>The identity display name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The identity display name",
        SerializedName = @"principalName",
        PossibleTypes = new [] { typeof(string) })]
        string CreatedByPrincipalName { get;  }
        /// <summary>The identity type : user/servicePrincipal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The identity type : user/servicePrincipal",
        SerializedName = @"principalType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewActorIdentityType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewActorIdentityType? CreatedByPrincipalType { get;  }
        /// <summary>The user principal name(if valid)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The user principal name(if valid)",
        SerializedName = @"userPrincipalName",
        PossibleTypes = new [] { typeof(string) })]
        string CreatedByUserPrincipalName { get;  }
        /// <summary>Date time when history definition was created</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Date time when history definition was created",
        SerializedName = @"createdDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CreatedDateTime { get;  }
        /// <summary>
        /// Collection of review decisions which the history data should be filtered on. For example if Approve and Deny are supplied
        /// the data will only contain review results in which the decision maker approved or denied a review request.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Collection of review decisions which the history data should be filtered on. For example if Approve and Deny are supplied the data will only contain review results in which the decision maker approved or denied a review request.",
        SerializedName = @"decisions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewResult) })]
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewResult[] Decision { get; set; }
        /// <summary>The display name for the history definition.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The display name for the history definition.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>Set of access review history instances for this history definition.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Set of access review history instances for this history definition.",
        SerializedName = @"instances",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryInstance) })]
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryInstance[] Instance { get; set; }
        /// <summary>
        /// The interval for recurrence. For a quarterly review, the interval is 3 for type : absoluteMonthly.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The interval for recurrence. For a quarterly review, the interval is 3 for type : absoluteMonthly.",
        SerializedName = @"interval",
        PossibleTypes = new [] { typeof(int) })]
        int? PatternInterval { get; set; }
        /// <summary>The recurrence type : weekly, monthly, etc.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The recurrence type : weekly, monthly, etc.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewRecurrencePatternType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewRecurrencePatternType? PatternType { get; set; }
        /// <summary>The DateTime when the review is scheduled to end. Required if type is endDate</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The DateTime when the review is scheduled to end. Required if type is endDate",
        SerializedName = @"endDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? RangeEndDate { get; set; }
        /// <summary>
        /// The number of times to repeat the access review. Required and must be positive if type is numbered.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of times to repeat the access review. Required and must be positive if type is numbered.",
        SerializedName = @"numberOfOccurrences",
        PossibleTypes = new [] { typeof(int) })]
        int? RangeNumberOfOccurrence { get; set; }
        /// <summary>
        /// The DateTime when the review is scheduled to be start. This could be a date in the future. Required on create.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The DateTime when the review is scheduled to be start. This could be a date in the future. Required on create.",
        SerializedName = @"startDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? RangeStartDate { get; set; }
        /// <summary>The recurrence range type. The possible values are: endDate, noEnd, numbered.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The recurrence range type. The possible values are: endDate, noEnd, numbered.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewRecurrenceRangeType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewRecurrenceRangeType? RangeType { get; set; }
        /// <summary>
        /// Date time used when selecting review data, all reviews included in data end on or before this date. For use only with
        /// one-time/non-recurring reports.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Date time used when selecting review data, all reviews included in data end on or before this date. For use only with one-time/non-recurring reports.",
        SerializedName = @"reviewHistoryPeriodEndDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ReviewHistoryPeriodEndDateTime { get;  }
        /// <summary>
        /// Date time used when selecting review data, all reviews included in data start on or after this date. For use only with
        /// one-time/non-recurring reports.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Date time used when selecting review data, all reviews included in data start on or after this date. For use only with one-time/non-recurring reports.",
        SerializedName = @"reviewHistoryPeriodStartDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ReviewHistoryPeriodStartDateTime { get;  }
        /// <summary>A collection of scopes used when selecting review history data</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A collection of scopes used when selecting review history data",
        SerializedName = @"scopes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScope) })]
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScope[] Scope { get; set; }
        /// <summary>
        /// This read-only field specifies the of the requested review history data. This is either requested, in-progress, done or
        /// error.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"This read-only field specifies the of the requested review history data. This is either requested, in-progress, done or error.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewHistoryDefinitionStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewHistoryDefinitionStatus? Status { get;  }

    }
    /// Access Review History Instances.
    internal partial interface IAccessReviewHistoryDefinitionPropertiesInternal

    {
        /// <summary>The user or other identity who created this history definition.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewActorIdentity CreatedBy { get; set; }
        /// <summary>The identity id</summary>
        string CreatedByPrincipalId { get; set; }
        /// <summary>The identity display name</summary>
        string CreatedByPrincipalName { get; set; }
        /// <summary>The identity type : user/servicePrincipal</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewActorIdentityType? CreatedByPrincipalType { get; set; }
        /// <summary>The user principal name(if valid)</summary>
        string CreatedByUserPrincipalName { get; set; }
        /// <summary>Date time when history definition was created</summary>
        global::System.DateTime? CreatedDateTime { get; set; }
        /// <summary>
        /// Collection of review decisions which the history data should be filtered on. For example if Approve and Deny are supplied
        /// the data will only contain review results in which the decision maker approved or denied a review request.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewResult[] Decision { get; set; }
        /// <summary>The display name for the history definition.</summary>
        string DisplayName { get; set; }
        /// <summary>Set of access review history instances for this history definition.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryInstance[] Instance { get; set; }
        /// <summary>
        /// The interval for recurrence. For a quarterly review, the interval is 3 for type : absoluteMonthly.
        /// </summary>
        int? PatternInterval { get; set; }
        /// <summary>The recurrence type : weekly, monthly, etc.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewRecurrencePatternType? PatternType { get; set; }
        /// <summary>The DateTime when the review is scheduled to end. Required if type is endDate</summary>
        global::System.DateTime? RangeEndDate { get; set; }
        /// <summary>
        /// The number of times to repeat the access review. Required and must be positive if type is numbered.
        /// </summary>
        int? RangeNumberOfOccurrence { get; set; }
        /// <summary>
        /// The DateTime when the review is scheduled to be start. This could be a date in the future. Required on create.
        /// </summary>
        global::System.DateTime? RangeStartDate { get; set; }
        /// <summary>The recurrence range type. The possible values are: endDate, noEnd, numbered.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewRecurrenceRangeType? RangeType { get; set; }
        /// <summary>
        /// Date time used when selecting review data, all reviews included in data end on or before this date. For use only with
        /// one-time/non-recurring reports.
        /// </summary>
        global::System.DateTime? ReviewHistoryPeriodEndDateTime { get; set; }
        /// <summary>
        /// Date time used when selecting review data, all reviews included in data start on or after this date. For use only with
        /// one-time/non-recurring reports.
        /// </summary>
        global::System.DateTime? ReviewHistoryPeriodStartDateTime { get; set; }
        /// <summary>A collection of scopes used when selecting review history data</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewScope[] Scope { get; set; }
        /// <summary>Recurrence settings for recurring history reports, skip for one-time reports.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryScheduleSettings Setting { get; set; }
        /// <summary>Access Review History Definition recurrence settings.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewRecurrencePattern SettingPattern { get; set; }
        /// <summary>Access Review History Definition recurrence settings.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewRecurrenceRange SettingRange { get; set; }
        /// <summary>
        /// This read-only field specifies the of the requested review history data. This is either requested, in-progress, done or
        /// error.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewHistoryDefinitionStatus? Status { get; set; }

    }
}