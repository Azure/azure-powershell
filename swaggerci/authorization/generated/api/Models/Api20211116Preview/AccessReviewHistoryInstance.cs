// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Extensions;

    /// <summary>Access Review History Definition Instance.</summary>
    public partial class AccessReviewHistoryInstance :
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryInstance,
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryInstanceInternal
    {

        /// <summary>The display name for the parent history definition.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public string DisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryInstancePropertiesInternal)Property).DisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryInstancePropertiesInternal)Property).DisplayName = value ?? null; }

        /// <summary>
        /// Uri which can be used to retrieve review history data. To generate this Uri, generateDownloadUri() must be called for
        /// a specific accessReviewHistoryDefinitionInstance. The link expires after a 24 hour period. Callers can see the expiration
        /// date time by looking at the 'se' parameter in the generated uri.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public string DownloadUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryInstancePropertiesInternal)Property).DownloadUri; }

        /// <summary>Date time when history data report expires and the associated data is deleted.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public global::System.DateTime? Expiration { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryInstancePropertiesInternal)Property).Expiration; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryInstancePropertiesInternal)Property).Expiration = value ?? default(global::System.DateTime); }

        /// <summary>Date time when the history data report is scheduled to be generated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public global::System.DateTime? FulfilledDateTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryInstancePropertiesInternal)Property).FulfilledDateTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryInstancePropertiesInternal)Property).FulfilledDateTime = value ?? default(global::System.DateTime); }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>The access review history definition instance id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public string Id { get => this._id; }

        /// <summary>Internal Acessors for DownloadUri</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryInstanceInternal.DownloadUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryInstancePropertiesInternal)Property).DownloadUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryInstancePropertiesInternal)Property).DownloadUri = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryInstanceInternal.Id { get => this._id; set { {_id = value;} } }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryInstanceInternal.Name { get => this._name; set { {_name = value;} } }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryInstanceProperties Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryInstanceInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.AccessReviewHistoryInstanceProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewHistoryDefinitionStatus? Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryInstanceInternal.Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryInstancePropertiesInternal)Property).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryInstancePropertiesInternal)Property).Status = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryInstanceInternal.Type { get => this._type; set { {_type = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>The access review history definition instance unique id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public string Name { get => this._name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryInstanceProperties _property;

        /// <summary>Access Review History Definition Instance properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryInstanceProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.AccessReviewHistoryInstanceProperties()); set => this._property = value; }

        /// <summary>
        /// Date time used when selecting review data, all reviews included in data end on or before this date. For use only with
        /// one-time/non-recurring reports.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public global::System.DateTime? ReviewHistoryPeriodEndDateTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryInstancePropertiesInternal)Property).ReviewHistoryPeriodEndDateTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryInstancePropertiesInternal)Property).ReviewHistoryPeriodEndDateTime = value ?? default(global::System.DateTime); }

        /// <summary>
        /// Date time used when selecting review data, all reviews included in data start on or after this date. For use only with
        /// one-time/non-recurring reports.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public global::System.DateTime? ReviewHistoryPeriodStartDateTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryInstancePropertiesInternal)Property).ReviewHistoryPeriodStartDateTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryInstancePropertiesInternal)Property).ReviewHistoryPeriodStartDateTime = value ?? default(global::System.DateTime); }

        /// <summary>Date time when the history data report is scheduled to be generated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public global::System.DateTime? RunDateTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryInstancePropertiesInternal)Property).RunDateTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryInstancePropertiesInternal)Property).RunDateTime = value ?? default(global::System.DateTime); }

        /// <summary>
        /// Status of the requested review history instance data. This is either requested, in-progress, done or error. The state
        /// transitions are as follows - Requested -> InProgress -> Done -> Expired
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewHistoryDefinitionStatus? Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryInstancePropertiesInternal)Property).Status; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>The resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public string Type { get => this._type; }

        /// <summary>Creates an new <see cref="AccessReviewHistoryInstance" /> instance.</summary>
        public AccessReviewHistoryInstance()
        {

        }
    }
    /// Access Review History Definition Instance.
    public partial interface IAccessReviewHistoryInstance :
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.IJsonSerializable
    {
        /// <summary>The display name for the parent history definition.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The display name for the parent history definition.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>
        /// Uri which can be used to retrieve review history data. To generate this Uri, generateDownloadUri() must be called for
        /// a specific accessReviewHistoryDefinitionInstance. The link expires after a 24 hour period. Callers can see the expiration
        /// date time by looking at the 'se' parameter in the generated uri.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Uri which can be used to retrieve review history data. To generate this Uri, generateDownloadUri() must be called for a specific accessReviewHistoryDefinitionInstance. The link expires after a 24 hour period. Callers can see the expiration date time by looking at the 'se' parameter in the generated uri.",
        SerializedName = @"downloadUri",
        PossibleTypes = new [] { typeof(string) })]
        string DownloadUri { get;  }
        /// <summary>Date time when history data report expires and the associated data is deleted.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Date time when history data report expires and the associated data is deleted.",
        SerializedName = @"expiration",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? Expiration { get; set; }
        /// <summary>Date time when the history data report is scheduled to be generated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Date time when the history data report is scheduled to be generated.",
        SerializedName = @"fulfilledDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? FulfilledDateTime { get; set; }
        /// <summary>The access review history definition instance id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The access review history definition instance id.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get;  }
        /// <summary>The access review history definition instance unique id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The access review history definition instance unique id.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get;  }
        /// <summary>
        /// Date time used when selecting review data, all reviews included in data end on or before this date. For use only with
        /// one-time/non-recurring reports.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Date time used when selecting review data, all reviews included in data end on or before this date. For use only with one-time/non-recurring reports.",
        SerializedName = @"reviewHistoryPeriodEndDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ReviewHistoryPeriodEndDateTime { get; set; }
        /// <summary>
        /// Date time used when selecting review data, all reviews included in data start on or after this date. For use only with
        /// one-time/non-recurring reports.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Date time used when selecting review data, all reviews included in data start on or after this date. For use only with one-time/non-recurring reports.",
        SerializedName = @"reviewHistoryPeriodStartDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ReviewHistoryPeriodStartDateTime { get; set; }
        /// <summary>Date time when the history data report is scheduled to be generated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Date time when the history data report is scheduled to be generated.",
        SerializedName = @"runDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? RunDateTime { get; set; }
        /// <summary>
        /// Status of the requested review history instance data. This is either requested, in-progress, done or error. The state
        /// transitions are as follows - Requested -> InProgress -> Done -> Expired
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Status of the requested review history instance data. This is either requested, in-progress, done or error. The state transitions are as follows - Requested -> InProgress -> Done -> Expired",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewHistoryDefinitionStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewHistoryDefinitionStatus? Status { get;  }
        /// <summary>The resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The resource type.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get;  }

    }
    /// Access Review History Definition Instance.
    internal partial interface IAccessReviewHistoryInstanceInternal

    {
        /// <summary>The display name for the parent history definition.</summary>
        string DisplayName { get; set; }
        /// <summary>
        /// Uri which can be used to retrieve review history data. To generate this Uri, generateDownloadUri() must be called for
        /// a specific accessReviewHistoryDefinitionInstance. The link expires after a 24 hour period. Callers can see the expiration
        /// date time by looking at the 'se' parameter in the generated uri.
        /// </summary>
        string DownloadUri { get; set; }
        /// <summary>Date time when history data report expires and the associated data is deleted.</summary>
        global::System.DateTime? Expiration { get; set; }
        /// <summary>Date time when the history data report is scheduled to be generated.</summary>
        global::System.DateTime? FulfilledDateTime { get; set; }
        /// <summary>The access review history definition instance id.</summary>
        string Id { get; set; }
        /// <summary>The access review history definition instance unique id.</summary>
        string Name { get; set; }
        /// <summary>Access Review History Definition Instance properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211116Preview.IAccessReviewHistoryInstanceProperties Property { get; set; }
        /// <summary>
        /// Date time used when selecting review data, all reviews included in data end on or before this date. For use only with
        /// one-time/non-recurring reports.
        /// </summary>
        global::System.DateTime? ReviewHistoryPeriodEndDateTime { get; set; }
        /// <summary>
        /// Date time used when selecting review data, all reviews included in data start on or after this date. For use only with
        /// one-time/non-recurring reports.
        /// </summary>
        global::System.DateTime? ReviewHistoryPeriodStartDateTime { get; set; }
        /// <summary>Date time when the history data report is scheduled to be generated.</summary>
        global::System.DateTime? RunDateTime { get; set; }
        /// <summary>
        /// Status of the requested review history instance data. This is either requested, in-progress, done or error. The state
        /// transitions are as follows - Requested -> InProgress -> Done -> Expired
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewHistoryDefinitionStatus? Status { get; set; }
        /// <summary>The resource type.</summary>
        string Type { get; set; }

    }
}