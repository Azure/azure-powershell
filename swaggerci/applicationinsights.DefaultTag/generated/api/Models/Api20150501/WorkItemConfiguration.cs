// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Extensions;

    /// <summary>Work item configuration associated with an application insights resource.</summary>
    public partial class WorkItemConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWorkItemConfiguration,
        Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWorkItemConfigurationInternal
    {

        /// <summary>Backing field for <see cref="ConfigDisplayName" /> property.</summary>
        private string _configDisplayName;

        /// <summary>Configuration friendly name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Owned)]
        public string ConfigDisplayName { get => this._configDisplayName; set => this._configDisplayName = value; }

        /// <summary>Backing field for <see cref="ConfigProperty" /> property.</summary>
        private string _configProperty;

        /// <summary>Serialized JSON object for detailed properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Owned)]
        public string ConfigProperty { get => this._configProperty; set => this._configProperty = value; }

        /// <summary>Backing field for <see cref="ConnectorId" /> property.</summary>
        private string _connectorId;

        /// <summary>Connector identifier where work item is created</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Owned)]
        public string ConnectorId { get => this._connectorId; set => this._connectorId = value; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>Unique Id for work item</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Owned)]
        public string Id { get => this._id; set => this._id = value; }

        /// <summary>Backing field for <see cref="IsDefault" /> property.</summary>
        private bool? _isDefault;

        /// <summary>Boolean value indicating whether configuration is default</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Owned)]
        public bool? IsDefault { get => this._isDefault; set => this._isDefault = value; }

        /// <summary>Creates an new <see cref="WorkItemConfiguration" /> instance.</summary>
        public WorkItemConfiguration()
        {

        }
    }
    /// Work item configuration associated with an application insights resource.
    public partial interface IWorkItemConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.IJsonSerializable
    {
        /// <summary>Configuration friendly name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Configuration friendly name",
        SerializedName = @"ConfigDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string ConfigDisplayName { get; set; }
        /// <summary>Serialized JSON object for detailed properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Serialized JSON object for detailed properties",
        SerializedName = @"ConfigProperties",
        PossibleTypes = new [] { typeof(string) })]
        string ConfigProperty { get; set; }
        /// <summary>Connector identifier where work item is created</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Connector identifier where work item is created",
        SerializedName = @"ConnectorId",
        PossibleTypes = new [] { typeof(string) })]
        string ConnectorId { get; set; }
        /// <summary>Unique Id for work item</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Unique Id for work item",
        SerializedName = @"Id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get; set; }
        /// <summary>Boolean value indicating whether configuration is default</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Boolean value indicating whether configuration is default",
        SerializedName = @"IsDefault",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsDefault { get; set; }

    }
    /// Work item configuration associated with an application insights resource.
    internal partial interface IWorkItemConfigurationInternal

    {
        /// <summary>Configuration friendly name</summary>
        string ConfigDisplayName { get; set; }
        /// <summary>Serialized JSON object for detailed properties</summary>
        string ConfigProperty { get; set; }
        /// <summary>Connector identifier where work item is created</summary>
        string ConnectorId { get; set; }
        /// <summary>Unique Id for work item</summary>
        string Id { get; set; }
        /// <summary>Boolean value indicating whether configuration is default</summary>
        bool? IsDefault { get; set; }

    }
}