// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Extensions;

    /// <summary>Properties of the blob data set.</summary>
    public partial class BlobProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IBlobProperties,
        Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IBlobPropertiesInternal
    {

        /// <summary>Backing field for <see cref="ContainerName" /> property.</summary>
        private string _containerName;

        /// <summary>Container that has the file path.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Owned)]
        public string ContainerName { get => this._containerName; set => this._containerName = value; }

        /// <summary>Backing field for <see cref="DataSetId" /> property.</summary>
        private string _dataSetId;

        /// <summary>Unique id for identifying a data set resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Owned)]
        public string DataSetId { get => this._dataSetId; }

        /// <summary>Backing field for <see cref="FilePath" /> property.</summary>
        private string _filePath;

        /// <summary>File path within the source data set</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Owned)]
        public string FilePath { get => this._filePath; set => this._filePath = value; }

        /// <summary>Internal Acessors for DataSetId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IBlobPropertiesInternal.DataSetId { get => this._dataSetId; set { {_dataSetId = value;} } }

        /// <summary>Backing field for <see cref="ResourceGroup" /> property.</summary>
        private string _resourceGroup;

        /// <summary>Resource group of storage account</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Owned)]
        public string ResourceGroup { get => this._resourceGroup; set => this._resourceGroup = value; }

        /// <summary>Backing field for <see cref="StorageAccountName" /> property.</summary>
        private string _storageAccountName;

        /// <summary>Storage account name of the source data set</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Owned)]
        public string StorageAccountName { get => this._storageAccountName; set => this._storageAccountName = value; }

        /// <summary>Backing field for <see cref="SubscriptionId" /> property.</summary>
        private string _subscriptionId;

        /// <summary>Subscription id of storage account</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Owned)]
        public string SubscriptionId { get => this._subscriptionId; set => this._subscriptionId = value; }

        /// <summary>Creates an new <see cref="BlobProperties" /> instance.</summary>
        public BlobProperties()
        {

        }
    }
    /// Properties of the blob data set.
    public partial interface IBlobProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.IJsonSerializable
    {
        /// <summary>Container that has the file path.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Container that has the file path.",
        SerializedName = @"containerName",
        PossibleTypes = new [] { typeof(string) })]
        string ContainerName { get; set; }
        /// <summary>Unique id for identifying a data set resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Unique id for identifying a data set resource",
        SerializedName = @"dataSetId",
        PossibleTypes = new [] { typeof(string) })]
        string DataSetId { get;  }
        /// <summary>File path within the source data set</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"File path within the source data set",
        SerializedName = @"filePath",
        PossibleTypes = new [] { typeof(string) })]
        string FilePath { get; set; }
        /// <summary>Resource group of storage account</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Resource group of storage account",
        SerializedName = @"resourceGroup",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceGroup { get; set; }
        /// <summary>Storage account name of the source data set</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Storage account name of the source data set",
        SerializedName = @"storageAccountName",
        PossibleTypes = new [] { typeof(string) })]
        string StorageAccountName { get; set; }
        /// <summary>Subscription id of storage account</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Subscription id of storage account",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionId { get; set; }

    }
    /// Properties of the blob data set.
    internal partial interface IBlobPropertiesInternal

    {
        /// <summary>Container that has the file path.</summary>
        string ContainerName { get; set; }
        /// <summary>Unique id for identifying a data set resource</summary>
        string DataSetId { get; set; }
        /// <summary>File path within the source data set</summary>
        string FilePath { get; set; }
        /// <summary>Resource group of storage account</summary>
        string ResourceGroup { get; set; }
        /// <summary>Storage account name of the source data set</summary>
        string StorageAccountName { get; set; }
        /// <summary>Subscription id of storage account</summary>
        string SubscriptionId { get; set; }

    }
}