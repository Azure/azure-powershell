// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Extensions;

    /// <summary>Properties of the kusto database data set.</summary>
    public partial class KustoDatabaseDataSetProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IKustoDatabaseDataSetProperties,
        Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IKustoDatabaseDataSetPropertiesInternal
    {

        /// <summary>Backing field for <see cref="DataSetId" /> property.</summary>
        private string _dataSetId;

        /// <summary>Unique id for identifying a data set resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Owned)]
        public string DataSetId { get => this._dataSetId; }

        /// <summary>Backing field for <see cref="KustoDatabaseResourceId" /> property.</summary>
        private string _kustoDatabaseResourceId;

        /// <summary>Resource id of the kusto database.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Owned)]
        public string KustoDatabaseResourceId { get => this._kustoDatabaseResourceId; set => this._kustoDatabaseResourceId = value; }

        /// <summary>Backing field for <see cref="Location" /> property.</summary>
        private string _location;

        /// <summary>Location of the kusto cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Owned)]
        public string Location { get => this._location; }

        /// <summary>Internal Acessors for DataSetId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IKustoDatabaseDataSetPropertiesInternal.DataSetId { get => this._dataSetId; set { {_dataSetId = value;} } }

        /// <summary>Internal Acessors for Location</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IKustoDatabaseDataSetPropertiesInternal.Location { get => this._location; set { {_location = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataShare.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IKustoDatabaseDataSetPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataShare.Support.ProvisioningState? _provisioningState;

        /// <summary>Provisioning state of the kusto database data set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataShare.Support.ProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Creates an new <see cref="KustoDatabaseDataSetProperties" /> instance.</summary>
        public KustoDatabaseDataSetProperties()
        {

        }
    }
    /// Properties of the kusto database data set.
    public partial interface IKustoDatabaseDataSetProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.IJsonSerializable
    {
        /// <summary>Unique id for identifying a data set resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Unique id for identifying a data set resource",
        SerializedName = @"dataSetId",
        PossibleTypes = new [] { typeof(string) })]
        string DataSetId { get;  }
        /// <summary>Resource id of the kusto database.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Resource id of the kusto database.",
        SerializedName = @"kustoDatabaseResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string KustoDatabaseResourceId { get; set; }
        /// <summary>Location of the kusto cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Location of the kusto cluster.",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string Location { get;  }
        /// <summary>Provisioning state of the kusto database data set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Provisioning state of the kusto database data set.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataShare.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataShare.Support.ProvisioningState? ProvisioningState { get;  }

    }
    /// Properties of the kusto database data set.
    internal partial interface IKustoDatabaseDataSetPropertiesInternal

    {
        /// <summary>Unique id for identifying a data set resource</summary>
        string DataSetId { get; set; }
        /// <summary>Resource id of the kusto database.</summary>
        string KustoDatabaseResourceId { get; set; }
        /// <summary>Location of the kusto cluster.</summary>
        string Location { get; set; }
        /// <summary>Provisioning state of the kusto database data set.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataShare.Support.ProvisioningState? ProvisioningState { get; set; }

    }
}