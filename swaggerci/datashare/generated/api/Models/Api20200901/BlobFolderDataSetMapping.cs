// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Extensions;

    /// <summary>A Blob folder data set mapping.</summary>
    public partial class BlobFolderDataSetMapping :
        Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IBlobFolderDataSetMapping,
        Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IBlobFolderDataSetMappingInternal,
        Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IDataSetMapping"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IDataSetMapping __dataSetMapping = new Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.DataSetMapping();

        /// <summary>Container that has the file path.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Inlined)]
        public string ContainerName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IBlobFolderMappingPropertiesInternal)Property).ContainerName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IBlobFolderMappingPropertiesInternal)Property).ContainerName = value ; }

        /// <summary>The id of the source data set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Inlined)]
        public string DataSetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IBlobFolderMappingPropertiesInternal)Property).DataSetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IBlobFolderMappingPropertiesInternal)Property).DataSetId = value ; }

        /// <summary>Gets the status of the data set mapping.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataShare.Support.DataSetMappingStatus? DataSetMappingStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IBlobFolderMappingPropertiesInternal)Property).DataSetMappingStatus; }

        /// <summary>The resource id of the azure resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IProxyDtoInternal)__dataSetMapping).Id; }

        /// <summary>Kind of data set mapping.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataShare.Support.DataSetMappingKind Kind { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IDataSetMappingInternal)__dataSetMapping).Kind; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IDataSetMappingInternal)__dataSetMapping).Kind = value ; }

        /// <summary>Internal Acessors for DataSetMappingStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataShare.Support.DataSetMappingStatus? Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IBlobFolderDataSetMappingInternal.DataSetMappingStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IBlobFolderMappingPropertiesInternal)Property).DataSetMappingStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IBlobFolderMappingPropertiesInternal)Property).DataSetMappingStatus = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IBlobFolderMappingProperties Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IBlobFolderDataSetMappingInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.BlobFolderMappingProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataShare.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IBlobFolderDataSetMappingInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IBlobFolderMappingPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IBlobFolderMappingPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IProxyDtoInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IProxyDtoInternal)__dataSetMapping).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IProxyDtoInternal)__dataSetMapping).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IProxyDtoInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IProxyDtoInternal)__dataSetMapping).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IProxyDtoInternal)__dataSetMapping).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.ISystemData Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IProxyDtoInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IProxyDtoInternal)__dataSetMapping).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IProxyDtoInternal)__dataSetMapping).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IProxyDtoInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IProxyDtoInternal)__dataSetMapping).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IProxyDtoInternal)__dataSetMapping).Type = value; }

        /// <summary>Name of the azure resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IProxyDtoInternal)__dataSetMapping).Name; }

        /// <summary>Prefix for blob folder</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Inlined)]
        public string Prefix { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IBlobFolderMappingPropertiesInternal)Property).Prefix; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IBlobFolderMappingPropertiesInternal)Property).Prefix = value ; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IBlobFolderMappingProperties _property;

        /// <summary>Blob folder data set mapping properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IBlobFolderMappingProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.BlobFolderMappingProperties()); set => this._property = value; }

        /// <summary>Provisioning state of the data set mapping.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataShare.Support.ProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IBlobFolderMappingPropertiesInternal)Property).ProvisioningState; }

        /// <summary>Resource group of storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Inlined)]
        public string ResourceGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IBlobFolderMappingPropertiesInternal)Property).ResourceGroup; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IBlobFolderMappingPropertiesInternal)Property).ResourceGroup = value ; }

        /// <summary>Storage account name of the source data set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Inlined)]
        public string StorageAccountName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IBlobFolderMappingPropertiesInternal)Property).StorageAccountName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IBlobFolderMappingPropertiesInternal)Property).StorageAccountName = value ; }

        /// <summary>Subscription id of storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Inlined)]
        public string SubscriptionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IBlobFolderMappingPropertiesInternal)Property).SubscriptionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IBlobFolderMappingPropertiesInternal)Property).SubscriptionId = value ; }

        /// <summary>System Data of the Azure resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IProxyDtoInternal)__dataSetMapping).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IProxyDtoInternal)__dataSetMapping).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IProxyDtoInternal)__dataSetMapping).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IProxyDtoInternal)__dataSetMapping).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IProxyDtoInternal)__dataSetMapping).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataShare.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IProxyDtoInternal)__dataSetMapping).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IProxyDtoInternal)__dataSetMapping).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataShare.Support.CreatedByType)""); }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IProxyDtoInternal)__dataSetMapping).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IProxyDtoInternal)__dataSetMapping).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IProxyDtoInternal)__dataSetMapping).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IProxyDtoInternal)__dataSetMapping).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataShare.Support.LastModifiedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IProxyDtoInternal)__dataSetMapping).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IProxyDtoInternal)__dataSetMapping).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataShare.Support.LastModifiedByType)""); }

        /// <summary>Type of the azure resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IProxyDtoInternal)__dataSetMapping).Type; }

        /// <summary>Creates an new <see cref="BlobFolderDataSetMapping" /> instance.</summary>
        public BlobFolderDataSetMapping()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__dataSetMapping), __dataSetMapping);
            await eventListener.AssertObjectIsValid(nameof(__dataSetMapping), __dataSetMapping);
        }
    }
    /// A Blob folder data set mapping.
    public partial interface IBlobFolderDataSetMapping :
        Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IDataSetMapping
    {
        /// <summary>Container that has the file path.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Container that has the file path.",
        SerializedName = @"containerName",
        PossibleTypes = new [] { typeof(string) })]
        string ContainerName { get; set; }
        /// <summary>The id of the source data set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The id of the source data set.",
        SerializedName = @"dataSetId",
        PossibleTypes = new [] { typeof(string) })]
        string DataSetId { get; set; }
        /// <summary>Gets the status of the data set mapping.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets the status of the data set mapping.",
        SerializedName = @"dataSetMappingStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataShare.Support.DataSetMappingStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataShare.Support.DataSetMappingStatus? DataSetMappingStatus { get;  }
        /// <summary>Prefix for blob folder</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Prefix for blob folder",
        SerializedName = @"prefix",
        PossibleTypes = new [] { typeof(string) })]
        string Prefix { get; set; }
        /// <summary>Provisioning state of the data set mapping.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Provisioning state of the data set mapping.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataShare.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataShare.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>Resource group of storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Resource group of storage account.",
        SerializedName = @"resourceGroup",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceGroup { get; set; }
        /// <summary>Storage account name of the source data set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Storage account name of the source data set.",
        SerializedName = @"storageAccountName",
        PossibleTypes = new [] { typeof(string) })]
        string StorageAccountName { get; set; }
        /// <summary>Subscription id of storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Subscription id of storage account.",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionId { get; set; }

    }
    /// A Blob folder data set mapping.
    internal partial interface IBlobFolderDataSetMappingInternal :
        Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IDataSetMappingInternal
    {
        /// <summary>Container that has the file path.</summary>
        string ContainerName { get; set; }
        /// <summary>The id of the source data set.</summary>
        string DataSetId { get; set; }
        /// <summary>Gets the status of the data set mapping.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataShare.Support.DataSetMappingStatus? DataSetMappingStatus { get; set; }
        /// <summary>Prefix for blob folder</summary>
        string Prefix { get; set; }
        /// <summary>Blob folder data set mapping properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IBlobFolderMappingProperties Property { get; set; }
        /// <summary>Provisioning state of the data set mapping.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataShare.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>Resource group of storage account.</summary>
        string ResourceGroup { get; set; }
        /// <summary>Storage account name of the source data set.</summary>
        string StorageAccountName { get; set; }
        /// <summary>Subscription id of storage account.</summary>
        string SubscriptionId { get; set; }

    }
}