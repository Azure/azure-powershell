// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Extensions;

    /// <summary>Synchronization details at data set level</summary>
    public partial class SynchronizationDetails :
        Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.ISynchronizationDetails,
        Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.ISynchronizationDetailsInternal
    {

        /// <summary>Backing field for <see cref="DataSetId" /> property.</summary>
        private string _dataSetId;

        /// <summary>Id of data set</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Owned)]
        public string DataSetId { get => this._dataSetId; }

        /// <summary>Backing field for <see cref="DataSetType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataShare.Support.DataSetType? _dataSetType;

        /// <summary>Type of the data set</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataShare.Support.DataSetType? DataSetType { get => this._dataSetType; }

        /// <summary>Backing field for <see cref="DurationMS" /> property.</summary>
        private int? _durationMS;

        /// <summary>Duration of data set level copy</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Owned)]
        public int? DurationMS { get => this._durationMS; }

        /// <summary>Backing field for <see cref="EndTime" /> property.</summary>
        private global::System.DateTime? _endTime;

        /// <summary>End time of data set level copy</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Owned)]
        public global::System.DateTime? EndTime { get => this._endTime; }

        /// <summary>Backing field for <see cref="FilesRead" /> property.</summary>
        private long? _filesRead;

        /// <summary>The number of files read from the source data set</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Owned)]
        public long? FilesRead { get => this._filesRead; }

        /// <summary>Backing field for <see cref="FilesWritten" /> property.</summary>
        private long? _filesWritten;

        /// <summary>The number of files written into the sink data set</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Owned)]
        public long? FilesWritten { get => this._filesWritten; }

        /// <summary>Backing field for <see cref="Message" /> property.</summary>
        private string _message;

        /// <summary>Error message if any</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Owned)]
        public string Message { get => this._message; }

        /// <summary>Internal Acessors for DataSetId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.ISynchronizationDetailsInternal.DataSetId { get => this._dataSetId; set { {_dataSetId = value;} } }

        /// <summary>Internal Acessors for DataSetType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataShare.Support.DataSetType? Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.ISynchronizationDetailsInternal.DataSetType { get => this._dataSetType; set { {_dataSetType = value;} } }

        /// <summary>Internal Acessors for DurationMS</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.ISynchronizationDetailsInternal.DurationMS { get => this._durationMS; set { {_durationMS = value;} } }

        /// <summary>Internal Acessors for EndTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.ISynchronizationDetailsInternal.EndTime { get => this._endTime; set { {_endTime = value;} } }

        /// <summary>Internal Acessors for FilesRead</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.ISynchronizationDetailsInternal.FilesRead { get => this._filesRead; set { {_filesRead = value;} } }

        /// <summary>Internal Acessors for FilesWritten</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.ISynchronizationDetailsInternal.FilesWritten { get => this._filesWritten; set { {_filesWritten = value;} } }

        /// <summary>Internal Acessors for Message</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.ISynchronizationDetailsInternal.Message { get => this._message; set { {_message = value;} } }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.ISynchronizationDetailsInternal.Name { get => this._name; set { {_name = value;} } }

        /// <summary>Internal Acessors for RowsCopied</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.ISynchronizationDetailsInternal.RowsCopied { get => this._rowsCopied; set { {_rowsCopied = value;} } }

        /// <summary>Internal Acessors for RowsRead</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.ISynchronizationDetailsInternal.RowsRead { get => this._rowsRead; set { {_rowsRead = value;} } }

        /// <summary>Internal Acessors for SizeRead</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.ISynchronizationDetailsInternal.SizeRead { get => this._sizeRead; set { {_sizeRead = value;} } }

        /// <summary>Internal Acessors for SizeWritten</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.ISynchronizationDetailsInternal.SizeWritten { get => this._sizeWritten; set { {_sizeWritten = value;} } }

        /// <summary>Internal Acessors for StartTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.ISynchronizationDetailsInternal.StartTime { get => this._startTime; set { {_startTime = value;} } }

        /// <summary>Internal Acessors for Status</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.ISynchronizationDetailsInternal.Status { get => this._status; set { {_status = value;} } }

        /// <summary>Internal Acessors for VCore</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.ISynchronizationDetailsInternal.VCore { get => this._vCore; set { {_vCore = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Name of the data set</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Owned)]
        public string Name { get => this._name; }

        /// <summary>Backing field for <see cref="RowsCopied" /> property.</summary>
        private long? _rowsCopied;

        /// <summary>The number of files copied into the sink data set</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Owned)]
        public long? RowsCopied { get => this._rowsCopied; }

        /// <summary>Backing field for <see cref="RowsRead" /> property.</summary>
        private long? _rowsRead;

        /// <summary>The number of rows read from the source data set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Owned)]
        public long? RowsRead { get => this._rowsRead; }

        /// <summary>Backing field for <see cref="SizeRead" /> property.</summary>
        private long? _sizeRead;

        /// <summary>The size of the data read from the source data set in bytes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Owned)]
        public long? SizeRead { get => this._sizeRead; }

        /// <summary>Backing field for <see cref="SizeWritten" /> property.</summary>
        private long? _sizeWritten;

        /// <summary>The size of the data written into the sink data set in bytes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Owned)]
        public long? SizeWritten { get => this._sizeWritten; }

        /// <summary>Backing field for <see cref="StartTime" /> property.</summary>
        private global::System.DateTime? _startTime;

        /// <summary>Start time of data set level copy</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Owned)]
        public global::System.DateTime? StartTime { get => this._startTime; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private string _status;

        /// <summary>Raw Status</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Owned)]
        public string Status { get => this._status; }

        /// <summary>Backing field for <see cref="VCore" /> property.</summary>
        private long? _vCore;

        /// <summary>The vCore units consumed for the data set synchronization</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Owned)]
        public long? VCore { get => this._vCore; }

        /// <summary>Creates an new <see cref="SynchronizationDetails" /> instance.</summary>
        public SynchronizationDetails()
        {

        }
    }
    /// Synchronization details at data set level
    public partial interface ISynchronizationDetails :
        Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.IJsonSerializable
    {
        /// <summary>Id of data set</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Id of data set",
        SerializedName = @"dataSetId",
        PossibleTypes = new [] { typeof(string) })]
        string DataSetId { get;  }
        /// <summary>Type of the data set</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Type of the data set",
        SerializedName = @"dataSetType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataShare.Support.DataSetType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataShare.Support.DataSetType? DataSetType { get;  }
        /// <summary>Duration of data set level copy</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Duration of data set level copy",
        SerializedName = @"durationMs",
        PossibleTypes = new [] { typeof(int) })]
        int? DurationMS { get;  }
        /// <summary>End time of data set level copy</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"End time of data set level copy",
        SerializedName = @"endTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? EndTime { get;  }
        /// <summary>The number of files read from the source data set</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of files read from the source data set",
        SerializedName = @"filesRead",
        PossibleTypes = new [] { typeof(long) })]
        long? FilesRead { get;  }
        /// <summary>The number of files written into the sink data set</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of files written into the sink data set",
        SerializedName = @"filesWritten",
        PossibleTypes = new [] { typeof(long) })]
        long? FilesWritten { get;  }
        /// <summary>Error message if any</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Error message if any",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string Message { get;  }
        /// <summary>Name of the data set</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Name of the data set",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get;  }
        /// <summary>The number of files copied into the sink data set</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of files copied into the sink data set",
        SerializedName = @"rowsCopied",
        PossibleTypes = new [] { typeof(long) })]
        long? RowsCopied { get;  }
        /// <summary>The number of rows read from the source data set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of rows read from the source data set.",
        SerializedName = @"rowsRead",
        PossibleTypes = new [] { typeof(long) })]
        long? RowsRead { get;  }
        /// <summary>The size of the data read from the source data set in bytes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The size of the data read from the source data set in bytes",
        SerializedName = @"sizeRead",
        PossibleTypes = new [] { typeof(long) })]
        long? SizeRead { get;  }
        /// <summary>The size of the data written into the sink data set in bytes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The size of the data written into the sink data set in bytes",
        SerializedName = @"sizeWritten",
        PossibleTypes = new [] { typeof(long) })]
        long? SizeWritten { get;  }
        /// <summary>Start time of data set level copy</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Start time of data set level copy",
        SerializedName = @"startTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? StartTime { get;  }
        /// <summary>Raw Status</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Raw Status",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(string) })]
        string Status { get;  }
        /// <summary>The vCore units consumed for the data set synchronization</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The vCore units consumed for the data set synchronization",
        SerializedName = @"vCore",
        PossibleTypes = new [] { typeof(long) })]
        long? VCore { get;  }

    }
    /// Synchronization details at data set level
    internal partial interface ISynchronizationDetailsInternal

    {
        /// <summary>Id of data set</summary>
        string DataSetId { get; set; }
        /// <summary>Type of the data set</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataShare.Support.DataSetType? DataSetType { get; set; }
        /// <summary>Duration of data set level copy</summary>
        int? DurationMS { get; set; }
        /// <summary>End time of data set level copy</summary>
        global::System.DateTime? EndTime { get; set; }
        /// <summary>The number of files read from the source data set</summary>
        long? FilesRead { get; set; }
        /// <summary>The number of files written into the sink data set</summary>
        long? FilesWritten { get; set; }
        /// <summary>Error message if any</summary>
        string Message { get; set; }
        /// <summary>Name of the data set</summary>
        string Name { get; set; }
        /// <summary>The number of files copied into the sink data set</summary>
        long? RowsCopied { get; set; }
        /// <summary>The number of rows read from the source data set.</summary>
        long? RowsRead { get; set; }
        /// <summary>The size of the data read from the source data set in bytes</summary>
        long? SizeRead { get; set; }
        /// <summary>The size of the data written into the sink data set in bytes</summary>
        long? SizeWritten { get; set; }
        /// <summary>Start time of data set level copy</summary>
        global::System.DateTime? StartTime { get; set; }
        /// <summary>Raw Status</summary>
        string Status { get; set; }
        /// <summary>The vCore units consumed for the data set synchronization</summary>
        long? VCore { get; set; }

    }
}