// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Extensions;

    /// <summary>ADLS Gen 2 folder data set mapping property bag.</summary>
    public partial class AdlsGen2FolderDataSetMappingProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IAdlsGen2FolderDataSetMappingProperties,
        Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IAdlsGen2FolderDataSetMappingPropertiesInternal
    {

        /// <summary>Backing field for <see cref="DataSetId" /> property.</summary>
        private string _dataSetId;

        /// <summary>The id of the source data set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Owned)]
        public string DataSetId { get => this._dataSetId; set => this._dataSetId = value; }

        /// <summary>Backing field for <see cref="DataSetMappingStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataShare.Support.DataSetMappingStatus? _dataSetMappingStatus;

        /// <summary>Gets the status of the data set mapping.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataShare.Support.DataSetMappingStatus? DataSetMappingStatus { get => this._dataSetMappingStatus; }

        /// <summary>Backing field for <see cref="FileSystem" /> property.</summary>
        private string _fileSystem;

        /// <summary>File system to which the folder belongs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Owned)]
        public string FileSystem { get => this._fileSystem; set => this._fileSystem = value; }

        /// <summary>Backing field for <see cref="FolderPath" /> property.</summary>
        private string _folderPath;

        /// <summary>Folder path within the file system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Owned)]
        public string FolderPath { get => this._folderPath; set => this._folderPath = value; }

        /// <summary>Internal Acessors for DataSetMappingStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataShare.Support.DataSetMappingStatus? Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IAdlsGen2FolderDataSetMappingPropertiesInternal.DataSetMappingStatus { get => this._dataSetMappingStatus; set { {_dataSetMappingStatus = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataShare.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IAdlsGen2FolderDataSetMappingPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataShare.Support.ProvisioningState? _provisioningState;

        /// <summary>Provisioning state of the data set mapping.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataShare.Support.ProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="ResourceGroup" /> property.</summary>
        private string _resourceGroup;

        /// <summary>Resource group of storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Owned)]
        public string ResourceGroup { get => this._resourceGroup; set => this._resourceGroup = value; }

        /// <summary>Backing field for <see cref="StorageAccountName" /> property.</summary>
        private string _storageAccountName;

        /// <summary>Storage account name of the source data set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Owned)]
        public string StorageAccountName { get => this._storageAccountName; set => this._storageAccountName = value; }

        /// <summary>Backing field for <see cref="SubscriptionId" /> property.</summary>
        private string _subscriptionId;

        /// <summary>Subscription id of storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataShare.PropertyOrigin.Owned)]
        public string SubscriptionId { get => this._subscriptionId; set => this._subscriptionId = value; }

        /// <summary>Creates an new <see cref="AdlsGen2FolderDataSetMappingProperties" /> instance.</summary>
        public AdlsGen2FolderDataSetMappingProperties()
        {

        }
    }
    /// ADLS Gen 2 folder data set mapping property bag.
    public partial interface IAdlsGen2FolderDataSetMappingProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.IJsonSerializable
    {
        /// <summary>The id of the source data set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The id of the source data set.",
        SerializedName = @"dataSetId",
        PossibleTypes = new [] { typeof(string) })]
        string DataSetId { get; set; }
        /// <summary>Gets the status of the data set mapping.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets the status of the data set mapping.",
        SerializedName = @"dataSetMappingStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataShare.Support.DataSetMappingStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataShare.Support.DataSetMappingStatus? DataSetMappingStatus { get;  }
        /// <summary>File system to which the folder belongs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"File system to which the folder belongs.",
        SerializedName = @"fileSystem",
        PossibleTypes = new [] { typeof(string) })]
        string FileSystem { get; set; }
        /// <summary>Folder path within the file system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Folder path within the file system.",
        SerializedName = @"folderPath",
        PossibleTypes = new [] { typeof(string) })]
        string FolderPath { get; set; }
        /// <summary>Provisioning state of the data set mapping.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Provisioning state of the data set mapping.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataShare.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataShare.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>Resource group of storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Resource group of storage account.",
        SerializedName = @"resourceGroup",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceGroup { get; set; }
        /// <summary>Storage account name of the source data set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Storage account name of the source data set.",
        SerializedName = @"storageAccountName",
        PossibleTypes = new [] { typeof(string) })]
        string StorageAccountName { get; set; }
        /// <summary>Subscription id of storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Subscription id of storage account.",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionId { get; set; }

    }
    /// ADLS Gen 2 folder data set mapping property bag.
    internal partial interface IAdlsGen2FolderDataSetMappingPropertiesInternal

    {
        /// <summary>The id of the source data set.</summary>
        string DataSetId { get; set; }
        /// <summary>Gets the status of the data set mapping.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataShare.Support.DataSetMappingStatus? DataSetMappingStatus { get; set; }
        /// <summary>File system to which the folder belongs.</summary>
        string FileSystem { get; set; }
        /// <summary>Folder path within the file system.</summary>
        string FolderPath { get; set; }
        /// <summary>Provisioning state of the data set mapping.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataShare.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>Resource group of storage account.</summary>
        string ResourceGroup { get; set; }
        /// <summary>Storage account name of the source data set.</summary>
        string StorageAccountName { get; set; }
        /// <summary>Subscription id of storage account.</summary>
        string SubscriptionId { get; set; }

    }
}