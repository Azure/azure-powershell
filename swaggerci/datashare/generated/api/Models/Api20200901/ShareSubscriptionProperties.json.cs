// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Extensions;

    /// <summary>Share subscription property bag.</summary>
    public partial class ShareSubscriptionProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json erialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IShareSubscriptionProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IShareSubscriptionProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20200901.IShareSubscriptionProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonObject json ? new ShareSubscriptionProperties(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonObject into a new instance of <see cref="ShareSubscriptionProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal ShareSubscriptionProperties(Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_createdAt = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonString>("createdAt"), out var __jsonCreatedAt) ? global::System.DateTime.TryParse((string)__jsonCreatedAt, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonCreatedAtValue) ? __jsonCreatedAtValue : CreatedAt : CreatedAt;}
            {_expirationDate = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonString>("expirationDate"), out var __jsonExpirationDate) ? global::System.DateTime.TryParse((string)__jsonExpirationDate, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonExpirationDateValue) ? __jsonExpirationDateValue : ExpirationDate : ExpirationDate;}
            {_invitationId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonString>("invitationId"), out var __jsonInvitationId) ? (string)__jsonInvitationId : (string)InvitationId;}
            {_providerEmail = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonString>("providerEmail"), out var __jsonProviderEmail) ? (string)__jsonProviderEmail : (string)ProviderEmail;}
            {_providerName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonString>("providerName"), out var __jsonProviderName) ? (string)__jsonProviderName : (string)ProviderName;}
            {_providerTenantName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonString>("providerTenantName"), out var __jsonProviderTenantName) ? (string)__jsonProviderTenantName : (string)ProviderTenantName;}
            {_provisioningState = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonString>("provisioningState"), out var __jsonProvisioningState) ? (string)__jsonProvisioningState : (string)ProvisioningState;}
            {_shareDescription = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonString>("shareDescription"), out var __jsonShareDescription) ? (string)__jsonShareDescription : (string)ShareDescription;}
            {_shareKind = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonString>("shareKind"), out var __jsonShareKind) ? (string)__jsonShareKind : (string)ShareKind;}
            {_shareName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonString>("shareName"), out var __jsonShareName) ? (string)__jsonShareName : (string)ShareName;}
            {_shareSubscriptionStatus = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonString>("shareSubscriptionStatus"), out var __jsonShareSubscriptionStatus) ? (string)__jsonShareSubscriptionStatus : (string)ShareSubscriptionStatus;}
            {_shareTerm = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonString>("shareTerms"), out var __jsonShareTerms) ? (string)__jsonShareTerms : (string)ShareTerm;}
            {_sourceShareLocation = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonString>("sourceShareLocation"), out var __jsonSourceShareLocation) ? (string)__jsonSourceShareLocation : (string)SourceShareLocation;}
            {_userEmail = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonString>("userEmail"), out var __jsonUserEmail) ? (string)__jsonUserEmail : (string)UserEmail;}
            {_userName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonString>("userName"), out var __jsonUserName) ? (string)__jsonUserName : (string)UserName;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="ShareSubscriptionProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="ShareSubscriptionProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._createdAt ? (Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonString(this._createdAt?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "createdAt" ,container.Add );
            }
            AddIf( null != this._expirationDate ? (Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonString(this._expirationDate?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "expirationDate" ,container.Add );
            AddIf( null != (((object)this._invitationId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonString(this._invitationId.ToString()) : null, "invitationId" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._providerEmail)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonString(this._providerEmail.ToString()) : null, "providerEmail" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._providerName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonString(this._providerName.ToString()) : null, "providerName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._providerTenantName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonString(this._providerTenantName.ToString()) : null, "providerTenantName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._provisioningState)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonString(this._provisioningState.ToString()) : null, "provisioningState" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._shareDescription)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonString(this._shareDescription.ToString()) : null, "shareDescription" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._shareKind)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonString(this._shareKind.ToString()) : null, "shareKind" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._shareName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonString(this._shareName.ToString()) : null, "shareName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._shareSubscriptionStatus)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonString(this._shareSubscriptionStatus.ToString()) : null, "shareSubscriptionStatus" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._shareTerm)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonString(this._shareTerm.ToString()) : null, "shareTerms" ,container.Add );
            }
            AddIf( null != (((object)this._sourceShareLocation)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonString(this._sourceShareLocation.ToString()) : null, "sourceShareLocation" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._userEmail)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonString(this._userEmail.ToString()) : null, "userEmail" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._userName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataShare.Runtime.Json.JsonString(this._userName.ToString()) : null, "userName" ,container.Add );
            }
            AfterToJson(ref container);
            return container;
        }
    }
}