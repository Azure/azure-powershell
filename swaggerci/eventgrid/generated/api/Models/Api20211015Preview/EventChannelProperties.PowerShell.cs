// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview
{
    using Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.PowerShell;

    /// <summary>Properties of the Event Channel.</summary>
    [System.ComponentModel.TypeConverter(typeof(EventChannelPropertiesTypeConverter))]
    public partial class EventChannelProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.EventChannelProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new EventChannelProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.EventChannelProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new EventChannelProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.EventChannelProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal EventChannelProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Source"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).Source = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelSource) content.GetValueForProperty("Source",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).Source, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.EventChannelSourceTypeConverter.ConvertFrom);
            }
            if (content.Contains("Destination"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).Destination = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelDestination) content.GetValueForProperty("Destination",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).Destination, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.EventChannelDestinationTypeConverter.ConvertFrom);
            }
            if (content.Contains("Filter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).Filter = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelFilter) content.GetValueForProperty("Filter",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).Filter, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.EventChannelFilterTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EventChannelProvisioningState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EventChannelProvisioningState.CreateFrom);
            }
            if (content.Contains("PartnerTopicReadinessState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).PartnerTopicReadinessState = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.PartnerTopicReadinessState?) content.GetValueForProperty("PartnerTopicReadinessState",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).PartnerTopicReadinessState, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.PartnerTopicReadinessState.CreateFrom);
            }
            if (content.Contains("ExpirationTimeIfNotActivatedUtc"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).ExpirationTimeIfNotActivatedUtc = (global::System.DateTime?) content.GetValueForProperty("ExpirationTimeIfNotActivatedUtc",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).ExpirationTimeIfNotActivatedUtc, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("PartnerTopicFriendlyDescription"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).PartnerTopicFriendlyDescription = (string) content.GetValueForProperty("PartnerTopicFriendlyDescription",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).PartnerTopicFriendlyDescription, global::System.Convert.ToString);
            }
            if (content.Contains("EventChannelSource"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).EventChannelSource = (string) content.GetValueForProperty("EventChannelSource",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).EventChannelSource, global::System.Convert.ToString);
            }
            if (content.Contains("DestinationAzureSubscriptionId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).DestinationAzureSubscriptionId = (string) content.GetValueForProperty("DestinationAzureSubscriptionId",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).DestinationAzureSubscriptionId, global::System.Convert.ToString);
            }
            if (content.Contains("DestinationResourceGroup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).DestinationResourceGroup = (string) content.GetValueForProperty("DestinationResourceGroup",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).DestinationResourceGroup, global::System.Convert.ToString);
            }
            if (content.Contains("DestinationPartnerTopicName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).DestinationPartnerTopicName = (string) content.GetValueForProperty("DestinationPartnerTopicName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).DestinationPartnerTopicName, global::System.Convert.ToString);
            }
            if (content.Contains("FilterEnableAdvancedFilteringOnArray"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).FilterEnableAdvancedFilteringOnArray = (bool?) content.GetValueForProperty("FilterEnableAdvancedFilteringOnArray",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).FilterEnableAdvancedFilteringOnArray, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("FilterAdvancedFilter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).FilterAdvancedFilter = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IAdvancedFilter[]) content.GetValueForProperty("FilterAdvancedFilter",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).FilterAdvancedFilter, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IAdvancedFilter>(__y, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.AdvancedFilterTypeConverter.ConvertFrom));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.EventChannelProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal EventChannelProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Source"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).Source = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelSource) content.GetValueForProperty("Source",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).Source, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.EventChannelSourceTypeConverter.ConvertFrom);
            }
            if (content.Contains("Destination"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).Destination = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelDestination) content.GetValueForProperty("Destination",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).Destination, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.EventChannelDestinationTypeConverter.ConvertFrom);
            }
            if (content.Contains("Filter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).Filter = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelFilter) content.GetValueForProperty("Filter",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).Filter, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.EventChannelFilterTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EventChannelProvisioningState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EventChannelProvisioningState.CreateFrom);
            }
            if (content.Contains("PartnerTopicReadinessState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).PartnerTopicReadinessState = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.PartnerTopicReadinessState?) content.GetValueForProperty("PartnerTopicReadinessState",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).PartnerTopicReadinessState, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.PartnerTopicReadinessState.CreateFrom);
            }
            if (content.Contains("ExpirationTimeIfNotActivatedUtc"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).ExpirationTimeIfNotActivatedUtc = (global::System.DateTime?) content.GetValueForProperty("ExpirationTimeIfNotActivatedUtc",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).ExpirationTimeIfNotActivatedUtc, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("PartnerTopicFriendlyDescription"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).PartnerTopicFriendlyDescription = (string) content.GetValueForProperty("PartnerTopicFriendlyDescription",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).PartnerTopicFriendlyDescription, global::System.Convert.ToString);
            }
            if (content.Contains("EventChannelSource"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).EventChannelSource = (string) content.GetValueForProperty("EventChannelSource",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).EventChannelSource, global::System.Convert.ToString);
            }
            if (content.Contains("DestinationAzureSubscriptionId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).DestinationAzureSubscriptionId = (string) content.GetValueForProperty("DestinationAzureSubscriptionId",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).DestinationAzureSubscriptionId, global::System.Convert.ToString);
            }
            if (content.Contains("DestinationResourceGroup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).DestinationResourceGroup = (string) content.GetValueForProperty("DestinationResourceGroup",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).DestinationResourceGroup, global::System.Convert.ToString);
            }
            if (content.Contains("DestinationPartnerTopicName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).DestinationPartnerTopicName = (string) content.GetValueForProperty("DestinationPartnerTopicName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).DestinationPartnerTopicName, global::System.Convert.ToString);
            }
            if (content.Contains("FilterEnableAdvancedFilteringOnArray"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).FilterEnableAdvancedFilteringOnArray = (bool?) content.GetValueForProperty("FilterEnableAdvancedFilteringOnArray",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).FilterEnableAdvancedFilteringOnArray, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("FilterAdvancedFilter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).FilterAdvancedFilter = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IAdvancedFilter[]) content.GetValueForProperty("FilterAdvancedFilter",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal)this).FilterAdvancedFilter, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IAdvancedFilter>(__y, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.AdvancedFilterTypeConverter.ConvertFrom));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="EventChannelProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="EventChannelProperties" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Properties of the Event Channel.
    [System.ComponentModel.TypeConverter(typeof(EventChannelPropertiesTypeConverter))]
    public partial interface IEventChannelProperties

    {

    }
}