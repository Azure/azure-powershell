// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview
{
    using Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.PowerShell;

    /// <summary>Properties of a topic type info.</summary>
    [System.ComponentModel.TypeConverter(typeof(TopicTypeInfoTypeConverter))]
    public partial class TopicTypeInfo
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.TopicTypeInfo"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.ITopicTypeInfo" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.ITopicTypeInfo DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new TopicTypeInfo(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.TopicTypeInfo"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.ITopicTypeInfo" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.ITopicTypeInfo DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new TopicTypeInfo(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="TopicTypeInfo" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="TopicTypeInfo" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.ITopicTypeInfo FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.SerializationMode.IncludeAll)?.ToString();

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.TopicTypeInfo"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal TopicTypeInfo(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.ITopicTypeInfoInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.ITopicTypeProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.ITopicTypeInfoInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.TopicTypePropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Provider"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.ITopicTypeInfoInternal)this).Provider = (string) content.GetValueForProperty("Provider",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.ITopicTypeInfoInternal)this).Provider, global::System.Convert.ToString);
            }
            if (content.Contains("DisplayName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.ITopicTypeInfoInternal)this).DisplayName = (string) content.GetValueForProperty("DisplayName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.ITopicTypeInfoInternal)this).DisplayName, global::System.Convert.ToString);
            }
            if (content.Contains("Description"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.ITopicTypeInfoInternal)this).Description = (string) content.GetValueForProperty("Description",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.ITopicTypeInfoInternal)this).Description, global::System.Convert.ToString);
            }
            if (content.Contains("ResourceRegionType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.ITopicTypeInfoInternal)this).ResourceRegionType = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.ResourceRegionType?) content.GetValueForProperty("ResourceRegionType",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.ITopicTypeInfoInternal)this).ResourceRegionType, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.ResourceRegionType.CreateFrom);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.ITopicTypeInfoInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.TopicTypeProvisioningState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.ITopicTypeInfoInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.TopicTypeProvisioningState.CreateFrom);
            }
            if (content.Contains("SupportedLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.ITopicTypeInfoInternal)this).SupportedLocation = (string[]) content.GetValueForProperty("SupportedLocation",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.ITopicTypeInfoInternal)this).SupportedLocation, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("SourceResourceFormat"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.ITopicTypeInfoInternal)this).SourceResourceFormat = (string) content.GetValueForProperty("SourceResourceFormat",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.ITopicTypeInfoInternal)this).SourceResourceFormat, global::System.Convert.ToString);
            }
            if (content.Contains("SupportedScopesForSource"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.ITopicTypeInfoInternal)this).SupportedScopesForSource = (string[]) content.GetValueForProperty("SupportedScopesForSource",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.ITopicTypeInfoInternal)this).SupportedScopesForSource, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.TopicTypeInfo"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal TopicTypeInfo(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.ITopicTypeInfoInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.ITopicTypeProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.ITopicTypeInfoInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.TopicTypePropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Provider"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.ITopicTypeInfoInternal)this).Provider = (string) content.GetValueForProperty("Provider",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.ITopicTypeInfoInternal)this).Provider, global::System.Convert.ToString);
            }
            if (content.Contains("DisplayName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.ITopicTypeInfoInternal)this).DisplayName = (string) content.GetValueForProperty("DisplayName",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.ITopicTypeInfoInternal)this).DisplayName, global::System.Convert.ToString);
            }
            if (content.Contains("Description"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.ITopicTypeInfoInternal)this).Description = (string) content.GetValueForProperty("Description",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.ITopicTypeInfoInternal)this).Description, global::System.Convert.ToString);
            }
            if (content.Contains("ResourceRegionType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.ITopicTypeInfoInternal)this).ResourceRegionType = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.ResourceRegionType?) content.GetValueForProperty("ResourceRegionType",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.ITopicTypeInfoInternal)this).ResourceRegionType, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.ResourceRegionType.CreateFrom);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.ITopicTypeInfoInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.TopicTypeProvisioningState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.ITopicTypeInfoInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.TopicTypeProvisioningState.CreateFrom);
            }
            if (content.Contains("SupportedLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.ITopicTypeInfoInternal)this).SupportedLocation = (string[]) content.GetValueForProperty("SupportedLocation",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.ITopicTypeInfoInternal)this).SupportedLocation, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("SourceResourceFormat"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.ITopicTypeInfoInternal)this).SourceResourceFormat = (string) content.GetValueForProperty("SourceResourceFormat",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.ITopicTypeInfoInternal)this).SourceResourceFormat, global::System.Convert.ToString);
            }
            if (content.Contains("SupportedScopesForSource"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.ITopicTypeInfoInternal)this).SupportedScopesForSource = (string[]) content.GetValueForProperty("SupportedScopesForSource",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.ITopicTypeInfoInternal)this).SupportedScopesForSource, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            AfterDeserializePSObject(content);
        }
    }
    /// Properties of a topic type info.
    [System.ComponentModel.TypeConverter(typeof(TopicTypeInfoTypeConverter))]
    public partial interface ITopicTypeInfo

    {

    }
}