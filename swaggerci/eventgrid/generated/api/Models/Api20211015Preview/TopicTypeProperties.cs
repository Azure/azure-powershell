// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Extensions;

    /// <summary>Properties of a topic type.</summary>
    public partial class TopicTypeProperties :
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.ITopicTypeProperties,
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.ITopicTypePropertiesInternal
    {

        /// <summary>Backing field for <see cref="Description" /> property.</summary>
        private string _description;

        /// <summary>Description of the topic type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string Description { get => this._description; set => this._description = value; }

        /// <summary>Backing field for <see cref="DisplayName" /> property.</summary>
        private string _displayName;

        /// <summary>Display Name for the topic type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string DisplayName { get => this._displayName; set => this._displayName = value; }

        /// <summary>Backing field for <see cref="Provider" /> property.</summary>
        private string _provider;

        /// <summary>Namespace of the provider of the topic type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string Provider { get => this._provider; set => this._provider = value; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.TopicTypeProvisioningState? _provisioningState;

        /// <summary>Provisioning state of the topic type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.TopicTypeProvisioningState? ProvisioningState { get => this._provisioningState; set => this._provisioningState = value; }

        /// <summary>Backing field for <see cref="ResourceRegionType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.ResourceRegionType? _resourceRegionType;

        /// <summary>Region type of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.ResourceRegionType? ResourceRegionType { get => this._resourceRegionType; set => this._resourceRegionType = value; }

        /// <summary>Backing field for <see cref="SourceResourceFormat" /> property.</summary>
        private string _sourceResourceFormat;

        /// <summary>Source resource format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string SourceResourceFormat { get => this._sourceResourceFormat; set => this._sourceResourceFormat = value; }

        /// <summary>Backing field for <see cref="SupportedLocation" /> property.</summary>
        private string[] _supportedLocation;

        /// <summary>List of locations supported by this topic type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string[] SupportedLocation { get => this._supportedLocation; set => this._supportedLocation = value; }

        /// <summary>Backing field for <see cref="SupportedScopesForSource" /> property.</summary>
        private string[] _supportedScopesForSource;

        /// <summary>Supported source scopes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string[] SupportedScopesForSource { get => this._supportedScopesForSource; set => this._supportedScopesForSource = value; }

        /// <summary>Creates an new <see cref="TopicTypeProperties" /> instance.</summary>
        public TopicTypeProperties()
        {

        }
    }
    /// Properties of a topic type.
    public partial interface ITopicTypeProperties :
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.IJsonSerializable
    {
        /// <summary>Description of the topic type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Description of the topic type.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>Display Name for the topic type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Display Name for the topic type.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>Namespace of the provider of the topic type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Namespace of the provider of the topic type.",
        SerializedName = @"provider",
        PossibleTypes = new [] { typeof(string) })]
        string Provider { get; set; }
        /// <summary>Provisioning state of the topic type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Provisioning state of the topic type",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.TopicTypeProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.TopicTypeProvisioningState? ProvisioningState { get; set; }
        /// <summary>Region type of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Region type of the resource.",
        SerializedName = @"resourceRegionType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.ResourceRegionType) })]
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.ResourceRegionType? ResourceRegionType { get; set; }
        /// <summary>Source resource format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Source resource format.",
        SerializedName = @"sourceResourceFormat",
        PossibleTypes = new [] { typeof(string) })]
        string SourceResourceFormat { get; set; }
        /// <summary>List of locations supported by this topic type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of locations supported by this topic type.",
        SerializedName = @"supportedLocations",
        PossibleTypes = new [] { typeof(string) })]
        string[] SupportedLocation { get; set; }
        /// <summary>Supported source scopes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Supported source scopes.",
        SerializedName = @"supportedScopesForSource",
        PossibleTypes = new [] { typeof(string) })]
        string[] SupportedScopesForSource { get; set; }

    }
    /// Properties of a topic type.
    internal partial interface ITopicTypePropertiesInternal

    {
        /// <summary>Description of the topic type.</summary>
        string Description { get; set; }
        /// <summary>Display Name for the topic type.</summary>
        string DisplayName { get; set; }
        /// <summary>Namespace of the provider of the topic type.</summary>
        string Provider { get; set; }
        /// <summary>Provisioning state of the topic type</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.TopicTypeProvisioningState? ProvisioningState { get; set; }
        /// <summary>Region type of the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.ResourceRegionType? ResourceRegionType { get; set; }
        /// <summary>Source resource format.</summary>
        string SourceResourceFormat { get; set; }
        /// <summary>List of locations supported by this topic type.</summary>
        string[] SupportedLocation { get; set; }
        /// <summary>Supported source scopes.</summary>
        string[] SupportedScopesForSource { get; set; }

    }
}