// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Extensions;

    /// <summary>Properties of the partner registration.</summary>
    public partial class PartnerRegistrationProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json erialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IPartnerRegistrationProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IPartnerRegistrationProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IPartnerRegistrationProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonObject json ? new PartnerRegistrationProperties(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonObject into a new instance of <see cref="PartnerRegistrationProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal PartnerRegistrationProperties(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_provisioningState = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonString>("provisioningState"), out var __jsonProvisioningState) ? (string)__jsonProvisioningState : (string)ProvisioningState;}
            {_partnerRegistrationImmutableId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonString>("partnerRegistrationImmutableId"), out var __jsonPartnerRegistrationImmutableId) ? (string)__jsonPartnerRegistrationImmutableId : (string)PartnerRegistrationImmutableId;}
            {_partnerName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonString>("partnerName"), out var __jsonPartnerName) ? (string)__jsonPartnerName : (string)PartnerName;}
            {_partnerResourceTypeName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonString>("partnerResourceTypeName"), out var __jsonPartnerResourceTypeName) ? (string)__jsonPartnerResourceTypeName : (string)PartnerResourceTypeName;}
            {_partnerResourceTypeDisplayName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonString>("partnerResourceTypeDisplayName"), out var __jsonPartnerResourceTypeDisplayName) ? (string)__jsonPartnerResourceTypeDisplayName : (string)PartnerResourceTypeDisplayName;}
            {_partnerResourceTypeDescription = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonString>("partnerResourceTypeDescription"), out var __jsonPartnerResourceTypeDescription) ? (string)__jsonPartnerResourceTypeDescription : (string)PartnerResourceTypeDescription;}
            {_longDescription = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonString>("longDescription"), out var __jsonLongDescription) ? (string)__jsonLongDescription : (string)LongDescription;}
            {_partnerCustomerServiceNumber = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonString>("partnerCustomerServiceNumber"), out var __jsonPartnerCustomerServiceNumber) ? (string)__jsonPartnerCustomerServiceNumber : (string)PartnerCustomerServiceNumber;}
            {_partnerCustomerServiceExtension = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonString>("partnerCustomerServiceExtension"), out var __jsonPartnerCustomerServiceExtension) ? (string)__jsonPartnerCustomerServiceExtension : (string)PartnerCustomerServiceExtension;}
            {_customerServiceUri = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonString>("customerServiceUri"), out var __jsonCustomerServiceUri) ? (string)__jsonCustomerServiceUri : (string)CustomerServiceUri;}
            {_setupUri = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonString>("setupUri"), out var __jsonSetupUri) ? (string)__jsonSetupUri : (string)SetupUri;}
            {_logoUri = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonString>("logoUri"), out var __jsonLogoUri) ? (string)__jsonLogoUri : (string)LogoUri;}
            {_visibilityState = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonString>("visibilityState"), out var __jsonVisibilityState) ? (string)__jsonVisibilityState : (string)VisibilityState;}
            {_authorizedAzureSubscriptionId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonArray>("authorizedAzureSubscriptionIds"), out var __jsonAuthorizedAzureSubscriptionIds) ? If( __jsonAuthorizedAzureSubscriptionIds as Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(string) (__u is Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonString __t ? (string)(__t.ToString()) : null)) ))() : null : AuthorizedAzureSubscriptionId;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="PartnerRegistrationProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="PartnerRegistrationProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._provisioningState)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonString(this._provisioningState.ToString()) : null, "provisioningState" ,container.Add );
            }
            AddIf( null != (((object)this._partnerRegistrationImmutableId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonString(this._partnerRegistrationImmutableId.ToString()) : null, "partnerRegistrationImmutableId" ,container.Add );
            AddIf( null != (((object)this._partnerName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonString(this._partnerName.ToString()) : null, "partnerName" ,container.Add );
            AddIf( null != (((object)this._partnerResourceTypeName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonString(this._partnerResourceTypeName.ToString()) : null, "partnerResourceTypeName" ,container.Add );
            AddIf( null != (((object)this._partnerResourceTypeDisplayName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonString(this._partnerResourceTypeDisplayName.ToString()) : null, "partnerResourceTypeDisplayName" ,container.Add );
            AddIf( null != (((object)this._partnerResourceTypeDescription)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonString(this._partnerResourceTypeDescription.ToString()) : null, "partnerResourceTypeDescription" ,container.Add );
            AddIf( null != (((object)this._longDescription)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonString(this._longDescription.ToString()) : null, "longDescription" ,container.Add );
            AddIf( null != (((object)this._partnerCustomerServiceNumber)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonString(this._partnerCustomerServiceNumber.ToString()) : null, "partnerCustomerServiceNumber" ,container.Add );
            AddIf( null != (((object)this._partnerCustomerServiceExtension)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonString(this._partnerCustomerServiceExtension.ToString()) : null, "partnerCustomerServiceExtension" ,container.Add );
            AddIf( null != (((object)this._customerServiceUri)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonString(this._customerServiceUri.ToString()) : null, "customerServiceUri" ,container.Add );
            AddIf( null != (((object)this._setupUri)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonString(this._setupUri.ToString()) : null, "setupUri" ,container.Add );
            AddIf( null != (((object)this._logoUri)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonString(this._logoUri.ToString()) : null, "logoUri" ,container.Add );
            AddIf( null != (((object)this._visibilityState)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonString(this._visibilityState.ToString()) : null, "visibilityState" ,container.Add );
            if (null != this._authorizedAzureSubscriptionId)
            {
                var __w = new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.XNodeArray();
                foreach( var __x in this._authorizedAzureSubscriptionId )
                {
                    AddIf(null != (((object)__x)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonString(__x.ToString()) : null ,__w.Add);
                }
                container.Add("authorizedAzureSubscriptionIds",__w);
            }
            AfterToJson(ref container);
            return container;
        }
    }
}