// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Extensions;

    /// <summary>Properties of the Event Channel.</summary>
    public partial class EventChannelProperties :
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelProperties,
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal
    {

        /// <summary>Backing field for <see cref="Destination" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelDestination _destination;

        /// <summary>Represents the destination of an event channel.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelDestination Destination { get => (this._destination = this._destination ?? new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.EventChannelDestination()); set => this._destination = value; }

        /// <summary>
        /// Azure subscription ID of the customer creating the event channel. The partner topic
        /// associated with the event channel will be created under this Azure subscription.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string DestinationAzureSubscriptionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelDestinationInternal)Destination).AzureSubscriptionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelDestinationInternal)Destination).AzureSubscriptionId = value ?? null; }

        /// <summary>Name of the partner topic associated with the event channel.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string DestinationPartnerTopicName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelDestinationInternal)Destination).PartnerTopicName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelDestinationInternal)Destination).PartnerTopicName = value ?? null; }

        /// <summary>
        /// Azure Resource Group of the customer creating the event channel. The partner topic
        /// associated with the event channel will be created under this resource group.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string DestinationResourceGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelDestinationInternal)Destination).ResourceGroup; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelDestinationInternal)Destination).ResourceGroup = value ?? null; }

        /// <summary>
        /// The identifier of the resource that's the source of the events.
        /// This represents a unique resource in the partner's resource model.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string EventChannelSource { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelSourceInternal)Source).Source; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelSourceInternal)Source).Source = value ?? null; }

        /// <summary>Backing field for <see cref="ExpirationTimeIfNotActivatedUtc" /> property.</summary>
        private global::System.DateTime? _expirationTimeIfNotActivatedUtc;

        /// <summary>
        /// Expiration time of the event channel. If this timer expires while the corresponding partner topic is never activated,
        /// the event channel and corresponding partner topic are deleted.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public global::System.DateTime? ExpirationTimeIfNotActivatedUtc { get => this._expirationTimeIfNotActivatedUtc; set => this._expirationTimeIfNotActivatedUtc = value; }

        /// <summary>Backing field for <see cref="Filter" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelFilter _filter;

        /// <summary>Information about the filter for the event channel.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelFilter Filter { get => (this._filter = this._filter ?? new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.EventChannelFilter()); set => this._filter = value; }

        /// <summary>An array of advanced filters that are used for filtering event channels.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IAdvancedFilter[] FilterAdvancedFilter { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelFilterInternal)Filter).AdvancedFilter; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelFilterInternal)Filter).AdvancedFilter = value ?? null /* arrayOf */; }

        /// <summary>
        /// Allows advanced filters to be evaluated against an array of values instead of expecting a singular value. The default
        /// value is either false or null.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public bool? FilterEnableAdvancedFilteringOnArray { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelFilterInternal)Filter).EnableAdvancedFilteringOnArray; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelFilterInternal)Filter).EnableAdvancedFilteringOnArray = value ?? default(bool); }

        /// <summary>Internal Acessors for Destination</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelDestination Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal.Destination { get => (this._destination = this._destination ?? new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.EventChannelDestination()); set { {_destination = value;} } }

        /// <summary>Internal Acessors for Filter</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelFilter Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal.Filter { get => (this._filter = this._filter ?? new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.EventChannelFilter()); set { {_filter = value;} } }

        /// <summary>Internal Acessors for PartnerTopicReadinessState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.PartnerTopicReadinessState? Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal.PartnerTopicReadinessState { get => this._partnerTopicReadinessState; set { {_partnerTopicReadinessState = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EventChannelProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for Source</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelSource Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelPropertiesInternal.Source { get => (this._source = this._source ?? new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.EventChannelSource()); set { {_source = value;} } }

        /// <summary>Backing field for <see cref="PartnerTopicFriendlyDescription" /> property.</summary>
        private string _partnerTopicFriendlyDescription;

        /// <summary>
        /// Friendly description about the topic. This can be set by the publisher/partner to show custom description for the customer
        /// partner topic.
        /// This will be helpful to remove any ambiguity of the origin of creation of the partner topic for the customer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string PartnerTopicFriendlyDescription { get => this._partnerTopicFriendlyDescription; set => this._partnerTopicFriendlyDescription = value; }

        /// <summary>Backing field for <see cref="PartnerTopicReadinessState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.PartnerTopicReadinessState? _partnerTopicReadinessState;

        /// <summary>The readiness state of the corresponding partner topic.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.PartnerTopicReadinessState? PartnerTopicReadinessState { get => this._partnerTopicReadinessState; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EventChannelProvisioningState? _provisioningState;

        /// <summary>Provisioning state of the event channel.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EventChannelProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="Source" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelSource _source;

        /// <summary>
        /// Source of the event channel. This represents a unique resource in the partner's resource model.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelSource Source { get => (this._source = this._source ?? new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.EventChannelSource()); set => this._source = value; }

        /// <summary>Creates an new <see cref="EventChannelProperties" /> instance.</summary>
        public EventChannelProperties()
        {

        }
    }
    /// Properties of the Event Channel.
    public partial interface IEventChannelProperties :
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Azure subscription ID of the customer creating the event channel. The partner topic
        /// associated with the event channel will be created under this Azure subscription.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Azure subscription ID of the customer creating the event channel. The partner topic
        associated with the event channel will be created under this Azure subscription.",
        SerializedName = @"azureSubscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string DestinationAzureSubscriptionId { get; set; }
        /// <summary>Name of the partner topic associated with the event channel.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the partner topic associated with the event channel.",
        SerializedName = @"partnerTopicName",
        PossibleTypes = new [] { typeof(string) })]
        string DestinationPartnerTopicName { get; set; }
        /// <summary>
        /// Azure Resource Group of the customer creating the event channel. The partner topic
        /// associated with the event channel will be created under this resource group.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Azure Resource Group of the customer creating the event channel. The partner topic
        associated with the event channel will be created under this resource group.",
        SerializedName = @"resourceGroup",
        PossibleTypes = new [] { typeof(string) })]
        string DestinationResourceGroup { get; set; }
        /// <summary>
        /// The identifier of the resource that's the source of the events.
        /// This represents a unique resource in the partner's resource model.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identifier of the resource that's the source of the events.
        This represents a unique resource in the partner's resource model.",
        SerializedName = @"source",
        PossibleTypes = new [] { typeof(string) })]
        string EventChannelSource { get; set; }
        /// <summary>
        /// Expiration time of the event channel. If this timer expires while the corresponding partner topic is never activated,
        /// the event channel and corresponding partner topic are deleted.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Expiration time of the event channel. If this timer expires while the corresponding partner topic is never activated,
        the event channel and corresponding partner topic are deleted.",
        SerializedName = @"expirationTimeIfNotActivatedUtc",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ExpirationTimeIfNotActivatedUtc { get; set; }
        /// <summary>An array of advanced filters that are used for filtering event channels.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"An array of advanced filters that are used for filtering event channels.",
        SerializedName = @"advancedFilters",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IAdvancedFilter) })]
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IAdvancedFilter[] FilterAdvancedFilter { get; set; }
        /// <summary>
        /// Allows advanced filters to be evaluated against an array of values instead of expecting a singular value. The default
        /// value is either false or null.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Allows advanced filters to be evaluated against an array of values instead of expecting a singular value. The default value is either false or null.",
        SerializedName = @"enableAdvancedFilteringOnArrays",
        PossibleTypes = new [] { typeof(bool) })]
        bool? FilterEnableAdvancedFilteringOnArray { get; set; }
        /// <summary>
        /// Friendly description about the topic. This can be set by the publisher/partner to show custom description for the customer
        /// partner topic.
        /// This will be helpful to remove any ambiguity of the origin of creation of the partner topic for the customer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Friendly description about the topic. This can be set by the publisher/partner to show custom description for the customer partner topic.
        This will be helpful to remove any ambiguity of the origin of creation of the partner topic for the customer.",
        SerializedName = @"partnerTopicFriendlyDescription",
        PossibleTypes = new [] { typeof(string) })]
        string PartnerTopicFriendlyDescription { get; set; }
        /// <summary>The readiness state of the corresponding partner topic.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The readiness state of the corresponding partner topic.",
        SerializedName = @"partnerTopicReadinessState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.PartnerTopicReadinessState) })]
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.PartnerTopicReadinessState? PartnerTopicReadinessState { get;  }
        /// <summary>Provisioning state of the event channel.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Provisioning state of the event channel.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EventChannelProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EventChannelProvisioningState? ProvisioningState { get;  }

    }
    /// Properties of the Event Channel.
    internal partial interface IEventChannelPropertiesInternal

    {
        /// <summary>Represents the destination of an event channel.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelDestination Destination { get; set; }
        /// <summary>
        /// Azure subscription ID of the customer creating the event channel. The partner topic
        /// associated with the event channel will be created under this Azure subscription.
        /// </summary>
        string DestinationAzureSubscriptionId { get; set; }
        /// <summary>Name of the partner topic associated with the event channel.</summary>
        string DestinationPartnerTopicName { get; set; }
        /// <summary>
        /// Azure Resource Group of the customer creating the event channel. The partner topic
        /// associated with the event channel will be created under this resource group.
        /// </summary>
        string DestinationResourceGroup { get; set; }
        /// <summary>
        /// The identifier of the resource that's the source of the events.
        /// This represents a unique resource in the partner's resource model.
        /// </summary>
        string EventChannelSource { get; set; }
        /// <summary>
        /// Expiration time of the event channel. If this timer expires while the corresponding partner topic is never activated,
        /// the event channel and corresponding partner topic are deleted.
        /// </summary>
        global::System.DateTime? ExpirationTimeIfNotActivatedUtc { get; set; }
        /// <summary>Information about the filter for the event channel.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelFilter Filter { get; set; }
        /// <summary>An array of advanced filters that are used for filtering event channels.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IAdvancedFilter[] FilterAdvancedFilter { get; set; }
        /// <summary>
        /// Allows advanced filters to be evaluated against an array of values instead of expecting a singular value. The default
        /// value is either false or null.
        /// </summary>
        bool? FilterEnableAdvancedFilteringOnArray { get; set; }
        /// <summary>
        /// Friendly description about the topic. This can be set by the publisher/partner to show custom description for the customer
        /// partner topic.
        /// This will be helpful to remove any ambiguity of the origin of creation of the partner topic for the customer.
        /// </summary>
        string PartnerTopicFriendlyDescription { get; set; }
        /// <summary>The readiness state of the corresponding partner topic.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.PartnerTopicReadinessState? PartnerTopicReadinessState { get; set; }
        /// <summary>Provisioning state of the event channel.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EventChannelProvisioningState? ProvisioningState { get; set; }
        /// <summary>
        /// Source of the event channel. This represents a unique resource in the partner's resource model.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventChannelSource Source { get; set; }

    }
}