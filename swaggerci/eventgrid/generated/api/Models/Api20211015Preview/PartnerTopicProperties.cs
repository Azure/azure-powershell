// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Extensions;

    /// <summary>Properties of the Partner Topic.</summary>
    public partial class PartnerTopicProperties :
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IPartnerTopicProperties,
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IPartnerTopicPropertiesInternal
    {

        /// <summary>Backing field for <see cref="ActivationState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.PartnerTopicActivationState? _activationState;

        /// <summary>Activation state of the partner topic.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.PartnerTopicActivationState? ActivationState { get => this._activationState; set => this._activationState = value; }

        /// <summary>Backing field for <see cref="EventTypeInfo" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventTypeInfo _eventTypeInfo;

        /// <summary>Event Type information from the corresponding event channel.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventTypeInfo EventTypeInfo { get => (this._eventTypeInfo = this._eventTypeInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.EventTypeInfo()); set => this._eventTypeInfo = value; }

        /// <summary>
        /// A collection of inline event types for the resource. The inline event type keys are of type string which represents the
        /// name of the event.
        /// An example of a valid inline event name is "Contoso.OrderCreated".
        /// The inline event type values are of type InlineEventProperties and will contain additional information for every inline
        /// event type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventTypeInfoInlineEventTypes EventTypeInfoInlineEventType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventTypeInfoInternal)EventTypeInfo).InlineEventType; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventTypeInfoInternal)EventTypeInfo).InlineEventType = value ?? null /* model class */; }

        /// <summary>The kind of event type used.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EventDefinitionKind? EventTypeInfoKind { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventTypeInfoInternal)EventTypeInfo).Kind; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventTypeInfoInternal)EventTypeInfo).Kind = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EventDefinitionKind)""); }

        /// <summary>Backing field for <see cref="ExpirationTimeIfNotActivatedUtc" /> property.</summary>
        private global::System.DateTime? _expirationTimeIfNotActivatedUtc;

        /// <summary>
        /// Expiration time of the partner topic. If this timer expires while the partner topic is still never activated,
        /// the partner topic and corresponding event channel are deleted.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public global::System.DateTime? ExpirationTimeIfNotActivatedUtc { get => this._expirationTimeIfNotActivatedUtc; set => this._expirationTimeIfNotActivatedUtc = value; }

        /// <summary>Backing field for <see cref="MessageForActivation" /> property.</summary>
        private string _messageForActivation;

        /// <summary>
        /// Context or helpful message that can be used during the approval process by the subscriber.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string MessageForActivation { get => this._messageForActivation; set => this._messageForActivation = value; }

        /// <summary>Internal Acessors for EventTypeInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventTypeInfo Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IPartnerTopicPropertiesInternal.EventTypeInfo { get => (this._eventTypeInfo = this._eventTypeInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.EventTypeInfo()); set { {_eventTypeInfo = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.PartnerTopicProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IPartnerTopicPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Backing field for <see cref="PartnerRegistrationImmutableId" /> property.</summary>
        private string _partnerRegistrationImmutableId;

        /// <summary>The immutableId of the corresponding partner registration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string PartnerRegistrationImmutableId { get => this._partnerRegistrationImmutableId; set => this._partnerRegistrationImmutableId = value; }

        /// <summary>Backing field for <see cref="PartnerTopicFriendlyDescription" /> property.</summary>
        private string _partnerTopicFriendlyDescription;

        /// <summary>
        /// Friendly description about the topic. This can be set by the publisher/partner to show custom description for the customer
        /// partner topic.
        /// This will be helpful to remove any ambiguity of the origin of creation of the partner topic for the customer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string PartnerTopicFriendlyDescription { get => this._partnerTopicFriendlyDescription; set => this._partnerTopicFriendlyDescription = value; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.PartnerTopicProvisioningState? _provisioningState;

        /// <summary>Provisioning state of the partner topic.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.PartnerTopicProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="Source" /> property.</summary>
        private string _source;

        /// <summary>
        /// Source associated with this partner topic. This represents a unique partner resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string Source { get => this._source; set => this._source = value; }

        /// <summary>Creates an new <see cref="PartnerTopicProperties" /> instance.</summary>
        public PartnerTopicProperties()
        {

        }
    }
    /// Properties of the Partner Topic.
    public partial interface IPartnerTopicProperties :
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.IJsonSerializable
    {
        /// <summary>Activation state of the partner topic.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Activation state of the partner topic.",
        SerializedName = @"activationState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.PartnerTopicActivationState) })]
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.PartnerTopicActivationState? ActivationState { get; set; }
        /// <summary>
        /// A collection of inline event types for the resource. The inline event type keys are of type string which represents the
        /// name of the event.
        /// An example of a valid inline event name is "Contoso.OrderCreated".
        /// The inline event type values are of type InlineEventProperties and will contain additional information for every inline
        /// event type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.
        An example of a valid inline event name is ""Contoso.OrderCreated"".
        The inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
        SerializedName = @"inlineEventTypes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventTypeInfoInlineEventTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventTypeInfoInlineEventTypes EventTypeInfoInlineEventType { get; set; }
        /// <summary>The kind of event type used.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The kind of event type used.",
        SerializedName = @"kind",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EventDefinitionKind) })]
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EventDefinitionKind? EventTypeInfoKind { get; set; }
        /// <summary>
        /// Expiration time of the partner topic. If this timer expires while the partner topic is still never activated,
        /// the partner topic and corresponding event channel are deleted.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Expiration time of the partner topic. If this timer expires while the partner topic is still never activated,
        the partner topic and corresponding event channel are deleted.",
        SerializedName = @"expirationTimeIfNotActivatedUtc",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ExpirationTimeIfNotActivatedUtc { get; set; }
        /// <summary>
        /// Context or helpful message that can be used during the approval process by the subscriber.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Context or helpful message that can be used during the approval process by the subscriber.",
        SerializedName = @"messageForActivation",
        PossibleTypes = new [] { typeof(string) })]
        string MessageForActivation { get; set; }
        /// <summary>The immutableId of the corresponding partner registration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The immutableId of the corresponding partner registration.",
        SerializedName = @"partnerRegistrationImmutableId",
        PossibleTypes = new [] { typeof(string) })]
        string PartnerRegistrationImmutableId { get; set; }
        /// <summary>
        /// Friendly description about the topic. This can be set by the publisher/partner to show custom description for the customer
        /// partner topic.
        /// This will be helpful to remove any ambiguity of the origin of creation of the partner topic for the customer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Friendly description about the topic. This can be set by the publisher/partner to show custom description for the customer partner topic.
        This will be helpful to remove any ambiguity of the origin of creation of the partner topic for the customer.",
        SerializedName = @"partnerTopicFriendlyDescription",
        PossibleTypes = new [] { typeof(string) })]
        string PartnerTopicFriendlyDescription { get; set; }
        /// <summary>Provisioning state of the partner topic.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Provisioning state of the partner topic.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.PartnerTopicProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.PartnerTopicProvisioningState? ProvisioningState { get;  }
        /// <summary>
        /// Source associated with this partner topic. This represents a unique partner resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Source associated with this partner topic. This represents a unique partner resource.",
        SerializedName = @"source",
        PossibleTypes = new [] { typeof(string) })]
        string Source { get; set; }

    }
    /// Properties of the Partner Topic.
    internal partial interface IPartnerTopicPropertiesInternal

    {
        /// <summary>Activation state of the partner topic.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.PartnerTopicActivationState? ActivationState { get; set; }
        /// <summary>Event Type information from the corresponding event channel.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventTypeInfo EventTypeInfo { get; set; }
        /// <summary>
        /// A collection of inline event types for the resource. The inline event type keys are of type string which represents the
        /// name of the event.
        /// An example of a valid inline event name is "Contoso.OrderCreated".
        /// The inline event type values are of type InlineEventProperties and will contain additional information for every inline
        /// event type.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventTypeInfoInlineEventTypes EventTypeInfoInlineEventType { get; set; }
        /// <summary>The kind of event type used.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EventDefinitionKind? EventTypeInfoKind { get; set; }
        /// <summary>
        /// Expiration time of the partner topic. If this timer expires while the partner topic is still never activated,
        /// the partner topic and corresponding event channel are deleted.
        /// </summary>
        global::System.DateTime? ExpirationTimeIfNotActivatedUtc { get; set; }
        /// <summary>
        /// Context or helpful message that can be used during the approval process by the subscriber.
        /// </summary>
        string MessageForActivation { get; set; }
        /// <summary>The immutableId of the corresponding partner registration.</summary>
        string PartnerRegistrationImmutableId { get; set; }
        /// <summary>
        /// Friendly description about the topic. This can be set by the publisher/partner to show custom description for the customer
        /// partner topic.
        /// This will be helpful to remove any ambiguity of the origin of creation of the partner topic for the customer.
        /// </summary>
        string PartnerTopicFriendlyDescription { get; set; }
        /// <summary>Provisioning state of the partner topic.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.PartnerTopicProvisioningState? ProvisioningState { get; set; }
        /// <summary>
        /// Source associated with this partner topic. This represents a unique partner resource.
        /// </summary>
        string Source { get; set; }

    }
}