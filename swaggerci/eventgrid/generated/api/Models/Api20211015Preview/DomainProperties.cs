// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Extensions;

    /// <summary>Properties of the Event Grid Domain Resource.</summary>
    public partial class DomainProperties :
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IDomainProperties,
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IDomainPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AutoCreateTopicWithFirstSubscription" /> property.</summary>
        private bool? _autoCreateTopicWithFirstSubscription;

        /// <summary>
        /// This Boolean is used to specify the creation mechanism for 'all' the Event Grid Domain Topics associated with this Event
        /// Grid Domain resource.
        /// In this context, creation of domain topic can be auto-managed (when true) or self-managed (when false). The default value
        /// for this property is true.
        /// When this property is null or set to true, Event Grid is responsible of automatically creating the domain topic when the
        /// first event subscription is
        /// created at the scope of the domain topic. If this property is set to false, then creating the first event subscription
        /// will require creating a domain topic
        /// by the user. The self-management mode can be used if the user wants full control of when the domain topic is created,
        /// while auto-managed mode provides the
        /// flexibility to perform less operations and manage fewer resources by the user. Also, note that in auto-managed creation
        /// mode, user is allowed to create the
        /// domain topic on demand if needed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public bool? AutoCreateTopicWithFirstSubscription { get => this._autoCreateTopicWithFirstSubscription; set => this._autoCreateTopicWithFirstSubscription = value; }

        /// <summary>Backing field for <see cref="AutoDeleteTopicWithLastSubscription" /> property.</summary>
        private bool? _autoDeleteTopicWithLastSubscription;

        /// <summary>
        /// This Boolean is used to specify the deletion mechanism for 'all' the Event Grid Domain Topics associated with this Event
        /// Grid Domain resource.
        /// In this context, deletion of domain topic can be auto-managed (when true) or self-managed (when false). The default value
        /// for this property is true.
        /// When this property is set to true, Event Grid is responsible of automatically deleting the domain topic when the last
        /// event subscription at the scope
        /// of the domain topic is deleted. If this property is set to false, then the user needs to manually delete the domain topic
        /// when it is no longer needed
        /// (e.g., when last event subscription is deleted and the resource needs to be cleaned up). The self-management mode can
        /// be used if the user wants full
        /// control of when the domain topic needs to be deleted, while auto-managed mode provides the flexibility to perform less
        /// operations and manage fewer
        /// resources by the user.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public bool? AutoDeleteTopicWithLastSubscription { get => this._autoDeleteTopicWithLastSubscription; set => this._autoDeleteTopicWithLastSubscription = value; }

        /// <summary>Backing field for <see cref="DataResidencyBoundary" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.DataResidencyBoundary? _dataResidencyBoundary;

        /// <summary>Data Residency Boundary of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.DataResidencyBoundary? DataResidencyBoundary { get => this._dataResidencyBoundary; set => this._dataResidencyBoundary = value; }

        /// <summary>Backing field for <see cref="DisableLocalAuth" /> property.</summary>
        private bool? _disableLocalAuth;

        /// <summary>
        /// This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD
        /// token will be used to authenticate if user is allowed to publish to the domain.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public bool? DisableLocalAuth { get => this._disableLocalAuth; set => this._disableLocalAuth = value; }

        /// <summary>Backing field for <see cref="Endpoint" /> property.</summary>
        private string _endpoint;

        /// <summary>
        /// Endpoint for the Event Grid Domain Resource which is used for publishing the events.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string Endpoint { get => this._endpoint; }

        /// <summary>Backing field for <see cref="InboundIPRule" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IInboundIPRule[] _inboundIPRule;

        /// <summary>
        /// This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess
        /// is enabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IInboundIPRule[] InboundIPRule { get => this._inboundIPRule; set => this._inboundIPRule = value; }

        /// <summary>Backing field for <see cref="InputSchema" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.InputSchema? _inputSchema;

        /// <summary>
        /// This determines the format that Event Grid should expect for incoming events published to the Event Grid Domain Resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.InputSchema? InputSchema { get => this._inputSchema; set => this._inputSchema = value; }

        /// <summary>Backing field for <see cref="InputSchemaMapping" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IInputSchemaMapping _inputSchemaMapping;

        /// <summary>
        /// Information about the InputSchemaMapping which specified the info about mapping event payload.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IInputSchemaMapping InputSchemaMapping { get => (this._inputSchemaMapping = this._inputSchemaMapping ?? new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.InputSchemaMapping()); set => this._inputSchemaMapping = value; }

        /// <summary>Type of the custom mapping</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string InputSchemaMappingInputSchemaMappingType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IInputSchemaMappingInternal)InputSchemaMapping).Type; }

        /// <summary>Backing field for <see cref="MetricResourceId" /> property.</summary>
        private string _metricResourceId;

        /// <summary>Metric resource id for the Event Grid Domain Resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string MetricResourceId { get => this._metricResourceId; }

        /// <summary>Internal Acessors for Endpoint</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IDomainPropertiesInternal.Endpoint { get => this._endpoint; set { {_endpoint = value;} } }

        /// <summary>Internal Acessors for InputSchemaMapping</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IInputSchemaMapping Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IDomainPropertiesInternal.InputSchemaMapping { get => (this._inputSchemaMapping = this._inputSchemaMapping ?? new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.InputSchemaMapping()); set { {_inputSchemaMapping = value;} } }

        /// <summary>Internal Acessors for InputSchemaMappingInputSchemaMappingType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IDomainPropertiesInternal.InputSchemaMappingInputSchemaMappingType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IInputSchemaMappingInternal)InputSchemaMapping).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IInputSchemaMappingInternal)InputSchemaMapping).Type = value; }

        /// <summary>Internal Acessors for MetricResourceId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IDomainPropertiesInternal.MetricResourceId { get => this._metricResourceId; set { {_metricResourceId = value;} } }

        /// <summary>Internal Acessors for PrivateEndpointConnection</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IPrivateEndpointConnection[] Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IDomainPropertiesInternal.PrivateEndpointConnection { get => this._privateEndpointConnection; set { {_privateEndpointConnection = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.DomainProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IDomainPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Backing field for <see cref="PrivateEndpointConnection" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IPrivateEndpointConnection[] _privateEndpointConnection;

        /// <summary>List of private endpoint connections.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IPrivateEndpointConnection[] PrivateEndpointConnection { get => this._privateEndpointConnection; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.DomainProvisioningState? _provisioningState;

        /// <summary>Provisioning state of the Event Grid Domain Resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.DomainProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="PublicNetworkAccess" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.PublicNetworkAccess? _publicNetworkAccess;

        /// <summary>
        /// This determines if traffic is allowed over public network. By default it is enabled.
        /// You can further restrict to specific IPs by configuring <seealso cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.DomainProperties.InboundIpRules"
        /// />
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.PublicNetworkAccess? PublicNetworkAccess { get => this._publicNetworkAccess; set => this._publicNetworkAccess = value; }

        /// <summary>Creates an new <see cref="DomainProperties" /> instance.</summary>
        public DomainProperties()
        {

        }
    }
    /// Properties of the Event Grid Domain Resource.
    public partial interface IDomainProperties :
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.IJsonSerializable
    {
        /// <summary>
        /// This Boolean is used to specify the creation mechanism for 'all' the Event Grid Domain Topics associated with this Event
        /// Grid Domain resource.
        /// In this context, creation of domain topic can be auto-managed (when true) or self-managed (when false). The default value
        /// for this property is true.
        /// When this property is null or set to true, Event Grid is responsible of automatically creating the domain topic when the
        /// first event subscription is
        /// created at the scope of the domain topic. If this property is set to false, then creating the first event subscription
        /// will require creating a domain topic
        /// by the user. The self-management mode can be used if the user wants full control of when the domain topic is created,
        /// while auto-managed mode provides the
        /// flexibility to perform less operations and manage fewer resources by the user. Also, note that in auto-managed creation
        /// mode, user is allowed to create the
        /// domain topic on demand if needed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This Boolean is used to specify the creation mechanism for 'all' the Event Grid Domain Topics associated with this Event Grid Domain resource.
        In this context, creation of domain topic can be auto-managed (when true) or self-managed (when false). The default value for this property is true.
        When this property is null or set to true, Event Grid is responsible of automatically creating the domain topic when the first event subscription is
        created at the scope of the domain topic. If this property is set to false, then creating the first event subscription will require creating a domain topic
        by the user. The self-management mode can be used if the user wants full control of when the domain topic is created, while auto-managed mode provides the
        flexibility to perform less operations and manage fewer resources by the user. Also, note that in auto-managed creation mode, user is allowed to create the
        domain topic on demand if needed.",
        SerializedName = @"autoCreateTopicWithFirstSubscription",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AutoCreateTopicWithFirstSubscription { get; set; }
        /// <summary>
        /// This Boolean is used to specify the deletion mechanism for 'all' the Event Grid Domain Topics associated with this Event
        /// Grid Domain resource.
        /// In this context, deletion of domain topic can be auto-managed (when true) or self-managed (when false). The default value
        /// for this property is true.
        /// When this property is set to true, Event Grid is responsible of automatically deleting the domain topic when the last
        /// event subscription at the scope
        /// of the domain topic is deleted. If this property is set to false, then the user needs to manually delete the domain topic
        /// when it is no longer needed
        /// (e.g., when last event subscription is deleted and the resource needs to be cleaned up). The self-management mode can
        /// be used if the user wants full
        /// control of when the domain topic needs to be deleted, while auto-managed mode provides the flexibility to perform less
        /// operations and manage fewer
        /// resources by the user.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This Boolean is used to specify the deletion mechanism for 'all' the Event Grid Domain Topics associated with this Event Grid Domain resource.
        In this context, deletion of domain topic can be auto-managed (when true) or self-managed (when false). The default value for this property is true.
        When this property is set to true, Event Grid is responsible of automatically deleting the domain topic when the last event subscription at the scope
        of the domain topic is deleted. If this property is set to false, then the user needs to manually delete the domain topic when it is no longer needed
        (e.g., when last event subscription is deleted and the resource needs to be cleaned up). The self-management mode can be used if the user wants full
        control of when the domain topic needs to be deleted, while auto-managed mode provides the flexibility to perform less operations and manage fewer
        resources by the user.",
        SerializedName = @"autoDeleteTopicWithLastSubscription",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AutoDeleteTopicWithLastSubscription { get; set; }
        /// <summary>Data Residency Boundary of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Data Residency Boundary of the resource.",
        SerializedName = @"dataResidencyBoundary",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.DataResidencyBoundary) })]
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.DataResidencyBoundary? DataResidencyBoundary { get; set; }
        /// <summary>
        /// This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD
        /// token will be used to authenticate if user is allowed to publish to the domain.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the domain.",
        SerializedName = @"disableLocalAuth",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DisableLocalAuth { get; set; }
        /// <summary>
        /// Endpoint for the Event Grid Domain Resource which is used for publishing the events.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Endpoint for the Event Grid Domain Resource which is used for publishing the events.",
        SerializedName = @"endpoint",
        PossibleTypes = new [] { typeof(string) })]
        string Endpoint { get;  }
        /// <summary>
        /// This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess
        /// is enabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
        SerializedName = @"inboundIpRules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IInboundIPRule) })]
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IInboundIPRule[] InboundIPRule { get; set; }
        /// <summary>
        /// This determines the format that Event Grid should expect for incoming events published to the Event Grid Domain Resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This determines the format that Event Grid should expect for incoming events published to the Event Grid Domain Resource.",
        SerializedName = @"inputSchema",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.InputSchema) })]
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.InputSchema? InputSchema { get; set; }
        /// <summary>Type of the custom mapping</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Type of the custom mapping",
        SerializedName = @"inputSchemaMappingType",
        PossibleTypes = new [] { typeof(string) })]
        string InputSchemaMappingInputSchemaMappingType { get;  }
        /// <summary>Metric resource id for the Event Grid Domain Resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Metric resource id for the Event Grid Domain Resource.",
        SerializedName = @"metricResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string MetricResourceId { get;  }
        /// <summary>List of private endpoint connections.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of private endpoint connections.",
        SerializedName = @"privateEndpointConnections",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IPrivateEndpointConnection) })]
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IPrivateEndpointConnection[] PrivateEndpointConnection { get;  }
        /// <summary>Provisioning state of the Event Grid Domain Resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Provisioning state of the Event Grid Domain Resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.DomainProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.DomainProvisioningState? ProvisioningState { get;  }
        /// <summary>
        /// This determines if traffic is allowed over public network. By default it is enabled.
        /// You can further restrict to specific IPs by configuring <seealso cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.DomainProperties.InboundIpRules"
        /// />
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This determines if traffic is allowed over public network. By default it is enabled.
        You can further restrict to specific IPs by configuring <seealso cref=""P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.DomainProperties.InboundIpRules"" />",
        SerializedName = @"publicNetworkAccess",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.PublicNetworkAccess) })]
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.PublicNetworkAccess? PublicNetworkAccess { get; set; }

    }
    /// Properties of the Event Grid Domain Resource.
    internal partial interface IDomainPropertiesInternal

    {
        /// <summary>
        /// This Boolean is used to specify the creation mechanism for 'all' the Event Grid Domain Topics associated with this Event
        /// Grid Domain resource.
        /// In this context, creation of domain topic can be auto-managed (when true) or self-managed (when false). The default value
        /// for this property is true.
        /// When this property is null or set to true, Event Grid is responsible of automatically creating the domain topic when the
        /// first event subscription is
        /// created at the scope of the domain topic. If this property is set to false, then creating the first event subscription
        /// will require creating a domain topic
        /// by the user. The self-management mode can be used if the user wants full control of when the domain topic is created,
        /// while auto-managed mode provides the
        /// flexibility to perform less operations and manage fewer resources by the user. Also, note that in auto-managed creation
        /// mode, user is allowed to create the
        /// domain topic on demand if needed.
        /// </summary>
        bool? AutoCreateTopicWithFirstSubscription { get; set; }
        /// <summary>
        /// This Boolean is used to specify the deletion mechanism for 'all' the Event Grid Domain Topics associated with this Event
        /// Grid Domain resource.
        /// In this context, deletion of domain topic can be auto-managed (when true) or self-managed (when false). The default value
        /// for this property is true.
        /// When this property is set to true, Event Grid is responsible of automatically deleting the domain topic when the last
        /// event subscription at the scope
        /// of the domain topic is deleted. If this property is set to false, then the user needs to manually delete the domain topic
        /// when it is no longer needed
        /// (e.g., when last event subscription is deleted and the resource needs to be cleaned up). The self-management mode can
        /// be used if the user wants full
        /// control of when the domain topic needs to be deleted, while auto-managed mode provides the flexibility to perform less
        /// operations and manage fewer
        /// resources by the user.
        /// </summary>
        bool? AutoDeleteTopicWithLastSubscription { get; set; }
        /// <summary>Data Residency Boundary of the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.DataResidencyBoundary? DataResidencyBoundary { get; set; }
        /// <summary>
        /// This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD
        /// token will be used to authenticate if user is allowed to publish to the domain.
        /// </summary>
        bool? DisableLocalAuth { get; set; }
        /// <summary>
        /// Endpoint for the Event Grid Domain Resource which is used for publishing the events.
        /// </summary>
        string Endpoint { get; set; }
        /// <summary>
        /// This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess
        /// is enabled.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IInboundIPRule[] InboundIPRule { get; set; }
        /// <summary>
        /// This determines the format that Event Grid should expect for incoming events published to the Event Grid Domain Resource.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.InputSchema? InputSchema { get; set; }
        /// <summary>
        /// Information about the InputSchemaMapping which specified the info about mapping event payload.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IInputSchemaMapping InputSchemaMapping { get; set; }
        /// <summary>Type of the custom mapping</summary>
        string InputSchemaMappingInputSchemaMappingType { get; set; }
        /// <summary>Metric resource id for the Event Grid Domain Resource.</summary>
        string MetricResourceId { get; set; }
        /// <summary>List of private endpoint connections.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IPrivateEndpointConnection[] PrivateEndpointConnection { get; set; }
        /// <summary>Provisioning state of the Event Grid Domain Resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.DomainProvisioningState? ProvisioningState { get; set; }
        /// <summary>
        /// This determines if traffic is allowed over public network. By default it is enabled.
        /// You can further restrict to specific IPs by configuring <seealso cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.DomainProperties.InboundIpRules"
        /// />
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.PublicNetworkAccess? PublicNetworkAccess { get; set; }

    }
}