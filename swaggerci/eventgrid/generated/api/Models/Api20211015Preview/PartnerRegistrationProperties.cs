// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Extensions;

    /// <summary>Properties of the partner registration.</summary>
    public partial class PartnerRegistrationProperties :
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IPartnerRegistrationProperties,
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IPartnerRegistrationPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AuthorizedAzureSubscriptionId" /> property.</summary>
        private string[] _authorizedAzureSubscriptionId;

        /// <summary>
        /// List of Azure subscription Ids that are authorized to create a partner namespace
        /// associated with this partner registration. This is an optional property. Creating
        /// partner namespaces is always permitted under the same Azure subscription as the one used
        /// for creating the partner registration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string[] AuthorizedAzureSubscriptionId { get => this._authorizedAzureSubscriptionId; set => this._authorizedAzureSubscriptionId = value; }

        /// <summary>Backing field for <see cref="CustomerServiceUri" /> property.</summary>
        private string _customerServiceUri;

        /// <summary>The extension of the customer service URI of the publisher.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string CustomerServiceUri { get => this._customerServiceUri; set => this._customerServiceUri = value; }

        /// <summary>Backing field for <see cref="LogoUri" /> property.</summary>
        private string _logoUri;

        /// <summary>URI of the logo.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string LogoUri { get => this._logoUri; set => this._logoUri = value; }

        /// <summary>Backing field for <see cref="LongDescription" /> property.</summary>
        private string _longDescription;

        /// <summary>
        /// Long description for the custom scenarios and integration to be displayed in the portal if needed.
        /// Length of this description should not exceed 2048 characters.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string LongDescription { get => this._longDescription; set => this._longDescription = value; }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.PartnerRegistrationProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IPartnerRegistrationPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Backing field for <see cref="PartnerCustomerServiceExtension" /> property.</summary>
        private string _partnerCustomerServiceExtension;

        /// <summary>
        /// The extension of the customer service number of the publisher. Only digits are allowed and number of digits should not
        /// exceed 10.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string PartnerCustomerServiceExtension { get => this._partnerCustomerServiceExtension; set => this._partnerCustomerServiceExtension = value; }

        /// <summary>Backing field for <see cref="PartnerCustomerServiceNumber" /> property.</summary>
        private string _partnerCustomerServiceNumber;

        /// <summary>
        /// The customer service number of the publisher. The expected phone format should start with a '+' sign
        /// followed by the country code. The remaining digits are then followed. Only digits and spaces are allowed and its
        /// length cannot exceed 16 digits including country code. Examples of valid phone numbers are: +1 515 123 4567 and
        /// +966 7 5115 2471. Examples of invalid phone numbers are: +1 (515) 123-4567, 1 515 123 4567 and +966 121 5115 24 7 551
        /// 1234 43
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string PartnerCustomerServiceNumber { get => this._partnerCustomerServiceNumber; set => this._partnerCustomerServiceNumber = value; }

        /// <summary>Backing field for <see cref="PartnerName" /> property.</summary>
        private string _partnerName;

        /// <summary>Official name of the partner name. For example: "Contoso".</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string PartnerName { get => this._partnerName; set => this._partnerName = value; }

        /// <summary>Backing field for <see cref="PartnerRegistrationImmutableId" /> property.</summary>
        private string _partnerRegistrationImmutableId;

        /// <summary>The immutableId of the corresponding partner registration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string PartnerRegistrationImmutableId { get => this._partnerRegistrationImmutableId; set => this._partnerRegistrationImmutableId = value; }

        /// <summary>Backing field for <see cref="PartnerResourceTypeDescription" /> property.</summary>
        private string _partnerResourceTypeDescription;

        /// <summary>
        /// Short description of the partner resource type. The length of this description should not exceed 256 characters.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string PartnerResourceTypeDescription { get => this._partnerResourceTypeDescription; set => this._partnerResourceTypeDescription = value; }

        /// <summary>Backing field for <see cref="PartnerResourceTypeDisplayName" /> property.</summary>
        private string _partnerResourceTypeDisplayName;

        /// <summary>Display name of the partner resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string PartnerResourceTypeDisplayName { get => this._partnerResourceTypeDisplayName; set => this._partnerResourceTypeDisplayName = value; }

        /// <summary>Backing field for <see cref="PartnerResourceTypeName" /> property.</summary>
        private string _partnerResourceTypeName;

        /// <summary>Name of the partner resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string PartnerResourceTypeName { get => this._partnerResourceTypeName; set => this._partnerResourceTypeName = value; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.PartnerRegistrationProvisioningState? _provisioningState;

        /// <summary>Provisioning state of the partner registration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.PartnerRegistrationProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="SetupUri" /> property.</summary>
        private string _setupUri;

        /// <summary>
        /// URI of the partner website that can be used by Azure customers to setup Event Grid
        /// integration on an event source.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string SetupUri { get => this._setupUri; set => this._setupUri = value; }

        /// <summary>Backing field for <see cref="VisibilityState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.PartnerRegistrationVisibilityState? _visibilityState;

        /// <summary>Visibility state of the partner registration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.PartnerRegistrationVisibilityState? VisibilityState { get => this._visibilityState; set => this._visibilityState = value; }

        /// <summary>Creates an new <see cref="PartnerRegistrationProperties" /> instance.</summary>
        public PartnerRegistrationProperties()
        {

        }
    }
    /// Properties of the partner registration.
    public partial interface IPartnerRegistrationProperties :
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.IJsonSerializable
    {
        /// <summary>
        /// List of Azure subscription Ids that are authorized to create a partner namespace
        /// associated with this partner registration. This is an optional property. Creating
        /// partner namespaces is always permitted under the same Azure subscription as the one used
        /// for creating the partner registration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of Azure subscription Ids that are authorized to create a partner namespace
        associated with this partner registration. This is an optional property. Creating
        partner namespaces is always permitted under the same Azure subscription as the one used
        for creating the partner registration.",
        SerializedName = @"authorizedAzureSubscriptionIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] AuthorizedAzureSubscriptionId { get; set; }
        /// <summary>The extension of the customer service URI of the publisher.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The extension of the customer service URI of the publisher.",
        SerializedName = @"customerServiceUri",
        PossibleTypes = new [] { typeof(string) })]
        string CustomerServiceUri { get; set; }
        /// <summary>URI of the logo.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"URI of the logo.",
        SerializedName = @"logoUri",
        PossibleTypes = new [] { typeof(string) })]
        string LogoUri { get; set; }
        /// <summary>
        /// Long description for the custom scenarios and integration to be displayed in the portal if needed.
        /// Length of this description should not exceed 2048 characters.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Long description for the custom scenarios and integration to be displayed in the portal if needed.
        Length of this description should not exceed 2048 characters.",
        SerializedName = @"longDescription",
        PossibleTypes = new [] { typeof(string) })]
        string LongDescription { get; set; }
        /// <summary>
        /// The extension of the customer service number of the publisher. Only digits are allowed and number of digits should not
        /// exceed 10.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The extension of the customer service number of the publisher. Only digits are allowed and number of digits should not exceed 10.",
        SerializedName = @"partnerCustomerServiceExtension",
        PossibleTypes = new [] { typeof(string) })]
        string PartnerCustomerServiceExtension { get; set; }
        /// <summary>
        /// The customer service number of the publisher. The expected phone format should start with a '+' sign
        /// followed by the country code. The remaining digits are then followed. Only digits and spaces are allowed and its
        /// length cannot exceed 16 digits including country code. Examples of valid phone numbers are: +1 515 123 4567 and
        /// +966 7 5115 2471. Examples of invalid phone numbers are: +1 (515) 123-4567, 1 515 123 4567 and +966 121 5115 24 7 551
        /// 1234 43
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The customer service number of the publisher. The expected phone format should start with a '+' sign
        followed by the country code. The remaining digits are then followed. Only digits and spaces are allowed and its
        length cannot exceed 16 digits including country code. Examples of valid phone numbers are: +1 515 123 4567 and
        +966 7 5115 2471. Examples of invalid phone numbers are: +1 (515) 123-4567, 1 515 123 4567 and +966 121 5115 24 7 551 1234 43",
        SerializedName = @"partnerCustomerServiceNumber",
        PossibleTypes = new [] { typeof(string) })]
        string PartnerCustomerServiceNumber { get; set; }
        /// <summary>Official name of the partner name. For example: "Contoso".</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Official name of the partner name. For example: ""Contoso"".",
        SerializedName = @"partnerName",
        PossibleTypes = new [] { typeof(string) })]
        string PartnerName { get; set; }
        /// <summary>The immutableId of the corresponding partner registration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The immutableId of the corresponding partner registration.",
        SerializedName = @"partnerRegistrationImmutableId",
        PossibleTypes = new [] { typeof(string) })]
        string PartnerRegistrationImmutableId { get; set; }
        /// <summary>
        /// Short description of the partner resource type. The length of this description should not exceed 256 characters.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Short description of the partner resource type. The length of this description should not exceed 256 characters.",
        SerializedName = @"partnerResourceTypeDescription",
        PossibleTypes = new [] { typeof(string) })]
        string PartnerResourceTypeDescription { get; set; }
        /// <summary>Display name of the partner resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Display name of the partner resource type.",
        SerializedName = @"partnerResourceTypeDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string PartnerResourceTypeDisplayName { get; set; }
        /// <summary>Name of the partner resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the partner resource type.",
        SerializedName = @"partnerResourceTypeName",
        PossibleTypes = new [] { typeof(string) })]
        string PartnerResourceTypeName { get; set; }
        /// <summary>Provisioning state of the partner registration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Provisioning state of the partner registration.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.PartnerRegistrationProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.PartnerRegistrationProvisioningState? ProvisioningState { get;  }
        /// <summary>
        /// URI of the partner website that can be used by Azure customers to setup Event Grid
        /// integration on an event source.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"URI of the partner website that can be used by Azure customers to setup Event Grid
        integration on an event source.",
        SerializedName = @"setupUri",
        PossibleTypes = new [] { typeof(string) })]
        string SetupUri { get; set; }
        /// <summary>Visibility state of the partner registration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Visibility state of the partner registration.",
        SerializedName = @"visibilityState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.PartnerRegistrationVisibilityState) })]
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.PartnerRegistrationVisibilityState? VisibilityState { get; set; }

    }
    /// Properties of the partner registration.
    internal partial interface IPartnerRegistrationPropertiesInternal

    {
        /// <summary>
        /// List of Azure subscription Ids that are authorized to create a partner namespace
        /// associated with this partner registration. This is an optional property. Creating
        /// partner namespaces is always permitted under the same Azure subscription as the one used
        /// for creating the partner registration.
        /// </summary>
        string[] AuthorizedAzureSubscriptionId { get; set; }
        /// <summary>The extension of the customer service URI of the publisher.</summary>
        string CustomerServiceUri { get; set; }
        /// <summary>URI of the logo.</summary>
        string LogoUri { get; set; }
        /// <summary>
        /// Long description for the custom scenarios and integration to be displayed in the portal if needed.
        /// Length of this description should not exceed 2048 characters.
        /// </summary>
        string LongDescription { get; set; }
        /// <summary>
        /// The extension of the customer service number of the publisher. Only digits are allowed and number of digits should not
        /// exceed 10.
        /// </summary>
        string PartnerCustomerServiceExtension { get; set; }
        /// <summary>
        /// The customer service number of the publisher. The expected phone format should start with a '+' sign
        /// followed by the country code. The remaining digits are then followed. Only digits and spaces are allowed and its
        /// length cannot exceed 16 digits including country code. Examples of valid phone numbers are: +1 515 123 4567 and
        /// +966 7 5115 2471. Examples of invalid phone numbers are: +1 (515) 123-4567, 1 515 123 4567 and +966 121 5115 24 7 551
        /// 1234 43
        /// </summary>
        string PartnerCustomerServiceNumber { get; set; }
        /// <summary>Official name of the partner name. For example: "Contoso".</summary>
        string PartnerName { get; set; }
        /// <summary>The immutableId of the corresponding partner registration.</summary>
        string PartnerRegistrationImmutableId { get; set; }
        /// <summary>
        /// Short description of the partner resource type. The length of this description should not exceed 256 characters.
        /// </summary>
        string PartnerResourceTypeDescription { get; set; }
        /// <summary>Display name of the partner resource type.</summary>
        string PartnerResourceTypeDisplayName { get; set; }
        /// <summary>Name of the partner resource type.</summary>
        string PartnerResourceTypeName { get; set; }
        /// <summary>Provisioning state of the partner registration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.PartnerRegistrationProvisioningState? ProvisioningState { get; set; }
        /// <summary>
        /// URI of the partner website that can be used by Azure customers to setup Event Grid
        /// integration on an event source.
        /// </summary>
        string SetupUri { get; set; }
        /// <summary>Visibility state of the partner registration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.PartnerRegistrationVisibilityState? VisibilityState { get; set; }

    }
}