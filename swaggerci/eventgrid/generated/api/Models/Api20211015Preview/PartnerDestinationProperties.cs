// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Extensions;

    /// <summary>Properties of the Partner Destination.</summary>
    public partial class PartnerDestinationProperties :
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IPartnerDestinationProperties,
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IPartnerDestinationPropertiesInternal
    {

        /// <summary>Backing field for <see cref="ActivationState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.PartnerDestinationActivationState? _activationState;

        /// <summary>Activation state of the partner destination.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.PartnerDestinationActivationState? ActivationState { get => this._activationState; set => this._activationState = value; }

        /// <summary>Backing field for <see cref="EndpointBaseUrl" /> property.</summary>
        private string _endpointBaseUrl;

        /// <summary>Endpoint Base URL of the partner destination</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string EndpointBaseUrl { get => this._endpointBaseUrl; set => this._endpointBaseUrl = value; }

        /// <summary>Backing field for <see cref="EndpointServiceContext" /> property.</summary>
        private string _endpointServiceContext;

        /// <summary>Endpoint context associated with this partner destination.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string EndpointServiceContext { get => this._endpointServiceContext; set => this._endpointServiceContext = value; }

        /// <summary>Backing field for <see cref="ExpirationTimeIfNotActivatedUtc" /> property.</summary>
        private global::System.DateTime? _expirationTimeIfNotActivatedUtc;

        /// <summary>
        /// Expiration time of the partner destination. If this timer expires and the partner destination was never activated,
        /// the partner destination and corresponding channel are deleted.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public global::System.DateTime? ExpirationTimeIfNotActivatedUtc { get => this._expirationTimeIfNotActivatedUtc; set => this._expirationTimeIfNotActivatedUtc = value; }

        /// <summary>Backing field for <see cref="MessageForActivation" /> property.</summary>
        private string _messageForActivation;

        /// <summary>Context or helpful message that can be used during the approval process.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string MessageForActivation { get => this._messageForActivation; set => this._messageForActivation = value; }

        /// <summary>Backing field for <see cref="PartnerRegistrationImmutableId" /> property.</summary>
        private string _partnerRegistrationImmutableId;

        /// <summary>The immutable Id of the corresponding partner registration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string PartnerRegistrationImmutableId { get => this._partnerRegistrationImmutableId; set => this._partnerRegistrationImmutableId = value; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.PartnerDestinationProvisioningState? _provisioningState;

        /// <summary>Provisioning state of the partner destination.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.PartnerDestinationProvisioningState? ProvisioningState { get => this._provisioningState; set => this._provisioningState = value; }

        /// <summary>Creates an new <see cref="PartnerDestinationProperties" /> instance.</summary>
        public PartnerDestinationProperties()
        {

        }
    }
    /// Properties of the Partner Destination.
    public partial interface IPartnerDestinationProperties :
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.IJsonSerializable
    {
        /// <summary>Activation state of the partner destination.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Activation state of the partner destination.",
        SerializedName = @"activationState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.PartnerDestinationActivationState) })]
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.PartnerDestinationActivationState? ActivationState { get; set; }
        /// <summary>Endpoint Base URL of the partner destination</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Endpoint Base URL of the partner destination",
        SerializedName = @"endpointBaseUrl",
        PossibleTypes = new [] { typeof(string) })]
        string EndpointBaseUrl { get; set; }
        /// <summary>Endpoint context associated with this partner destination.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Endpoint context associated with this partner destination.",
        SerializedName = @"endpointServiceContext",
        PossibleTypes = new [] { typeof(string) })]
        string EndpointServiceContext { get; set; }
        /// <summary>
        /// Expiration time of the partner destination. If this timer expires and the partner destination was never activated,
        /// the partner destination and corresponding channel are deleted.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Expiration time of the partner destination. If this timer expires and the partner destination was never activated,
        the partner destination and corresponding channel are deleted.",
        SerializedName = @"expirationTimeIfNotActivatedUtc",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ExpirationTimeIfNotActivatedUtc { get; set; }
        /// <summary>Context or helpful message that can be used during the approval process.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Context or helpful message that can be used during the approval process.",
        SerializedName = @"messageForActivation",
        PossibleTypes = new [] { typeof(string) })]
        string MessageForActivation { get; set; }
        /// <summary>The immutable Id of the corresponding partner registration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The immutable Id of the corresponding partner registration.",
        SerializedName = @"partnerRegistrationImmutableId",
        PossibleTypes = new [] { typeof(string) })]
        string PartnerRegistrationImmutableId { get; set; }
        /// <summary>Provisioning state of the partner destination.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Provisioning state of the partner destination.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.PartnerDestinationProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.PartnerDestinationProvisioningState? ProvisioningState { get; set; }

    }
    /// Properties of the Partner Destination.
    internal partial interface IPartnerDestinationPropertiesInternal

    {
        /// <summary>Activation state of the partner destination.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.PartnerDestinationActivationState? ActivationState { get; set; }
        /// <summary>Endpoint Base URL of the partner destination</summary>
        string EndpointBaseUrl { get; set; }
        /// <summary>Endpoint context associated with this partner destination.</summary>
        string EndpointServiceContext { get; set; }
        /// <summary>
        /// Expiration time of the partner destination. If this timer expires and the partner destination was never activated,
        /// the partner destination and corresponding channel are deleted.
        /// </summary>
        global::System.DateTime? ExpirationTimeIfNotActivatedUtc { get; set; }
        /// <summary>Context or helpful message that can be used during the approval process.</summary>
        string MessageForActivation { get; set; }
        /// <summary>The immutable Id of the corresponding partner registration.</summary>
        string PartnerRegistrationImmutableId { get; set; }
        /// <summary>Provisioning state of the partner destination.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.PartnerDestinationProvisioningState? ProvisioningState { get; set; }

    }
}