// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Extensions;

    /// <summary>Channel info.</summary>
    public partial class Channel :
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannel,
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelInternal,
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.Resource();

        /// <summary>The type of the event channel which represents the direction flow of events.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.ChannelType? ChannelType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelPropertiesInternal)Property).ChannelType; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelPropertiesInternal)Property).ChannelType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.ChannelType)""); }

        /// <summary>
        /// A collection of inline event types for the resource. The inline event type keys are of type string which represents the
        /// name of the event.
        /// An example of a valid inline event name is "Contoso.OrderCreated".
        /// The inline event type values are of type InlineEventProperties and will contain additional information for every inline
        /// event type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventTypeInfoInlineEventTypes EventTypeInfoInlineEventType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelPropertiesInternal)Property).EventTypeInfoInlineEventType; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelPropertiesInternal)Property).EventTypeInfoInlineEventType = value ?? null /* model class */; }

        /// <summary>The kind of event type used.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EventDefinitionKind? EventTypeInfoKind { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelPropertiesInternal)Property).EventTypeInfoKind; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelPropertiesInternal)Property).EventTypeInfoKind = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EventDefinitionKind)""); }

        /// <summary>
        /// Expiration time of the channel. If this timer expires while the corresponding partner topic is never activated,
        /// the channel and corresponding partner topic are deleted.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public global::System.DateTime? ExpirationTimeIfNotActivatedUtc { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelPropertiesInternal)Property).ExpirationTimeIfNotActivatedUtc; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelPropertiesInternal)Property).ExpirationTimeIfNotActivatedUtc = value ?? default(global::System.DateTime); }

        /// <summary>Fully qualified identifier of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IResourceInternal)__resource).Id; }

        /// <summary>
        /// Context or helpful message that can be used during the approval process by the subscriber.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string MessageForActivation { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelPropertiesInternal)Property).MessageForActivation; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelPropertiesInternal)Property).MessageForActivation = value ?? null; }

        /// <summary>Internal Acessors for PartnerDestinationInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IPartnerDestinationInfo Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelInternal.PartnerDestinationInfo { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelPropertiesInternal)Property).PartnerDestinationInfo; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelPropertiesInternal)Property).PartnerDestinationInfo = value; }

        /// <summary>Internal Acessors for PartnerDestinationInfoEndpointType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelInternal.PartnerDestinationInfoEndpointType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelPropertiesInternal)Property).PartnerDestinationInfoEndpointType; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelPropertiesInternal)Property).PartnerDestinationInfoEndpointType = value; }

        /// <summary>Internal Acessors for PartnerTopicInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IPartnerTopicInfo Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelInternal.PartnerTopicInfo { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelPropertiesInternal)Property).PartnerTopicInfo; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelPropertiesInternal)Property).PartnerTopicInfo = value; }

        /// <summary>Internal Acessors for PartnerTopicInfoEventTypeInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventTypeInfo Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelInternal.PartnerTopicInfoEventTypeInfo { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelPropertiesInternal)Property).PartnerTopicInfoEventTypeInfo; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelPropertiesInternal)Property).PartnerTopicInfoEventTypeInfo = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelProperties Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.ChannelProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20.ISystemData Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelInternal.SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20.SystemData()); set { {_systemData = value;} } }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IResourceInternal)__resource).Type = value; }

        /// <summary>Name of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IResourceInternal)__resource).Name; }

        /// <summary>
        /// Azure subscription ID of the subscriber. The partner destination associated with the channel will be
        /// created under this Azure subscription.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string PartnerDestinationInfoAzureSubscriptionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelPropertiesInternal)Property).PartnerDestinationInfoAzureSubscriptionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelPropertiesInternal)Property).PartnerDestinationInfoAzureSubscriptionId = value ?? null; }

        /// <summary>Additional context of the partner destination endpoint.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string PartnerDestinationInfoEndpointServiceContext { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelPropertiesInternal)Property).PartnerDestinationInfoEndpointServiceContext; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelPropertiesInternal)Property).PartnerDestinationInfoEndpointServiceContext = value ?? null; }

        /// <summary>Type of the endpoint for the partner destination</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string PartnerDestinationInfoEndpointType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelPropertiesInternal)Property).PartnerDestinationInfoEndpointType; }

        /// <summary>Name of the partner destination associated with the channel.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string PartnerDestinationInfoName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelPropertiesInternal)Property).PartnerDestinationInfoName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelPropertiesInternal)Property).PartnerDestinationInfoName = value ?? null; }

        /// <summary>
        /// Azure Resource Group of the subscriber. The partner destination associated with the channel will be
        /// created under this resource group.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string PartnerDestinationInfoResourceGroupName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelPropertiesInternal)Property).PartnerDestinationInfoResourceGroupName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelPropertiesInternal)Property).PartnerDestinationInfoResourceGroupName = value ?? null; }

        /// <summary>Change history of the resource move.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IResourceMoveChangeHistory[] PartnerDestinationInfoResourceMoveChangeHistory { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelPropertiesInternal)Property).PartnerDestinationInfoResourceMoveChangeHistory; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelPropertiesInternal)Property).PartnerDestinationInfoResourceMoveChangeHistory = value ?? null /* arrayOf */; }

        /// <summary>
        /// Azure subscription ID of the subscriber. The partner topic associated with the channel will be
        /// created under this Azure subscription.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string PartnerTopicInfoAzureSubscriptionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelPropertiesInternal)Property).PartnerTopicInfoAzureSubscriptionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelPropertiesInternal)Property).PartnerTopicInfoAzureSubscriptionId = value ?? null; }

        /// <summary>Name of the partner topic associated with the channel.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string PartnerTopicInfoName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelPropertiesInternal)Property).PartnerTopicInfoName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelPropertiesInternal)Property).PartnerTopicInfoName = value ?? null; }

        /// <summary>
        /// Azure Resource Group of the subscriber. The partner topic associated with the channel will be
        /// created under this resource group.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string PartnerTopicInfoResourceGroupName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelPropertiesInternal)Property).PartnerTopicInfoResourceGroupName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelPropertiesInternal)Property).PartnerTopicInfoResourceGroupName = value ?? null; }

        /// <summary>
        /// The source information is provided by the publisher to determine the scope or context from which the events
        /// are originating. This information can be used by the subscriber during the approval process of the
        /// created partner topic.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string PartnerTopicInfoSource { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelPropertiesInternal)Property).PartnerTopicInfoSource; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelPropertiesInternal)Property).PartnerTopicInfoSource = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelProperties _property;

        /// <summary>Properties of the Channel.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.ChannelProperties()); set => this._property = value; }

        /// <summary>Provisioning state of the channel.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.ChannelProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelPropertiesInternal)Property).ProvisioningState = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.ChannelProvisioningState)""); }

        /// <summary>The readiness state of the corresponding partner topic.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.ReadinessState? ReadinessState { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelPropertiesInternal)Property).ReadinessState; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelPropertiesInternal)Property).ReadinessState = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.ReadinessState)""); }

        /// <summary>Backing field for <see cref="SystemData" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20.ISystemData _systemData;

        /// <summary>The system metadata relating to Channel resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20.ISystemData SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20.SystemData()); }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20.ISystemDataInternal)SystemData).CreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20.ISystemDataInternal)SystemData).CreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20.ISystemDataInternal)SystemData).CreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20.ISystemDataInternal)SystemData).CreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20.ISystemDataInternal)SystemData).CreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20.ISystemDataInternal)SystemData).CreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20.ISystemDataInternal)SystemData).LastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20.ISystemDataInternal)SystemData).LastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20.ISystemDataInternal)SystemData).LastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20.ISystemDataInternal)SystemData).LastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20.ISystemDataInternal)SystemData).LastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20.ISystemDataInternal)SystemData).LastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.CreatedByType)""); }

        /// <summary>Type of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IResourceInternal)__resource).Type; }

        /// <summary>Creates an new <see cref="Channel" /> instance.</summary>
        public Channel()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// Channel info.
    public partial interface IChannel :
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IResource
    {
        /// <summary>The type of the event channel which represents the direction flow of events.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of the event channel which represents the  direction flow of events.",
        SerializedName = @"channelType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.ChannelType) })]
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.ChannelType? ChannelType { get; set; }
        /// <summary>
        /// A collection of inline event types for the resource. The inline event type keys are of type string which represents the
        /// name of the event.
        /// An example of a valid inline event name is "Contoso.OrderCreated".
        /// The inline event type values are of type InlineEventProperties and will contain additional information for every inline
        /// event type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.
        An example of a valid inline event name is ""Contoso.OrderCreated"".
        The inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
        SerializedName = @"inlineEventTypes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventTypeInfoInlineEventTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventTypeInfoInlineEventTypes EventTypeInfoInlineEventType { get; set; }
        /// <summary>The kind of event type used.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The kind of event type used.",
        SerializedName = @"kind",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EventDefinitionKind) })]
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EventDefinitionKind? EventTypeInfoKind { get; set; }
        /// <summary>
        /// Expiration time of the channel. If this timer expires while the corresponding partner topic is never activated,
        /// the channel and corresponding partner topic are deleted.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Expiration time of the channel. If this timer expires while the corresponding partner topic is never activated,
        the channel and corresponding partner topic are deleted.",
        SerializedName = @"expirationTimeIfNotActivatedUtc",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ExpirationTimeIfNotActivatedUtc { get; set; }
        /// <summary>
        /// Context or helpful message that can be used during the approval process by the subscriber.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Context or helpful message that can be used during the approval process by the subscriber.",
        SerializedName = @"messageForActivation",
        PossibleTypes = new [] { typeof(string) })]
        string MessageForActivation { get; set; }
        /// <summary>
        /// Azure subscription ID of the subscriber. The partner destination associated with the channel will be
        /// created under this Azure subscription.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Azure subscription ID of the subscriber. The partner destination associated with the channel will be
        created under this Azure subscription.",
        SerializedName = @"azureSubscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string PartnerDestinationInfoAzureSubscriptionId { get; set; }
        /// <summary>Additional context of the partner destination endpoint.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Additional context of the partner destination endpoint.",
        SerializedName = @"endpointServiceContext",
        PossibleTypes = new [] { typeof(string) })]
        string PartnerDestinationInfoEndpointServiceContext { get; set; }
        /// <summary>Type of the endpoint for the partner destination</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Type of the endpoint for the partner destination",
        SerializedName = @"endpointType",
        PossibleTypes = new [] { typeof(string) })]
        string PartnerDestinationInfoEndpointType { get;  }
        /// <summary>Name of the partner destination associated with the channel.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the partner destination associated with the channel.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string PartnerDestinationInfoName { get; set; }
        /// <summary>
        /// Azure Resource Group of the subscriber. The partner destination associated with the channel will be
        /// created under this resource group.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Azure Resource Group of the subscriber. The partner destination associated with the channel will be
        created under this resource group.",
        SerializedName = @"resourceGroupName",
        PossibleTypes = new [] { typeof(string) })]
        string PartnerDestinationInfoResourceGroupName { get; set; }
        /// <summary>Change history of the resource move.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Change history of the resource move.",
        SerializedName = @"resourceMoveChangeHistory",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IResourceMoveChangeHistory) })]
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IResourceMoveChangeHistory[] PartnerDestinationInfoResourceMoveChangeHistory { get; set; }
        /// <summary>
        /// Azure subscription ID of the subscriber. The partner topic associated with the channel will be
        /// created under this Azure subscription.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Azure subscription ID of the subscriber. The partner topic associated with the channel will be
        created under this Azure subscription.",
        SerializedName = @"azureSubscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string PartnerTopicInfoAzureSubscriptionId { get; set; }
        /// <summary>Name of the partner topic associated with the channel.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the partner topic associated with the channel.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string PartnerTopicInfoName { get; set; }
        /// <summary>
        /// Azure Resource Group of the subscriber. The partner topic associated with the channel will be
        /// created under this resource group.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Azure Resource Group of the subscriber. The partner topic associated with the channel will be
        created under this resource group.",
        SerializedName = @"resourceGroupName",
        PossibleTypes = new [] { typeof(string) })]
        string PartnerTopicInfoResourceGroupName { get; set; }
        /// <summary>
        /// The source information is provided by the publisher to determine the scope or context from which the events
        /// are originating. This information can be used by the subscriber during the approval process of the
        /// created partner topic.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The source information is provided by the publisher to determine the scope or context from which the events
        are originating. This information can be used by the subscriber during the approval process of the
        created partner topic.",
        SerializedName = @"source",
        PossibleTypes = new [] { typeof(string) })]
        string PartnerTopicInfoSource { get; set; }
        /// <summary>Provisioning state of the channel.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Provisioning state of the channel.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.ChannelProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.ChannelProvisioningState? ProvisioningState { get; set; }
        /// <summary>The readiness state of the corresponding partner topic.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The readiness state of the corresponding partner topic.",
        SerializedName = @"readinessState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.ReadinessState) })]
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.ReadinessState? ReadinessState { get; set; }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp of resource creation (UTC).",
        SerializedName = @"createdAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity that created the resource.",
        SerializedName = @"createdBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity that created the resource.",
        SerializedName = @"createdByType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.CreatedByType) })]
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.CreatedByType? SystemDataCreatedByType { get; set; }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp of resource last modification (UTC)",
        SerializedName = @"lastModifiedAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity that last modified the resource.",
        SerializedName = @"lastModifiedBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity that last modified the resource.",
        SerializedName = @"lastModifiedByType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.CreatedByType) })]
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.CreatedByType? SystemDataLastModifiedByType { get; set; }

    }
    /// Channel info.
    internal partial interface IChannelInternal :
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IResourceInternal
    {
        /// <summary>The type of the event channel which represents the direction flow of events.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.ChannelType? ChannelType { get; set; }
        /// <summary>
        /// A collection of inline event types for the resource. The inline event type keys are of type string which represents the
        /// name of the event.
        /// An example of a valid inline event name is "Contoso.OrderCreated".
        /// The inline event type values are of type InlineEventProperties and will contain additional information for every inline
        /// event type.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventTypeInfoInlineEventTypes EventTypeInfoInlineEventType { get; set; }
        /// <summary>The kind of event type used.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EventDefinitionKind? EventTypeInfoKind { get; set; }
        /// <summary>
        /// Expiration time of the channel. If this timer expires while the corresponding partner topic is never activated,
        /// the channel and corresponding partner topic are deleted.
        /// </summary>
        global::System.DateTime? ExpirationTimeIfNotActivatedUtc { get; set; }
        /// <summary>
        /// Context or helpful message that can be used during the approval process by the subscriber.
        /// </summary>
        string MessageForActivation { get; set; }
        /// <summary>
        /// This property should be populated when channelType is PartnerDestination and represents information about the partner
        /// destination resource corresponding to the channel.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IPartnerDestinationInfo PartnerDestinationInfo { get; set; }
        /// <summary>
        /// Azure subscription ID of the subscriber. The partner destination associated with the channel will be
        /// created under this Azure subscription.
        /// </summary>
        string PartnerDestinationInfoAzureSubscriptionId { get; set; }
        /// <summary>Additional context of the partner destination endpoint.</summary>
        string PartnerDestinationInfoEndpointServiceContext { get; set; }
        /// <summary>Type of the endpoint for the partner destination</summary>
        string PartnerDestinationInfoEndpointType { get; set; }
        /// <summary>Name of the partner destination associated with the channel.</summary>
        string PartnerDestinationInfoName { get; set; }
        /// <summary>
        /// Azure Resource Group of the subscriber. The partner destination associated with the channel will be
        /// created under this resource group.
        /// </summary>
        string PartnerDestinationInfoResourceGroupName { get; set; }
        /// <summary>Change history of the resource move.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IResourceMoveChangeHistory[] PartnerDestinationInfoResourceMoveChangeHistory { get; set; }
        /// <summary>
        /// This property should be populated when channelType is PartnerTopic and represents information about the partner topic
        /// resource corresponding to the channel.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IPartnerTopicInfo PartnerTopicInfo { get; set; }
        /// <summary>
        /// Azure subscription ID of the subscriber. The partner topic associated with the channel will be
        /// created under this Azure subscription.
        /// </summary>
        string PartnerTopicInfoAzureSubscriptionId { get; set; }
        /// <summary>
        /// Event Type Information for the partner topic. This information is provided by the publisher and can be used by the
        /// subscriber to view different types of events that are published.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IEventTypeInfo PartnerTopicInfoEventTypeInfo { get; set; }
        /// <summary>Name of the partner topic associated with the channel.</summary>
        string PartnerTopicInfoName { get; set; }
        /// <summary>
        /// Azure Resource Group of the subscriber. The partner topic associated with the channel will be
        /// created under this resource group.
        /// </summary>
        string PartnerTopicInfoResourceGroupName { get; set; }
        /// <summary>
        /// The source information is provided by the publisher to determine the scope or context from which the events
        /// are originating. This information can be used by the subscriber during the approval process of the
        /// created partner topic.
        /// </summary>
        string PartnerTopicInfoSource { get; set; }
        /// <summary>Properties of the Channel.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20211015Preview.IChannelProperties Property { get; set; }
        /// <summary>Provisioning state of the channel.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.ChannelProvisioningState? ProvisioningState { get; set; }
        /// <summary>The readiness state of the corresponding partner topic.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.ReadinessState? ReadinessState { get; set; }
        /// <summary>The system metadata relating to Channel resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20.ISystemData SystemData { get; set; }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        global::System.DateTime? SystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        string SystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.CreatedByType? SystemDataCreatedByType { get; set; }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        global::System.DateTime? SystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        string SystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.CreatedByType? SystemDataLastModifiedByType { get; set; }

    }
}