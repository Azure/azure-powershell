// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DevOps.Runtime.Extensions;

    /// <summary>Custom properties of a Pipeline.</summary>
    public partial class PipelineProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineProperties,
        Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelinePropertiesInternal
    {

        /// <summary>Authorization parameters corresponding to the authorization type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevOps.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevOps.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IAuthorizationParameters AuthorizationParameter { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IBootstrapConfigurationInternal)BootstrapConfiguration).AuthorizationParameter; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IBootstrapConfigurationInternal)BootstrapConfiguration).AuthorizationParameter = value ?? null /* model class */; }

        /// <summary>Type of authorization.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevOps.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevOps.PropertyOrigin.Inlined)]
        public string AuthorizationType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IBootstrapConfigurationInternal)BootstrapConfiguration).AuthorizationType; }

        /// <summary>Backing field for <see cref="BootstrapConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IBootstrapConfiguration _bootstrapConfiguration;

        /// <summary>Configuration used to bootstrap the Pipeline.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevOps.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevOps.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IBootstrapConfiguration BootstrapConfiguration { get => (this._bootstrapConfiguration = this._bootstrapConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.BootstrapConfiguration()); set => this._bootstrapConfiguration = value; }

        /// <summary>Internal Acessors for AuthorizationType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelinePropertiesInternal.AuthorizationType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IBootstrapConfigurationInternal)BootstrapConfiguration).AuthorizationType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IBootstrapConfigurationInternal)BootstrapConfiguration).AuthorizationType = value; }

        /// <summary>Internal Acessors for BootstrapConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IBootstrapConfiguration Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelinePropertiesInternal.BootstrapConfiguration { get => (this._bootstrapConfiguration = this._bootstrapConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.BootstrapConfiguration()); set { {_bootstrapConfiguration = value;} } }

        /// <summary>Internal Acessors for BootstrapConfigurationRepository</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.ICodeRepository Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelinePropertiesInternal.BootstrapConfigurationRepository { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IBootstrapConfigurationInternal)BootstrapConfiguration).Repository; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IBootstrapConfigurationInternal)BootstrapConfiguration).Repository = value; }

        /// <summary>Internal Acessors for BootstrapConfigurationTemplate</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineTemplate Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelinePropertiesInternal.BootstrapConfigurationTemplate { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IBootstrapConfigurationInternal)BootstrapConfiguration).Template; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IBootstrapConfigurationInternal)BootstrapConfiguration).Template = value; }

        /// <summary>Internal Acessors for Organization</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IOrganizationReference Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelinePropertiesInternal.Organization { get => (this._organization = this._organization ?? new Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.OrganizationReference()); set { {_organization = value;} } }

        /// <summary>Internal Acessors for OrganizationId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelinePropertiesInternal.OrganizationId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IOrganizationReferenceInternal)Organization).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IOrganizationReferenceInternal)Organization).Id = value; }

        /// <summary>Internal Acessors for PipelineId</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelinePropertiesInternal.PipelineId { get => this._pipelineId; set { {_pipelineId = value;} } }

        /// <summary>Internal Acessors for Project</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IProjectReference Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelinePropertiesInternal.Project { get => (this._project = this._project ?? new Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.ProjectReference()); set { {_project = value;} } }

        /// <summary>Internal Acessors for ProjectId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelinePropertiesInternal.ProjectId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IProjectReferenceInternal)Project).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IProjectReferenceInternal)Project).Id = value; }

        /// <summary>Internal Acessors for RepositoryAuthorization</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IAuthorization Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelinePropertiesInternal.RepositoryAuthorization { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IBootstrapConfigurationInternal)BootstrapConfiguration).RepositoryAuthorization; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IBootstrapConfigurationInternal)BootstrapConfiguration).RepositoryAuthorization = value; }

        /// <summary>Backing field for <see cref="Organization" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IOrganizationReference _organization;

        /// <summary>Reference to the Azure DevOps Organization containing the Pipeline.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevOps.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevOps.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IOrganizationReference Organization { get => (this._organization = this._organization ?? new Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.OrganizationReference()); set => this._organization = value; }

        /// <summary>Unique immutable identifier for the Azure DevOps Organization.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevOps.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevOps.PropertyOrigin.Inlined)]
        public string OrganizationId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IOrganizationReferenceInternal)Organization).Id; }

        /// <summary>Name of the Azure DevOps Organization.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevOps.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevOps.PropertyOrigin.Inlined)]
        public string OrganizationName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IOrganizationReferenceInternal)Organization).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IOrganizationReferenceInternal)Organization).Name = value ; }

        /// <summary>Backing field for <see cref="PipelineId" /> property.</summary>
        private int? _pipelineId;

        /// <summary>Unique identifier of the Azure Pipeline within the Azure DevOps Project.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevOps.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevOps.PropertyOrigin.Owned)]
        public int? PipelineId { get => this._pipelineId; }

        /// <summary>Backing field for <see cref="Project" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IProjectReference _project;

        /// <summary>Reference to the Azure DevOps Project containing the Pipeline.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevOps.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevOps.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IProjectReference Project { get => (this._project = this._project ?? new Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.ProjectReference()); set => this._project = value; }

        /// <summary>Unique immutable identifier of the Azure DevOps Project.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevOps.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevOps.PropertyOrigin.Inlined)]
        public string ProjectId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IProjectReferenceInternal)Project).Id; }

        /// <summary>Name of the Azure DevOps Project.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevOps.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevOps.PropertyOrigin.Inlined)]
        public string ProjectName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IProjectReferenceInternal)Project).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IProjectReferenceInternal)Project).Name = value ; }

        /// <summary>Default branch used to configure Continuous Integration (CI) in the pipeline.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevOps.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevOps.PropertyOrigin.Inlined)]
        public string RepositoryDefaultBranch { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IBootstrapConfigurationInternal)BootstrapConfiguration).RepositoryDefaultBranch; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IBootstrapConfigurationInternal)BootstrapConfiguration).RepositoryDefaultBranch = value ?? null; }

        /// <summary>Unique immutable identifier of the code repository.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevOps.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevOps.PropertyOrigin.Inlined)]
        public string RepositoryId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IBootstrapConfigurationInternal)BootstrapConfiguration).RepositoryId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IBootstrapConfigurationInternal)BootstrapConfiguration).RepositoryId = value ?? null; }

        /// <summary>Repository-specific properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevOps.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevOps.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.ICodeRepositoryProperties RepositoryProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IBootstrapConfigurationInternal)BootstrapConfiguration).RepositoryProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IBootstrapConfigurationInternal)BootstrapConfiguration).RepositoryProperty = value ?? null /* model class */; }

        /// <summary>Type of code repository.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevOps.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevOps.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevOps.Support.CodeRepositoryType? RepositoryType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IBootstrapConfigurationInternal)BootstrapConfiguration).RepositoryType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IBootstrapConfigurationInternal)BootstrapConfiguration).RepositoryType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Support.CodeRepositoryType)""); }

        /// <summary>Unique identifier of the pipeline template.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevOps.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevOps.PropertyOrigin.Inlined)]
        public string TemplateId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IBootstrapConfigurationInternal)BootstrapConfiguration).TemplateId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IBootstrapConfigurationInternal)BootstrapConfiguration).TemplateId = value ; }

        /// <summary>Dictionary of input parameters used in the pipeline template.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevOps.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevOps.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineTemplateParameters TemplateParameter { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IBootstrapConfigurationInternal)BootstrapConfiguration).TemplateParameter; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IBootstrapConfigurationInternal)BootstrapConfiguration).TemplateParameter = value ?? null /* model class */; }

        /// <summary>Creates an new <see cref="PipelineProperties" /> instance.</summary>
        public PipelineProperties()
        {

        }
    }
    /// Custom properties of a Pipeline.
    public partial interface IPipelineProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DevOps.Runtime.IJsonSerializable
    {
        /// <summary>Authorization parameters corresponding to the authorization type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevOps.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Authorization parameters corresponding to the authorization type.",
        SerializedName = @"parameters",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IAuthorizationParameters) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IAuthorizationParameters AuthorizationParameter { get; set; }
        /// <summary>Type of authorization.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevOps.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Type of authorization.",
        SerializedName = @"authorizationType",
        PossibleTypes = new [] { typeof(string) })]
        string AuthorizationType { get;  }
        /// <summary>Unique immutable identifier for the Azure DevOps Organization.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevOps.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Unique immutable identifier for the Azure DevOps Organization.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string OrganizationId { get;  }
        /// <summary>Name of the Azure DevOps Organization.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevOps.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Name of the Azure DevOps Organization.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string OrganizationName { get; set; }
        /// <summary>Unique identifier of the Azure Pipeline within the Azure DevOps Project.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevOps.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Unique identifier of the Azure Pipeline within the Azure DevOps Project.",
        SerializedName = @"pipelineId",
        PossibleTypes = new [] { typeof(int) })]
        int? PipelineId { get;  }
        /// <summary>Unique immutable identifier of the Azure DevOps Project.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevOps.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Unique immutable identifier of the Azure DevOps Project.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string ProjectId { get;  }
        /// <summary>Name of the Azure DevOps Project.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevOps.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Name of the Azure DevOps Project.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string ProjectName { get; set; }
        /// <summary>Default branch used to configure Continuous Integration (CI) in the pipeline.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevOps.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Default branch used to configure Continuous Integration (CI) in the pipeline.",
        SerializedName = @"defaultBranch",
        PossibleTypes = new [] { typeof(string) })]
        string RepositoryDefaultBranch { get; set; }
        /// <summary>Unique immutable identifier of the code repository.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevOps.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Unique immutable identifier of the code repository.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string RepositoryId { get; set; }
        /// <summary>Repository-specific properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevOps.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Repository-specific properties.",
        SerializedName = @"properties",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.ICodeRepositoryProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.ICodeRepositoryProperties RepositoryProperty { get; set; }
        /// <summary>Type of code repository.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevOps.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of code repository.",
        SerializedName = @"repositoryType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevOps.Support.CodeRepositoryType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevOps.Support.CodeRepositoryType? RepositoryType { get; set; }
        /// <summary>Unique identifier of the pipeline template.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevOps.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Unique identifier of the pipeline template.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string TemplateId { get; set; }
        /// <summary>Dictionary of input parameters used in the pipeline template.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevOps.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Dictionary of input parameters used in the pipeline template.",
        SerializedName = @"parameters",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineTemplateParameters) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineTemplateParameters TemplateParameter { get; set; }

    }
    /// Custom properties of a Pipeline.
    internal partial interface IPipelinePropertiesInternal

    {
        /// <summary>Authorization parameters corresponding to the authorization type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IAuthorizationParameters AuthorizationParameter { get; set; }
        /// <summary>Type of authorization.</summary>
        string AuthorizationType { get; set; }
        /// <summary>Configuration used to bootstrap the Pipeline.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IBootstrapConfiguration BootstrapConfiguration { get; set; }
        /// <summary>Repository containing the source code for the pipeline.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.ICodeRepository BootstrapConfigurationRepository { get; set; }
        /// <summary>Template used to bootstrap the pipeline.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineTemplate BootstrapConfigurationTemplate { get; set; }
        /// <summary>Reference to the Azure DevOps Organization containing the Pipeline.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IOrganizationReference Organization { get; set; }
        /// <summary>Unique immutable identifier for the Azure DevOps Organization.</summary>
        string OrganizationId { get; set; }
        /// <summary>Name of the Azure DevOps Organization.</summary>
        string OrganizationName { get; set; }
        /// <summary>Unique identifier of the Azure Pipeline within the Azure DevOps Project.</summary>
        int? PipelineId { get; set; }
        /// <summary>Reference to the Azure DevOps Project containing the Pipeline.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IProjectReference Project { get; set; }
        /// <summary>Unique immutable identifier of the Azure DevOps Project.</summary>
        string ProjectId { get; set; }
        /// <summary>Name of the Azure DevOps Project.</summary>
        string ProjectName { get; set; }
        /// <summary>Authorization info to access the code repository.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IAuthorization RepositoryAuthorization { get; set; }
        /// <summary>Default branch used to configure Continuous Integration (CI) in the pipeline.</summary>
        string RepositoryDefaultBranch { get; set; }
        /// <summary>Unique immutable identifier of the code repository.</summary>
        string RepositoryId { get; set; }
        /// <summary>Repository-specific properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.ICodeRepositoryProperties RepositoryProperty { get; set; }
        /// <summary>Type of code repository.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevOps.Support.CodeRepositoryType? RepositoryType { get; set; }
        /// <summary>Unique identifier of the pipeline template.</summary>
        string TemplateId { get; set; }
        /// <summary>Dictionary of input parameters used in the pipeline template.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineTemplateParameters TemplateParameter { get; set; }

    }
}