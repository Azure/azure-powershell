// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview
{
    using Microsoft.Azure.PowerShell.Cmdlets.DevOps.Runtime.PowerShell;

    /// <summary>
    /// Azure DevOps Pipeline used to configure Continuous Integration (CI) & Continuous Delivery (CD) for Azure resources.
    /// </summary>
    [System.ComponentModel.TypeConverter(typeof(PipelineTypeConverter))]
    public partial class Pipeline
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.Pipeline"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipeline" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipeline DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new Pipeline(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.Pipeline"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipeline" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipeline DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new Pipeline(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="Pipeline" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="className" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipeline FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.DevOps.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.Pipeline"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal Pipeline(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.PipelinePropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IResourceInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IResourceTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IResourceInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.ResourceTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IResourceInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IResourceInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("BootstrapConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).BootstrapConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IBootstrapConfiguration) content.GetValueForProperty("BootstrapConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).BootstrapConfiguration, Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.BootstrapConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("Organization"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).Organization = (Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IOrganizationReference) content.GetValueForProperty("Organization",((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).Organization, Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.OrganizationReferenceTypeConverter.ConvertFrom);
            }
            if (content.Contains("Project"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).Project = (Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IProjectReference) content.GetValueForProperty("Project",((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).Project, Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.ProjectReferenceTypeConverter.ConvertFrom);
            }
            if (content.Contains("PipelineId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).PipelineId = (int?) content.GetValueForProperty("PipelineId",((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).PipelineId, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("OrganizationId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).OrganizationId = (string) content.GetValueForProperty("OrganizationId",((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).OrganizationId, global::System.Convert.ToString);
            }
            if (content.Contains("OrganizationName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).OrganizationName = (string) content.GetValueForProperty("OrganizationName",((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).OrganizationName, global::System.Convert.ToString);
            }
            if (content.Contains("ProjectId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).ProjectId = (string) content.GetValueForProperty("ProjectId",((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).ProjectId, global::System.Convert.ToString);
            }
            if (content.Contains("ProjectName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).ProjectName = (string) content.GetValueForProperty("ProjectName",((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).ProjectName, global::System.Convert.ToString);
            }
            if (content.Contains("BootstrapConfigurationRepository"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).BootstrapConfigurationRepository = (Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.ICodeRepository) content.GetValueForProperty("BootstrapConfigurationRepository",((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).BootstrapConfigurationRepository, Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.CodeRepositoryTypeConverter.ConvertFrom);
            }
            if (content.Contains("BootstrapConfigurationTemplate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).BootstrapConfigurationTemplate = (Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineTemplate) content.GetValueForProperty("BootstrapConfigurationTemplate",((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).BootstrapConfigurationTemplate, Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.PipelineTemplateTypeConverter.ConvertFrom);
            }
            if (content.Contains("RepositoryAuthorization"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).RepositoryAuthorization = (Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IAuthorization) content.GetValueForProperty("RepositoryAuthorization",((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).RepositoryAuthorization, Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.AuthorizationTypeConverter.ConvertFrom);
            }
            if (content.Contains("RepositoryType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).RepositoryType = (Microsoft.Azure.PowerShell.Cmdlets.DevOps.Support.CodeRepositoryType) content.GetValueForProperty("RepositoryType",((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).RepositoryType, Microsoft.Azure.PowerShell.Cmdlets.DevOps.Support.CodeRepositoryType.CreateFrom);
            }
            if (content.Contains("RepositoryId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).RepositoryId = (string) content.GetValueForProperty("RepositoryId",((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).RepositoryId, global::System.Convert.ToString);
            }
            if (content.Contains("RepositoryDefaultBranch"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).RepositoryDefaultBranch = (string) content.GetValueForProperty("RepositoryDefaultBranch",((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).RepositoryDefaultBranch, global::System.Convert.ToString);
            }
            if (content.Contains("RepositoryProperty"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).RepositoryProperty = (Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.ICodeRepositoryProperties) content.GetValueForProperty("RepositoryProperty",((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).RepositoryProperty, Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.CodeRepositoryPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("AuthorizationType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).AuthorizationType = (string) content.GetValueForProperty("AuthorizationType",((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).AuthorizationType, global::System.Convert.ToString);
            }
            if (content.Contains("AuthorizationParameter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).AuthorizationParameter = (Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IAuthorizationParameters) content.GetValueForProperty("AuthorizationParameter",((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).AuthorizationParameter, Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.AuthorizationParametersTypeConverter.ConvertFrom);
            }
            if (content.Contains("TemplateId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).TemplateId = (string) content.GetValueForProperty("TemplateId",((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).TemplateId, global::System.Convert.ToString);
            }
            if (content.Contains("TemplateParameter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).TemplateParameter = (Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineTemplateParameters) content.GetValueForProperty("TemplateParameter",((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).TemplateParameter, Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.PipelineTemplateParametersTypeConverter.ConvertFrom);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.Pipeline"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal Pipeline(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.PipelinePropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IResourceInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IResourceTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IResourceInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.ResourceTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IResourceInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IResourceInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("BootstrapConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).BootstrapConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IBootstrapConfiguration) content.GetValueForProperty("BootstrapConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).BootstrapConfiguration, Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.BootstrapConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("Organization"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).Organization = (Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IOrganizationReference) content.GetValueForProperty("Organization",((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).Organization, Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.OrganizationReferenceTypeConverter.ConvertFrom);
            }
            if (content.Contains("Project"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).Project = (Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IProjectReference) content.GetValueForProperty("Project",((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).Project, Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.ProjectReferenceTypeConverter.ConvertFrom);
            }
            if (content.Contains("PipelineId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).PipelineId = (int?) content.GetValueForProperty("PipelineId",((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).PipelineId, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("OrganizationId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).OrganizationId = (string) content.GetValueForProperty("OrganizationId",((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).OrganizationId, global::System.Convert.ToString);
            }
            if (content.Contains("OrganizationName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).OrganizationName = (string) content.GetValueForProperty("OrganizationName",((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).OrganizationName, global::System.Convert.ToString);
            }
            if (content.Contains("ProjectId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).ProjectId = (string) content.GetValueForProperty("ProjectId",((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).ProjectId, global::System.Convert.ToString);
            }
            if (content.Contains("ProjectName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).ProjectName = (string) content.GetValueForProperty("ProjectName",((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).ProjectName, global::System.Convert.ToString);
            }
            if (content.Contains("BootstrapConfigurationRepository"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).BootstrapConfigurationRepository = (Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.ICodeRepository) content.GetValueForProperty("BootstrapConfigurationRepository",((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).BootstrapConfigurationRepository, Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.CodeRepositoryTypeConverter.ConvertFrom);
            }
            if (content.Contains("BootstrapConfigurationTemplate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).BootstrapConfigurationTemplate = (Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineTemplate) content.GetValueForProperty("BootstrapConfigurationTemplate",((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).BootstrapConfigurationTemplate, Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.PipelineTemplateTypeConverter.ConvertFrom);
            }
            if (content.Contains("RepositoryAuthorization"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).RepositoryAuthorization = (Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IAuthorization) content.GetValueForProperty("RepositoryAuthorization",((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).RepositoryAuthorization, Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.AuthorizationTypeConverter.ConvertFrom);
            }
            if (content.Contains("RepositoryType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).RepositoryType = (Microsoft.Azure.PowerShell.Cmdlets.DevOps.Support.CodeRepositoryType) content.GetValueForProperty("RepositoryType",((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).RepositoryType, Microsoft.Azure.PowerShell.Cmdlets.DevOps.Support.CodeRepositoryType.CreateFrom);
            }
            if (content.Contains("RepositoryId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).RepositoryId = (string) content.GetValueForProperty("RepositoryId",((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).RepositoryId, global::System.Convert.ToString);
            }
            if (content.Contains("RepositoryDefaultBranch"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).RepositoryDefaultBranch = (string) content.GetValueForProperty("RepositoryDefaultBranch",((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).RepositoryDefaultBranch, global::System.Convert.ToString);
            }
            if (content.Contains("RepositoryProperty"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).RepositoryProperty = (Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.ICodeRepositoryProperties) content.GetValueForProperty("RepositoryProperty",((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).RepositoryProperty, Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.CodeRepositoryPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("AuthorizationType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).AuthorizationType = (string) content.GetValueForProperty("AuthorizationType",((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).AuthorizationType, global::System.Convert.ToString);
            }
            if (content.Contains("AuthorizationParameter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).AuthorizationParameter = (Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IAuthorizationParameters) content.GetValueForProperty("AuthorizationParameter",((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).AuthorizationParameter, Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.AuthorizationParametersTypeConverter.ConvertFrom);
            }
            if (content.Contains("TemplateId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).TemplateId = (string) content.GetValueForProperty("TemplateId",((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).TemplateId, global::System.Convert.ToString);
            }
            if (content.Contains("TemplateParameter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).TemplateParameter = (Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineTemplateParameters) content.GetValueForProperty("TemplateParameter",((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineInternal)this).TemplateParameter, Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.PipelineTemplateParametersTypeConverter.ConvertFrom);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.DevOps.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Azure DevOps Pipeline used to configure Continuous Integration (CI) & Continuous Delivery (CD) for Azure resources.
    [System.ComponentModel.TypeConverter(typeof(PipelineTypeConverter))]
    public partial interface IPipeline

    {

    }
}