// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DevOps.Runtime.Extensions;

    /// <summary>Configuration used to bootstrap a Pipeline.</summary>
    public partial class BootstrapConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IBootstrapConfiguration,
        Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IBootstrapConfigurationInternal
    {

        /// <summary>Authorization parameters corresponding to the authorization type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevOps.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevOps.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IAuthorizationParameters AuthorizationParameter { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.ICodeRepositoryInternal)Repository).AuthorizationParameter; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.ICodeRepositoryInternal)Repository).AuthorizationParameter = value ?? null /* model class */; }

        /// <summary>Type of authorization.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevOps.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevOps.PropertyOrigin.Inlined)]
        public string AuthorizationType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.ICodeRepositoryInternal)Repository).AuthorizationType; }

        /// <summary>Internal Acessors for AuthorizationType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IBootstrapConfigurationInternal.AuthorizationType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.ICodeRepositoryInternal)Repository).AuthorizationType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.ICodeRepositoryInternal)Repository).AuthorizationType = value; }

        /// <summary>Internal Acessors for Repository</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.ICodeRepository Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IBootstrapConfigurationInternal.Repository { get => (this._repository = this._repository ?? new Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.CodeRepository()); set { {_repository = value;} } }

        /// <summary>Internal Acessors for RepositoryAuthorization</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IAuthorization Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IBootstrapConfigurationInternal.RepositoryAuthorization { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.ICodeRepositoryInternal)Repository).Authorization; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.ICodeRepositoryInternal)Repository).Authorization = value; }

        /// <summary>Internal Acessors for Template</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineTemplate Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IBootstrapConfigurationInternal.Template { get => (this._template = this._template ?? new Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.PipelineTemplate()); set { {_template = value;} } }

        /// <summary>Backing field for <see cref="Repository" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.ICodeRepository _repository;

        /// <summary>Repository containing the source code for the pipeline.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevOps.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevOps.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.ICodeRepository Repository { get => (this._repository = this._repository ?? new Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.CodeRepository()); set => this._repository = value; }

        /// <summary>Default branch used to configure Continuous Integration (CI) in the pipeline.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevOps.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevOps.PropertyOrigin.Inlined)]
        public string RepositoryDefaultBranch { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.ICodeRepositoryInternal)Repository).DefaultBranch; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.ICodeRepositoryInternal)Repository).DefaultBranch = value ?? null; }

        /// <summary>Unique immutable identifier of the code repository.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevOps.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevOps.PropertyOrigin.Inlined)]
        public string RepositoryId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.ICodeRepositoryInternal)Repository).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.ICodeRepositoryInternal)Repository).Id = value ?? null; }

        /// <summary>Repository-specific properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevOps.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevOps.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.ICodeRepositoryProperties RepositoryProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.ICodeRepositoryInternal)Repository).Property; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.ICodeRepositoryInternal)Repository).Property = value ?? null /* model class */; }

        /// <summary>Type of code repository.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevOps.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevOps.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevOps.Support.CodeRepositoryType? RepositoryType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.ICodeRepositoryInternal)Repository).RepositoryType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.ICodeRepositoryInternal)Repository).RepositoryType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Support.CodeRepositoryType)""); }

        /// <summary>Backing field for <see cref="Template" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineTemplate _template;

        /// <summary>Template used to bootstrap the pipeline.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevOps.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevOps.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineTemplate Template { get => (this._template = this._template ?? new Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.PipelineTemplate()); set => this._template = value; }

        /// <summary>Unique identifier of the pipeline template.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevOps.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevOps.PropertyOrigin.Inlined)]
        public string TemplateId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineTemplateInternal)Template).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineTemplateInternal)Template).Id = value ; }

        /// <summary>Dictionary of input parameters used in the pipeline template.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevOps.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevOps.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineTemplateParameters TemplateParameter { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineTemplateInternal)Template).Parameter; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineTemplateInternal)Template).Parameter = value ?? null /* model class */; }

        /// <summary>Creates an new <see cref="BootstrapConfiguration" /> instance.</summary>
        public BootstrapConfiguration()
        {

        }
    }
    /// Configuration used to bootstrap a Pipeline.
    public partial interface IBootstrapConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.DevOps.Runtime.IJsonSerializable
    {
        /// <summary>Authorization parameters corresponding to the authorization type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevOps.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Authorization parameters corresponding to the authorization type.",
        SerializedName = @"parameters",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IAuthorizationParameters) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IAuthorizationParameters AuthorizationParameter { get; set; }
        /// <summary>Type of authorization.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevOps.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Type of authorization.",
        SerializedName = @"authorizationType",
        PossibleTypes = new [] { typeof(string) })]
        string AuthorizationType { get;  }
        /// <summary>Default branch used to configure Continuous Integration (CI) in the pipeline.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevOps.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Default branch used to configure Continuous Integration (CI) in the pipeline.",
        SerializedName = @"defaultBranch",
        PossibleTypes = new [] { typeof(string) })]
        string RepositoryDefaultBranch { get; set; }
        /// <summary>Unique immutable identifier of the code repository.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevOps.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Unique immutable identifier of the code repository.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string RepositoryId { get; set; }
        /// <summary>Repository-specific properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevOps.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Repository-specific properties.",
        SerializedName = @"properties",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.ICodeRepositoryProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.ICodeRepositoryProperties RepositoryProperty { get; set; }
        /// <summary>Type of code repository.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevOps.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of code repository.",
        SerializedName = @"repositoryType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevOps.Support.CodeRepositoryType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevOps.Support.CodeRepositoryType? RepositoryType { get; set; }
        /// <summary>Unique identifier of the pipeline template.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevOps.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Unique identifier of the pipeline template.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string TemplateId { get; set; }
        /// <summary>Dictionary of input parameters used in the pipeline template.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevOps.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Dictionary of input parameters used in the pipeline template.",
        SerializedName = @"parameters",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineTemplateParameters) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineTemplateParameters TemplateParameter { get; set; }

    }
    /// Configuration used to bootstrap a Pipeline.
    internal partial interface IBootstrapConfigurationInternal

    {
        /// <summary>Authorization parameters corresponding to the authorization type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IAuthorizationParameters AuthorizationParameter { get; set; }
        /// <summary>Type of authorization.</summary>
        string AuthorizationType { get; set; }
        /// <summary>Repository containing the source code for the pipeline.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.ICodeRepository Repository { get; set; }
        /// <summary>Authorization info to access the code repository.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IAuthorization RepositoryAuthorization { get; set; }
        /// <summary>Default branch used to configure Continuous Integration (CI) in the pipeline.</summary>
        string RepositoryDefaultBranch { get; set; }
        /// <summary>Unique immutable identifier of the code repository.</summary>
        string RepositoryId { get; set; }
        /// <summary>Repository-specific properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.ICodeRepositoryProperties RepositoryProperty { get; set; }
        /// <summary>Type of code repository.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevOps.Support.CodeRepositoryType? RepositoryType { get; set; }
        /// <summary>Template used to bootstrap the pipeline.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineTemplate Template { get; set; }
        /// <summary>Unique identifier of the pipeline template.</summary>
        string TemplateId { get; set; }
        /// <summary>Dictionary of input parameters used in the pipeline template.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevOps.Models.Api20190701Preview.IPipelineTemplateParameters TemplateParameter { get; set; }

    }
}