// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.SignalR.Models.Api20220201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.SignalR.Runtime.Extensions;

    /// <summary>Network ACL</summary>
    public partial class NetworkAcl :
        Microsoft.Azure.PowerShell.Cmdlets.SignalR.Models.Api20220201.INetworkAcl,
        Microsoft.Azure.PowerShell.Cmdlets.SignalR.Models.Api20220201.INetworkAclInternal
    {

        /// <summary>Backing field for <see cref="Allow" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SignalR.Support.SignalRRequestType[] _allow;

        /// <summary>
        /// Allowed request types. The value can be one or more of: ClientConnection, ServerConnection, RESTAPI.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SignalR.Origin(Microsoft.Azure.PowerShell.Cmdlets.SignalR.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.SignalR.Support.SignalRRequestType[] Allow { get => this._allow; set => this._allow = value; }

        /// <summary>Backing field for <see cref="Deny" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SignalR.Support.SignalRRequestType[] _deny;

        /// <summary>
        /// Denied request types. The value can be one or more of: ClientConnection, ServerConnection, RESTAPI.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SignalR.Origin(Microsoft.Azure.PowerShell.Cmdlets.SignalR.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.SignalR.Support.SignalRRequestType[] Deny { get => this._deny; set => this._deny = value; }

        /// <summary>Creates an new <see cref="NetworkAcl" /> instance.</summary>
        public NetworkAcl()
        {

        }
    }
    /// Network ACL
    public partial interface INetworkAcl :
        Microsoft.Azure.PowerShell.Cmdlets.SignalR.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Allowed request types. The value can be one or more of: ClientConnection, ServerConnection, RESTAPI.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SignalR.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Allowed request types. The value can be one or more of: ClientConnection, ServerConnection, RESTAPI.",
        SerializedName = @"allow",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SignalR.Support.SignalRRequestType) })]
        Microsoft.Azure.PowerShell.Cmdlets.SignalR.Support.SignalRRequestType[] Allow { get; set; }
        /// <summary>
        /// Denied request types. The value can be one or more of: ClientConnection, ServerConnection, RESTAPI.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SignalR.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Denied request types. The value can be one or more of: ClientConnection, ServerConnection, RESTAPI.",
        SerializedName = @"deny",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SignalR.Support.SignalRRequestType) })]
        Microsoft.Azure.PowerShell.Cmdlets.SignalR.Support.SignalRRequestType[] Deny { get; set; }

    }
    /// Network ACL
    internal partial interface INetworkAclInternal

    {
        /// <summary>
        /// Allowed request types. The value can be one or more of: ClientConnection, ServerConnection, RESTAPI.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.SignalR.Support.SignalRRequestType[] Allow { get; set; }
        /// <summary>
        /// Denied request types. The value can be one or more of: ClientConnection, ServerConnection, RESTAPI.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.SignalR.Support.SignalRRequestType[] Deny { get; set; }

    }
}