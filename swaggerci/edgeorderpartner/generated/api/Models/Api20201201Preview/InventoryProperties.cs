// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Runtime.Extensions;

    /// <summary>Represents inventory properties</summary>
    public partial class InventoryProperties :
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryProperties,
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryPropertiesInternal
    {

        /// <summary>Billing status for the inventory</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.PropertyOrigin.Inlined)]
        public string BillingStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInternal)Detail).BillingStatus; }

        /// <summary>Billing type for the inventory</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.PropertyOrigin.Inlined)]
        public string BillingType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInternal)Detail).BillingType; }

        /// <summary>Backing field for <see cref="Configuration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IConfigurationData _configuration;

        /// <summary>Represents basic configuration data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IConfigurationData Configuration { get => (this._configuration = this._configuration ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.ConfigurationData()); }

        /// <summary>Family identifier of inventory</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.PropertyOrigin.Inlined)]
        public string ConfigurationFamilyIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IConfigurationDataInternal)Configuration).FamilyIdentifier; }

        /// <summary>Configuration identifier of inventory</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.PropertyOrigin.Inlined)]
        public string ConfigurationIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IConfigurationDataInternal)Configuration).ConfigurationIdentifier; }

        /// <summary>
        /// Configuration identifier on device - this is used in case of any mismatch
        /// between actual configuration on inventory and configuration stored in service
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.PropertyOrigin.Inlined)]
        public string ConfigurationIdentifierOnDevice { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IConfigurationDataInternal)Configuration).ConfigurationIdentifierOnDevice; }

        /// <summary>Product identifier of inventory</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.PropertyOrigin.Inlined)]
        public string ConfigurationProductIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IConfigurationDataInternal)Configuration).ProductIdentifier; }

        /// <summary>Product Line identifier of inventory</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.PropertyOrigin.Inlined)]
        public string ConfigurationProductLineIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IConfigurationDataInternal)Configuration).ProductLineIdentifier; }

        /// <summary>Collection of specification details about the inventory</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.ISpecificationDetails[] ConfigurationSpecification { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInternal)Detail).ConfigurationSpecification; }

        /// <summary>Backing field for <see cref="Detail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetails _detail;

        /// <summary>Represents additional details of inventory</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetails Detail { get => (this._detail = this._detail ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.InventoryAdditionalDetails()); }

        /// <summary>Contains inventory metadata</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.PropertyOrigin.Inlined)]
        public string DetailInventoryMetadata { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInternal)Detail).InventoryMetadata; }

        /// <summary>Represents secrets on the inventory</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInventorySecrets DetailInventorySecret { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInternal)Detail).InventorySecret; }

        /// <summary>Backing field for <see cref="Inventory" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryData _inventory;

        /// <summary>Represents basic inventory data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryData Inventory { get => (this._inventory = this._inventory ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.InventoryData()); }

        /// <summary>Additional Data</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IAdditionalInventoryDetailsAdditionalData InventoryAdditionalData { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInternal)Detail).InventoryAdditionalData; }

        /// <summary>Inventory location</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.PropertyOrigin.Inlined)]
        public string InventoryLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryDataInternal)Inventory).Location; }

        /// <summary>Boolean flag to indicate if registration is allowed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.PropertyOrigin.Inlined)]
        public bool? InventoryRegistrationAllowed { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryDataInternal)Inventory).RegistrationAllowed; }

        /// <summary>Inventory status</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.PropertyOrigin.Inlined)]
        public string InventoryStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryDataInternal)Inventory).Status; }

        /// <summary>Backing field for <see cref="Location" /> property.</summary>
        private string _location;

        /// <summary>Location of inventory</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.PropertyOrigin.Owned)]
        public string Location { get => this._location; }

        /// <summary>Backing field for <see cref="ManagementResource" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IManagementResourceData _managementResource;

        /// <summary>Represents management resource data associated with inventory.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IManagementResourceData ManagementResource { get => (this._managementResource = this._managementResource ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.ManagementResourceData()); }

        /// <summary>Arm ID of management resource associated with inventory</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.PropertyOrigin.Inlined)]
        public string ManagementResourceArmId { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IManagementResourceDataInternal)ManagementResource).ArmId; }

        /// <summary>Tenant ID of management resource associated with inventory</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.PropertyOrigin.Inlined)]
        public string ManagementResourceTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IManagementResourceDataInternal)ManagementResource).TenantId; }

        /// <summary>Internal Acessors for BillingStatus</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryPropertiesInternal.BillingStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInternal)Detail).BillingStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInternal)Detail).BillingStatus = value; }

        /// <summary>Internal Acessors for BillingType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryPropertiesInternal.BillingType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInternal)Detail).BillingType; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInternal)Detail).BillingType = value; }

        /// <summary>Internal Acessors for Configuration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IConfigurationData Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryPropertiesInternal.Configuration { get => (this._configuration = this._configuration ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.ConfigurationData()); set { {_configuration = value;} } }

        /// <summary>Internal Acessors for ConfigurationFamilyIdentifier</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryPropertiesInternal.ConfigurationFamilyIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IConfigurationDataInternal)Configuration).FamilyIdentifier; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IConfigurationDataInternal)Configuration).FamilyIdentifier = value; }

        /// <summary>Internal Acessors for ConfigurationIdentifier</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryPropertiesInternal.ConfigurationIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IConfigurationDataInternal)Configuration).ConfigurationIdentifier; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IConfigurationDataInternal)Configuration).ConfigurationIdentifier = value; }

        /// <summary>Internal Acessors for ConfigurationIdentifierOnDevice</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryPropertiesInternal.ConfigurationIdentifierOnDevice { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IConfigurationDataInternal)Configuration).ConfigurationIdentifierOnDevice; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IConfigurationDataInternal)Configuration).ConfigurationIdentifierOnDevice = value; }

        /// <summary>Internal Acessors for ConfigurationProductIdentifier</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryPropertiesInternal.ConfigurationProductIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IConfigurationDataInternal)Configuration).ProductIdentifier; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IConfigurationDataInternal)Configuration).ProductIdentifier = value; }

        /// <summary>Internal Acessors for ConfigurationProductLineIdentifier</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryPropertiesInternal.ConfigurationProductLineIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IConfigurationDataInternal)Configuration).ProductLineIdentifier; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IConfigurationDataInternal)Configuration).ProductLineIdentifier = value; }

        /// <summary>Internal Acessors for ConfigurationSpecification</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.ISpecificationDetails[] Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryPropertiesInternal.ConfigurationSpecification { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInternal)Detail).ConfigurationSpecification; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInternal)Detail).ConfigurationSpecification = value; }

        /// <summary>Internal Acessors for Detail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetails Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryPropertiesInternal.Detail { get => (this._detail = this._detail ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.InventoryAdditionalDetails()); set { {_detail = value;} } }

        /// <summary>Internal Acessors for DetailBilling</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IBillingDetails Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryPropertiesInternal.DetailBilling { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInternal)Detail).Billing; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInternal)Detail).Billing = value; }

        /// <summary>Internal Acessors for DetailConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IConfigurationDetails Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryPropertiesInternal.DetailConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInternal)Detail).Configuration; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInternal)Detail).Configuration = value; }

        /// <summary>Internal Acessors for DetailInventory</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IAdditionalInventoryDetails Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryPropertiesInternal.DetailInventory { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInternal)Detail).Inventory; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInternal)Detail).Inventory = value; }

        /// <summary>Internal Acessors for DetailInventoryMetadata</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryPropertiesInternal.DetailInventoryMetadata { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInternal)Detail).InventoryMetadata; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInternal)Detail).InventoryMetadata = value; }

        /// <summary>Internal Acessors for DetailInventorySecret</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInventorySecrets Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryPropertiesInternal.DetailInventorySecret { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInternal)Detail).InventorySecret; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInternal)Detail).InventorySecret = value; }

        /// <summary>Internal Acessors for DetailOrderItem</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IAdditionalOrderItemDetails Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryPropertiesInternal.DetailOrderItem { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInternal)Detail).OrderItem; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInternal)Detail).OrderItem = value; }

        /// <summary>Internal Acessors for Inventory</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryData Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryPropertiesInternal.Inventory { get => (this._inventory = this._inventory ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.InventoryData()); set { {_inventory = value;} } }

        /// <summary>Internal Acessors for InventoryAdditionalData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IAdditionalInventoryDetailsAdditionalData Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryPropertiesInternal.InventoryAdditionalData { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInternal)Detail).InventoryAdditionalData; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInternal)Detail).InventoryAdditionalData = value; }

        /// <summary>Internal Acessors for InventoryLocation</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryPropertiesInternal.InventoryLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryDataInternal)Inventory).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryDataInternal)Inventory).Location = value; }

        /// <summary>Internal Acessors for InventoryRegistrationAllowed</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryPropertiesInternal.InventoryRegistrationAllowed { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryDataInternal)Inventory).RegistrationAllowed; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryDataInternal)Inventory).RegistrationAllowed = value; }

        /// <summary>Internal Acessors for InventoryStatus</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryPropertiesInternal.InventoryStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryDataInternal)Inventory).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryDataInternal)Inventory).Status = value; }

        /// <summary>Internal Acessors for Location</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryPropertiesInternal.Location { get => this._location; set { {_location = value;} } }

        /// <summary>Internal Acessors for ManagementResource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IManagementResourceData Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryPropertiesInternal.ManagementResource { get => (this._managementResource = this._managementResource ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.ManagementResourceData()); set { {_managementResource = value;} } }

        /// <summary>Internal Acessors for ManagementResourceArmId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryPropertiesInternal.ManagementResourceArmId { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IManagementResourceDataInternal)ManagementResource).ArmId; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IManagementResourceDataInternal)ManagementResource).ArmId = value; }

        /// <summary>Internal Acessors for ManagementResourceTenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryPropertiesInternal.ManagementResourceTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IManagementResourceDataInternal)ManagementResource).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IManagementResourceDataInternal)ManagementResource).TenantId = value; }

        /// <summary>Internal Acessors for OrderItem</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IOrderItemData Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryPropertiesInternal.OrderItem { get => (this._orderItem = this._orderItem ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.OrderItemData()); set { {_orderItem = value;} } }

        /// <summary>Internal Acessors for OrderItemArmId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryPropertiesInternal.OrderItemArmId { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IOrderItemDataInternal)OrderItem).ArmId; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IOrderItemDataInternal)OrderItem).ArmId = value; }

        /// <summary>Internal Acessors for OrderItemStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IStageDetails Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryPropertiesInternal.OrderItemStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInternal)Detail).OrderItemStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInternal)Detail).OrderItemStatus = value; }

        /// <summary>Internal Acessors for OrderItemSubscription</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.ISubscriptionDetails Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryPropertiesInternal.OrderItemSubscription { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInternal)Detail).OrderItemSubscription; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInternal)Detail).OrderItemSubscription = value; }

        /// <summary>Internal Acessors for OrderItemType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Support.OrderItemType? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryPropertiesInternal.OrderItemType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IOrderItemDataInternal)OrderItem).OrderItemType; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IOrderItemDataInternal)OrderItem).OrderItemType = value; }

        /// <summary>Internal Acessors for SerialNumber</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryPropertiesInternal.SerialNumber { get => this._serialNumber; set { {_serialNumber = value;} } }

        /// <summary>Internal Acessors for StatusDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryPropertiesInternal.StatusDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInternal)Detail).StatusDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInternal)Detail).StatusDisplayName = value; }

        /// <summary>Internal Acessors for StatusStageName</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Support.StageName? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryPropertiesInternal.StatusStageName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInternal)Detail).StatusStageName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInternal)Detail).StatusStageName = value; }

        /// <summary>Internal Acessors for StatusStageStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Support.StageStatus? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryPropertiesInternal.StatusStageStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInternal)Detail).StatusStageStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInternal)Detail).StatusStageStatus = value; }

        /// <summary>Internal Acessors for StatusStartTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryPropertiesInternal.StatusStartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInternal)Detail).StatusStartTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInternal)Detail).StatusStartTime = value; }

        /// <summary>Internal Acessors for SubscriptionId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryPropertiesInternal.SubscriptionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInternal)Detail).SubscriptionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInternal)Detail).SubscriptionId = value; }

        /// <summary>Internal Acessors for SubscriptionQuotaId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryPropertiesInternal.SubscriptionQuotaId { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInternal)Detail).SubscriptionQuotaId; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInternal)Detail).SubscriptionQuotaId = value; }

        /// <summary>Internal Acessors for SubscriptionState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryPropertiesInternal.SubscriptionState { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInternal)Detail).SubscriptionState; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInternal)Detail).SubscriptionState = value; }

        /// <summary>Backing field for <see cref="OrderItem" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IOrderItemData _orderItem;

        /// <summary>Represents basic order item data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IOrderItemData OrderItem { get => (this._orderItem = this._orderItem ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.OrderItemData()); }

        /// <summary>Arm ID of order item</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.PropertyOrigin.Inlined)]
        public string OrderItemArmId { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IOrderItemDataInternal)OrderItem).ArmId; }

        /// <summary>Order item type - purchase or rental</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Support.OrderItemType? OrderItemType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IOrderItemDataInternal)OrderItem).OrderItemType; }

        /// <summary>Backing field for <see cref="SerialNumber" /> property.</summary>
        private string _serialNumber;

        /// <summary>Serial number of the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.PropertyOrigin.Owned)]
        public string SerialNumber { get => this._serialNumber; }

        /// <summary>Display name of the resource stage.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.PropertyOrigin.Inlined)]
        public string StatusDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInternal)Detail).StatusDisplayName; }

        /// <summary>Stage name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Support.StageName? StatusStageName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInternal)Detail).StatusStageName; }

        /// <summary>Stage status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Support.StageStatus? StatusStageStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInternal)Detail).StatusStageStatus; }

        /// <summary>Stage start time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.PropertyOrigin.Inlined)]
        public global::System.DateTime? StatusStartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInternal)Detail).StatusStartTime; }

        /// <summary>Subscription Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.PropertyOrigin.Inlined)]
        public string SubscriptionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInternal)Detail).SubscriptionId; }

        /// <summary>Subscription QuotaId</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.PropertyOrigin.Inlined)]
        public string SubscriptionQuotaId { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInternal)Detail).SubscriptionQuotaId; }

        /// <summary>Subscription State</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.PropertyOrigin.Inlined)]
        public string SubscriptionState { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInternal)Detail).SubscriptionState; }

        /// <summary>Creates an new <see cref="InventoryProperties" /> instance.</summary>
        public InventoryProperties()
        {

        }
    }
    /// Represents inventory properties
    public partial interface IInventoryProperties :
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Runtime.IJsonSerializable
    {
        /// <summary>Billing status for the inventory</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Billing status for the inventory",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(string) })]
        string BillingStatus { get;  }
        /// <summary>Billing type for the inventory</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Billing type for the inventory",
        SerializedName = @"billingType",
        PossibleTypes = new [] { typeof(string) })]
        string BillingType { get;  }
        /// <summary>Family identifier of inventory</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Family identifier of inventory",
        SerializedName = @"familyIdentifier",
        PossibleTypes = new [] { typeof(string) })]
        string ConfigurationFamilyIdentifier { get;  }
        /// <summary>Configuration identifier of inventory</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Configuration identifier of inventory",
        SerializedName = @"configurationIdentifier",
        PossibleTypes = new [] { typeof(string) })]
        string ConfigurationIdentifier { get;  }
        /// <summary>
        /// Configuration identifier on device - this is used in case of any mismatch
        /// between actual configuration on inventory and configuration stored in service
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Configuration identifier on device - this is used in case of any mismatch
        between actual configuration on inventory and configuration stored in service",
        SerializedName = @"configurationIdentifierOnDevice",
        PossibleTypes = new [] { typeof(string) })]
        string ConfigurationIdentifierOnDevice { get;  }
        /// <summary>Product identifier of inventory</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Product identifier of inventory",
        SerializedName = @"productIdentifier",
        PossibleTypes = new [] { typeof(string) })]
        string ConfigurationProductIdentifier { get;  }
        /// <summary>Product Line identifier of inventory</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Product Line identifier of inventory",
        SerializedName = @"productLineIdentifier",
        PossibleTypes = new [] { typeof(string) })]
        string ConfigurationProductLineIdentifier { get;  }
        /// <summary>Collection of specification details about the inventory</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Collection of specification details about the inventory",
        SerializedName = @"specifications",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.ISpecificationDetails) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.ISpecificationDetails[] ConfigurationSpecification { get;  }
        /// <summary>Contains inventory metadata</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Contains inventory metadata",
        SerializedName = @"inventoryMetadata",
        PossibleTypes = new [] { typeof(string) })]
        string DetailInventoryMetadata { get;  }
        /// <summary>Represents secrets on the inventory</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Represents secrets on the inventory",
        SerializedName = @"inventorySecrets",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInventorySecrets) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInventorySecrets DetailInventorySecret { get;  }
        /// <summary>Additional Data</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Additional Data",
        SerializedName = @"additionalData",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IAdditionalInventoryDetailsAdditionalData) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IAdditionalInventoryDetailsAdditionalData InventoryAdditionalData { get;  }
        /// <summary>Inventory location</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Inventory location",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string InventoryLocation { get;  }
        /// <summary>Boolean flag to indicate if registration is allowed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Boolean flag to indicate if registration is allowed",
        SerializedName = @"registrationAllowed",
        PossibleTypes = new [] { typeof(bool) })]
        bool? InventoryRegistrationAllowed { get;  }
        /// <summary>Inventory status</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Inventory status",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(string) })]
        string InventoryStatus { get;  }
        /// <summary>Location of inventory</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Location of inventory",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string Location { get;  }
        /// <summary>Arm ID of management resource associated with inventory</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Arm ID of management resource associated with inventory",
        SerializedName = @"armId",
        PossibleTypes = new [] { typeof(string) })]
        string ManagementResourceArmId { get;  }
        /// <summary>Tenant ID of management resource associated with inventory</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Tenant ID of management resource associated with inventory",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string ManagementResourceTenantId { get;  }
        /// <summary>Arm ID of order item</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Arm ID of order item",
        SerializedName = @"armId",
        PossibleTypes = new [] { typeof(string) })]
        string OrderItemArmId { get;  }
        /// <summary>Order item type - purchase or rental</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Order item type - purchase or rental",
        SerializedName = @"orderItemType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Support.OrderItemType) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Support.OrderItemType? OrderItemType { get;  }
        /// <summary>Serial number of the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Serial number of the device.",
        SerializedName = @"serialNumber",
        PossibleTypes = new [] { typeof(string) })]
        string SerialNumber { get;  }
        /// <summary>Display name of the resource stage.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Display name of the resource stage.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string StatusDisplayName { get;  }
        /// <summary>Stage name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Stage name",
        SerializedName = @"stageName",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Support.StageName) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Support.StageName? StatusStageName { get;  }
        /// <summary>Stage status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Stage status.",
        SerializedName = @"stageStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Support.StageStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Support.StageStatus? StatusStageStatus { get;  }
        /// <summary>Stage start time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Stage start time",
        SerializedName = @"startTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? StatusStartTime { get;  }
        /// <summary>Subscription Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Subscription Id",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionId { get;  }
        /// <summary>Subscription QuotaId</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Subscription QuotaId",
        SerializedName = @"quotaId",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionQuotaId { get;  }
        /// <summary>Subscription State</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Subscription State",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionState { get;  }

    }
    /// Represents inventory properties
    internal partial interface IInventoryPropertiesInternal

    {
        /// <summary>Billing status for the inventory</summary>
        string BillingStatus { get; set; }
        /// <summary>Billing type for the inventory</summary>
        string BillingType { get; set; }
        /// <summary>Represents basic configuration data.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IConfigurationData Configuration { get; set; }
        /// <summary>Family identifier of inventory</summary>
        string ConfigurationFamilyIdentifier { get; set; }
        /// <summary>Configuration identifier of inventory</summary>
        string ConfigurationIdentifier { get; set; }
        /// <summary>
        /// Configuration identifier on device - this is used in case of any mismatch
        /// between actual configuration on inventory and configuration stored in service
        /// </summary>
        string ConfigurationIdentifierOnDevice { get; set; }
        /// <summary>Product identifier of inventory</summary>
        string ConfigurationProductIdentifier { get; set; }
        /// <summary>Product Line identifier of inventory</summary>
        string ConfigurationProductLineIdentifier { get; set; }
        /// <summary>Collection of specification details about the inventory</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.ISpecificationDetails[] ConfigurationSpecification { get; set; }
        /// <summary>Represents additional details of inventory</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetails Detail { get; set; }
        /// <summary>Represents additional details about billing for the inventory</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IBillingDetails DetailBilling { get; set; }
        /// <summary>Represents additional details about the configuration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IConfigurationDetails DetailConfiguration { get; set; }
        /// <summary>Represents additional data about the inventory</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IAdditionalInventoryDetails DetailInventory { get; set; }
        /// <summary>Contains inventory metadata</summary>
        string DetailInventoryMetadata { get; set; }
        /// <summary>Represents secrets on the inventory</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryAdditionalDetailsInventorySecrets DetailInventorySecret { get; set; }
        /// <summary>Represents additional details about the order item</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IAdditionalOrderItemDetails DetailOrderItem { get; set; }
        /// <summary>Represents basic inventory data.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IInventoryData Inventory { get; set; }
        /// <summary>Additional Data</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IAdditionalInventoryDetailsAdditionalData InventoryAdditionalData { get; set; }
        /// <summary>Inventory location</summary>
        string InventoryLocation { get; set; }
        /// <summary>Boolean flag to indicate if registration is allowed</summary>
        bool? InventoryRegistrationAllowed { get; set; }
        /// <summary>Inventory status</summary>
        string InventoryStatus { get; set; }
        /// <summary>Location of inventory</summary>
        string Location { get; set; }
        /// <summary>Represents management resource data associated with inventory.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IManagementResourceData ManagementResource { get; set; }
        /// <summary>Arm ID of management resource associated with inventory</summary>
        string ManagementResourceArmId { get; set; }
        /// <summary>Tenant ID of management resource associated with inventory</summary>
        string ManagementResourceTenantId { get; set; }
        /// <summary>Represents basic order item data.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IOrderItemData OrderItem { get; set; }
        /// <summary>Arm ID of order item</summary>
        string OrderItemArmId { get; set; }
        /// <summary>Order item status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.IStageDetails OrderItemStatus { get; set; }
        /// <summary>Subscription details</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Models.Api20201201Preview.ISubscriptionDetails OrderItemSubscription { get; set; }
        /// <summary>Order item type - purchase or rental</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Support.OrderItemType? OrderItemType { get; set; }
        /// <summary>Serial number of the device.</summary>
        string SerialNumber { get; set; }
        /// <summary>Display name of the resource stage.</summary>
        string StatusDisplayName { get; set; }
        /// <summary>Stage name</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Support.StageName? StatusStageName { get; set; }
        /// <summary>Stage status.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrderPartnerApiS.Support.StageStatus? StatusStageStatus { get; set; }
        /// <summary>Stage start time</summary>
        global::System.DateTime? StatusStartTime { get; set; }
        /// <summary>Subscription Id</summary>
        string SubscriptionId { get; set; }
        /// <summary>Subscription QuotaId</summary>
        string SubscriptionQuotaId { get; set; }
        /// <summary>Subscription State</summary>
        string SubscriptionState { get; set; }

    }
}