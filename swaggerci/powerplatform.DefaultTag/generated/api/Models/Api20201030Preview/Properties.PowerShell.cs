// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview
{
    using Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Runtime.PowerShell;

    /// <summary>The properties that define configuration for the enterprise policy.</summary>
    [System.ComponentModel.TypeConverter(typeof(PropertiesTypeConverter))]
    public partial class Properties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.Properties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IProperties" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new Properties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.Properties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IProperties" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new Properties(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="Properties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="Properties" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.Properties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal Properties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Lockbox"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).Lockbox = (Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesLockbox) content.GetValueForProperty("Lockbox",((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).Lockbox, Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.PropertiesLockboxTypeConverter.ConvertFrom);
            }
            if (content.Contains("Encryption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).Encryption = (Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesEncryption) content.GetValueForProperty("Encryption",((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).Encryption, Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.PropertiesEncryptionTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkInjection"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).NetworkInjection = (Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesNetworkInjection) content.GetValueForProperty("NetworkInjection",((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).NetworkInjection, Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.PropertiesNetworkInjectionTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).SystemId = (string) content.GetValueForProperty("SystemId",((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).SystemId, global::System.Convert.ToString);
            }
            if (content.Contains("HealthStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).HealthStatus = (Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.HealthStatus?) content.GetValueForProperty("HealthStatus",((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).HealthStatus, Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.HealthStatus.CreateFrom);
            }
            if (content.Contains("LockboxState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).LockboxState = (Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.State?) content.GetValueForProperty("LockboxState",((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).LockboxState, Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.State.CreateFrom);
            }
            if (content.Contains("EncryptionState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).EncryptionState = (Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.State?) content.GetValueForProperty("EncryptionState",((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).EncryptionState, Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.State.CreateFrom);
            }
            if (content.Contains("EncryptionKeyVault"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).EncryptionKeyVault = (Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IKeyVaultProperties) content.GetValueForProperty("EncryptionKeyVault",((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).EncryptionKeyVault, Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.KeyVaultPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkInjectionVirtualNetwork"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).NetworkInjectionVirtualNetwork = (Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IVirtualNetworkPropertiesList) content.GetValueForProperty("NetworkInjectionVirtualNetwork",((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).NetworkInjectionVirtualNetwork, Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.VirtualNetworkPropertiesListTypeConverter.ConvertFrom);
            }
            if (content.Contains("KeyVaultKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).KeyVaultKey = (Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IKeyProperties) content.GetValueForProperty("KeyVaultKey",((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).KeyVaultKey, Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.KeyPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("KeyVaultId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).KeyVaultId = (string) content.GetValueForProperty("KeyVaultId",((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).KeyVaultId, global::System.Convert.ToString);
            }
            if (content.Contains("VirtualNetworkValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).VirtualNetworkValue = (Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IVirtualNetworkProperties[]) content.GetValueForProperty("VirtualNetworkValue",((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).VirtualNetworkValue, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IVirtualNetworkProperties>(__y, Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.VirtualNetworkPropertiesTypeConverter.ConvertFrom));
            }
            if (content.Contains("VirtualNetworkNextLink"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).VirtualNetworkNextLink = (string) content.GetValueForProperty("VirtualNetworkNextLink",((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).VirtualNetworkNextLink, global::System.Convert.ToString);
            }
            if (content.Contains("KeyName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).KeyName = (string) content.GetValueForProperty("KeyName",((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).KeyName, global::System.Convert.ToString);
            }
            if (content.Contains("KeyVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).KeyVersion = (string) content.GetValueForProperty("KeyVersion",((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).KeyVersion, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.Properties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal Properties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Lockbox"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).Lockbox = (Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesLockbox) content.GetValueForProperty("Lockbox",((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).Lockbox, Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.PropertiesLockboxTypeConverter.ConvertFrom);
            }
            if (content.Contains("Encryption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).Encryption = (Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesEncryption) content.GetValueForProperty("Encryption",((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).Encryption, Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.PropertiesEncryptionTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkInjection"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).NetworkInjection = (Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesNetworkInjection) content.GetValueForProperty("NetworkInjection",((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).NetworkInjection, Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.PropertiesNetworkInjectionTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).SystemId = (string) content.GetValueForProperty("SystemId",((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).SystemId, global::System.Convert.ToString);
            }
            if (content.Contains("HealthStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).HealthStatus = (Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.HealthStatus?) content.GetValueForProperty("HealthStatus",((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).HealthStatus, Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.HealthStatus.CreateFrom);
            }
            if (content.Contains("LockboxState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).LockboxState = (Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.State?) content.GetValueForProperty("LockboxState",((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).LockboxState, Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.State.CreateFrom);
            }
            if (content.Contains("EncryptionState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).EncryptionState = (Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.State?) content.GetValueForProperty("EncryptionState",((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).EncryptionState, Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.State.CreateFrom);
            }
            if (content.Contains("EncryptionKeyVault"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).EncryptionKeyVault = (Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IKeyVaultProperties) content.GetValueForProperty("EncryptionKeyVault",((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).EncryptionKeyVault, Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.KeyVaultPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkInjectionVirtualNetwork"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).NetworkInjectionVirtualNetwork = (Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IVirtualNetworkPropertiesList) content.GetValueForProperty("NetworkInjectionVirtualNetwork",((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).NetworkInjectionVirtualNetwork, Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.VirtualNetworkPropertiesListTypeConverter.ConvertFrom);
            }
            if (content.Contains("KeyVaultKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).KeyVaultKey = (Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IKeyProperties) content.GetValueForProperty("KeyVaultKey",((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).KeyVaultKey, Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.KeyPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("KeyVaultId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).KeyVaultId = (string) content.GetValueForProperty("KeyVaultId",((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).KeyVaultId, global::System.Convert.ToString);
            }
            if (content.Contains("VirtualNetworkValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).VirtualNetworkValue = (Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IVirtualNetworkProperties[]) content.GetValueForProperty("VirtualNetworkValue",((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).VirtualNetworkValue, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IVirtualNetworkProperties>(__y, Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.VirtualNetworkPropertiesTypeConverter.ConvertFrom));
            }
            if (content.Contains("VirtualNetworkNextLink"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).VirtualNetworkNextLink = (string) content.GetValueForProperty("VirtualNetworkNextLink",((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).VirtualNetworkNextLink, global::System.Convert.ToString);
            }
            if (content.Contains("KeyName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).KeyName = (string) content.GetValueForProperty("KeyName",((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).KeyName, global::System.Convert.ToString);
            }
            if (content.Contains("KeyVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).KeyVersion = (string) content.GetValueForProperty("KeyVersion",((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)this).KeyVersion, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// The properties that define configuration for the enterprise policy.
    [System.ComponentModel.TypeConverter(typeof(PropertiesTypeConverter))]
    public partial interface IProperties

    {

    }
}