// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Runtime.Extensions;

    /// <summary>The properties that define configuration for the enterprise policy.</summary>
    public partial class Properties :
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IProperties,
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal
    {

        /// <summary>Backing field for <see cref="Encryption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesEncryption _encryption;

        /// <summary>The encryption settings for a configuration store.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesEncryption Encryption { get => (this._encryption = this._encryption ?? new Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.PropertiesEncryption()); set => this._encryption = value; }

        /// <summary>The state of onboarding, which only appears in the response.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.State? EncryptionState { get => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesEncryptionInternal)Encryption).State; set => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesEncryptionInternal)Encryption).State = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.State)""); }

        /// <summary>Backing field for <see cref="HealthStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.HealthStatus? _healthStatus;

        /// <summary>The health status of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.HealthStatus? HealthStatus { get => this._healthStatus; set => this._healthStatus = value; }

        /// <summary>The identifier of the key vault key used to encrypt data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.PropertyOrigin.Inlined)]
        public string KeyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesEncryptionInternal)Encryption).KeyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesEncryptionInternal)Encryption).KeyName = value ?? null; }

        /// <summary>Uri of KeyVault</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.PropertyOrigin.Inlined)]
        public string KeyVaultId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesEncryptionInternal)Encryption).KeyVaultId; set => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesEncryptionInternal)Encryption).KeyVaultId = value ?? null; }

        /// <summary>The version of the identity which will be used to access key vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.PropertyOrigin.Inlined)]
        public string KeyVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesEncryptionInternal)Encryption).KeyVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesEncryptionInternal)Encryption).KeyVersion = value ?? null; }

        /// <summary>Backing field for <see cref="Lockbox" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesLockbox _lockbox;

        /// <summary>Settings concerning lockbox.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesLockbox Lockbox { get => (this._lockbox = this._lockbox ?? new Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.PropertiesLockbox()); set => this._lockbox = value; }

        /// <summary>lockbox configuration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.State? LockboxState { get => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesLockboxInternal)Lockbox).State; set => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesLockboxInternal)Lockbox).State = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.State)""); }

        /// <summary>Internal Acessors for Encryption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesEncryption Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal.Encryption { get => (this._encryption = this._encryption ?? new Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.PropertiesEncryption()); set { {_encryption = value;} } }

        /// <summary>Internal Acessors for EncryptionKeyVault</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IKeyVaultProperties Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal.EncryptionKeyVault { get => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesEncryptionInternal)Encryption).KeyVault; set => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesEncryptionInternal)Encryption).KeyVault = value; }

        /// <summary>Internal Acessors for KeyVaultKey</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IKeyProperties Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal.KeyVaultKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesEncryptionInternal)Encryption).KeyVaultKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesEncryptionInternal)Encryption).KeyVaultKey = value; }

        /// <summary>Internal Acessors for Lockbox</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesLockbox Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal.Lockbox { get => (this._lockbox = this._lockbox ?? new Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.PropertiesLockbox()); set { {_lockbox = value;} } }

        /// <summary>Internal Acessors for NetworkInjection</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesNetworkInjection Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal.NetworkInjection { get => (this._networkInjection = this._networkInjection ?? new Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.PropertiesNetworkInjection()); set { {_networkInjection = value;} } }

        /// <summary>Internal Acessors for NetworkInjectionVirtualNetwork</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IVirtualNetworkPropertiesList Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal.NetworkInjectionVirtualNetwork { get => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesNetworkInjectionInternal)NetworkInjection).VirtualNetwork; set => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesNetworkInjectionInternal)NetworkInjection).VirtualNetwork = value; }

        /// <summary>Internal Acessors for SystemId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal.SystemId { get => this._systemId; set { {_systemId = value;} } }

        /// <summary>Backing field for <see cref="NetworkInjection" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesNetworkInjection _networkInjection;

        /// <summary>Settings concerning network injection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesNetworkInjection NetworkInjection { get => (this._networkInjection = this._networkInjection ?? new Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.PropertiesNetworkInjection()); set => this._networkInjection = value; }

        /// <summary>Backing field for <see cref="SystemId" /> property.</summary>
        private string _systemId;

        /// <summary>The internally assigned unique identifier of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.PropertyOrigin.Owned)]
        public string SystemId { get => this._systemId; }

        /// <summary>Next page link if any.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.PropertyOrigin.Inlined)]
        public string VirtualNetworkNextLink { get => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesNetworkInjectionInternal)NetworkInjection).VirtualNetworkNextLink; set => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesNetworkInjectionInternal)NetworkInjection).VirtualNetworkNextLink = value ?? null; }

        /// <summary>Array of virtual networks.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IVirtualNetworkProperties[] VirtualNetworkValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesNetworkInjectionInternal)NetworkInjection).VirtualNetworkValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesNetworkInjectionInternal)NetworkInjection).VirtualNetworkValue = value ?? null /* arrayOf */; }

        /// <summary>Creates an new <see cref="Properties" /> instance.</summary>
        public Properties()
        {

        }
    }
    /// The properties that define configuration for the enterprise policy.
    public partial interface IProperties :
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Runtime.IJsonSerializable
    {
        /// <summary>The state of onboarding, which only appears in the response.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The state of onboarding, which only appears in the response.",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.State) })]
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.State? EncryptionState { get; set; }
        /// <summary>The health status of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The health status of the resource.",
        SerializedName = @"healthStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.HealthStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.HealthStatus? HealthStatus { get; set; }
        /// <summary>The identifier of the key vault key used to encrypt data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identifier of the key vault key used to encrypt data.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string KeyName { get; set; }
        /// <summary>Uri of KeyVault</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Uri of KeyVault",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultId { get; set; }
        /// <summary>The version of the identity which will be used to access key vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The version of the identity which will be used to access key vault.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVersion { get; set; }
        /// <summary>lockbox configuration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"lockbox configuration",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.State) })]
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.State? LockboxState { get; set; }
        /// <summary>The internally assigned unique identifier of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The internally assigned unique identifier of the resource.",
        SerializedName = @"systemId",
        PossibleTypes = new [] { typeof(string) })]
        string SystemId { get;  }
        /// <summary>Next page link if any.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Next page link if any.",
        SerializedName = @"nextLink",
        PossibleTypes = new [] { typeof(string) })]
        string VirtualNetworkNextLink { get; set; }
        /// <summary>Array of virtual networks.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Array of virtual networks.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IVirtualNetworkProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IVirtualNetworkProperties[] VirtualNetworkValue { get; set; }

    }
    /// The properties that define configuration for the enterprise policy.
    internal partial interface IPropertiesInternal

    {
        /// <summary>The encryption settings for a configuration store.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesEncryption Encryption { get; set; }
        /// <summary>Key vault properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IKeyVaultProperties EncryptionKeyVault { get; set; }
        /// <summary>The state of onboarding, which only appears in the response.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.State? EncryptionState { get; set; }
        /// <summary>The health status of the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.HealthStatus? HealthStatus { get; set; }
        /// <summary>The identifier of the key vault key used to encrypt data.</summary>
        string KeyName { get; set; }
        /// <summary>Uri of KeyVault</summary>
        string KeyVaultId { get; set; }
        /// <summary>Identity of the secret that includes name and version.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IKeyProperties KeyVaultKey { get; set; }
        /// <summary>The version of the identity which will be used to access key vault.</summary>
        string KeyVersion { get; set; }
        /// <summary>Settings concerning lockbox.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesLockbox Lockbox { get; set; }
        /// <summary>lockbox configuration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.State? LockboxState { get; set; }
        /// <summary>Settings concerning network injection.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesNetworkInjection NetworkInjection { get; set; }
        /// <summary>Network injection configuration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IVirtualNetworkPropertiesList NetworkInjectionVirtualNetwork { get; set; }
        /// <summary>The internally assigned unique identifier of the resource.</summary>
        string SystemId { get; set; }
        /// <summary>Next page link if any.</summary>
        string VirtualNetworkNextLink { get; set; }
        /// <summary>Array of virtual networks.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IVirtualNetworkProperties[] VirtualNetworkValue { get; set; }

    }
}