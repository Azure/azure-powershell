// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Orbital.Models.Api20221101
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Extensions;

    /// <summary>Contact Instance Properties.</summary>
    public partial class ContactInstanceProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Orbital.Models.Api20221101.IContactInstanceProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Orbital.Models.Api20221101.IContactInstancePropertiesInternal
    {

        /// <summary>Backing field for <see cref="EndAzimuthDegree" /> property.</summary>
        private float? _endAzimuthDegree;

        /// <summary>Azimuth of the antenna at the end of the contact in decimal degrees.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Orbital.Origin(Microsoft.Azure.PowerShell.Cmdlets.Orbital.PropertyOrigin.Owned)]
        public float? EndAzimuthDegree { get => this._endAzimuthDegree; }

        /// <summary>Backing field for <see cref="EndElevationDegree" /> property.</summary>
        private float? _endElevationDegree;

        /// <summary>Spacecraft elevation above the horizon at contact end.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Orbital.Origin(Microsoft.Azure.PowerShell.Cmdlets.Orbital.PropertyOrigin.Owned)]
        public float? EndElevationDegree { get => this._endElevationDegree; }

        /// <summary>Backing field for <see cref="MaximumElevationDegree" /> property.</summary>
        private float? _maximumElevationDegree;

        /// <summary>Maximum elevation of the antenna during the contact in decimal degrees.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Orbital.Origin(Microsoft.Azure.PowerShell.Cmdlets.Orbital.PropertyOrigin.Owned)]
        public float? MaximumElevationDegree { get => this._maximumElevationDegree; }

        /// <summary>Internal Acessors for EndAzimuthDegree</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.Orbital.Models.Api20221101.IContactInstancePropertiesInternal.EndAzimuthDegree { get => this._endAzimuthDegree; set { {_endAzimuthDegree = value;} } }

        /// <summary>Internal Acessors for EndElevationDegree</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.Orbital.Models.Api20221101.IContactInstancePropertiesInternal.EndElevationDegree { get => this._endElevationDegree; set { {_endElevationDegree = value;} } }

        /// <summary>Internal Acessors for MaximumElevationDegree</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.Orbital.Models.Api20221101.IContactInstancePropertiesInternal.MaximumElevationDegree { get => this._maximumElevationDegree; set { {_maximumElevationDegree = value;} } }

        /// <summary>Internal Acessors for RxEndTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Orbital.Models.Api20221101.IContactInstancePropertiesInternal.RxEndTime { get => this._rxEndTime; set { {_rxEndTime = value;} } }

        /// <summary>Internal Acessors for RxStartTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Orbital.Models.Api20221101.IContactInstancePropertiesInternal.RxStartTime { get => this._rxStartTime; set { {_rxStartTime = value;} } }

        /// <summary>Internal Acessors for StartAzimuthDegree</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.Orbital.Models.Api20221101.IContactInstancePropertiesInternal.StartAzimuthDegree { get => this._startAzimuthDegree; set { {_startAzimuthDegree = value;} } }

        /// <summary>Internal Acessors for StartElevationDegree</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.Orbital.Models.Api20221101.IContactInstancePropertiesInternal.StartElevationDegree { get => this._startElevationDegree; set { {_startElevationDegree = value;} } }

        /// <summary>Internal Acessors for TxEndTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Orbital.Models.Api20221101.IContactInstancePropertiesInternal.TxEndTime { get => this._txEndTime; set { {_txEndTime = value;} } }

        /// <summary>Internal Acessors for TxStartTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Orbital.Models.Api20221101.IContactInstancePropertiesInternal.TxStartTime { get => this._txStartTime; set { {_txStartTime = value;} } }

        /// <summary>Backing field for <see cref="RxEndTime" /> property.</summary>
        private global::System.DateTime? _rxEndTime;

        /// <summary>Time to lost receiving a signal (ISO 8601 UTC standard).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Orbital.Origin(Microsoft.Azure.PowerShell.Cmdlets.Orbital.PropertyOrigin.Owned)]
        public global::System.DateTime? RxEndTime { get => this._rxEndTime; }

        /// <summary>Backing field for <see cref="RxStartTime" /> property.</summary>
        private global::System.DateTime? _rxStartTime;

        /// <summary>Earliest time to receive a signal (ISO 8601 UTC standard).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Orbital.Origin(Microsoft.Azure.PowerShell.Cmdlets.Orbital.PropertyOrigin.Owned)]
        public global::System.DateTime? RxStartTime { get => this._rxStartTime; }

        /// <summary>Backing field for <see cref="StartAzimuthDegree" /> property.</summary>
        private float? _startAzimuthDegree;

        /// <summary>Azimuth of the antenna at the start of the contact in decimal degrees.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Orbital.Origin(Microsoft.Azure.PowerShell.Cmdlets.Orbital.PropertyOrigin.Owned)]
        public float? StartAzimuthDegree { get => this._startAzimuthDegree; }

        /// <summary>Backing field for <see cref="StartElevationDegree" /> property.</summary>
        private float? _startElevationDegree;

        /// <summary>Spacecraft elevation above the horizon at contact start.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Orbital.Origin(Microsoft.Azure.PowerShell.Cmdlets.Orbital.PropertyOrigin.Owned)]
        public float? StartElevationDegree { get => this._startElevationDegree; }

        /// <summary>Backing field for <see cref="TxEndTime" /> property.</summary>
        private global::System.DateTime? _txEndTime;

        /// <summary>Time at which antenna transmit will be disabled (ISO 8601 UTC standard).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Orbital.Origin(Microsoft.Azure.PowerShell.Cmdlets.Orbital.PropertyOrigin.Owned)]
        public global::System.DateTime? TxEndTime { get => this._txEndTime; }

        /// <summary>Backing field for <see cref="TxStartTime" /> property.</summary>
        private global::System.DateTime? _txStartTime;

        /// <summary>Time at which antenna transmit will be enabled (ISO 8601 UTC standard).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Orbital.Origin(Microsoft.Azure.PowerShell.Cmdlets.Orbital.PropertyOrigin.Owned)]
        public global::System.DateTime? TxStartTime { get => this._txStartTime; }

        /// <summary>Creates an new <see cref="ContactInstanceProperties" /> instance.</summary>
        public ContactInstanceProperties()
        {

        }
    }
    /// Contact Instance Properties.
    public partial interface IContactInstanceProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.IJsonSerializable
    {
        /// <summary>Azimuth of the antenna at the end of the contact in decimal degrees.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Azimuth of the antenna at the end of the contact in decimal degrees.",
        SerializedName = @"endAzimuthDegrees",
        PossibleTypes = new [] { typeof(float) })]
        float? EndAzimuthDegree { get;  }
        /// <summary>Spacecraft elevation above the horizon at contact end.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Spacecraft elevation above the horizon at contact end.",
        SerializedName = @"endElevationDegrees",
        PossibleTypes = new [] { typeof(float) })]
        float? EndElevationDegree { get;  }
        /// <summary>Maximum elevation of the antenna during the contact in decimal degrees.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Maximum elevation of the antenna during the contact in decimal degrees.",
        SerializedName = @"maximumElevationDegrees",
        PossibleTypes = new [] { typeof(float) })]
        float? MaximumElevationDegree { get;  }
        /// <summary>Time to lost receiving a signal (ISO 8601 UTC standard).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Time to lost receiving a signal (ISO 8601 UTC standard).",
        SerializedName = @"rxEndTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? RxEndTime { get;  }
        /// <summary>Earliest time to receive a signal (ISO 8601 UTC standard).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Earliest time to receive a signal (ISO 8601 UTC standard).",
        SerializedName = @"rxStartTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? RxStartTime { get;  }
        /// <summary>Azimuth of the antenna at the start of the contact in decimal degrees.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Azimuth of the antenna at the start of the contact in decimal degrees.",
        SerializedName = @"startAzimuthDegrees",
        PossibleTypes = new [] { typeof(float) })]
        float? StartAzimuthDegree { get;  }
        /// <summary>Spacecraft elevation above the horizon at contact start.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Spacecraft elevation above the horizon at contact start.",
        SerializedName = @"startElevationDegrees",
        PossibleTypes = new [] { typeof(float) })]
        float? StartElevationDegree { get;  }
        /// <summary>Time at which antenna transmit will be disabled (ISO 8601 UTC standard).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Time at which antenna transmit will be disabled (ISO 8601 UTC standard).",
        SerializedName = @"txEndTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? TxEndTime { get;  }
        /// <summary>Time at which antenna transmit will be enabled (ISO 8601 UTC standard).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Time at which antenna transmit will be enabled (ISO 8601 UTC standard).",
        SerializedName = @"txStartTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? TxStartTime { get;  }

    }
    /// Contact Instance Properties.
    internal partial interface IContactInstancePropertiesInternal

    {
        /// <summary>Azimuth of the antenna at the end of the contact in decimal degrees.</summary>
        float? EndAzimuthDegree { get; set; }
        /// <summary>Spacecraft elevation above the horizon at contact end.</summary>
        float? EndElevationDegree { get; set; }
        /// <summary>Maximum elevation of the antenna during the contact in decimal degrees.</summary>
        float? MaximumElevationDegree { get; set; }
        /// <summary>Time to lost receiving a signal (ISO 8601 UTC standard).</summary>
        global::System.DateTime? RxEndTime { get; set; }
        /// <summary>Earliest time to receive a signal (ISO 8601 UTC standard).</summary>
        global::System.DateTime? RxStartTime { get; set; }
        /// <summary>Azimuth of the antenna at the start of the contact in decimal degrees.</summary>
        float? StartAzimuthDegree { get; set; }
        /// <summary>Spacecraft elevation above the horizon at contact start.</summary>
        float? StartElevationDegree { get; set; }
        /// <summary>Time at which antenna transmit will be disabled (ISO 8601 UTC standard).</summary>
        global::System.DateTime? TxEndTime { get; set; }
        /// <summary>Time at which antenna transmit will be enabled (ISO 8601 UTC standard).</summary>
        global::System.DateTime? TxStartTime { get; set; }

    }
}