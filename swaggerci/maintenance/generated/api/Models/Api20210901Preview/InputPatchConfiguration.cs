// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.Extensions;

    /// <summary>Input configuration for a patch run</summary>
    public partial class InputPatchConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfiguration,
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal
    {

        /// <summary>Backing field for <see cref="LinuxParameter" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputLinuxParameters _linuxParameter;

        /// <summary>
        /// Input parameters specific to patching Linux machine. For Windows machines, do not pass this property.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputLinuxParameters LinuxParameter { get => (this._linuxParameter = this._linuxParameter ?? new Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.InputLinuxParameters()); set => this._linuxParameter = value; }

        /// <summary>Classification category of patches to be patched</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Inlined)]
        public string[] LinuxParameterClassificationsToInclude { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputLinuxParametersInternal)LinuxParameter).ClassificationsToInclude; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputLinuxParametersInternal)LinuxParameter).ClassificationsToInclude = value ?? null /* arrayOf */; }

        /// <summary>Package names to be excluded for patching.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Inlined)]
        public string[] LinuxParameterPackageNameMasksToExclude { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputLinuxParametersInternal)LinuxParameter).PackageNameMasksToExclude; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputLinuxParametersInternal)LinuxParameter).PackageNameMasksToExclude = value ?? null /* arrayOf */; }

        /// <summary>Package names to be included for patching.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Inlined)]
        public string[] LinuxParameterPackageNameMasksToInclude { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputLinuxParametersInternal)LinuxParameter).PackageNameMasksToInclude; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputLinuxParametersInternal)LinuxParameter).PackageNameMasksToInclude = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for LinuxParameter</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputLinuxParameters Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal.LinuxParameter { get => (this._linuxParameter = this._linuxParameter ?? new Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.InputLinuxParameters()); set { {_linuxParameter = value;} } }

        /// <summary>Internal Acessors for Task</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.ISoftwareUpdateConfigurationTasks Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal.Task { get => (this._task = this._task ?? new Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.SoftwareUpdateConfigurationTasks()); set { {_task = value;} } }

        /// <summary>Internal Acessors for WindowsParameter</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputWindowsParameters Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal.WindowsParameter { get => (this._windowsParameter = this._windowsParameter ?? new Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.InputWindowsParameters()); set { {_windowsParameter = value;} } }

        /// <summary>Backing field for <see cref="RebootSetting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Support.RebootOptions? _rebootSetting;

        /// <summary>
        /// Possible reboot preference as defined by the user based on which it would be decided to reboot the machine or not after
        /// the patch operation is completed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Support.RebootOptions? RebootSetting { get => this._rebootSetting; set => this._rebootSetting = value; }

        /// <summary>Backing field for <see cref="Task" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.ISoftwareUpdateConfigurationTasks _task;

        /// <summary>Tasks information for the Software update configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.ISoftwareUpdateConfigurationTasks Task { get => (this._task = this._task ?? new Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.SoftwareUpdateConfigurationTasks()); set => this._task = value; }

        /// <summary>
        /// List of post tasks. e.g. [{'source' :'runbook', 'taskScope': 'Resource', 'parameters': { 'arg1': 'value1'}}]
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.ITaskProperties[] TaskPostTask { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.ISoftwareUpdateConfigurationTasksInternal)Task).PostTask; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.ISoftwareUpdateConfigurationTasksInternal)Task).PostTask = value ?? null /* arrayOf */; }

        /// <summary>
        /// List of pre tasks. e.g. [{'source' :'runbook', 'taskScope': 'Global', 'parameters': { 'arg1': 'value1'}}]
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.ITaskProperties[] TaskPreTask { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.ISoftwareUpdateConfigurationTasksInternal)Task).PreTask; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.ISoftwareUpdateConfigurationTasksInternal)Task).PreTask = value ?? null /* arrayOf */; }

        /// <summary>Classification category of patches to be patched</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Inlined)]
        public string[] WindowParameterClassificationsToInclude { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputWindowsParametersInternal)WindowsParameter).ClassificationsToInclude; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputWindowsParametersInternal)WindowsParameter).ClassificationsToInclude = value ?? null /* arrayOf */; }

        /// <summary>Exclude patches which need reboot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Inlined)]
        public bool? WindowParameterExcludeKbsRequiringReboot { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputWindowsParametersInternal)WindowsParameter).ExcludeKbsRequiringReboot; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputWindowsParametersInternal)WindowsParameter).ExcludeKbsRequiringReboot = value ?? default(bool); }

        /// <summary>Windows KBID to be excluded for patching.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Inlined)]
        public string[] WindowParameterKbNumbersToExclude { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputWindowsParametersInternal)WindowsParameter).KbNumbersToExclude; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputWindowsParametersInternal)WindowsParameter).KbNumbersToExclude = value ?? null /* arrayOf */; }

        /// <summary>Windows KBID to be included for patching.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Inlined)]
        public string[] WindowParameterKbNumbersToInclude { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputWindowsParametersInternal)WindowsParameter).KbNumbersToInclude; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputWindowsParametersInternal)WindowsParameter).KbNumbersToInclude = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="WindowsParameter" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputWindowsParameters _windowsParameter;

        /// <summary>
        /// Input parameters specific to patching a Windows machine. For Linux machines, do not pass this property.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputWindowsParameters WindowsParameter { get => (this._windowsParameter = this._windowsParameter ?? new Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.InputWindowsParameters()); set => this._windowsParameter = value; }

        /// <summary>Creates an new <see cref="InputPatchConfiguration" /> instance.</summary>
        public InputPatchConfiguration()
        {

        }
    }
    /// Input configuration for a patch run
    public partial interface IInputPatchConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.IJsonSerializable
    {
        /// <summary>Classification category of patches to be patched</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Classification category of patches to be patched",
        SerializedName = @"classificationsToInclude",
        PossibleTypes = new [] { typeof(string) })]
        string[] LinuxParameterClassificationsToInclude { get; set; }
        /// <summary>Package names to be excluded for patching.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Package names to be excluded for patching.",
        SerializedName = @"packageNameMasksToExclude",
        PossibleTypes = new [] { typeof(string) })]
        string[] LinuxParameterPackageNameMasksToExclude { get; set; }
        /// <summary>Package names to be included for patching.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Package names to be included for patching.",
        SerializedName = @"packageNameMasksToInclude",
        PossibleTypes = new [] { typeof(string) })]
        string[] LinuxParameterPackageNameMasksToInclude { get; set; }
        /// <summary>
        /// Possible reboot preference as defined by the user based on which it would be decided to reboot the machine or not after
        /// the patch operation is completed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Possible reboot preference as defined by the user based on which it would be decided to reboot the machine or not after the patch operation is completed.",
        SerializedName = @"rebootSetting",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Support.RebootOptions) })]
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Support.RebootOptions? RebootSetting { get; set; }
        /// <summary>
        /// List of post tasks. e.g. [{'source' :'runbook', 'taskScope': 'Resource', 'parameters': { 'arg1': 'value1'}}]
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of post tasks. e.g. [{'source' :'runbook', 'taskScope': 'Resource', 'parameters': { 'arg1': 'value1'}}]",
        SerializedName = @"postTasks",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.ITaskProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.ITaskProperties[] TaskPostTask { get; set; }
        /// <summary>
        /// List of pre tasks. e.g. [{'source' :'runbook', 'taskScope': 'Global', 'parameters': { 'arg1': 'value1'}}]
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of pre tasks. e.g. [{'source' :'runbook', 'taskScope': 'Global', 'parameters': { 'arg1': 'value1'}}]",
        SerializedName = @"preTasks",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.ITaskProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.ITaskProperties[] TaskPreTask { get; set; }
        /// <summary>Classification category of patches to be patched</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Classification category of patches to be patched",
        SerializedName = @"classificationsToInclude",
        PossibleTypes = new [] { typeof(string) })]
        string[] WindowParameterClassificationsToInclude { get; set; }
        /// <summary>Exclude patches which need reboot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Exclude patches which need reboot",
        SerializedName = @"excludeKbsRequiringReboot",
        PossibleTypes = new [] { typeof(bool) })]
        bool? WindowParameterExcludeKbsRequiringReboot { get; set; }
        /// <summary>Windows KBID to be excluded for patching.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Windows KBID to be excluded for patching.",
        SerializedName = @"kbNumbersToExclude",
        PossibleTypes = new [] { typeof(string) })]
        string[] WindowParameterKbNumbersToExclude { get; set; }
        /// <summary>Windows KBID to be included for patching.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Windows KBID to be included for patching.",
        SerializedName = @"kbNumbersToInclude",
        PossibleTypes = new [] { typeof(string) })]
        string[] WindowParameterKbNumbersToInclude { get; set; }

    }
    /// Input configuration for a patch run
    internal partial interface IInputPatchConfigurationInternal

    {
        /// <summary>
        /// Input parameters specific to patching Linux machine. For Windows machines, do not pass this property.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputLinuxParameters LinuxParameter { get; set; }
        /// <summary>Classification category of patches to be patched</summary>
        string[] LinuxParameterClassificationsToInclude { get; set; }
        /// <summary>Package names to be excluded for patching.</summary>
        string[] LinuxParameterPackageNameMasksToExclude { get; set; }
        /// <summary>Package names to be included for patching.</summary>
        string[] LinuxParameterPackageNameMasksToInclude { get; set; }
        /// <summary>
        /// Possible reboot preference as defined by the user based on which it would be decided to reboot the machine or not after
        /// the patch operation is completed.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Support.RebootOptions? RebootSetting { get; set; }
        /// <summary>Tasks information for the Software update configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.ISoftwareUpdateConfigurationTasks Task { get; set; }
        /// <summary>
        /// List of post tasks. e.g. [{'source' :'runbook', 'taskScope': 'Resource', 'parameters': { 'arg1': 'value1'}}]
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.ITaskProperties[] TaskPostTask { get; set; }
        /// <summary>
        /// List of pre tasks. e.g. [{'source' :'runbook', 'taskScope': 'Global', 'parameters': { 'arg1': 'value1'}}]
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.ITaskProperties[] TaskPreTask { get; set; }
        /// <summary>Classification category of patches to be patched</summary>
        string[] WindowParameterClassificationsToInclude { get; set; }
        /// <summary>Exclude patches which need reboot</summary>
        bool? WindowParameterExcludeKbsRequiringReboot { get; set; }
        /// <summary>Windows KBID to be excluded for patching.</summary>
        string[] WindowParameterKbNumbersToExclude { get; set; }
        /// <summary>Windows KBID to be included for patching.</summary>
        string[] WindowParameterKbNumbersToInclude { get; set; }
        /// <summary>
        /// Input parameters specific to patching a Windows machine. For Linux machines, do not pass this property.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputWindowsParameters WindowsParameter { get; set; }

    }
}