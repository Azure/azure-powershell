// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview
{
    using Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.PowerShell;

    /// <summary>Input configuration for a patch run</summary>
    [System.ComponentModel.TypeConverter(typeof(InputPatchConfigurationTypeConverter))]
    public partial class InputPatchConfiguration
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.InputPatchConfiguration"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfiguration"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfiguration DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new InputPatchConfiguration(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.InputPatchConfiguration"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfiguration"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfiguration DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new InputPatchConfiguration(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="InputPatchConfiguration" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="InputPatchConfiguration" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfiguration FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.InputPatchConfiguration"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal InputPatchConfiguration(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("WindowsParameter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).WindowsParameter = (Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputWindowsParameters) content.GetValueForProperty("WindowsParameter",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).WindowsParameter, Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.InputWindowsParametersTypeConverter.ConvertFrom);
            }
            if (content.Contains("LinuxParameter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).LinuxParameter = (Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputLinuxParameters) content.GetValueForProperty("LinuxParameter",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).LinuxParameter, Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.InputLinuxParametersTypeConverter.ConvertFrom);
            }
            if (content.Contains("Task"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).Task = (Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.ISoftwareUpdateConfigurationTasks) content.GetValueForProperty("Task",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).Task, Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.SoftwareUpdateConfigurationTasksTypeConverter.ConvertFrom);
            }
            if (content.Contains("RebootSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).RebootSetting = (Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Support.RebootOptions?) content.GetValueForProperty("RebootSetting",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).RebootSetting, Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Support.RebootOptions.CreateFrom);
            }
            if (content.Contains("WindowParameterKbNumbersToExclude"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).WindowParameterKbNumbersToExclude = (string[]) content.GetValueForProperty("WindowParameterKbNumbersToExclude",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).WindowParameterKbNumbersToExclude, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("WindowParameterKbNumbersToInclude"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).WindowParameterKbNumbersToInclude = (string[]) content.GetValueForProperty("WindowParameterKbNumbersToInclude",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).WindowParameterKbNumbersToInclude, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("WindowParameterClassificationsToInclude"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).WindowParameterClassificationsToInclude = (string[]) content.GetValueForProperty("WindowParameterClassificationsToInclude",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).WindowParameterClassificationsToInclude, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("WindowParameterExcludeKbsRequiringReboot"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).WindowParameterExcludeKbsRequiringReboot = (bool?) content.GetValueForProperty("WindowParameterExcludeKbsRequiringReboot",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).WindowParameterExcludeKbsRequiringReboot, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LinuxParameterPackageNameMasksToExclude"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).LinuxParameterPackageNameMasksToExclude = (string[]) content.GetValueForProperty("LinuxParameterPackageNameMasksToExclude",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).LinuxParameterPackageNameMasksToExclude, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("LinuxParameterPackageNameMasksToInclude"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).LinuxParameterPackageNameMasksToInclude = (string[]) content.GetValueForProperty("LinuxParameterPackageNameMasksToInclude",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).LinuxParameterPackageNameMasksToInclude, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("LinuxParameterClassificationsToInclude"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).LinuxParameterClassificationsToInclude = (string[]) content.GetValueForProperty("LinuxParameterClassificationsToInclude",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).LinuxParameterClassificationsToInclude, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("TaskPreTask"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).TaskPreTask = (Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.ITaskProperties[]) content.GetValueForProperty("TaskPreTask",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).TaskPreTask, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.ITaskProperties>(__y, Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.TaskPropertiesTypeConverter.ConvertFrom));
            }
            if (content.Contains("TaskPostTask"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).TaskPostTask = (Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.ITaskProperties[]) content.GetValueForProperty("TaskPostTask",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).TaskPostTask, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.ITaskProperties>(__y, Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.TaskPropertiesTypeConverter.ConvertFrom));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.InputPatchConfiguration"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal InputPatchConfiguration(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("WindowsParameter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).WindowsParameter = (Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputWindowsParameters) content.GetValueForProperty("WindowsParameter",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).WindowsParameter, Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.InputWindowsParametersTypeConverter.ConvertFrom);
            }
            if (content.Contains("LinuxParameter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).LinuxParameter = (Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputLinuxParameters) content.GetValueForProperty("LinuxParameter",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).LinuxParameter, Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.InputLinuxParametersTypeConverter.ConvertFrom);
            }
            if (content.Contains("Task"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).Task = (Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.ISoftwareUpdateConfigurationTasks) content.GetValueForProperty("Task",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).Task, Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.SoftwareUpdateConfigurationTasksTypeConverter.ConvertFrom);
            }
            if (content.Contains("RebootSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).RebootSetting = (Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Support.RebootOptions?) content.GetValueForProperty("RebootSetting",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).RebootSetting, Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Support.RebootOptions.CreateFrom);
            }
            if (content.Contains("WindowParameterKbNumbersToExclude"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).WindowParameterKbNumbersToExclude = (string[]) content.GetValueForProperty("WindowParameterKbNumbersToExclude",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).WindowParameterKbNumbersToExclude, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("WindowParameterKbNumbersToInclude"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).WindowParameterKbNumbersToInclude = (string[]) content.GetValueForProperty("WindowParameterKbNumbersToInclude",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).WindowParameterKbNumbersToInclude, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("WindowParameterClassificationsToInclude"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).WindowParameterClassificationsToInclude = (string[]) content.GetValueForProperty("WindowParameterClassificationsToInclude",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).WindowParameterClassificationsToInclude, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("WindowParameterExcludeKbsRequiringReboot"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).WindowParameterExcludeKbsRequiringReboot = (bool?) content.GetValueForProperty("WindowParameterExcludeKbsRequiringReboot",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).WindowParameterExcludeKbsRequiringReboot, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LinuxParameterPackageNameMasksToExclude"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).LinuxParameterPackageNameMasksToExclude = (string[]) content.GetValueForProperty("LinuxParameterPackageNameMasksToExclude",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).LinuxParameterPackageNameMasksToExclude, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("LinuxParameterPackageNameMasksToInclude"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).LinuxParameterPackageNameMasksToInclude = (string[]) content.GetValueForProperty("LinuxParameterPackageNameMasksToInclude",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).LinuxParameterPackageNameMasksToInclude, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("LinuxParameterClassificationsToInclude"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).LinuxParameterClassificationsToInclude = (string[]) content.GetValueForProperty("LinuxParameterClassificationsToInclude",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).LinuxParameterClassificationsToInclude, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("TaskPreTask"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).TaskPreTask = (Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.ITaskProperties[]) content.GetValueForProperty("TaskPreTask",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).TaskPreTask, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.ITaskProperties>(__y, Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.TaskPropertiesTypeConverter.ConvertFrom));
            }
            if (content.Contains("TaskPostTask"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).TaskPostTask = (Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.ITaskProperties[]) content.GetValueForProperty("TaskPostTask",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputPatchConfigurationInternal)this).TaskPostTask, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.ITaskProperties>(__y, Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.TaskPropertiesTypeConverter.ConvertFrom));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Input configuration for a patch run
    [System.ComponentModel.TypeConverter(typeof(InputPatchConfigurationTypeConverter))]
    public partial interface IInputPatchConfiguration

    {

    }
}