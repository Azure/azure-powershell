// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.Extensions;

    /// <summary>Input properties for patching a Linux machine.</summary>
    public partial class InputLinuxParameters :
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputLinuxParameters,
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20210901Preview.IInputLinuxParametersInternal
    {

        /// <summary>Backing field for <see cref="ClassificationsToInclude" /> property.</summary>
        private string[] _classificationsToInclude;

        /// <summary>Classification category of patches to be patched</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Owned)]
        public string[] ClassificationsToInclude { get => this._classificationsToInclude; set => this._classificationsToInclude = value; }

        /// <summary>Backing field for <see cref="PackageNameMasksToExclude" /> property.</summary>
        private string[] _packageNameMasksToExclude;

        /// <summary>Package names to be excluded for patching.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Owned)]
        public string[] PackageNameMasksToExclude { get => this._packageNameMasksToExclude; set => this._packageNameMasksToExclude = value; }

        /// <summary>Backing field for <see cref="PackageNameMasksToInclude" /> property.</summary>
        private string[] _packageNameMasksToInclude;

        /// <summary>Package names to be included for patching.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Owned)]
        public string[] PackageNameMasksToInclude { get => this._packageNameMasksToInclude; set => this._packageNameMasksToInclude = value; }

        /// <summary>Creates an new <see cref="InputLinuxParameters" /> instance.</summary>
        public InputLinuxParameters()
        {

        }
    }
    /// Input properties for patching a Linux machine.
    public partial interface IInputLinuxParameters :
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.IJsonSerializable
    {
        /// <summary>Classification category of patches to be patched</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Classification category of patches to be patched",
        SerializedName = @"classificationsToInclude",
        PossibleTypes = new [] { typeof(string) })]
        string[] ClassificationsToInclude { get; set; }
        /// <summary>Package names to be excluded for patching.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Package names to be excluded for patching.",
        SerializedName = @"packageNameMasksToExclude",
        PossibleTypes = new [] { typeof(string) })]
        string[] PackageNameMasksToExclude { get; set; }
        /// <summary>Package names to be included for patching.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Package names to be included for patching.",
        SerializedName = @"packageNameMasksToInclude",
        PossibleTypes = new [] { typeof(string) })]
        string[] PackageNameMasksToInclude { get; set; }

    }
    /// Input properties for patching a Linux machine.
    internal partial interface IInputLinuxParametersInternal

    {
        /// <summary>Classification category of patches to be patched</summary>
        string[] ClassificationsToInclude { get; set; }
        /// <summary>Package names to be excluded for patching.</summary>
        string[] PackageNameMasksToExclude { get; set; }
        /// <summary>Package names to be included for patching.</summary>
        string[] PackageNameMasksToInclude { get; set; }

    }
}