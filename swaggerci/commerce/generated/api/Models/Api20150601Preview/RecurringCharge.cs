// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Usage.Runtime.Extensions;

    /// <summary>Indicates a recurring charge is present for this offer.</summary>
    public partial class RecurringCharge :
        Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IRecurringCharge,
        Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IRecurringChargeInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Usage.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IOfferTermInfo1"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IOfferTermInfo1 __offerTermInfo1 = new Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.OfferTermInfo1();

        /// <summary>Indicates the date from which the offer term is effective.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Usage.PropertyOrigin.Inherited)]
        public global::System.DateTime? EffectiveDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IOfferTermInfo1Internal)__offerTermInfo1).EffectiveDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IOfferTermInfo1Internal)__offerTermInfo1).EffectiveDate = value ?? default(global::System.DateTime); }

        /// <summary>Name of the offer term</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Usage.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Usage.Support.OfferTermInfo Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IOfferTermInfo1Internal)__offerTermInfo1).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IOfferTermInfo1Internal)__offerTermInfo1).Name = value ; }

        /// <summary>Backing field for <see cref="RecurringCharge1" /> property.</summary>
        private int? _recurringCharge1;

        /// <summary>The amount of recurring charge as per the offer term.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Usage.PropertyOrigin.Owned)]
        public int? RecurringCharge1 { get => this._recurringCharge1; set => this._recurringCharge1 = value; }

        /// <summary>Creates an new <see cref="RecurringCharge" /> instance.</summary>
        public RecurringCharge()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Usage.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Usage.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__offerTermInfo1), __offerTermInfo1);
            await eventListener.AssertObjectIsValid(nameof(__offerTermInfo1), __offerTermInfo1);
        }
    }
    /// Indicates a recurring charge is present for this offer.
    public partial interface IRecurringCharge :
        Microsoft.Azure.PowerShell.Cmdlets.Usage.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IOfferTermInfo1
    {
        /// <summary>The amount of recurring charge as per the offer term.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The amount of recurring charge as per the offer term.",
        SerializedName = @"RecurringCharge",
        PossibleTypes = new [] { typeof(int) })]
        int? RecurringCharge1 { get; set; }

    }
    /// Indicates a recurring charge is present for this offer.
    internal partial interface IRecurringChargeInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IOfferTermInfo1Internal
    {
        /// <summary>The amount of recurring charge as per the offer term.</summary>
        int? RecurringCharge1 { get; set; }

    }
}