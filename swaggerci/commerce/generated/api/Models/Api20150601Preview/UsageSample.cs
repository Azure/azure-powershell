// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Usage.Runtime.Extensions;

    /// <summary>Describes a sample of the usageAggregation.</summary>
    public partial class UsageSample :
        Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IUsageSample,
        Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IUsageSampleInternal
    {

        /// <summary>Backing field for <see cref="InfoField" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IInfoField _infoField;

        /// <summary>Key-value pairs of instance details (legacy format).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Usage.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IInfoField InfoField { get => (this._infoField = this._infoField ?? new Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.InfoField()); set => this._infoField = value; }

        /// <summary>Identifies the name of the instance provisioned by the user.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Usage.PropertyOrigin.Inlined)]
        public string InfoFieldProject { get => ((Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IInfoFieldInternal)InfoField).Project; set => ((Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IInfoFieldInternal)InfoField).Project = value ?? null; }

        /// <summary>Backing field for <see cref="InstanceData" /> property.</summary>
        private string _instanceData;

        /// <summary>Key-value pairs of instance details represented as a string.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Usage.PropertyOrigin.Owned)]
        public string InstanceData { get => this._instanceData; set => this._instanceData = value; }

        /// <summary>Backing field for <see cref="MeterCategory" /> property.</summary>
        private string _meterCategory;

        /// <summary>Category of the consumed resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Usage.PropertyOrigin.Owned)]
        public string MeterCategory { get => this._meterCategory; set => this._meterCategory = value; }

        /// <summary>Backing field for <see cref="MeterId" /> property.</summary>
        private string _meterId;

        /// <summary>Unique ID for the resource that was consumed (aka ResourceID).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Usage.PropertyOrigin.Owned)]
        public string MeterId { get => this._meterId; set => this._meterId = value; }

        /// <summary>Backing field for <see cref="MeterName" /> property.</summary>
        private string _meterName;

        /// <summary>Friendly name of the resource being consumed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Usage.PropertyOrigin.Owned)]
        public string MeterName { get => this._meterName; set => this._meterName = value; }

        /// <summary>Backing field for <see cref="MeterRegion" /> property.</summary>
        private string _meterRegion;

        /// <summary>Region of the meterId used for billing purposes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Usage.PropertyOrigin.Owned)]
        public string MeterRegion { get => this._meterRegion; set => this._meterRegion = value; }

        /// <summary>Backing field for <see cref="MeterSubCategory" /> property.</summary>
        private string _meterSubCategory;

        /// <summary>Sub-category of the consumed resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Usage.PropertyOrigin.Owned)]
        public string MeterSubCategory { get => this._meterSubCategory; set => this._meterSubCategory = value; }

        /// <summary>Internal Acessors for InfoField</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IInfoField Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IUsageSampleInternal.InfoField { get => (this._infoField = this._infoField ?? new Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.InfoField()); set { {_infoField = value;} } }

        /// <summary>Backing field for <see cref="Quantity" /> property.</summary>
        private float? _quantity;

        /// <summary>The amount of the resource consumption that occurred in this time frame.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Usage.PropertyOrigin.Owned)]
        public float? Quantity { get => this._quantity; set => this._quantity = value; }

        /// <summary>Backing field for <see cref="SubscriptionId" /> property.</summary>
        private string _subscriptionId;

        /// <summary>The subscription identifier for the Azure user.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Usage.PropertyOrigin.Owned)]
        public string SubscriptionId { get => this._subscriptionId; set => this._subscriptionId = value; }

        /// <summary>Backing field for <see cref="Unit" /> property.</summary>
        private string _unit;

        /// <summary>The unit in which the usage for this resource is being counted, e.g. Hours, GB.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Usage.PropertyOrigin.Owned)]
        public string Unit { get => this._unit; set => this._unit = value; }

        /// <summary>Backing field for <see cref="UsageEndTime" /> property.</summary>
        private global::System.DateTime? _usageEndTime;

        /// <summary>UTC end time for the usage bucket to which this usage aggregate belongs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Usage.PropertyOrigin.Owned)]
        public global::System.DateTime? UsageEndTime { get => this._usageEndTime; set => this._usageEndTime = value; }

        /// <summary>Backing field for <see cref="UsageStartTime" /> property.</summary>
        private global::System.DateTime? _usageStartTime;

        /// <summary>UTC start time for the usage bucket to which this usage aggregate belongs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Usage.PropertyOrigin.Owned)]
        public global::System.DateTime? UsageStartTime { get => this._usageStartTime; set => this._usageStartTime = value; }

        /// <summary>Creates an new <see cref="UsageSample" /> instance.</summary>
        public UsageSample()
        {

        }
    }
    /// Describes a sample of the usageAggregation.
    public partial interface IUsageSample :
        Microsoft.Azure.PowerShell.Cmdlets.Usage.Runtime.IJsonSerializable
    {
        /// <summary>Identifies the name of the instance provisioned by the user.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Identifies the name of the instance provisioned by the user.",
        SerializedName = @"project",
        PossibleTypes = new [] { typeof(string) })]
        string InfoFieldProject { get; set; }
        /// <summary>Key-value pairs of instance details represented as a string.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Key-value pairs of instance details represented as a string.",
        SerializedName = @"instanceData",
        PossibleTypes = new [] { typeof(string) })]
        string InstanceData { get; set; }
        /// <summary>Category of the consumed resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Category of the consumed resource.",
        SerializedName = @"meterCategory",
        PossibleTypes = new [] { typeof(string) })]
        string MeterCategory { get; set; }
        /// <summary>Unique ID for the resource that was consumed (aka ResourceID).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Unique ID for the resource that was consumed (aka ResourceID).",
        SerializedName = @"meterId",
        PossibleTypes = new [] { typeof(string) })]
        string MeterId { get; set; }
        /// <summary>Friendly name of the resource being consumed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Friendly name of the resource being consumed.",
        SerializedName = @"meterName",
        PossibleTypes = new [] { typeof(string) })]
        string MeterName { get; set; }
        /// <summary>Region of the meterId used for billing purposes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Region of the meterId used for billing purposes",
        SerializedName = @"meterRegion",
        PossibleTypes = new [] { typeof(string) })]
        string MeterRegion { get; set; }
        /// <summary>Sub-category of the consumed resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Sub-category of the consumed resource.",
        SerializedName = @"meterSubCategory",
        PossibleTypes = new [] { typeof(string) })]
        string MeterSubCategory { get; set; }
        /// <summary>The amount of the resource consumption that occurred in this time frame.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The amount of the resource consumption that occurred in this time frame.",
        SerializedName = @"quantity",
        PossibleTypes = new [] { typeof(float) })]
        float? Quantity { get; set; }
        /// <summary>The subscription identifier for the Azure user.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The subscription identifier for the Azure user.",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionId { get; set; }
        /// <summary>The unit in which the usage for this resource is being counted, e.g. Hours, GB.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The unit in which the usage for this resource is being counted, e.g. Hours, GB.",
        SerializedName = @"unit",
        PossibleTypes = new [] { typeof(string) })]
        string Unit { get; set; }
        /// <summary>UTC end time for the usage bucket to which this usage aggregate belongs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"UTC end time for the usage bucket to which this usage aggregate belongs.",
        SerializedName = @"usageEndTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? UsageEndTime { get; set; }
        /// <summary>UTC start time for the usage bucket to which this usage aggregate belongs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"UTC start time for the usage bucket to which this usage aggregate belongs.",
        SerializedName = @"usageStartTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? UsageStartTime { get; set; }

    }
    /// Describes a sample of the usageAggregation.
    internal partial interface IUsageSampleInternal

    {
        /// <summary>Key-value pairs of instance details (legacy format).</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IInfoField InfoField { get; set; }
        /// <summary>Identifies the name of the instance provisioned by the user.</summary>
        string InfoFieldProject { get; set; }
        /// <summary>Key-value pairs of instance details represented as a string.</summary>
        string InstanceData { get; set; }
        /// <summary>Category of the consumed resource.</summary>
        string MeterCategory { get; set; }
        /// <summary>Unique ID for the resource that was consumed (aka ResourceID).</summary>
        string MeterId { get; set; }
        /// <summary>Friendly name of the resource being consumed.</summary>
        string MeterName { get; set; }
        /// <summary>Region of the meterId used for billing purposes</summary>
        string MeterRegion { get; set; }
        /// <summary>Sub-category of the consumed resource.</summary>
        string MeterSubCategory { get; set; }
        /// <summary>The amount of the resource consumption that occurred in this time frame.</summary>
        float? Quantity { get; set; }
        /// <summary>The subscription identifier for the Azure user.</summary>
        string SubscriptionId { get; set; }
        /// <summary>The unit in which the usage for this resource is being counted, e.g. Hours, GB.</summary>
        string Unit { get; set; }
        /// <summary>UTC end time for the usage bucket to which this usage aggregate belongs.</summary>
        global::System.DateTime? UsageEndTime { get; set; }
        /// <summary>UTC start time for the usage bucket to which this usage aggregate belongs.</summary>
        global::System.DateTime? UsageStartTime { get; set; }

    }
}