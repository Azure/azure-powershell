// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Usage.Runtime.Extensions;

    /// <summary>Describes the usageAggregation.</summary>
    public partial class UsageAggregation :
        Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IUsageAggregation,
        Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IUsageAggregationInternal
    {

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>Unique Id for the usage aggregate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Usage.PropertyOrigin.Owned)]
        public string Id { get => this._id; set => this._id = value; }

        /// <summary>Identifies the name of the instance provisioned by the user.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Usage.PropertyOrigin.Inlined)]
        public string InfoFieldProject { get => ((Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IUsageSampleInternal)Property).InfoFieldProject; set => ((Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IUsageSampleInternal)Property).InfoFieldProject = value ?? null; }

        /// <summary>Key-value pairs of instance details represented as a string.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Usage.PropertyOrigin.Inlined)]
        public string InstanceData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IUsageSampleInternal)Property).InstanceData; set => ((Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IUsageSampleInternal)Property).InstanceData = value ?? null; }

        /// <summary>Category of the consumed resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Usage.PropertyOrigin.Inlined)]
        public string MeterCategory { get => ((Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IUsageSampleInternal)Property).MeterCategory; set => ((Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IUsageSampleInternal)Property).MeterCategory = value ?? null; }

        /// <summary>Unique ID for the resource that was consumed (aka ResourceID).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Usage.PropertyOrigin.Inlined)]
        public string MeterId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IUsageSampleInternal)Property).MeterId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IUsageSampleInternal)Property).MeterId = value ?? null; }

        /// <summary>Friendly name of the resource being consumed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Usage.PropertyOrigin.Inlined)]
        public string MeterName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IUsageSampleInternal)Property).MeterName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IUsageSampleInternal)Property).MeterName = value ?? null; }

        /// <summary>Region of the meterId used for billing purposes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Usage.PropertyOrigin.Inlined)]
        public string MeterRegion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IUsageSampleInternal)Property).MeterRegion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IUsageSampleInternal)Property).MeterRegion = value ?? null; }

        /// <summary>Sub-category of the consumed resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Usage.PropertyOrigin.Inlined)]
        public string MeterSubCategory { get => ((Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IUsageSampleInternal)Property).MeterSubCategory; set => ((Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IUsageSampleInternal)Property).MeterSubCategory = value ?? null; }

        /// <summary>Internal Acessors for InfoField</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IInfoField Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IUsageAggregationInternal.InfoField { get => ((Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IUsageSampleInternal)Property).InfoField; set => ((Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IUsageSampleInternal)Property).InfoField = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IUsageSample Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IUsageAggregationInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.UsageSample()); set { {_property = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Name of the usage aggregate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Usage.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IUsageSample _property;

        /// <summary>Usage data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Usage.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IUsageSample Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.UsageSample()); set => this._property = value; }

        /// <summary>The amount of the resource consumption that occurred in this time frame.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Usage.PropertyOrigin.Inlined)]
        public float? Quantity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IUsageSampleInternal)Property).Quantity; set => ((Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IUsageSampleInternal)Property).Quantity = value ?? default(float); }

        /// <summary>The subscription identifier for the Azure user.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Usage.PropertyOrigin.Inlined)]
        public string SubscriptionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IUsageSampleInternal)Property).SubscriptionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IUsageSampleInternal)Property).SubscriptionId = value ?? null; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>Type of the resource being returned.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Usage.PropertyOrigin.Owned)]
        public string Type { get => this._type; set => this._type = value; }

        /// <summary>The unit in which the usage for this resource is being counted, e.g. Hours, GB.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Usage.PropertyOrigin.Inlined)]
        public string Unit { get => ((Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IUsageSampleInternal)Property).Unit; set => ((Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IUsageSampleInternal)Property).Unit = value ?? null; }

        /// <summary>UTC end time for the usage bucket to which this usage aggregate belongs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Usage.PropertyOrigin.Inlined)]
        public global::System.DateTime? UsageEndTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IUsageSampleInternal)Property).UsageEndTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IUsageSampleInternal)Property).UsageEndTime = value ?? default(global::System.DateTime); }

        /// <summary>UTC start time for the usage bucket to which this usage aggregate belongs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Usage.PropertyOrigin.Inlined)]
        public global::System.DateTime? UsageStartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IUsageSampleInternal)Property).UsageStartTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IUsageSampleInternal)Property).UsageStartTime = value ?? default(global::System.DateTime); }

        /// <summary>Creates an new <see cref="UsageAggregation" /> instance.</summary>
        public UsageAggregation()
        {

        }
    }
    /// Describes the usageAggregation.
    public partial interface IUsageAggregation :
        Microsoft.Azure.PowerShell.Cmdlets.Usage.Runtime.IJsonSerializable
    {
        /// <summary>Unique Id for the usage aggregate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Unique Id for the usage aggregate.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get; set; }
        /// <summary>Identifies the name of the instance provisioned by the user.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Identifies the name of the instance provisioned by the user.",
        SerializedName = @"project",
        PossibleTypes = new [] { typeof(string) })]
        string InfoFieldProject { get; set; }
        /// <summary>Key-value pairs of instance details represented as a string.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Key-value pairs of instance details represented as a string.",
        SerializedName = @"instanceData",
        PossibleTypes = new [] { typeof(string) })]
        string InstanceData { get; set; }
        /// <summary>Category of the consumed resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Category of the consumed resource.",
        SerializedName = @"meterCategory",
        PossibleTypes = new [] { typeof(string) })]
        string MeterCategory { get; set; }
        /// <summary>Unique ID for the resource that was consumed (aka ResourceID).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Unique ID for the resource that was consumed (aka ResourceID).",
        SerializedName = @"meterId",
        PossibleTypes = new [] { typeof(string) })]
        string MeterId { get; set; }
        /// <summary>Friendly name of the resource being consumed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Friendly name of the resource being consumed.",
        SerializedName = @"meterName",
        PossibleTypes = new [] { typeof(string) })]
        string MeterName { get; set; }
        /// <summary>Region of the meterId used for billing purposes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Region of the meterId used for billing purposes",
        SerializedName = @"meterRegion",
        PossibleTypes = new [] { typeof(string) })]
        string MeterRegion { get; set; }
        /// <summary>Sub-category of the consumed resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Sub-category of the consumed resource.",
        SerializedName = @"meterSubCategory",
        PossibleTypes = new [] { typeof(string) })]
        string MeterSubCategory { get; set; }
        /// <summary>Name of the usage aggregate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the usage aggregate.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>The amount of the resource consumption that occurred in this time frame.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The amount of the resource consumption that occurred in this time frame.",
        SerializedName = @"quantity",
        PossibleTypes = new [] { typeof(float) })]
        float? Quantity { get; set; }
        /// <summary>The subscription identifier for the Azure user.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The subscription identifier for the Azure user.",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionId { get; set; }
        /// <summary>Type of the resource being returned.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of the resource being returned.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get; set; }
        /// <summary>The unit in which the usage for this resource is being counted, e.g. Hours, GB.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The unit in which the usage for this resource is being counted, e.g. Hours, GB.",
        SerializedName = @"unit",
        PossibleTypes = new [] { typeof(string) })]
        string Unit { get; set; }
        /// <summary>UTC end time for the usage bucket to which this usage aggregate belongs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"UTC end time for the usage bucket to which this usage aggregate belongs.",
        SerializedName = @"usageEndTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? UsageEndTime { get; set; }
        /// <summary>UTC start time for the usage bucket to which this usage aggregate belongs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"UTC start time for the usage bucket to which this usage aggregate belongs.",
        SerializedName = @"usageStartTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? UsageStartTime { get; set; }

    }
    /// Describes the usageAggregation.
    internal partial interface IUsageAggregationInternal

    {
        /// <summary>Unique Id for the usage aggregate.</summary>
        string Id { get; set; }
        /// <summary>Key-value pairs of instance details (legacy format).</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IInfoField InfoField { get; set; }
        /// <summary>Identifies the name of the instance provisioned by the user.</summary>
        string InfoFieldProject { get; set; }
        /// <summary>Key-value pairs of instance details represented as a string.</summary>
        string InstanceData { get; set; }
        /// <summary>Category of the consumed resource.</summary>
        string MeterCategory { get; set; }
        /// <summary>Unique ID for the resource that was consumed (aka ResourceID).</summary>
        string MeterId { get; set; }
        /// <summary>Friendly name of the resource being consumed.</summary>
        string MeterName { get; set; }
        /// <summary>Region of the meterId used for billing purposes</summary>
        string MeterRegion { get; set; }
        /// <summary>Sub-category of the consumed resource.</summary>
        string MeterSubCategory { get; set; }
        /// <summary>Name of the usage aggregate.</summary>
        string Name { get; set; }
        /// <summary>Usage data.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IUsageSample Property { get; set; }
        /// <summary>The amount of the resource consumption that occurred in this time frame.</summary>
        float? Quantity { get; set; }
        /// <summary>The subscription identifier for the Azure user.</summary>
        string SubscriptionId { get; set; }
        /// <summary>Type of the resource being returned.</summary>
        string Type { get; set; }
        /// <summary>The unit in which the usage for this resource is being counted, e.g. Hours, GB.</summary>
        string Unit { get; set; }
        /// <summary>UTC end time for the usage bucket to which this usage aggregate belongs.</summary>
        global::System.DateTime? UsageEndTime { get; set; }
        /// <summary>UTC start time for the usage bucket to which this usage aggregate belongs.</summary>
        global::System.DateTime? UsageStartTime { get; set; }

    }
}