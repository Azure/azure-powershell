// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Usage.Runtime.Extensions;

    /// <summary>Detailed information about the meter.</summary>
    public partial class MeterInfo :
        Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IMeterInfo,
        Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IMeterInfoInternal
    {

        /// <summary>Backing field for <see cref="EffectiveDate" /> property.</summary>
        private global::System.DateTime? _effectiveDate;

        /// <summary>Indicates the date from which the meter rate is effective.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Usage.PropertyOrigin.Owned)]
        public global::System.DateTime? EffectiveDate { get => this._effectiveDate; set => this._effectiveDate = value; }

        /// <summary>Backing field for <see cref="IncludedQuantity" /> property.</summary>
        private float? _includedQuantity;

        /// <summary>
        /// The resource quantity that is included in the offer at no cost. Consumption beyond this quantity will be charged.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Usage.PropertyOrigin.Owned)]
        public float? IncludedQuantity { get => this._includedQuantity; set => this._includedQuantity = value; }

        /// <summary>Backing field for <see cref="MeterCategory" /> property.</summary>
        private string _meterCategory;

        /// <summary>The category of the meter, e.g., 'Cloud services', 'Networking', etc..</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Usage.PropertyOrigin.Owned)]
        public string MeterCategory { get => this._meterCategory; set => this._meterCategory = value; }

        /// <summary>Backing field for <see cref="MeterId" /> property.</summary>
        private string _meterId;

        /// <summary>The unique identifier of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Usage.PropertyOrigin.Owned)]
        public string MeterId { get => this._meterId; set => this._meterId = value; }

        /// <summary>Backing field for <see cref="MeterName" /> property.</summary>
        private string _meterName;

        /// <summary>The name of the meter, within the given meter category</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Usage.PropertyOrigin.Owned)]
        public string MeterName { get => this._meterName; set => this._meterName = value; }

        /// <summary>Backing field for <see cref="MeterRate" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IMeterInfoMeterRates _meterRate;

        /// <summary>
        /// The list of key/value pairs for the meter rates, in the format 'key':'value' where key = the meter quantity, and value
        /// = the corresponding price
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Usage.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IMeterInfoMeterRates MeterRate { get => (this._meterRate = this._meterRate ?? new Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.MeterInfoMeterRates()); set => this._meterRate = value; }

        /// <summary>Backing field for <see cref="MeterRegion" /> property.</summary>
        private string _meterRegion;

        /// <summary>The region in which the Azure service is available.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Usage.PropertyOrigin.Owned)]
        public string MeterRegion { get => this._meterRegion; set => this._meterRegion = value; }

        /// <summary>Backing field for <see cref="MeterSubCategory" /> property.</summary>
        private string _meterSubCategory;

        /// <summary>
        /// The subcategory of the meter, e.g., 'A6 Cloud services', 'ExpressRoute (IXP)', etc..
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Usage.PropertyOrigin.Owned)]
        public string MeterSubCategory { get => this._meterSubCategory; set => this._meterSubCategory = value; }

        /// <summary>Backing field for <see cref="MeterTag" /> property.</summary>
        private string[] _meterTag;

        /// <summary>
        /// Provides additional meter data. 'Third Party' indicates a meter with no discount. Blanks indicate First Party.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Usage.PropertyOrigin.Owned)]
        public string[] MeterTag { get => this._meterTag; set => this._meterTag = value; }

        /// <summary>Backing field for <see cref="Unit" /> property.</summary>
        private string _unit;

        /// <summary>The unit in which the meter consumption is charged, e.g., 'Hours', 'GB', etc.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Usage.PropertyOrigin.Owned)]
        public string Unit { get => this._unit; set => this._unit = value; }

        /// <summary>Creates an new <see cref="MeterInfo" /> instance.</summary>
        public MeterInfo()
        {

        }
    }
    /// Detailed information about the meter.
    public partial interface IMeterInfo :
        Microsoft.Azure.PowerShell.Cmdlets.Usage.Runtime.IJsonSerializable
    {
        /// <summary>Indicates the date from which the meter rate is effective.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates the date from which the meter rate is effective.",
        SerializedName = @"EffectiveDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? EffectiveDate { get; set; }
        /// <summary>
        /// The resource quantity that is included in the offer at no cost. Consumption beyond this quantity will be charged.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource quantity that is included in the offer at no cost. Consumption beyond this quantity will be charged.",
        SerializedName = @"IncludedQuantity",
        PossibleTypes = new [] { typeof(float) })]
        float? IncludedQuantity { get; set; }
        /// <summary>The category of the meter, e.g., 'Cloud services', 'Networking', etc..</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The category of the meter, e.g., 'Cloud services', 'Networking', etc..",
        SerializedName = @"MeterCategory",
        PossibleTypes = new [] { typeof(string) })]
        string MeterCategory { get; set; }
        /// <summary>The unique identifier of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The unique identifier of the resource.",
        SerializedName = @"MeterId",
        PossibleTypes = new [] { typeof(string) })]
        string MeterId { get; set; }
        /// <summary>The name of the meter, within the given meter category</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the meter, within the given meter category",
        SerializedName = @"MeterName",
        PossibleTypes = new [] { typeof(string) })]
        string MeterName { get; set; }
        /// <summary>
        /// The list of key/value pairs for the meter rates, in the format 'key':'value' where key = the meter quantity, and value
        /// = the corresponding price
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of key/value pairs for the meter rates, in the format 'key':'value' where key = the meter quantity, and value = the corresponding price",
        SerializedName = @"MeterRates",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IMeterInfoMeterRates) })]
        Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IMeterInfoMeterRates MeterRate { get; set; }
        /// <summary>The region in which the Azure service is available.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The region in which the Azure service is available.",
        SerializedName = @"MeterRegion",
        PossibleTypes = new [] { typeof(string) })]
        string MeterRegion { get; set; }
        /// <summary>
        /// The subcategory of the meter, e.g., 'A6 Cloud services', 'ExpressRoute (IXP)', etc..
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The subcategory of the meter, e.g., 'A6 Cloud services', 'ExpressRoute (IXP)', etc..",
        SerializedName = @"MeterSubCategory",
        PossibleTypes = new [] { typeof(string) })]
        string MeterSubCategory { get; set; }
        /// <summary>
        /// Provides additional meter data. 'Third Party' indicates a meter with no discount. Blanks indicate First Party.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Provides additional meter data. 'Third Party' indicates a meter with no discount. Blanks indicate First Party.",
        SerializedName = @"MeterTags",
        PossibleTypes = new [] { typeof(string) })]
        string[] MeterTag { get; set; }
        /// <summary>The unit in which the meter consumption is charged, e.g., 'Hours', 'GB', etc.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Usage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The unit in which the meter consumption is charged, e.g., 'Hours', 'GB', etc.",
        SerializedName = @"Unit",
        PossibleTypes = new [] { typeof(string) })]
        string Unit { get; set; }

    }
    /// Detailed information about the meter.
    internal partial interface IMeterInfoInternal

    {
        /// <summary>Indicates the date from which the meter rate is effective.</summary>
        global::System.DateTime? EffectiveDate { get; set; }
        /// <summary>
        /// The resource quantity that is included in the offer at no cost. Consumption beyond this quantity will be charged.
        /// </summary>
        float? IncludedQuantity { get; set; }
        /// <summary>The category of the meter, e.g., 'Cloud services', 'Networking', etc..</summary>
        string MeterCategory { get; set; }
        /// <summary>The unique identifier of the resource.</summary>
        string MeterId { get; set; }
        /// <summary>The name of the meter, within the given meter category</summary>
        string MeterName { get; set; }
        /// <summary>
        /// The list of key/value pairs for the meter rates, in the format 'key':'value' where key = the meter quantity, and value
        /// = the corresponding price
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Usage.Models.Api20150601Preview.IMeterInfoMeterRates MeterRate { get; set; }
        /// <summary>The region in which the Azure service is available.</summary>
        string MeterRegion { get; set; }
        /// <summary>
        /// The subcategory of the meter, e.g., 'A6 Cloud services', 'ExpressRoute (IXP)', etc..
        /// </summary>
        string MeterSubCategory { get; set; }
        /// <summary>
        /// Provides additional meter data. 'Third Party' indicates a meter with no discount. Blanks indicate First Party.
        /// </summary>
        string[] MeterTag { get; set; }
        /// <summary>The unit in which the meter consumption is charged, e.g., 'Hours', 'GB', etc.</summary>
        string Unit { get; set; }

    }
}