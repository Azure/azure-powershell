// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601
{
    using static Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Extensions;

    /// <summary>
    /// Describes a DNS record set (a collection of DNS records with the same name and type) in a Private DNS zone.
    /// </summary>
    public partial class RecordSet :
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSet,
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetInternal,
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.Resource();

        /// <summary>The list of A records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IARecord[] ARecord { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesInternal)Property).ARecord; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesInternal)Property).ARecord = value ?? null /* arrayOf */; }

        /// <summary>The list of AAAA records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IAaaaRecord[] AaaaRecord { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesInternal)Property).AaaaRecord; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesInternal)Property).AaaaRecord = value ?? null /* arrayOf */; }

        /// <summary>The canonical name for this CNAME record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Inlined)]
        public string CnameRecordCname { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesInternal)Property).CnameRecordCname; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesInternal)Property).CnameRecordCname = value ?? null; }

        /// <summary>Backing field for <see cref="Etag" /> property.</summary>
        private string _etag;

        /// <summary>The ETag of the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Owned)]
        public string Etag { get => this._etag; set => this._etag = value; }

        /// <summary>Fully qualified domain name of the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Inlined)]
        public string Fqdn { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesInternal)Property).Fqdn; }

        /// <summary>
        /// Fully qualified resource Id for the resource. Example - '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones/{privateDnsZoneName}'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IResourceInternal)__resource).Id; }

        /// <summary>
        /// Is the record set auto-registered in the Private DNS zone through a virtual network link?
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Inlined)]
        public bool? IsAutoRegistered { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesInternal)Property).IsAutoRegistered; }

        /// <summary>The metadata attached to the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesMetadata Metadata { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesInternal)Property).Metadata; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesInternal)Property).Metadata = value ?? null /* model class */; }

        /// <summary>Internal Acessors for CnameRecord</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ICnameRecord Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetInternal.CnameRecord { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesInternal)Property).CnameRecord; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesInternal)Property).CnameRecord = value; }

        /// <summary>Internal Acessors for Fqdn</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetInternal.Fqdn { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesInternal)Property).Fqdn; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesInternal)Property).Fqdn = value; }

        /// <summary>Internal Acessors for IsAutoRegistered</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetInternal.IsAutoRegistered { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesInternal)Property).IsAutoRegistered; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesInternal)Property).IsAutoRegistered = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetProperties Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.RecordSetProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for SoaRecord</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ISoaRecord Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetInternal.SoaRecord { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesInternal)Property).SoaRecord; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesInternal)Property).SoaRecord = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IResourceInternal)__resource).Type = value; }

        /// <summary>The list of MX records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IMxRecord[] MxRecord { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesInternal)Property).MxRecord; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesInternal)Property).MxRecord = value ?? null /* arrayOf */; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IResourceInternal)__resource).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetProperties _property;

        /// <summary>The properties of the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.RecordSetProperties()); set => this._property = value; }

        /// <summary>The list of PTR records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IPtrRecord[] PtrRecord { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesInternal)Property).PtrRecord; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesInternal)Property).PtrRecord = value ?? null /* arrayOf */; }

        /// <summary>The email contact for this SOA record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Inlined)]
        public string SoaRecordEmail { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesInternal)Property).SoaRecordEmail; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesInternal)Property).SoaRecordEmail = value ?? null; }

        /// <summary>The expire time for this SOA record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Inlined)]
        public long? SoaRecordExpireTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesInternal)Property).SoaRecordExpireTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesInternal)Property).SoaRecordExpireTime = value ?? default(long); }

        /// <summary>The domain name of the authoritative name server for this SOA record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Inlined)]
        public string SoaRecordHost { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesInternal)Property).SoaRecordHost; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesInternal)Property).SoaRecordHost = value ?? null; }

        /// <summary>
        /// The minimum value for this SOA record. By convention this is used to determine the negative caching duration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Inlined)]
        public long? SoaRecordMinimumTtl { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesInternal)Property).SoaRecordMinimumTtl; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesInternal)Property).SoaRecordMinimumTtl = value ?? default(long); }

        /// <summary>The refresh value for this SOA record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Inlined)]
        public long? SoaRecordRefreshTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesInternal)Property).SoaRecordRefreshTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesInternal)Property).SoaRecordRefreshTime = value ?? default(long); }

        /// <summary>The retry time for this SOA record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Inlined)]
        public long? SoaRecordRetryTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesInternal)Property).SoaRecordRetryTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesInternal)Property).SoaRecordRetryTime = value ?? default(long); }

        /// <summary>The serial number for this SOA record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Inlined)]
        public long? SoaRecordSerialNumber { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesInternal)Property).SoaRecordSerialNumber; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesInternal)Property).SoaRecordSerialNumber = value ?? default(long); }

        /// <summary>The list of SRV records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ISrvRecord[] SrvRecord { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesInternal)Property).SrvRecord; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesInternal)Property).SrvRecord = value ?? null /* arrayOf */; }

        /// <summary>The TTL (time-to-live) of the records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Inlined)]
        public long? Ttl { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesInternal)Property).Ttl; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesInternal)Property).Ttl = value ?? default(long); }

        /// <summary>The list of TXT records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ITxtRecord[] TxtRecord { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesInternal)Property).TxtRecord; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesInternal)Property).TxtRecord = value ?? null /* arrayOf */; }

        /// <summary>The type of the resource. Example - 'Microsoft.Network/privateDnsZones'.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IResourceInternal)__resource).Type; }

        /// <summary>Creates an new <see cref="RecordSet" /> instance.</summary>
        public RecordSet()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// Describes a DNS record set (a collection of DNS records with the same name and type) in a Private DNS zone.
    public partial interface IRecordSet :
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IResource
    {
        /// <summary>The list of A records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of A records in the record set.",
        SerializedName = @"aRecords",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IARecord) })]
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IARecord[] ARecord { get; set; }
        /// <summary>The list of AAAA records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of AAAA records in the record set.",
        SerializedName = @"aaaaRecords",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IAaaaRecord) })]
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IAaaaRecord[] AaaaRecord { get; set; }
        /// <summary>The canonical name for this CNAME record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The canonical name for this CNAME record.",
        SerializedName = @"cname",
        PossibleTypes = new [] { typeof(string) })]
        string CnameRecordCname { get; set; }
        /// <summary>The ETag of the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ETag of the record set.",
        SerializedName = @"etag",
        PossibleTypes = new [] { typeof(string) })]
        string Etag { get; set; }
        /// <summary>Fully qualified domain name of the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Fully qualified domain name of the record set.",
        SerializedName = @"fqdn",
        PossibleTypes = new [] { typeof(string) })]
        string Fqdn { get;  }
        /// <summary>
        /// Is the record set auto-registered in the Private DNS zone through a virtual network link?
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Is the record set auto-registered in the Private DNS zone through a virtual network link?",
        SerializedName = @"isAutoRegistered",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsAutoRegistered { get;  }
        /// <summary>The metadata attached to the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The metadata attached to the record set.",
        SerializedName = @"metadata",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesMetadata) })]
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesMetadata Metadata { get; set; }
        /// <summary>The list of MX records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of MX records in the record set.",
        SerializedName = @"mxRecords",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IMxRecord) })]
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IMxRecord[] MxRecord { get; set; }
        /// <summary>The list of PTR records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of PTR records in the record set.",
        SerializedName = @"ptrRecords",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IPtrRecord) })]
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IPtrRecord[] PtrRecord { get; set; }
        /// <summary>The email contact for this SOA record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The email contact for this SOA record.",
        SerializedName = @"email",
        PossibleTypes = new [] { typeof(string) })]
        string SoaRecordEmail { get; set; }
        /// <summary>The expire time for this SOA record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The expire time for this SOA record.",
        SerializedName = @"expireTime",
        PossibleTypes = new [] { typeof(long) })]
        long? SoaRecordExpireTime { get; set; }
        /// <summary>The domain name of the authoritative name server for this SOA record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The domain name of the authoritative name server for this SOA record.",
        SerializedName = @"host",
        PossibleTypes = new [] { typeof(string) })]
        string SoaRecordHost { get; set; }
        /// <summary>
        /// The minimum value for this SOA record. By convention this is used to determine the negative caching duration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The minimum value for this SOA record. By convention this is used to determine the negative caching duration.",
        SerializedName = @"minimumTtl",
        PossibleTypes = new [] { typeof(long) })]
        long? SoaRecordMinimumTtl { get; set; }
        /// <summary>The refresh value for this SOA record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The refresh value for this SOA record.",
        SerializedName = @"refreshTime",
        PossibleTypes = new [] { typeof(long) })]
        long? SoaRecordRefreshTime { get; set; }
        /// <summary>The retry time for this SOA record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The retry time for this SOA record.",
        SerializedName = @"retryTime",
        PossibleTypes = new [] { typeof(long) })]
        long? SoaRecordRetryTime { get; set; }
        /// <summary>The serial number for this SOA record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The serial number for this SOA record.",
        SerializedName = @"serialNumber",
        PossibleTypes = new [] { typeof(long) })]
        long? SoaRecordSerialNumber { get; set; }
        /// <summary>The list of SRV records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of SRV records in the record set.",
        SerializedName = @"srvRecords",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ISrvRecord) })]
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ISrvRecord[] SrvRecord { get; set; }
        /// <summary>The TTL (time-to-live) of the records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The TTL (time-to-live) of the records in the record set.",
        SerializedName = @"ttl",
        PossibleTypes = new [] { typeof(long) })]
        long? Ttl { get; set; }
        /// <summary>The list of TXT records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of TXT records in the record set.",
        SerializedName = @"txtRecords",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ITxtRecord) })]
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ITxtRecord[] TxtRecord { get; set; }

    }
    /// Describes a DNS record set (a collection of DNS records with the same name and type) in a Private DNS zone.
    internal partial interface IRecordSetInternal :
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IResourceInternal
    {
        /// <summary>The list of A records in the record set.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IARecord[] ARecord { get; set; }
        /// <summary>The list of AAAA records in the record set.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IAaaaRecord[] AaaaRecord { get; set; }
        /// <summary>The CNAME record in the record set.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ICnameRecord CnameRecord { get; set; }
        /// <summary>The canonical name for this CNAME record.</summary>
        string CnameRecordCname { get; set; }
        /// <summary>The ETag of the record set.</summary>
        string Etag { get; set; }
        /// <summary>Fully qualified domain name of the record set.</summary>
        string Fqdn { get; set; }
        /// <summary>
        /// Is the record set auto-registered in the Private DNS zone through a virtual network link?
        /// </summary>
        bool? IsAutoRegistered { get; set; }
        /// <summary>The metadata attached to the record set.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesMetadata Metadata { get; set; }
        /// <summary>The list of MX records in the record set.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IMxRecord[] MxRecord { get; set; }
        /// <summary>The properties of the record set.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetProperties Property { get; set; }
        /// <summary>The list of PTR records in the record set.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IPtrRecord[] PtrRecord { get; set; }
        /// <summary>The SOA record in the record set.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ISoaRecord SoaRecord { get; set; }
        /// <summary>The email contact for this SOA record.</summary>
        string SoaRecordEmail { get; set; }
        /// <summary>The expire time for this SOA record.</summary>
        long? SoaRecordExpireTime { get; set; }
        /// <summary>The domain name of the authoritative name server for this SOA record.</summary>
        string SoaRecordHost { get; set; }
        /// <summary>
        /// The minimum value for this SOA record. By convention this is used to determine the negative caching duration.
        /// </summary>
        long? SoaRecordMinimumTtl { get; set; }
        /// <summary>The refresh value for this SOA record.</summary>
        long? SoaRecordRefreshTime { get; set; }
        /// <summary>The retry time for this SOA record.</summary>
        long? SoaRecordRetryTime { get; set; }
        /// <summary>The serial number for this SOA record.</summary>
        long? SoaRecordSerialNumber { get; set; }
        /// <summary>The list of SRV records in the record set.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ISrvRecord[] SrvRecord { get; set; }
        /// <summary>The TTL (time-to-live) of the records in the record set.</summary>
        long? Ttl { get; set; }
        /// <summary>The list of TXT records in the record set.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ITxtRecord[] TxtRecord { get; set; }

    }
}