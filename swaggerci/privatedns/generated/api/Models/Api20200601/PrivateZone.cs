// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601
{
    using static Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Extensions;

    /// <summary>Describes a Private DNS zone.</summary>
    public partial class PrivateZone :
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IPrivateZone,
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IPrivateZoneInternal,
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ITrackedResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ITrackedResource __trackedResource = new Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.TrackedResource();

        /// <summary>Backing field for <see cref="Etag" /> property.</summary>
        private string _etag;

        /// <summary>The ETag of the zone.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Owned)]
        public string Etag { get => this._etag; set => this._etag = value; }

        /// <summary>
        /// Fully qualified resource Id for the resource. Example - '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones/{privateDnsZoneName}'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IResourceInternal)__trackedResource).Id; }

        /// <summary>Private zone internal Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Inlined)]
        public string InternalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IPrivateZonePropertiesInternal)Property).InternalId; }

        /// <summary>The Azure Region where the resource lives</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ITrackedResourceInternal)__trackedResource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ITrackedResourceInternal)__trackedResource).Location = value ?? null; }

        /// <summary>
        /// The maximum number of record sets that can be created in this Private DNS zone. This is a read-only property and any attempt
        /// to set this value will be ignored.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Inlined)]
        public long? MaxNumberOfRecordSet { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IPrivateZonePropertiesInternal)Property).MaxNumberOfRecordSet; }

        /// <summary>
        /// The maximum number of virtual networks that can be linked to this Private DNS zone. This is a read-only property and any
        /// attempt to set this value will be ignored.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Inlined)]
        public long? MaxNumberOfVirtualNetworkLink { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IPrivateZonePropertiesInternal)Property).MaxNumberOfVirtualNetworkLink; }

        /// <summary>
        /// The maximum number of virtual networks that can be linked to this Private DNS zone with registration enabled. This is
        /// a read-only property and any attempt to set this value will be ignored.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Inlined)]
        public long? MaxNumberOfVirtualNetworkLinksWithRegistration { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IPrivateZonePropertiesInternal)Property).MaxNumberOfVirtualNetworkLinksWithRegistration; }

        /// <summary>Internal Acessors for InternalId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IPrivateZoneInternal.InternalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IPrivateZonePropertiesInternal)Property).InternalId; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IPrivateZonePropertiesInternal)Property).InternalId = value; }

        /// <summary>Internal Acessors for MaxNumberOfRecordSet</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IPrivateZoneInternal.MaxNumberOfRecordSet { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IPrivateZonePropertiesInternal)Property).MaxNumberOfRecordSet; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IPrivateZonePropertiesInternal)Property).MaxNumberOfRecordSet = value; }

        /// <summary>Internal Acessors for MaxNumberOfVirtualNetworkLink</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IPrivateZoneInternal.MaxNumberOfVirtualNetworkLink { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IPrivateZonePropertiesInternal)Property).MaxNumberOfVirtualNetworkLink; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IPrivateZonePropertiesInternal)Property).MaxNumberOfVirtualNetworkLink = value; }

        /// <summary>Internal Acessors for MaxNumberOfVirtualNetworkLinksWithRegistration</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IPrivateZoneInternal.MaxNumberOfVirtualNetworkLinksWithRegistration { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IPrivateZonePropertiesInternal)Property).MaxNumberOfVirtualNetworkLinksWithRegistration; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IPrivateZonePropertiesInternal)Property).MaxNumberOfVirtualNetworkLinksWithRegistration = value; }

        /// <summary>Internal Acessors for NumberOfRecordSet</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IPrivateZoneInternal.NumberOfRecordSet { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IPrivateZonePropertiesInternal)Property).NumberOfRecordSet; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IPrivateZonePropertiesInternal)Property).NumberOfRecordSet = value; }

        /// <summary>Internal Acessors for NumberOfVirtualNetworkLink</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IPrivateZoneInternal.NumberOfVirtualNetworkLink { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IPrivateZonePropertiesInternal)Property).NumberOfVirtualNetworkLink; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IPrivateZonePropertiesInternal)Property).NumberOfVirtualNetworkLink = value; }

        /// <summary>Internal Acessors for NumberOfVirtualNetworkLinksWithRegistration</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IPrivateZoneInternal.NumberOfVirtualNetworkLinksWithRegistration { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IPrivateZonePropertiesInternal)Property).NumberOfVirtualNetworkLinksWithRegistration; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IPrivateZonePropertiesInternal)Property).NumberOfVirtualNetworkLinksWithRegistration = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IPrivateZoneProperties Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IPrivateZoneInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.PrivateZoneProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IPrivateZoneInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IPrivateZonePropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IPrivateZonePropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IResourceInternal)__trackedResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IResourceInternal)__trackedResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IResourceInternal)__trackedResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IResourceInternal)__trackedResource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IResourceInternal)__trackedResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IResourceInternal)__trackedResource).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IResourceInternal)__trackedResource).Name; }

        /// <summary>
        /// The current number of record sets in this Private DNS zone. This is a read-only property and any attempt to set this value
        /// will be ignored.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Inlined)]
        public long? NumberOfRecordSet { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IPrivateZonePropertiesInternal)Property).NumberOfRecordSet; }

        /// <summary>
        /// The current number of virtual networks that are linked to this Private DNS zone. This is a read-only property and any
        /// attempt to set this value will be ignored.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Inlined)]
        public long? NumberOfVirtualNetworkLink { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IPrivateZonePropertiesInternal)Property).NumberOfVirtualNetworkLink; }

        /// <summary>
        /// The current number of virtual networks that are linked to this Private DNS zone with registration enabled. This is a read-only
        /// property and any attempt to set this value will be ignored.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Inlined)]
        public long? NumberOfVirtualNetworkLinksWithRegistration { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IPrivateZonePropertiesInternal)Property).NumberOfVirtualNetworkLinksWithRegistration; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IPrivateZoneProperties _property;

        /// <summary>Properties of the Private DNS zone.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IPrivateZoneProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.PrivateZoneProperties()); set => this._property = value; }

        /// <summary>
        /// The provisioning state of the resource. This is a read-only property and any attempt to set this value will be ignored.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Support.ProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IPrivateZonePropertiesInternal)Property).ProvisioningState; }

        /// <summary>Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ITrackedResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ITrackedResourceInternal)__trackedResource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ITrackedResourceInternal)__trackedResource).Tag = value ?? null /* model class */; }

        /// <summary>The type of the resource. Example - 'Microsoft.Network/privateDnsZones'.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IResourceInternal)__trackedResource).Type; }

        /// <summary>Creates an new <see cref="PrivateZone" /> instance.</summary>
        public PrivateZone()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__trackedResource), __trackedResource);
            await eventListener.AssertObjectIsValid(nameof(__trackedResource), __trackedResource);
        }
    }
    /// Describes a Private DNS zone.
    public partial interface IPrivateZone :
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ITrackedResource
    {
        /// <summary>The ETag of the zone.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ETag of the zone.",
        SerializedName = @"etag",
        PossibleTypes = new [] { typeof(string) })]
        string Etag { get; set; }
        /// <summary>Private zone internal Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Private zone internal Id",
        SerializedName = @"internalId",
        PossibleTypes = new [] { typeof(string) })]
        string InternalId { get;  }
        /// <summary>
        /// The maximum number of record sets that can be created in this Private DNS zone. This is a read-only property and any attempt
        /// to set this value will be ignored.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The maximum number of record sets that can be created in this Private DNS zone. This is a read-only property and any attempt to set this value will be ignored.",
        SerializedName = @"maxNumberOfRecordSets",
        PossibleTypes = new [] { typeof(long) })]
        long? MaxNumberOfRecordSet { get;  }
        /// <summary>
        /// The maximum number of virtual networks that can be linked to this Private DNS zone. This is a read-only property and any
        /// attempt to set this value will be ignored.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The maximum number of virtual networks that can be linked to this Private DNS zone. This is a read-only property and any attempt to set this value will be ignored.",
        SerializedName = @"maxNumberOfVirtualNetworkLinks",
        PossibleTypes = new [] { typeof(long) })]
        long? MaxNumberOfVirtualNetworkLink { get;  }
        /// <summary>
        /// The maximum number of virtual networks that can be linked to this Private DNS zone with registration enabled. This is
        /// a read-only property and any attempt to set this value will be ignored.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The maximum number of virtual networks that can be linked to this Private DNS zone with registration enabled. This is a read-only property and any attempt to set this value will be ignored.",
        SerializedName = @"maxNumberOfVirtualNetworkLinksWithRegistration",
        PossibleTypes = new [] { typeof(long) })]
        long? MaxNumberOfVirtualNetworkLinksWithRegistration { get;  }
        /// <summary>
        /// The current number of record sets in this Private DNS zone. This is a read-only property and any attempt to set this value
        /// will be ignored.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The current number of record sets in this Private DNS zone. This is a read-only property and any attempt to set this value will be ignored.",
        SerializedName = @"numberOfRecordSets",
        PossibleTypes = new [] { typeof(long) })]
        long? NumberOfRecordSet { get;  }
        /// <summary>
        /// The current number of virtual networks that are linked to this Private DNS zone. This is a read-only property and any
        /// attempt to set this value will be ignored.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The current number of virtual networks that are linked to this Private DNS zone. This is a read-only property and any attempt to set this value will be ignored.",
        SerializedName = @"numberOfVirtualNetworkLinks",
        PossibleTypes = new [] { typeof(long) })]
        long? NumberOfVirtualNetworkLink { get;  }
        /// <summary>
        /// The current number of virtual networks that are linked to this Private DNS zone with registration enabled. This is a read-only
        /// property and any attempt to set this value will be ignored.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The current number of virtual networks that are linked to this Private DNS zone with registration enabled. This is a read-only property and any attempt to set this value will be ignored.",
        SerializedName = @"numberOfVirtualNetworkLinksWithRegistration",
        PossibleTypes = new [] { typeof(long) })]
        long? NumberOfVirtualNetworkLinksWithRegistration { get;  }
        /// <summary>
        /// The provisioning state of the resource. This is a read-only property and any attempt to set this value will be ignored.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state of the resource. This is a read-only property and any attempt to set this value will be ignored.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Support.ProvisioningState? ProvisioningState { get;  }

    }
    /// Describes a Private DNS zone.
    internal partial interface IPrivateZoneInternal :
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ITrackedResourceInternal
    {
        /// <summary>The ETag of the zone.</summary>
        string Etag { get; set; }
        /// <summary>Private zone internal Id</summary>
        string InternalId { get; set; }
        /// <summary>
        /// The maximum number of record sets that can be created in this Private DNS zone. This is a read-only property and any attempt
        /// to set this value will be ignored.
        /// </summary>
        long? MaxNumberOfRecordSet { get; set; }
        /// <summary>
        /// The maximum number of virtual networks that can be linked to this Private DNS zone. This is a read-only property and any
        /// attempt to set this value will be ignored.
        /// </summary>
        long? MaxNumberOfVirtualNetworkLink { get; set; }
        /// <summary>
        /// The maximum number of virtual networks that can be linked to this Private DNS zone with registration enabled. This is
        /// a read-only property and any attempt to set this value will be ignored.
        /// </summary>
        long? MaxNumberOfVirtualNetworkLinksWithRegistration { get; set; }
        /// <summary>
        /// The current number of record sets in this Private DNS zone. This is a read-only property and any attempt to set this value
        /// will be ignored.
        /// </summary>
        long? NumberOfRecordSet { get; set; }
        /// <summary>
        /// The current number of virtual networks that are linked to this Private DNS zone. This is a read-only property and any
        /// attempt to set this value will be ignored.
        /// </summary>
        long? NumberOfVirtualNetworkLink { get; set; }
        /// <summary>
        /// The current number of virtual networks that are linked to this Private DNS zone with registration enabled. This is a read-only
        /// property and any attempt to set this value will be ignored.
        /// </summary>
        long? NumberOfVirtualNetworkLinksWithRegistration { get; set; }
        /// <summary>Properties of the Private DNS zone.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IPrivateZoneProperties Property { get; set; }
        /// <summary>
        /// The provisioning state of the resource. This is a read-only property and any attempt to set this value will be ignored.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Support.ProvisioningState? ProvisioningState { get; set; }

    }
}