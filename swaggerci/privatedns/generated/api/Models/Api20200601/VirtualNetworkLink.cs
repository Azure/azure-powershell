// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601
{
    using static Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Extensions;

    /// <summary>Describes a link to virtual network for a Private DNS zone.</summary>
    public partial class VirtualNetworkLink :
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IVirtualNetworkLink,
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IVirtualNetworkLinkInternal,
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ITrackedResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ITrackedResource __trackedResource = new Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.TrackedResource();

        /// <summary>Backing field for <see cref="Etag" /> property.</summary>
        private string _etag;

        /// <summary>The ETag of the virtual network link.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Owned)]
        public string Etag { get => this._etag; set => this._etag = value; }

        /// <summary>
        /// Fully qualified resource Id for the resource. Example - '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones/{privateDnsZoneName}'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IResourceInternal)__trackedResource).Id; }

        /// <summary>The Azure Region where the resource lives</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ITrackedResourceInternal)__trackedResource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ITrackedResourceInternal)__trackedResource).Location = value ?? null; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IResourceInternal)__trackedResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IResourceInternal)__trackedResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IResourceInternal)__trackedResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IResourceInternal)__trackedResource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IResourceInternal)__trackedResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IResourceInternal)__trackedResource).Type = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IVirtualNetworkLinkProperties Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IVirtualNetworkLinkInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.VirtualNetworkLinkProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IVirtualNetworkLinkInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IVirtualNetworkLinkPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IVirtualNetworkLinkPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for State</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Support.VirtualNetworkLinkState? Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IVirtualNetworkLinkInternal.State { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IVirtualNetworkLinkPropertiesInternal)Property).VirtualNetworkLinkState; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IVirtualNetworkLinkPropertiesInternal)Property).VirtualNetworkLinkState = value; }

        /// <summary>Internal Acessors for VirtualNetwork</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ISubResource Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IVirtualNetworkLinkInternal.VirtualNetwork { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IVirtualNetworkLinkPropertiesInternal)Property).VirtualNetwork; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IVirtualNetworkLinkPropertiesInternal)Property).VirtualNetwork = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IResourceInternal)__trackedResource).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IVirtualNetworkLinkProperties _property;

        /// <summary>Properties of the virtual network link to the Private DNS zone.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IVirtualNetworkLinkProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.VirtualNetworkLinkProperties()); set => this._property = value; }

        /// <summary>
        /// The provisioning state of the resource. This is a read-only property and any attempt to set this value will be ignored.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Support.ProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IVirtualNetworkLinkPropertiesInternal)Property).ProvisioningState; }

        /// <summary>
        /// Is auto-registration of virtual machine records in the virtual network in the Private DNS zone enabled?
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Inlined)]
        public bool? RegistrationEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IVirtualNetworkLinkPropertiesInternal)Property).RegistrationEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IVirtualNetworkLinkPropertiesInternal)Property).RegistrationEnabled = value ?? default(bool); }

        /// <summary>
        /// The status of the virtual network link to the Private DNS zone. Possible values are 'InProgress' and 'Done'. This is a
        /// read-only property and any attempt to set this value will be ignored.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Support.VirtualNetworkLinkState? State { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IVirtualNetworkLinkPropertiesInternal)Property).VirtualNetworkLinkState; }

        /// <summary>Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ITrackedResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ITrackedResourceInternal)__trackedResource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ITrackedResourceInternal)__trackedResource).Tag = value ?? null /* model class */; }

        /// <summary>The type of the resource. Example - 'Microsoft.Network/privateDnsZones'.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IResourceInternal)__trackedResource).Type; }

        /// <summary>Resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Inlined)]
        public string VirtualNetworkId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IVirtualNetworkLinkPropertiesInternal)Property).VirtualNetworkId; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IVirtualNetworkLinkPropertiesInternal)Property).VirtualNetworkId = value ?? null; }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__trackedResource), __trackedResource);
            await eventListener.AssertObjectIsValid(nameof(__trackedResource), __trackedResource);
        }

        /// <summary>Creates an new <see cref="VirtualNetworkLink" /> instance.</summary>
        public VirtualNetworkLink()
        {

        }
    }
    /// Describes a link to virtual network for a Private DNS zone.
    public partial interface IVirtualNetworkLink :
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ITrackedResource
    {
        /// <summary>The ETag of the virtual network link.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ETag of the virtual network link.",
        SerializedName = @"etag",
        PossibleTypes = new [] { typeof(string) })]
        string Etag { get; set; }
        /// <summary>
        /// The provisioning state of the resource. This is a read-only property and any attempt to set this value will be ignored.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state of the resource. This is a read-only property and any attempt to set this value will be ignored.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>
        /// Is auto-registration of virtual machine records in the virtual network in the Private DNS zone enabled?
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Is auto-registration of virtual machine records in the virtual network in the Private DNS zone enabled?",
        SerializedName = @"registrationEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? RegistrationEnabled { get; set; }
        /// <summary>
        /// The status of the virtual network link to the Private DNS zone. Possible values are 'InProgress' and 'Done'. This is a
        /// read-only property and any attempt to set this value will be ignored.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The status of the virtual network link to the Private DNS zone. Possible values are 'InProgress' and 'Done'. This is a read-only property and any attempt to set this value will be ignored.",
        SerializedName = @"virtualNetworkLinkState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Support.VirtualNetworkLinkState) })]
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Support.VirtualNetworkLinkState? State { get;  }
        /// <summary>Resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string VirtualNetworkId { get; set; }

    }
    /// Describes a link to virtual network for a Private DNS zone.
    internal partial interface IVirtualNetworkLinkInternal :
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ITrackedResourceInternal
    {
        /// <summary>The ETag of the virtual network link.</summary>
        string Etag { get; set; }
        /// <summary>Properties of the virtual network link to the Private DNS zone.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IVirtualNetworkLinkProperties Property { get; set; }
        /// <summary>
        /// The provisioning state of the resource. This is a read-only property and any attempt to set this value will be ignored.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>
        /// Is auto-registration of virtual machine records in the virtual network in the Private DNS zone enabled?
        /// </summary>
        bool? RegistrationEnabled { get; set; }
        /// <summary>
        /// The status of the virtual network link to the Private DNS zone. Possible values are 'InProgress' and 'Done'. This is a
        /// read-only property and any attempt to set this value will be ignored.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Support.VirtualNetworkLinkState? State { get; set; }
        /// <summary>The reference of the virtual network.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ISubResource VirtualNetwork { get; set; }
        /// <summary>Resource ID.</summary>
        string VirtualNetworkId { get; set; }

    }
}