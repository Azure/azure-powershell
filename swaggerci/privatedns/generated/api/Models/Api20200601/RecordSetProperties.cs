// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601
{
    using static Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Extensions;

    /// <summary>Represents the properties of the records in the record set.</summary>
    public partial class RecordSetProperties :
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetProperties,
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesInternal
    {

        /// <summary>Backing field for <see cref="ARecord" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IARecord[] _aRecord;

        /// <summary>The list of A records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IARecord[] ARecord { get => this._aRecord; set => this._aRecord = value; }

        /// <summary>Backing field for <see cref="AaaaRecord" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IAaaaRecord[] _aaaaRecord;

        /// <summary>The list of AAAA records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IAaaaRecord[] AaaaRecord { get => this._aaaaRecord; set => this._aaaaRecord = value; }

        /// <summary>Backing field for <see cref="CnameRecord" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ICnameRecord _cnameRecord;

        /// <summary>The CNAME record in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ICnameRecord CnameRecord { get => (this._cnameRecord = this._cnameRecord ?? new Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.CnameRecord()); set => this._cnameRecord = value; }

        /// <summary>The canonical name for this CNAME record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Inlined)]
        public string CnameRecordCname { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ICnameRecordInternal)CnameRecord).Cname; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ICnameRecordInternal)CnameRecord).Cname = value ?? null; }

        /// <summary>Backing field for <see cref="Fqdn" /> property.</summary>
        private string _fqdn;

        /// <summary>Fully qualified domain name of the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Owned)]
        public string Fqdn { get => this._fqdn; }

        /// <summary>Backing field for <see cref="IsAutoRegistered" /> property.</summary>
        private bool? _isAutoRegistered;

        /// <summary>
        /// Is the record set auto-registered in the Private DNS zone through a virtual network link?
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Owned)]
        public bool? IsAutoRegistered { get => this._isAutoRegistered; }

        /// <summary>Backing field for <see cref="Metadata" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesMetadata _metadata;

        /// <summary>The metadata attached to the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesMetadata Metadata { get => (this._metadata = this._metadata ?? new Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.RecordSetPropertiesMetadata()); set => this._metadata = value; }

        /// <summary>Internal Acessors for CnameRecord</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ICnameRecord Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesInternal.CnameRecord { get => (this._cnameRecord = this._cnameRecord ?? new Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.CnameRecord()); set { {_cnameRecord = value;} } }

        /// <summary>Internal Acessors for Fqdn</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesInternal.Fqdn { get => this._fqdn; set { {_fqdn = value;} } }

        /// <summary>Internal Acessors for IsAutoRegistered</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesInternal.IsAutoRegistered { get => this._isAutoRegistered; set { {_isAutoRegistered = value;} } }

        /// <summary>Internal Acessors for SoaRecord</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ISoaRecord Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesInternal.SoaRecord { get => (this._soaRecord = this._soaRecord ?? new Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.SoaRecord()); set { {_soaRecord = value;} } }

        /// <summary>Backing field for <see cref="MxRecord" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IMxRecord[] _mxRecord;

        /// <summary>The list of MX records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IMxRecord[] MxRecord { get => this._mxRecord; set => this._mxRecord = value; }

        /// <summary>Backing field for <see cref="PtrRecord" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IPtrRecord[] _ptrRecord;

        /// <summary>The list of PTR records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IPtrRecord[] PtrRecord { get => this._ptrRecord; set => this._ptrRecord = value; }

        /// <summary>Backing field for <see cref="SoaRecord" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ISoaRecord _soaRecord;

        /// <summary>The SOA record in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ISoaRecord SoaRecord { get => (this._soaRecord = this._soaRecord ?? new Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.SoaRecord()); set => this._soaRecord = value; }

        /// <summary>The email contact for this SOA record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Inlined)]
        public string SoaRecordEmail { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ISoaRecordInternal)SoaRecord).Email; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ISoaRecordInternal)SoaRecord).Email = value ?? null; }

        /// <summary>The expire time for this SOA record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Inlined)]
        public long? SoaRecordExpireTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ISoaRecordInternal)SoaRecord).ExpireTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ISoaRecordInternal)SoaRecord).ExpireTime = value ?? default(long); }

        /// <summary>The domain name of the authoritative name server for this SOA record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Inlined)]
        public string SoaRecordHost { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ISoaRecordInternal)SoaRecord).Host; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ISoaRecordInternal)SoaRecord).Host = value ?? null; }

        /// <summary>
        /// The minimum value for this SOA record. By convention this is used to determine the negative caching duration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Inlined)]
        public long? SoaRecordMinimumTtl { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ISoaRecordInternal)SoaRecord).MinimumTtl; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ISoaRecordInternal)SoaRecord).MinimumTtl = value ?? default(long); }

        /// <summary>The refresh value for this SOA record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Inlined)]
        public long? SoaRecordRefreshTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ISoaRecordInternal)SoaRecord).RefreshTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ISoaRecordInternal)SoaRecord).RefreshTime = value ?? default(long); }

        /// <summary>The retry time for this SOA record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Inlined)]
        public long? SoaRecordRetryTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ISoaRecordInternal)SoaRecord).RetryTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ISoaRecordInternal)SoaRecord).RetryTime = value ?? default(long); }

        /// <summary>The serial number for this SOA record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Inlined)]
        public long? SoaRecordSerialNumber { get => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ISoaRecordInternal)SoaRecord).SerialNumber; set => ((Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ISoaRecordInternal)SoaRecord).SerialNumber = value ?? default(long); }

        /// <summary>Backing field for <see cref="SrvRecord" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ISrvRecord[] _srvRecord;

        /// <summary>The list of SRV records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ISrvRecord[] SrvRecord { get => this._srvRecord; set => this._srvRecord = value; }

        /// <summary>Backing field for <see cref="Ttl" /> property.</summary>
        private long? _ttl;

        /// <summary>The TTL (time-to-live) of the records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Owned)]
        public long? Ttl { get => this._ttl; set => this._ttl = value; }

        /// <summary>Backing field for <see cref="TxtRecord" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ITxtRecord[] _txtRecord;

        /// <summary>The list of TXT records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Origin(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ITxtRecord[] TxtRecord { get => this._txtRecord; set => this._txtRecord = value; }

        /// <summary>Creates an new <see cref="RecordSetProperties" /> instance.</summary>
        public RecordSetProperties()
        {

        }
    }
    /// Represents the properties of the records in the record set.
    public partial interface IRecordSetProperties :
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.IJsonSerializable
    {
        /// <summary>The list of A records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of A records in the record set.",
        SerializedName = @"aRecords",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IARecord) })]
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IARecord[] ARecord { get; set; }
        /// <summary>The list of AAAA records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of AAAA records in the record set.",
        SerializedName = @"aaaaRecords",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IAaaaRecord) })]
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IAaaaRecord[] AaaaRecord { get; set; }
        /// <summary>The canonical name for this CNAME record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The canonical name for this CNAME record.",
        SerializedName = @"cname",
        PossibleTypes = new [] { typeof(string) })]
        string CnameRecordCname { get; set; }
        /// <summary>Fully qualified domain name of the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Fully qualified domain name of the record set.",
        SerializedName = @"fqdn",
        PossibleTypes = new [] { typeof(string) })]
        string Fqdn { get;  }
        /// <summary>
        /// Is the record set auto-registered in the Private DNS zone through a virtual network link?
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Is the record set auto-registered in the Private DNS zone through a virtual network link?",
        SerializedName = @"isAutoRegistered",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsAutoRegistered { get;  }
        /// <summary>The metadata attached to the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The metadata attached to the record set.",
        SerializedName = @"metadata",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesMetadata) })]
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesMetadata Metadata { get; set; }
        /// <summary>The list of MX records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of MX records in the record set.",
        SerializedName = @"mxRecords",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IMxRecord) })]
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IMxRecord[] MxRecord { get; set; }
        /// <summary>The list of PTR records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of PTR records in the record set.",
        SerializedName = @"ptrRecords",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IPtrRecord) })]
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IPtrRecord[] PtrRecord { get; set; }
        /// <summary>The email contact for this SOA record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The email contact for this SOA record.",
        SerializedName = @"email",
        PossibleTypes = new [] { typeof(string) })]
        string SoaRecordEmail { get; set; }
        /// <summary>The expire time for this SOA record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The expire time for this SOA record.",
        SerializedName = @"expireTime",
        PossibleTypes = new [] { typeof(long) })]
        long? SoaRecordExpireTime { get; set; }
        /// <summary>The domain name of the authoritative name server for this SOA record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The domain name of the authoritative name server for this SOA record.",
        SerializedName = @"host",
        PossibleTypes = new [] { typeof(string) })]
        string SoaRecordHost { get; set; }
        /// <summary>
        /// The minimum value for this SOA record. By convention this is used to determine the negative caching duration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The minimum value for this SOA record. By convention this is used to determine the negative caching duration.",
        SerializedName = @"minimumTtl",
        PossibleTypes = new [] { typeof(long) })]
        long? SoaRecordMinimumTtl { get; set; }
        /// <summary>The refresh value for this SOA record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The refresh value for this SOA record.",
        SerializedName = @"refreshTime",
        PossibleTypes = new [] { typeof(long) })]
        long? SoaRecordRefreshTime { get; set; }
        /// <summary>The retry time for this SOA record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The retry time for this SOA record.",
        SerializedName = @"retryTime",
        PossibleTypes = new [] { typeof(long) })]
        long? SoaRecordRetryTime { get; set; }
        /// <summary>The serial number for this SOA record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The serial number for this SOA record.",
        SerializedName = @"serialNumber",
        PossibleTypes = new [] { typeof(long) })]
        long? SoaRecordSerialNumber { get; set; }
        /// <summary>The list of SRV records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of SRV records in the record set.",
        SerializedName = @"srvRecords",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ISrvRecord) })]
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ISrvRecord[] SrvRecord { get; set; }
        /// <summary>The TTL (time-to-live) of the records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The TTL (time-to-live) of the records in the record set.",
        SerializedName = @"ttl",
        PossibleTypes = new [] { typeof(long) })]
        long? Ttl { get; set; }
        /// <summary>The list of TXT records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of TXT records in the record set.",
        SerializedName = @"txtRecords",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ITxtRecord) })]
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ITxtRecord[] TxtRecord { get; set; }

    }
    /// Represents the properties of the records in the record set.
    internal partial interface IRecordSetPropertiesInternal

    {
        /// <summary>The list of A records in the record set.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IARecord[] ARecord { get; set; }
        /// <summary>The list of AAAA records in the record set.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IAaaaRecord[] AaaaRecord { get; set; }
        /// <summary>The CNAME record in the record set.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ICnameRecord CnameRecord { get; set; }
        /// <summary>The canonical name for this CNAME record.</summary>
        string CnameRecordCname { get; set; }
        /// <summary>Fully qualified domain name of the record set.</summary>
        string Fqdn { get; set; }
        /// <summary>
        /// Is the record set auto-registered in the Private DNS zone through a virtual network link?
        /// </summary>
        bool? IsAutoRegistered { get; set; }
        /// <summary>The metadata attached to the record set.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IRecordSetPropertiesMetadata Metadata { get; set; }
        /// <summary>The list of MX records in the record set.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IMxRecord[] MxRecord { get; set; }
        /// <summary>The list of PTR records in the record set.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.IPtrRecord[] PtrRecord { get; set; }
        /// <summary>The SOA record in the record set.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ISoaRecord SoaRecord { get; set; }
        /// <summary>The email contact for this SOA record.</summary>
        string SoaRecordEmail { get; set; }
        /// <summary>The expire time for this SOA record.</summary>
        long? SoaRecordExpireTime { get; set; }
        /// <summary>The domain name of the authoritative name server for this SOA record.</summary>
        string SoaRecordHost { get; set; }
        /// <summary>
        /// The minimum value for this SOA record. By convention this is used to determine the negative caching duration.
        /// </summary>
        long? SoaRecordMinimumTtl { get; set; }
        /// <summary>The refresh value for this SOA record.</summary>
        long? SoaRecordRefreshTime { get; set; }
        /// <summary>The retry time for this SOA record.</summary>
        long? SoaRecordRetryTime { get; set; }
        /// <summary>The serial number for this SOA record.</summary>
        long? SoaRecordSerialNumber { get; set; }
        /// <summary>The list of SRV records in the record set.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ISrvRecord[] SrvRecord { get; set; }
        /// <summary>The TTL (time-to-live) of the records in the record set.</summary>
        long? Ttl { get; set; }
        /// <summary>The list of TXT records in the record set.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.Models.Api20200601.ITxtRecord[] TxtRecord { get; set; }

    }
}