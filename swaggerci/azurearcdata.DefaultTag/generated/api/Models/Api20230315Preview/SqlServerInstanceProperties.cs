// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Extensions;

    /// <summary>Properties of SqlServerInstance.</summary>
    public partial class SqlServerInstanceProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ISqlServerInstanceProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ISqlServerInstancePropertiesInternal
    {

        /// <summary>Backing field for <see cref="AzureDefenderStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.DefenderStatus? _azureDefenderStatus;

        /// <summary>Status of Azure Defender.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.DefenderStatus? AzureDefenderStatus { get => this._azureDefenderStatus; set => this._azureDefenderStatus = value; }

        /// <summary>Backing field for <see cref="AzureDefenderStatusLastUpdated" /> property.</summary>
        private global::System.DateTime? _azureDefenderStatusLastUpdated;

        /// <summary>Timestamp of last Azure Defender status update.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Owned)]
        public global::System.DateTime? AzureDefenderStatusLastUpdated { get => this._azureDefenderStatusLastUpdated; set => this._azureDefenderStatusLastUpdated = value; }

        /// <summary>Backing field for <see cref="Collation" /> property.</summary>
        private string _collation;

        /// <summary>SQL Server collation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Owned)]
        public string Collation { get => this._collation; set => this._collation = value; }

        /// <summary>Backing field for <see cref="ContainerResourceId" /> property.</summary>
        private string _containerResourceId;

        /// <summary>ARM Resource id of the container resource (Azure Arc for Servers).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Owned)]
        public string ContainerResourceId { get => this._containerResourceId; set => this._containerResourceId = value; }

        /// <summary>Backing field for <see cref="Core" /> property.</summary>
        private string _core;

        /// <summary>
        /// The number of total cores of the Operating System Environment (OSE) hosting the SQL Server instance.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Owned)]
        public string Core { get => this._core; set => this._core = value; }

        /// <summary>Backing field for <see cref="CreateTime" /> property.</summary>
        private string _createTime;

        /// <summary>The time when the resource was created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Owned)]
        public string CreateTime { get => this._createTime; }

        /// <summary>Backing field for <see cref="CurrentVersion" /> property.</summary>
        private string _currentVersion;

        /// <summary>SQL Server current version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Owned)]
        public string CurrentVersion { get => this._currentVersion; set => this._currentVersion = value; }

        /// <summary>Backing field for <see cref="Edition" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.EditionType? _edition;

        /// <summary>SQL Server edition.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.EditionType? Edition { get => this._edition; set => this._edition = value; }

        /// <summary>Backing field for <see cref="HostType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.HostType? _hostType;

        /// <summary>Type of host for Azure Arc SQL Server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.HostType? HostType { get => this._hostType; set => this._hostType = value; }

        /// <summary>Backing field for <see cref="InstanceName" /> property.</summary>
        private string _instanceName;

        /// <summary>SQL Server instance name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Owned)]
        public string InstanceName { get => this._instanceName; set => this._instanceName = value; }

        /// <summary>Backing field for <see cref="LicenseType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.ArcSqlServerLicenseType? _licenseType;

        /// <summary>SQL Server license type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.ArcSqlServerLicenseType? LicenseType { get => this._licenseType; set => this._licenseType = value; }

        /// <summary>Internal Acessors for CreateTime</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ISqlServerInstancePropertiesInternal.CreateTime { get => this._createTime; set { {_createTime = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ISqlServerInstancePropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Backing field for <see cref="PatchLevel" /> property.</summary>
        private string _patchLevel;

        /// <summary>SQL Server update level.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Owned)]
        public string PatchLevel { get => this._patchLevel; set => this._patchLevel = value; }

        /// <summary>Backing field for <see cref="ProductId" /> property.</summary>
        private string _productId;

        /// <summary>SQL Server product ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Owned)]
        public string ProductId { get => this._productId; set => this._productId = value; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>The provisioning state of the Arc-enabled SQL Server resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.ConnectionStatus _status;

        /// <summary>The cloud connectivity status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.ConnectionStatus Status { get => this._status; set => this._status = value; }

        /// <summary>Backing field for <see cref="TcpDynamicPort" /> property.</summary>
        private string _tcpDynamicPort;

        /// <summary>Dynamic TCP ports used by SQL Server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Owned)]
        public string TcpDynamicPort { get => this._tcpDynamicPort; set => this._tcpDynamicPort = value; }

        /// <summary>Backing field for <see cref="TcpStaticPort" /> property.</summary>
        private string _tcpStaticPort;

        /// <summary>Static TCP ports used by SQL Server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Owned)]
        public string TcpStaticPort { get => this._tcpStaticPort; set => this._tcpStaticPort = value; }

        /// <summary>Backing field for <see cref="VCore" /> property.</summary>
        private string _vCore;

        /// <summary>The number of logical processors used by the SQL Server instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Owned)]
        public string VCore { get => this._vCore; set => this._vCore = value; }

        /// <summary>Backing field for <see cref="Version" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.SqlVersion? _version;

        /// <summary>SQL Server version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.SqlVersion? Version { get => this._version; set => this._version = value; }

        /// <summary>Creates an new <see cref="SqlServerInstanceProperties" /> instance.</summary>
        public SqlServerInstanceProperties()
        {

        }
    }
    /// Properties of SqlServerInstance.
    public partial interface ISqlServerInstanceProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.IJsonSerializable
    {
        /// <summary>Status of Azure Defender.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Status of Azure Defender.",
        SerializedName = @"azureDefenderStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.DefenderStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.DefenderStatus? AzureDefenderStatus { get; set; }
        /// <summary>Timestamp of last Azure Defender status update.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Timestamp of last Azure Defender status update.",
        SerializedName = @"azureDefenderStatusLastUpdated",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? AzureDefenderStatusLastUpdated { get; set; }
        /// <summary>SQL Server collation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"SQL Server collation.",
        SerializedName = @"collation",
        PossibleTypes = new [] { typeof(string) })]
        string Collation { get; set; }
        /// <summary>ARM Resource id of the container resource (Azure Arc for Servers).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"ARM Resource id of the container resource (Azure Arc for Servers).",
        SerializedName = @"containerResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string ContainerResourceId { get; set; }
        /// <summary>
        /// The number of total cores of the Operating System Environment (OSE) hosting the SQL Server instance.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of total cores of the Operating System Environment (OSE) hosting the SQL Server instance.",
        SerializedName = @"cores",
        PossibleTypes = new [] { typeof(string) })]
        string Core { get; set; }
        /// <summary>The time when the resource was created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The time when the resource was created.",
        SerializedName = @"createTime",
        PossibleTypes = new [] { typeof(string) })]
        string CreateTime { get;  }
        /// <summary>SQL Server current version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"SQL Server current version.",
        SerializedName = @"currentVersion",
        PossibleTypes = new [] { typeof(string) })]
        string CurrentVersion { get; set; }
        /// <summary>SQL Server edition.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"SQL Server edition.",
        SerializedName = @"edition",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.EditionType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.EditionType? Edition { get; set; }
        /// <summary>Type of host for Azure Arc SQL Server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of host for Azure Arc SQL Server",
        SerializedName = @"hostType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.HostType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.HostType? HostType { get; set; }
        /// <summary>SQL Server instance name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"SQL Server instance name.",
        SerializedName = @"instanceName",
        PossibleTypes = new [] { typeof(string) })]
        string InstanceName { get; set; }
        /// <summary>SQL Server license type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"SQL Server license type.",
        SerializedName = @"licenseType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.ArcSqlServerLicenseType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.ArcSqlServerLicenseType? LicenseType { get; set; }
        /// <summary>SQL Server update level.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"SQL Server update level.",
        SerializedName = @"patchLevel",
        PossibleTypes = new [] { typeof(string) })]
        string PatchLevel { get; set; }
        /// <summary>SQL Server product ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"SQL Server product ID.",
        SerializedName = @"productId",
        PossibleTypes = new [] { typeof(string) })]
        string ProductId { get; set; }
        /// <summary>The provisioning state of the Arc-enabled SQL Server resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state of the Arc-enabled SQL Server resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>The cloud connectivity status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The cloud connectivity status.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.ConnectionStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.ConnectionStatus Status { get; set; }
        /// <summary>Dynamic TCP ports used by SQL Server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Dynamic TCP ports used by SQL Server.",
        SerializedName = @"tcpDynamicPorts",
        PossibleTypes = new [] { typeof(string) })]
        string TcpDynamicPort { get; set; }
        /// <summary>Static TCP ports used by SQL Server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Static TCP ports used by SQL Server.",
        SerializedName = @"tcpStaticPorts",
        PossibleTypes = new [] { typeof(string) })]
        string TcpStaticPort { get; set; }
        /// <summary>The number of logical processors used by the SQL Server instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of logical processors used by the SQL Server instance.",
        SerializedName = @"vCore",
        PossibleTypes = new [] { typeof(string) })]
        string VCore { get; set; }
        /// <summary>SQL Server version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"SQL Server version.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.SqlVersion) })]
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.SqlVersion? Version { get; set; }

    }
    /// Properties of SqlServerInstance.
    internal partial interface ISqlServerInstancePropertiesInternal

    {
        /// <summary>Status of Azure Defender.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.DefenderStatus? AzureDefenderStatus { get; set; }
        /// <summary>Timestamp of last Azure Defender status update.</summary>
        global::System.DateTime? AzureDefenderStatusLastUpdated { get; set; }
        /// <summary>SQL Server collation.</summary>
        string Collation { get; set; }
        /// <summary>ARM Resource id of the container resource (Azure Arc for Servers).</summary>
        string ContainerResourceId { get; set; }
        /// <summary>
        /// The number of total cores of the Operating System Environment (OSE) hosting the SQL Server instance.
        /// </summary>
        string Core { get; set; }
        /// <summary>The time when the resource was created.</summary>
        string CreateTime { get; set; }
        /// <summary>SQL Server current version.</summary>
        string CurrentVersion { get; set; }
        /// <summary>SQL Server edition.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.EditionType? Edition { get; set; }
        /// <summary>Type of host for Azure Arc SQL Server</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.HostType? HostType { get; set; }
        /// <summary>SQL Server instance name.</summary>
        string InstanceName { get; set; }
        /// <summary>SQL Server license type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.ArcSqlServerLicenseType? LicenseType { get; set; }
        /// <summary>SQL Server update level.</summary>
        string PatchLevel { get; set; }
        /// <summary>SQL Server product ID.</summary>
        string ProductId { get; set; }
        /// <summary>The provisioning state of the Arc-enabled SQL Server resource.</summary>
        string ProvisioningState { get; set; }
        /// <summary>The cloud connectivity status.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.ConnectionStatus Status { get; set; }
        /// <summary>Dynamic TCP ports used by SQL Server.</summary>
        string TcpDynamicPort { get; set; }
        /// <summary>Static TCP ports used by SQL Server.</summary>
        string TcpStaticPort { get; set; }
        /// <summary>The number of logical processors used by the SQL Server instance.</summary>
        string VCore { get; set; }
        /// <summary>SQL Server version.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.SqlVersion? Version { get; set; }

    }
}