// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Extensions;

    /// <summary>The properties of an Active Directory connector resource</summary>
    public partial class ActiveDirectoryConnectorProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal
    {

        /// <summary>NETBIOS name of the Active Directory domain.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public string ActiveDirectoryNetbiosDomainName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorSpecInternal)Spec).ActiveDirectoryNetbiosDomainName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorSpecInternal)Spec).ActiveDirectoryNetbiosDomainName = value ?? null; }

        /// <summary>The distinguished name of the Active Directory Organizational Unit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public string ActiveDirectoryOuDistinguishedName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorSpecInternal)Spec).ActiveDirectoryOuDistinguishedName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorSpecInternal)Spec).ActiveDirectoryOuDistinguishedName = value ?? null; }

        /// <summary>
        /// Name (uppercase) of the Active Directory domain that this AD connector will be associated with.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public string ActiveDirectoryRealm { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorSpecInternal)Spec).ActiveDirectoryRealm; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorSpecInternal)Spec).ActiveDirectoryRealm = value ; }

        /// <summary>The service account provisioning mode for this Active Directory connector.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.AccountProvisioningMode? ActiveDirectoryServiceAccountProvisioning { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorSpecInternal)Spec).ActiveDirectoryServiceAccountProvisioning; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorSpecInternal)Spec).ActiveDirectoryServiceAccountProvisioning = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.AccountProvisioningMode)""); }

        /// <summary>
        /// DNS domain name for which DNS lookups should be forwarded to the Active Directory DNS servers.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public string DnsDomainName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorSpecInternal)Spec).DnsDomainName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorSpecInternal)Spec).DnsDomainName = value ?? null; }

        /// <summary>List of Active Directory DNS server IP addresses.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public string[] DnsNameserverIPAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorSpecInternal)Spec).DnsNameserverIPAddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorSpecInternal)Spec).DnsNameserverIPAddress = value ; }

        /// <summary>
        /// Flag indicating whether to prefer Kubernetes DNS server response over AD DNS server response for IP address lookups.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public bool? DnsPreferK8SDnsForPtrLookup { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorSpecInternal)Spec).DnsPreferK8SDnsForPtrLookup; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorSpecInternal)Spec).DnsPreferK8SDnsForPtrLookup = value ?? default(bool); }

        /// <summary>Replica count for DNS proxy service. Default value is 1.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public long? DnsReplica { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorSpecInternal)Spec).DnsReplica; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorSpecInternal)Spec).DnsReplica = value ?? default(long); }

        /// <summary>null</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryDomainController[] DomainControllerSecondaryDomainController { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorSpecInternal)Spec).DomainControllerSecondaryDomainController; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorSpecInternal)Spec).DomainControllerSecondaryDomainController = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="DomainServiceAccountLoginInformation" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IBasicLoginInformation _domainServiceAccountLoginInformation;

        /// <summary>Username and password for domain service account authentication.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IBasicLoginInformation DomainServiceAccountLoginInformation { get => (this._domainServiceAccountLoginInformation = this._domainServiceAccountLoginInformation ?? new Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.BasicLoginInformation()); set => this._domainServiceAccountLoginInformation = value; }

        /// <summary>Login password.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public string DomainServiceAccountLoginInformationPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IBasicLoginInformationInternal)DomainServiceAccountLoginInformation).Password; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IBasicLoginInformationInternal)DomainServiceAccountLoginInformation).Password = value ?? null; }

        /// <summary>Login username.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public string DomainServiceAccountLoginInformationUsername { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IBasicLoginInformationInternal)DomainServiceAccountLoginInformation).Username; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IBasicLoginInformationInternal)DomainServiceAccountLoginInformation).Username = value ?? null; }

        /// <summary>Internal Acessors for ActiveDirectoryDomainController</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryDomainControllers Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal.ActiveDirectoryDomainController { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorSpecInternal)Spec).ActiveDirectoryDomainController; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorSpecInternal)Spec).ActiveDirectoryDomainController = value; }

        /// <summary>Internal Acessors for DomainControllerPrimaryDomainController</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryDomainController Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal.DomainControllerPrimaryDomainController { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorSpecInternal)Spec).DomainControllerPrimaryDomainController; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorSpecInternal)Spec).DomainControllerPrimaryDomainController = value; }

        /// <summary>Internal Acessors for DomainServiceAccountLoginInformation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IBasicLoginInformation Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal.DomainServiceAccountLoginInformation { get => (this._domainServiceAccountLoginInformation = this._domainServiceAccountLoginInformation ?? new Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.BasicLoginInformation()); set { {_domainServiceAccountLoginInformation = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for Spec</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorSpec Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal.Spec { get => (this._spec = this._spec ?? new Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ActiveDirectoryConnectorSpec()); set { {_spec = value;} } }

        /// <summary>Internal Acessors for SpecActiveDirectory</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorDomainDetails Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal.SpecActiveDirectory { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorSpecInternal)Spec).ActiveDirectory; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorSpecInternal)Spec).ActiveDirectory = value; }

        /// <summary>Internal Acessors for SpecDns</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorDnsDetails Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal.SpecDns { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorSpecInternal)Spec).Dns; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorSpecInternal)Spec).Dns = value; }

        /// <summary>Fully-qualified domain name of a domain controller in the AD domain.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public string PrimaryDomainControllerHostname { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorSpecInternal)Spec).PrimaryDomainControllerHostname; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorSpecInternal)Spec).PrimaryDomainControllerHostname = value ?? null; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>The provisioning state of the Active Directory connector resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="Spec" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorSpec _spec;

        /// <summary>null</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorSpec Spec { get => (this._spec = this._spec ?? new Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ActiveDirectoryConnectorSpec()); set => this._spec = value; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorStatus _status;

        /// <summary>null</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorStatus Status { get => (this._status = this._status ?? new Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ActiveDirectoryConnectorStatus()); set => this._status = value; }

        /// <summary>Creates an new <see cref="ActiveDirectoryConnectorProperties" /> instance.</summary>
        public ActiveDirectoryConnectorProperties()
        {

        }
    }
    /// The properties of an Active Directory connector resource
    public partial interface IActiveDirectoryConnectorProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.IJsonSerializable
    {
        /// <summary>NETBIOS name of the Active Directory domain.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"NETBIOS name of the Active Directory domain.",
        SerializedName = @"netbiosDomainName",
        PossibleTypes = new [] { typeof(string) })]
        string ActiveDirectoryNetbiosDomainName { get; set; }
        /// <summary>The distinguished name of the Active Directory Organizational Unit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The distinguished name of the Active Directory Organizational Unit.",
        SerializedName = @"ouDistinguishedName",
        PossibleTypes = new [] { typeof(string) })]
        string ActiveDirectoryOuDistinguishedName { get; set; }
        /// <summary>
        /// Name (uppercase) of the Active Directory domain that this AD connector will be associated with.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Name (uppercase) of the Active Directory domain that this AD connector will be associated with.",
        SerializedName = @"realm",
        PossibleTypes = new [] { typeof(string) })]
        string ActiveDirectoryRealm { get; set; }
        /// <summary>The service account provisioning mode for this Active Directory connector.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The service account provisioning mode for this Active Directory connector.",
        SerializedName = @"serviceAccountProvisioning",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.AccountProvisioningMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.AccountProvisioningMode? ActiveDirectoryServiceAccountProvisioning { get; set; }
        /// <summary>
        /// DNS domain name for which DNS lookups should be forwarded to the Active Directory DNS servers.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"DNS domain name for which DNS lookups should be forwarded to the Active Directory DNS servers.",
        SerializedName = @"domainName",
        PossibleTypes = new [] { typeof(string) })]
        string DnsDomainName { get; set; }
        /// <summary>List of Active Directory DNS server IP addresses.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"List of Active Directory DNS server IP addresses.",
        SerializedName = @"nameserverIPAddresses",
        PossibleTypes = new [] { typeof(string) })]
        string[] DnsNameserverIPAddress { get; set; }
        /// <summary>
        /// Flag indicating whether to prefer Kubernetes DNS server response over AD DNS server response for IP address lookups.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Flag indicating whether to prefer Kubernetes DNS server response over AD DNS server response for IP address lookups.",
        SerializedName = @"preferK8sDnsForPtrLookups",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DnsPreferK8SDnsForPtrLookup { get; set; }
        /// <summary>Replica count for DNS proxy service. Default value is 1.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Replica count for DNS proxy service. Default value is 1.",
        SerializedName = @"replicas",
        PossibleTypes = new [] { typeof(long) })]
        long? DnsReplica { get; set; }
        /// <summary>null</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"null",
        SerializedName = @"secondaryDomainControllers",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryDomainController) })]
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryDomainController[] DomainControllerSecondaryDomainController { get; set; }
        /// <summary>Login password.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Login password.",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(string) })]
        string DomainServiceAccountLoginInformationPassword { get; set; }
        /// <summary>Login username.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Login username.",
        SerializedName = @"username",
        PossibleTypes = new [] { typeof(string) })]
        string DomainServiceAccountLoginInformationUsername { get; set; }
        /// <summary>Fully-qualified domain name of a domain controller in the AD domain.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Fully-qualified domain name of a domain controller in the AD domain.",
        SerializedName = @"hostname",
        PossibleTypes = new [] { typeof(string) })]
        string PrimaryDomainControllerHostname { get; set; }
        /// <summary>The provisioning state of the Active Directory connector resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state of the Active Directory connector resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>null</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"null",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorStatus Status { get; set; }

    }
    /// The properties of an Active Directory connector resource
    internal partial interface IActiveDirectoryConnectorPropertiesInternal

    {
        /// <summary>null</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryDomainControllers ActiveDirectoryDomainController { get; set; }
        /// <summary>NETBIOS name of the Active Directory domain.</summary>
        string ActiveDirectoryNetbiosDomainName { get; set; }
        /// <summary>The distinguished name of the Active Directory Organizational Unit.</summary>
        string ActiveDirectoryOuDistinguishedName { get; set; }
        /// <summary>
        /// Name (uppercase) of the Active Directory domain that this AD connector will be associated with.
        /// </summary>
        string ActiveDirectoryRealm { get; set; }
        /// <summary>The service account provisioning mode for this Active Directory connector.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.AccountProvisioningMode? ActiveDirectoryServiceAccountProvisioning { get; set; }
        /// <summary>
        /// DNS domain name for which DNS lookups should be forwarded to the Active Directory DNS servers.
        /// </summary>
        string DnsDomainName { get; set; }
        /// <summary>List of Active Directory DNS server IP addresses.</summary>
        string[] DnsNameserverIPAddress { get; set; }
        /// <summary>
        /// Flag indicating whether to prefer Kubernetes DNS server response over AD DNS server response for IP address lookups.
        /// </summary>
        bool? DnsPreferK8SDnsForPtrLookup { get; set; }
        /// <summary>Replica count for DNS proxy service. Default value is 1.</summary>
        long? DnsReplica { get; set; }
        /// <summary>Information about the Primary Domain Controller (PDC) in the AD domain.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryDomainController DomainControllerPrimaryDomainController { get; set; }
        /// <summary>null</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryDomainController[] DomainControllerSecondaryDomainController { get; set; }
        /// <summary>Username and password for domain service account authentication.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IBasicLoginInformation DomainServiceAccountLoginInformation { get; set; }
        /// <summary>Login password.</summary>
        string DomainServiceAccountLoginInformationPassword { get; set; }
        /// <summary>Login username.</summary>
        string DomainServiceAccountLoginInformationUsername { get; set; }
        /// <summary>Fully-qualified domain name of a domain controller in the AD domain.</summary>
        string PrimaryDomainControllerHostname { get; set; }
        /// <summary>The provisioning state of the Active Directory connector resource.</summary>
        string ProvisioningState { get; set; }
        /// <summary>null</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorSpec Spec { get; set; }
        /// <summary>null</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorDomainDetails SpecActiveDirectory { get; set; }
        /// <summary>null</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorDnsDetails SpecDns { get; set; }
        /// <summary>null</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorStatus Status { get; set; }

    }
}