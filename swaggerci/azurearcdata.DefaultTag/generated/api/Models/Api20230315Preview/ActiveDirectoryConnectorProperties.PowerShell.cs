// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview
{
    using Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.PowerShell;

    /// <summary>The properties of an Active Directory connector resource</summary>
    [System.ComponentModel.TypeConverter(typeof(ActiveDirectoryConnectorPropertiesTypeConverter))]
    public partial class ActiveDirectoryConnectorProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ActiveDirectoryConnectorProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal ActiveDirectoryConnectorProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("DomainServiceAccountLoginInformation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).DomainServiceAccountLoginInformation = (Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IBasicLoginInformation) content.GetValueForProperty("DomainServiceAccountLoginInformation",((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).DomainServiceAccountLoginInformation, Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.BasicLoginInformationTypeConverter.ConvertFrom);
            }
            if (content.Contains("Spec"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).Spec = (Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorSpec) content.GetValueForProperty("Spec",((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).Spec, Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ActiveDirectoryConnectorSpecTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("Status"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).Status = (Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorStatus) content.GetValueForProperty("Status",((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).Status, Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ActiveDirectoryConnectorStatusTypeConverter.ConvertFrom);
            }
            if (content.Contains("DomainServiceAccountLoginInformationUsername"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).DomainServiceAccountLoginInformationUsername = (string) content.GetValueForProperty("DomainServiceAccountLoginInformationUsername",((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).DomainServiceAccountLoginInformationUsername, global::System.Convert.ToString);
            }
            if (content.Contains("DomainServiceAccountLoginInformationPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).DomainServiceAccountLoginInformationPassword = (string) content.GetValueForProperty("DomainServiceAccountLoginInformationPassword",((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).DomainServiceAccountLoginInformationPassword, global::System.Convert.ToString);
            }
            if (content.Contains("SpecActiveDirectory"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).SpecActiveDirectory = (Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorDomainDetails) content.GetValueForProperty("SpecActiveDirectory",((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).SpecActiveDirectory, Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ActiveDirectoryConnectorDomainDetailsTypeConverter.ConvertFrom);
            }
            if (content.Contains("SpecDns"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).SpecDns = (Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorDnsDetails) content.GetValueForProperty("SpecDns",((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).SpecDns, Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ActiveDirectoryConnectorDnsDetailsTypeConverter.ConvertFrom);
            }
            if (content.Contains("ActiveDirectoryDomainController"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).ActiveDirectoryDomainController = (Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryDomainControllers) content.GetValueForProperty("ActiveDirectoryDomainController",((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).ActiveDirectoryDomainController, Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ActiveDirectoryDomainControllersTypeConverter.ConvertFrom);
            }
            if (content.Contains("ActiveDirectoryRealm"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).ActiveDirectoryRealm = (string) content.GetValueForProperty("ActiveDirectoryRealm",((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).ActiveDirectoryRealm, global::System.Convert.ToString);
            }
            if (content.Contains("ActiveDirectoryNetbiosDomainName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).ActiveDirectoryNetbiosDomainName = (string) content.GetValueForProperty("ActiveDirectoryNetbiosDomainName",((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).ActiveDirectoryNetbiosDomainName, global::System.Convert.ToString);
            }
            if (content.Contains("ActiveDirectoryServiceAccountProvisioning"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).ActiveDirectoryServiceAccountProvisioning = (Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.AccountProvisioningMode?) content.GetValueForProperty("ActiveDirectoryServiceAccountProvisioning",((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).ActiveDirectoryServiceAccountProvisioning, Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.AccountProvisioningMode.CreateFrom);
            }
            if (content.Contains("ActiveDirectoryOuDistinguishedName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).ActiveDirectoryOuDistinguishedName = (string) content.GetValueForProperty("ActiveDirectoryOuDistinguishedName",((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).ActiveDirectoryOuDistinguishedName, global::System.Convert.ToString);
            }
            if (content.Contains("DnsDomainName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).DnsDomainName = (string) content.GetValueForProperty("DnsDomainName",((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).DnsDomainName, global::System.Convert.ToString);
            }
            if (content.Contains("DnsNameserverIPAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).DnsNameserverIPAddress = (string[]) content.GetValueForProperty("DnsNameserverIPAddress",((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).DnsNameserverIPAddress, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("DnsReplica"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).DnsReplica = (long?) content.GetValueForProperty("DnsReplica",((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).DnsReplica, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("DnsPreferK8SDnsForPtrLookup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).DnsPreferK8SDnsForPtrLookup = (bool?) content.GetValueForProperty("DnsPreferK8SDnsForPtrLookup",((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).DnsPreferK8SDnsForPtrLookup, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("DomainControllerPrimaryDomainController"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).DomainControllerPrimaryDomainController = (Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryDomainController) content.GetValueForProperty("DomainControllerPrimaryDomainController",((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).DomainControllerPrimaryDomainController, Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ActiveDirectoryDomainControllerTypeConverter.ConvertFrom);
            }
            if (content.Contains("DomainControllerSecondaryDomainController"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).DomainControllerSecondaryDomainController = (Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryDomainController[]) content.GetValueForProperty("DomainControllerSecondaryDomainController",((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).DomainControllerSecondaryDomainController, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryDomainController>(__y, Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ActiveDirectoryDomainControllerTypeConverter.ConvertFrom));
            }
            if (content.Contains("PrimaryDomainControllerHostname"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).PrimaryDomainControllerHostname = (string) content.GetValueForProperty("PrimaryDomainControllerHostname",((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).PrimaryDomainControllerHostname, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ActiveDirectoryConnectorProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal ActiveDirectoryConnectorProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("DomainServiceAccountLoginInformation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).DomainServiceAccountLoginInformation = (Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IBasicLoginInformation) content.GetValueForProperty("DomainServiceAccountLoginInformation",((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).DomainServiceAccountLoginInformation, Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.BasicLoginInformationTypeConverter.ConvertFrom);
            }
            if (content.Contains("Spec"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).Spec = (Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorSpec) content.GetValueForProperty("Spec",((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).Spec, Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ActiveDirectoryConnectorSpecTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("Status"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).Status = (Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorStatus) content.GetValueForProperty("Status",((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).Status, Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ActiveDirectoryConnectorStatusTypeConverter.ConvertFrom);
            }
            if (content.Contains("DomainServiceAccountLoginInformationUsername"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).DomainServiceAccountLoginInformationUsername = (string) content.GetValueForProperty("DomainServiceAccountLoginInformationUsername",((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).DomainServiceAccountLoginInformationUsername, global::System.Convert.ToString);
            }
            if (content.Contains("DomainServiceAccountLoginInformationPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).DomainServiceAccountLoginInformationPassword = (string) content.GetValueForProperty("DomainServiceAccountLoginInformationPassword",((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).DomainServiceAccountLoginInformationPassword, global::System.Convert.ToString);
            }
            if (content.Contains("SpecActiveDirectory"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).SpecActiveDirectory = (Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorDomainDetails) content.GetValueForProperty("SpecActiveDirectory",((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).SpecActiveDirectory, Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ActiveDirectoryConnectorDomainDetailsTypeConverter.ConvertFrom);
            }
            if (content.Contains("SpecDns"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).SpecDns = (Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorDnsDetails) content.GetValueForProperty("SpecDns",((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).SpecDns, Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ActiveDirectoryConnectorDnsDetailsTypeConverter.ConvertFrom);
            }
            if (content.Contains("ActiveDirectoryDomainController"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).ActiveDirectoryDomainController = (Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryDomainControllers) content.GetValueForProperty("ActiveDirectoryDomainController",((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).ActiveDirectoryDomainController, Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ActiveDirectoryDomainControllersTypeConverter.ConvertFrom);
            }
            if (content.Contains("ActiveDirectoryRealm"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).ActiveDirectoryRealm = (string) content.GetValueForProperty("ActiveDirectoryRealm",((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).ActiveDirectoryRealm, global::System.Convert.ToString);
            }
            if (content.Contains("ActiveDirectoryNetbiosDomainName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).ActiveDirectoryNetbiosDomainName = (string) content.GetValueForProperty("ActiveDirectoryNetbiosDomainName",((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).ActiveDirectoryNetbiosDomainName, global::System.Convert.ToString);
            }
            if (content.Contains("ActiveDirectoryServiceAccountProvisioning"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).ActiveDirectoryServiceAccountProvisioning = (Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.AccountProvisioningMode?) content.GetValueForProperty("ActiveDirectoryServiceAccountProvisioning",((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).ActiveDirectoryServiceAccountProvisioning, Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.AccountProvisioningMode.CreateFrom);
            }
            if (content.Contains("ActiveDirectoryOuDistinguishedName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).ActiveDirectoryOuDistinguishedName = (string) content.GetValueForProperty("ActiveDirectoryOuDistinguishedName",((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).ActiveDirectoryOuDistinguishedName, global::System.Convert.ToString);
            }
            if (content.Contains("DnsDomainName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).DnsDomainName = (string) content.GetValueForProperty("DnsDomainName",((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).DnsDomainName, global::System.Convert.ToString);
            }
            if (content.Contains("DnsNameserverIPAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).DnsNameserverIPAddress = (string[]) content.GetValueForProperty("DnsNameserverIPAddress",((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).DnsNameserverIPAddress, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("DnsReplica"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).DnsReplica = (long?) content.GetValueForProperty("DnsReplica",((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).DnsReplica, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("DnsPreferK8SDnsForPtrLookup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).DnsPreferK8SDnsForPtrLookup = (bool?) content.GetValueForProperty("DnsPreferK8SDnsForPtrLookup",((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).DnsPreferK8SDnsForPtrLookup, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("DomainControllerPrimaryDomainController"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).DomainControllerPrimaryDomainController = (Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryDomainController) content.GetValueForProperty("DomainControllerPrimaryDomainController",((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).DomainControllerPrimaryDomainController, Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ActiveDirectoryDomainControllerTypeConverter.ConvertFrom);
            }
            if (content.Contains("DomainControllerSecondaryDomainController"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).DomainControllerSecondaryDomainController = (Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryDomainController[]) content.GetValueForProperty("DomainControllerSecondaryDomainController",((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).DomainControllerSecondaryDomainController, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryDomainController>(__y, Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ActiveDirectoryDomainControllerTypeConverter.ConvertFrom));
            }
            if (content.Contains("PrimaryDomainControllerHostname"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).PrimaryDomainControllerHostname = (string) content.GetValueForProperty("PrimaryDomainControllerHostname",((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorPropertiesInternal)this).PrimaryDomainControllerHostname, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ActiveDirectoryConnectorProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new ActiveDirectoryConnectorProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ActiveDirectoryConnectorProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new ActiveDirectoryConnectorProperties(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="ActiveDirectoryConnectorProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>
        /// an instance of the <see cref="ActiveDirectoryConnectorProperties" /> model class.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.IActiveDirectoryConnectorProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// The properties of an Active Directory connector resource
    [System.ComponentModel.TypeConverter(typeof(ActiveDirectoryConnectorPropertiesTypeConverter))]
    public partial interface IActiveDirectoryConnectorProperties

    {

    }
}