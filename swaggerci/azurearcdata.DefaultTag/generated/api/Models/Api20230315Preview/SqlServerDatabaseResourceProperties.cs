// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Extensions;

    /// <summary>The properties of Arc Sql Server database resource</summary>
    public partial class SqlServerDatabaseResourceProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ISqlServerDatabaseResourceProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ISqlServerDatabaseResourcePropertiesInternal
    {

        /// <summary>Backing field for <see cref="BackupInformation" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ISqlServerDatabaseResourcePropertiesBackupInformation _backupInformation;

        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ISqlServerDatabaseResourcePropertiesBackupInformation BackupInformation { get => (this._backupInformation = this._backupInformation ?? new Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.SqlServerDatabaseResourcePropertiesBackupInformation()); set => this._backupInformation = value; }

        /// <summary>Date time of last full backup.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public global::System.DateTime? BackupInformationLastFullBackup { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ISqlServerDatabaseResourcePropertiesBackupInformationInternal)BackupInformation).LastFullBackup; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ISqlServerDatabaseResourcePropertiesBackupInformationInternal)BackupInformation).LastFullBackup = value ?? default(global::System.DateTime); }

        /// <summary>Date time of last log backup.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public global::System.DateTime? BackupInformationLastLogBackup { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ISqlServerDatabaseResourcePropertiesBackupInformationInternal)BackupInformation).LastLogBackup; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ISqlServerDatabaseResourcePropertiesBackupInformationInternal)BackupInformation).LastLogBackup = value ?? default(global::System.DateTime); }

        /// <summary>Backing field for <see cref="CollationName" /> property.</summary>
        private string _collationName;

        /// <summary>Collation of the database.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Owned)]
        public string CollationName { get => this._collationName; set => this._collationName = value; }

        /// <summary>Backing field for <see cref="CompatibilityLevel" /> property.</summary>
        private int? _compatibilityLevel;

        /// <summary>Compatibility level of the database</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Owned)]
        public int? CompatibilityLevel { get => this._compatibilityLevel; set => this._compatibilityLevel = value; }

        /// <summary>Backing field for <see cref="DatabaseCreationDate" /> property.</summary>
        private global::System.DateTime? _databaseCreationDate;

        /// <summary>Creation date of the database.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Owned)]
        public global::System.DateTime? DatabaseCreationDate { get => this._databaseCreationDate; set => this._databaseCreationDate = value; }

        /// <summary>Backing field for <see cref="DatabaseOption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ISqlServerDatabaseResourcePropertiesDatabaseOptions _databaseOption;

        /// <summary>List of features that are enabled for the database</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ISqlServerDatabaseResourcePropertiesDatabaseOptions DatabaseOption { get => (this._databaseOption = this._databaseOption ?? new Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.SqlServerDatabaseResourcePropertiesDatabaseOptions()); set => this._databaseOption = value; }

        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public bool? DatabaseOptionIsAutoCloseOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ISqlServerDatabaseResourcePropertiesDatabaseOptionsInternal)DatabaseOption).IsAutoCloseOn; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ISqlServerDatabaseResourcePropertiesDatabaseOptionsInternal)DatabaseOption).IsAutoCloseOn = value ?? default(bool); }

        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public bool? DatabaseOptionIsAutoCreateStatsOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ISqlServerDatabaseResourcePropertiesDatabaseOptionsInternal)DatabaseOption).IsAutoCreateStatsOn; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ISqlServerDatabaseResourcePropertiesDatabaseOptionsInternal)DatabaseOption).IsAutoCreateStatsOn = value ?? default(bool); }

        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public bool? DatabaseOptionIsAutoShrinkOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ISqlServerDatabaseResourcePropertiesDatabaseOptionsInternal)DatabaseOption).IsAutoShrinkOn; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ISqlServerDatabaseResourcePropertiesDatabaseOptionsInternal)DatabaseOption).IsAutoShrinkOn = value ?? default(bool); }

        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public bool? DatabaseOptionIsAutoUpdateStatsOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ISqlServerDatabaseResourcePropertiesDatabaseOptionsInternal)DatabaseOption).IsAutoUpdateStatsOn; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ISqlServerDatabaseResourcePropertiesDatabaseOptionsInternal)DatabaseOption).IsAutoUpdateStatsOn = value ?? default(bool); }

        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public bool? DatabaseOptionIsEncrypted { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ISqlServerDatabaseResourcePropertiesDatabaseOptionsInternal)DatabaseOption).IsEncrypted; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ISqlServerDatabaseResourcePropertiesDatabaseOptionsInternal)DatabaseOption).IsEncrypted = value ?? default(bool); }

        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public bool? DatabaseOptionIsMemoryOptimizationEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ISqlServerDatabaseResourcePropertiesDatabaseOptionsInternal)DatabaseOption).IsMemoryOptimizationEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ISqlServerDatabaseResourcePropertiesDatabaseOptionsInternal)DatabaseOption).IsMemoryOptimizationEnabled = value ?? default(bool); }

        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public bool? DatabaseOptionIsRemoteDataArchiveEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ISqlServerDatabaseResourcePropertiesDatabaseOptionsInternal)DatabaseOption).IsRemoteDataArchiveEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ISqlServerDatabaseResourcePropertiesDatabaseOptionsInternal)DatabaseOption).IsRemoteDataArchiveEnabled = value ?? default(bool); }

        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public bool? DatabaseOptionIsTrustworthyOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ISqlServerDatabaseResourcePropertiesDatabaseOptionsInternal)DatabaseOption).IsTrustworthyOn; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ISqlServerDatabaseResourcePropertiesDatabaseOptionsInternal)DatabaseOption).IsTrustworthyOn = value ?? default(bool); }

        /// <summary>Backing field for <see cref="IsReadOnly" /> property.</summary>
        private bool? _isReadOnly;

        /// <summary>Whether the database is read only or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Owned)]
        public bool? IsReadOnly { get => this._isReadOnly; set => this._isReadOnly = value; }

        /// <summary>Internal Acessors for BackupInformation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ISqlServerDatabaseResourcePropertiesBackupInformation Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ISqlServerDatabaseResourcePropertiesInternal.BackupInformation { get => (this._backupInformation = this._backupInformation ?? new Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.SqlServerDatabaseResourcePropertiesBackupInformation()); set { {_backupInformation = value;} } }

        /// <summary>Internal Acessors for DatabaseOption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ISqlServerDatabaseResourcePropertiesDatabaseOptions Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ISqlServerDatabaseResourcePropertiesInternal.DatabaseOption { get => (this._databaseOption = this._databaseOption ?? new Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.SqlServerDatabaseResourcePropertiesDatabaseOptions()); set { {_databaseOption = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ISqlServerDatabaseResourcePropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>The provisioning state of the Arc-enabled SQL Server database resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="RecoveryMode" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.RecoveryMode? _recoveryMode;

        /// <summary>Status of the database.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.RecoveryMode? RecoveryMode { get => this._recoveryMode; set => this._recoveryMode = value; }

        /// <summary>Backing field for <see cref="SizeMb" /> property.</summary>
        private float? _sizeMb;

        /// <summary>Size of the database.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Owned)]
        public float? SizeMb { get => this._sizeMb; set => this._sizeMb = value; }

        /// <summary>Backing field for <see cref="SpaceAvailableMb" /> property.</summary>
        private float? _spaceAvailableMb;

        /// <summary>Space left of the database.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Owned)]
        public float? SpaceAvailableMb { get => this._spaceAvailableMb; set => this._spaceAvailableMb = value; }

        /// <summary>Backing field for <see cref="State" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.DatabaseState? _state;

        /// <summary>State of the database.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.DatabaseState? State { get => this._state; set => this._state = value; }

        /// <summary>Creates an new <see cref="SqlServerDatabaseResourceProperties" /> instance.</summary>
        public SqlServerDatabaseResourceProperties()
        {

        }
    }
    /// The properties of Arc Sql Server database resource
    public partial interface ISqlServerDatabaseResourceProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.IJsonSerializable
    {
        /// <summary>Date time of last full backup.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Date time of last full backup.",
        SerializedName = @"lastFullBackup",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? BackupInformationLastFullBackup { get; set; }
        /// <summary>Date time of last log backup.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Date time of last log backup.",
        SerializedName = @"lastLogBackup",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? BackupInformationLastLogBackup { get; set; }
        /// <summary>Collation of the database.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Collation of the database.",
        SerializedName = @"collationName",
        PossibleTypes = new [] { typeof(string) })]
        string CollationName { get; set; }
        /// <summary>Compatibility level of the database</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Compatibility level of the database",
        SerializedName = @"compatibilityLevel",
        PossibleTypes = new [] { typeof(int) })]
        int? CompatibilityLevel { get; set; }
        /// <summary>Creation date of the database.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Creation date of the database.",
        SerializedName = @"databaseCreationDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? DatabaseCreationDate { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"isAutoCloseOn",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DatabaseOptionIsAutoCloseOn { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"isAutoCreateStatsOn",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DatabaseOptionIsAutoCreateStatsOn { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"isAutoShrinkOn",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DatabaseOptionIsAutoShrinkOn { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"isAutoUpdateStatsOn",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DatabaseOptionIsAutoUpdateStatsOn { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"isEncrypted",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DatabaseOptionIsEncrypted { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"isMemoryOptimizationEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DatabaseOptionIsMemoryOptimizationEnabled { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"isRemoteDataArchiveEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DatabaseOptionIsRemoteDataArchiveEnabled { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"isTrustworthyOn",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DatabaseOptionIsTrustworthyOn { get; set; }
        /// <summary>Whether the database is read only or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether the database is read only or not.",
        SerializedName = @"isReadOnly",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsReadOnly { get; set; }
        /// <summary>The provisioning state of the Arc-enabled SQL Server database resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state of the Arc-enabled SQL Server database resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>Status of the database.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Status of the database.",
        SerializedName = @"recoveryMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.RecoveryMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.RecoveryMode? RecoveryMode { get; set; }
        /// <summary>Size of the database.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Size of the database.",
        SerializedName = @"sizeMB",
        PossibleTypes = new [] { typeof(float) })]
        float? SizeMb { get; set; }
        /// <summary>Space left of the database.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Space left of the database.",
        SerializedName = @"spaceAvailableMB",
        PossibleTypes = new [] { typeof(float) })]
        float? SpaceAvailableMb { get; set; }
        /// <summary>State of the database.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"State of the database.",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.DatabaseState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.DatabaseState? State { get; set; }

    }
    /// The properties of Arc Sql Server database resource
    internal partial interface ISqlServerDatabaseResourcePropertiesInternal

    {
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ISqlServerDatabaseResourcePropertiesBackupInformation BackupInformation { get; set; }
        /// <summary>Date time of last full backup.</summary>
        global::System.DateTime? BackupInformationLastFullBackup { get; set; }
        /// <summary>Date time of last log backup.</summary>
        global::System.DateTime? BackupInformationLastLogBackup { get; set; }
        /// <summary>Collation of the database.</summary>
        string CollationName { get; set; }
        /// <summary>Compatibility level of the database</summary>
        int? CompatibilityLevel { get; set; }
        /// <summary>Creation date of the database.</summary>
        global::System.DateTime? DatabaseCreationDate { get; set; }
        /// <summary>List of features that are enabled for the database</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20230315Preview.ISqlServerDatabaseResourcePropertiesDatabaseOptions DatabaseOption { get; set; }

        bool? DatabaseOptionIsAutoCloseOn { get; set; }

        bool? DatabaseOptionIsAutoCreateStatsOn { get; set; }

        bool? DatabaseOptionIsAutoShrinkOn { get; set; }

        bool? DatabaseOptionIsAutoUpdateStatsOn { get; set; }

        bool? DatabaseOptionIsEncrypted { get; set; }

        bool? DatabaseOptionIsMemoryOptimizationEnabled { get; set; }

        bool? DatabaseOptionIsRemoteDataArchiveEnabled { get; set; }

        bool? DatabaseOptionIsTrustworthyOn { get; set; }
        /// <summary>Whether the database is read only or not.</summary>
        bool? IsReadOnly { get; set; }
        /// <summary>The provisioning state of the Arc-enabled SQL Server database resource.</summary>
        string ProvisioningState { get; set; }
        /// <summary>Status of the database.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.RecoveryMode? RecoveryMode { get; set; }
        /// <summary>Size of the database.</summary>
        float? SizeMb { get; set; }
        /// <summary>Space left of the database.</summary>
        float? SpaceAvailableMb { get; set; }
        /// <summary>State of the database.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.DatabaseState? State { get; set; }

    }
}