// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.Extensions;

    /// <summary>The Managed Network resource</summary>
    public partial class ScopeAssignment :
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IScopeAssignment,
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IScopeAssignmentInternal,
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.Resource();

        /// <summary>The managed network ID with scope will be assigned to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Inlined)]
        public string AssignedManagedNetwork { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IScopeAssignmentPropertiesInternal)Property).AssignedManagedNetwork; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IScopeAssignmentPropertiesInternal)Property).AssignedManagedNetwork = value ?? null; }

        /// <summary>A unique read-only string that changes whenever the resource is updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Inlined)]
        public string Etag { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourcePropertiesInternal)Property).Etag; }

        /// <summary>
        /// Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal)__resource).Id; }

        /// <summary>The geo-location where the resource lives</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal)__resource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal)__resource).Location = value ?? null; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal)__resource).Type = value; }

        /// <summary>Internal Acessors for Etag</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IScopeAssignmentInternal.Etag { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourcePropertiesInternal)Property).Etag; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourcePropertiesInternal)Property).Etag = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IScopeAssignmentProperties Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IScopeAssignmentInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.ScopeAssignmentProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IScopeAssignmentInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourcePropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourcePropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal)__resource).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IScopeAssignmentProperties _property;

        /// <summary>The Scope Assignment properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IScopeAssignmentProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.ScopeAssignmentProperties()); set => this._property = value; }

        /// <summary>Provisioning state of the ManagedNetwork resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Support.ProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourcePropertiesInternal)Property).ProvisioningState; }

        /// <summary>
        /// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal)__resource).Type; }

        /// <summary>Creates an new <see cref="ScopeAssignment" /> instance.</summary>
        public ScopeAssignment()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// The Managed Network resource
    public partial interface IScopeAssignment :
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResource
    {
        /// <summary>The managed network ID with scope will be assigned to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The managed network ID with scope will be assigned to.",
        SerializedName = @"assignedManagedNetwork",
        PossibleTypes = new [] { typeof(string) })]
        string AssignedManagedNetwork { get; set; }
        /// <summary>A unique read-only string that changes whenever the resource is updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"A unique read-only string that changes whenever the resource is updated.",
        SerializedName = @"etag",
        PossibleTypes = new [] { typeof(string) })]
        string Etag { get;  }
        /// <summary>Provisioning state of the ManagedNetwork resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Provisioning state of the ManagedNetwork resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Support.ProvisioningState? ProvisioningState { get;  }

    }
    /// The Managed Network resource
    internal partial interface IScopeAssignmentInternal :
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal
    {
        /// <summary>The managed network ID with scope will be assigned to.</summary>
        string AssignedManagedNetwork { get; set; }
        /// <summary>A unique read-only string that changes whenever the resource is updated.</summary>
        string Etag { get; set; }
        /// <summary>The Scope Assignment properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IScopeAssignmentProperties Property { get; set; }
        /// <summary>Provisioning state of the ManagedNetwork resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Support.ProvisioningState? ProvisioningState { get; set; }

    }
}