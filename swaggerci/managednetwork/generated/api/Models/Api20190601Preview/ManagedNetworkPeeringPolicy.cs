// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.Extensions;

    /// <summary>The Managed Network Peering Policy resource</summary>
    public partial class ManagedNetworkPeeringPolicy :
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPeeringPolicy,
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPeeringPolicyInternal,
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.Resource();

        /// <summary>A unique read-only string that changes whenever the resource is updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Inlined)]
        public string Etag { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourcePropertiesInternal)Property).Etag; }

        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Inlined)]
        public string HubId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPeeringPolicyPropertiesInternal)Property).HubId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPeeringPolicyPropertiesInternal)Property).HubId = value ?? null; }

        /// <summary>
        /// Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal)__resource).Id; }

        /// <summary>The geo-location where the resource lives</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal)__resource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal)__resource).Location = value ?? null; }

        /// <summary>Gets or sets the mesh group IDs</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId[] Mesh { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPeeringPolicyPropertiesInternal)Property).Mesh; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPeeringPolicyPropertiesInternal)Property).Mesh = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for Etag</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPeeringPolicyInternal.Etag { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourcePropertiesInternal)Property).Etag; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourcePropertiesInternal)Property).Etag = value; }

        /// <summary>Internal Acessors for Hub</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPeeringPolicyInternal.Hub { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPeeringPolicyPropertiesInternal)Property).Hub; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPeeringPolicyPropertiesInternal)Property).Hub = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPeeringPolicyProperties Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPeeringPolicyInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.ManagedNetworkPeeringPolicyProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPeeringPolicyInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourcePropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourcePropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal)__resource).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal)__resource).Name; }

        /// <summary>Gets or sets the connectivity type of a network structure policy</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Support.Type? PropertiesType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPeeringPolicyPropertiesInternal)Property).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPeeringPolicyPropertiesInternal)Property).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Support.Type)""); }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPeeringPolicyProperties _property;

        /// <summary>Gets or sets the properties of a Managed Network Policy</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPeeringPolicyProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.ManagedNetworkPeeringPolicyProperties()); set => this._property = value; }

        /// <summary>Provisioning state of the ManagedNetwork resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Support.ProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourcePropertiesInternal)Property).ProvisioningState; }

        /// <summary>Gets or sets the spokes group IDs</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId[] Spoke { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPeeringPolicyPropertiesInternal)Property).Spoke; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPeeringPolicyPropertiesInternal)Property).Spoke = value ?? null /* arrayOf */; }

        /// <summary>
        /// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal)__resource).Type; }

        /// <summary>Creates an new <see cref="ManagedNetworkPeeringPolicy" /> instance.</summary>
        public ManagedNetworkPeeringPolicy()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// The Managed Network Peering Policy resource
    public partial interface IManagedNetworkPeeringPolicy :
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResource
    {
        /// <summary>A unique read-only string that changes whenever the resource is updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"A unique read-only string that changes whenever the resource is updated.",
        SerializedName = @"etag",
        PossibleTypes = new [] { typeof(string) })]
        string Etag { get;  }
        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource Id",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string HubId { get; set; }
        /// <summary>Gets or sets the mesh group IDs</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets or sets the mesh group IDs",
        SerializedName = @"mesh",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId) })]
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId[] Mesh { get; set; }
        /// <summary>Gets or sets the connectivity type of a network structure policy</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets or sets the connectivity type of a network structure policy",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Support.Type) })]
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Support.Type? PropertiesType { get; set; }
        /// <summary>Provisioning state of the ManagedNetwork resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Provisioning state of the ManagedNetwork resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>Gets or sets the spokes group IDs</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets or sets the spokes group IDs",
        SerializedName = @"spokes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId) })]
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId[] Spoke { get; set; }

    }
    /// The Managed Network Peering Policy resource
    internal partial interface IManagedNetworkPeeringPolicyInternal :
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal
    {
        /// <summary>A unique read-only string that changes whenever the resource is updated.</summary>
        string Etag { get; set; }
        /// <summary>Gets or sets the hub virtual network ID</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId Hub { get; set; }
        /// <summary>Resource Id</summary>
        string HubId { get; set; }
        /// <summary>Gets or sets the mesh group IDs</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId[] Mesh { get; set; }
        /// <summary>Gets or sets the connectivity type of a network structure policy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Support.Type? PropertiesType { get; set; }
        /// <summary>Gets or sets the properties of a Managed Network Policy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPeeringPolicyProperties Property { get; set; }
        /// <summary>Provisioning state of the ManagedNetwork resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>Gets or sets the spokes group IDs</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId[] Spoke { get; set; }

    }
}