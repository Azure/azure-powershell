// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.Extensions;

    /// <summary>The Managed Network resource</summary>
    public partial class ManagedNetwork :
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetwork,
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkInternal,
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.ITrackedResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.ITrackedResource __trackedResource = new Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.TrackedResource();

        /// <summary>
        /// The collection of connectivity related Managed Network Groups within the Managed Network
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkGroup[] ConnectivityGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPropertiesInternal)Property).ConnectivityGroup; }

        /// <summary>The collection of Managed Network Peering Policies within the Managed Network</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPeeringPolicy[] ConnectivityPeering { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPropertiesInternal)Property).ConnectivityPeering; }

        /// <summary>A unique read-only string that changes whenever the resource is updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Inlined)]
        public string Etag { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourcePropertiesInternal)Property).Etag; }

        /// <summary>
        /// Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal)__trackedResource).Id; }

        /// <summary>The geo-location where the resource lives</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal)__trackedResource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal)__trackedResource).Location = value ?? null; }

        /// <summary>Internal Acessors for Connectivity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IConnectivityCollection Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkInternal.Connectivity { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPropertiesInternal)Property).Connectivity; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPropertiesInternal)Property).Connectivity = value; }

        /// <summary>Internal Acessors for ConnectivityGroup</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkGroup[] Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkInternal.ConnectivityGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPropertiesInternal)Property).ConnectivityGroup; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPropertiesInternal)Property).ConnectivityGroup = value; }

        /// <summary>Internal Acessors for ConnectivityPeering</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPeeringPolicy[] Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkInternal.ConnectivityPeering { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPropertiesInternal)Property).ConnectivityPeering; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPropertiesInternal)Property).ConnectivityPeering = value; }

        /// <summary>Internal Acessors for Etag</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkInternal.Etag { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourcePropertiesInternal)Property).Etag; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourcePropertiesInternal)Property).Etag = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkProperties Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.ManagedNetworkProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourcePropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourcePropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for Scope</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IScope Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkInternal.Scope { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPropertiesInternal)Property).Scope; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPropertiesInternal)Property).Scope = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal)__trackedResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal)__trackedResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal)__trackedResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal)__trackedResource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal)__trackedResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal)__trackedResource).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal)__trackedResource).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkProperties _property;

        /// <summary>The MNC properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.ManagedNetworkProperties()); set => this._property = value; }

        /// <summary>Provisioning state of the ManagedNetwork resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Support.ProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourcePropertiesInternal)Property).ProvisioningState; }

        /// <summary>The collection of management groups covered by the Managed Network</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId[] ScopeManagementGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPropertiesInternal)Property).ScopeManagementGroup; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPropertiesInternal)Property).ScopeManagementGroup = value ?? null /* arrayOf */; }

        /// <summary>The collection of subnets covered by the Managed Network</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId[] ScopeSubnet { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPropertiesInternal)Property).ScopeSubnet; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPropertiesInternal)Property).ScopeSubnet = value ?? null /* arrayOf */; }

        /// <summary>The collection of subscriptions covered by the Managed Network</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId[] ScopeSubscription { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPropertiesInternal)Property).ScopeSubscription; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPropertiesInternal)Property).ScopeSubscription = value ?? null /* arrayOf */; }

        /// <summary>The collection of virtual nets covered by the Managed Network</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId[] ScopeVirtualNetwork { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPropertiesInternal)Property).ScopeVirtualNetwork; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPropertiesInternal)Property).ScopeVirtualNetwork = value ?? null /* arrayOf */; }

        /// <summary>Resource tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.ITrackedResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.ITrackedResourceInternal)__trackedResource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.ITrackedResourceInternal)__trackedResource).Tag = value ?? null /* model class */; }

        /// <summary>
        /// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal)__trackedResource).Type; }

        /// <summary>Creates an new <see cref="ManagedNetwork" /> instance.</summary>
        public ManagedNetwork()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__trackedResource), __trackedResource);
            await eventListener.AssertObjectIsValid(nameof(__trackedResource), __trackedResource);
        }
    }
    /// The Managed Network resource
    public partial interface IManagedNetwork :
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.ITrackedResource
    {
        /// <summary>
        /// The collection of connectivity related Managed Network Groups within the Managed Network
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The collection of connectivity related Managed Network Groups within the Managed Network",
        SerializedName = @"groups",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkGroup) })]
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkGroup[] ConnectivityGroup { get;  }
        /// <summary>The collection of Managed Network Peering Policies within the Managed Network</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The collection of Managed Network Peering Policies within the Managed Network",
        SerializedName = @"peerings",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPeeringPolicy) })]
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPeeringPolicy[] ConnectivityPeering { get;  }
        /// <summary>A unique read-only string that changes whenever the resource is updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"A unique read-only string that changes whenever the resource is updated.",
        SerializedName = @"etag",
        PossibleTypes = new [] { typeof(string) })]
        string Etag { get;  }
        /// <summary>Provisioning state of the ManagedNetwork resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Provisioning state of the ManagedNetwork resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>The collection of management groups covered by the Managed Network</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The collection of management groups covered by the Managed Network",
        SerializedName = @"managementGroups",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId) })]
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId[] ScopeManagementGroup { get; set; }
        /// <summary>The collection of subnets covered by the Managed Network</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The collection of  subnets covered by the Managed Network",
        SerializedName = @"subnets",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId) })]
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId[] ScopeSubnet { get; set; }
        /// <summary>The collection of subscriptions covered by the Managed Network</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The collection of subscriptions covered by the Managed Network",
        SerializedName = @"subscriptions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId) })]
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId[] ScopeSubscription { get; set; }
        /// <summary>The collection of virtual nets covered by the Managed Network</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The collection of virtual nets covered by the Managed Network",
        SerializedName = @"virtualNetworks",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId) })]
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId[] ScopeVirtualNetwork { get; set; }

    }
    /// The Managed Network resource
    internal partial interface IManagedNetworkInternal :
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.ITrackedResourceInternal
    {
        /// <summary>The collection of groups and policies concerned with connectivity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IConnectivityCollection Connectivity { get; set; }
        /// <summary>
        /// The collection of connectivity related Managed Network Groups within the Managed Network
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkGroup[] ConnectivityGroup { get; set; }
        /// <summary>The collection of Managed Network Peering Policies within the Managed Network</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPeeringPolicy[] ConnectivityPeering { get; set; }
        /// <summary>A unique read-only string that changes whenever the resource is updated.</summary>
        string Etag { get; set; }
        /// <summary>The MNC properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkProperties Property { get; set; }
        /// <summary>Provisioning state of the ManagedNetwork resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>
        /// The collection of management groups, subscriptions, virtual networks, and subnets by the Managed Network. This is a read-only
        /// property that is reflective of all ScopeAssignments for this Managed Network
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IScope Scope { get; set; }
        /// <summary>The collection of management groups covered by the Managed Network</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId[] ScopeManagementGroup { get; set; }
        /// <summary>The collection of subnets covered by the Managed Network</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId[] ScopeSubnet { get; set; }
        /// <summary>The collection of subscriptions covered by the Managed Network</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId[] ScopeSubscription { get; set; }
        /// <summary>The collection of virtual nets covered by the Managed Network</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId[] ScopeVirtualNetwork { get; set; }

    }
}