// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.Extensions;

    /// <summary>The Managed Network Group resource</summary>
    public partial class ManagedNetworkGroup :
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkGroup,
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkGroupInternal,
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.Resource();

        /// <summary>A unique read-only string that changes whenever the resource is updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Inlined)]
        public string Etag { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourcePropertiesInternal)Property).Etag; }

        /// <summary>
        /// Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal)__resource).Id; }

        /// <summary>Backing field for <see cref="Kind" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Support.Kind? _kind;

        /// <summary>Responsibility role under which this Managed Network Group will be created</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Support.Kind? Kind { get => this._kind; set => this._kind = value; }

        /// <summary>The geo-location where the resource lives</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal)__resource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal)__resource).Location = value ?? null; }

        /// <summary>The collection of management groups covered by the Managed Network</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId[] ManagementGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkGroupPropertiesInternal)Property).ManagementGroup; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkGroupPropertiesInternal)Property).ManagementGroup = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for Etag</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkGroupInternal.Etag { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourcePropertiesInternal)Property).Etag; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourcePropertiesInternal)Property).Etag = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkGroupProperties Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkGroupInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.ManagedNetworkGroupProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkGroupInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourcePropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourcePropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal)__resource).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal)__resource).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkGroupProperties _property;

        /// <summary>Gets or sets the properties of a network group</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkGroupProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.ManagedNetworkGroupProperties()); set => this._property = value; }

        /// <summary>Provisioning state of the ManagedNetwork resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Support.ProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourcePropertiesInternal)Property).ProvisioningState; }

        /// <summary>The collection of subnets covered by the Managed Network</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId[] Subnet { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkGroupPropertiesInternal)Property).Subnet; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkGroupPropertiesInternal)Property).Subnet = value ?? null /* arrayOf */; }

        /// <summary>The collection of subscriptions covered by the Managed Network</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId[] Subscription { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkGroupPropertiesInternal)Property).Subscription; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkGroupPropertiesInternal)Property).Subscription = value ?? null /* arrayOf */; }

        /// <summary>
        /// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal)__resource).Type; }

        /// <summary>The collection of virtual nets covered by the Managed Network</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId[] VirtualNetwork { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkGroupPropertiesInternal)Property).VirtualNetwork; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkGroupPropertiesInternal)Property).VirtualNetwork = value ?? null /* arrayOf */; }

        /// <summary>Creates an new <see cref="ManagedNetworkGroup" /> instance.</summary>
        public ManagedNetworkGroup()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// The Managed Network Group resource
    public partial interface IManagedNetworkGroup :
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResource
    {
        /// <summary>A unique read-only string that changes whenever the resource is updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"A unique read-only string that changes whenever the resource is updated.",
        SerializedName = @"etag",
        PossibleTypes = new [] { typeof(string) })]
        string Etag { get;  }
        /// <summary>Responsibility role under which this Managed Network Group will be created</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Responsibility role under which this Managed Network Group will be created",
        SerializedName = @"kind",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Support.Kind) })]
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Support.Kind? Kind { get; set; }
        /// <summary>The collection of management groups covered by the Managed Network</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The collection of management groups covered by the Managed Network",
        SerializedName = @"managementGroups",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId) })]
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId[] ManagementGroup { get; set; }
        /// <summary>Provisioning state of the ManagedNetwork resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Provisioning state of the ManagedNetwork resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>The collection of subnets covered by the Managed Network</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The collection of  subnets covered by the Managed Network",
        SerializedName = @"subnets",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId) })]
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId[] Subnet { get; set; }
        /// <summary>The collection of subscriptions covered by the Managed Network</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The collection of subscriptions covered by the Managed Network",
        SerializedName = @"subscriptions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId) })]
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId[] Subscription { get; set; }
        /// <summary>The collection of virtual nets covered by the Managed Network</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The collection of virtual nets covered by the Managed Network",
        SerializedName = @"virtualNetworks",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId) })]
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId[] VirtualNetwork { get; set; }

    }
    /// The Managed Network Group resource
    internal partial interface IManagedNetworkGroupInternal :
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceInternal
    {
        /// <summary>A unique read-only string that changes whenever the resource is updated.</summary>
        string Etag { get; set; }
        /// <summary>Responsibility role under which this Managed Network Group will be created</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Support.Kind? Kind { get; set; }
        /// <summary>The collection of management groups covered by the Managed Network</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId[] ManagementGroup { get; set; }
        /// <summary>Gets or sets the properties of a network group</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkGroupProperties Property { get; set; }
        /// <summary>Provisioning state of the ManagedNetwork resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>The collection of subnets covered by the Managed Network</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId[] Subnet { get; set; }
        /// <summary>The collection of subscriptions covered by the Managed Network</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId[] Subscription { get; set; }
        /// <summary>The collection of virtual nets covered by the Managed Network</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId[] VirtualNetwork { get; set; }

    }
}