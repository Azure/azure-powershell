// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.Extensions;

    /// <summary>Properties of Managed Network</summary>
    public partial class ManagedNetworkProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPropertiesInternal,
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceProperties"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceProperties __resourceProperties = new Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.ResourceProperties();

        /// <summary>Backing field for <see cref="Connectivity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IConnectivityCollection _connectivity;

        /// <summary>The collection of groups and policies concerned with connectivity</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IConnectivityCollection Connectivity { get => (this._connectivity = this._connectivity ?? new Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.ConnectivityCollection()); }

        /// <summary>
        /// The collection of connectivity related Managed Network Groups within the Managed Network
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkGroup[] ConnectivityGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IConnectivityCollectionInternal)Connectivity).Group; }

        /// <summary>The collection of Managed Network Peering Policies within the Managed Network</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPeeringPolicy[] ConnectivityPeering { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IConnectivityCollectionInternal)Connectivity).Peering; }

        /// <summary>A unique read-only string that changes whenever the resource is updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Inherited)]
        public string Etag { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourcePropertiesInternal)__resourceProperties).Etag; }

        /// <summary>Internal Acessors for Connectivity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IConnectivityCollection Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPropertiesInternal.Connectivity { get => (this._connectivity = this._connectivity ?? new Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.ConnectivityCollection()); set { {_connectivity = value;} } }

        /// <summary>Internal Acessors for ConnectivityGroup</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkGroup[] Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPropertiesInternal.ConnectivityGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IConnectivityCollectionInternal)Connectivity).Group; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IConnectivityCollectionInternal)Connectivity).Group = value; }

        /// <summary>Internal Acessors for ConnectivityPeering</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPeeringPolicy[] Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPropertiesInternal.ConnectivityPeering { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IConnectivityCollectionInternal)Connectivity).Peering; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IConnectivityCollectionInternal)Connectivity).Peering = value; }

        /// <summary>Internal Acessors for Scope</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IScope Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPropertiesInternal.Scope { get => (this._scope = this._scope ?? new Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.Scope()); set { {_scope = value;} } }

        /// <summary>Internal Acessors for Etag</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourcePropertiesInternal.Etag { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourcePropertiesInternal)__resourceProperties).Etag; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourcePropertiesInternal)__resourceProperties).Etag = value; }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourcePropertiesInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourcePropertiesInternal)__resourceProperties).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourcePropertiesInternal)__resourceProperties).ProvisioningState = value; }

        /// <summary>Provisioning state of the ManagedNetwork resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Support.ProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourcePropertiesInternal)__resourceProperties).ProvisioningState; }

        /// <summary>Backing field for <see cref="Scope" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IScope _scope;

        /// <summary>
        /// The collection of management groups, subscriptions, virtual networks, and subnets by the Managed Network. This is a read-only
        /// property that is reflective of all ScopeAssignments for this Managed Network
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IScope Scope { get => (this._scope = this._scope ?? new Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.Scope()); set => this._scope = value; }

        /// <summary>The collection of management groups covered by the Managed Network</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId[] ScopeManagementGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IScopeInternal)Scope).ManagementGroup; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IScopeInternal)Scope).ManagementGroup = value ?? null /* arrayOf */; }

        /// <summary>The collection of subnets covered by the Managed Network</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId[] ScopeSubnet { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IScopeInternal)Scope).Subnet; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IScopeInternal)Scope).Subnet = value ?? null /* arrayOf */; }

        /// <summary>The collection of subscriptions covered by the Managed Network</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId[] ScopeSubscription { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IScopeInternal)Scope).Subscription; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IScopeInternal)Scope).Subscription = value ?? null /* arrayOf */; }

        /// <summary>The collection of virtual nets covered by the Managed Network</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId[] ScopeVirtualNetwork { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IScopeInternal)Scope).VirtualNetwork; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IScopeInternal)Scope).VirtualNetwork = value ?? null /* arrayOf */; }

        /// <summary>Creates an new <see cref="ManagedNetworkProperties" /> instance.</summary>
        public ManagedNetworkProperties()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resourceProperties), __resourceProperties);
            await eventListener.AssertObjectIsValid(nameof(__resourceProperties), __resourceProperties);
        }
    }
    /// Properties of Managed Network
    public partial interface IManagedNetworkProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceProperties
    {
        /// <summary>
        /// The collection of connectivity related Managed Network Groups within the Managed Network
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The collection of connectivity related Managed Network Groups within the Managed Network",
        SerializedName = @"groups",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkGroup) })]
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkGroup[] ConnectivityGroup { get;  }
        /// <summary>The collection of Managed Network Peering Policies within the Managed Network</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The collection of Managed Network Peering Policies within the Managed Network",
        SerializedName = @"peerings",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPeeringPolicy) })]
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPeeringPolicy[] ConnectivityPeering { get;  }
        /// <summary>The collection of management groups covered by the Managed Network</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The collection of management groups covered by the Managed Network",
        SerializedName = @"managementGroups",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId) })]
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId[] ScopeManagementGroup { get; set; }
        /// <summary>The collection of subnets covered by the Managed Network</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The collection of  subnets covered by the Managed Network",
        SerializedName = @"subnets",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId) })]
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId[] ScopeSubnet { get; set; }
        /// <summary>The collection of subscriptions covered by the Managed Network</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The collection of subscriptions covered by the Managed Network",
        SerializedName = @"subscriptions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId) })]
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId[] ScopeSubscription { get; set; }
        /// <summary>The collection of virtual nets covered by the Managed Network</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The collection of virtual nets covered by the Managed Network",
        SerializedName = @"virtualNetworks",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId) })]
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId[] ScopeVirtualNetwork { get; set; }

    }
    /// Properties of Managed Network
    internal partial interface IManagedNetworkPropertiesInternal :
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourcePropertiesInternal
    {
        /// <summary>The collection of groups and policies concerned with connectivity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IConnectivityCollection Connectivity { get; set; }
        /// <summary>
        /// The collection of connectivity related Managed Network Groups within the Managed Network
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkGroup[] ConnectivityGroup { get; set; }
        /// <summary>The collection of Managed Network Peering Policies within the Managed Network</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IManagedNetworkPeeringPolicy[] ConnectivityPeering { get; set; }
        /// <summary>
        /// The collection of management groups, subscriptions, virtual networks, and subnets by the Managed Network. This is a read-only
        /// property that is reflective of all ScopeAssignments for this Managed Network
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IScope Scope { get; set; }
        /// <summary>The collection of management groups covered by the Managed Network</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId[] ScopeManagementGroup { get; set; }
        /// <summary>The collection of subnets covered by the Managed Network</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId[] ScopeSubnet { get; set; }
        /// <summary>The collection of subscriptions covered by the Managed Network</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId[] ScopeSubscription { get; set; }
        /// <summary>The collection of virtual nets covered by the Managed Network</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetwork.Models.Api20190601Preview.IResourceId[] ScopeVirtualNetwork { get; set; }

    }
}