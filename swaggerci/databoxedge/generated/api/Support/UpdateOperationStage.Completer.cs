// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support
{

    /// <summary>Current stage of the update operation.</summary>
    [System.ComponentModel.TypeConverter(typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.UpdateOperationStageTypeConverter))]
    public partial struct UpdateOperationStage :
        System.Management.Automation.IArgumentCompleter
    {

        /// <summary>
        /// Implementations of this function are called by PowerShell to complete arguments.
        /// </summary>
        /// <param name="commandName">The name of the command that needs argument completion.</param>
        /// <param name="parameterName">The name of the parameter that needs argument completion.</param>
        /// <param name="wordToComplete">The (possibly empty) word being completed.</param>
        /// <param name="commandAst">The command ast in case it is needed for completion.</param>
        /// <param name="fakeBoundParameters">This parameter is similar to $PSBoundParameters, except that sometimes PowerShell cannot
        /// or will not attempt to evaluate an argument, in which case you may need to use commandAst.</param>
        /// <returns>
        /// A collection of completion results, most like with ResultType set to ParameterValue.
        /// </returns>
        public global::System.Collections.Generic.IEnumerable<global::System.Management.Automation.CompletionResult> CompleteArgument(global::System.String commandName, global::System.String parameterName, global::System.String wordToComplete, global::System.Management.Automation.Language.CommandAst commandAst, global::System.Collections.IDictionary fakeBoundParameters)
        {
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Unknown".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Unknown'", "Unknown", global::System.Management.Automation.CompletionResultType.ParameterValue, "Unknown");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Initial".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Initial'", "Initial", global::System.Management.Automation.CompletionResultType.ParameterValue, "Initial");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "ScanStarted".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'ScanStarted'", "ScanStarted", global::System.Management.Automation.CompletionResultType.ParameterValue, "ScanStarted");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "ScanComplete".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'ScanComplete'", "ScanComplete", global::System.Management.Automation.CompletionResultType.ParameterValue, "ScanComplete");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "ScanFailed".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'ScanFailed'", "ScanFailed", global::System.Management.Automation.CompletionResultType.ParameterValue, "ScanFailed");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "DownloadStarted".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'DownloadStarted'", "DownloadStarted", global::System.Management.Automation.CompletionResultType.ParameterValue, "DownloadStarted");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "DownloadComplete".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'DownloadComplete'", "DownloadComplete", global::System.Management.Automation.CompletionResultType.ParameterValue, "DownloadComplete");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "DownloadFailed".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'DownloadFailed'", "DownloadFailed", global::System.Management.Automation.CompletionResultType.ParameterValue, "DownloadFailed");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "InstallStarted".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'InstallStarted'", "InstallStarted", global::System.Management.Automation.CompletionResultType.ParameterValue, "InstallStarted");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "InstallComplete".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'InstallComplete'", "InstallComplete", global::System.Management.Automation.CompletionResultType.ParameterValue, "InstallComplete");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "InstallFailed".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'InstallFailed'", "InstallFailed", global::System.Management.Automation.CompletionResultType.ParameterValue, "InstallFailed");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "RebootInitiated".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'RebootInitiated'", "RebootInitiated", global::System.Management.Automation.CompletionResultType.ParameterValue, "RebootInitiated");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Success".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Success'", "Success", global::System.Management.Automation.CompletionResultType.ParameterValue, "Success");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Failure".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Failure'", "Failure", global::System.Management.Automation.CompletionResultType.ParameterValue, "Failure");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "RescanStarted".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'RescanStarted'", "RescanStarted", global::System.Management.Automation.CompletionResultType.ParameterValue, "RescanStarted");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "RescanComplete".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'RescanComplete'", "RescanComplete", global::System.Management.Automation.CompletionResultType.ParameterValue, "RescanComplete");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "RescanFailed".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'RescanFailed'", "RescanFailed", global::System.Management.Automation.CompletionResultType.ParameterValue, "RescanFailed");
            }
        }
    }
}