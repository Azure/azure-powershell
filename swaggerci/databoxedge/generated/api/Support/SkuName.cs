// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support
{

    /// <summary>The Sku name.</summary>
    public partial struct SkuName :
        System.IEquatable<SkuName>
    {
        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.SkuName Edge = @"Edge";

        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.SkuName EdgeMrMini = @"EdgeMR_Mini";

        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.SkuName EdgeMrTcp = @"EdgeMR_TCP";

        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.SkuName EdgePBase = @"EdgeP_Base";

        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.SkuName EdgePHigh = @"EdgeP_High";

        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.SkuName EdgePrBase = @"EdgePR_Base";

        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.SkuName EdgePrBaseUps = @"EdgePR_Base_UPS";

        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.SkuName Ep21281T4Mx1W = @"EP2_128_1T4_Mx1_W";

        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.SkuName Ep2128Gpu1Mx1W = @"EP2_128_GPU1_Mx1_W";

        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.SkuName Ep22562T4W = @"EP2_256_2T4_W";

        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.SkuName Ep2256Gpu2Mx1 = @"EP2_256_GPU2_Mx1";

        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.SkuName Ep2641VpuW = @"EP2_64_1VPU_W";

        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.SkuName Ep264Mx1W = @"EP2_64_Mx1_W";

        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.SkuName Gateway = @"Gateway";

        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.SkuName Gpu = @"GPU";

        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.SkuName Management = @"Management";

        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.SkuName RcaLarge = @"RCA_Large";

        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.SkuName RcaSmall = @"RCA_Small";

        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.SkuName Rdc = @"RDC";

        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.SkuName TcaLarge = @"TCA_Large";

        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.SkuName TcaSmall = @"TCA_Small";

        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.SkuName Tdc = @"TDC";

        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.SkuName Tea1Node = @"TEA_1Node";

        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.SkuName Tea1NodeHeater = @"TEA_1Node_Heater";

        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.SkuName Tea1NodeUps = @"TEA_1Node_UPS";

        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.SkuName Tea1NodeUpsHeater = @"TEA_1Node_UPS_Heater";

        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.SkuName Tea4NodeHeater = @"TEA_4Node_Heater";

        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.SkuName Tea4NodeUpsHeater = @"TEA_4Node_UPS_Heater";

        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.SkuName Tma = @"TMA";

        /// <summary>the value for an instance of the <see cref="SkuName" /> Enum.</summary>
        private string _value { get; set; }

        /// <summary>Conversion from arbitrary object to SkuName</summary>
        /// <param name="value">the value to convert to an instance of <see cref="SkuName" />.</param>
        internal static object CreateFrom(object value)
        {
            return new SkuName(global::System.Convert.ToString(value));
        }

        /// <summary>Compares values of enum type SkuName</summary>
        /// <param name="e">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public bool Equals(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.SkuName e)
        {
            return _value.Equals(e._value);
        }

        /// <summary>Compares values of enum type SkuName (override for Object)</summary>
        /// <param name="obj">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public override bool Equals(object obj)
        {
            return obj is SkuName && Equals((SkuName)obj);
        }

        /// <summary>Returns hashCode for enum SkuName</summary>
        /// <returns>The hashCode of the value</returns>
        public override int GetHashCode()
        {
            return this._value.GetHashCode();
        }

        /// <summary>Creates an instance of the <see cref="SkuName" Enum class./></summary>
        /// <param name="underlyingValue">the value to create an instance for.</param>
        private SkuName(string underlyingValue)
        {
            this._value = underlyingValue;
        }

        /// <summary>Returns string representation for SkuName</summary>
        /// <returns>A string for this value.</returns>
        public override string ToString()
        {
            return this._value;
        }

        /// <summary>Implicit operator to convert string to SkuName</summary>
        /// <param name="value">the value to convert to an instance of <see cref="SkuName" />.</param>

        public static implicit operator SkuName(string value)
        {
            return new SkuName(value);
        }

        /// <summary>Implicit operator to convert SkuName to string</summary>
        /// <param name="e">the value to convert to an instance of <see cref="SkuName" />.</param>

        public static implicit operator string(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.SkuName e)
        {
            return e._value;
        }

        /// <summary>Overriding != operator for enum SkuName</summary>
        /// <param name="e1">the value to compare against <see cref="e2" /></param>
        /// <param name="e2">the value to compare against <see cref="e1" /></param>
        /// <returns><c>true</c> if the two instances are not equal to the same value</returns>
        public static bool operator !=(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.SkuName e1, Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.SkuName e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>Overriding == operator for enum SkuName</summary>
        /// <param name="e1">the value to compare against <see cref="e2" /></param>
        /// <param name="e2">the value to compare against <see cref="e1" /></param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public static bool operator ==(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.SkuName e1, Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.SkuName e2)
        {
            return e2.Equals(e1);
        }
    }
}