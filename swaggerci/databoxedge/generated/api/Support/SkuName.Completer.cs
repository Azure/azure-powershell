// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support
{

    /// <summary>The Sku name.</summary>
    [System.ComponentModel.TypeConverter(typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.SkuNameTypeConverter))]
    public partial struct SkuName :
        System.Management.Automation.IArgumentCompleter
    {

        /// <summary>
        /// Implementations of this function are called by PowerShell to complete arguments.
        /// </summary>
        /// <param name="commandName">The name of the command that needs argument completion.</param>
        /// <param name="parameterName">The name of the parameter that needs argument completion.</param>
        /// <param name="wordToComplete">The (possibly empty) word being completed.</param>
        /// <param name="commandAst">The command ast in case it is needed for completion.</param>
        /// <param name="fakeBoundParameters">This parameter is similar to $PSBoundParameters, except that sometimes PowerShell cannot
        /// or will not attempt to evaluate an argument, in which case you may need to use commandAst.</param>
        /// <returns>
        /// A collection of completion results, most like with ResultType set to ParameterValue.
        /// </returns>
        public global::System.Collections.Generic.IEnumerable<global::System.Management.Automation.CompletionResult> CompleteArgument(global::System.String commandName, global::System.String parameterName, global::System.String wordToComplete, global::System.Management.Automation.Language.CommandAst commandAst, global::System.Collections.IDictionary fakeBoundParameters)
        {
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Gateway".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Gateway'", "Gateway", global::System.Management.Automation.CompletionResultType.ParameterValue, "Gateway");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Edge".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Edge'", "Edge", global::System.Management.Automation.CompletionResultType.ParameterValue, "Edge");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "TEA_1Node".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'TEA_1Node'", "TEA_1Node", global::System.Management.Automation.CompletionResultType.ParameterValue, "TEA_1Node");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "TEA_1Node_UPS".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'TEA_1Node_UPS'", "TEA_1Node_UPS", global::System.Management.Automation.CompletionResultType.ParameterValue, "TEA_1Node_UPS");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "TEA_1Node_Heater".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'TEA_1Node_Heater'", "TEA_1Node_Heater", global::System.Management.Automation.CompletionResultType.ParameterValue, "TEA_1Node_Heater");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "TEA_1Node_UPS_Heater".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'TEA_1Node_UPS_Heater'", "TEA_1Node_UPS_Heater", global::System.Management.Automation.CompletionResultType.ParameterValue, "TEA_1Node_UPS_Heater");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "TEA_4Node_Heater".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'TEA_4Node_Heater'", "TEA_4Node_Heater", global::System.Management.Automation.CompletionResultType.ParameterValue, "TEA_4Node_Heater");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "TEA_4Node_UPS_Heater".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'TEA_4Node_UPS_Heater'", "TEA_4Node_UPS_Heater", global::System.Management.Automation.CompletionResultType.ParameterValue, "TEA_4Node_UPS_Heater");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "TMA".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'TMA'", "TMA", global::System.Management.Automation.CompletionResultType.ParameterValue, "TMA");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "TDC".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'TDC'", "TDC", global::System.Management.Automation.CompletionResultType.ParameterValue, "TDC");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "TCA_Small".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'TCA_Small'", "TCA_Small", global::System.Management.Automation.CompletionResultType.ParameterValue, "TCA_Small");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "GPU".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'GPU'", "GPU", global::System.Management.Automation.CompletionResultType.ParameterValue, "GPU");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "TCA_Large".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'TCA_Large'", "TCA_Large", global::System.Management.Automation.CompletionResultType.ParameterValue, "TCA_Large");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "EdgeP_Base".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'EdgeP_Base'", "EdgeP_Base", global::System.Management.Automation.CompletionResultType.ParameterValue, "EdgeP_Base");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "EdgeP_High".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'EdgeP_High'", "EdgeP_High", global::System.Management.Automation.CompletionResultType.ParameterValue, "EdgeP_High");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "EdgePR_Base".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'EdgePR_Base'", "EdgePR_Base", global::System.Management.Automation.CompletionResultType.ParameterValue, "EdgePR_Base");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "EdgePR_Base_UPS".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'EdgePR_Base_UPS'", "EdgePR_Base_UPS", global::System.Management.Automation.CompletionResultType.ParameterValue, "EdgePR_Base_UPS");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "EP2_64_1VPU_W".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'EP2_64_1VPU_W'", "EP2_64_1VPU_W", global::System.Management.Automation.CompletionResultType.ParameterValue, "EP2_64_1VPU_W");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "EP2_128_1T4_Mx1_W".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'EP2_128_1T4_Mx1_W'", "EP2_128_1T4_Mx1_W", global::System.Management.Automation.CompletionResultType.ParameterValue, "EP2_128_1T4_Mx1_W");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "EP2_256_2T4_W".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'EP2_256_2T4_W'", "EP2_256_2T4_W", global::System.Management.Automation.CompletionResultType.ParameterValue, "EP2_256_2T4_W");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "EdgeMR_Mini".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'EdgeMR_Mini'", "EdgeMR_Mini", global::System.Management.Automation.CompletionResultType.ParameterValue, "EdgeMR_Mini");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "RCA_Small".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'RCA_Small'", "RCA_Small", global::System.Management.Automation.CompletionResultType.ParameterValue, "RCA_Small");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "RCA_Large".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'RCA_Large'", "RCA_Large", global::System.Management.Automation.CompletionResultType.ParameterValue, "RCA_Large");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "RDC".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'RDC'", "RDC", global::System.Management.Automation.CompletionResultType.ParameterValue, "RDC");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Management".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Management'", "Management", global::System.Management.Automation.CompletionResultType.ParameterValue, "Management");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "EP2_64_Mx1_W".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'EP2_64_Mx1_W'", "EP2_64_Mx1_W", global::System.Management.Automation.CompletionResultType.ParameterValue, "EP2_64_Mx1_W");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "EP2_128_GPU1_Mx1_W".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'EP2_128_GPU1_Mx1_W'", "EP2_128_GPU1_Mx1_W", global::System.Management.Automation.CompletionResultType.ParameterValue, "EP2_128_GPU1_Mx1_W");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "EP2_256_GPU2_Mx1".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'EP2_256_GPU2_Mx1'", "EP2_256_GPU2_Mx1", global::System.Management.Automation.CompletionResultType.ParameterValue, "EP2_256_GPU2_Mx1");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "EdgeMR_TCP".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'EdgeMR_TCP'", "EdgeMR_TCP", global::System.Management.Automation.CompletionResultType.ParameterValue, "EdgeMR_TCP");
            }
        }
    }
}