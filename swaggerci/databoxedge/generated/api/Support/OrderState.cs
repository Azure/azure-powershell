// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support
{

    /// <summary>Status of the order as per the allowed status types.</summary>
    public partial struct OrderState :
        System.IEquatable<OrderState>
    {
        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.OrderState Arriving = @"Arriving";

        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.OrderState AwaitingDrop = @"AwaitingDrop";

        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.OrderState AwaitingFulfillment = @"AwaitingFulfillment";

        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.OrderState AwaitingPickup = @"AwaitingPickup";

        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.OrderState AwaitingPreparation = @"AwaitingPreparation";

        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.OrderState AwaitingReturnShipment = @"AwaitingReturnShipment";

        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.OrderState AwaitingShipment = @"AwaitingShipment";

        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.OrderState CollectedAtMicrosoft = @"CollectedAtMicrosoft";

        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.OrderState Declined = @"Declined";

        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.OrderState Delivered = @"Delivered";

        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.OrderState LostDevice = @"LostDevice";

        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.OrderState PickupCompleted = @"PickupCompleted";

        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.OrderState ReplacementRequested = @"ReplacementRequested";

        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.OrderState ReturnInitiated = @"ReturnInitiated";

        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.OrderState Shipped = @"Shipped";

        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.OrderState ShippedBack = @"ShippedBack";

        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.OrderState Untracked = @"Untracked";

        /// <summary>the value for an instance of the <see cref="OrderState" /> Enum.</summary>
        private string _value { get; set; }

        /// <summary>Conversion from arbitrary object to OrderState</summary>
        /// <param name="value">the value to convert to an instance of <see cref="OrderState" />.</param>
        internal static object CreateFrom(object value)
        {
            return new OrderState(global::System.Convert.ToString(value));
        }

        /// <summary>Compares values of enum type OrderState</summary>
        /// <param name="e">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public bool Equals(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.OrderState e)
        {
            return _value.Equals(e._value);
        }

        /// <summary>Compares values of enum type OrderState (override for Object)</summary>
        /// <param name="obj">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public override bool Equals(object obj)
        {
            return obj is OrderState && Equals((OrderState)obj);
        }

        /// <summary>Returns hashCode for enum OrderState</summary>
        /// <returns>The hashCode of the value</returns>
        public override int GetHashCode()
        {
            return this._value.GetHashCode();
        }

        /// <summary>Creates an instance of the <see cref="OrderState" Enum class./></summary>
        /// <param name="underlyingValue">the value to create an instance for.</param>
        private OrderState(string underlyingValue)
        {
            this._value = underlyingValue;
        }

        /// <summary>Returns string representation for OrderState</summary>
        /// <returns>A string for this value.</returns>
        public override string ToString()
        {
            return this._value;
        }

        /// <summary>Implicit operator to convert string to OrderState</summary>
        /// <param name="value">the value to convert to an instance of <see cref="OrderState" />.</param>

        public static implicit operator OrderState(string value)
        {
            return new OrderState(value);
        }

        /// <summary>Implicit operator to convert OrderState to string</summary>
        /// <param name="e">the value to convert to an instance of <see cref="OrderState" />.</param>

        public static implicit operator string(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.OrderState e)
        {
            return e._value;
        }

        /// <summary>Overriding != operator for enum OrderState</summary>
        /// <param name="e1">the value to compare against <see cref="e2" /></param>
        /// <param name="e2">the value to compare against <see cref="e1" /></param>
        /// <returns><c>true</c> if the two instances are not equal to the same value</returns>
        public static bool operator !=(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.OrderState e1, Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.OrderState e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>Overriding == operator for enum OrderState</summary>
        /// <param name="e1">the value to compare against <see cref="e2" /></param>
        /// <param name="e2">the value to compare against <see cref="e1" /></param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public static bool operator ==(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.OrderState e1, Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.OrderState e2)
        {
            return e2.Equals(e1);
        }
    }
}