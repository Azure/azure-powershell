// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Extensions;

    /// <summary>This class represents the nodes in a highly available cluster</summary>
    public partial class NodeProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INodeProperties,
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INodePropertiesInternal
    {

        /// <summary>Internal Acessors for NodeChassisSerialNumber</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INodePropertiesInternal.NodeChassisSerialNumber { get => this._nodeChassisSerialNumber; set { {_nodeChassisSerialNumber = value;} } }

        /// <summary>Internal Acessors for NodeDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INodePropertiesInternal.NodeDisplayName { get => this._nodeDisplayName; set { {_nodeDisplayName = value;} } }

        /// <summary>Internal Acessors for NodeFriendlySoftwareVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INodePropertiesInternal.NodeFriendlySoftwareVersion { get => this._nodeFriendlySoftwareVersion; set { {_nodeFriendlySoftwareVersion = value;} } }

        /// <summary>Internal Acessors for NodeHcsVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INodePropertiesInternal.NodeHcsVersion { get => this._nodeHcsVersion; set { {_nodeHcsVersion = value;} } }

        /// <summary>Internal Acessors for NodeInstanceId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INodePropertiesInternal.NodeInstanceId { get => this._nodeInstanceId; set { {_nodeInstanceId = value;} } }

        /// <summary>Internal Acessors for NodeSerialNumber</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INodePropertiesInternal.NodeSerialNumber { get => this._nodeSerialNumber; set { {_nodeSerialNumber = value;} } }

        /// <summary>Internal Acessors for NodeStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.NodeStatus? Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INodePropertiesInternal.NodeStatus { get => this._nodeStatus; set { {_nodeStatus = value;} } }

        /// <summary>Backing field for <see cref="NodeChassisSerialNumber" /> property.</summary>
        private string _nodeChassisSerialNumber;

        /// <summary>Serial number of the Chassis</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public string NodeChassisSerialNumber { get => this._nodeChassisSerialNumber; }

        /// <summary>Backing field for <see cref="NodeDisplayName" /> property.</summary>
        private string _nodeDisplayName;

        /// <summary>Display Name of the individual node</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public string NodeDisplayName { get => this._nodeDisplayName; }

        /// <summary>Backing field for <see cref="NodeFriendlySoftwareVersion" /> property.</summary>
        private string _nodeFriendlySoftwareVersion;

        /// <summary>Friendly software version name that is currently installed on the node</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public string NodeFriendlySoftwareVersion { get => this._nodeFriendlySoftwareVersion; }

        /// <summary>Backing field for <see cref="NodeHcsVersion" /> property.</summary>
        private string _nodeHcsVersion;

        /// <summary>HCS version that is currently installed on the node</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public string NodeHcsVersion { get => this._nodeHcsVersion; }

        /// <summary>Backing field for <see cref="NodeInstanceId" /> property.</summary>
        private string _nodeInstanceId;

        /// <summary>Guid instance id of the node</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public string NodeInstanceId { get => this._nodeInstanceId; }

        /// <summary>Backing field for <see cref="NodeSerialNumber" /> property.</summary>
        private string _nodeSerialNumber;

        /// <summary>Serial number of the individual node</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public string NodeSerialNumber { get => this._nodeSerialNumber; }

        /// <summary>Backing field for <see cref="NodeStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.NodeStatus? _nodeStatus;

        /// <summary>The current status of the individual node</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.NodeStatus? NodeStatus { get => this._nodeStatus; }

        /// <summary>Creates an new <see cref="NodeProperties" /> instance.</summary>
        public NodeProperties()
        {

        }
    }
    /// This class represents the nodes in a highly available cluster
    public partial interface INodeProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.IJsonSerializable
    {
        /// <summary>Serial number of the Chassis</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Serial number of the Chassis",
        SerializedName = @"nodeChassisSerialNumber",
        PossibleTypes = new [] { typeof(string) })]
        string NodeChassisSerialNumber { get;  }
        /// <summary>Display Name of the individual node</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Display Name of the individual node",
        SerializedName = @"nodeDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string NodeDisplayName { get;  }
        /// <summary>Friendly software version name that is currently installed on the node</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Friendly software version name that is currently installed on the node",
        SerializedName = @"nodeFriendlySoftwareVersion",
        PossibleTypes = new [] { typeof(string) })]
        string NodeFriendlySoftwareVersion { get;  }
        /// <summary>HCS version that is currently installed on the node</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"HCS version that is currently installed on the node",
        SerializedName = @"nodeHcsVersion",
        PossibleTypes = new [] { typeof(string) })]
        string NodeHcsVersion { get;  }
        /// <summary>Guid instance id of the node</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Guid instance id of the node",
        SerializedName = @"nodeInstanceId",
        PossibleTypes = new [] { typeof(string) })]
        string NodeInstanceId { get;  }
        /// <summary>Serial number of the individual node</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Serial number of the individual node",
        SerializedName = @"nodeSerialNumber",
        PossibleTypes = new [] { typeof(string) })]
        string NodeSerialNumber { get;  }
        /// <summary>The current status of the individual node</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The current status of the individual node",
        SerializedName = @"nodeStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.NodeStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.NodeStatus? NodeStatus { get;  }

    }
    /// This class represents the nodes in a highly available cluster
    internal partial interface INodePropertiesInternal

    {
        /// <summary>Serial number of the Chassis</summary>
        string NodeChassisSerialNumber { get; set; }
        /// <summary>Display Name of the individual node</summary>
        string NodeDisplayName { get; set; }
        /// <summary>Friendly software version name that is currently installed on the node</summary>
        string NodeFriendlySoftwareVersion { get; set; }
        /// <summary>HCS version that is currently installed on the node</summary>
        string NodeHcsVersion { get; set; }
        /// <summary>Guid instance id of the node</summary>
        string NodeInstanceId { get; set; }
        /// <summary>Serial number of the individual node</summary>
        string NodeSerialNumber { get; set; }
        /// <summary>The current status of the individual node</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.NodeStatus? NodeStatus { get; set; }

    }
}