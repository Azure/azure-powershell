// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Extensions;

    /// <summary>
    /// IoT edge agent details is optional, this will be used for download system Agent module while bootstrapping IoT Role if
    /// specified.
    /// </summary>
    public partial class IoTEdgeAgentInfo :
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTEdgeAgentInfo,
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTEdgeAgentInfoInternal
    {

        /// <summary>Backing field for <see cref="ImageName" /> property.</summary>
        private string _imageName;

        /// <summary>Name of the IoT edge agent image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public string ImageName { get => this._imageName; set => this._imageName = value; }

        /// <summary>Backing field for <see cref="ImageRepository" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IImageRepositoryCredential _imageRepository;

        /// <summary>Image repository details.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IImageRepositoryCredential ImageRepository { get => (this._imageRepository = this._imageRepository ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.ImageRepositoryCredential()); set => this._imageRepository = value; }

        /// <summary>Image repository url (e.g.: mcr.microsoft.com).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string ImageRepositoryUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IImageRepositoryCredentialInternal)ImageRepository).ImageRepositoryUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IImageRepositoryCredentialInternal)ImageRepository).ImageRepositoryUrl = value ?? null; }

        /// <summary>Repository user name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string ImageRepositoryUserName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IImageRepositoryCredentialInternal)ImageRepository).UserName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IImageRepositoryCredentialInternal)ImageRepository).UserName = value ?? null; }

        /// <summary>Internal Acessors for ImageRepository</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IImageRepositoryCredential Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTEdgeAgentInfoInternal.ImageRepository { get => (this._imageRepository = this._imageRepository ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.ImageRepositoryCredential()); set { {_imageRepository = value;} } }

        /// <summary>Internal Acessors for ImageRepositoryPassword</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IAsymmetricEncryptedSecret Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTEdgeAgentInfoInternal.ImageRepositoryPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IImageRepositoryCredentialInternal)ImageRepository).Password; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IImageRepositoryCredentialInternal)ImageRepository).Password = value; }

        /// <summary>The algorithm used to encrypt "Value".</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.EncryptionAlgorithm? PasswordEncryptionAlgorithm { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IImageRepositoryCredentialInternal)ImageRepository).PasswordEncryptionAlgorithm; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IImageRepositoryCredentialInternal)ImageRepository).PasswordEncryptionAlgorithm = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.EncryptionAlgorithm)""); }

        /// <summary>
        /// Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be null.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string PasswordEncryptionCertThumbprint { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IImageRepositoryCredentialInternal)ImageRepository).PasswordEncryptionCertThumbprint; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IImageRepositoryCredentialInternal)ImageRepository).PasswordEncryptionCertThumbprint = value ?? null; }

        /// <summary>The value of the secret.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string PasswordValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IImageRepositoryCredentialInternal)ImageRepository).PasswordValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IImageRepositoryCredentialInternal)ImageRepository).PasswordValue = value ?? null; }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private string _tag;

        /// <summary>Image Tag.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public string Tag { get => this._tag; set => this._tag = value; }

        /// <summary>Creates an new <see cref="IoTEdgeAgentInfo" /> instance.</summary>
        public IoTEdgeAgentInfo()
        {

        }
    }
    /// IoT edge agent details is optional, this will be used for download system Agent module while bootstrapping IoT Role if
    /// specified.
    public partial interface IIoTEdgeAgentInfo :
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.IJsonSerializable
    {
        /// <summary>Name of the IoT edge agent image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Name of the IoT edge agent image.",
        SerializedName = @"imageName",
        PossibleTypes = new [] { typeof(string) })]
        string ImageName { get; set; }
        /// <summary>Image repository url (e.g.: mcr.microsoft.com).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Image repository url (e.g.: mcr.microsoft.com).",
        SerializedName = @"imageRepositoryUrl",
        PossibleTypes = new [] { typeof(string) })]
        string ImageRepositoryUrl { get; set; }
        /// <summary>Repository user name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Repository user name.",
        SerializedName = @"userName",
        PossibleTypes = new [] { typeof(string) })]
        string ImageRepositoryUserName { get; set; }
        /// <summary>The algorithm used to encrypt "Value".</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The algorithm used to encrypt ""Value"".",
        SerializedName = @"encryptionAlgorithm",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.EncryptionAlgorithm) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.EncryptionAlgorithm? PasswordEncryptionAlgorithm { get; set; }
        /// <summary>
        /// Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be null.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Thumbprint certificate used to encrypt \""Value\"". If the value is unencrypted, it will be null.",
        SerializedName = @"encryptionCertThumbprint",
        PossibleTypes = new [] { typeof(string) })]
        string PasswordEncryptionCertThumbprint { get; set; }
        /// <summary>The value of the secret.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The value of the secret.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(string) })]
        string PasswordValue { get; set; }
        /// <summary>Image Tag.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Image Tag.",
        SerializedName = @"tag",
        PossibleTypes = new [] { typeof(string) })]
        string Tag { get; set; }

    }
    /// IoT edge agent details is optional, this will be used for download system Agent module while bootstrapping IoT Role if
    /// specified.
    internal partial interface IIoTEdgeAgentInfoInternal

    {
        /// <summary>Name of the IoT edge agent image.</summary>
        string ImageName { get; set; }
        /// <summary>Image repository details.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IImageRepositoryCredential ImageRepository { get; set; }
        /// <summary>Repository user password.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IAsymmetricEncryptedSecret ImageRepositoryPassword { get; set; }
        /// <summary>Image repository url (e.g.: mcr.microsoft.com).</summary>
        string ImageRepositoryUrl { get; set; }
        /// <summary>Repository user name.</summary>
        string ImageRepositoryUserName { get; set; }
        /// <summary>The algorithm used to encrypt "Value".</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.EncryptionAlgorithm? PasswordEncryptionAlgorithm { get; set; }
        /// <summary>
        /// Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be null.
        /// </summary>
        string PasswordEncryptionCertThumbprint { get; set; }
        /// <summary>The value of the secret.</summary>
        string PasswordValue { get; set; }
        /// <summary>Image Tag.</summary>
        string Tag { get; set; }

    }
}