// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Extensions;

    /// <summary>The share properties.</summary>
    public partial class SupportPackageRequestProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.ISupportPackageRequestProperties,
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.ISupportPackageRequestPropertiesInternal
    {

        /// <summary>Backing field for <see cref="Include" /> property.</summary>
        private string _include;

        /// <summary>
        /// Type of files, which need to be included in the logs
        /// This will contain the type of logs (Default/DefaultWithDumps/None/All/DefaultWithArchived)
        /// or a comma separated list of log types that are required
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public string Include { get => this._include; set => this._include = value; }

        /// <summary>Backing field for <see cref="MaximumTimeStamp" /> property.</summary>
        private global::System.DateTime? _maximumTimeStamp;

        /// <summary>Start of the timespan of the log collection</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public global::System.DateTime? MaximumTimeStamp { get => this._maximumTimeStamp; set => this._maximumTimeStamp = value; }

        /// <summary>Backing field for <see cref="MinimumTimeStamp" /> property.</summary>
        private global::System.DateTime? _minimumTimeStamp;

        /// <summary>MinimumTimeStamp from where logs need to be collected</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public global::System.DateTime? MinimumTimeStamp { get => this._minimumTimeStamp; set => this._minimumTimeStamp = value; }

        /// <summary>Creates an new <see cref="SupportPackageRequestProperties" /> instance.</summary>
        public SupportPackageRequestProperties()
        {

        }
    }
    /// The share properties.
    public partial interface ISupportPackageRequestProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Type of files, which need to be included in the logs
        /// This will contain the type of logs (Default/DefaultWithDumps/None/All/DefaultWithArchived)
        /// or a comma separated list of log types that are required
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of files, which need to be included in the logs
        This will contain the type of logs (Default/DefaultWithDumps/None/All/DefaultWithArchived)
        or a comma separated list of log types that are required",
        SerializedName = @"include",
        PossibleTypes = new [] { typeof(string) })]
        string Include { get; set; }
        /// <summary>Start of the timespan of the log collection</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Start of the timespan of the log collection",
        SerializedName = @"maximumTimeStamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? MaximumTimeStamp { get; set; }
        /// <summary>MinimumTimeStamp from where logs need to be collected</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"MinimumTimeStamp from where logs need to be collected",
        SerializedName = @"minimumTimeStamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? MinimumTimeStamp { get; set; }

    }
    /// The share properties.
    internal partial interface ISupportPackageRequestPropertiesInternal

    {
        /// <summary>
        /// Type of files, which need to be included in the logs
        /// This will contain the type of logs (Default/DefaultWithDumps/None/All/DefaultWithArchived)
        /// or a comma separated list of log types that are required
        /// </summary>
        string Include { get; set; }
        /// <summary>Start of the timespan of the log collection</summary>
        global::System.DateTime? MaximumTimeStamp { get; set; }
        /// <summary>MinimumTimeStamp from where logs need to be collected</summary>
        global::System.DateTime? MinimumTimeStamp { get; set; }

    }
}