// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Extensions;

    /// <summary>IoT role properties.</summary>
    public partial class IoTRoleProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTRoleProperties,
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTRolePropertiesInternal
    {

        /// <summary>Backing field for <see cref="ComputeResource" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IComputeResource _computeResource;

        /// <summary>Resource allocation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IComputeResource ComputeResource { get => (this._computeResource = this._computeResource ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.ComputeResource()); set => this._computeResource = value; }

        /// <summary>Memory in GB</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public long? ComputeResourceMemoryInGb { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IComputeResourceInternal)ComputeResource).MemoryInGb; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IComputeResourceInternal)ComputeResource).MemoryInGb = value ?? default(long); }

        /// <summary>Processor count</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public int? ComputeResourceProcessorCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IComputeResourceInternal)ComputeResource).ProcessorCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IComputeResourceInternal)ComputeResource).ProcessorCount = value ?? default(int); }

        /// <summary>Backing field for <see cref="HostPlatform" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.PlatformType _hostPlatform;

        /// <summary>Host OS supported by the IoT role.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.PlatformType HostPlatform { get => this._hostPlatform; set => this._hostPlatform = value; }

        /// <summary>Backing field for <see cref="HostPlatformType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.HostPlatformType? _hostPlatformType;

        /// <summary>Platform where the Iot runtime is hosted.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.HostPlatformType? HostPlatformType { get => this._hostPlatformType; }

        /// <summary>Image repository url (e.g.: mcr.microsoft.com).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string ImageRepositoryUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTEdgeAgentInfoInternal)IoTEdgeAgentInfo).ImageRepositoryUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTEdgeAgentInfoInternal)IoTEdgeAgentInfo).ImageRepositoryUrl = value ?? null; }

        /// <summary>Repository user name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string ImageRepositoryUserName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTEdgeAgentInfoInternal)IoTEdgeAgentInfo).ImageRepositoryUserName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTEdgeAgentInfoInternal)IoTEdgeAgentInfo).ImageRepositoryUserName = value ?? null; }

        /// <summary>Backing field for <see cref="IoTDeviceDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfo _ioTDeviceDetail;

        /// <summary>IoT device metadata to which data box edge device needs to be connected.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfo IoTDeviceDetail { get => (this._ioTDeviceDetail = this._ioTDeviceDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IoTDeviceInfo()); set => this._ioTDeviceDetail = value; }

        /// <summary>ID of the IoT device/edge device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string IoTDeviceDetailDeviceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTDeviceDetail).DeviceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTDeviceDetail).DeviceId = value ; }

        /// <summary>Host name for the IoT hub associated to the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string IoTDeviceDetailIoThostHub { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTDeviceDetail).IoTHostHub; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTDeviceDetail).IoTHostHub = value ; }

        /// <summary>Id for the IoT hub associated to the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string IoTDeviceDetailIoThostHubId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTDeviceDetail).IoTHostHubId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTDeviceDetail).IoTHostHubId = value ?? null; }

        /// <summary>The algorithm used to encrypt "Value".</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.EncryptionAlgorithm? IoTDeviceDetailsAuthenticationSymmetricKeyConnectionStringEncryptionAlgorithm { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTDeviceDetail).ConnectionStringEncryptionAlgorithm; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTDeviceDetail).ConnectionStringEncryptionAlgorithm = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.EncryptionAlgorithm)""); }

        /// <summary>
        /// Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be null.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string IoTDeviceDetailsAuthenticationSymmetricKeyConnectionStringEncryptionCertThumbprint { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTDeviceDetail).ConnectionStringEncryptionCertThumbprint; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTDeviceDetail).ConnectionStringEncryptionCertThumbprint = value ?? null; }

        /// <summary>The value of the secret.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string IoTDeviceDetailsAuthenticationSymmetricKeyConnectionStringValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTDeviceDetail).ConnectionStringValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTDeviceDetail).ConnectionStringValue = value ?? null; }

        /// <summary>Backing field for <see cref="IoTEdgeAgentInfo" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTEdgeAgentInfo _ioTEdgeAgentInfo;

        /// <summary>Iot edge agent details to download the agent and bootstrap iot runtime.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTEdgeAgentInfo IoTEdgeAgentInfo { get => (this._ioTEdgeAgentInfo = this._ioTEdgeAgentInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IoTEdgeAgentInfo()); set => this._ioTEdgeAgentInfo = value; }

        /// <summary>Name of the IoT edge agent image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string IoTEdgeAgentInfoImageName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTEdgeAgentInfoInternal)IoTEdgeAgentInfo).ImageName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTEdgeAgentInfoInternal)IoTEdgeAgentInfo).ImageName = value ?? null; }

        /// <summary>Image Tag.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string IoTEdgeAgentInfoTag { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTEdgeAgentInfoInternal)IoTEdgeAgentInfo).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTEdgeAgentInfoInternal)IoTEdgeAgentInfo).Tag = value ?? null; }

        /// <summary>Backing field for <see cref="IoTEdgeDeviceDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfo _ioTEdgeDeviceDetail;

        /// <summary>IoT edge device to which the IoT role needs to be configured.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfo IoTEdgeDeviceDetail { get => (this._ioTEdgeDeviceDetail = this._ioTEdgeDeviceDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IoTDeviceInfo()); set => this._ioTEdgeDeviceDetail = value; }

        /// <summary>ID of the IoT device/edge device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string IoTEdgeDeviceDetailDeviceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTEdgeDeviceDetail).DeviceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTEdgeDeviceDetail).DeviceId = value ; }

        /// <summary>Host name for the IoT hub associated to the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string IoTEdgeDeviceDetailIoThostHub { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTEdgeDeviceDetail).IoTHostHub; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTEdgeDeviceDetail).IoTHostHub = value ; }

        /// <summary>Id for the IoT hub associated to the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string IoTEdgeDeviceDetailIoThostHubId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTEdgeDeviceDetail).IoTHostHubId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTEdgeDeviceDetail).IoTHostHubId = value ?? null; }

        /// <summary>The algorithm used to encrypt "Value".</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.EncryptionAlgorithm? IoTEdgeDeviceDetailsAuthenticationSymmetricKeyConnectionStringEncryptionAlgorithm { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTEdgeDeviceDetail).ConnectionStringEncryptionAlgorithm; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTEdgeDeviceDetail).ConnectionStringEncryptionAlgorithm = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.EncryptionAlgorithm)""); }

        /// <summary>
        /// Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be null.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string IoTEdgeDeviceDetailsAuthenticationSymmetricKeyConnectionStringEncryptionCertThumbprint { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTEdgeDeviceDetail).ConnectionStringEncryptionCertThumbprint; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTEdgeDeviceDetail).ConnectionStringEncryptionCertThumbprint = value ?? null; }

        /// <summary>The value of the secret.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string IoTEdgeDeviceDetailsAuthenticationSymmetricKeyConnectionStringValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTEdgeDeviceDetail).ConnectionStringValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTEdgeDeviceDetail).ConnectionStringValue = value ?? null; }

        /// <summary>Internal Acessors for ComputeResource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IComputeResource Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTRolePropertiesInternal.ComputeResource { get => (this._computeResource = this._computeResource ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.ComputeResource()); set { {_computeResource = value;} } }

        /// <summary>Internal Acessors for HostPlatformType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.HostPlatformType? Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTRolePropertiesInternal.HostPlatformType { get => this._hostPlatformType; set { {_hostPlatformType = value;} } }

        /// <summary>Internal Acessors for ImageRepositoryPassword</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IAsymmetricEncryptedSecret Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTRolePropertiesInternal.ImageRepositoryPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTEdgeAgentInfoInternal)IoTEdgeAgentInfo).ImageRepositoryPassword; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTEdgeAgentInfoInternal)IoTEdgeAgentInfo).ImageRepositoryPassword = value; }

        /// <summary>Internal Acessors for IoTDeviceDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfo Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTRolePropertiesInternal.IoTDeviceDetail { get => (this._ioTDeviceDetail = this._ioTDeviceDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IoTDeviceInfo()); set { {_ioTDeviceDetail = value;} } }

        /// <summary>Internal Acessors for IoTDeviceDetailAuthentication</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IAuthentication Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTRolePropertiesInternal.IoTDeviceDetailAuthentication { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTDeviceDetail).Authentication; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTDeviceDetail).Authentication = value; }

        /// <summary>Internal Acessors for IoTDeviceDetailsAuthenticationSymmetricKey</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.ISymmetricKey Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTRolePropertiesInternal.IoTDeviceDetailsAuthenticationSymmetricKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTDeviceDetail).AuthenticationSymmetricKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTDeviceDetail).AuthenticationSymmetricKey = value; }

        /// <summary>
        /// Internal Acessors for IoTDeviceDetailsAuthenticationSymmetricKeyConnectionString
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IAsymmetricEncryptedSecret Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTRolePropertiesInternal.IoTDeviceDetailsAuthenticationSymmetricKeyConnectionString { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTDeviceDetail).SymmetricKeyConnectionString; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTDeviceDetail).SymmetricKeyConnectionString = value; }

        /// <summary>Internal Acessors for IoTEdgeAgentInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTEdgeAgentInfo Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTRolePropertiesInternal.IoTEdgeAgentInfo { get => (this._ioTEdgeAgentInfo = this._ioTEdgeAgentInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IoTEdgeAgentInfo()); set { {_ioTEdgeAgentInfo = value;} } }

        /// <summary>Internal Acessors for IoTEdgeAgentInfoImageRepository</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IImageRepositoryCredential Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTRolePropertiesInternal.IoTEdgeAgentInfoImageRepository { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTEdgeAgentInfoInternal)IoTEdgeAgentInfo).ImageRepository; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTEdgeAgentInfoInternal)IoTEdgeAgentInfo).ImageRepository = value; }

        /// <summary>Internal Acessors for IoTEdgeDeviceDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfo Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTRolePropertiesInternal.IoTEdgeDeviceDetail { get => (this._ioTEdgeDeviceDetail = this._ioTEdgeDeviceDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IoTDeviceInfo()); set { {_ioTEdgeDeviceDetail = value;} } }

        /// <summary>Internal Acessors for IoTEdgeDeviceDetailAuthentication</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IAuthentication Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTRolePropertiesInternal.IoTEdgeDeviceDetailAuthentication { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTEdgeDeviceDetail).Authentication; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTEdgeDeviceDetail).Authentication = value; }

        /// <summary>Internal Acessors for IoTEdgeDeviceDetailsAuthenticationSymmetricKey</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.ISymmetricKey Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTRolePropertiesInternal.IoTEdgeDeviceDetailsAuthenticationSymmetricKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTEdgeDeviceDetail).AuthenticationSymmetricKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTEdgeDeviceDetail).AuthenticationSymmetricKey = value; }

        /// <summary>
        /// Internal Acessors for IoTEdgeDeviceDetailsAuthenticationSymmetricKeyConnectionString
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IAsymmetricEncryptedSecret Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTRolePropertiesInternal.IoTEdgeDeviceDetailsAuthenticationSymmetricKeyConnectionString { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTEdgeDeviceDetail).SymmetricKeyConnectionString; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTEdgeDeviceDetail).SymmetricKeyConnectionString = value; }

        /// <summary>The algorithm used to encrypt "Value".</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.EncryptionAlgorithm? PasswordEncryptionAlgorithm { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTEdgeAgentInfoInternal)IoTEdgeAgentInfo).PasswordEncryptionAlgorithm; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTEdgeAgentInfoInternal)IoTEdgeAgentInfo).PasswordEncryptionAlgorithm = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.EncryptionAlgorithm)""); }

        /// <summary>
        /// Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be null.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string PasswordEncryptionCertThumbprint { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTEdgeAgentInfoInternal)IoTEdgeAgentInfo).PasswordEncryptionCertThumbprint; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTEdgeAgentInfoInternal)IoTEdgeAgentInfo).PasswordEncryptionCertThumbprint = value ?? null; }

        /// <summary>The value of the secret.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string PasswordValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTEdgeAgentInfoInternal)IoTEdgeAgentInfo).PasswordValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTEdgeAgentInfoInternal)IoTEdgeAgentInfo).PasswordValue = value ?? null; }

        /// <summary>Backing field for <see cref="RoleStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.RoleStatus _roleStatus;

        /// <summary>Role status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.RoleStatus RoleStatus { get => this._roleStatus; set => this._roleStatus = value; }

        /// <summary>Backing field for <see cref="ShareMapping" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IMountPointMap[] _shareMapping;

        /// <summary>Mount points of shares in role(s).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IMountPointMap[] ShareMapping { get => this._shareMapping; set => this._shareMapping = value; }

        /// <summary>Creates an new <see cref="IoTRoleProperties" /> instance.</summary>
        public IoTRoleProperties()
        {

        }
    }
    /// IoT role properties.
    public partial interface IIoTRoleProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.IJsonSerializable
    {
        /// <summary>Memory in GB</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Memory in GB",
        SerializedName = @"memoryInGB",
        PossibleTypes = new [] { typeof(long) })]
        long? ComputeResourceMemoryInGb { get; set; }
        /// <summary>Processor count</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Processor count",
        SerializedName = @"processorCount",
        PossibleTypes = new [] { typeof(int) })]
        int? ComputeResourceProcessorCount { get; set; }
        /// <summary>Host OS supported by the IoT role.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Host OS supported by the IoT role.",
        SerializedName = @"hostPlatform",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.PlatformType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.PlatformType HostPlatform { get; set; }
        /// <summary>Platform where the Iot runtime is hosted.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Platform where the Iot runtime is hosted.",
        SerializedName = @"hostPlatformType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.HostPlatformType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.HostPlatformType? HostPlatformType { get;  }
        /// <summary>Image repository url (e.g.: mcr.microsoft.com).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Image repository url (e.g.: mcr.microsoft.com).",
        SerializedName = @"imageRepositoryUrl",
        PossibleTypes = new [] { typeof(string) })]
        string ImageRepositoryUrl { get; set; }
        /// <summary>Repository user name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Repository user name.",
        SerializedName = @"userName",
        PossibleTypes = new [] { typeof(string) })]
        string ImageRepositoryUserName { get; set; }
        /// <summary>ID of the IoT device/edge device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"ID of the IoT device/edge device.",
        SerializedName = @"deviceId",
        PossibleTypes = new [] { typeof(string) })]
        string IoTDeviceDetailDeviceId { get; set; }
        /// <summary>Host name for the IoT hub associated to the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Host name for the IoT hub associated to the device.",
        SerializedName = @"ioTHostHub",
        PossibleTypes = new [] { typeof(string) })]
        string IoTDeviceDetailIoThostHub { get; set; }
        /// <summary>Id for the IoT hub associated to the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Id for the IoT hub associated to the device.",
        SerializedName = @"ioTHostHubId",
        PossibleTypes = new [] { typeof(string) })]
        string IoTDeviceDetailIoThostHubId { get; set; }
        /// <summary>The algorithm used to encrypt "Value".</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The algorithm used to encrypt ""Value"".",
        SerializedName = @"encryptionAlgorithm",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.EncryptionAlgorithm) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.EncryptionAlgorithm? IoTDeviceDetailsAuthenticationSymmetricKeyConnectionStringEncryptionAlgorithm { get; set; }
        /// <summary>
        /// Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be null.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Thumbprint certificate used to encrypt \""Value\"". If the value is unencrypted, it will be null.",
        SerializedName = @"encryptionCertThumbprint",
        PossibleTypes = new [] { typeof(string) })]
        string IoTDeviceDetailsAuthenticationSymmetricKeyConnectionStringEncryptionCertThumbprint { get; set; }
        /// <summary>The value of the secret.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The value of the secret.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(string) })]
        string IoTDeviceDetailsAuthenticationSymmetricKeyConnectionStringValue { get; set; }
        /// <summary>Name of the IoT edge agent image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the IoT edge agent image.",
        SerializedName = @"imageName",
        PossibleTypes = new [] { typeof(string) })]
        string IoTEdgeAgentInfoImageName { get; set; }
        /// <summary>Image Tag.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Image Tag.",
        SerializedName = @"tag",
        PossibleTypes = new [] { typeof(string) })]
        string IoTEdgeAgentInfoTag { get; set; }
        /// <summary>ID of the IoT device/edge device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"ID of the IoT device/edge device.",
        SerializedName = @"deviceId",
        PossibleTypes = new [] { typeof(string) })]
        string IoTEdgeDeviceDetailDeviceId { get; set; }
        /// <summary>Host name for the IoT hub associated to the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Host name for the IoT hub associated to the device.",
        SerializedName = @"ioTHostHub",
        PossibleTypes = new [] { typeof(string) })]
        string IoTEdgeDeviceDetailIoThostHub { get; set; }
        /// <summary>Id for the IoT hub associated to the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Id for the IoT hub associated to the device.",
        SerializedName = @"ioTHostHubId",
        PossibleTypes = new [] { typeof(string) })]
        string IoTEdgeDeviceDetailIoThostHubId { get; set; }
        /// <summary>The algorithm used to encrypt "Value".</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The algorithm used to encrypt ""Value"".",
        SerializedName = @"encryptionAlgorithm",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.EncryptionAlgorithm) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.EncryptionAlgorithm? IoTEdgeDeviceDetailsAuthenticationSymmetricKeyConnectionStringEncryptionAlgorithm { get; set; }
        /// <summary>
        /// Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be null.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Thumbprint certificate used to encrypt \""Value\"". If the value is unencrypted, it will be null.",
        SerializedName = @"encryptionCertThumbprint",
        PossibleTypes = new [] { typeof(string) })]
        string IoTEdgeDeviceDetailsAuthenticationSymmetricKeyConnectionStringEncryptionCertThumbprint { get; set; }
        /// <summary>The value of the secret.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The value of the secret.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(string) })]
        string IoTEdgeDeviceDetailsAuthenticationSymmetricKeyConnectionStringValue { get; set; }
        /// <summary>The algorithm used to encrypt "Value".</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The algorithm used to encrypt ""Value"".",
        SerializedName = @"encryptionAlgorithm",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.EncryptionAlgorithm) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.EncryptionAlgorithm? PasswordEncryptionAlgorithm { get; set; }
        /// <summary>
        /// Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be null.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Thumbprint certificate used to encrypt \""Value\"". If the value is unencrypted, it will be null.",
        SerializedName = @"encryptionCertThumbprint",
        PossibleTypes = new [] { typeof(string) })]
        string PasswordEncryptionCertThumbprint { get; set; }
        /// <summary>The value of the secret.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The value of the secret.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(string) })]
        string PasswordValue { get; set; }
        /// <summary>Role status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Role status.",
        SerializedName = @"roleStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.RoleStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.RoleStatus RoleStatus { get; set; }
        /// <summary>Mount points of shares in role(s).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Mount points of shares in role(s).",
        SerializedName = @"shareMappings",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IMountPointMap) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IMountPointMap[] ShareMapping { get; set; }

    }
    /// IoT role properties.
    internal partial interface IIoTRolePropertiesInternal

    {
        /// <summary>Resource allocation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IComputeResource ComputeResource { get; set; }
        /// <summary>Memory in GB</summary>
        long? ComputeResourceMemoryInGb { get; set; }
        /// <summary>Processor count</summary>
        int? ComputeResourceProcessorCount { get; set; }
        /// <summary>Host OS supported by the IoT role.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.PlatformType HostPlatform { get; set; }
        /// <summary>Platform where the Iot runtime is hosted.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.HostPlatformType? HostPlatformType { get; set; }
        /// <summary>Repository user password.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IAsymmetricEncryptedSecret ImageRepositoryPassword { get; set; }
        /// <summary>Image repository url (e.g.: mcr.microsoft.com).</summary>
        string ImageRepositoryUrl { get; set; }
        /// <summary>Repository user name.</summary>
        string ImageRepositoryUserName { get; set; }
        /// <summary>IoT device metadata to which data box edge device needs to be connected.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfo IoTDeviceDetail { get; set; }
        /// <summary>Encrypted IoT device/IoT edge device connection string.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IAuthentication IoTDeviceDetailAuthentication { get; set; }
        /// <summary>ID of the IoT device/edge device.</summary>
        string IoTDeviceDetailDeviceId { get; set; }
        /// <summary>Host name for the IoT hub associated to the device.</summary>
        string IoTDeviceDetailIoThostHub { get; set; }
        /// <summary>Id for the IoT hub associated to the device.</summary>
        string IoTDeviceDetailIoThostHubId { get; set; }
        /// <summary>Symmetric key for authentication.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.ISymmetricKey IoTDeviceDetailsAuthenticationSymmetricKey { get; set; }
        /// <summary>Connection string based on the symmetric key.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IAsymmetricEncryptedSecret IoTDeviceDetailsAuthenticationSymmetricKeyConnectionString { get; set; }
        /// <summary>The algorithm used to encrypt "Value".</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.EncryptionAlgorithm? IoTDeviceDetailsAuthenticationSymmetricKeyConnectionStringEncryptionAlgorithm { get; set; }
        /// <summary>
        /// Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be null.
        /// </summary>
        string IoTDeviceDetailsAuthenticationSymmetricKeyConnectionStringEncryptionCertThumbprint { get; set; }
        /// <summary>The value of the secret.</summary>
        string IoTDeviceDetailsAuthenticationSymmetricKeyConnectionStringValue { get; set; }
        /// <summary>Iot edge agent details to download the agent and bootstrap iot runtime.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTEdgeAgentInfo IoTEdgeAgentInfo { get; set; }
        /// <summary>Name of the IoT edge agent image.</summary>
        string IoTEdgeAgentInfoImageName { get; set; }
        /// <summary>Image repository details.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IImageRepositoryCredential IoTEdgeAgentInfoImageRepository { get; set; }
        /// <summary>Image Tag.</summary>
        string IoTEdgeAgentInfoTag { get; set; }
        /// <summary>IoT edge device to which the IoT role needs to be configured.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfo IoTEdgeDeviceDetail { get; set; }
        /// <summary>Encrypted IoT device/IoT edge device connection string.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IAuthentication IoTEdgeDeviceDetailAuthentication { get; set; }
        /// <summary>ID of the IoT device/edge device.</summary>
        string IoTEdgeDeviceDetailDeviceId { get; set; }
        /// <summary>Host name for the IoT hub associated to the device.</summary>
        string IoTEdgeDeviceDetailIoThostHub { get; set; }
        /// <summary>Id for the IoT hub associated to the device.</summary>
        string IoTEdgeDeviceDetailIoThostHubId { get; set; }
        /// <summary>Symmetric key for authentication.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.ISymmetricKey IoTEdgeDeviceDetailsAuthenticationSymmetricKey { get; set; }
        /// <summary>Connection string based on the symmetric key.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IAsymmetricEncryptedSecret IoTEdgeDeviceDetailsAuthenticationSymmetricKeyConnectionString { get; set; }
        /// <summary>The algorithm used to encrypt "Value".</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.EncryptionAlgorithm? IoTEdgeDeviceDetailsAuthenticationSymmetricKeyConnectionStringEncryptionAlgorithm { get; set; }
        /// <summary>
        /// Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be null.
        /// </summary>
        string IoTEdgeDeviceDetailsAuthenticationSymmetricKeyConnectionStringEncryptionCertThumbprint { get; set; }
        /// <summary>The value of the secret.</summary>
        string IoTEdgeDeviceDetailsAuthenticationSymmetricKeyConnectionStringValue { get; set; }
        /// <summary>The algorithm used to encrypt "Value".</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.EncryptionAlgorithm? PasswordEncryptionAlgorithm { get; set; }
        /// <summary>
        /// Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be null.
        /// </summary>
        string PasswordEncryptionCertThumbprint { get; set; }
        /// <summary>The value of the secret.</summary>
        string PasswordValue { get; set; }
        /// <summary>Role status.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.RoleStatus RoleStatus { get; set; }
        /// <summary>Mount points of shares in role(s).</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IMountPointMap[] ShareMapping { get; set; }

    }
}