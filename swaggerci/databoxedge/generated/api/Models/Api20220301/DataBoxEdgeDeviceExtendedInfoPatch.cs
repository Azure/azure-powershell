// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Extensions;

    /// <summary>The Data Box Edge/Gateway device extended info patch.</summary>
    public partial class DataBoxEdgeDeviceExtendedInfoPatch :
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IDataBoxEdgeDeviceExtendedInfoPatch,
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IDataBoxEdgeDeviceExtendedInfoPatchInternal
    {

        /// <summary>Backing field for <see cref="ChannelIntegrityKeyName" /> property.</summary>
        private string _channelIntegrityKeyName;

        /// <summary>The name for Channel Integrity Key stored in the Client Key Vault</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public string ChannelIntegrityKeyName { get => this._channelIntegrityKeyName; set => this._channelIntegrityKeyName = value; }

        /// <summary>Backing field for <see cref="ChannelIntegrityKeyVersion" /> property.</summary>
        private string _channelIntegrityKeyVersion;

        /// <summary>The version of Channel Integrity Key stored in the Client Key Vault</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public string ChannelIntegrityKeyVersion { get => this._channelIntegrityKeyVersion; set => this._channelIntegrityKeyVersion = value; }

        /// <summary>Backing field for <see cref="ClientSecretStoreId" /> property.</summary>
        private string _clientSecretStoreId;

        /// <summary>The Key Vault ARM Id for client secrets</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public string ClientSecretStoreId { get => this._clientSecretStoreId; set => this._clientSecretStoreId = value; }

        /// <summary>Backing field for <see cref="ClientSecretStoreUrl" /> property.</summary>
        private string _clientSecretStoreUrl;

        /// <summary>The url to access the Client Key Vault</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public string ClientSecretStoreUrl { get => this._clientSecretStoreUrl; set => this._clientSecretStoreUrl = value; }

        /// <summary>Backing field for <see cref="SyncStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.KeyVaultSyncStatus? _syncStatus;

        /// <summary>
        /// For changing or to initiate the resync to key-vault set the status to KeyVaultSyncPending, rest of the status will not
        /// be applicable.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.KeyVaultSyncStatus? SyncStatus { get => this._syncStatus; set => this._syncStatus = value; }

        /// <summary>Creates an new <see cref="DataBoxEdgeDeviceExtendedInfoPatch" /> instance.</summary>
        public DataBoxEdgeDeviceExtendedInfoPatch()
        {

        }
    }
    /// The Data Box Edge/Gateway device extended info patch.
    public partial interface IDataBoxEdgeDeviceExtendedInfoPatch :
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.IJsonSerializable
    {
        /// <summary>The name for Channel Integrity Key stored in the Client Key Vault</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name for Channel Integrity Key stored in the Client Key Vault",
        SerializedName = @"channelIntegrityKeyName",
        PossibleTypes = new [] { typeof(string) })]
        string ChannelIntegrityKeyName { get; set; }
        /// <summary>The version of Channel Integrity Key stored in the Client Key Vault</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The version of Channel Integrity Key stored in the Client Key Vault",
        SerializedName = @"channelIntegrityKeyVersion",
        PossibleTypes = new [] { typeof(string) })]
        string ChannelIntegrityKeyVersion { get; set; }
        /// <summary>The Key Vault ARM Id for client secrets</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Key Vault ARM Id for client secrets",
        SerializedName = @"clientSecretStoreId",
        PossibleTypes = new [] { typeof(string) })]
        string ClientSecretStoreId { get; set; }
        /// <summary>The url to access the Client Key Vault</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The url to access the Client Key Vault",
        SerializedName = @"clientSecretStoreUrl",
        PossibleTypes = new [] { typeof(string) })]
        string ClientSecretStoreUrl { get; set; }
        /// <summary>
        /// For changing or to initiate the resync to key-vault set the status to KeyVaultSyncPending, rest of the status will not
        /// be applicable.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"For changing or to initiate the resync to key-vault set the status to KeyVaultSyncPending, rest of the status will not be applicable.",
        SerializedName = @"syncStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.KeyVaultSyncStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.KeyVaultSyncStatus? SyncStatus { get; set; }

    }
    /// The Data Box Edge/Gateway device extended info patch.
    internal partial interface IDataBoxEdgeDeviceExtendedInfoPatchInternal

    {
        /// <summary>The name for Channel Integrity Key stored in the Client Key Vault</summary>
        string ChannelIntegrityKeyName { get; set; }
        /// <summary>The version of Channel Integrity Key stored in the Client Key Vault</summary>
        string ChannelIntegrityKeyVersion { get; set; }
        /// <summary>The Key Vault ARM Id for client secrets</summary>
        string ClientSecretStoreId { get; set; }
        /// <summary>The url to access the Client Key Vault</summary>
        string ClientSecretStoreUrl { get; set; }
        /// <summary>
        /// For changing or to initiate the resync to key-vault set the status to KeyVaultSyncPending, rest of the status will not
        /// be applicable.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.KeyVaultSyncStatus? SyncStatus { get; set; }

    }
}