// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Extensions;

    /// <summary>The device update information summary.</summary>
    public partial class UpdateSummaryProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json erialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateSummaryProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateSummaryProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateSummaryProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonObject json ? new UpdateSummaryProperties(json) : null;
        }

        /// <summary>
        /// Serializes this instance of <see cref="UpdateSummaryProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="UpdateSummaryProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != (((object)this._deviceVersionNumber)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonString(this._deviceVersionNumber.ToString()) : null, "deviceVersionNumber" ,container.Add );
            AddIf( null != (((object)this._friendlyDeviceVersionName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonString(this._friendlyDeviceVersionName.ToString()) : null, "friendlyDeviceVersionName" ,container.Add );
            AddIf( null != this._deviceLastScannedDateTime ? (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonString(this._deviceLastScannedDateTime?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "deviceLastScannedDateTime" ,container.Add );
            AddIf( null != this._lastCompletedScanJobDateTime ? (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonString(this._lastCompletedScanJobDateTime?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "lastCompletedScanJobDateTime" ,container.Add );
            AddIf( null != this._lastSuccessfulScanJobTime ? (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonString(this._lastSuccessfulScanJobTime?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "lastSuccessfulScanJobTime" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._lastCompletedDownloadJobDateTime ? (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonString(this._lastCompletedDownloadJobDateTime?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "lastCompletedDownloadJobDateTime" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._lastCompletedDownloadJobId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonString(this._lastCompletedDownloadJobId.ToString()) : null, "lastCompletedDownloadJobId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._lastDownloadJobStatus)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonString(this._lastDownloadJobStatus.ToString()) : null, "lastDownloadJobStatus" ,container.Add );
            }
            AddIf( null != this._lastSuccessfulInstallJobDateTime ? (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonString(this._lastSuccessfulInstallJobDateTime?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "lastSuccessfulInstallJobDateTime" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._lastCompletedInstallJobDateTime ? (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonString(this._lastCompletedInstallJobDateTime?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "lastCompletedInstallJobDateTime" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._lastCompletedInstallJobId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonString(this._lastCompletedInstallJobId.ToString()) : null, "lastCompletedInstallJobId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._lastInstallJobStatus)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonString(this._lastInstallJobStatus.ToString()) : null, "lastInstallJobStatus" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._totalNumberOfUpdatesAvailable ? (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNumber((int)this._totalNumberOfUpdatesAvailable) : null, "totalNumberOfUpdatesAvailable" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._totalNumberOfUpdatesPendingDownload ? (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNumber((int)this._totalNumberOfUpdatesPendingDownload) : null, "totalNumberOfUpdatesPendingDownload" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._totalNumberOfUpdatesPendingInstall ? (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNumber((int)this._totalNumberOfUpdatesPendingInstall) : null, "totalNumberOfUpdatesPendingInstall" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._rebootBehavior)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonString(this._rebootBehavior.ToString()) : null, "rebootBehavior" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._ongoingUpdateOperation)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonString(this._ongoingUpdateOperation.ToString()) : null, "ongoingUpdateOperation" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._inProgressDownloadJobId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonString(this._inProgressDownloadJobId.ToString()) : null, "inProgressDownloadJobId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._inProgressInstallJobId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonString(this._inProgressInstallJobId.ToString()) : null, "inProgressInstallJobId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._inProgressDownloadJobStartedDateTime ? (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonString(this._inProgressDownloadJobStartedDateTime?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "inProgressDownloadJobStartedDateTime" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._inProgressInstallJobStartedDateTime ? (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonString(this._inProgressInstallJobStartedDateTime?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "inProgressInstallJobStartedDateTime" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.SerializationMode.IncludeReadOnly))
            {
                if (null != this._updateTitle)
                {
                    var __w = new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.XNodeArray();
                    foreach( var __x in this._updateTitle )
                    {
                        AddIf(null != (((object)__x)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonString(__x.ToString()) : null ,__w.Add);
                    }
                    container.Add("updateTitles",__w);
                }
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.SerializationMode.IncludeReadOnly))
            {
                if (null != this._update)
                {
                    var __r = new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.XNodeArray();
                    foreach( var __s in this._update )
                    {
                        AddIf(__s?.ToJson(null, serializationMode) ,__r.Add);
                    }
                    container.Add("updates",__r);
                }
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._totalUpdateSizeInByte ? (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNumber((double)this._totalUpdateSizeInByte) : null, "totalUpdateSizeInBytes" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._totalTimeInMinute ? (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNumber((int)this._totalTimeInMinute) : null, "totalTimeInMinutes" ,container.Add );
            }
            AfterToJson(ref container);
            return container;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonObject into a new instance of <see cref="UpdateSummaryProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal UpdateSummaryProperties(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_deviceVersionNumber = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonString>("deviceVersionNumber"), out var __jsonDeviceVersionNumber) ? (string)__jsonDeviceVersionNumber : (string)DeviceVersionNumber;}
            {_friendlyDeviceVersionName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonString>("friendlyDeviceVersionName"), out var __jsonFriendlyDeviceVersionName) ? (string)__jsonFriendlyDeviceVersionName : (string)FriendlyDeviceVersionName;}
            {_deviceLastScannedDateTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonString>("deviceLastScannedDateTime"), out var __jsonDeviceLastScannedDateTime) ? global::System.DateTime.TryParse((string)__jsonDeviceLastScannedDateTime, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonDeviceLastScannedDateTimeValue) ? __jsonDeviceLastScannedDateTimeValue : DeviceLastScannedDateTime : DeviceLastScannedDateTime;}
            {_lastCompletedScanJobDateTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonString>("lastCompletedScanJobDateTime"), out var __jsonLastCompletedScanJobDateTime) ? global::System.DateTime.TryParse((string)__jsonLastCompletedScanJobDateTime, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonLastCompletedScanJobDateTimeValue) ? __jsonLastCompletedScanJobDateTimeValue : LastCompletedScanJobDateTime : LastCompletedScanJobDateTime;}
            {_lastSuccessfulScanJobTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonString>("lastSuccessfulScanJobTime"), out var __jsonLastSuccessfulScanJobTime) ? global::System.DateTime.TryParse((string)__jsonLastSuccessfulScanJobTime, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonLastSuccessfulScanJobTimeValue) ? __jsonLastSuccessfulScanJobTimeValue : LastSuccessfulScanJobTime : LastSuccessfulScanJobTime;}
            {_lastCompletedDownloadJobDateTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonString>("lastCompletedDownloadJobDateTime"), out var __jsonLastCompletedDownloadJobDateTime) ? global::System.DateTime.TryParse((string)__jsonLastCompletedDownloadJobDateTime, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonLastCompletedDownloadJobDateTimeValue) ? __jsonLastCompletedDownloadJobDateTimeValue : LastCompletedDownloadJobDateTime : LastCompletedDownloadJobDateTime;}
            {_lastCompletedDownloadJobId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonString>("lastCompletedDownloadJobId"), out var __jsonLastCompletedDownloadJobId) ? (string)__jsonLastCompletedDownloadJobId : (string)LastCompletedDownloadJobId;}
            {_lastDownloadJobStatus = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonString>("lastDownloadJobStatus"), out var __jsonLastDownloadJobStatus) ? (string)__jsonLastDownloadJobStatus : (string)LastDownloadJobStatus;}
            {_lastSuccessfulInstallJobDateTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonString>("lastSuccessfulInstallJobDateTime"), out var __jsonLastSuccessfulInstallJobDateTime) ? global::System.DateTime.TryParse((string)__jsonLastSuccessfulInstallJobDateTime, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonLastSuccessfulInstallJobDateTimeValue) ? __jsonLastSuccessfulInstallJobDateTimeValue : LastSuccessfulInstallJobDateTime : LastSuccessfulInstallJobDateTime;}
            {_lastCompletedInstallJobDateTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonString>("lastCompletedInstallJobDateTime"), out var __jsonLastCompletedInstallJobDateTime) ? global::System.DateTime.TryParse((string)__jsonLastCompletedInstallJobDateTime, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonLastCompletedInstallJobDateTimeValue) ? __jsonLastCompletedInstallJobDateTimeValue : LastCompletedInstallJobDateTime : LastCompletedInstallJobDateTime;}
            {_lastCompletedInstallJobId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonString>("lastCompletedInstallJobId"), out var __jsonLastCompletedInstallJobId) ? (string)__jsonLastCompletedInstallJobId : (string)LastCompletedInstallJobId;}
            {_lastInstallJobStatus = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonString>("lastInstallJobStatus"), out var __jsonLastInstallJobStatus) ? (string)__jsonLastInstallJobStatus : (string)LastInstallJobStatus;}
            {_totalNumberOfUpdatesAvailable = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNumber>("totalNumberOfUpdatesAvailable"), out var __jsonTotalNumberOfUpdatesAvailable) ? (int?)__jsonTotalNumberOfUpdatesAvailable : TotalNumberOfUpdatesAvailable;}
            {_totalNumberOfUpdatesPendingDownload = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNumber>("totalNumberOfUpdatesPendingDownload"), out var __jsonTotalNumberOfUpdatesPendingDownload) ? (int?)__jsonTotalNumberOfUpdatesPendingDownload : TotalNumberOfUpdatesPendingDownload;}
            {_totalNumberOfUpdatesPendingInstall = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNumber>("totalNumberOfUpdatesPendingInstall"), out var __jsonTotalNumberOfUpdatesPendingInstall) ? (int?)__jsonTotalNumberOfUpdatesPendingInstall : TotalNumberOfUpdatesPendingInstall;}
            {_rebootBehavior = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonString>("rebootBehavior"), out var __jsonRebootBehavior) ? (string)__jsonRebootBehavior : (string)RebootBehavior;}
            {_ongoingUpdateOperation = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonString>("ongoingUpdateOperation"), out var __jsonOngoingUpdateOperation) ? (string)__jsonOngoingUpdateOperation : (string)OngoingUpdateOperation;}
            {_inProgressDownloadJobId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonString>("inProgressDownloadJobId"), out var __jsonInProgressDownloadJobId) ? (string)__jsonInProgressDownloadJobId : (string)InProgressDownloadJobId;}
            {_inProgressInstallJobId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonString>("inProgressInstallJobId"), out var __jsonInProgressInstallJobId) ? (string)__jsonInProgressInstallJobId : (string)InProgressInstallJobId;}
            {_inProgressDownloadJobStartedDateTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonString>("inProgressDownloadJobStartedDateTime"), out var __jsonInProgressDownloadJobStartedDateTime) ? global::System.DateTime.TryParse((string)__jsonInProgressDownloadJobStartedDateTime, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonInProgressDownloadJobStartedDateTimeValue) ? __jsonInProgressDownloadJobStartedDateTimeValue : InProgressDownloadJobStartedDateTime : InProgressDownloadJobStartedDateTime;}
            {_inProgressInstallJobStartedDateTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonString>("inProgressInstallJobStartedDateTime"), out var __jsonInProgressInstallJobStartedDateTime) ? global::System.DateTime.TryParse((string)__jsonInProgressInstallJobStartedDateTime, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonInProgressInstallJobStartedDateTimeValue) ? __jsonInProgressInstallJobStartedDateTimeValue : InProgressInstallJobStartedDateTime : InProgressInstallJobStartedDateTime;}
            {_updateTitle = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonArray>("updateTitles"), out var __jsonUpdateTitles) ? If( __jsonUpdateTitles as Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(string) (__u is Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonString __t ? (string)(__t.ToString()) : null)) ))() : null : UpdateTitle;}
            {_update = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonArray>("updates"), out var __jsonUpdates) ? If( __jsonUpdates as Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonArray, out var __q) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateDetails[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__q, (__p)=>(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateDetails) (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.UpdateDetails.FromJson(__p) )) ))() : null : Update;}
            {_totalUpdateSizeInByte = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNumber>("totalUpdateSizeInBytes"), out var __jsonTotalUpdateSizeInBytes) ? (double?)__jsonTotalUpdateSizeInBytes : TotalUpdateSizeInByte;}
            {_totalTimeInMinute = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNumber>("totalTimeInMinutes"), out var __jsonTotalTimeInMinutes) ? (int?)__jsonTotalTimeInMinutes : TotalTimeInMinute;}
            AfterFromJson(json);
        }
    }
}