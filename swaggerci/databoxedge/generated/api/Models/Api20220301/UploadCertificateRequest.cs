// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Extensions;

    /// <summary>The upload certificate request.</summary>
    public partial class UploadCertificateRequest :
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUploadCertificateRequest,
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUploadCertificateRequestInternal
    {

        /// <summary>The authentication type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.AuthenticationType? AuthenticationType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRawCertificateDataInternal)Property).AuthenticationType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRawCertificateDataInternal)Property).AuthenticationType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.AuthenticationType)""); }

        /// <summary>The base64 encoded certificate raw data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string Certificate { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRawCertificateDataInternal)Property).Certificate; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRawCertificateDataInternal)Property).Certificate = value ; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRawCertificateData Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUploadCertificateRequestInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.RawCertificateData()); set { {_property = value;} } }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRawCertificateData _property;

        /// <summary>The Base 64 encoded certificate raw data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRawCertificateData Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.RawCertificateData()); set => this._property = value; }

        /// <summary>Creates an new <see cref="UploadCertificateRequest" /> instance.</summary>
        public UploadCertificateRequest()
        {

        }
    }
    /// The upload certificate request.
    public partial interface IUploadCertificateRequest :
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.IJsonSerializable
    {
        /// <summary>The authentication type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The authentication type.",
        SerializedName = @"authenticationType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.AuthenticationType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.AuthenticationType? AuthenticationType { get; set; }
        /// <summary>The base64 encoded certificate raw data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The base64 encoded certificate raw data.",
        SerializedName = @"certificate",
        PossibleTypes = new [] { typeof(string) })]
        string Certificate { get; set; }

    }
    /// The upload certificate request.
    internal partial interface IUploadCertificateRequestInternal

    {
        /// <summary>The authentication type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.AuthenticationType? AuthenticationType { get; set; }
        /// <summary>The base64 encoded certificate raw data.</summary>
        string Certificate { get; set; }
        /// <summary>The Base 64 encoded certificate raw data.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRawCertificateData Property { get; set; }

    }
}