// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Extensions;

    /// <summary>Kubernetes role resources</summary>
    public partial class KubernetesRoleResources :
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleResources,
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleResourcesInternal
    {

        /// <summary>Pod Subnet</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string CniConfigPodSubnet { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleNetworkInternal)Network).CniConfigPodSubnet; }

        /// <summary>Service subnet</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string CniConfigServiceSubnet { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleNetworkInternal)Network).CniConfigServiceSubnet; }

        /// <summary>Cni type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string CniConfigType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleNetworkInternal)Network).CniConfigType; }

        /// <summary>Cni version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string CniConfigVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleNetworkInternal)Network).CniConfigVersion; }

        /// <summary>Backing field for <see cref="Compute" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleCompute _compute;

        /// <summary>Kubernetes role compute resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleCompute Compute { get => (this._compute = this._compute ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.KubernetesRoleCompute()); set => this._compute = value; }

        /// <summary>Memory in bytes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public long? ComputeMemoryInByte { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleComputeInternal)Compute).MemoryInByte; }

        /// <summary>Processor count</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public int? ComputeProcessorCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleComputeInternal)Compute).ProcessorCount; }

        /// <summary>VM profile</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string ComputeVMProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleComputeInternal)Compute).VMProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleComputeInternal)Compute).VMProfile = value ; }

        /// <summary>Load balancer type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string LoadBalancerConfigType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleNetworkInternal)Network).LoadBalancerConfigType; }

        /// <summary>Load balancer version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string LoadBalancerConfigVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleNetworkInternal)Network).LoadBalancerConfigVersion; }

        /// <summary>Internal Acessors for CniConfigPodSubnet</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleResourcesInternal.CniConfigPodSubnet { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleNetworkInternal)Network).CniConfigPodSubnet; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleNetworkInternal)Network).CniConfigPodSubnet = value; }

        /// <summary>Internal Acessors for CniConfigServiceSubnet</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleResourcesInternal.CniConfigServiceSubnet { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleNetworkInternal)Network).CniConfigServiceSubnet; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleNetworkInternal)Network).CniConfigServiceSubnet = value; }

        /// <summary>Internal Acessors for CniConfigType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleResourcesInternal.CniConfigType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleNetworkInternal)Network).CniConfigType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleNetworkInternal)Network).CniConfigType = value; }

        /// <summary>Internal Acessors for CniConfigVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleResourcesInternal.CniConfigVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleNetworkInternal)Network).CniConfigVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleNetworkInternal)Network).CniConfigVersion = value; }

        /// <summary>Internal Acessors for Compute</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleCompute Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleResourcesInternal.Compute { get => (this._compute = this._compute ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.KubernetesRoleCompute()); set { {_compute = value;} } }

        /// <summary>Internal Acessors for ComputeMemoryInByte</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleResourcesInternal.ComputeMemoryInByte { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleComputeInternal)Compute).MemoryInByte; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleComputeInternal)Compute).MemoryInByte = value; }

        /// <summary>Internal Acessors for ComputeProcessorCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleResourcesInternal.ComputeProcessorCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleComputeInternal)Compute).ProcessorCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleComputeInternal)Compute).ProcessorCount = value; }

        /// <summary>Internal Acessors for LoadBalancerConfigType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleResourcesInternal.LoadBalancerConfigType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleNetworkInternal)Network).LoadBalancerConfigType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleNetworkInternal)Network).LoadBalancerConfigType = value; }

        /// <summary>Internal Acessors for LoadBalancerConfigVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleResourcesInternal.LoadBalancerConfigVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleNetworkInternal)Network).LoadBalancerConfigVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleNetworkInternal)Network).LoadBalancerConfigVersion = value; }

        /// <summary>Internal Acessors for Network</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleNetwork Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleResourcesInternal.Network { get => (this._network = this._network ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.KubernetesRoleNetwork()); set { {_network = value;} } }

        /// <summary>Internal Acessors for NetworkCniConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.ICniConfig Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleResourcesInternal.NetworkCniConfig { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleNetworkInternal)Network).CniConfig; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleNetworkInternal)Network).CniConfig = value; }

        /// <summary>Internal Acessors for NetworkLoadBalancerConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.ILoadBalancerConfig Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleResourcesInternal.NetworkLoadBalancerConfig { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleNetworkInternal)Network).LoadBalancerConfig; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleNetworkInternal)Network).LoadBalancerConfig = value; }

        /// <summary>Internal Acessors for Storage</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleStorage Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleResourcesInternal.Storage { get => (this._storage = this._storage ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.KubernetesRoleStorage()); set { {_storage = value;} } }

        /// <summary>Internal Acessors for StorageClass</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleStorageClassInfo[] Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleResourcesInternal.StorageClass { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleStorageInternal)Storage).StorageClass; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleStorageInternal)Storage).StorageClass = value; }

        /// <summary>Backing field for <see cref="Network" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleNetwork _network;

        /// <summary>Kubernetes role network resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleNetwork Network { get => (this._network = this._network ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.KubernetesRoleNetwork()); }

        /// <summary>Backing field for <see cref="Storage" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleStorage _storage;

        /// <summary>Kubernetes role storage resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleStorage Storage { get => (this._storage = this._storage ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.KubernetesRoleStorage()); set => this._storage = value; }

        /// <summary>Kubernetes storage class info.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleStorageClassInfo[] StorageClass { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleStorageInternal)Storage).StorageClass; }

        /// <summary>Mount points of shares in role(s).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IMountPointMap[] StorageEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleStorageInternal)Storage).Endpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleStorageInternal)Storage).Endpoint = value ?? null /* arrayOf */; }

        /// <summary>Creates an new <see cref="KubernetesRoleResources" /> instance.</summary>
        public KubernetesRoleResources()
        {

        }
    }
    /// Kubernetes role resources
    public partial interface IKubernetesRoleResources :
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.IJsonSerializable
    {
        /// <summary>Pod Subnet</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Pod Subnet",
        SerializedName = @"podSubnet",
        PossibleTypes = new [] { typeof(string) })]
        string CniConfigPodSubnet { get;  }
        /// <summary>Service subnet</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Service subnet",
        SerializedName = @"serviceSubnet",
        PossibleTypes = new [] { typeof(string) })]
        string CniConfigServiceSubnet { get;  }
        /// <summary>Cni type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Cni type",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string CniConfigType { get;  }
        /// <summary>Cni version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Cni version",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string CniConfigVersion { get;  }
        /// <summary>Memory in bytes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Memory in bytes",
        SerializedName = @"memoryInBytes",
        PossibleTypes = new [] { typeof(long) })]
        long? ComputeMemoryInByte { get;  }
        /// <summary>Processor count</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Processor count",
        SerializedName = @"processorCount",
        PossibleTypes = new [] { typeof(int) })]
        int? ComputeProcessorCount { get;  }
        /// <summary>VM profile</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"VM profile",
        SerializedName = @"vmProfile",
        PossibleTypes = new [] { typeof(string) })]
        string ComputeVMProfile { get; set; }
        /// <summary>Load balancer type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Load balancer type",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string LoadBalancerConfigType { get;  }
        /// <summary>Load balancer version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Load balancer version",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string LoadBalancerConfigVersion { get;  }
        /// <summary>Kubernetes storage class info.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Kubernetes storage class info.",
        SerializedName = @"storageClasses",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleStorageClassInfo) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleStorageClassInfo[] StorageClass { get;  }
        /// <summary>Mount points of shares in role(s).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Mount points of shares in role(s).",
        SerializedName = @"endpoints",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IMountPointMap) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IMountPointMap[] StorageEndpoint { get; set; }

    }
    /// Kubernetes role resources
    internal partial interface IKubernetesRoleResourcesInternal

    {
        /// <summary>Pod Subnet</summary>
        string CniConfigPodSubnet { get; set; }
        /// <summary>Service subnet</summary>
        string CniConfigServiceSubnet { get; set; }
        /// <summary>Cni type</summary>
        string CniConfigType { get; set; }
        /// <summary>Cni version</summary>
        string CniConfigVersion { get; set; }
        /// <summary>Kubernetes role compute resource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleCompute Compute { get; set; }
        /// <summary>Memory in bytes</summary>
        long? ComputeMemoryInByte { get; set; }
        /// <summary>Processor count</summary>
        int? ComputeProcessorCount { get; set; }
        /// <summary>VM profile</summary>
        string ComputeVMProfile { get; set; }
        /// <summary>Load balancer type</summary>
        string LoadBalancerConfigType { get; set; }
        /// <summary>Load balancer version</summary>
        string LoadBalancerConfigVersion { get; set; }
        /// <summary>Kubernetes role network resource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleNetwork Network { get; set; }
        /// <summary>Cni configuration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.ICniConfig NetworkCniConfig { get; set; }
        /// <summary>Load balancer configuration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.ILoadBalancerConfig NetworkLoadBalancerConfig { get; set; }
        /// <summary>Kubernetes role storage resource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleStorage Storage { get; set; }
        /// <summary>Kubernetes storage class info.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleStorageClassInfo[] StorageClass { get; set; }
        /// <summary>Mount points of shares in role(s).</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IMountPointMap[] StorageEndpoint { get; set; }

    }
}