// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Extensions;

    /// <summary>The properties for the job.</summary>
    public partial class JobProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json erialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IJobProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IJobProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IJobProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonObject json ? new JobProperties(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonObject into a new instance of <see cref="JobProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal JobProperties(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_downloadProgress = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonObject>("downloadProgress"), out var __jsonDownloadProgress) ? Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.UpdateDownloadProgress.FromJson(__jsonDownloadProgress) : DownloadProgress;}
            {_installProgress = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonObject>("installProgress"), out var __jsonInstallProgress) ? Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.UpdateInstallProgress.FromJson(__jsonInstallProgress) : InstallProgress;}
            {_jobType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonString>("jobType"), out var __jsonJobType) ? (string)__jsonJobType : (string)JobType;}
            {_currentStage = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonString>("currentStage"), out var __jsonCurrentStage) ? (string)__jsonCurrentStage : (string)CurrentStage;}
            {_totalRefreshError = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNumber>("totalRefreshErrors"), out var __jsonTotalRefreshErrors) ? (int?)__jsonTotalRefreshErrors : TotalRefreshError;}
            {_errorManifestFile = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonString>("errorManifestFile"), out var __jsonErrorManifestFile) ? (string)__jsonErrorManifestFile : (string)ErrorManifestFile;}
            {_refreshedEntityId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonString>("refreshedEntityId"), out var __jsonRefreshedEntityId) ? (string)__jsonRefreshedEntityId : (string)RefreshedEntityId;}
            {_folder = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonString>("folder"), out var __jsonFolder) ? (string)__jsonFolder : (string)Folder;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="JobProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="JobProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._downloadProgress ? (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode) this._downloadProgress.ToJson(null,serializationMode) : null, "downloadProgress" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._installProgress ? (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode) this._installProgress.ToJson(null,serializationMode) : null, "installProgress" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._jobType)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonString(this._jobType.ToString()) : null, "jobType" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._currentStage)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonString(this._currentStage.ToString()) : null, "currentStage" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._totalRefreshError ? (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNumber((int)this._totalRefreshError) : null, "totalRefreshErrors" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._errorManifestFile)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonString(this._errorManifestFile.ToString()) : null, "errorManifestFile" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._refreshedEntityId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonString(this._refreshedEntityId.ToString()) : null, "refreshedEntityId" ,container.Add );
            }
            AddIf( null != (((object)this._folder)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonString(this._folder.ToString()) : null, "folder" ,container.Add );
            AfterToJson(ref container);
            return container;
        }
    }
}