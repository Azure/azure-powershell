// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301
{
    using Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.PowerShell;

    /// <summary>
    /// The limited preview of Kubernetes Cluster Management from the Azure supports:
    /// 1. Using a simple turn-key option in Azure Portal, deploy a Kubernetes cluster on your Azure Stack Edge device.
    /// 2. Configure Kubernetes cluster running on your device with Arc enabled Kubernetes with a click of a button in the Azure
    /// Portal.
    /// Azure Arc enables organizations to view, manage, and govern their on-premises Kubernetes clusters using the Azure Portal,
    /// command line tools, and APIs.
    /// 3. Easily configure Persistent Volumes using SMB and NFS shares for storing container data.
    /// For more information, refer to the document here: https://databoxupdatepackages.blob.core.windows.net/documentation/Microsoft-Azure-Stack-Edge-K8-Cloud-Management-20210323.pdf
    /// Or Demo: https://databoxupdatepackages.blob.core.windows.net/documentation/Microsoft-Azure-Stack-Edge-K8S-Cloud-Management-20210323.mp4
    /// By using this feature, you agree to the preview legal terms. See the https://azure.microsoft.com/en-us/support/legal/preview-supplemental-terms/
    /// </summary>
    [System.ComponentModel.TypeConverter(typeof(KubernetesRoleTypeConverter))]
    public partial class KubernetesRole
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.KubernetesRole"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRole" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRole DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new KubernetesRole(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.KubernetesRole"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRole" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRole DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new KubernetesRole(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="KubernetesRole" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="className" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRole FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.KubernetesRole"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal KubernetesRole(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.KubernetesRolePropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IArmBaseModelInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IArmBaseModelInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IArmBaseModelInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IArmBaseModelInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IArmBaseModelInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IArmBaseModelInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleInternal)this).SystemDataCreatedByType = (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.CreatedByType?) content.GetValueForProperty("SystemDataCreatedByType",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleInternal)this).SystemDataCreatedByType, Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleInternal)this).SystemDataLastModifiedByType = (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.CreatedByType?) content.GetValueForProperty("SystemDataLastModifiedByType",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleInternal)this).SystemDataLastModifiedByType, Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleInternal)this).SystemData = (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20.ISystemData) content.GetValueForProperty("SystemData",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleInternal)this).SystemData, Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Kind"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleInternal)this).Kind = (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.RoleTypes) content.GetValueForProperty("Kind",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleInternal)this).Kind, Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.RoleTypes.CreateFrom);
            }
            if (content.Contains("RoleStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).RoleStatus = (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.RoleStatus) content.GetValueForProperty("RoleStatus",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).RoleStatus, Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.RoleStatus.CreateFrom);
            }
            if (content.Contains("KubernetesClusterInfo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).KubernetesClusterInfo = (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesClusterInfo) content.GetValueForProperty("KubernetesClusterInfo",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).KubernetesClusterInfo, Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.KubernetesClusterInfoTypeConverter.ConvertFrom);
            }
            if (content.Contains("Resource"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).Resource = (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleResources) content.GetValueForProperty("Resource",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).Resource, Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.KubernetesRoleResourcesTypeConverter.ConvertFrom);
            }
            if (content.Contains("HostPlatform"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).HostPlatform = (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.PlatformType) content.GetValueForProperty("HostPlatform",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).HostPlatform, Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.PlatformType.CreateFrom);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.KubernetesState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.KubernetesState.CreateFrom);
            }
            if (content.Contains("HostPlatformType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).HostPlatformType = (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.HostPlatformType?) content.GetValueForProperty("HostPlatformType",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).HostPlatformType, Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.HostPlatformType.CreateFrom);
            }
            if (content.Contains("KuberneteClusterInfoEtcdInfo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).KuberneteClusterInfoEtcdInfo = (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IEtcdInfo) content.GetValueForProperty("KuberneteClusterInfoEtcdInfo",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).KuberneteClusterInfoEtcdInfo, Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.EtcdInfoTypeConverter.ConvertFrom);
            }
            if (content.Contains("KuberneteClusterInfoNode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).KuberneteClusterInfoNode = (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INodeInfo[]) content.GetValueForProperty("KuberneteClusterInfoNode",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).KuberneteClusterInfoNode, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INodeInfo>(__y, Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.NodeInfoTypeConverter.ConvertFrom));
            }
            if (content.Contains("KuberneteClusterInfoVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).KuberneteClusterInfoVersion = (string) content.GetValueForProperty("KuberneteClusterInfoVersion",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).KuberneteClusterInfoVersion, global::System.Convert.ToString);
            }
            if (content.Contains("EtcdInfoType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).EtcdInfoType = (string) content.GetValueForProperty("EtcdInfoType",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).EtcdInfoType, global::System.Convert.ToString);
            }
            if (content.Contains("EtcdInfoVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).EtcdInfoVersion = (string) content.GetValueForProperty("EtcdInfoVersion",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).EtcdInfoVersion, global::System.Convert.ToString);
            }
            if (content.Contains("KuberneteRoleResourceStorage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).KuberneteRoleResourceStorage = (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleStorage) content.GetValueForProperty("KuberneteRoleResourceStorage",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).KuberneteRoleResourceStorage, Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.KubernetesRoleStorageTypeConverter.ConvertFrom);
            }
            if (content.Contains("KuberneteRoleResourceCompute"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).KuberneteRoleResourceCompute = (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleCompute) content.GetValueForProperty("KuberneteRoleResourceCompute",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).KuberneteRoleResourceCompute, Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.KubernetesRoleComputeTypeConverter.ConvertFrom);
            }
            if (content.Contains("KuberneteRoleResourceNetwork"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).KuberneteRoleResourceNetwork = (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleNetwork) content.GetValueForProperty("KuberneteRoleResourceNetwork",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).KuberneteRoleResourceNetwork, Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.KubernetesRoleNetworkTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkCniConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).NetworkCniConfig = (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.ICniConfig) content.GetValueForProperty("NetworkCniConfig",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).NetworkCniConfig, Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.CniConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("StorageClass"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).StorageClass = (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleStorageClassInfo[]) content.GetValueForProperty("StorageClass",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).StorageClass, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleStorageClassInfo>(__y, Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.KubernetesRoleStorageClassInfoTypeConverter.ConvertFrom));
            }
            if (content.Contains("StorageEndpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).StorageEndpoint = (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IMountPointMap[]) content.GetValueForProperty("StorageEndpoint",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).StorageEndpoint, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IMountPointMap>(__y, Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.MountPointMapTypeConverter.ConvertFrom));
            }
            if (content.Contains("ComputeVMProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).ComputeVMProfile = (string) content.GetValueForProperty("ComputeVMProfile",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).ComputeVMProfile, global::System.Convert.ToString);
            }
            if (content.Contains("ComputeMemoryInByte"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).ComputeMemoryInByte = (long?) content.GetValueForProperty("ComputeMemoryInByte",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).ComputeMemoryInByte, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("ComputeProcessorCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).ComputeProcessorCount = (int?) content.GetValueForProperty("ComputeProcessorCount",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).ComputeProcessorCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetworkLoadBalancerConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).NetworkLoadBalancerConfig = (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.ILoadBalancerConfig) content.GetValueForProperty("NetworkLoadBalancerConfig",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).NetworkLoadBalancerConfig, Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.LoadBalancerConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("CniConfigType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).CniConfigType = (string) content.GetValueForProperty("CniConfigType",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).CniConfigType, global::System.Convert.ToString);
            }
            if (content.Contains("CniConfigVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).CniConfigVersion = (string) content.GetValueForProperty("CniConfigVersion",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).CniConfigVersion, global::System.Convert.ToString);
            }
            if (content.Contains("CniConfigPodSubnet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).CniConfigPodSubnet = (string) content.GetValueForProperty("CniConfigPodSubnet",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).CniConfigPodSubnet, global::System.Convert.ToString);
            }
            if (content.Contains("CniConfigServiceSubnet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).CniConfigServiceSubnet = (string) content.GetValueForProperty("CniConfigServiceSubnet",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).CniConfigServiceSubnet, global::System.Convert.ToString);
            }
            if (content.Contains("LoadBalancerConfigType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).LoadBalancerConfigType = (string) content.GetValueForProperty("LoadBalancerConfigType",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).LoadBalancerConfigType, global::System.Convert.ToString);
            }
            if (content.Contains("LoadBalancerConfigVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).LoadBalancerConfigVersion = (string) content.GetValueForProperty("LoadBalancerConfigVersion",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).LoadBalancerConfigVersion, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.KubernetesRole"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal KubernetesRole(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.KubernetesRolePropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IArmBaseModelInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IArmBaseModelInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IArmBaseModelInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IArmBaseModelInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IArmBaseModelInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IArmBaseModelInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleInternal)this).SystemDataCreatedByType = (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.CreatedByType?) content.GetValueForProperty("SystemDataCreatedByType",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleInternal)this).SystemDataCreatedByType, Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleInternal)this).SystemDataLastModifiedByType = (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.CreatedByType?) content.GetValueForProperty("SystemDataLastModifiedByType",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleInternal)this).SystemDataLastModifiedByType, Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleInternal)this).SystemData = (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20.ISystemData) content.GetValueForProperty("SystemData",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleInternal)this).SystemData, Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Kind"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleInternal)this).Kind = (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.RoleTypes) content.GetValueForProperty("Kind",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleInternal)this).Kind, Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.RoleTypes.CreateFrom);
            }
            if (content.Contains("RoleStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).RoleStatus = (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.RoleStatus) content.GetValueForProperty("RoleStatus",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).RoleStatus, Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.RoleStatus.CreateFrom);
            }
            if (content.Contains("KubernetesClusterInfo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).KubernetesClusterInfo = (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesClusterInfo) content.GetValueForProperty("KubernetesClusterInfo",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).KubernetesClusterInfo, Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.KubernetesClusterInfoTypeConverter.ConvertFrom);
            }
            if (content.Contains("Resource"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).Resource = (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleResources) content.GetValueForProperty("Resource",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).Resource, Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.KubernetesRoleResourcesTypeConverter.ConvertFrom);
            }
            if (content.Contains("HostPlatform"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).HostPlatform = (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.PlatformType) content.GetValueForProperty("HostPlatform",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).HostPlatform, Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.PlatformType.CreateFrom);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.KubernetesState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.KubernetesState.CreateFrom);
            }
            if (content.Contains("HostPlatformType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).HostPlatformType = (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.HostPlatformType?) content.GetValueForProperty("HostPlatformType",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).HostPlatformType, Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.HostPlatformType.CreateFrom);
            }
            if (content.Contains("KuberneteClusterInfoEtcdInfo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).KuberneteClusterInfoEtcdInfo = (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IEtcdInfo) content.GetValueForProperty("KuberneteClusterInfoEtcdInfo",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).KuberneteClusterInfoEtcdInfo, Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.EtcdInfoTypeConverter.ConvertFrom);
            }
            if (content.Contains("KuberneteClusterInfoNode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).KuberneteClusterInfoNode = (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INodeInfo[]) content.GetValueForProperty("KuberneteClusterInfoNode",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).KuberneteClusterInfoNode, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INodeInfo>(__y, Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.NodeInfoTypeConverter.ConvertFrom));
            }
            if (content.Contains("KuberneteClusterInfoVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).KuberneteClusterInfoVersion = (string) content.GetValueForProperty("KuberneteClusterInfoVersion",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).KuberneteClusterInfoVersion, global::System.Convert.ToString);
            }
            if (content.Contains("EtcdInfoType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).EtcdInfoType = (string) content.GetValueForProperty("EtcdInfoType",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).EtcdInfoType, global::System.Convert.ToString);
            }
            if (content.Contains("EtcdInfoVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).EtcdInfoVersion = (string) content.GetValueForProperty("EtcdInfoVersion",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).EtcdInfoVersion, global::System.Convert.ToString);
            }
            if (content.Contains("KuberneteRoleResourceStorage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).KuberneteRoleResourceStorage = (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleStorage) content.GetValueForProperty("KuberneteRoleResourceStorage",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).KuberneteRoleResourceStorage, Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.KubernetesRoleStorageTypeConverter.ConvertFrom);
            }
            if (content.Contains("KuberneteRoleResourceCompute"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).KuberneteRoleResourceCompute = (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleCompute) content.GetValueForProperty("KuberneteRoleResourceCompute",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).KuberneteRoleResourceCompute, Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.KubernetesRoleComputeTypeConverter.ConvertFrom);
            }
            if (content.Contains("KuberneteRoleResourceNetwork"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).KuberneteRoleResourceNetwork = (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleNetwork) content.GetValueForProperty("KuberneteRoleResourceNetwork",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).KuberneteRoleResourceNetwork, Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.KubernetesRoleNetworkTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkCniConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).NetworkCniConfig = (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.ICniConfig) content.GetValueForProperty("NetworkCniConfig",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).NetworkCniConfig, Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.CniConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("StorageClass"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).StorageClass = (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleStorageClassInfo[]) content.GetValueForProperty("StorageClass",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).StorageClass, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleStorageClassInfo>(__y, Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.KubernetesRoleStorageClassInfoTypeConverter.ConvertFrom));
            }
            if (content.Contains("StorageEndpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).StorageEndpoint = (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IMountPointMap[]) content.GetValueForProperty("StorageEndpoint",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).StorageEndpoint, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IMountPointMap>(__y, Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.MountPointMapTypeConverter.ConvertFrom));
            }
            if (content.Contains("ComputeVMProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).ComputeVMProfile = (string) content.GetValueForProperty("ComputeVMProfile",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).ComputeVMProfile, global::System.Convert.ToString);
            }
            if (content.Contains("ComputeMemoryInByte"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).ComputeMemoryInByte = (long?) content.GetValueForProperty("ComputeMemoryInByte",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).ComputeMemoryInByte, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("ComputeProcessorCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).ComputeProcessorCount = (int?) content.GetValueForProperty("ComputeProcessorCount",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).ComputeProcessorCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetworkLoadBalancerConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).NetworkLoadBalancerConfig = (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.ILoadBalancerConfig) content.GetValueForProperty("NetworkLoadBalancerConfig",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).NetworkLoadBalancerConfig, Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.LoadBalancerConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("CniConfigType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).CniConfigType = (string) content.GetValueForProperty("CniConfigType",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).CniConfigType, global::System.Convert.ToString);
            }
            if (content.Contains("CniConfigVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).CniConfigVersion = (string) content.GetValueForProperty("CniConfigVersion",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).CniConfigVersion, global::System.Convert.ToString);
            }
            if (content.Contains("CniConfigPodSubnet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).CniConfigPodSubnet = (string) content.GetValueForProperty("CniConfigPodSubnet",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).CniConfigPodSubnet, global::System.Convert.ToString);
            }
            if (content.Contains("CniConfigServiceSubnet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).CniConfigServiceSubnet = (string) content.GetValueForProperty("CniConfigServiceSubnet",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).CniConfigServiceSubnet, global::System.Convert.ToString);
            }
            if (content.Contains("LoadBalancerConfigType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).LoadBalancerConfigType = (string) content.GetValueForProperty("LoadBalancerConfigType",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).LoadBalancerConfigType, global::System.Convert.ToString);
            }
            if (content.Contains("LoadBalancerConfigVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).LoadBalancerConfigVersion = (string) content.GetValueForProperty("LoadBalancerConfigVersion",((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal)this).LoadBalancerConfigVersion, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// The limited preview of Kubernetes Cluster Management from the Azure supports:
    /// 1. Using a simple turn-key option in Azure Portal, deploy a Kubernetes cluster on your Azure Stack Edge device.
    /// 2. Configure Kubernetes cluster running on your device with Arc enabled Kubernetes with a click of a button in the Azure
    /// Portal.
    /// Azure Arc enables organizations to view, manage, and govern their on-premises Kubernetes clusters using the Azure Portal,
    /// command line tools, and APIs.
    /// 3. Easily configure Persistent Volumes using SMB and NFS shares for storing container data.
    /// For more information, refer to the document here: https://databoxupdatepackages.blob.core.windows.net/documentation/Microsoft-Azure-Stack-Edge-K8-Cloud-Management-20210323.pdf
    /// Or Demo: https://databoxupdatepackages.blob.core.windows.net/documentation/Microsoft-Azure-Stack-Edge-K8S-Cloud-Management-20210323.mp4
    /// By using this feature, you agree to the preview legal terms. See the https://azure.microsoft.com/en-us/support/legal/preview-supplemental-terms/
    [System.ComponentModel.TypeConverter(typeof(KubernetesRoleTypeConverter))]
    public partial interface IKubernetesRole

    {

    }
}