// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Extensions;

    /// <summary>The share properties.</summary>
    public partial class ShareProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IShareProperties,
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.ISharePropertiesInternal
    {

        /// <summary>Backing field for <see cref="AccessProtocol" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.ShareAccessProtocol _accessProtocol;

        /// <summary>Access protocol to be used by the share.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.ShareAccessProtocol AccessProtocol { get => this._accessProtocol; set => this._accessProtocol = value; }

        /// <summary>Backing field for <see cref="AzureContainerInfo" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IAzureContainerInfo _azureContainerInfo;

        /// <summary>Azure container mapping for the share.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IAzureContainerInfo AzureContainerInfo { get => (this._azureContainerInfo = this._azureContainerInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.AzureContainerInfo()); set => this._azureContainerInfo = value; }

        /// <summary>
        /// Container name (Based on the data format specified, this represents the name of Azure Files/Page blob/Block blob).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string AzureContainerInfoContainerName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IAzureContainerInfoInternal)AzureContainerInfo).ContainerName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IAzureContainerInfoInternal)AzureContainerInfo).ContainerName = value ?? null; }

        /// <summary>Storage format used for the file represented by the share.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.AzureContainerDataFormat? AzureContainerInfoDataFormat { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IAzureContainerInfoInternal)AzureContainerInfo).DataFormat; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IAzureContainerInfoInternal)AzureContainerInfo).DataFormat = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.AzureContainerDataFormat)""); }

        /// <summary>ID of the storage account credential used to access storage.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string AzureContainerInfoStorageAccountCredentialId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IAzureContainerInfoInternal)AzureContainerInfo).StorageAccountCredentialId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IAzureContainerInfoInternal)AzureContainerInfo).StorageAccountCredentialId = value ?? null; }

        /// <summary>Backing field for <see cref="ClientAccessRights" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IClientAccessRight[] _clientAccessRights;

        /// <summary>
        /// List of IP addresses and corresponding access rights on the share(required for NFS protocol).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IClientAccessRight[] ClientAccessRights { get => this._clientAccessRights; set => this._clientAccessRights = value; }

        /// <summary>Backing field for <see cref="DataPolicy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.DataPolicy? _dataPolicy;

        /// <summary>Data policy of the share.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.DataPolicy? DataPolicy { get => this._dataPolicy; set => this._dataPolicy = value; }

        /// <summary>Backing field for <see cref="Description" /> property.</summary>
        private string _description;

        /// <summary>Description for the share.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public string Description { get => this._description; set => this._description = value; }

        /// <summary>Internal Acessors for AzureContainerInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IAzureContainerInfo Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.ISharePropertiesInternal.AzureContainerInfo { get => (this._azureContainerInfo = this._azureContainerInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.AzureContainerInfo()); set { {_azureContainerInfo = value;} } }

        /// <summary>Internal Acessors for RefreshDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRefreshDetails Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.ISharePropertiesInternal.RefreshDetail { get => (this._refreshDetail = this._refreshDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.RefreshDetails()); set { {_refreshDetail = value;} } }

        /// <summary>Internal Acessors for ShareMapping</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IMountPointMap[] Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.ISharePropertiesInternal.ShareMapping { get => this._shareMapping; set { {_shareMapping = value;} } }

        /// <summary>Backing field for <see cref="MonitoringStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.MonitoringStatus _monitoringStatus;

        /// <summary>Current monitoring status of the share.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.MonitoringStatus MonitoringStatus { get => this._monitoringStatus; set => this._monitoringStatus = value; }

        /// <summary>Backing field for <see cref="RefreshDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRefreshDetails _refreshDetail;

        /// <summary>Details of the refresh job on this share.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRefreshDetails RefreshDetail { get => (this._refreshDetail = this._refreshDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.RefreshDetails()); set => this._refreshDetail = value; }

        /// <summary>
        /// Indicates the relative path of the error xml for the last refresh job on this particular share or container, if any. This
        /// could be a failed job or a successful job.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string RefreshDetailErrorManifestFile { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRefreshDetailsInternal)RefreshDetail).ErrorManifestFile; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRefreshDetailsInternal)RefreshDetail).ErrorManifestFile = value ?? null; }

        /// <summary>
        /// If a refresh job is currently in progress on this share or container, this field indicates the ARM resource ID of that
        /// job. The field is empty if no job is in progress.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string RefreshDetailInProgressRefreshJobId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRefreshDetailsInternal)RefreshDetail).InProgressRefreshJobId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRefreshDetailsInternal)RefreshDetail).InProgressRefreshJobId = value ?? null; }

        /// <summary>
        /// Indicates the completed time for the last refresh job on this particular share or container, if any.This could be a failed
        /// job or a successful job.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public global::System.DateTime? RefreshDetailLastCompletedRefreshJobTimeInUtc { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRefreshDetailsInternal)RefreshDetail).LastCompletedRefreshJobTimeInUtc; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRefreshDetailsInternal)RefreshDetail).LastCompletedRefreshJobTimeInUtc = value ?? default(global::System.DateTime); }

        /// <summary>
        /// Indicates the id of the last refresh job on this particular share or container,if any. This could be a failed job or a
        /// successful job.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string RefreshDetailLastJob { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRefreshDetailsInternal)RefreshDetail).LastJob; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRefreshDetailsInternal)RefreshDetail).LastJob = value ?? null; }

        /// <summary>Backing field for <see cref="ShareMapping" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IMountPointMap[] _shareMapping;

        /// <summary>Share mount point to the role.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IMountPointMap[] ShareMapping { get => this._shareMapping; }

        /// <summary>Backing field for <see cref="ShareStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.ShareStatus _shareStatus;

        /// <summary>Current status of the share.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.ShareStatus ShareStatus { get => this._shareStatus; set => this._shareStatus = value; }

        /// <summary>Backing field for <see cref="UserAccessRights" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUserAccessRight[] _userAccessRights;

        /// <summary>
        /// Mapping of users and corresponding access rights on the share (required for SMB protocol).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUserAccessRight[] UserAccessRights { get => this._userAccessRights; set => this._userAccessRights = value; }

        /// <summary>Creates an new <see cref="ShareProperties" /> instance.</summary>
        public ShareProperties()
        {

        }
    }
    /// The share properties.
    public partial interface IShareProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.IJsonSerializable
    {
        /// <summary>Access protocol to be used by the share.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Access protocol to be used by the share.",
        SerializedName = @"accessProtocol",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.ShareAccessProtocol) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.ShareAccessProtocol AccessProtocol { get; set; }
        /// <summary>
        /// Container name (Based on the data format specified, this represents the name of Azure Files/Page blob/Block blob).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Container name (Based on the data format specified, this represents the name of Azure Files/Page blob/Block blob).",
        SerializedName = @"containerName",
        PossibleTypes = new [] { typeof(string) })]
        string AzureContainerInfoContainerName { get; set; }
        /// <summary>Storage format used for the file represented by the share.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Storage format used for the file represented by the share.",
        SerializedName = @"dataFormat",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.AzureContainerDataFormat) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.AzureContainerDataFormat? AzureContainerInfoDataFormat { get; set; }
        /// <summary>ID of the storage account credential used to access storage.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ID of the storage account credential used to access storage.",
        SerializedName = @"storageAccountCredentialId",
        PossibleTypes = new [] { typeof(string) })]
        string AzureContainerInfoStorageAccountCredentialId { get; set; }
        /// <summary>
        /// List of IP addresses and corresponding access rights on the share(required for NFS protocol).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of IP addresses and corresponding access rights on the share(required for NFS protocol).",
        SerializedName = @"clientAccessRights",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IClientAccessRight) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IClientAccessRight[] ClientAccessRights { get; set; }
        /// <summary>Data policy of the share.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Data policy of the share.",
        SerializedName = @"dataPolicy",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.DataPolicy) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.DataPolicy? DataPolicy { get; set; }
        /// <summary>Description for the share.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Description for the share.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>Current monitoring status of the share.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Current monitoring status of the share.",
        SerializedName = @"monitoringStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.MonitoringStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.MonitoringStatus MonitoringStatus { get; set; }
        /// <summary>
        /// Indicates the relative path of the error xml for the last refresh job on this particular share or container, if any. This
        /// could be a failed job or a successful job.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates the relative path of the error xml for the last refresh job on this particular share or container, if any. This could be a failed job or a successful job.",
        SerializedName = @"errorManifestFile",
        PossibleTypes = new [] { typeof(string) })]
        string RefreshDetailErrorManifestFile { get; set; }
        /// <summary>
        /// If a refresh job is currently in progress on this share or container, this field indicates the ARM resource ID of that
        /// job. The field is empty if no job is in progress.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If a refresh job is currently in progress on this share or container, this field indicates the ARM resource ID of that job. The field is empty if no job is in progress.",
        SerializedName = @"inProgressRefreshJobId",
        PossibleTypes = new [] { typeof(string) })]
        string RefreshDetailInProgressRefreshJobId { get; set; }
        /// <summary>
        /// Indicates the completed time for the last refresh job on this particular share or container, if any.This could be a failed
        /// job or a successful job.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates the completed time for the last refresh job on this particular share or container, if any.This could be a failed job or a successful job.",
        SerializedName = @"lastCompletedRefreshJobTimeInUTC",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? RefreshDetailLastCompletedRefreshJobTimeInUtc { get; set; }
        /// <summary>
        /// Indicates the id of the last refresh job on this particular share or container,if any. This could be a failed job or a
        /// successful job.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates the id of the last refresh job on this particular share or container,if any. This could be a failed job or a successful job.",
        SerializedName = @"lastJob",
        PossibleTypes = new [] { typeof(string) })]
        string RefreshDetailLastJob { get; set; }
        /// <summary>Share mount point to the role.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Share mount point to the role.",
        SerializedName = @"shareMappings",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IMountPointMap) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IMountPointMap[] ShareMapping { get;  }
        /// <summary>Current status of the share.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Current status of the share.",
        SerializedName = @"shareStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.ShareStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.ShareStatus ShareStatus { get; set; }
        /// <summary>
        /// Mapping of users and corresponding access rights on the share (required for SMB protocol).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Mapping of users and corresponding access rights on the share (required for SMB protocol).",
        SerializedName = @"userAccessRights",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUserAccessRight) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUserAccessRight[] UserAccessRights { get; set; }

    }
    /// The share properties.
    internal partial interface ISharePropertiesInternal

    {
        /// <summary>Access protocol to be used by the share.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.ShareAccessProtocol AccessProtocol { get; set; }
        /// <summary>Azure container mapping for the share.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IAzureContainerInfo AzureContainerInfo { get; set; }
        /// <summary>
        /// Container name (Based on the data format specified, this represents the name of Azure Files/Page blob/Block blob).
        /// </summary>
        string AzureContainerInfoContainerName { get; set; }
        /// <summary>Storage format used for the file represented by the share.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.AzureContainerDataFormat? AzureContainerInfoDataFormat { get; set; }
        /// <summary>ID of the storage account credential used to access storage.</summary>
        string AzureContainerInfoStorageAccountCredentialId { get; set; }
        /// <summary>
        /// List of IP addresses and corresponding access rights on the share(required for NFS protocol).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IClientAccessRight[] ClientAccessRights { get; set; }
        /// <summary>Data policy of the share.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.DataPolicy? DataPolicy { get; set; }
        /// <summary>Description for the share.</summary>
        string Description { get; set; }
        /// <summary>Current monitoring status of the share.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.MonitoringStatus MonitoringStatus { get; set; }
        /// <summary>Details of the refresh job on this share.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRefreshDetails RefreshDetail { get; set; }
        /// <summary>
        /// Indicates the relative path of the error xml for the last refresh job on this particular share or container, if any. This
        /// could be a failed job or a successful job.
        /// </summary>
        string RefreshDetailErrorManifestFile { get; set; }
        /// <summary>
        /// If a refresh job is currently in progress on this share or container, this field indicates the ARM resource ID of that
        /// job. The field is empty if no job is in progress.
        /// </summary>
        string RefreshDetailInProgressRefreshJobId { get; set; }
        /// <summary>
        /// Indicates the completed time for the last refresh job on this particular share or container, if any.This could be a failed
        /// job or a successful job.
        /// </summary>
        global::System.DateTime? RefreshDetailLastCompletedRefreshJobTimeInUtc { get; set; }
        /// <summary>
        /// Indicates the id of the last refresh job on this particular share or container,if any. This could be a failed job or a
        /// successful job.
        /// </summary>
        string RefreshDetailLastJob { get; set; }
        /// <summary>Share mount point to the role.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IMountPointMap[] ShareMapping { get; set; }
        /// <summary>Current status of the share.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.ShareStatus ShareStatus { get; set; }
        /// <summary>
        /// Mapping of users and corresponding access rights on the share (required for SMB protocol).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUserAccessRight[] UserAccessRights { get; set; }

    }
}