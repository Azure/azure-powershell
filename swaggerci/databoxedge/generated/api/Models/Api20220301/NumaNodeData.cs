// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Extensions;

    /// <summary>NUMA node data.</summary>
    public partial class NumaNodeData :
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INumaNodeData,
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INumaNodeDataInternal
    {

        /// <summary>Backing field for <see cref="EffectiveAvailableMemoryInMb" /> property.</summary>
        private long? _effectiveAvailableMemoryInMb;

        /// <summary>The effective available memory on the NUMA node in MB.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public long? EffectiveAvailableMemoryInMb { get => this._effectiveAvailableMemoryInMb; set => this._effectiveAvailableMemoryInMb = value; }

        /// <summary>Backing field for <see cref="FreeVCpuIndexesForHpn" /> property.</summary>
        private int[] _freeVCpuIndexesForHpn;

        /// <summary>The free VCPU indices for the Hpn VMs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public int[] FreeVCpuIndexesForHpn { get => this._freeVCpuIndexesForHpn; set => this._freeVCpuIndexesForHpn = value; }

        /// <summary>Backing field for <see cref="LogicalCoreCountPerCore" /> property.</summary>
        private int? _logicalCoreCountPerCore;

        /// <summary>The logical cores per core count.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public int? LogicalCoreCountPerCore { get => this._logicalCoreCountPerCore; set => this._logicalCoreCountPerCore = value; }

        /// <summary>Backing field for <see cref="NumaNodeIndex" /> property.</summary>
        private int? _numaNodeIndex;

        /// <summary>The NUMA node index.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public int? NumaNodeIndex { get => this._numaNodeIndex; set => this._numaNodeIndex = value; }

        /// <summary>Backing field for <see cref="TotalMemoryInMb" /> property.</summary>
        private long? _totalMemoryInMb;

        /// <summary>The total memory on the NUMA node.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public long? TotalMemoryInMb { get => this._totalMemoryInMb; set => this._totalMemoryInMb = value; }

        /// <summary>Backing field for <see cref="VCpuIndexesForHpn" /> property.</summary>
        private int[] _vCpuIndexesForHpn;

        /// <summary>The VCPU indices for Hpn VMs</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public int[] VCpuIndexesForHpn { get => this._vCpuIndexesForHpn; set => this._vCpuIndexesForHpn = value; }

        /// <summary>Backing field for <see cref="VCpuIndexesForRoot" /> property.</summary>
        private int[] _vCpuIndexesForRoot;

        /// <summary>The VCPU indices for the root.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public int[] VCpuIndexesForRoot { get => this._vCpuIndexesForRoot; set => this._vCpuIndexesForRoot = value; }

        /// <summary>Creates an new <see cref="NumaNodeData" /> instance.</summary>
        public NumaNodeData()
        {

        }
    }
    /// NUMA node data.
    public partial interface INumaNodeData :
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.IJsonSerializable
    {
        /// <summary>The effective available memory on the NUMA node in MB.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The effective available memory on the NUMA node in MB.",
        SerializedName = @"effectiveAvailableMemoryInMb",
        PossibleTypes = new [] { typeof(long) })]
        long? EffectiveAvailableMemoryInMb { get; set; }
        /// <summary>The free VCPU indices for the Hpn VMs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The free VCPU indices for the Hpn VMs.",
        SerializedName = @"freeVCpuIndexesForHpn",
        PossibleTypes = new [] { typeof(int) })]
        int[] FreeVCpuIndexesForHpn { get; set; }
        /// <summary>The logical cores per core count.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The logical cores per core count.",
        SerializedName = @"logicalCoreCountPerCore",
        PossibleTypes = new [] { typeof(int) })]
        int? LogicalCoreCountPerCore { get; set; }
        /// <summary>The NUMA node index.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The NUMA node index.",
        SerializedName = @"numaNodeIndex",
        PossibleTypes = new [] { typeof(int) })]
        int? NumaNodeIndex { get; set; }
        /// <summary>The total memory on the NUMA node.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The total memory on the NUMA node.",
        SerializedName = @"totalMemoryInMb",
        PossibleTypes = new [] { typeof(long) })]
        long? TotalMemoryInMb { get; set; }
        /// <summary>The VCPU indices for Hpn VMs</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The VCPU indices for Hpn VMs",
        SerializedName = @"vCpuIndexesForHpn",
        PossibleTypes = new [] { typeof(int) })]
        int[] VCpuIndexesForHpn { get; set; }
        /// <summary>The VCPU indices for the root.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The VCPU indices for the root.",
        SerializedName = @"vCpuIndexesForRoot",
        PossibleTypes = new [] { typeof(int) })]
        int[] VCpuIndexesForRoot { get; set; }

    }
    /// NUMA node data.
    internal partial interface INumaNodeDataInternal

    {
        /// <summary>The effective available memory on the NUMA node in MB.</summary>
        long? EffectiveAvailableMemoryInMb { get; set; }
        /// <summary>The free VCPU indices for the Hpn VMs.</summary>
        int[] FreeVCpuIndexesForHpn { get; set; }
        /// <summary>The logical cores per core count.</summary>
        int? LogicalCoreCountPerCore { get; set; }
        /// <summary>The NUMA node index.</summary>
        int? NumaNodeIndex { get; set; }
        /// <summary>The total memory on the NUMA node.</summary>
        long? TotalMemoryInMb { get; set; }
        /// <summary>The VCPU indices for Hpn VMs</summary>
        int[] VCpuIndexesForHpn { get; set; }
        /// <summary>The VCPU indices for the root.</summary>
        int[] VCpuIndexesForRoot { get; set; }

    }
}