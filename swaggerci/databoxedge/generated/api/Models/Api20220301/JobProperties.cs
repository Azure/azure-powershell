// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Extensions;

    /// <summary>The properties for the job.</summary>
    public partial class JobProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IJobProperties,
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IJobPropertiesInternal
    {

        /// <summary>Backing field for <see cref="CurrentStage" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.UpdateOperationStage? _currentStage;

        /// <summary>Current stage of the update operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.UpdateOperationStage? CurrentStage { get => this._currentStage; }

        /// <summary>Backing field for <see cref="DownloadProgress" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateDownloadProgress _downloadProgress;

        /// <summary>The download progress.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateDownloadProgress DownloadProgress { get => (this._downloadProgress = this._downloadProgress ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.UpdateDownloadProgress()); }

        /// <summary>The download phase.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.DownloadPhase? DownloadProgressDownloadPhase { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateDownloadProgressInternal)DownloadProgress).DownloadPhase; }

        /// <summary>Number of updates downloaded.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public int? DownloadProgressNumberOfUpdatesDownloaded { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateDownloadProgressInternal)DownloadProgress).NumberOfUpdatesDownloaded; }

        /// <summary>Number of updates to download.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public int? DownloadProgressNumberOfUpdatesToDownload { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateDownloadProgressInternal)DownloadProgress).NumberOfUpdatesToDownload; }

        /// <summary>Percentage of completion.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public int? DownloadProgressPercentComplete { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateDownloadProgressInternal)DownloadProgress).PercentComplete; }

        /// <summary>Total bytes downloaded.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public double? DownloadProgressTotalBytesDownloaded { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateDownloadProgressInternal)DownloadProgress).TotalBytesDownloaded; }

        /// <summary>Total bytes to download.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public double? DownloadProgressTotalBytesToDownload { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateDownloadProgressInternal)DownloadProgress).TotalBytesToDownload; }

        /// <summary>Backing field for <see cref="ErrorManifestFile" /> property.</summary>
        private string _errorManifestFile;

        /// <summary>
        /// Local share/remote container relative path to the error manifest file of the refresh.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public string ErrorManifestFile { get => this._errorManifestFile; }

        /// <summary>Backing field for <see cref="Folder" /> property.</summary>
        private string _folder;

        /// <summary>
        /// If only subfolders need to be refreshed, then the subfolder path inside the share or container. (The path is empty if
        /// there are no subfolders.)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public string Folder { get => this._folder; set => this._folder = value; }

        /// <summary>Backing field for <see cref="InstallProgress" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateInstallProgress _installProgress;

        /// <summary>The install progress.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateInstallProgress InstallProgress { get => (this._installProgress = this._installProgress ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.UpdateInstallProgress()); }

        /// <summary>Number of updates installed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public int? InstallProgressNumberOfUpdatesInstalled { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateInstallProgressInternal)InstallProgress).NumberOfUpdatesInstalled; }

        /// <summary>Number of updates to install.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public int? InstallProgressNumberOfUpdatesToInstall { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateInstallProgressInternal)InstallProgress).NumberOfUpdatesToInstall; }

        /// <summary>Percentage completed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public int? InstallProgressPercentComplete { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateInstallProgressInternal)InstallProgress).PercentComplete; }

        /// <summary>Backing field for <see cref="JobType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.JobType? _jobType;

        /// <summary>The type of the job.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.JobType? JobType { get => this._jobType; }

        /// <summary>Internal Acessors for CurrentStage</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.UpdateOperationStage? Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IJobPropertiesInternal.CurrentStage { get => this._currentStage; set { {_currentStage = value;} } }

        /// <summary>Internal Acessors for DownloadProgress</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateDownloadProgress Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IJobPropertiesInternal.DownloadProgress { get => (this._downloadProgress = this._downloadProgress ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.UpdateDownloadProgress()); set { {_downloadProgress = value;} } }

        /// <summary>Internal Acessors for DownloadProgressDownloadPhase</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.DownloadPhase? Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IJobPropertiesInternal.DownloadProgressDownloadPhase { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateDownloadProgressInternal)DownloadProgress).DownloadPhase; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateDownloadProgressInternal)DownloadProgress).DownloadPhase = value; }

        /// <summary>Internal Acessors for DownloadProgressNumberOfUpdatesDownloaded</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IJobPropertiesInternal.DownloadProgressNumberOfUpdatesDownloaded { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateDownloadProgressInternal)DownloadProgress).NumberOfUpdatesDownloaded; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateDownloadProgressInternal)DownloadProgress).NumberOfUpdatesDownloaded = value; }

        /// <summary>Internal Acessors for DownloadProgressNumberOfUpdatesToDownload</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IJobPropertiesInternal.DownloadProgressNumberOfUpdatesToDownload { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateDownloadProgressInternal)DownloadProgress).NumberOfUpdatesToDownload; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateDownloadProgressInternal)DownloadProgress).NumberOfUpdatesToDownload = value; }

        /// <summary>Internal Acessors for DownloadProgressPercentComplete</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IJobPropertiesInternal.DownloadProgressPercentComplete { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateDownloadProgressInternal)DownloadProgress).PercentComplete; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateDownloadProgressInternal)DownloadProgress).PercentComplete = value; }

        /// <summary>Internal Acessors for DownloadProgressTotalBytesDownloaded</summary>
        double? Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IJobPropertiesInternal.DownloadProgressTotalBytesDownloaded { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateDownloadProgressInternal)DownloadProgress).TotalBytesDownloaded; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateDownloadProgressInternal)DownloadProgress).TotalBytesDownloaded = value; }

        /// <summary>Internal Acessors for DownloadProgressTotalBytesToDownload</summary>
        double? Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IJobPropertiesInternal.DownloadProgressTotalBytesToDownload { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateDownloadProgressInternal)DownloadProgress).TotalBytesToDownload; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateDownloadProgressInternal)DownloadProgress).TotalBytesToDownload = value; }

        /// <summary>Internal Acessors for ErrorManifestFile</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IJobPropertiesInternal.ErrorManifestFile { get => this._errorManifestFile; set { {_errorManifestFile = value;} } }

        /// <summary>Internal Acessors for InstallProgress</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateInstallProgress Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IJobPropertiesInternal.InstallProgress { get => (this._installProgress = this._installProgress ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.UpdateInstallProgress()); set { {_installProgress = value;} } }

        /// <summary>Internal Acessors for InstallProgressNumberOfUpdatesInstalled</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IJobPropertiesInternal.InstallProgressNumberOfUpdatesInstalled { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateInstallProgressInternal)InstallProgress).NumberOfUpdatesInstalled; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateInstallProgressInternal)InstallProgress).NumberOfUpdatesInstalled = value; }

        /// <summary>Internal Acessors for InstallProgressNumberOfUpdatesToInstall</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IJobPropertiesInternal.InstallProgressNumberOfUpdatesToInstall { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateInstallProgressInternal)InstallProgress).NumberOfUpdatesToInstall; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateInstallProgressInternal)InstallProgress).NumberOfUpdatesToInstall = value; }

        /// <summary>Internal Acessors for InstallProgressPercentComplete</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IJobPropertiesInternal.InstallProgressPercentComplete { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateInstallProgressInternal)InstallProgress).PercentComplete; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateInstallProgressInternal)InstallProgress).PercentComplete = value; }

        /// <summary>Internal Acessors for JobType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.JobType? Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IJobPropertiesInternal.JobType { get => this._jobType; set { {_jobType = value;} } }

        /// <summary>Internal Acessors for RefreshedEntityId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IJobPropertiesInternal.RefreshedEntityId { get => this._refreshedEntityId; set { {_refreshedEntityId = value;} } }

        /// <summary>Internal Acessors for TotalRefreshError</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IJobPropertiesInternal.TotalRefreshError { get => this._totalRefreshError; set { {_totalRefreshError = value;} } }

        /// <summary>Backing field for <see cref="RefreshedEntityId" /> property.</summary>
        private string _refreshedEntityId;

        /// <summary>ARM ID of the entity that was refreshed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public string RefreshedEntityId { get => this._refreshedEntityId; }

        /// <summary>Backing field for <see cref="TotalRefreshError" /> property.</summary>
        private int? _totalRefreshError;

        /// <summary>Total number of errors encountered during the refresh process.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public int? TotalRefreshError { get => this._totalRefreshError; }

        /// <summary>Creates an new <see cref="JobProperties" /> instance.</summary>
        public JobProperties()
        {

        }
    }
    /// The properties for the job.
    public partial interface IJobProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.IJsonSerializable
    {
        /// <summary>Current stage of the update operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Current stage of the update operation.",
        SerializedName = @"currentStage",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.UpdateOperationStage) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.UpdateOperationStage? CurrentStage { get;  }
        /// <summary>The download phase.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The download phase.",
        SerializedName = @"downloadPhase",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.DownloadPhase) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.DownloadPhase? DownloadProgressDownloadPhase { get;  }
        /// <summary>Number of updates downloaded.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Number of updates downloaded.",
        SerializedName = @"numberOfUpdatesDownloaded",
        PossibleTypes = new [] { typeof(int) })]
        int? DownloadProgressNumberOfUpdatesDownloaded { get;  }
        /// <summary>Number of updates to download.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Number of updates to download.",
        SerializedName = @"numberOfUpdatesToDownload",
        PossibleTypes = new [] { typeof(int) })]
        int? DownloadProgressNumberOfUpdatesToDownload { get;  }
        /// <summary>Percentage of completion.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Percentage of completion.",
        SerializedName = @"percentComplete",
        PossibleTypes = new [] { typeof(int) })]
        int? DownloadProgressPercentComplete { get;  }
        /// <summary>Total bytes downloaded.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Total bytes downloaded.",
        SerializedName = @"totalBytesDownloaded",
        PossibleTypes = new [] { typeof(double) })]
        double? DownloadProgressTotalBytesDownloaded { get;  }
        /// <summary>Total bytes to download.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Total bytes to download.",
        SerializedName = @"totalBytesToDownload",
        PossibleTypes = new [] { typeof(double) })]
        double? DownloadProgressTotalBytesToDownload { get;  }
        /// <summary>
        /// Local share/remote container relative path to the error manifest file of the refresh.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Local share/remote container relative path to the error manifest file of the refresh.",
        SerializedName = @"errorManifestFile",
        PossibleTypes = new [] { typeof(string) })]
        string ErrorManifestFile { get;  }
        /// <summary>
        /// If only subfolders need to be refreshed, then the subfolder path inside the share or container. (The path is empty if
        /// there are no subfolders.)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If only subfolders need to be refreshed, then the subfolder path inside the share or container. (The path is empty if there are no subfolders.)",
        SerializedName = @"folder",
        PossibleTypes = new [] { typeof(string) })]
        string Folder { get; set; }
        /// <summary>Number of updates installed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Number of updates installed.",
        SerializedName = @"numberOfUpdatesInstalled",
        PossibleTypes = new [] { typeof(int) })]
        int? InstallProgressNumberOfUpdatesInstalled { get;  }
        /// <summary>Number of updates to install.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Number of updates to install.",
        SerializedName = @"numberOfUpdatesToInstall",
        PossibleTypes = new [] { typeof(int) })]
        int? InstallProgressNumberOfUpdatesToInstall { get;  }
        /// <summary>Percentage completed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Percentage completed.",
        SerializedName = @"percentComplete",
        PossibleTypes = new [] { typeof(int) })]
        int? InstallProgressPercentComplete { get;  }
        /// <summary>The type of the job.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The type of the job.",
        SerializedName = @"jobType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.JobType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.JobType? JobType { get;  }
        /// <summary>ARM ID of the entity that was refreshed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"ARM ID of the entity that was refreshed.",
        SerializedName = @"refreshedEntityId",
        PossibleTypes = new [] { typeof(string) })]
        string RefreshedEntityId { get;  }
        /// <summary>Total number of errors encountered during the refresh process.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Total number of errors encountered during the refresh process.",
        SerializedName = @"totalRefreshErrors",
        PossibleTypes = new [] { typeof(int) })]
        int? TotalRefreshError { get;  }

    }
    /// The properties for the job.
    internal partial interface IJobPropertiesInternal

    {
        /// <summary>Current stage of the update operation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.UpdateOperationStage? CurrentStage { get; set; }
        /// <summary>The download progress.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateDownloadProgress DownloadProgress { get; set; }
        /// <summary>The download phase.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.DownloadPhase? DownloadProgressDownloadPhase { get; set; }
        /// <summary>Number of updates downloaded.</summary>
        int? DownloadProgressNumberOfUpdatesDownloaded { get; set; }
        /// <summary>Number of updates to download.</summary>
        int? DownloadProgressNumberOfUpdatesToDownload { get; set; }
        /// <summary>Percentage of completion.</summary>
        int? DownloadProgressPercentComplete { get; set; }
        /// <summary>Total bytes downloaded.</summary>
        double? DownloadProgressTotalBytesDownloaded { get; set; }
        /// <summary>Total bytes to download.</summary>
        double? DownloadProgressTotalBytesToDownload { get; set; }
        /// <summary>
        /// Local share/remote container relative path to the error manifest file of the refresh.
        /// </summary>
        string ErrorManifestFile { get; set; }
        /// <summary>
        /// If only subfolders need to be refreshed, then the subfolder path inside the share or container. (The path is empty if
        /// there are no subfolders.)
        /// </summary>
        string Folder { get; set; }
        /// <summary>The install progress.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateInstallProgress InstallProgress { get; set; }
        /// <summary>Number of updates installed.</summary>
        int? InstallProgressNumberOfUpdatesInstalled { get; set; }
        /// <summary>Number of updates to install.</summary>
        int? InstallProgressNumberOfUpdatesToInstall { get; set; }
        /// <summary>Percentage completed.</summary>
        int? InstallProgressPercentComplete { get; set; }
        /// <summary>The type of the job.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.JobType? JobType { get; set; }
        /// <summary>ARM ID of the entity that was refreshed.</summary>
        string RefreshedEntityId { get; set; }
        /// <summary>Total number of errors encountered during the refresh process.</summary>
        int? TotalRefreshError { get; set; }

    }
}