// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Extensions;

    /// <summary>Represents the networkAdapter on a device.</summary>
    public partial class NetworkAdapter :
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INetworkAdapter,
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INetworkAdapterInternal
    {

        /// <summary>Backing field for <see cref="AdapterId" /> property.</summary>
        private string _adapterId;

        /// <summary>Instance ID of network adapter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public string AdapterId { get => this._adapterId; }

        /// <summary>Backing field for <see cref="AdapterPosition" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INetworkAdapterPosition _adapterPosition;

        /// <summary>Hardware position of network adapter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INetworkAdapterPosition AdapterPosition { get => (this._adapterPosition = this._adapterPosition ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.NetworkAdapterPosition()); }

        /// <summary>The network group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.NetworkGroup? AdapterPositionNetworkGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INetworkAdapterPositionInternal)AdapterPosition).NetworkGroup; }

        /// <summary>The port.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public int? AdapterPositionPort { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INetworkAdapterPositionInternal)AdapterPosition).Port; }

        /// <summary>Backing field for <see cref="DhcpStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.NetworkAdapterDhcpStatus? _dhcpStatus;

        /// <summary>Value indicating whether this adapter has DHCP enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.NetworkAdapterDhcpStatus? DhcpStatus { get => this._dhcpStatus; set => this._dhcpStatus = value; }

        /// <summary>Backing field for <see cref="DnsServer" /> property.</summary>
        private string[] _dnsServer;

        /// <summary>The list of DNS Servers of the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public string[] DnsServer { get => this._dnsServer; }

        /// <summary>Backing field for <see cref="Index" /> property.</summary>
        private int? _index;

        /// <summary>Logical index of the adapter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public int? Index { get => this._index; }

        /// <summary>Backing field for <see cref="Ipv4Configuration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIpv4Config _ipv4Configuration;

        /// <summary>The IPv4 configuration of the network adapter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIpv4Config Ipv4Configuration { get => (this._ipv4Configuration = this._ipv4Configuration ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.Ipv4Config()); }

        /// <summary>The IPv4 gateway of the network adapter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string Ipv4ConfigurationGateway { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIpv4ConfigInternal)Ipv4Configuration).Gateway; }

        /// <summary>The IPv4 address of the network adapter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string Ipv4ConfigurationIPAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIpv4ConfigInternal)Ipv4Configuration).IPAddress; }

        /// <summary>The IPv4 subnet of the network adapter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string Ipv4ConfigurationSubnet { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIpv4ConfigInternal)Ipv4Configuration).Subnet; }

        /// <summary>Backing field for <see cref="Ipv6Configuration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIpv6Config _ipv6Configuration;

        /// <summary>The IPv6 configuration of the network adapter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIpv6Config Ipv6Configuration { get => (this._ipv6Configuration = this._ipv6Configuration ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.Ipv6Config()); }

        /// <summary>The IPv6 gateway of the network adapter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string Ipv6ConfigurationGateway { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIpv6ConfigInternal)Ipv6Configuration).Gateway; }

        /// <summary>The IPv6 address of the network adapter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string Ipv6ConfigurationIPAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIpv6ConfigInternal)Ipv6Configuration).IPAddress; }

        /// <summary>The IPv6 prefix of the network adapter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public int? Ipv6ConfigurationPrefixLength { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIpv6ConfigInternal)Ipv6Configuration).PrefixLength; }

        /// <summary>Backing field for <see cref="Ipv6LinkLocalAddress" /> property.</summary>
        private string _ipv6LinkLocalAddress;

        /// <summary>The IPv6 local address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public string Ipv6LinkLocalAddress { get => this._ipv6LinkLocalAddress; }

        /// <summary>Backing field for <see cref="Label" /> property.</summary>
        private string _label;

        /// <summary>Hardware label for the adapter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public string Label { get => this._label; }

        /// <summary>Backing field for <see cref="LinkSpeed" /> property.</summary>
        private long? _linkSpeed;

        /// <summary>Link speed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public long? LinkSpeed { get => this._linkSpeed; }

        /// <summary>Backing field for <see cref="MacAddress" /> property.</summary>
        private string _macAddress;

        /// <summary>MAC address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public string MacAddress { get => this._macAddress; }

        /// <summary>Internal Acessors for AdapterId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INetworkAdapterInternal.AdapterId { get => this._adapterId; set { {_adapterId = value;} } }

        /// <summary>Internal Acessors for AdapterPosition</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INetworkAdapterPosition Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INetworkAdapterInternal.AdapterPosition { get => (this._adapterPosition = this._adapterPosition ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.NetworkAdapterPosition()); set { {_adapterPosition = value;} } }

        /// <summary>Internal Acessors for AdapterPositionNetworkGroup</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.NetworkGroup? Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INetworkAdapterInternal.AdapterPositionNetworkGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INetworkAdapterPositionInternal)AdapterPosition).NetworkGroup; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INetworkAdapterPositionInternal)AdapterPosition).NetworkGroup = value; }

        /// <summary>Internal Acessors for AdapterPositionPort</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INetworkAdapterInternal.AdapterPositionPort { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INetworkAdapterPositionInternal)AdapterPosition).Port; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INetworkAdapterPositionInternal)AdapterPosition).Port = value; }

        /// <summary>Internal Acessors for DnsServer</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INetworkAdapterInternal.DnsServer { get => this._dnsServer; set { {_dnsServer = value;} } }

        /// <summary>Internal Acessors for Index</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INetworkAdapterInternal.Index { get => this._index; set { {_index = value;} } }

        /// <summary>Internal Acessors for Ipv4Configuration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIpv4Config Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INetworkAdapterInternal.Ipv4Configuration { get => (this._ipv4Configuration = this._ipv4Configuration ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.Ipv4Config()); set { {_ipv4Configuration = value;} } }

        /// <summary>Internal Acessors for Ipv4ConfigurationGateway</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INetworkAdapterInternal.Ipv4ConfigurationGateway { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIpv4ConfigInternal)Ipv4Configuration).Gateway; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIpv4ConfigInternal)Ipv4Configuration).Gateway = value; }

        /// <summary>Internal Acessors for Ipv4ConfigurationIPAddress</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INetworkAdapterInternal.Ipv4ConfigurationIPAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIpv4ConfigInternal)Ipv4Configuration).IPAddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIpv4ConfigInternal)Ipv4Configuration).IPAddress = value; }

        /// <summary>Internal Acessors for Ipv4ConfigurationSubnet</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INetworkAdapterInternal.Ipv4ConfigurationSubnet { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIpv4ConfigInternal)Ipv4Configuration).Subnet; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIpv4ConfigInternal)Ipv4Configuration).Subnet = value; }

        /// <summary>Internal Acessors for Ipv6Configuration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIpv6Config Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INetworkAdapterInternal.Ipv6Configuration { get => (this._ipv6Configuration = this._ipv6Configuration ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.Ipv6Config()); set { {_ipv6Configuration = value;} } }

        /// <summary>Internal Acessors for Ipv6ConfigurationGateway</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INetworkAdapterInternal.Ipv6ConfigurationGateway { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIpv6ConfigInternal)Ipv6Configuration).Gateway; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIpv6ConfigInternal)Ipv6Configuration).Gateway = value; }

        /// <summary>Internal Acessors for Ipv6ConfigurationIPAddress</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INetworkAdapterInternal.Ipv6ConfigurationIPAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIpv6ConfigInternal)Ipv6Configuration).IPAddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIpv6ConfigInternal)Ipv6Configuration).IPAddress = value; }

        /// <summary>Internal Acessors for Ipv6ConfigurationPrefixLength</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INetworkAdapterInternal.Ipv6ConfigurationPrefixLength { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIpv6ConfigInternal)Ipv6Configuration).PrefixLength; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIpv6ConfigInternal)Ipv6Configuration).PrefixLength = value; }

        /// <summary>Internal Acessors for Ipv6LinkLocalAddress</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INetworkAdapterInternal.Ipv6LinkLocalAddress { get => this._ipv6LinkLocalAddress; set { {_ipv6LinkLocalAddress = value;} } }

        /// <summary>Internal Acessors for Label</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INetworkAdapterInternal.Label { get => this._label; set { {_label = value;} } }

        /// <summary>Internal Acessors for LinkSpeed</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INetworkAdapterInternal.LinkSpeed { get => this._linkSpeed; set { {_linkSpeed = value;} } }

        /// <summary>Internal Acessors for MacAddress</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INetworkAdapterInternal.MacAddress { get => this._macAddress; set { {_macAddress = value;} } }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INetworkAdapterInternal.Name { get => this._name; set { {_name = value;} } }

        /// <summary>Internal Acessors for NodeId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INetworkAdapterInternal.NodeId { get => this._nodeId; set { {_nodeId = value;} } }

        /// <summary>Internal Acessors for Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.NetworkAdapterStatus? Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INetworkAdapterInternal.Status { get => this._status; set { {_status = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Network adapter name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public string Name { get => this._name; }

        /// <summary>Backing field for <see cref="NodeId" /> property.</summary>
        private string _nodeId;

        /// <summary>Node ID of the network adapter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public string NodeId { get => this._nodeId; }

        /// <summary>Backing field for <see cref="RdmaStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.NetworkAdapterRdmaStatus? _rdmaStatus;

        /// <summary>Value indicating whether this adapter is RDMA capable.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.NetworkAdapterRdmaStatus? RdmaStatus { get => this._rdmaStatus; set => this._rdmaStatus = value; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.NetworkAdapterStatus? _status;

        /// <summary>Value indicating whether this adapter is valid.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.NetworkAdapterStatus? Status { get => this._status; }

        /// <summary>Creates an new <see cref="NetworkAdapter" /> instance.</summary>
        public NetworkAdapter()
        {

        }
    }
    /// Represents the networkAdapter on a device.
    public partial interface INetworkAdapter :
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.IJsonSerializable
    {
        /// <summary>Instance ID of network adapter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Instance ID of network adapter.",
        SerializedName = @"adapterId",
        PossibleTypes = new [] { typeof(string) })]
        string AdapterId { get;  }
        /// <summary>The network group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The network group.",
        SerializedName = @"networkGroup",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.NetworkGroup) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.NetworkGroup? AdapterPositionNetworkGroup { get;  }
        /// <summary>The port.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The port.",
        SerializedName = @"port",
        PossibleTypes = new [] { typeof(int) })]
        int? AdapterPositionPort { get;  }
        /// <summary>Value indicating whether this adapter has DHCP enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Value indicating whether this adapter has DHCP enabled.",
        SerializedName = @"dhcpStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.NetworkAdapterDhcpStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.NetworkAdapterDhcpStatus? DhcpStatus { get; set; }
        /// <summary>The list of DNS Servers of the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of DNS Servers of the device.",
        SerializedName = @"dnsServers",
        PossibleTypes = new [] { typeof(string) })]
        string[] DnsServer { get;  }
        /// <summary>Logical index of the adapter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Logical index of the adapter.",
        SerializedName = @"index",
        PossibleTypes = new [] { typeof(int) })]
        int? Index { get;  }
        /// <summary>The IPv4 gateway of the network adapter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The IPv4 gateway of the network adapter.",
        SerializedName = @"gateway",
        PossibleTypes = new [] { typeof(string) })]
        string Ipv4ConfigurationGateway { get;  }
        /// <summary>The IPv4 address of the network adapter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The IPv4 address of the network adapter.",
        SerializedName = @"ipAddress",
        PossibleTypes = new [] { typeof(string) })]
        string Ipv4ConfigurationIPAddress { get;  }
        /// <summary>The IPv4 subnet of the network adapter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The IPv4 subnet of the network adapter.",
        SerializedName = @"subnet",
        PossibleTypes = new [] { typeof(string) })]
        string Ipv4ConfigurationSubnet { get;  }
        /// <summary>The IPv6 gateway of the network adapter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The IPv6 gateway of the network adapter.",
        SerializedName = @"gateway",
        PossibleTypes = new [] { typeof(string) })]
        string Ipv6ConfigurationGateway { get;  }
        /// <summary>The IPv6 address of the network adapter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The IPv6 address of the network adapter.",
        SerializedName = @"ipAddress",
        PossibleTypes = new [] { typeof(string) })]
        string Ipv6ConfigurationIPAddress { get;  }
        /// <summary>The IPv6 prefix of the network adapter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The IPv6 prefix of the network adapter.",
        SerializedName = @"prefixLength",
        PossibleTypes = new [] { typeof(int) })]
        int? Ipv6ConfigurationPrefixLength { get;  }
        /// <summary>The IPv6 local address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The IPv6 local address.",
        SerializedName = @"ipv6LinkLocalAddress",
        PossibleTypes = new [] { typeof(string) })]
        string Ipv6LinkLocalAddress { get;  }
        /// <summary>Hardware label for the adapter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Hardware label for the adapter.",
        SerializedName = @"label",
        PossibleTypes = new [] { typeof(string) })]
        string Label { get;  }
        /// <summary>Link speed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Link speed.",
        SerializedName = @"linkSpeed",
        PossibleTypes = new [] { typeof(long) })]
        long? LinkSpeed { get;  }
        /// <summary>MAC address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"MAC address.",
        SerializedName = @"macAddress",
        PossibleTypes = new [] { typeof(string) })]
        string MacAddress { get;  }
        /// <summary>Network adapter name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Network adapter name.",
        SerializedName = @"networkAdapterName",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get;  }
        /// <summary>Node ID of the network adapter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Node ID of the network adapter.",
        SerializedName = @"nodeId",
        PossibleTypes = new [] { typeof(string) })]
        string NodeId { get;  }
        /// <summary>Value indicating whether this adapter is RDMA capable.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Value indicating whether this adapter is RDMA capable.",
        SerializedName = @"rdmaStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.NetworkAdapterRdmaStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.NetworkAdapterRdmaStatus? RdmaStatus { get; set; }
        /// <summary>Value indicating whether this adapter is valid.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Value indicating whether this adapter is valid.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.NetworkAdapterStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.NetworkAdapterStatus? Status { get;  }

    }
    /// Represents the networkAdapter on a device.
    internal partial interface INetworkAdapterInternal

    {
        /// <summary>Instance ID of network adapter.</summary>
        string AdapterId { get; set; }
        /// <summary>Hardware position of network adapter.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INetworkAdapterPosition AdapterPosition { get; set; }
        /// <summary>The network group.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.NetworkGroup? AdapterPositionNetworkGroup { get; set; }
        /// <summary>The port.</summary>
        int? AdapterPositionPort { get; set; }
        /// <summary>Value indicating whether this adapter has DHCP enabled.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.NetworkAdapterDhcpStatus? DhcpStatus { get; set; }
        /// <summary>The list of DNS Servers of the device.</summary>
        string[] DnsServer { get; set; }
        /// <summary>Logical index of the adapter.</summary>
        int? Index { get; set; }
        /// <summary>The IPv4 configuration of the network adapter.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIpv4Config Ipv4Configuration { get; set; }
        /// <summary>The IPv4 gateway of the network adapter.</summary>
        string Ipv4ConfigurationGateway { get; set; }
        /// <summary>The IPv4 address of the network adapter.</summary>
        string Ipv4ConfigurationIPAddress { get; set; }
        /// <summary>The IPv4 subnet of the network adapter.</summary>
        string Ipv4ConfigurationSubnet { get; set; }
        /// <summary>The IPv6 configuration of the network adapter.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIpv6Config Ipv6Configuration { get; set; }
        /// <summary>The IPv6 gateway of the network adapter.</summary>
        string Ipv6ConfigurationGateway { get; set; }
        /// <summary>The IPv6 address of the network adapter.</summary>
        string Ipv6ConfigurationIPAddress { get; set; }
        /// <summary>The IPv6 prefix of the network adapter.</summary>
        int? Ipv6ConfigurationPrefixLength { get; set; }
        /// <summary>The IPv6 local address.</summary>
        string Ipv6LinkLocalAddress { get; set; }
        /// <summary>Hardware label for the adapter.</summary>
        string Label { get; set; }
        /// <summary>Link speed.</summary>
        long? LinkSpeed { get; set; }
        /// <summary>MAC address.</summary>
        string MacAddress { get; set; }
        /// <summary>Network adapter name.</summary>
        string Name { get; set; }
        /// <summary>Node ID of the network adapter.</summary>
        string NodeId { get; set; }
        /// <summary>Value indicating whether this adapter is RDMA capable.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.NetworkAdapterRdmaStatus? RdmaStatus { get; set; }
        /// <summary>Value indicating whether this adapter is valid.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.NetworkAdapterStatus? Status { get; set; }

    }
}