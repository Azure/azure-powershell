// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Extensions;

    /// <summary>Represent the secrets intended for encryption with asymmetric key pair.</summary>
    public partial class AsymmetricEncryptedSecret :
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IAsymmetricEncryptedSecret,
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IAsymmetricEncryptedSecretInternal
    {

        /// <summary>Backing field for <see cref="EncryptionAlgorithm" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.EncryptionAlgorithm _encryptionAlgorithm;

        /// <summary>The algorithm used to encrypt "Value".</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.EncryptionAlgorithm EncryptionAlgorithm { get => this._encryptionAlgorithm; set => this._encryptionAlgorithm = value; }

        /// <summary>Backing field for <see cref="EncryptionCertThumbprint" /> property.</summary>
        private string _encryptionCertThumbprint;

        /// <summary>
        /// Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be null.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public string EncryptionCertThumbprint { get => this._encryptionCertThumbprint; set => this._encryptionCertThumbprint = value; }

        /// <summary>Backing field for <see cref="Value" /> property.</summary>
        private string _value;

        /// <summary>The value of the secret.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public string Value { get => this._value; set => this._value = value; }

        /// <summary>Creates an new <see cref="AsymmetricEncryptedSecret" /> instance.</summary>
        public AsymmetricEncryptedSecret()
        {

        }
    }
    /// Represent the secrets intended for encryption with asymmetric key pair.
    public partial interface IAsymmetricEncryptedSecret :
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.IJsonSerializable
    {
        /// <summary>The algorithm used to encrypt "Value".</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The algorithm used to encrypt ""Value"".",
        SerializedName = @"encryptionAlgorithm",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.EncryptionAlgorithm) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.EncryptionAlgorithm EncryptionAlgorithm { get; set; }
        /// <summary>
        /// Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be null.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Thumbprint certificate used to encrypt \""Value\"". If the value is unencrypted, it will be null.",
        SerializedName = @"encryptionCertThumbprint",
        PossibleTypes = new [] { typeof(string) })]
        string EncryptionCertThumbprint { get; set; }
        /// <summary>The value of the secret.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The value of the secret.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(string) })]
        string Value { get; set; }

    }
    /// Represent the secrets intended for encryption with asymmetric key pair.
    internal partial interface IAsymmetricEncryptedSecretInternal

    {
        /// <summary>The algorithm used to encrypt "Value".</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.EncryptionAlgorithm EncryptionAlgorithm { get; set; }
        /// <summary>
        /// Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be null.
        /// </summary>
        string EncryptionCertThumbprint { get; set; }
        /// <summary>The value of the secret.</summary>
        string Value { get; set; }

    }
}