// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Extensions;

    /// <summary>Periodic timer event source.</summary>
    public partial class PeriodicTimerSourceInfo :
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IPeriodicTimerSourceInfo,
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IPeriodicTimerSourceInfoInternal
    {

        /// <summary>Backing field for <see cref="Schedule" /> property.</summary>
        private string _schedule;

        /// <summary>
        /// Periodic frequency at which timer event needs to be raised. Supports daily, hourly, minutes, and seconds.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public string Schedule { get => this._schedule; set => this._schedule = value; }

        /// <summary>Backing field for <see cref="StartTime" /> property.</summary>
        private global::System.DateTime _startTime;

        /// <summary>
        /// The time of the day that results in a valid trigger. Schedule is computed with reference to the time specified upto seconds.
        /// If timezone is not specified the time will considered to be in device timezone. The value will always be returned as UTC
        /// time.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public global::System.DateTime StartTime { get => this._startTime; set => this._startTime = value; }

        /// <summary>Backing field for <see cref="Topic" /> property.</summary>
        private string _topic;

        /// <summary>Topic where periodic events are published to IoT device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public string Topic { get => this._topic; set => this._topic = value; }

        /// <summary>Creates an new <see cref="PeriodicTimerSourceInfo" /> instance.</summary>
        public PeriodicTimerSourceInfo()
        {

        }
    }
    /// Periodic timer event source.
    public partial interface IPeriodicTimerSourceInfo :
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Periodic frequency at which timer event needs to be raised. Supports daily, hourly, minutes, and seconds.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Periodic frequency at which timer event needs to be raised. Supports daily, hourly, minutes, and seconds.",
        SerializedName = @"schedule",
        PossibleTypes = new [] { typeof(string) })]
        string Schedule { get; set; }
        /// <summary>
        /// The time of the day that results in a valid trigger. Schedule is computed with reference to the time specified upto seconds.
        /// If timezone is not specified the time will considered to be in device timezone. The value will always be returned as UTC
        /// time.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The time of the day that results in a valid trigger. Schedule is computed with reference to the time specified upto seconds. If timezone is not specified the time will considered to be in device timezone. The value will always be returned as UTC time.",
        SerializedName = @"startTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime StartTime { get; set; }
        /// <summary>Topic where periodic events are published to IoT device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Topic where periodic events are published to IoT device.",
        SerializedName = @"topic",
        PossibleTypes = new [] { typeof(string) })]
        string Topic { get; set; }

    }
    /// Periodic timer event source.
    internal partial interface IPeriodicTimerSourceInfoInternal

    {
        /// <summary>
        /// Periodic frequency at which timer event needs to be raised. Supports daily, hourly, minutes, and seconds.
        /// </summary>
        string Schedule { get; set; }
        /// <summary>
        /// The time of the day that results in a valid trigger. Schedule is computed with reference to the time specified upto seconds.
        /// If timezone is not specified the time will considered to be in device timezone. The value will always be returned as UTC
        /// time.
        /// </summary>
        global::System.DateTime StartTime { get; set; }
        /// <summary>Topic where periodic events are published to IoT device.</summary>
        string Topic { get; set; }

    }
}