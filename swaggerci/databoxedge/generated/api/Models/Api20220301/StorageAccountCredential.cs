// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Extensions;

    /// <summary>The storage account credential.</summary>
    public partial class StorageAccountCredential :
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IStorageAccountCredential,
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IStorageAccountCredentialInternal,
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IArmBaseModel"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IArmBaseModel __armBaseModel = new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.ArmBaseModel();

        /// <summary>The algorithm used to encrypt "Value".</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.EncryptionAlgorithm? AccountKeyEncryptionAlgorithm { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IStorageAccountCredentialPropertiesInternal)Property).AccountKeyEncryptionAlgorithm; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IStorageAccountCredentialPropertiesInternal)Property).AccountKeyEncryptionAlgorithm = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.EncryptionAlgorithm)""); }

        /// <summary>
        /// Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be null.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string AccountKeyEncryptionCertThumbprint { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IStorageAccountCredentialPropertiesInternal)Property).AccountKeyEncryptionCertThumbprint; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IStorageAccountCredentialPropertiesInternal)Property).AccountKeyEncryptionCertThumbprint = value ?? null; }

        /// <summary>The value of the secret.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string AccountKeyValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IStorageAccountCredentialPropertiesInternal)Property).AccountKeyValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IStorageAccountCredentialPropertiesInternal)Property).AccountKeyValue = value ?? null; }

        /// <summary>Type of storage accessed on the storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.AccountType AccountType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IStorageAccountCredentialPropertiesInternal)Property).AccountType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IStorageAccountCredentialPropertiesInternal)Property).AccountType = value ; }

        /// <summary>Alias for the storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string Alias { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IStorageAccountCredentialPropertiesInternal)Property).Alias; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IStorageAccountCredentialPropertiesInternal)Property).Alias = value ; }

        /// <summary>Blob end point for private clouds.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string BlobDomainName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IStorageAccountCredentialPropertiesInternal)Property).BlobDomainName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IStorageAccountCredentialPropertiesInternal)Property).BlobDomainName = value ?? null; }

        /// <summary>
        /// Connection string for the storage account. Use this string if username and account key are not specified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string ConnectionString { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IStorageAccountCredentialPropertiesInternal)Property).ConnectionString; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IStorageAccountCredentialPropertiesInternal)Property).ConnectionString = value ?? null; }

        /// <summary>The path ID that uniquely identifies the object.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IArmBaseModelInternal)__armBaseModel).Id; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IArmBaseModelInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IArmBaseModelInternal)__armBaseModel).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IArmBaseModelInternal)__armBaseModel).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IArmBaseModelInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IArmBaseModelInternal)__armBaseModel).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IArmBaseModelInternal)__armBaseModel).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IArmBaseModelInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IArmBaseModelInternal)__armBaseModel).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IArmBaseModelInternal)__armBaseModel).Type = value; }

        /// <summary>Internal Acessors for AccountKey</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IAsymmetricEncryptedSecret Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IStorageAccountCredentialInternal.AccountKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IStorageAccountCredentialPropertiesInternal)Property).AccountKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IStorageAccountCredentialPropertiesInternal)Property).AccountKey = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IStorageAccountCredentialProperties Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IStorageAccountCredentialInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.StorageAccountCredentialProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20.ISystemData Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IStorageAccountCredentialInternal.SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20.SystemData()); set { {_systemData = value;} } }

        /// <summary>The object name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IArmBaseModelInternal)__armBaseModel).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IStorageAccountCredentialProperties _property;

        /// <summary>The storage account credential properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IStorageAccountCredentialProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.StorageAccountCredentialProperties()); set => this._property = value; }

        /// <summary>Signifies whether SSL needs to be enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.SslStatus SslStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IStorageAccountCredentialPropertiesInternal)Property).SslStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IStorageAccountCredentialPropertiesInternal)Property).SslStatus = value ; }

        /// <summary>Id of the storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string StorageAccountId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IStorageAccountCredentialPropertiesInternal)Property).StorageAccountId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IStorageAccountCredentialPropertiesInternal)Property).StorageAccountId = value ?? null; }

        /// <summary>Backing field for <see cref="SystemData" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20.ISystemData _systemData;

        /// <summary>
        /// Metadata pertaining to creation and last modification of StorageAccountCredential
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20.ISystemData SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20.SystemData()); }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20.ISystemDataInternal)SystemData).CreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20.ISystemDataInternal)SystemData).CreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20.ISystemDataInternal)SystemData).CreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20.ISystemDataInternal)SystemData).CreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20.ISystemDataInternal)SystemData).CreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20.ISystemDataInternal)SystemData).CreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20.ISystemDataInternal)SystemData).LastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20.ISystemDataInternal)SystemData).LastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20.ISystemDataInternal)SystemData).LastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20.ISystemDataInternal)SystemData).LastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20.ISystemDataInternal)SystemData).LastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20.ISystemDataInternal)SystemData).LastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.CreatedByType)""); }

        /// <summary>The hierarchical type of the object.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IArmBaseModelInternal)__armBaseModel).Type; }

        /// <summary>Username for the storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string UserName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IStorageAccountCredentialPropertiesInternal)Property).UserName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IStorageAccountCredentialPropertiesInternal)Property).UserName = value ?? null; }

        /// <summary>Creates an new <see cref="StorageAccountCredential" /> instance.</summary>
        public StorageAccountCredential()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__armBaseModel), __armBaseModel);
            await eventListener.AssertObjectIsValid(nameof(__armBaseModel), __armBaseModel);
        }
    }
    /// The storage account credential.
    public partial interface IStorageAccountCredential :
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IArmBaseModel
    {
        /// <summary>The algorithm used to encrypt "Value".</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The algorithm used to encrypt ""Value"".",
        SerializedName = @"encryptionAlgorithm",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.EncryptionAlgorithm) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.EncryptionAlgorithm? AccountKeyEncryptionAlgorithm { get; set; }
        /// <summary>
        /// Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be null.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Thumbprint certificate used to encrypt \""Value\"". If the value is unencrypted, it will be null.",
        SerializedName = @"encryptionCertThumbprint",
        PossibleTypes = new [] { typeof(string) })]
        string AccountKeyEncryptionCertThumbprint { get; set; }
        /// <summary>The value of the secret.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The value of the secret.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(string) })]
        string AccountKeyValue { get; set; }
        /// <summary>Type of storage accessed on the storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Type of storage accessed on the storage account.",
        SerializedName = @"accountType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.AccountType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.AccountType AccountType { get; set; }
        /// <summary>Alias for the storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Alias for the storage account.",
        SerializedName = @"alias",
        PossibleTypes = new [] { typeof(string) })]
        string Alias { get; set; }
        /// <summary>Blob end point for private clouds.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Blob end point for private clouds.",
        SerializedName = @"blobDomainName",
        PossibleTypes = new [] { typeof(string) })]
        string BlobDomainName { get; set; }
        /// <summary>
        /// Connection string for the storage account. Use this string if username and account key are not specified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Connection string for the storage account. Use this string if username and account key are not specified.",
        SerializedName = @"connectionString",
        PossibleTypes = new [] { typeof(string) })]
        string ConnectionString { get; set; }
        /// <summary>Signifies whether SSL needs to be enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Signifies whether SSL needs to be enabled or not.",
        SerializedName = @"sslStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.SslStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.SslStatus SslStatus { get; set; }
        /// <summary>Id of the storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Id of the storage account.",
        SerializedName = @"storageAccountId",
        PossibleTypes = new [] { typeof(string) })]
        string StorageAccountId { get; set; }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp of resource creation (UTC).",
        SerializedName = @"createdAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity that created the resource.",
        SerializedName = @"createdBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity that created the resource.",
        SerializedName = @"createdByType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.CreatedByType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.CreatedByType? SystemDataCreatedByType { get; set; }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp of resource last modification (UTC)",
        SerializedName = @"lastModifiedAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity that last modified the resource.",
        SerializedName = @"lastModifiedBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity that last modified the resource.",
        SerializedName = @"lastModifiedByType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.CreatedByType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.CreatedByType? SystemDataLastModifiedByType { get; set; }
        /// <summary>Username for the storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Username for the storage account.",
        SerializedName = @"userName",
        PossibleTypes = new [] { typeof(string) })]
        string UserName { get; set; }

    }
    /// The storage account credential.
    internal partial interface IStorageAccountCredentialInternal :
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IArmBaseModelInternal
    {
        /// <summary>Encrypted storage key.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IAsymmetricEncryptedSecret AccountKey { get; set; }
        /// <summary>The algorithm used to encrypt "Value".</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.EncryptionAlgorithm? AccountKeyEncryptionAlgorithm { get; set; }
        /// <summary>
        /// Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be null.
        /// </summary>
        string AccountKeyEncryptionCertThumbprint { get; set; }
        /// <summary>The value of the secret.</summary>
        string AccountKeyValue { get; set; }
        /// <summary>Type of storage accessed on the storage account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.AccountType AccountType { get; set; }
        /// <summary>Alias for the storage account.</summary>
        string Alias { get; set; }
        /// <summary>Blob end point for private clouds.</summary>
        string BlobDomainName { get; set; }
        /// <summary>
        /// Connection string for the storage account. Use this string if username and account key are not specified.
        /// </summary>
        string ConnectionString { get; set; }
        /// <summary>The storage account credential properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IStorageAccountCredentialProperties Property { get; set; }
        /// <summary>Signifies whether SSL needs to be enabled or not.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.SslStatus SslStatus { get; set; }
        /// <summary>Id of the storage account.</summary>
        string StorageAccountId { get; set; }
        /// <summary>
        /// Metadata pertaining to creation and last modification of StorageAccountCredential
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20.ISystemData SystemData { get; set; }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        global::System.DateTime? SystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        string SystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.CreatedByType? SystemDataCreatedByType { get; set; }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        global::System.DateTime? SystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        string SystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.CreatedByType? SystemDataLastModifiedByType { get; set; }
        /// <summary>Username for the storage account.</summary>
        string UserName { get; set; }

    }
}