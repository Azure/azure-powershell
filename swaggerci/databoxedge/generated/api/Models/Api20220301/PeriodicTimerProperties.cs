// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Extensions;

    /// <summary>Periodic timer trigger properties.</summary>
    public partial class PeriodicTimerProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IPeriodicTimerProperties,
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IPeriodicTimerPropertiesInternal
    {

        /// <summary>Backing field for <see cref="CustomContextTag" /> property.</summary>
        private string _customContextTag;

        /// <summary>
        /// A custom context tag typically used to correlate the trigger against its usage. For example, if a periodic timer trigger
        /// is intended for certain specific IoT modules in the device, the tag can be the name or the image URL of the module.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public string CustomContextTag { get => this._customContextTag; set => this._customContextTag = value; }

        /// <summary>Internal Acessors for SinkInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleSinkInfo Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IPeriodicTimerPropertiesInternal.SinkInfo { get => (this._sinkInfo = this._sinkInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.RoleSinkInfo()); set { {_sinkInfo = value;} } }

        /// <summary>Internal Acessors for SourceInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IPeriodicTimerSourceInfo Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IPeriodicTimerPropertiesInternal.SourceInfo { get => (this._sourceInfo = this._sourceInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.PeriodicTimerSourceInfo()); set { {_sourceInfo = value;} } }

        /// <summary>Backing field for <see cref="SinkInfo" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleSinkInfo _sinkInfo;

        /// <summary>Role Sink information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleSinkInfo SinkInfo { get => (this._sinkInfo = this._sinkInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.RoleSinkInfo()); set => this._sinkInfo = value; }

        /// <summary>Compute role ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string SinkInfoRoleId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleSinkInfoInternal)SinkInfo).RoleId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleSinkInfoInternal)SinkInfo).RoleId = value ; }

        /// <summary>Backing field for <see cref="SourceInfo" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IPeriodicTimerSourceInfo _sourceInfo;

        /// <summary>Periodic timer details.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IPeriodicTimerSourceInfo SourceInfo { get => (this._sourceInfo = this._sourceInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.PeriodicTimerSourceInfo()); set => this._sourceInfo = value; }

        /// <summary>
        /// Periodic frequency at which timer event needs to be raised. Supports daily, hourly, minutes, and seconds.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string SourceInfoSchedule { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IPeriodicTimerSourceInfoInternal)SourceInfo).Schedule; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IPeriodicTimerSourceInfoInternal)SourceInfo).Schedule = value ; }

        /// <summary>
        /// The time of the day that results in a valid trigger. Schedule is computed with reference to the time specified upto seconds.
        /// If timezone is not specified the time will considered to be in device timezone. The value will always be returned as UTC
        /// time.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public global::System.DateTime SourceInfoStartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IPeriodicTimerSourceInfoInternal)SourceInfo).StartTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IPeriodicTimerSourceInfoInternal)SourceInfo).StartTime = value ; }

        /// <summary>Topic where periodic events are published to IoT device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string SourceInfoTopic { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IPeriodicTimerSourceInfoInternal)SourceInfo).Topic; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IPeriodicTimerSourceInfoInternal)SourceInfo).Topic = value ?? null; }

        /// <summary>Creates an new <see cref="PeriodicTimerProperties" /> instance.</summary>
        public PeriodicTimerProperties()
        {

        }
    }
    /// Periodic timer trigger properties.
    public partial interface IPeriodicTimerProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.IJsonSerializable
    {
        /// <summary>
        /// A custom context tag typically used to correlate the trigger against its usage. For example, if a periodic timer trigger
        /// is intended for certain specific IoT modules in the device, the tag can be the name or the image URL of the module.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A custom context tag typically used to correlate the trigger against its usage. For example, if a periodic timer trigger is intended for certain specific IoT modules in the device, the tag can be the name or the image URL of the module.",
        SerializedName = @"customContextTag",
        PossibleTypes = new [] { typeof(string) })]
        string CustomContextTag { get; set; }
        /// <summary>Compute role ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Compute role ID.",
        SerializedName = @"roleId",
        PossibleTypes = new [] { typeof(string) })]
        string SinkInfoRoleId { get; set; }
        /// <summary>
        /// Periodic frequency at which timer event needs to be raised. Supports daily, hourly, minutes, and seconds.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Periodic frequency at which timer event needs to be raised. Supports daily, hourly, minutes, and seconds.",
        SerializedName = @"schedule",
        PossibleTypes = new [] { typeof(string) })]
        string SourceInfoSchedule { get; set; }
        /// <summary>
        /// The time of the day that results in a valid trigger. Schedule is computed with reference to the time specified upto seconds.
        /// If timezone is not specified the time will considered to be in device timezone. The value will always be returned as UTC
        /// time.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The time of the day that results in a valid trigger. Schedule is computed with reference to the time specified upto seconds. If timezone is not specified the time will considered to be in device timezone. The value will always be returned as UTC time.",
        SerializedName = @"startTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime SourceInfoStartTime { get; set; }
        /// <summary>Topic where periodic events are published to IoT device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Topic where periodic events are published to IoT device.",
        SerializedName = @"topic",
        PossibleTypes = new [] { typeof(string) })]
        string SourceInfoTopic { get; set; }

    }
    /// Periodic timer trigger properties.
    internal partial interface IPeriodicTimerPropertiesInternal

    {
        /// <summary>
        /// A custom context tag typically used to correlate the trigger against its usage. For example, if a periodic timer trigger
        /// is intended for certain specific IoT modules in the device, the tag can be the name or the image URL of the module.
        /// </summary>
        string CustomContextTag { get; set; }
        /// <summary>Role Sink information.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleSinkInfo SinkInfo { get; set; }
        /// <summary>Compute role ID.</summary>
        string SinkInfoRoleId { get; set; }
        /// <summary>Periodic timer details.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IPeriodicTimerSourceInfo SourceInfo { get; set; }
        /// <summary>
        /// Periodic frequency at which timer event needs to be raised. Supports daily, hourly, minutes, and seconds.
        /// </summary>
        string SourceInfoSchedule { get; set; }
        /// <summary>
        /// The time of the day that results in a valid trigger. Schedule is computed with reference to the time specified upto seconds.
        /// If timezone is not specified the time will considered to be in device timezone. The value will always be returned as UTC
        /// time.
        /// </summary>
        global::System.DateTime SourceInfoStartTime { get; set; }
        /// <summary>Topic where periodic events are published to IoT device.</summary>
        string SourceInfoTopic { get; set; }

    }
}