// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Extensions;

    /// <summary>Details about the download progress of update.</summary>
    public partial class UpdateDownloadProgress :
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateDownloadProgress,
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateDownloadProgressInternal
    {

        /// <summary>Backing field for <see cref="DownloadPhase" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.DownloadPhase? _downloadPhase;

        /// <summary>The download phase.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.DownloadPhase? DownloadPhase { get => this._downloadPhase; }

        /// <summary>Internal Acessors for DownloadPhase</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.DownloadPhase? Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateDownloadProgressInternal.DownloadPhase { get => this._downloadPhase; set { {_downloadPhase = value;} } }

        /// <summary>Internal Acessors for NumberOfUpdatesDownloaded</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateDownloadProgressInternal.NumberOfUpdatesDownloaded { get => this._numberOfUpdatesDownloaded; set { {_numberOfUpdatesDownloaded = value;} } }

        /// <summary>Internal Acessors for NumberOfUpdatesToDownload</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateDownloadProgressInternal.NumberOfUpdatesToDownload { get => this._numberOfUpdatesToDownload; set { {_numberOfUpdatesToDownload = value;} } }

        /// <summary>Internal Acessors for PercentComplete</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateDownloadProgressInternal.PercentComplete { get => this._percentComplete; set { {_percentComplete = value;} } }

        /// <summary>Internal Acessors for TotalBytesDownloaded</summary>
        double? Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateDownloadProgressInternal.TotalBytesDownloaded { get => this._totalBytesDownloaded; set { {_totalBytesDownloaded = value;} } }

        /// <summary>Internal Acessors for TotalBytesToDownload</summary>
        double? Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateDownloadProgressInternal.TotalBytesToDownload { get => this._totalBytesToDownload; set { {_totalBytesToDownload = value;} } }

        /// <summary>Backing field for <see cref="NumberOfUpdatesDownloaded" /> property.</summary>
        private int? _numberOfUpdatesDownloaded;

        /// <summary>Number of updates downloaded.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public int? NumberOfUpdatesDownloaded { get => this._numberOfUpdatesDownloaded; }

        /// <summary>Backing field for <see cref="NumberOfUpdatesToDownload" /> property.</summary>
        private int? _numberOfUpdatesToDownload;

        /// <summary>Number of updates to download.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public int? NumberOfUpdatesToDownload { get => this._numberOfUpdatesToDownload; }

        /// <summary>Backing field for <see cref="PercentComplete" /> property.</summary>
        private int? _percentComplete;

        /// <summary>Percentage of completion.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public int? PercentComplete { get => this._percentComplete; }

        /// <summary>Backing field for <see cref="TotalBytesDownloaded" /> property.</summary>
        private double? _totalBytesDownloaded;

        /// <summary>Total bytes downloaded.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public double? TotalBytesDownloaded { get => this._totalBytesDownloaded; }

        /// <summary>Backing field for <see cref="TotalBytesToDownload" /> property.</summary>
        private double? _totalBytesToDownload;

        /// <summary>Total bytes to download.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public double? TotalBytesToDownload { get => this._totalBytesToDownload; }

        /// <summary>Creates an new <see cref="UpdateDownloadProgress" /> instance.</summary>
        public UpdateDownloadProgress()
        {

        }
    }
    /// Details about the download progress of update.
    public partial interface IUpdateDownloadProgress :
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.IJsonSerializable
    {
        /// <summary>The download phase.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The download phase.",
        SerializedName = @"downloadPhase",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.DownloadPhase) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.DownloadPhase? DownloadPhase { get;  }
        /// <summary>Number of updates downloaded.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Number of updates downloaded.",
        SerializedName = @"numberOfUpdatesDownloaded",
        PossibleTypes = new [] { typeof(int) })]
        int? NumberOfUpdatesDownloaded { get;  }
        /// <summary>Number of updates to download.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Number of updates to download.",
        SerializedName = @"numberOfUpdatesToDownload",
        PossibleTypes = new [] { typeof(int) })]
        int? NumberOfUpdatesToDownload { get;  }
        /// <summary>Percentage of completion.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Percentage of completion.",
        SerializedName = @"percentComplete",
        PossibleTypes = new [] { typeof(int) })]
        int? PercentComplete { get;  }
        /// <summary>Total bytes downloaded.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Total bytes downloaded.",
        SerializedName = @"totalBytesDownloaded",
        PossibleTypes = new [] { typeof(double) })]
        double? TotalBytesDownloaded { get;  }
        /// <summary>Total bytes to download.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Total bytes to download.",
        SerializedName = @"totalBytesToDownload",
        PossibleTypes = new [] { typeof(double) })]
        double? TotalBytesToDownload { get;  }

    }
    /// Details about the download progress of update.
    internal partial interface IUpdateDownloadProgressInternal

    {
        /// <summary>The download phase.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.DownloadPhase? DownloadPhase { get; set; }
        /// <summary>Number of updates downloaded.</summary>
        int? NumberOfUpdatesDownloaded { get; set; }
        /// <summary>Number of updates to download.</summary>
        int? NumberOfUpdatesToDownload { get; set; }
        /// <summary>Percentage of completion.</summary>
        int? PercentComplete { get; set; }
        /// <summary>Total bytes downloaded.</summary>
        double? TotalBytesDownloaded { get; set; }
        /// <summary>Total bytes to download.</summary>
        double? TotalBytesToDownload { get; set; }

    }
}