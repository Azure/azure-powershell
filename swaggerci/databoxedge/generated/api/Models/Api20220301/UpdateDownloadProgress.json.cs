// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Extensions;

    /// <summary>Details about the download progress of update.</summary>
    public partial class UpdateDownloadProgress
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json erialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateDownloadProgress.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateDownloadProgress.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateDownloadProgress FromJson(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonObject json ? new UpdateDownloadProgress(json) : null;
        }

        /// <summary>
        /// Serializes this instance of <see cref="UpdateDownloadProgress" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="UpdateDownloadProgress" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._downloadPhase)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonString(this._downloadPhase.ToString()) : null, "downloadPhase" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._percentComplete ? (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNumber((int)this._percentComplete) : null, "percentComplete" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._totalBytesToDownload ? (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNumber((double)this._totalBytesToDownload) : null, "totalBytesToDownload" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._totalBytesDownloaded ? (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNumber((double)this._totalBytesDownloaded) : null, "totalBytesDownloaded" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._numberOfUpdatesToDownload ? (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNumber((int)this._numberOfUpdatesToDownload) : null, "numberOfUpdatesToDownload" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._numberOfUpdatesDownloaded ? (Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNumber((int)this._numberOfUpdatesDownloaded) : null, "numberOfUpdatesDownloaded" ,container.Add );
            }
            AfterToJson(ref container);
            return container;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonObject into a new instance of <see cref="UpdateDownloadProgress" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal UpdateDownloadProgress(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_downloadPhase = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonString>("downloadPhase"), out var __jsonDownloadPhase) ? (string)__jsonDownloadPhase : (string)DownloadPhase;}
            {_percentComplete = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNumber>("percentComplete"), out var __jsonPercentComplete) ? (int?)__jsonPercentComplete : PercentComplete;}
            {_totalBytesToDownload = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNumber>("totalBytesToDownload"), out var __jsonTotalBytesToDownload) ? (double?)__jsonTotalBytesToDownload : TotalBytesToDownload;}
            {_totalBytesDownloaded = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNumber>("totalBytesDownloaded"), out var __jsonTotalBytesDownloaded) ? (double?)__jsonTotalBytesDownloaded : TotalBytesDownloaded;}
            {_numberOfUpdatesToDownload = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNumber>("numberOfUpdatesToDownload"), out var __jsonNumberOfUpdatesToDownload) ? (int?)__jsonNumberOfUpdatesToDownload : NumberOfUpdatesToDownload;}
            {_numberOfUpdatesDownloaded = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Json.JsonNumber>("numberOfUpdatesDownloaded"), out var __jsonNumberOfUpdatesDownloaded) ? (int?)__jsonNumberOfUpdatesDownloaded : NumberOfUpdatesDownloaded;}
            AfterFromJson(json);
        }
    }
}