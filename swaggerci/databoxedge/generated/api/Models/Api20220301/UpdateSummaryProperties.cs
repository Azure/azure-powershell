// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Extensions;

    /// <summary>The device update information summary.</summary>
    public partial class UpdateSummaryProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateSummaryProperties,
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateSummaryPropertiesInternal
    {

        /// <summary>Backing field for <see cref="DeviceLastScannedDateTime" /> property.</summary>
        private global::System.DateTime? _deviceLastScannedDateTime;

        /// <summary>The last time when a scan was done on the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public global::System.DateTime? DeviceLastScannedDateTime { get => this._deviceLastScannedDateTime; set => this._deviceLastScannedDateTime = value; }

        /// <summary>Backing field for <see cref="DeviceVersionNumber" /> property.</summary>
        private string _deviceVersionNumber;

        /// <summary>The current version of the device in format: 1.2.17312.13.",</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public string DeviceVersionNumber { get => this._deviceVersionNumber; set => this._deviceVersionNumber = value; }

        /// <summary>Backing field for <see cref="FriendlyDeviceVersionName" /> property.</summary>
        private string _friendlyDeviceVersionName;

        /// <summary>The current version of the device in text format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public string FriendlyDeviceVersionName { get => this._friendlyDeviceVersionName; set => this._friendlyDeviceVersionName = value; }

        /// <summary>Backing field for <see cref="InProgressDownloadJobId" /> property.</summary>
        private string _inProgressDownloadJobId;

        /// <summary>The job ID of the download job in progress.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public string InProgressDownloadJobId { get => this._inProgressDownloadJobId; }

        /// <summary>Backing field for <see cref="InProgressDownloadJobStartedDateTime" /> property.</summary>
        private global::System.DateTime? _inProgressDownloadJobStartedDateTime;

        /// <summary>The time when the currently running download (if any) started.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public global::System.DateTime? InProgressDownloadJobStartedDateTime { get => this._inProgressDownloadJobStartedDateTime; }

        /// <summary>Backing field for <see cref="InProgressInstallJobId" /> property.</summary>
        private string _inProgressInstallJobId;

        /// <summary>The job ID of the install job in progress.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public string InProgressInstallJobId { get => this._inProgressInstallJobId; }

        /// <summary>Backing field for <see cref="InProgressInstallJobStartedDateTime" /> property.</summary>
        private global::System.DateTime? _inProgressInstallJobStartedDateTime;

        /// <summary>The time when the currently running install (if any) started.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public global::System.DateTime? InProgressInstallJobStartedDateTime { get => this._inProgressInstallJobStartedDateTime; }

        /// <summary>Backing field for <see cref="LastCompletedDownloadJobDateTime" /> property.</summary>
        private global::System.DateTime? _lastCompletedDownloadJobDateTime;

        /// <summary>
        /// The time when the last Download job was completed (success/cancelled/failed) on the appliance.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public global::System.DateTime? LastCompletedDownloadJobDateTime { get => this._lastCompletedDownloadJobDateTime; }

        /// <summary>Backing field for <see cref="LastCompletedDownloadJobId" /> property.</summary>
        private string _lastCompletedDownloadJobId;

        /// <summary>JobId of the last ran download job.(Can be success/cancelled/failed)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public string LastCompletedDownloadJobId { get => this._lastCompletedDownloadJobId; }

        /// <summary>Backing field for <see cref="LastCompletedInstallJobDateTime" /> property.</summary>
        private global::System.DateTime? _lastCompletedInstallJobDateTime;

        /// <summary>
        /// The time when the last Install job was completed (success/cancelled/failed) on the appliance.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public global::System.DateTime? LastCompletedInstallJobDateTime { get => this._lastCompletedInstallJobDateTime; }

        /// <summary>Backing field for <see cref="LastCompletedInstallJobId" /> property.</summary>
        private string _lastCompletedInstallJobId;

        /// <summary>JobId of the last ran install job.(Can be success/cancelled/failed)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public string LastCompletedInstallJobId { get => this._lastCompletedInstallJobId; }

        /// <summary>Backing field for <see cref="LastCompletedScanJobDateTime" /> property.</summary>
        private global::System.DateTime? _lastCompletedScanJobDateTime;

        /// <summary>
        /// The time when the last scan job was completed (success/cancelled/failed) on the appliance.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public global::System.DateTime? LastCompletedScanJobDateTime { get => this._lastCompletedScanJobDateTime; set => this._lastCompletedScanJobDateTime = value; }

        /// <summary>Backing field for <see cref="LastDownloadJobStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.JobStatus? _lastDownloadJobStatus;

        /// <summary>JobStatus of the last ran download job.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.JobStatus? LastDownloadJobStatus { get => this._lastDownloadJobStatus; }

        /// <summary>Backing field for <see cref="LastInstallJobStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.JobStatus? _lastInstallJobStatus;

        /// <summary>JobStatus of the last ran install job.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.JobStatus? LastInstallJobStatus { get => this._lastInstallJobStatus; }

        /// <summary>Backing field for <see cref="LastSuccessfulInstallJobDateTime" /> property.</summary>
        private global::System.DateTime? _lastSuccessfulInstallJobDateTime;

        /// <summary>The time when the Last Install job was completed successfully on the appliance</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public global::System.DateTime? LastSuccessfulInstallJobDateTime { get => this._lastSuccessfulInstallJobDateTime; set => this._lastSuccessfulInstallJobDateTime = value; }

        /// <summary>Backing field for <see cref="LastSuccessfulScanJobTime" /> property.</summary>
        private global::System.DateTime? _lastSuccessfulScanJobTime;

        /// <summary>Time when the last scan job is successfully completed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public global::System.DateTime? LastSuccessfulScanJobTime { get => this._lastSuccessfulScanJobTime; set => this._lastSuccessfulScanJobTime = value; }

        /// <summary>Internal Acessors for InProgressDownloadJobId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateSummaryPropertiesInternal.InProgressDownloadJobId { get => this._inProgressDownloadJobId; set { {_inProgressDownloadJobId = value;} } }

        /// <summary>Internal Acessors for InProgressDownloadJobStartedDateTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateSummaryPropertiesInternal.InProgressDownloadJobStartedDateTime { get => this._inProgressDownloadJobStartedDateTime; set { {_inProgressDownloadJobStartedDateTime = value;} } }

        /// <summary>Internal Acessors for InProgressInstallJobId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateSummaryPropertiesInternal.InProgressInstallJobId { get => this._inProgressInstallJobId; set { {_inProgressInstallJobId = value;} } }

        /// <summary>Internal Acessors for InProgressInstallJobStartedDateTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateSummaryPropertiesInternal.InProgressInstallJobStartedDateTime { get => this._inProgressInstallJobStartedDateTime; set { {_inProgressInstallJobStartedDateTime = value;} } }

        /// <summary>Internal Acessors for LastCompletedDownloadJobDateTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateSummaryPropertiesInternal.LastCompletedDownloadJobDateTime { get => this._lastCompletedDownloadJobDateTime; set { {_lastCompletedDownloadJobDateTime = value;} } }

        /// <summary>Internal Acessors for LastCompletedDownloadJobId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateSummaryPropertiesInternal.LastCompletedDownloadJobId { get => this._lastCompletedDownloadJobId; set { {_lastCompletedDownloadJobId = value;} } }

        /// <summary>Internal Acessors for LastCompletedInstallJobDateTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateSummaryPropertiesInternal.LastCompletedInstallJobDateTime { get => this._lastCompletedInstallJobDateTime; set { {_lastCompletedInstallJobDateTime = value;} } }

        /// <summary>Internal Acessors for LastCompletedInstallJobId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateSummaryPropertiesInternal.LastCompletedInstallJobId { get => this._lastCompletedInstallJobId; set { {_lastCompletedInstallJobId = value;} } }

        /// <summary>Internal Acessors for LastDownloadJobStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.JobStatus? Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateSummaryPropertiesInternal.LastDownloadJobStatus { get => this._lastDownloadJobStatus; set { {_lastDownloadJobStatus = value;} } }

        /// <summary>Internal Acessors for LastInstallJobStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.JobStatus? Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateSummaryPropertiesInternal.LastInstallJobStatus { get => this._lastInstallJobStatus; set { {_lastInstallJobStatus = value;} } }

        /// <summary>Internal Acessors for OngoingUpdateOperation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.UpdateOperation? Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateSummaryPropertiesInternal.OngoingUpdateOperation { get => this._ongoingUpdateOperation; set { {_ongoingUpdateOperation = value;} } }

        /// <summary>Internal Acessors for RebootBehavior</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.InstallRebootBehavior? Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateSummaryPropertiesInternal.RebootBehavior { get => this._rebootBehavior; set { {_rebootBehavior = value;} } }

        /// <summary>Internal Acessors for TotalNumberOfUpdatesAvailable</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateSummaryPropertiesInternal.TotalNumberOfUpdatesAvailable { get => this._totalNumberOfUpdatesAvailable; set { {_totalNumberOfUpdatesAvailable = value;} } }

        /// <summary>Internal Acessors for TotalNumberOfUpdatesPendingDownload</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateSummaryPropertiesInternal.TotalNumberOfUpdatesPendingDownload { get => this._totalNumberOfUpdatesPendingDownload; set { {_totalNumberOfUpdatesPendingDownload = value;} } }

        /// <summary>Internal Acessors for TotalNumberOfUpdatesPendingInstall</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateSummaryPropertiesInternal.TotalNumberOfUpdatesPendingInstall { get => this._totalNumberOfUpdatesPendingInstall; set { {_totalNumberOfUpdatesPendingInstall = value;} } }

        /// <summary>Internal Acessors for TotalTimeInMinute</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateSummaryPropertiesInternal.TotalTimeInMinute { get => this._totalTimeInMinute; set { {_totalTimeInMinute = value;} } }

        /// <summary>Internal Acessors for TotalUpdateSizeInByte</summary>
        double? Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateSummaryPropertiesInternal.TotalUpdateSizeInByte { get => this._totalUpdateSizeInByte; set { {_totalUpdateSizeInByte = value;} } }

        /// <summary>Internal Acessors for Update</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateDetails[] Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateSummaryPropertiesInternal.Update { get => this._update; set { {_update = value;} } }

        /// <summary>Internal Acessors for UpdateTitle</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateSummaryPropertiesInternal.UpdateTitle { get => this._updateTitle; set { {_updateTitle = value;} } }

        /// <summary>Backing field for <see cref="OngoingUpdateOperation" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.UpdateOperation? _ongoingUpdateOperation;

        /// <summary>The current update operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.UpdateOperation? OngoingUpdateOperation { get => this._ongoingUpdateOperation; }

        /// <summary>Backing field for <see cref="RebootBehavior" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.InstallRebootBehavior? _rebootBehavior;

        /// <summary>
        /// Indicates if updates are available and at least one of the updates needs a reboot.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.InstallRebootBehavior? RebootBehavior { get => this._rebootBehavior; }

        /// <summary>Backing field for <see cref="TotalNumberOfUpdatesAvailable" /> property.</summary>
        private int? _totalNumberOfUpdatesAvailable;

        /// <summary>
        /// The number of updates available for the current device version as per the last device scan.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public int? TotalNumberOfUpdatesAvailable { get => this._totalNumberOfUpdatesAvailable; }

        /// <summary>Backing field for <see cref="TotalNumberOfUpdatesPendingDownload" /> property.</summary>
        private int? _totalNumberOfUpdatesPendingDownload;

        /// <summary>The total number of items pending download.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public int? TotalNumberOfUpdatesPendingDownload { get => this._totalNumberOfUpdatesPendingDownload; }

        /// <summary>Backing field for <see cref="TotalNumberOfUpdatesPendingInstall" /> property.</summary>
        private int? _totalNumberOfUpdatesPendingInstall;

        /// <summary>The total number of items pending install.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public int? TotalNumberOfUpdatesPendingInstall { get => this._totalNumberOfUpdatesPendingInstall; }

        /// <summary>Backing field for <see cref="TotalTimeInMinute" /> property.</summary>
        private int? _totalTimeInMinute;

        /// <summary>The total time in Minutes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public int? TotalTimeInMinute { get => this._totalTimeInMinute; }

        /// <summary>Backing field for <see cref="TotalUpdateSizeInByte" /> property.</summary>
        private double? _totalUpdateSizeInByte;

        /// <summary>The total size of updates available for download in bytes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public double? TotalUpdateSizeInByte { get => this._totalUpdateSizeInByte; }

        /// <summary>Backing field for <see cref="Update" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateDetails[] _update;

        /// <summary>The list of updates available for install.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateDetails[] Update { get => this._update; }

        /// <summary>Backing field for <see cref="UpdateTitle" /> property.</summary>
        private string[] _updateTitle;

        /// <summary>The list of updates available for install.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public string[] UpdateTitle { get => this._updateTitle; }

        /// <summary>Creates an new <see cref="UpdateSummaryProperties" /> instance.</summary>
        public UpdateSummaryProperties()
        {

        }
    }
    /// The device update information summary.
    public partial interface IUpdateSummaryProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.IJsonSerializable
    {
        /// <summary>The last time when a scan was done on the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The last time when a scan was done on the device.",
        SerializedName = @"deviceLastScannedDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? DeviceLastScannedDateTime { get; set; }
        /// <summary>The current version of the device in format: 1.2.17312.13.",</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The current version of the device in format: 1.2.17312.13."",",
        SerializedName = @"deviceVersionNumber",
        PossibleTypes = new [] { typeof(string) })]
        string DeviceVersionNumber { get; set; }
        /// <summary>The current version of the device in text format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The current version of the device in text format.",
        SerializedName = @"friendlyDeviceVersionName",
        PossibleTypes = new [] { typeof(string) })]
        string FriendlyDeviceVersionName { get; set; }
        /// <summary>The job ID of the download job in progress.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The job ID of the download job in progress.",
        SerializedName = @"inProgressDownloadJobId",
        PossibleTypes = new [] { typeof(string) })]
        string InProgressDownloadJobId { get;  }
        /// <summary>The time when the currently running download (if any) started.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The time when the currently running download (if any) started.",
        SerializedName = @"inProgressDownloadJobStartedDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? InProgressDownloadJobStartedDateTime { get;  }
        /// <summary>The job ID of the install job in progress.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The job ID of the install job in progress.",
        SerializedName = @"inProgressInstallJobId",
        PossibleTypes = new [] { typeof(string) })]
        string InProgressInstallJobId { get;  }
        /// <summary>The time when the currently running install (if any) started.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The time when the currently running install (if any) started.",
        SerializedName = @"inProgressInstallJobStartedDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? InProgressInstallJobStartedDateTime { get;  }
        /// <summary>
        /// The time when the last Download job was completed (success/cancelled/failed) on the appliance.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The time when the last Download job was completed (success/cancelled/failed) on the appliance.",
        SerializedName = @"lastCompletedDownloadJobDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastCompletedDownloadJobDateTime { get;  }
        /// <summary>JobId of the last ran download job.(Can be success/cancelled/failed)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"JobId of the last ran download job.(Can be success/cancelled/failed)",
        SerializedName = @"lastCompletedDownloadJobId",
        PossibleTypes = new [] { typeof(string) })]
        string LastCompletedDownloadJobId { get;  }
        /// <summary>
        /// The time when the last Install job was completed (success/cancelled/failed) on the appliance.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The time when the last Install job was completed (success/cancelled/failed) on the appliance.",
        SerializedName = @"lastCompletedInstallJobDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastCompletedInstallJobDateTime { get;  }
        /// <summary>JobId of the last ran install job.(Can be success/cancelled/failed)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"JobId of the last ran install job.(Can be success/cancelled/failed)",
        SerializedName = @"lastCompletedInstallJobId",
        PossibleTypes = new [] { typeof(string) })]
        string LastCompletedInstallJobId { get;  }
        /// <summary>
        /// The time when the last scan job was completed (success/cancelled/failed) on the appliance.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time when the last scan job was completed (success/cancelled/failed) on the appliance.",
        SerializedName = @"lastCompletedScanJobDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastCompletedScanJobDateTime { get; set; }
        /// <summary>JobStatus of the last ran download job.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"JobStatus of the last ran download job.",
        SerializedName = @"lastDownloadJobStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.JobStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.JobStatus? LastDownloadJobStatus { get;  }
        /// <summary>JobStatus of the last ran install job.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"JobStatus of the last ran install job.",
        SerializedName = @"lastInstallJobStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.JobStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.JobStatus? LastInstallJobStatus { get;  }
        /// <summary>The time when the Last Install job was completed successfully on the appliance</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time when the Last Install job was completed successfully on the appliance",
        SerializedName = @"lastSuccessfulInstallJobDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastSuccessfulInstallJobDateTime { get; set; }
        /// <summary>Time when the last scan job is successfully completed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Time when the last scan job is successfully completed.",
        SerializedName = @"lastSuccessfulScanJobTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastSuccessfulScanJobTime { get; set; }
        /// <summary>The current update operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The current update operation.",
        SerializedName = @"ongoingUpdateOperation",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.UpdateOperation) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.UpdateOperation? OngoingUpdateOperation { get;  }
        /// <summary>
        /// Indicates if updates are available and at least one of the updates needs a reboot.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Indicates if updates are available and at least one of the updates needs a reboot.",
        SerializedName = @"rebootBehavior",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.InstallRebootBehavior) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.InstallRebootBehavior? RebootBehavior { get;  }
        /// <summary>
        /// The number of updates available for the current device version as per the last device scan.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of updates available for the current device version as per the last device scan.",
        SerializedName = @"totalNumberOfUpdatesAvailable",
        PossibleTypes = new [] { typeof(int) })]
        int? TotalNumberOfUpdatesAvailable { get;  }
        /// <summary>The total number of items pending download.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The total number of items pending download.",
        SerializedName = @"totalNumberOfUpdatesPendingDownload",
        PossibleTypes = new [] { typeof(int) })]
        int? TotalNumberOfUpdatesPendingDownload { get;  }
        /// <summary>The total number of items pending install.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The total number of items pending install.",
        SerializedName = @"totalNumberOfUpdatesPendingInstall",
        PossibleTypes = new [] { typeof(int) })]
        int? TotalNumberOfUpdatesPendingInstall { get;  }
        /// <summary>The total time in Minutes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The total time in Minutes",
        SerializedName = @"totalTimeInMinutes",
        PossibleTypes = new [] { typeof(int) })]
        int? TotalTimeInMinute { get;  }
        /// <summary>The total size of updates available for download in bytes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The total size of updates available for download in bytes.",
        SerializedName = @"totalUpdateSizeInBytes",
        PossibleTypes = new [] { typeof(double) })]
        double? TotalUpdateSizeInByte { get;  }
        /// <summary>The list of updates available for install.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of updates available for install.",
        SerializedName = @"updates",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateDetails) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateDetails[] Update { get;  }
        /// <summary>The list of updates available for install.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of updates available for install.",
        SerializedName = @"updateTitles",
        PossibleTypes = new [] { typeof(string) })]
        string[] UpdateTitle { get;  }

    }
    /// The device update information summary.
    internal partial interface IUpdateSummaryPropertiesInternal

    {
        /// <summary>The last time when a scan was done on the device.</summary>
        global::System.DateTime? DeviceLastScannedDateTime { get; set; }
        /// <summary>The current version of the device in format: 1.2.17312.13.",</summary>
        string DeviceVersionNumber { get; set; }
        /// <summary>The current version of the device in text format.</summary>
        string FriendlyDeviceVersionName { get; set; }
        /// <summary>The job ID of the download job in progress.</summary>
        string InProgressDownloadJobId { get; set; }
        /// <summary>The time when the currently running download (if any) started.</summary>
        global::System.DateTime? InProgressDownloadJobStartedDateTime { get; set; }
        /// <summary>The job ID of the install job in progress.</summary>
        string InProgressInstallJobId { get; set; }
        /// <summary>The time when the currently running install (if any) started.</summary>
        global::System.DateTime? InProgressInstallJobStartedDateTime { get; set; }
        /// <summary>
        /// The time when the last Download job was completed (success/cancelled/failed) on the appliance.
        /// </summary>
        global::System.DateTime? LastCompletedDownloadJobDateTime { get; set; }
        /// <summary>JobId of the last ran download job.(Can be success/cancelled/failed)</summary>
        string LastCompletedDownloadJobId { get; set; }
        /// <summary>
        /// The time when the last Install job was completed (success/cancelled/failed) on the appliance.
        /// </summary>
        global::System.DateTime? LastCompletedInstallJobDateTime { get; set; }
        /// <summary>JobId of the last ran install job.(Can be success/cancelled/failed)</summary>
        string LastCompletedInstallJobId { get; set; }
        /// <summary>
        /// The time when the last scan job was completed (success/cancelled/failed) on the appliance.
        /// </summary>
        global::System.DateTime? LastCompletedScanJobDateTime { get; set; }
        /// <summary>JobStatus of the last ran download job.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.JobStatus? LastDownloadJobStatus { get; set; }
        /// <summary>JobStatus of the last ran install job.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.JobStatus? LastInstallJobStatus { get; set; }
        /// <summary>The time when the Last Install job was completed successfully on the appliance</summary>
        global::System.DateTime? LastSuccessfulInstallJobDateTime { get; set; }
        /// <summary>Time when the last scan job is successfully completed.</summary>
        global::System.DateTime? LastSuccessfulScanJobTime { get; set; }
        /// <summary>The current update operation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.UpdateOperation? OngoingUpdateOperation { get; set; }
        /// <summary>
        /// Indicates if updates are available and at least one of the updates needs a reboot.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.InstallRebootBehavior? RebootBehavior { get; set; }
        /// <summary>
        /// The number of updates available for the current device version as per the last device scan.
        /// </summary>
        int? TotalNumberOfUpdatesAvailable { get; set; }
        /// <summary>The total number of items pending download.</summary>
        int? TotalNumberOfUpdatesPendingDownload { get; set; }
        /// <summary>The total number of items pending install.</summary>
        int? TotalNumberOfUpdatesPendingInstall { get; set; }
        /// <summary>The total time in Minutes</summary>
        int? TotalTimeInMinute { get; set; }
        /// <summary>The total size of updates available for download in bytes.</summary>
        double? TotalUpdateSizeInByte { get; set; }
        /// <summary>The list of updates available for install.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IUpdateDetails[] Update { get; set; }
        /// <summary>The list of updates available for install.</summary>
        string[] UpdateTitle { get; set; }

    }
}