// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Extensions;

    /// <summary>
    /// The limited preview of Kubernetes Cluster Management from the Azure supports:
    /// 1. Using a simple turn-key option in Azure Portal, deploy a Kubernetes cluster on your Azure Stack Edge device.
    /// 2. Configure Kubernetes cluster running on your device with Arc enabled Kubernetes with a click of a button in the Azure
    /// Portal.
    /// Azure Arc enables organizations to view, manage, and govern their on-premises Kubernetes clusters using the Azure Portal,
    /// command line tools, and APIs.
    /// 3. Easily configure Persistent Volumes using SMB and NFS shares for storing container data.
    /// For more information, refer to the document here: https://databoxupdatepackages.blob.core.windows.net/documentation/Microsoft-Azure-Stack-Edge-K8-Cloud-Management-20210323.pdf
    /// Or Demo: https://databoxupdatepackages.blob.core.windows.net/documentation/Microsoft-Azure-Stack-Edge-K8S-Cloud-Management-20210323.mp4
    /// By using this feature, you agree to the preview legal terms. See the https://azure.microsoft.com/en-us/support/legal/preview-supplemental-terms/
    /// </summary>
    public partial class KubernetesRole :
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRole,
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal,
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRole"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRole __role = new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.Role();

        /// <summary>Pod Subnet</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string CniConfigPodSubnet { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).CniConfigPodSubnet; }

        /// <summary>Service subnet</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string CniConfigServiceSubnet { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).CniConfigServiceSubnet; }

        /// <summary>Cni type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string CniConfigType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).CniConfigType; }

        /// <summary>Cni version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string CniConfigVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).CniConfigVersion; }

        /// <summary>Memory in bytes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public long? ComputeMemoryInByte { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).ComputeMemoryInByte; }

        /// <summary>Processor count</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public int? ComputeProcessorCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).ComputeProcessorCount; }

        /// <summary>VM profile</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string ComputeVMProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).ComputeVMProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).ComputeVMProfile = value ?? null; }

        /// <summary>Etcd type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string EtcdInfoType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).EtcdInfoType; }

        /// <summary>Etcd version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string EtcdInfoVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).EtcdInfoVersion; }

        /// <summary>Host OS supported by the Kubernetes role.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.PlatformType? HostPlatform { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).HostPlatform; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).HostPlatform = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.PlatformType)""); }

        /// <summary>Platform where the runtime is hosted.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.HostPlatformType? HostPlatformType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).HostPlatformType; }

        /// <summary>The path ID that uniquely identifies the object.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IArmBaseModelInternal)__role).Id; }

        /// <summary>Role type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.RoleTypes Kind { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleInternal)__role).Kind; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleInternal)__role).Kind = value ; }

        /// <summary>Kubernetes cluster nodes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INodeInfo[] KuberneteClusterInfoNode { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).KuberneteClusterInfoNode; }

        /// <summary>Kubernetes cluster version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string KuberneteClusterInfoVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).KuberneteClusterInfoVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).KuberneteClusterInfoVersion = value ?? null; }

        /// <summary>Load balancer type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string LoadBalancerConfigType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).LoadBalancerConfigType; }

        /// <summary>Load balancer version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string LoadBalancerConfigVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).LoadBalancerConfigVersion; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IArmBaseModelInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IArmBaseModelInternal)__role).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IArmBaseModelInternal)__role).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IArmBaseModelInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IArmBaseModelInternal)__role).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IArmBaseModelInternal)__role).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IArmBaseModelInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IArmBaseModelInternal)__role).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IArmBaseModelInternal)__role).Type = value; }

        /// <summary>Internal Acessors for CniConfigPodSubnet</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal.CniConfigPodSubnet { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).CniConfigPodSubnet; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).CniConfigPodSubnet = value; }

        /// <summary>Internal Acessors for CniConfigServiceSubnet</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal.CniConfigServiceSubnet { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).CniConfigServiceSubnet; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).CniConfigServiceSubnet = value; }

        /// <summary>Internal Acessors for CniConfigType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal.CniConfigType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).CniConfigType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).CniConfigType = value; }

        /// <summary>Internal Acessors for CniConfigVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal.CniConfigVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).CniConfigVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).CniConfigVersion = value; }

        /// <summary>Internal Acessors for ComputeMemoryInByte</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal.ComputeMemoryInByte { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).ComputeMemoryInByte; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).ComputeMemoryInByte = value; }

        /// <summary>Internal Acessors for ComputeProcessorCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal.ComputeProcessorCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).ComputeProcessorCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).ComputeProcessorCount = value; }

        /// <summary>Internal Acessors for EtcdInfoType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal.EtcdInfoType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).EtcdInfoType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).EtcdInfoType = value; }

        /// <summary>Internal Acessors for EtcdInfoVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal.EtcdInfoVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).EtcdInfoVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).EtcdInfoVersion = value; }

        /// <summary>Internal Acessors for HostPlatformType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.HostPlatformType? Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal.HostPlatformType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).HostPlatformType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).HostPlatformType = value; }

        /// <summary>Internal Acessors for KuberneteClusterInfoEtcdInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IEtcdInfo Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal.KuberneteClusterInfoEtcdInfo { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).KuberneteClusterInfoEtcdInfo; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).KuberneteClusterInfoEtcdInfo = value; }

        /// <summary>Internal Acessors for KuberneteClusterInfoNode</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INodeInfo[] Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal.KuberneteClusterInfoNode { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).KuberneteClusterInfoNode; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).KuberneteClusterInfoNode = value; }

        /// <summary>Internal Acessors for KuberneteRoleResourceCompute</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleCompute Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal.KuberneteRoleResourceCompute { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).KuberneteRoleResourceCompute; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).KuberneteRoleResourceCompute = value; }

        /// <summary>Internal Acessors for KuberneteRoleResourceNetwork</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleNetwork Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal.KuberneteRoleResourceNetwork { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).KuberneteRoleResourceNetwork; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).KuberneteRoleResourceNetwork = value; }

        /// <summary>Internal Acessors for KuberneteRoleResourceStorage</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleStorage Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal.KuberneteRoleResourceStorage { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).KuberneteRoleResourceStorage; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).KuberneteRoleResourceStorage = value; }

        /// <summary>Internal Acessors for KubernetesClusterInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesClusterInfo Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal.KubernetesClusterInfo { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).KubernetesClusterInfo; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).KubernetesClusterInfo = value; }

        /// <summary>Internal Acessors for LoadBalancerConfigType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal.LoadBalancerConfigType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).LoadBalancerConfigType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).LoadBalancerConfigType = value; }

        /// <summary>Internal Acessors for LoadBalancerConfigVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal.LoadBalancerConfigVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).LoadBalancerConfigVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).LoadBalancerConfigVersion = value; }

        /// <summary>Internal Acessors for NetworkCniConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.ICniConfig Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal.NetworkCniConfig { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).NetworkCniConfig; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).NetworkCniConfig = value; }

        /// <summary>Internal Acessors for NetworkLoadBalancerConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.ILoadBalancerConfig Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal.NetworkLoadBalancerConfig { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).NetworkLoadBalancerConfig; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).NetworkLoadBalancerConfig = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleProperties Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.KubernetesRoleProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.KubernetesState? Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for Resource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleResources Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal.Resource { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).KubernetesRoleResource; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).KubernetesRoleResource = value; }

        /// <summary>Internal Acessors for StorageClass</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleStorageClassInfo[] Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleInternal.StorageClass { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).StorageClass; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).StorageClass = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20.ISystemData Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleInternal)__role).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleInternal)__role).SystemData = value; }

        /// <summary>The object name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IArmBaseModelInternal)__role).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleProperties _property;

        /// <summary>Properties specific to Kubernetes role.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.KubernetesRoleProperties()); set => this._property = value; }

        /// <summary>State of Kubernetes deployment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.KubernetesState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).ProvisioningState; }

        /// <summary>Role status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.RoleStatus? RoleStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).RoleStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).RoleStatus = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.RoleStatus)""); }

        /// <summary>Kubernetes storage class info.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleStorageClassInfo[] StorageClass { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).StorageClass; }

        /// <summary>Mount points of shares in role(s).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IMountPointMap[] StorageEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).StorageEndpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRolePropertiesInternal)Property).StorageEndpoint = value ?? null /* arrayOf */; }

        /// <summary>Metadata pertaining to creation and last modification of Role</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleInternal)__role).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleInternal)__role).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleInternal)__role).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleInternal)__role).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleInternal)__role).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleInternal)__role).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleInternal)__role).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleInternal)__role).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleInternal)__role).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleInternal)__role).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleInternal)__role).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleInternal)__role).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleInternal)__role).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.CreatedByType)""); }

        /// <summary>The hierarchical type of the object.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IArmBaseModelInternal)__role).Type; }

        /// <summary>Creates an new <see cref="KubernetesRole" /> instance.</summary>
        public KubernetesRole()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__role), __role);
            await eventListener.AssertObjectIsValid(nameof(__role), __role);
        }
    }
    /// The limited preview of Kubernetes Cluster Management from the Azure supports:
    /// 1. Using a simple turn-key option in Azure Portal, deploy a Kubernetes cluster on your Azure Stack Edge device.
    /// 2. Configure Kubernetes cluster running on your device with Arc enabled Kubernetes with a click of a button in the Azure
    /// Portal.
    /// Azure Arc enables organizations to view, manage, and govern their on-premises Kubernetes clusters using the Azure Portal,
    /// command line tools, and APIs.
    /// 3. Easily configure Persistent Volumes using SMB and NFS shares for storing container data.
    /// For more information, refer to the document here: https://databoxupdatepackages.blob.core.windows.net/documentation/Microsoft-Azure-Stack-Edge-K8-Cloud-Management-20210323.pdf
    /// Or Demo: https://databoxupdatepackages.blob.core.windows.net/documentation/Microsoft-Azure-Stack-Edge-K8S-Cloud-Management-20210323.mp4
    /// By using this feature, you agree to the preview legal terms. See the https://azure.microsoft.com/en-us/support/legal/preview-supplemental-terms/
    public partial interface IKubernetesRole :
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRole
    {
        /// <summary>Pod Subnet</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Pod Subnet",
        SerializedName = @"podSubnet",
        PossibleTypes = new [] { typeof(string) })]
        string CniConfigPodSubnet { get;  }
        /// <summary>Service subnet</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Service subnet",
        SerializedName = @"serviceSubnet",
        PossibleTypes = new [] { typeof(string) })]
        string CniConfigServiceSubnet { get;  }
        /// <summary>Cni type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Cni type",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string CniConfigType { get;  }
        /// <summary>Cni version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Cni version",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string CniConfigVersion { get;  }
        /// <summary>Memory in bytes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Memory in bytes",
        SerializedName = @"memoryInBytes",
        PossibleTypes = new [] { typeof(long) })]
        long? ComputeMemoryInByte { get;  }
        /// <summary>Processor count</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Processor count",
        SerializedName = @"processorCount",
        PossibleTypes = new [] { typeof(int) })]
        int? ComputeProcessorCount { get;  }
        /// <summary>VM profile</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"VM profile",
        SerializedName = @"vmProfile",
        PossibleTypes = new [] { typeof(string) })]
        string ComputeVMProfile { get; set; }
        /// <summary>Etcd type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Etcd type",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string EtcdInfoType { get;  }
        /// <summary>Etcd version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Etcd version",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string EtcdInfoVersion { get;  }
        /// <summary>Host OS supported by the Kubernetes role.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Host OS supported by the Kubernetes role.",
        SerializedName = @"hostPlatform",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.PlatformType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.PlatformType? HostPlatform { get; set; }
        /// <summary>Platform where the runtime is hosted.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Platform where the runtime is hosted.",
        SerializedName = @"hostPlatformType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.HostPlatformType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.HostPlatformType? HostPlatformType { get;  }
        /// <summary>Kubernetes cluster nodes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Kubernetes cluster nodes",
        SerializedName = @"nodes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INodeInfo) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INodeInfo[] KuberneteClusterInfoNode { get;  }
        /// <summary>Kubernetes cluster version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Kubernetes cluster version",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string KuberneteClusterInfoVersion { get; set; }
        /// <summary>Load balancer type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Load balancer type",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string LoadBalancerConfigType { get;  }
        /// <summary>Load balancer version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Load balancer version",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string LoadBalancerConfigVersion { get;  }
        /// <summary>State of Kubernetes deployment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"State of Kubernetes deployment",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.KubernetesState) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.KubernetesState? ProvisioningState { get;  }
        /// <summary>Role status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Role status.",
        SerializedName = @"roleStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.RoleStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.RoleStatus? RoleStatus { get; set; }
        /// <summary>Kubernetes storage class info.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Kubernetes storage class info.",
        SerializedName = @"storageClasses",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleStorageClassInfo) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleStorageClassInfo[] StorageClass { get;  }
        /// <summary>Mount points of shares in role(s).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Mount points of shares in role(s).",
        SerializedName = @"endpoints",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IMountPointMap) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IMountPointMap[] StorageEndpoint { get; set; }

    }
    /// The limited preview of Kubernetes Cluster Management from the Azure supports:
    /// 1. Using a simple turn-key option in Azure Portal, deploy a Kubernetes cluster on your Azure Stack Edge device.
    /// 2. Configure Kubernetes cluster running on your device with Arc enabled Kubernetes with a click of a button in the Azure
    /// Portal.
    /// Azure Arc enables organizations to view, manage, and govern their on-premises Kubernetes clusters using the Azure Portal,
    /// command line tools, and APIs.
    /// 3. Easily configure Persistent Volumes using SMB and NFS shares for storing container data.
    /// For more information, refer to the document here: https://databoxupdatepackages.blob.core.windows.net/documentation/Microsoft-Azure-Stack-Edge-K8-Cloud-Management-20210323.pdf
    /// Or Demo: https://databoxupdatepackages.blob.core.windows.net/documentation/Microsoft-Azure-Stack-Edge-K8S-Cloud-Management-20210323.mp4
    /// By using this feature, you agree to the preview legal terms. See the https://azure.microsoft.com/en-us/support/legal/preview-supplemental-terms/
    internal partial interface IKubernetesRoleInternal :
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IRoleInternal
    {
        /// <summary>Pod Subnet</summary>
        string CniConfigPodSubnet { get; set; }
        /// <summary>Service subnet</summary>
        string CniConfigServiceSubnet { get; set; }
        /// <summary>Cni type</summary>
        string CniConfigType { get; set; }
        /// <summary>Cni version</summary>
        string CniConfigVersion { get; set; }
        /// <summary>Memory in bytes</summary>
        long? ComputeMemoryInByte { get; set; }
        /// <summary>Processor count</summary>
        int? ComputeProcessorCount { get; set; }
        /// <summary>VM profile</summary>
        string ComputeVMProfile { get; set; }
        /// <summary>Etcd type</summary>
        string EtcdInfoType { get; set; }
        /// <summary>Etcd version</summary>
        string EtcdInfoVersion { get; set; }
        /// <summary>Host OS supported by the Kubernetes role.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.PlatformType? HostPlatform { get; set; }
        /// <summary>Platform where the runtime is hosted.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.HostPlatformType? HostPlatformType { get; set; }
        /// <summary>Etcd configuration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IEtcdInfo KuberneteClusterInfoEtcdInfo { get; set; }
        /// <summary>Kubernetes cluster nodes</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INodeInfo[] KuberneteClusterInfoNode { get; set; }
        /// <summary>Kubernetes cluster version</summary>
        string KuberneteClusterInfoVersion { get; set; }
        /// <summary>Kubernetes role compute resource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleCompute KuberneteRoleResourceCompute { get; set; }
        /// <summary>Kubernetes role network resource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleNetwork KuberneteRoleResourceNetwork { get; set; }
        /// <summary>Kubernetes role storage resource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleStorage KuberneteRoleResourceStorage { get; set; }
        /// <summary>Kubernetes cluster configuration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesClusterInfo KubernetesClusterInfo { get; set; }
        /// <summary>Load balancer type</summary>
        string LoadBalancerConfigType { get; set; }
        /// <summary>Load balancer version</summary>
        string LoadBalancerConfigVersion { get; set; }
        /// <summary>Cni configuration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.ICniConfig NetworkCniConfig { get; set; }
        /// <summary>Load balancer configuration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.ILoadBalancerConfig NetworkLoadBalancerConfig { get; set; }
        /// <summary>Properties specific to Kubernetes role.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleProperties Property { get; set; }
        /// <summary>State of Kubernetes deployment</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.KubernetesState? ProvisioningState { get; set; }
        /// <summary>Kubernetes role resources</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleResources Resource { get; set; }
        /// <summary>Role status.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.RoleStatus? RoleStatus { get; set; }
        /// <summary>Kubernetes storage class info.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IKubernetesRoleStorageClassInfo[] StorageClass { get; set; }
        /// <summary>Mount points of shares in role(s).</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IMountPointMap[] StorageEndpoint { get; set; }

    }
}