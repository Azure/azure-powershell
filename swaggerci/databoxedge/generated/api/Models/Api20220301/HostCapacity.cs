// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Extensions;

    /// <summary>Host Capacity Data.</summary>
    public partial class HostCapacity :
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IHostCapacity,
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IHostCapacityInternal
    {

        /// <summary>Backing field for <see cref="AvailableGpuCount" /> property.</summary>
        private int? _availableGpuCount;

        /// <summary>
        /// The available amount of GPUs on the host to use after accounting for GPUS used by reservations on the host.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public int? AvailableGpuCount { get => this._availableGpuCount; set => this._availableGpuCount = value; }

        /// <summary>Backing field for <see cref="EffectiveAvailableMemoryMbOnHost" /> property.</summary>
        private long? _effectiveAvailableMemoryMbOnHost;

        /// <summary>
        /// The available memory on the host accounting for VM placement size and any host VM reservations.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public long? EffectiveAvailableMemoryMbOnHost { get => this._effectiveAvailableMemoryMbOnHost; set => this._effectiveAvailableMemoryMbOnHost = value; }

        /// <summary>Backing field for <see cref="GpuType" /> property.</summary>
        private string _gpuType;

        /// <summary>The GPU type of the VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public string GpuType { get => this._gpuType; set => this._gpuType = value; }

        /// <summary>Backing field for <see cref="HostName" /> property.</summary>
        private string _hostName;

        /// <summary>The name of the host.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public string HostName { get => this._hostName; set => this._hostName = value; }

        /// <summary>Backing field for <see cref="NumaNodesData" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INumaNodeData[] _numaNodesData;

        /// <summary>The numa nodes information for Hpn VMs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INumaNodeData[] NumaNodesData { get => this._numaNodesData; set => this._numaNodesData = value; }

        /// <summary>Backing field for <see cref="VMUsedMemory" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IHostCapacityVMUsedMemory _vMUsedMemory;

        /// <summary>The VM used memory per VmId.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IHostCapacityVMUsedMemory VMUsedMemory { get => (this._vMUsedMemory = this._vMUsedMemory ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.HostCapacityVMUsedMemory()); set => this._vMUsedMemory = value; }

        /// <summary>Creates an new <see cref="HostCapacity" /> instance.</summary>
        public HostCapacity()
        {

        }
    }
    /// Host Capacity Data.
    public partial interface IHostCapacity :
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The available amount of GPUs on the host to use after accounting for GPUS used by reservations on the host.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The available amount of GPUs on the host to use after accounting for GPUS used by reservations on the host.",
        SerializedName = @"availableGpuCount",
        PossibleTypes = new [] { typeof(int) })]
        int? AvailableGpuCount { get; set; }
        /// <summary>
        /// The available memory on the host accounting for VM placement size and any host VM reservations.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The available memory on the host accounting for VM placement size and any host VM reservations.",
        SerializedName = @"effectiveAvailableMemoryMbOnHost",
        PossibleTypes = new [] { typeof(long) })]
        long? EffectiveAvailableMemoryMbOnHost { get; set; }
        /// <summary>The GPU type of the VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The GPU type of the VM.",
        SerializedName = @"gpuType",
        PossibleTypes = new [] { typeof(string) })]
        string GpuType { get; set; }
        /// <summary>The name of the host.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the host.",
        SerializedName = @"hostName",
        PossibleTypes = new [] { typeof(string) })]
        string HostName { get; set; }
        /// <summary>The numa nodes information for Hpn VMs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The numa nodes information for Hpn VMs.",
        SerializedName = @"numaNodesData",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INumaNodeData) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INumaNodeData[] NumaNodesData { get; set; }
        /// <summary>The VM used memory per VmId.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The VM used memory per VmId.",
        SerializedName = @"vmUsedMemory",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IHostCapacityVMUsedMemory) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IHostCapacityVMUsedMemory VMUsedMemory { get; set; }

    }
    /// Host Capacity Data.
    internal partial interface IHostCapacityInternal

    {
        /// <summary>
        /// The available amount of GPUs on the host to use after accounting for GPUS used by reservations on the host.
        /// </summary>
        int? AvailableGpuCount { get; set; }
        /// <summary>
        /// The available memory on the host accounting for VM placement size and any host VM reservations.
        /// </summary>
        long? EffectiveAvailableMemoryMbOnHost { get; set; }
        /// <summary>The GPU type of the VM.</summary>
        string GpuType { get; set; }
        /// <summary>The name of the host.</summary>
        string HostName { get; set; }
        /// <summary>The numa nodes information for Hpn VMs.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.INumaNodeData[] NumaNodesData { get; set; }
        /// <summary>The VM used memory per VmId.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IHostCapacityVMUsedMemory VMUsedMemory { get; set; }

    }
}