// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Extensions;

    /// <summary>IoT addon properties.</summary>
    public partial class IoTAddonProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTAddonProperties,
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTAddonPropertiesInternal
    {

        /// <summary>Backing field for <see cref="HostPlatform" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.PlatformType? _hostPlatform;

        /// <summary>Host OS supported by the IoT addon.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.PlatformType? HostPlatform { get => this._hostPlatform; }

        /// <summary>Backing field for <see cref="HostPlatformType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.HostPlatformType? _hostPlatformType;

        /// <summary>Platform where the runtime is hosted.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.HostPlatformType? HostPlatformType { get => this._hostPlatformType; }

        /// <summary>Backing field for <see cref="IoTDeviceDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfo _ioTDeviceDetail;

        /// <summary>IoT device metadata to which appliance needs to be connected.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfo IoTDeviceDetail { get => (this._ioTDeviceDetail = this._ioTDeviceDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IoTDeviceInfo()); set => this._ioTDeviceDetail = value; }

        /// <summary>ID of the IoT device/edge device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string IoTDeviceDetailDeviceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTDeviceDetail).DeviceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTDeviceDetail).DeviceId = value ; }

        /// <summary>Host name for the IoT hub associated to the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string IoTDeviceDetailIoThostHub { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTDeviceDetail).IoTHostHub; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTDeviceDetail).IoTHostHub = value ; }

        /// <summary>Id for the IoT hub associated to the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string IoTDeviceDetailIoThostHubId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTDeviceDetail).IoTHostHubId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTDeviceDetail).IoTHostHubId = value ?? null; }

        /// <summary>The algorithm used to encrypt "Value".</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.EncryptionAlgorithm? IoTDeviceDetailsAuthenticationSymmetricKeyConnectionStringEncryptionAlgorithm { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTDeviceDetail).ConnectionStringEncryptionAlgorithm; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTDeviceDetail).ConnectionStringEncryptionAlgorithm = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.EncryptionAlgorithm)""); }

        /// <summary>
        /// Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be null.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string IoTDeviceDetailsAuthenticationSymmetricKeyConnectionStringEncryptionCertThumbprint { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTDeviceDetail).ConnectionStringEncryptionCertThumbprint; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTDeviceDetail).ConnectionStringEncryptionCertThumbprint = value ?? null; }

        /// <summary>The value of the secret.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string IoTDeviceDetailsAuthenticationSymmetricKeyConnectionStringValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTDeviceDetail).ConnectionStringValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTDeviceDetail).ConnectionStringValue = value ?? null; }

        /// <summary>Backing field for <see cref="IoTEdgeDeviceDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfo _ioTEdgeDeviceDetail;

        /// <summary>IoT edge device to which the IoT Addon needs to be configured.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfo IoTEdgeDeviceDetail { get => (this._ioTEdgeDeviceDetail = this._ioTEdgeDeviceDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IoTDeviceInfo()); set => this._ioTEdgeDeviceDetail = value; }

        /// <summary>ID of the IoT device/edge device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string IoTEdgeDeviceDetailDeviceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTEdgeDeviceDetail).DeviceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTEdgeDeviceDetail).DeviceId = value ; }

        /// <summary>Host name for the IoT hub associated to the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string IoTEdgeDeviceDetailIoThostHub { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTEdgeDeviceDetail).IoTHostHub; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTEdgeDeviceDetail).IoTHostHub = value ; }

        /// <summary>Id for the IoT hub associated to the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string IoTEdgeDeviceDetailIoThostHubId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTEdgeDeviceDetail).IoTHostHubId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTEdgeDeviceDetail).IoTHostHubId = value ?? null; }

        /// <summary>The algorithm used to encrypt "Value".</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.EncryptionAlgorithm? IoTEdgeDeviceDetailsAuthenticationSymmetricKeyConnectionStringEncryptionAlgorithm { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTEdgeDeviceDetail).ConnectionStringEncryptionAlgorithm; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTEdgeDeviceDetail).ConnectionStringEncryptionAlgorithm = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.EncryptionAlgorithm)""); }

        /// <summary>
        /// Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be null.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string IoTEdgeDeviceDetailsAuthenticationSymmetricKeyConnectionStringEncryptionCertThumbprint { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTEdgeDeviceDetail).ConnectionStringEncryptionCertThumbprint; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTEdgeDeviceDetail).ConnectionStringEncryptionCertThumbprint = value ?? null; }

        /// <summary>The value of the secret.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Inlined)]
        public string IoTEdgeDeviceDetailsAuthenticationSymmetricKeyConnectionStringValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTEdgeDeviceDetail).ConnectionStringValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTEdgeDeviceDetail).ConnectionStringValue = value ?? null; }

        /// <summary>Internal Acessors for HostPlatform</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.PlatformType? Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTAddonPropertiesInternal.HostPlatform { get => this._hostPlatform; set { {_hostPlatform = value;} } }

        /// <summary>Internal Acessors for HostPlatformType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.HostPlatformType? Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTAddonPropertiesInternal.HostPlatformType { get => this._hostPlatformType; set { {_hostPlatformType = value;} } }

        /// <summary>Internal Acessors for IoTDeviceDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfo Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTAddonPropertiesInternal.IoTDeviceDetail { get => (this._ioTDeviceDetail = this._ioTDeviceDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IoTDeviceInfo()); set { {_ioTDeviceDetail = value;} } }

        /// <summary>Internal Acessors for IoTDeviceDetailAuthentication</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IAuthentication Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTAddonPropertiesInternal.IoTDeviceDetailAuthentication { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTDeviceDetail).Authentication; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTDeviceDetail).Authentication = value; }

        /// <summary>Internal Acessors for IoTDeviceDetailsAuthenticationSymmetricKey</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.ISymmetricKey Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTAddonPropertiesInternal.IoTDeviceDetailsAuthenticationSymmetricKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTDeviceDetail).AuthenticationSymmetricKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTDeviceDetail).AuthenticationSymmetricKey = value; }

        /// <summary>
        /// Internal Acessors for IoTDeviceDetailsAuthenticationSymmetricKeyConnectionString
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IAsymmetricEncryptedSecret Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTAddonPropertiesInternal.IoTDeviceDetailsAuthenticationSymmetricKeyConnectionString { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTDeviceDetail).SymmetricKeyConnectionString; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTDeviceDetail).SymmetricKeyConnectionString = value; }

        /// <summary>Internal Acessors for IoTEdgeDeviceDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfo Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTAddonPropertiesInternal.IoTEdgeDeviceDetail { get => (this._ioTEdgeDeviceDetail = this._ioTEdgeDeviceDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IoTDeviceInfo()); set { {_ioTEdgeDeviceDetail = value;} } }

        /// <summary>Internal Acessors for IoTEdgeDeviceDetailAuthentication</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IAuthentication Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTAddonPropertiesInternal.IoTEdgeDeviceDetailAuthentication { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTEdgeDeviceDetail).Authentication; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTEdgeDeviceDetail).Authentication = value; }

        /// <summary>Internal Acessors for IoTEdgeDeviceDetailsAuthenticationSymmetricKey</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.ISymmetricKey Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTAddonPropertiesInternal.IoTEdgeDeviceDetailsAuthenticationSymmetricKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTEdgeDeviceDetail).AuthenticationSymmetricKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTEdgeDeviceDetail).AuthenticationSymmetricKey = value; }

        /// <summary>
        /// Internal Acessors for IoTEdgeDeviceDetailsAuthenticationSymmetricKeyConnectionString
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IAsymmetricEncryptedSecret Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTAddonPropertiesInternal.IoTEdgeDeviceDetailsAuthenticationSymmetricKeyConnectionString { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTEdgeDeviceDetail).SymmetricKeyConnectionString; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfoInternal)IoTEdgeDeviceDetail).SymmetricKeyConnectionString = value; }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.AddonState? Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTAddonPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for Version</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTAddonPropertiesInternal.Version { get => this._version; set { {_version = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.AddonState? _provisioningState;

        /// <summary>Addon Provisioning State</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.AddonState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="Version" /> property.</summary>
        private string _version;

        /// <summary>Version of IoT running on the appliance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.PropertyOrigin.Owned)]
        public string Version { get => this._version; }

        /// <summary>Creates an new <see cref="IoTAddonProperties" /> instance.</summary>
        public IoTAddonProperties()
        {

        }
    }
    /// IoT addon properties.
    public partial interface IIoTAddonProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.IJsonSerializable
    {
        /// <summary>Host OS supported by the IoT addon.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Host OS supported by the IoT addon.",
        SerializedName = @"hostPlatform",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.PlatformType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.PlatformType? HostPlatform { get;  }
        /// <summary>Platform where the runtime is hosted.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Platform where the runtime is hosted.",
        SerializedName = @"hostPlatformType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.HostPlatformType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.HostPlatformType? HostPlatformType { get;  }
        /// <summary>ID of the IoT device/edge device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"ID of the IoT device/edge device.",
        SerializedName = @"deviceId",
        PossibleTypes = new [] { typeof(string) })]
        string IoTDeviceDetailDeviceId { get; set; }
        /// <summary>Host name for the IoT hub associated to the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Host name for the IoT hub associated to the device.",
        SerializedName = @"ioTHostHub",
        PossibleTypes = new [] { typeof(string) })]
        string IoTDeviceDetailIoThostHub { get; set; }
        /// <summary>Id for the IoT hub associated to the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Id for the IoT hub associated to the device.",
        SerializedName = @"ioTHostHubId",
        PossibleTypes = new [] { typeof(string) })]
        string IoTDeviceDetailIoThostHubId { get; set; }
        /// <summary>The algorithm used to encrypt "Value".</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The algorithm used to encrypt ""Value"".",
        SerializedName = @"encryptionAlgorithm",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.EncryptionAlgorithm) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.EncryptionAlgorithm? IoTDeviceDetailsAuthenticationSymmetricKeyConnectionStringEncryptionAlgorithm { get; set; }
        /// <summary>
        /// Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be null.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Thumbprint certificate used to encrypt \""Value\"". If the value is unencrypted, it will be null.",
        SerializedName = @"encryptionCertThumbprint",
        PossibleTypes = new [] { typeof(string) })]
        string IoTDeviceDetailsAuthenticationSymmetricKeyConnectionStringEncryptionCertThumbprint { get; set; }
        /// <summary>The value of the secret.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The value of the secret.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(string) })]
        string IoTDeviceDetailsAuthenticationSymmetricKeyConnectionStringValue { get; set; }
        /// <summary>ID of the IoT device/edge device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"ID of the IoT device/edge device.",
        SerializedName = @"deviceId",
        PossibleTypes = new [] { typeof(string) })]
        string IoTEdgeDeviceDetailDeviceId { get; set; }
        /// <summary>Host name for the IoT hub associated to the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Host name for the IoT hub associated to the device.",
        SerializedName = @"ioTHostHub",
        PossibleTypes = new [] { typeof(string) })]
        string IoTEdgeDeviceDetailIoThostHub { get; set; }
        /// <summary>Id for the IoT hub associated to the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Id for the IoT hub associated to the device.",
        SerializedName = @"ioTHostHubId",
        PossibleTypes = new [] { typeof(string) })]
        string IoTEdgeDeviceDetailIoThostHubId { get; set; }
        /// <summary>The algorithm used to encrypt "Value".</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The algorithm used to encrypt ""Value"".",
        SerializedName = @"encryptionAlgorithm",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.EncryptionAlgorithm) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.EncryptionAlgorithm? IoTEdgeDeviceDetailsAuthenticationSymmetricKeyConnectionStringEncryptionAlgorithm { get; set; }
        /// <summary>
        /// Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be null.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Thumbprint certificate used to encrypt \""Value\"". If the value is unencrypted, it will be null.",
        SerializedName = @"encryptionCertThumbprint",
        PossibleTypes = new [] { typeof(string) })]
        string IoTEdgeDeviceDetailsAuthenticationSymmetricKeyConnectionStringEncryptionCertThumbprint { get; set; }
        /// <summary>The value of the secret.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The value of the secret.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(string) })]
        string IoTEdgeDeviceDetailsAuthenticationSymmetricKeyConnectionStringValue { get; set; }
        /// <summary>Addon Provisioning State</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Addon Provisioning State",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.AddonState) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.AddonState? ProvisioningState { get;  }
        /// <summary>Version of IoT running on the appliance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Version of IoT running on the appliance.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string Version { get;  }

    }
    /// IoT addon properties.
    internal partial interface IIoTAddonPropertiesInternal

    {
        /// <summary>Host OS supported by the IoT addon.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.PlatformType? HostPlatform { get; set; }
        /// <summary>Platform where the runtime is hosted.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.HostPlatformType? HostPlatformType { get; set; }
        /// <summary>IoT device metadata to which appliance needs to be connected.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfo IoTDeviceDetail { get; set; }
        /// <summary>Encrypted IoT device/IoT edge device connection string.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IAuthentication IoTDeviceDetailAuthentication { get; set; }
        /// <summary>ID of the IoT device/edge device.</summary>
        string IoTDeviceDetailDeviceId { get; set; }
        /// <summary>Host name for the IoT hub associated to the device.</summary>
        string IoTDeviceDetailIoThostHub { get; set; }
        /// <summary>Id for the IoT hub associated to the device.</summary>
        string IoTDeviceDetailIoThostHubId { get; set; }
        /// <summary>Symmetric key for authentication.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.ISymmetricKey IoTDeviceDetailsAuthenticationSymmetricKey { get; set; }
        /// <summary>Connection string based on the symmetric key.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IAsymmetricEncryptedSecret IoTDeviceDetailsAuthenticationSymmetricKeyConnectionString { get; set; }
        /// <summary>The algorithm used to encrypt "Value".</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.EncryptionAlgorithm? IoTDeviceDetailsAuthenticationSymmetricKeyConnectionStringEncryptionAlgorithm { get; set; }
        /// <summary>
        /// Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be null.
        /// </summary>
        string IoTDeviceDetailsAuthenticationSymmetricKeyConnectionStringEncryptionCertThumbprint { get; set; }
        /// <summary>The value of the secret.</summary>
        string IoTDeviceDetailsAuthenticationSymmetricKeyConnectionStringValue { get; set; }
        /// <summary>IoT edge device to which the IoT Addon needs to be configured.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IIoTDeviceInfo IoTEdgeDeviceDetail { get; set; }
        /// <summary>Encrypted IoT device/IoT edge device connection string.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IAuthentication IoTEdgeDeviceDetailAuthentication { get; set; }
        /// <summary>ID of the IoT device/edge device.</summary>
        string IoTEdgeDeviceDetailDeviceId { get; set; }
        /// <summary>Host name for the IoT hub associated to the device.</summary>
        string IoTEdgeDeviceDetailIoThostHub { get; set; }
        /// <summary>Id for the IoT hub associated to the device.</summary>
        string IoTEdgeDeviceDetailIoThostHubId { get; set; }
        /// <summary>Symmetric key for authentication.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.ISymmetricKey IoTEdgeDeviceDetailsAuthenticationSymmetricKey { get; set; }
        /// <summary>Connection string based on the symmetric key.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Models.Api20220301.IAsymmetricEncryptedSecret IoTEdgeDeviceDetailsAuthenticationSymmetricKeyConnectionString { get; set; }
        /// <summary>The algorithm used to encrypt "Value".</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.EncryptionAlgorithm? IoTEdgeDeviceDetailsAuthenticationSymmetricKeyConnectionStringEncryptionAlgorithm { get; set; }
        /// <summary>
        /// Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be null.
        /// </summary>
        string IoTEdgeDeviceDetailsAuthenticationSymmetricKeyConnectionStringEncryptionCertThumbprint { get; set; }
        /// <summary>The value of the secret.</summary>
        string IoTEdgeDeviceDetailsAuthenticationSymmetricKeyConnectionStringValue { get; set; }
        /// <summary>Addon Provisioning State</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBoxEdge.Support.AddonState? ProvisioningState { get; set; }
        /// <summary>Version of IoT running on the appliance.</summary>
        string Version { get; set; }

    }
}