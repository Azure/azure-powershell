// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.Extensions;

    /// <summary>Properties to configure Encryption</summary>
    public partial class Encryption :
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20220301.IEncryption,
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20220301.IEncryptionInternal
    {

        /// <summary>Backing field for <see cref="KeySource" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Support.KeySource? _keySource;

        /// <summary>Enumerates the possible value of keySource for Encryption</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Support.KeySource? KeySource { get => this._keySource; set => this._keySource = value; }

        /// <summary>Backing field for <see cref="KeyVaultProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20220301.IKeyVaultProperties _keyVaultProperty;

        /// <summary>Properties of KeyVault</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20220301.IKeyVaultProperties KeyVaultProperty { get => (this._keyVaultProperty = this._keyVaultProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20220301.KeyVaultProperties()); set => this._keyVaultProperty = value; }

        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.PropertyOrigin.Inlined)]
        public string KeyVaultPropertyIdentityClientId { get => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20220301.IKeyVaultPropertiesInternal)KeyVaultProperty).IdentityClientId; set => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20220301.IKeyVaultPropertiesInternal)KeyVaultProperty).IdentityClientId = value ?? null; }

        /// <summary>Name of the Key from KeyVault</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.PropertyOrigin.Inlined)]
        public string KeyVaultPropertyKeyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20220301.IKeyVaultPropertiesInternal)KeyVaultProperty).KeyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20220301.IKeyVaultPropertiesInternal)KeyVaultProperty).KeyName = value ?? null; }

        /// <summary>Uri of KeyVault</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.PropertyOrigin.Inlined)]
        public string KeyVaultPropertyKeyVaultUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20220301.IKeyVaultPropertiesInternal)KeyVaultProperty).KeyVaultUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20220301.IKeyVaultPropertiesInternal)KeyVaultProperty).KeyVaultUri = value ?? null; }

        /// <summary>Version of the Key from KeyVault</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.PropertyOrigin.Inlined)]
        public string KeyVaultPropertyKeyVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20220301.IKeyVaultPropertiesInternal)KeyVaultProperty).KeyVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20220301.IKeyVaultPropertiesInternal)KeyVaultProperty).KeyVersion = value ?? null; }

        /// <summary>Internal Acessors for KeyVaultProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20220301.IKeyVaultProperties Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20220301.IEncryptionInternal.KeyVaultProperty { get => (this._keyVaultProperty = this._keyVaultProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20220301.KeyVaultProperties()); set { {_keyVaultProperty = value;} } }

        /// <summary>Creates an new <see cref="Encryption" /> instance.</summary>
        public Encryption()
        {

        }
    }
    /// Properties to configure Encryption
    public partial interface IEncryption :
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.IJsonSerializable
    {
        /// <summary>Enumerates the possible value of keySource for Encryption</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enumerates the possible value of keySource for Encryption",
        SerializedName = @"keySource",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Support.KeySource) })]
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Support.KeySource? KeySource { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"identityClientId",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultPropertyIdentityClientId { get; set; }
        /// <summary>Name of the Key from KeyVault</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the Key from KeyVault",
        SerializedName = @"keyName",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultPropertyKeyName { get; set; }
        /// <summary>Uri of KeyVault</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Uri of KeyVault",
        SerializedName = @"keyVaultUri",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultPropertyKeyVaultUri { get; set; }
        /// <summary>Version of the Key from KeyVault</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Version of the Key from KeyVault",
        SerializedName = @"keyVersion",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultPropertyKeyVersion { get; set; }

    }
    /// Properties to configure Encryption
    internal partial interface IEncryptionInternal

    {
        /// <summary>Enumerates the possible value of keySource for Encryption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Support.KeySource? KeySource { get; set; }
        /// <summary>Properties of KeyVault</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20220301.IKeyVaultProperties KeyVaultProperty { get; set; }

        string KeyVaultPropertyIdentityClientId { get; set; }
        /// <summary>Name of the Key from KeyVault</summary>
        string KeyVaultPropertyKeyName { get; set; }
        /// <summary>Uri of KeyVault</summary>
        string KeyVaultPropertyKeyVaultUri { get; set; }
        /// <summary>Version of the Key from KeyVault</summary>
        string KeyVaultPropertyKeyVersion { get; set; }

    }
}