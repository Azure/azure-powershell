// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.SoftwarePlanRp.Models.Api20191201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.SoftwarePlanRp.Runtime.Extensions;

    /// <summary>Hybrid use benefit properties</summary>
    public partial class HybridUseBenefitProperties :
        Microsoft.Azure.PowerShell.Cmdlets.SoftwarePlanRp.Models.Api20191201.IHybridUseBenefitProperties,
        Microsoft.Azure.PowerShell.Cmdlets.SoftwarePlanRp.Models.Api20191201.IHybridUseBenefitPropertiesInternal
    {

        /// <summary>Backing field for <see cref="CreatedDate" /> property.</summary>
        private global::System.DateTime? _createdDate;

        /// <summary>Created date</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SoftwarePlanRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.SoftwarePlanRp.PropertyOrigin.Owned)]
        public global::System.DateTime? CreatedDate { get => this._createdDate; }

        /// <summary>Backing field for <see cref="LastUpdatedDate" /> property.</summary>
        private global::System.DateTime? _lastUpdatedDate;

        /// <summary>Last updated date</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SoftwarePlanRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.SoftwarePlanRp.PropertyOrigin.Owned)]
        public global::System.DateTime? LastUpdatedDate { get => this._lastUpdatedDate; }

        /// <summary>Internal Acessors for CreatedDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.SoftwarePlanRp.Models.Api20191201.IHybridUseBenefitPropertiesInternal.CreatedDate { get => this._createdDate; set { {_createdDate = value;} } }

        /// <summary>Internal Acessors for LastUpdatedDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.SoftwarePlanRp.Models.Api20191201.IHybridUseBenefitPropertiesInternal.LastUpdatedDate { get => this._lastUpdatedDate; set { {_lastUpdatedDate = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SoftwarePlanRp.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.SoftwarePlanRp.Models.Api20191201.IHybridUseBenefitPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SoftwarePlanRp.Support.ProvisioningState? _provisioningState;

        /// <summary>Provisioning state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SoftwarePlanRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.SoftwarePlanRp.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.SoftwarePlanRp.Support.ProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Creates an new <see cref="HybridUseBenefitProperties" /> instance.</summary>
        public HybridUseBenefitProperties()
        {

        }
    }
    /// Hybrid use benefit properties
    public partial interface IHybridUseBenefitProperties :
        Microsoft.Azure.PowerShell.Cmdlets.SoftwarePlanRp.Runtime.IJsonSerializable
    {
        /// <summary>Created date</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SoftwarePlanRp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Created date",
        SerializedName = @"createdDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CreatedDate { get;  }
        /// <summary>Last updated date</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SoftwarePlanRp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Last updated date",
        SerializedName = @"lastUpdatedDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastUpdatedDate { get;  }
        /// <summary>Provisioning state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SoftwarePlanRp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Provisioning state",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SoftwarePlanRp.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.SoftwarePlanRp.Support.ProvisioningState? ProvisioningState { get;  }

    }
    /// Hybrid use benefit properties
    internal partial interface IHybridUseBenefitPropertiesInternal

    {
        /// <summary>Created date</summary>
        global::System.DateTime? CreatedDate { get; set; }
        /// <summary>Last updated date</summary>
        global::System.DateTime? LastUpdatedDate { get; set; }
        /// <summary>Provisioning state</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SoftwarePlanRp.Support.ProvisioningState? ProvisioningState { get; set; }

    }
}