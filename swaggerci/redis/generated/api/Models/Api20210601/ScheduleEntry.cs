// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Redis.Runtime.Extensions;

    /// <summary>Patch schedule entry for a Premium Redis Cache.</summary>
    public partial class ScheduleEntry :
        Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IScheduleEntry,
        Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IScheduleEntryInternal
    {

        /// <summary>Backing field for <see cref="DayOfWeek" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.DayOfWeek _dayOfWeek;

        /// <summary>Day of the week when a cache can be patched.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Origin(Microsoft.Azure.PowerShell.Cmdlets.Redis.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.DayOfWeek DayOfWeek { get => this._dayOfWeek; set => this._dayOfWeek = value; }

        /// <summary>Backing field for <see cref="MaintenanceWindow" /> property.</summary>
        private global::System.TimeSpan? _maintenanceWindow;

        /// <summary>ISO8601 timespan specifying how much time cache patching can take.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Origin(Microsoft.Azure.PowerShell.Cmdlets.Redis.PropertyOrigin.Owned)]
        public global::System.TimeSpan? MaintenanceWindow { get => this._maintenanceWindow; set => this._maintenanceWindow = value; }

        /// <summary>Backing field for <see cref="StartHourUtc" /> property.</summary>
        private int _startHourUtc;

        /// <summary>Start hour after which cache patching can start.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Origin(Microsoft.Azure.PowerShell.Cmdlets.Redis.PropertyOrigin.Owned)]
        public int StartHourUtc { get => this._startHourUtc; set => this._startHourUtc = value; }

        /// <summary>Creates an new <see cref="ScheduleEntry" /> instance.</summary>
        public ScheduleEntry()
        {

        }
    }
    /// Patch schedule entry for a Premium Redis Cache.
    public partial interface IScheduleEntry :
        Microsoft.Azure.PowerShell.Cmdlets.Redis.Runtime.IJsonSerializable
    {
        /// <summary>Day of the week when a cache can be patched.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Day of the week when a cache can be patched.",
        SerializedName = @"dayOfWeek",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.DayOfWeek) })]
        Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.DayOfWeek DayOfWeek { get; set; }
        /// <summary>ISO8601 timespan specifying how much time cache patching can take.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ISO8601 timespan specifying how much time cache patching can take. ",
        SerializedName = @"maintenanceWindow",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan? MaintenanceWindow { get; set; }
        /// <summary>Start hour after which cache patching can start.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Start hour after which cache patching can start.",
        SerializedName = @"startHourUtc",
        PossibleTypes = new [] { typeof(int) })]
        int StartHourUtc { get; set; }

    }
    /// Patch schedule entry for a Premium Redis Cache.
    internal partial interface IScheduleEntryInternal

    {
        /// <summary>Day of the week when a cache can be patched.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.DayOfWeek DayOfWeek { get; set; }
        /// <summary>ISO8601 timespan specifying how much time cache patching can take.</summary>
        global::System.TimeSpan? MaintenanceWindow { get; set; }
        /// <summary>Start hour after which cache patching can start.</summary>
        int StartHourUtc { get; set; }

    }
}