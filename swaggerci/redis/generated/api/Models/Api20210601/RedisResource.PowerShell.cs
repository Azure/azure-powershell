// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601
{
    using Microsoft.Azure.PowerShell.Cmdlets.Redis.Runtime.PowerShell;

    /// <summary>A single Redis item in List or Get Operation.</summary>
    [System.ComponentModel.TypeConverter(typeof(RedisResourceTypeConverter))]
    public partial class RedisResource
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.RedisResource"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResource" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResource DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new RedisResource(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.RedisResource"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResource" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResource DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new RedisResource(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="RedisResource" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="RedisResource" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResource FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Redis.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.RedisResource"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal RedisResource(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.RedisPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Identity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).Identity = (Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api40.IManagedServiceIdentity) content.GetValueForProperty("Identity",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).Identity, Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api40.ManagedServiceIdentityTypeConverter.ConvertFrom);
            }
            if (content.Contains("Zone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).Zone = (string[]) content.GetValueForProperty("Zone",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).Zone, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api10.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api10.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api10.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api10.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api10.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api10.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20.ITrackedResourceInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20.ITrackedResourceTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20.ITrackedResourceInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20.TrackedResourceTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20.ITrackedResourceInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20.ITrackedResourceInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("Sku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).Sku = (Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.ISku) content.GetValueForProperty("Sku",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).Sku, Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.SkuTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.ProvisioningState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.ProvisioningState.CreateFrom);
            }
            if (content.Contains("RedisVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).RedisVersion = (string) content.GetValueForProperty("RedisVersion",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).RedisVersion, global::System.Convert.ToString);
            }
            if (content.Contains("EnableNonSslPort"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).EnableNonSslPort = (bool?) content.GetValueForProperty("EnableNonSslPort",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).EnableNonSslPort, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ReplicasPerMaster"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).ReplicasPerMaster = (int?) content.GetValueForProperty("ReplicasPerMaster",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).ReplicasPerMaster, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ReplicasPerPrimary"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).ReplicasPerPrimary = (int?) content.GetValueForProperty("ReplicasPerPrimary",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).ReplicasPerPrimary, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("TenantSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).TenantSetting = (Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesTenantSettings) content.GetValueForProperty("TenantSetting",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).TenantSetting, Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.RedisCommonPropertiesTenantSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("ShardCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).ShardCount = (int?) content.GetValueForProperty("ShardCount",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).ShardCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("MinimumTlsVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).MinimumTlsVersion = (Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.TlsVersion?) content.GetValueForProperty("MinimumTlsVersion",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).MinimumTlsVersion, Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.TlsVersion.CreateFrom);
            }
            if (content.Contains("PublicNetworkAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).PublicNetworkAccess = (Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.PublicNetworkAccess?) content.GetValueForProperty("PublicNetworkAccess",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).PublicNetworkAccess, Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.PublicNetworkAccess.CreateFrom);
            }
            if (content.Contains("RedisConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).RedisConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfiguration) content.GetValueForProperty("RedisConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).RedisConfiguration, Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.RedisCommonPropertiesRedisConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("SkuName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).SkuName = (Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.SkuName) content.GetValueForProperty("SkuName",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).SkuName, Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.SkuName.CreateFrom);
            }
            if (content.Contains("SkuFamily"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).SkuFamily = (Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.SkuFamily) content.GetValueForProperty("SkuFamily",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).SkuFamily, Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.SkuFamily.CreateFrom);
            }
            if (content.Contains("SkuCapacity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).SkuCapacity = (int) content.GetValueForProperty("SkuCapacity",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).SkuCapacity, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SubnetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).SubnetId = (string) content.GetValueForProperty("SubnetId",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).SubnetId, global::System.Convert.ToString);
            }
            if (content.Contains("StaticIP"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).StaticIP = (string) content.GetValueForProperty("StaticIP",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).StaticIP, global::System.Convert.ToString);
            }
            if (content.Contains("AccessKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).AccessKey = (Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisAccessKeys) content.GetValueForProperty("AccessKey",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).AccessKey, Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.RedisAccessKeysTypeConverter.ConvertFrom);
            }
            if (content.Contains("HostName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).HostName = (string) content.GetValueForProperty("HostName",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).HostName, global::System.Convert.ToString);
            }
            if (content.Contains("Port"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).Port = (int?) content.GetValueForProperty("Port",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).Port, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SslPort"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).SslPort = (int?) content.GetValueForProperty("SslPort",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).SslPort, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("LinkedServer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).LinkedServer = (Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisLinkedServer[]) content.GetValueForProperty("LinkedServer",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).LinkedServer, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisLinkedServer>(__y, Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.RedisLinkedServerTypeConverter.ConvertFrom));
            }
            if (content.Contains("Instance"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).Instance = (Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisInstanceDetails[]) content.GetValueForProperty("Instance",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).Instance, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisInstanceDetails>(__y, Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.RedisInstanceDetailsTypeConverter.ConvertFrom));
            }
            if (content.Contains("PrivateEndpointConnection"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).PrivateEndpointConnection = (Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api10.IPrivateEndpointConnection[]) content.GetValueForProperty("PrivateEndpointConnection",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).PrivateEndpointConnection, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api10.IPrivateEndpointConnection>(__y, Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api10.PrivateEndpointConnectionTypeConverter.ConvertFrom));
            }
            if (content.Contains("IdentityPrincipalId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).IdentityPrincipalId = (string) content.GetValueForProperty("IdentityPrincipalId",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).IdentityPrincipalId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityTenantId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).IdentityTenantId = (string) content.GetValueForProperty("IdentityTenantId",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).IdentityTenantId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).IdentityType = (Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.ManagedServiceIdentityType) content.GetValueForProperty("IdentityType",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).IdentityType, Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.ManagedServiceIdentityType.CreateFrom);
            }
            if (content.Contains("IdentityUserAssignedIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).IdentityUserAssignedIdentity = (Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api40.IUserAssignedIdentities) content.GetValueForProperty("IdentityUserAssignedIdentity",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).IdentityUserAssignedIdentity, Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api40.UserAssignedIdentitiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("AccessKeyPrimaryKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).AccessKeyPrimaryKey = (string) content.GetValueForProperty("AccessKeyPrimaryKey",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).AccessKeyPrimaryKey, global::System.Convert.ToString);
            }
            if (content.Contains("AccessKeySecondaryKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).AccessKeySecondaryKey = (string) content.GetValueForProperty("AccessKeySecondaryKey",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).AccessKeySecondaryKey, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.RedisResource"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal RedisResource(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.RedisPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Identity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).Identity = (Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api40.IManagedServiceIdentity) content.GetValueForProperty("Identity",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).Identity, Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api40.ManagedServiceIdentityTypeConverter.ConvertFrom);
            }
            if (content.Contains("Zone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).Zone = (string[]) content.GetValueForProperty("Zone",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).Zone, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api10.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api10.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api10.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api10.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api10.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api10.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20.ITrackedResourceInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20.ITrackedResourceTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20.ITrackedResourceInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20.TrackedResourceTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20.ITrackedResourceInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20.ITrackedResourceInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("Sku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).Sku = (Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.ISku) content.GetValueForProperty("Sku",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).Sku, Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.SkuTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.ProvisioningState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.ProvisioningState.CreateFrom);
            }
            if (content.Contains("RedisVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).RedisVersion = (string) content.GetValueForProperty("RedisVersion",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).RedisVersion, global::System.Convert.ToString);
            }
            if (content.Contains("EnableNonSslPort"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).EnableNonSslPort = (bool?) content.GetValueForProperty("EnableNonSslPort",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).EnableNonSslPort, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ReplicasPerMaster"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).ReplicasPerMaster = (int?) content.GetValueForProperty("ReplicasPerMaster",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).ReplicasPerMaster, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ReplicasPerPrimary"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).ReplicasPerPrimary = (int?) content.GetValueForProperty("ReplicasPerPrimary",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).ReplicasPerPrimary, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("TenantSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).TenantSetting = (Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesTenantSettings) content.GetValueForProperty("TenantSetting",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).TenantSetting, Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.RedisCommonPropertiesTenantSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("ShardCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).ShardCount = (int?) content.GetValueForProperty("ShardCount",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).ShardCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("MinimumTlsVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).MinimumTlsVersion = (Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.TlsVersion?) content.GetValueForProperty("MinimumTlsVersion",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).MinimumTlsVersion, Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.TlsVersion.CreateFrom);
            }
            if (content.Contains("PublicNetworkAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).PublicNetworkAccess = (Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.PublicNetworkAccess?) content.GetValueForProperty("PublicNetworkAccess",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).PublicNetworkAccess, Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.PublicNetworkAccess.CreateFrom);
            }
            if (content.Contains("RedisConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).RedisConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfiguration) content.GetValueForProperty("RedisConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).RedisConfiguration, Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.RedisCommonPropertiesRedisConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("SkuName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).SkuName = (Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.SkuName) content.GetValueForProperty("SkuName",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).SkuName, Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.SkuName.CreateFrom);
            }
            if (content.Contains("SkuFamily"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).SkuFamily = (Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.SkuFamily) content.GetValueForProperty("SkuFamily",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).SkuFamily, Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.SkuFamily.CreateFrom);
            }
            if (content.Contains("SkuCapacity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).SkuCapacity = (int) content.GetValueForProperty("SkuCapacity",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).SkuCapacity, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SubnetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).SubnetId = (string) content.GetValueForProperty("SubnetId",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).SubnetId, global::System.Convert.ToString);
            }
            if (content.Contains("StaticIP"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).StaticIP = (string) content.GetValueForProperty("StaticIP",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).StaticIP, global::System.Convert.ToString);
            }
            if (content.Contains("AccessKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).AccessKey = (Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisAccessKeys) content.GetValueForProperty("AccessKey",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).AccessKey, Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.RedisAccessKeysTypeConverter.ConvertFrom);
            }
            if (content.Contains("HostName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).HostName = (string) content.GetValueForProperty("HostName",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).HostName, global::System.Convert.ToString);
            }
            if (content.Contains("Port"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).Port = (int?) content.GetValueForProperty("Port",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).Port, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SslPort"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).SslPort = (int?) content.GetValueForProperty("SslPort",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).SslPort, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("LinkedServer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).LinkedServer = (Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisLinkedServer[]) content.GetValueForProperty("LinkedServer",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).LinkedServer, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisLinkedServer>(__y, Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.RedisLinkedServerTypeConverter.ConvertFrom));
            }
            if (content.Contains("Instance"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).Instance = (Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisInstanceDetails[]) content.GetValueForProperty("Instance",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).Instance, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisInstanceDetails>(__y, Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.RedisInstanceDetailsTypeConverter.ConvertFrom));
            }
            if (content.Contains("PrivateEndpointConnection"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).PrivateEndpointConnection = (Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api10.IPrivateEndpointConnection[]) content.GetValueForProperty("PrivateEndpointConnection",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).PrivateEndpointConnection, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api10.IPrivateEndpointConnection>(__y, Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api10.PrivateEndpointConnectionTypeConverter.ConvertFrom));
            }
            if (content.Contains("IdentityPrincipalId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).IdentityPrincipalId = (string) content.GetValueForProperty("IdentityPrincipalId",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).IdentityPrincipalId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityTenantId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).IdentityTenantId = (string) content.GetValueForProperty("IdentityTenantId",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).IdentityTenantId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).IdentityType = (Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.ManagedServiceIdentityType) content.GetValueForProperty("IdentityType",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).IdentityType, Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.ManagedServiceIdentityType.CreateFrom);
            }
            if (content.Contains("IdentityUserAssignedIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).IdentityUserAssignedIdentity = (Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api40.IUserAssignedIdentities) content.GetValueForProperty("IdentityUserAssignedIdentity",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).IdentityUserAssignedIdentity, Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api40.UserAssignedIdentitiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("AccessKeyPrimaryKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).AccessKeyPrimaryKey = (string) content.GetValueForProperty("AccessKeyPrimaryKey",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).AccessKeyPrimaryKey, global::System.Convert.ToString);
            }
            if (content.Contains("AccessKeySecondaryKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).AccessKeySecondaryKey = (string) content.GetValueForProperty("AccessKeySecondaryKey",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisResourceInternal)this).AccessKeySecondaryKey, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Redis.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// A single Redis item in List or Get Operation.
    [System.ComponentModel.TypeConverter(typeof(RedisResourceTypeConverter))]
    public partial interface IRedisResource

    {

    }
}