// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Redis.Runtime.Extensions;

    /// <summary>Response to force reboot for Redis cache.</summary>
    public partial class RedisForceRebootResponse :
        Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisForceRebootResponse,
        Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisForceRebootResponseInternal
    {

        /// <summary>Backing field for <see cref="Message" /> property.</summary>
        private string _message;

        /// <summary>Status message</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Origin(Microsoft.Azure.PowerShell.Cmdlets.Redis.PropertyOrigin.Owned)]
        public string Message { get => this._message; }

        /// <summary>Internal Acessors for Message</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisForceRebootResponseInternal.Message { get => this._message; set { {_message = value;} } }

        /// <summary>Creates an new <see cref="RedisForceRebootResponse" /> instance.</summary>
        public RedisForceRebootResponse()
        {

        }
    }
    /// Response to force reboot for Redis cache.
    public partial interface IRedisForceRebootResponse :
        Microsoft.Azure.PowerShell.Cmdlets.Redis.Runtime.IJsonSerializable
    {
        /// <summary>Status message</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Status message",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string Message { get;  }

    }
    /// Response to force reboot for Redis cache.
    internal partial interface IRedisForceRebootResponseInternal

    {
        /// <summary>Status message</summary>
        string Message { get; set; }

    }
}