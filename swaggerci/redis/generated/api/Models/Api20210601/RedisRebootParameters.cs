// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Redis.Runtime.Extensions;

    /// <summary>Specifies which Redis node(s) to reboot.</summary>
    public partial class RedisRebootParameters :
        Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisRebootParameters,
        Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisRebootParametersInternal
    {

        /// <summary>Backing field for <see cref="Port" /> property.</summary>
        private int[] _port;

        /// <summary>
        /// A list of redis instances to reboot, specified by per-instance SSL ports or non-SSL ports.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Origin(Microsoft.Azure.PowerShell.Cmdlets.Redis.PropertyOrigin.Owned)]
        public int[] Port { get => this._port; set => this._port = value; }

        /// <summary>Backing field for <see cref="RebootType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.RebootType? _rebootType;

        /// <summary>Which Redis node(s) to reboot. Depending on this value data loss is possible.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Origin(Microsoft.Azure.PowerShell.Cmdlets.Redis.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.RebootType? RebootType { get => this._rebootType; set => this._rebootType = value; }

        /// <summary>Backing field for <see cref="ShardId" /> property.</summary>
        private int? _shardId;

        /// <summary>If clustering is enabled, the ID of the shard to be rebooted.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Origin(Microsoft.Azure.PowerShell.Cmdlets.Redis.PropertyOrigin.Owned)]
        public int? ShardId { get => this._shardId; set => this._shardId = value; }

        /// <summary>Creates an new <see cref="RedisRebootParameters" /> instance.</summary>
        public RedisRebootParameters()
        {

        }
    }
    /// Specifies which Redis node(s) to reboot.
    public partial interface IRedisRebootParameters :
        Microsoft.Azure.PowerShell.Cmdlets.Redis.Runtime.IJsonSerializable
    {
        /// <summary>
        /// A list of redis instances to reboot, specified by per-instance SSL ports or non-SSL ports.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of redis instances to reboot, specified by per-instance SSL ports or non-SSL ports.",
        SerializedName = @"ports",
        PossibleTypes = new [] { typeof(int) })]
        int[] Port { get; set; }
        /// <summary>Which Redis node(s) to reboot. Depending on this value data loss is possible.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Which Redis node(s) to reboot. Depending on this value data loss is possible.",
        SerializedName = @"rebootType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.RebootType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.RebootType? RebootType { get; set; }
        /// <summary>If clustering is enabled, the ID of the shard to be rebooted.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If clustering is enabled, the ID of the shard to be rebooted.",
        SerializedName = @"shardId",
        PossibleTypes = new [] { typeof(int) })]
        int? ShardId { get; set; }

    }
    /// Specifies which Redis node(s) to reboot.
    internal partial interface IRedisRebootParametersInternal

    {
        /// <summary>
        /// A list of redis instances to reboot, specified by per-instance SSL ports or non-SSL ports.
        /// </summary>
        int[] Port { get; set; }
        /// <summary>Which Redis node(s) to reboot. Depending on this value data loss is possible.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.RebootType? RebootType { get; set; }
        /// <summary>If clustering is enabled, the ID of the shard to be rebooted.</summary>
        int? ShardId { get; set; }

    }
}