// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601
{
    using Microsoft.Azure.PowerShell.Cmdlets.Redis.Runtime.PowerShell;

    /// <summary>Properties supplied to Create Redis operation.</summary>
    [System.ComponentModel.TypeConverter(typeof(RedisCreatePropertiesTypeConverter))]
    public partial class RedisCreateProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.RedisCreateProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCreateProperties" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCreateProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new RedisCreateProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.RedisCreateProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCreateProperties" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCreateProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new RedisCreateProperties(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="RedisCreateProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="RedisCreateProperties" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCreateProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Redis.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.RedisCreateProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal RedisCreateProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Sku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCreatePropertiesInternal)this).Sku = (Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.ISku) content.GetValueForProperty("Sku",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCreatePropertiesInternal)this).Sku, Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.SkuTypeConverter.ConvertFrom);
            }
            if (content.Contains("SubnetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCreatePropertiesInternal)this).SubnetId = (string) content.GetValueForProperty("SubnetId",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCreatePropertiesInternal)this).SubnetId, global::System.Convert.ToString);
            }
            if (content.Contains("StaticIP"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCreatePropertiesInternal)this).StaticIP = (string) content.GetValueForProperty("StaticIP",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCreatePropertiesInternal)this).StaticIP, global::System.Convert.ToString);
            }
            if (content.Contains("RedisVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)this).RedisVersion = (string) content.GetValueForProperty("RedisVersion",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)this).RedisVersion, global::System.Convert.ToString);
            }
            if (content.Contains("EnableNonSslPort"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)this).EnableNonSslPort = (bool?) content.GetValueForProperty("EnableNonSslPort",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)this).EnableNonSslPort, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ReplicasPerMaster"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)this).ReplicasPerMaster = (int?) content.GetValueForProperty("ReplicasPerMaster",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)this).ReplicasPerMaster, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ReplicasPerPrimary"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)this).ReplicasPerPrimary = (int?) content.GetValueForProperty("ReplicasPerPrimary",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)this).ReplicasPerPrimary, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("TenantSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)this).TenantSetting = (Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesTenantSettings) content.GetValueForProperty("TenantSetting",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)this).TenantSetting, Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.RedisCommonPropertiesTenantSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("ShardCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)this).ShardCount = (int?) content.GetValueForProperty("ShardCount",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)this).ShardCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("MinimumTlsVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)this).MinimumTlsVersion = (Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.TlsVersion?) content.GetValueForProperty("MinimumTlsVersion",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)this).MinimumTlsVersion, Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.TlsVersion.CreateFrom);
            }
            if (content.Contains("PublicNetworkAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)this).PublicNetworkAccess = (Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.PublicNetworkAccess?) content.GetValueForProperty("PublicNetworkAccess",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)this).PublicNetworkAccess, Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.PublicNetworkAccess.CreateFrom);
            }
            if (content.Contains("RedisConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)this).RedisConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfiguration) content.GetValueForProperty("RedisConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)this).RedisConfiguration, Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.RedisCommonPropertiesRedisConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("SkuName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCreatePropertiesInternal)this).SkuName = (Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.SkuName) content.GetValueForProperty("SkuName",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCreatePropertiesInternal)this).SkuName, Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.SkuName.CreateFrom);
            }
            if (content.Contains("SkuFamily"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCreatePropertiesInternal)this).SkuFamily = (Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.SkuFamily) content.GetValueForProperty("SkuFamily",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCreatePropertiesInternal)this).SkuFamily, Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.SkuFamily.CreateFrom);
            }
            if (content.Contains("SkuCapacity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCreatePropertiesInternal)this).SkuCapacity = (int) content.GetValueForProperty("SkuCapacity",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCreatePropertiesInternal)this).SkuCapacity, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.RedisCreateProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal RedisCreateProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Sku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCreatePropertiesInternal)this).Sku = (Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.ISku) content.GetValueForProperty("Sku",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCreatePropertiesInternal)this).Sku, Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.SkuTypeConverter.ConvertFrom);
            }
            if (content.Contains("SubnetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCreatePropertiesInternal)this).SubnetId = (string) content.GetValueForProperty("SubnetId",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCreatePropertiesInternal)this).SubnetId, global::System.Convert.ToString);
            }
            if (content.Contains("StaticIP"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCreatePropertiesInternal)this).StaticIP = (string) content.GetValueForProperty("StaticIP",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCreatePropertiesInternal)this).StaticIP, global::System.Convert.ToString);
            }
            if (content.Contains("RedisVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)this).RedisVersion = (string) content.GetValueForProperty("RedisVersion",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)this).RedisVersion, global::System.Convert.ToString);
            }
            if (content.Contains("EnableNonSslPort"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)this).EnableNonSslPort = (bool?) content.GetValueForProperty("EnableNonSslPort",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)this).EnableNonSslPort, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ReplicasPerMaster"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)this).ReplicasPerMaster = (int?) content.GetValueForProperty("ReplicasPerMaster",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)this).ReplicasPerMaster, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ReplicasPerPrimary"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)this).ReplicasPerPrimary = (int?) content.GetValueForProperty("ReplicasPerPrimary",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)this).ReplicasPerPrimary, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("TenantSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)this).TenantSetting = (Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesTenantSettings) content.GetValueForProperty("TenantSetting",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)this).TenantSetting, Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.RedisCommonPropertiesTenantSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("ShardCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)this).ShardCount = (int?) content.GetValueForProperty("ShardCount",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)this).ShardCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("MinimumTlsVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)this).MinimumTlsVersion = (Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.TlsVersion?) content.GetValueForProperty("MinimumTlsVersion",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)this).MinimumTlsVersion, Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.TlsVersion.CreateFrom);
            }
            if (content.Contains("PublicNetworkAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)this).PublicNetworkAccess = (Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.PublicNetworkAccess?) content.GetValueForProperty("PublicNetworkAccess",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)this).PublicNetworkAccess, Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.PublicNetworkAccess.CreateFrom);
            }
            if (content.Contains("RedisConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)this).RedisConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfiguration) content.GetValueForProperty("RedisConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)this).RedisConfiguration, Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.RedisCommonPropertiesRedisConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("SkuName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCreatePropertiesInternal)this).SkuName = (Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.SkuName) content.GetValueForProperty("SkuName",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCreatePropertiesInternal)this).SkuName, Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.SkuName.CreateFrom);
            }
            if (content.Contains("SkuFamily"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCreatePropertiesInternal)this).SkuFamily = (Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.SkuFamily) content.GetValueForProperty("SkuFamily",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCreatePropertiesInternal)this).SkuFamily, Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.SkuFamily.CreateFrom);
            }
            if (content.Contains("SkuCapacity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCreatePropertiesInternal)this).SkuCapacity = (int) content.GetValueForProperty("SkuCapacity",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCreatePropertiesInternal)this).SkuCapacity, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Redis.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Properties supplied to Create Redis operation.
    [System.ComponentModel.TypeConverter(typeof(RedisCreatePropertiesTypeConverter))]
    public partial interface IRedisCreateProperties

    {

    }
}