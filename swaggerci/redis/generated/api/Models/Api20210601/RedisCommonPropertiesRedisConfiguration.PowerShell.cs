// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601
{
    using Microsoft.Azure.PowerShell.Cmdlets.Redis.Runtime.PowerShell;

    /// <summary>
    /// All Redis Settings. Few possible keys: rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value
    /// etc.
    /// </summary>
    [System.ComponentModel.TypeConverter(typeof(RedisCommonPropertiesRedisConfigurationTypeConverter))]
    public partial class RedisCommonPropertiesRedisConfiguration
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.RedisCommonPropertiesRedisConfiguration"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfiguration"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfiguration DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new RedisCommonPropertiesRedisConfiguration(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.RedisCommonPropertiesRedisConfiguration"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfiguration"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfiguration DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new RedisCommonPropertiesRedisConfiguration(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="RedisCommonPropertiesRedisConfiguration" />, deserializing the content from a json
        /// string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>
        /// an instance of the <see cref="RedisCommonPropertiesRedisConfiguration" /> model class.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfiguration FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Redis.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.RedisCommonPropertiesRedisConfiguration"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal RedisCommonPropertiesRedisConfiguration(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("RdbBackupEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).RdbBackupEnabled = (string) content.GetValueForProperty("RdbBackupEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).RdbBackupEnabled, global::System.Convert.ToString);
            }
            if (content.Contains("RdbBackupFrequency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).RdbBackupFrequency = (string) content.GetValueForProperty("RdbBackupFrequency",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).RdbBackupFrequency, global::System.Convert.ToString);
            }
            if (content.Contains("RdbBackupMaxSnapshotCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).RdbBackupMaxSnapshotCount = (string) content.GetValueForProperty("RdbBackupMaxSnapshotCount",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).RdbBackupMaxSnapshotCount, global::System.Convert.ToString);
            }
            if (content.Contains("RdbStorageConnectionString"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).RdbStorageConnectionString = (string) content.GetValueForProperty("RdbStorageConnectionString",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).RdbStorageConnectionString, global::System.Convert.ToString);
            }
            if (content.Contains("AofStorageConnectionString0"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).AofStorageConnectionString0 = (string) content.GetValueForProperty("AofStorageConnectionString0",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).AofStorageConnectionString0, global::System.Convert.ToString);
            }
            if (content.Contains("AofStorageConnectionString1"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).AofStorageConnectionString1 = (string) content.GetValueForProperty("AofStorageConnectionString1",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).AofStorageConnectionString1, global::System.Convert.ToString);
            }
            if (content.Contains("MaxfragmentationmemoryReserved"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).MaxfragmentationmemoryReserved = (string) content.GetValueForProperty("MaxfragmentationmemoryReserved",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).MaxfragmentationmemoryReserved, global::System.Convert.ToString);
            }
            if (content.Contains("MaxmemoryPolicy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).MaxmemoryPolicy = (string) content.GetValueForProperty("MaxmemoryPolicy",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).MaxmemoryPolicy, global::System.Convert.ToString);
            }
            if (content.Contains("MaxmemoryReserved"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).MaxmemoryReserved = (string) content.GetValueForProperty("MaxmemoryReserved",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).MaxmemoryReserved, global::System.Convert.ToString);
            }
            if (content.Contains("MaxmemoryDelta"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).MaxmemoryDelta = (string) content.GetValueForProperty("MaxmemoryDelta",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).MaxmemoryDelta, global::System.Convert.ToString);
            }
            if (content.Contains("Maxclient"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).Maxclient = (string) content.GetValueForProperty("Maxclient",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).Maxclient, global::System.Convert.ToString);
            }
            if (content.Contains("PreferredDataArchiveAuthMethod"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).PreferredDataArchiveAuthMethod = (string) content.GetValueForProperty("PreferredDataArchiveAuthMethod",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).PreferredDataArchiveAuthMethod, global::System.Convert.ToString);
            }
            if (content.Contains("PreferredDataPersistenceAuthMethod"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).PreferredDataPersistenceAuthMethod = (string) content.GetValueForProperty("PreferredDataPersistenceAuthMethod",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).PreferredDataPersistenceAuthMethod, global::System.Convert.ToString);
            }
            if (content.Contains("ZonalConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).ZonalConfiguration = (string) content.GetValueForProperty("ZonalConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).ZonalConfiguration, global::System.Convert.ToString);
            }
            // this type is a dictionary; copy elements from source to here.
            CopyFrom(content);
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.RedisCommonPropertiesRedisConfiguration"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal RedisCommonPropertiesRedisConfiguration(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("RdbBackupEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).RdbBackupEnabled = (string) content.GetValueForProperty("RdbBackupEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).RdbBackupEnabled, global::System.Convert.ToString);
            }
            if (content.Contains("RdbBackupFrequency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).RdbBackupFrequency = (string) content.GetValueForProperty("RdbBackupFrequency",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).RdbBackupFrequency, global::System.Convert.ToString);
            }
            if (content.Contains("RdbBackupMaxSnapshotCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).RdbBackupMaxSnapshotCount = (string) content.GetValueForProperty("RdbBackupMaxSnapshotCount",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).RdbBackupMaxSnapshotCount, global::System.Convert.ToString);
            }
            if (content.Contains("RdbStorageConnectionString"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).RdbStorageConnectionString = (string) content.GetValueForProperty("RdbStorageConnectionString",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).RdbStorageConnectionString, global::System.Convert.ToString);
            }
            if (content.Contains("AofStorageConnectionString0"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).AofStorageConnectionString0 = (string) content.GetValueForProperty("AofStorageConnectionString0",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).AofStorageConnectionString0, global::System.Convert.ToString);
            }
            if (content.Contains("AofStorageConnectionString1"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).AofStorageConnectionString1 = (string) content.GetValueForProperty("AofStorageConnectionString1",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).AofStorageConnectionString1, global::System.Convert.ToString);
            }
            if (content.Contains("MaxfragmentationmemoryReserved"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).MaxfragmentationmemoryReserved = (string) content.GetValueForProperty("MaxfragmentationmemoryReserved",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).MaxfragmentationmemoryReserved, global::System.Convert.ToString);
            }
            if (content.Contains("MaxmemoryPolicy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).MaxmemoryPolicy = (string) content.GetValueForProperty("MaxmemoryPolicy",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).MaxmemoryPolicy, global::System.Convert.ToString);
            }
            if (content.Contains("MaxmemoryReserved"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).MaxmemoryReserved = (string) content.GetValueForProperty("MaxmemoryReserved",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).MaxmemoryReserved, global::System.Convert.ToString);
            }
            if (content.Contains("MaxmemoryDelta"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).MaxmemoryDelta = (string) content.GetValueForProperty("MaxmemoryDelta",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).MaxmemoryDelta, global::System.Convert.ToString);
            }
            if (content.Contains("Maxclient"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).Maxclient = (string) content.GetValueForProperty("Maxclient",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).Maxclient, global::System.Convert.ToString);
            }
            if (content.Contains("PreferredDataArchiveAuthMethod"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).PreferredDataArchiveAuthMethod = (string) content.GetValueForProperty("PreferredDataArchiveAuthMethod",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).PreferredDataArchiveAuthMethod, global::System.Convert.ToString);
            }
            if (content.Contains("PreferredDataPersistenceAuthMethod"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).PreferredDataPersistenceAuthMethod = (string) content.GetValueForProperty("PreferredDataPersistenceAuthMethod",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).PreferredDataPersistenceAuthMethod, global::System.Convert.ToString);
            }
            if (content.Contains("ZonalConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).ZonalConfiguration = (string) content.GetValueForProperty("ZonalConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfigurationInternal)this).ZonalConfiguration, global::System.Convert.ToString);
            }
            // this type is a dictionary; copy elements from source to here.
            CopyFrom(content);
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Redis.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// All Redis Settings. Few possible keys: rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value
    /// etc.
    [System.ComponentModel.TypeConverter(typeof(RedisCommonPropertiesRedisConfigurationTypeConverter))]
    public partial interface IRedisCommonPropertiesRedisConfiguration

    {

    }
}