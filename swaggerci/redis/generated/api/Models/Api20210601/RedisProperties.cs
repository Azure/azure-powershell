// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Redis.Runtime.Extensions;

    /// <summary>Properties of the redis cache.</summary>
    public partial class RedisProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisPropertiesInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Redis.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCreateProperties"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCreateProperties __redisCreateProperties = new Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.RedisCreateProperties();

        /// <summary>Backing field for <see cref="AccessKey" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisAccessKeys _accessKey;

        /// <summary>
        /// The keys of the Redis cache - not set if this object is not the response to Create or Update redis cache
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Origin(Microsoft.Azure.PowerShell.Cmdlets.Redis.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisAccessKeys AccessKey { get => (this._accessKey = this._accessKey ?? new Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.RedisAccessKeys()); }

        /// <summary>The current primary key that clients can use to authenticate with Redis cache.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Origin(Microsoft.Azure.PowerShell.Cmdlets.Redis.PropertyOrigin.Inlined)]
        public string AccessKeyPrimaryKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisAccessKeysInternal)AccessKey).PrimaryKey; }

        /// <summary>
        /// The current secondary key that clients can use to authenticate with Redis cache.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Origin(Microsoft.Azure.PowerShell.Cmdlets.Redis.PropertyOrigin.Inlined)]
        public string AccessKeySecondaryKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisAccessKeysInternal)AccessKey).SecondaryKey; }

        /// <summary>Specifies whether the non-ssl Redis server port (6379) is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Origin(Microsoft.Azure.PowerShell.Cmdlets.Redis.PropertyOrigin.Inherited)]
        public bool? EnableNonSslPort { get => ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)__redisCreateProperties).EnableNonSslPort; set => ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)__redisCreateProperties).EnableNonSslPort = value ?? default(bool); }

        /// <summary>Backing field for <see cref="HostName" /> property.</summary>
        private string _hostName;

        /// <summary>Redis host name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Origin(Microsoft.Azure.PowerShell.Cmdlets.Redis.PropertyOrigin.Owned)]
        public string HostName { get => this._hostName; }

        /// <summary>Backing field for <see cref="Instance" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisInstanceDetails[] _instance;

        /// <summary>List of the Redis instances associated with the cache</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Origin(Microsoft.Azure.PowerShell.Cmdlets.Redis.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisInstanceDetails[] Instance { get => this._instance; }

        /// <summary>Backing field for <see cref="LinkedServer" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisLinkedServer[] _linkedServer;

        /// <summary>List of the linked servers associated with the cache</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Origin(Microsoft.Azure.PowerShell.Cmdlets.Redis.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisLinkedServer[] LinkedServer { get => this._linkedServer; }

        /// <summary>Internal Acessors for AccessKey</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisAccessKeys Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisPropertiesInternal.AccessKey { get => (this._accessKey = this._accessKey ?? new Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.RedisAccessKeys()); set { {_accessKey = value;} } }

        /// <summary>Internal Acessors for AccessKeyPrimaryKey</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisPropertiesInternal.AccessKeyPrimaryKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisAccessKeysInternal)AccessKey).PrimaryKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisAccessKeysInternal)AccessKey).PrimaryKey = value; }

        /// <summary>Internal Acessors for AccessKeySecondaryKey</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisPropertiesInternal.AccessKeySecondaryKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisAccessKeysInternal)AccessKey).SecondaryKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisAccessKeysInternal)AccessKey).SecondaryKey = value; }

        /// <summary>Internal Acessors for HostName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisPropertiesInternal.HostName { get => this._hostName; set { {_hostName = value;} } }

        /// <summary>Internal Acessors for Instance</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisInstanceDetails[] Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisPropertiesInternal.Instance { get => this._instance; set { {_instance = value;} } }

        /// <summary>Internal Acessors for LinkedServer</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisLinkedServer[] Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisPropertiesInternal.LinkedServer { get => this._linkedServer; set { {_linkedServer = value;} } }

        /// <summary>Internal Acessors for Port</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisPropertiesInternal.Port { get => this._port; set { {_port = value;} } }

        /// <summary>Internal Acessors for PrivateEndpointConnection</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api10.IPrivateEndpointConnection[] Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisPropertiesInternal.PrivateEndpointConnection { get => this._privateEndpointConnection; set { {_privateEndpointConnection = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for SslPort</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisPropertiesInternal.SslPort { get => this._sslPort; set { {_sslPort = value;} } }

        /// <summary>
        /// Optional: requires clients to use a specified TLS version (or higher) to connect (e,g, '1.0', '1.1', '1.2')
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Origin(Microsoft.Azure.PowerShell.Cmdlets.Redis.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.TlsVersion? MinimumTlsVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)__redisCreateProperties).MinimumTlsVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)__redisCreateProperties).MinimumTlsVersion = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.TlsVersion)""); }

        /// <summary>Backing field for <see cref="Port" /> property.</summary>
        private int? _port;

        /// <summary>Redis non-SSL port.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Origin(Microsoft.Azure.PowerShell.Cmdlets.Redis.PropertyOrigin.Owned)]
        public int? Port { get => this._port; }

        /// <summary>Backing field for <see cref="PrivateEndpointConnection" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api10.IPrivateEndpointConnection[] _privateEndpointConnection;

        /// <summary>List of private endpoint connection associated with the specified redis cache</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Origin(Microsoft.Azure.PowerShell.Cmdlets.Redis.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api10.IPrivateEndpointConnection[] PrivateEndpointConnection { get => this._privateEndpointConnection; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.ProvisioningState? _provisioningState;

        /// <summary>Redis instance provisioning status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Origin(Microsoft.Azure.PowerShell.Cmdlets.Redis.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.ProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>
        /// Whether or not public endpoint access is allowed for this cache. Value is optional but if passed in, must be 'Enabled'
        /// or 'Disabled'. If 'Disabled', private endpoints are the exclusive access method. Default value is 'Enabled'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Origin(Microsoft.Azure.PowerShell.Cmdlets.Redis.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.PublicNetworkAccess? PublicNetworkAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)__redisCreateProperties).PublicNetworkAccess; set => ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)__redisCreateProperties).PublicNetworkAccess = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.PublicNetworkAccess)""); }

        /// <summary>
        /// All Redis Settings. Few possible keys: rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value
        /// etc.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Origin(Microsoft.Azure.PowerShell.Cmdlets.Redis.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesRedisConfiguration RedisConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)__redisCreateProperties).RedisConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)__redisCreateProperties).RedisConfiguration = value ?? null /* model class */; }

        /// <summary>
        /// Redis version. Only major version will be used in PUT/PATCH request with current valid values: (4, 6)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Origin(Microsoft.Azure.PowerShell.Cmdlets.Redis.PropertyOrigin.Inherited)]
        public string RedisVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)__redisCreateProperties).RedisVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)__redisCreateProperties).RedisVersion = value ?? null; }

        /// <summary>The number of replicas to be created per primary.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Origin(Microsoft.Azure.PowerShell.Cmdlets.Redis.PropertyOrigin.Inherited)]
        public int? ReplicasPerMaster { get => ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)__redisCreateProperties).ReplicasPerMaster; set => ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)__redisCreateProperties).ReplicasPerMaster = value ?? default(int); }

        /// <summary>The number of replicas to be created per primary.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Origin(Microsoft.Azure.PowerShell.Cmdlets.Redis.PropertyOrigin.Inherited)]
        public int? ReplicasPerPrimary { get => ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)__redisCreateProperties).ReplicasPerPrimary; set => ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)__redisCreateProperties).ReplicasPerPrimary = value ?? default(int); }

        /// <summary>The number of shards to be created on a Premium Cluster Cache.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Origin(Microsoft.Azure.PowerShell.Cmdlets.Redis.PropertyOrigin.Inherited)]
        public int? ShardCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)__redisCreateProperties).ShardCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)__redisCreateProperties).ShardCount = value ?? default(int); }

        /// <summary>The SKU of the Redis cache to deploy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Origin(Microsoft.Azure.PowerShell.Cmdlets.Redis.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.ISku Sku { get => ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCreatePropertiesInternal)__redisCreateProperties).Sku; set => ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCreatePropertiesInternal)__redisCreateProperties).Sku = value ; }

        /// <summary>
        /// The size of the Redis cache to deploy. Valid values: for C (Basic/Standard) family (0, 1, 2, 3, 4, 5, 6), for P (Premium)
        /// family (1, 2, 3, 4).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Origin(Microsoft.Azure.PowerShell.Cmdlets.Redis.PropertyOrigin.Inherited)]
        public int SkuCapacity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCreatePropertiesInternal)__redisCreateProperties).SkuCapacity; set => ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCreatePropertiesInternal)__redisCreateProperties).SkuCapacity = value ; }

        /// <summary>The SKU family to use. Valid values: (C, P). (C = Basic/Standard, P = Premium).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Origin(Microsoft.Azure.PowerShell.Cmdlets.Redis.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.SkuFamily SkuFamily { get => ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCreatePropertiesInternal)__redisCreateProperties).SkuFamily; set => ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCreatePropertiesInternal)__redisCreateProperties).SkuFamily = value ; }

        /// <summary>The type of Redis cache to deploy. Valid values: (Basic, Standard, Premium)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Origin(Microsoft.Azure.PowerShell.Cmdlets.Redis.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.SkuName SkuName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCreatePropertiesInternal)__redisCreateProperties).SkuName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCreatePropertiesInternal)__redisCreateProperties).SkuName = value ; }

        /// <summary>Backing field for <see cref="SslPort" /> property.</summary>
        private int? _sslPort;

        /// <summary>Redis SSL port.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Origin(Microsoft.Azure.PowerShell.Cmdlets.Redis.PropertyOrigin.Owned)]
        public int? SslPort { get => this._sslPort; }

        /// <summary>
        /// Static IP address. Optionally, may be specified when deploying a Redis cache inside an existing Azure Virtual Network;
        /// auto assigned by default.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Origin(Microsoft.Azure.PowerShell.Cmdlets.Redis.PropertyOrigin.Inherited)]
        public string StaticIP { get => ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCreatePropertiesInternal)__redisCreateProperties).StaticIP; set => ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCreatePropertiesInternal)__redisCreateProperties).StaticIP = value ?? null; }

        /// <summary>
        /// The full resource ID of a subnet in a virtual network to deploy the Redis cache in. Example format: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/subnet1
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Origin(Microsoft.Azure.PowerShell.Cmdlets.Redis.PropertyOrigin.Inherited)]
        public string SubnetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCreatePropertiesInternal)__redisCreateProperties).SubnetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCreatePropertiesInternal)__redisCreateProperties).SubnetId = value ?? null; }

        /// <summary>A dictionary of tenant settings</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Origin(Microsoft.Azure.PowerShell.Cmdlets.Redis.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesTenantSettings TenantSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)__redisCreateProperties).TenantSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCommonPropertiesInternal)__redisCreateProperties).TenantSetting = value ?? null /* model class */; }

        /// <summary>Creates an new <see cref="RedisProperties" /> instance.</summary>
        public RedisProperties()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Redis.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Redis.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__redisCreateProperties), __redisCreateProperties);
            await eventListener.AssertObjectIsValid(nameof(__redisCreateProperties), __redisCreateProperties);
        }
    }
    /// Properties of the redis cache.
    public partial interface IRedisProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Redis.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCreateProperties
    {
        /// <summary>The current primary key that clients can use to authenticate with Redis cache.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The current primary key that clients can use to authenticate with Redis cache.",
        SerializedName = @"primaryKey",
        PossibleTypes = new [] { typeof(string) })]
        string AccessKeyPrimaryKey { get;  }
        /// <summary>
        /// The current secondary key that clients can use to authenticate with Redis cache.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The current secondary key that clients can use to authenticate with Redis cache.",
        SerializedName = @"secondaryKey",
        PossibleTypes = new [] { typeof(string) })]
        string AccessKeySecondaryKey { get;  }
        /// <summary>Redis host name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Redis host name.",
        SerializedName = @"hostName",
        PossibleTypes = new [] { typeof(string) })]
        string HostName { get;  }
        /// <summary>List of the Redis instances associated with the cache</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of the Redis instances associated with the cache",
        SerializedName = @"instances",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisInstanceDetails) })]
        Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisInstanceDetails[] Instance { get;  }
        /// <summary>List of the linked servers associated with the cache</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of the linked servers associated with the cache",
        SerializedName = @"linkedServers",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisLinkedServer) })]
        Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisLinkedServer[] LinkedServer { get;  }
        /// <summary>Redis non-SSL port.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Redis non-SSL port.",
        SerializedName = @"port",
        PossibleTypes = new [] { typeof(int) })]
        int? Port { get;  }
        /// <summary>List of private endpoint connection associated with the specified redis cache</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of private endpoint connection associated with the specified redis cache",
        SerializedName = @"privateEndpointConnections",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api10.IPrivateEndpointConnection) })]
        Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api10.IPrivateEndpointConnection[] PrivateEndpointConnection { get;  }
        /// <summary>Redis instance provisioning status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Redis instance provisioning status.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>Redis SSL port.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Redis SSL port.",
        SerializedName = @"sslPort",
        PossibleTypes = new [] { typeof(int) })]
        int? SslPort { get;  }

    }
    /// Properties of the redis cache.
    internal partial interface IRedisPropertiesInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisCreatePropertiesInternal
    {
        /// <summary>
        /// The keys of the Redis cache - not set if this object is not the response to Create or Update redis cache
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisAccessKeys AccessKey { get; set; }
        /// <summary>The current primary key that clients can use to authenticate with Redis cache.</summary>
        string AccessKeyPrimaryKey { get; set; }
        /// <summary>
        /// The current secondary key that clients can use to authenticate with Redis cache.
        /// </summary>
        string AccessKeySecondaryKey { get; set; }
        /// <summary>Redis host name.</summary>
        string HostName { get; set; }
        /// <summary>List of the Redis instances associated with the cache</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisInstanceDetails[] Instance { get; set; }
        /// <summary>List of the linked servers associated with the cache</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20210601.IRedisLinkedServer[] LinkedServer { get; set; }
        /// <summary>Redis non-SSL port.</summary>
        int? Port { get; set; }
        /// <summary>List of private endpoint connection associated with the specified redis cache</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api10.IPrivateEndpointConnection[] PrivateEndpointConnection { get; set; }
        /// <summary>Redis instance provisioning status.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Redis.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>Redis SSL port.</summary>
        int? SslPort { get; set; }

    }
}