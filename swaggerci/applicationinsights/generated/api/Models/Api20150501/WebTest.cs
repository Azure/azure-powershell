// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Extensions;

    /// <summary>An Application Insights web test definition.</summary>
    public partial class WebTest :
        Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebTest,
        Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebTestInternal,
        Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebtestsResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebtestsResource __webtestsResource = new Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.WebtestsResource();

        /// <summary>The XML specification of a WebTest to run against an application.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Inlined)]
        public string ConfigurationWebTest { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebTestPropertiesInternal)Property).ConfigurationWebTest; set => ((Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebTestPropertiesInternal)Property).ConfigurationWebTest = value ?? null; }

        /// <summary>Purpose/user defined descriptive test for this WebTest.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Inlined)]
        public string Description { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebTestPropertiesInternal)Property).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebTestPropertiesInternal)Property).Description = value ?? null; }

        /// <summary>Is the test actively being monitored.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Inlined)]
        public bool? Enabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebTestPropertiesInternal)Property).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebTestPropertiesInternal)Property).Enabled = value ?? default(bool); }

        /// <summary>Interval in seconds between test runs for this WebTest. Default value is 300.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Inlined)]
        public int? Frequency { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebTestPropertiesInternal)Property).Frequency; set => ((Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebTestPropertiesInternal)Property).Frequency = value ?? default(int); }

        /// <summary>Azure resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebtestsResourceInternal)__webtestsResource).Id; }

        /// <summary>Backing field for <see cref="Kind" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Support.WebTestKind? _kind;

        /// <summary>
        /// The kind of web test that this web test watches. Choices are ping and multistep.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Support.WebTestKind? Kind { get => this._kind; set => this._kind = value; }

        /// <summary>Resource location</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebtestsResourceInternal)__webtestsResource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebtestsResourceInternal)__webtestsResource).Location = value ; }

        /// <summary>Internal Acessors for Configuration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebTestPropertiesConfiguration Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebTestInternal.Configuration { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebTestPropertiesInternal)Property).Configuration; set => ((Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebTestPropertiesInternal)Property).Configuration = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebTestProperties Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebTestInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.WebTestProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebTestInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebTestPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebTestPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebtestsResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebtestsResourceInternal)__webtestsResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebtestsResourceInternal)__webtestsResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebtestsResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebtestsResourceInternal)__webtestsResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebtestsResourceInternal)__webtestsResource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebtestsResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebtestsResourceInternal)__webtestsResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebtestsResourceInternal)__webtestsResource).Type = value; }

        /// <summary>Azure resource name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebtestsResourceInternal)__webtestsResource).Name; }

        /// <summary>
        /// A list of where to physically run the tests from to give global coverage for accessibility of your application.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebTestGeolocation[] PropertiesLocations { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebTestPropertiesInternal)Property).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebTestPropertiesInternal)Property).Location = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebTestProperties _property;

        /// <summary>Metadata describing a web test for an Azure resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebTestProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.WebTestProperties()); set => this._property = value; }

        /// <summary>
        /// Current state of this component, whether or not is has been provisioned within the resource group it is defined. Users
        /// cannot change this value but are able to read from it. Values will include Succeeded, Deploying, Canceled, and Failed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebTestPropertiesInternal)Property).ProvisioningState; }

        /// <summary>Allow for retries should this WebTest fail.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Inlined)]
        public bool? RetryEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebTestPropertiesInternal)Property).RetryEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebTestPropertiesInternal)Property).RetryEnabled = value ?? default(bool); }

        /// <summary>Unique ID of this WebTest. This is typically the same value as the Name field.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Inlined)]
        public string SyntheticMonitorId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebTestPropertiesInternal)Property).SyntheticMonitorId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebTestPropertiesInternal)Property).SyntheticMonitorId = value ?? null; }

        /// <summary>Resource tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebtestsResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebtestsResourceInternal)__webtestsResource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebtestsResourceInternal)__webtestsResource).Tag = value ?? null /* model class */; }

        /// <summary>Seconds until this WebTest will timeout and fail. Default value is 30.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Inlined)]
        public int? Timeout { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebTestPropertiesInternal)Property).Timeout; set => ((Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebTestPropertiesInternal)Property).Timeout = value ?? default(int); }

        /// <summary>Azure resource type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebtestsResourceInternal)__webtestsResource).Type; }

        /// <summary>The kind of web test this is, valid choices are ping and multistep.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Support.WebTestKind? WebTestKind { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebTestPropertiesInternal)Property).WebTestKind; set => ((Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebTestPropertiesInternal)Property).WebTestKind = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Support.WebTestKind)""); }

        /// <summary>User defined name if this WebTest.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Inlined)]
        public string WebTestName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebTestPropertiesInternal)Property).WebTestName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebTestPropertiesInternal)Property).WebTestName = value ?? null; }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__webtestsResource), __webtestsResource);
            await eventListener.AssertObjectIsValid(nameof(__webtestsResource), __webtestsResource);
        }

        /// <summary>Creates an new <see cref="WebTest" /> instance.</summary>
        public WebTest()
        {

        }
    }
    /// An Application Insights web test definition.
    public partial interface IWebTest :
        Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebtestsResource
    {
        /// <summary>The XML specification of a WebTest to run against an application.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The XML specification of a WebTest to run against an application.",
        SerializedName = @"WebTest",
        PossibleTypes = new [] { typeof(string) })]
        string ConfigurationWebTest { get; set; }
        /// <summary>Purpose/user defined descriptive test for this WebTest.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Purpose/user defined descriptive test for this WebTest.",
        SerializedName = @"Description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>Is the test actively being monitored.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Is the test actively being monitored.",
        SerializedName = @"Enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Enabled { get; set; }
        /// <summary>Interval in seconds between test runs for this WebTest. Default value is 300.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Interval in seconds between test runs for this WebTest. Default value is 300.",
        SerializedName = @"Frequency",
        PossibleTypes = new [] { typeof(int) })]
        int? Frequency { get; set; }
        /// <summary>
        /// The kind of web test that this web test watches. Choices are ping and multistep.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The kind of web test that this web test watches. Choices are ping and multistep.",
        SerializedName = @"kind",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Support.WebTestKind) })]
        Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Support.WebTestKind? Kind { get; set; }
        /// <summary>
        /// A list of where to physically run the tests from to give global coverage for accessibility of your application.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of where to physically run the tests from to give global coverage for accessibility of your application.",
        SerializedName = @"Locations",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebTestGeolocation) })]
        Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebTestGeolocation[] PropertiesLocations { get; set; }
        /// <summary>
        /// Current state of this component, whether or not is has been provisioned within the resource group it is defined. Users
        /// cannot change this value but are able to read from it. Values will include Succeeded, Deploying, Canceled, and Failed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Current state of this component, whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Succeeded, Deploying, Canceled, and Failed.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>Allow for retries should this WebTest fail.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Allow for retries should this WebTest fail.",
        SerializedName = @"RetryEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? RetryEnabled { get; set; }
        /// <summary>Unique ID of this WebTest. This is typically the same value as the Name field.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Unique ID of this WebTest. This is typically the same value as the Name field.",
        SerializedName = @"SyntheticMonitorId",
        PossibleTypes = new [] { typeof(string) })]
        string SyntheticMonitorId { get; set; }
        /// <summary>Seconds until this WebTest will timeout and fail. Default value is 30.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Seconds until this WebTest will timeout and fail. Default value is 30.",
        SerializedName = @"Timeout",
        PossibleTypes = new [] { typeof(int) })]
        int? Timeout { get; set; }
        /// <summary>The kind of web test this is, valid choices are ping and multistep.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The kind of web test this is, valid choices are ping and multistep.",
        SerializedName = @"Kind",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Support.WebTestKind) })]
        Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Support.WebTestKind? WebTestKind { get; set; }
        /// <summary>User defined name if this WebTest.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"User defined name if this WebTest.",
        SerializedName = @"Name",
        PossibleTypes = new [] { typeof(string) })]
        string WebTestName { get; set; }

    }
    /// An Application Insights web test definition.
    internal partial interface IWebTestInternal :
        Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebtestsResourceInternal
    {
        /// <summary>An XML configuration specification for a WebTest.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebTestPropertiesConfiguration Configuration { get; set; }
        /// <summary>The XML specification of a WebTest to run against an application.</summary>
        string ConfigurationWebTest { get; set; }
        /// <summary>Purpose/user defined descriptive test for this WebTest.</summary>
        string Description { get; set; }
        /// <summary>Is the test actively being monitored.</summary>
        bool? Enabled { get; set; }
        /// <summary>Interval in seconds between test runs for this WebTest. Default value is 300.</summary>
        int? Frequency { get; set; }
        /// <summary>
        /// The kind of web test that this web test watches. Choices are ping and multistep.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Support.WebTestKind? Kind { get; set; }
        /// <summary>
        /// A list of where to physically run the tests from to give global coverage for accessibility of your application.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebTestGeolocation[] PropertiesLocations { get; set; }
        /// <summary>Metadata describing a web test for an Azure resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IWebTestProperties Property { get; set; }
        /// <summary>
        /// Current state of this component, whether or not is has been provisioned within the resource group it is defined. Users
        /// cannot change this value but are able to read from it. Values will include Succeeded, Deploying, Canceled, and Failed.
        /// </summary>
        string ProvisioningState { get; set; }
        /// <summary>Allow for retries should this WebTest fail.</summary>
        bool? RetryEnabled { get; set; }
        /// <summary>Unique ID of this WebTest. This is typically the same value as the Name field.</summary>
        string SyntheticMonitorId { get; set; }
        /// <summary>Seconds until this WebTest will timeout and fail. Default value is 30.</summary>
        int? Timeout { get; set; }
        /// <summary>The kind of web test this is, valid choices are ping and multistep.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Support.WebTestKind? WebTestKind { get; set; }
        /// <summary>User defined name if this WebTest.</summary>
        string WebTestName { get; set; }

    }
}