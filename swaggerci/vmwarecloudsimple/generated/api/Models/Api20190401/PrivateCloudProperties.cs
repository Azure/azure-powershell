// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Extensions;

    /// <summary>Properties of private</summary>
    public partial class PrivateCloudProperties :
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudProperties,
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AvailabilityZoneId" /> property.</summary>
        private string _availabilityZoneId;

        /// <summary>Availability Zone id, e.g. "az1"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string AvailabilityZoneId { get => this._availabilityZoneId; set => this._availabilityZoneId = value; }

        /// <summary>Backing field for <see cref="AvailabilityZoneName" /> property.</summary>
        private string _availabilityZoneName;

        /// <summary>Availability Zone name, e.g. "Availability Zone 1"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string AvailabilityZoneName { get => this._availabilityZoneName; set => this._availabilityZoneName = value; }

        /// <summary>Backing field for <see cref="ClustersNumber" /> property.</summary>
        private int? _clustersNumber;

        /// <summary>Number of clusters</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public int? ClustersNumber { get => this._clustersNumber; set => this._clustersNumber = value; }

        /// <summary>Backing field for <see cref="CreatedBy" /> property.</summary>
        private string _createdBy;

        /// <summary>User's emails who created cloud</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string CreatedBy { get => this._createdBy; set => this._createdBy = value; }

        /// <summary>Backing field for <see cref="CreatedOn" /> property.</summary>
        private global::System.DateTime? _createdOn;

        /// <summary>When private cloud was created</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public global::System.DateTime? CreatedOn { get => this._createdOn; set => this._createdOn = value; }

        /// <summary>Backing field for <see cref="DnsServer" /> property.</summary>
        private string[] _dnsServer;

        /// <summary>Array of DNS servers</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string[] DnsServer { get => this._dnsServer; set => this._dnsServer = value; }

        /// <summary>Backing field for <see cref="Expire" /> property.</summary>
        private string _expire;

        /// <summary>Expiration date of PC</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string Expire { get => this._expire; set => this._expire = value; }

        /// <summary>Backing field for <see cref="NsxType" /> property.</summary>
        private string _nsxType;

        /// <summary>Nsx Type, e.g. "Advanced"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string NsxType { get => this._nsxType; set => this._nsxType = value; }

        /// <summary>Backing field for <see cref="PlacementGroupId" /> property.</summary>
        private string _placementGroupId;

        /// <summary>Placement Group id, e.g. "n1"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string PlacementGroupId { get => this._placementGroupId; set => this._placementGroupId = value; }

        /// <summary>Backing field for <see cref="PlacementGroupName" /> property.</summary>
        private string _placementGroupName;

        /// <summary>Placement Group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string PlacementGroupName { get => this._placementGroupName; set => this._placementGroupName = value; }

        /// <summary>Backing field for <see cref="PrivateCloudId" /> property.</summary>
        private string _privateCloudId;

        /// <summary>Id of a private cloud</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string PrivateCloudId { get => this._privateCloudId; set => this._privateCloudId = value; }

        /// <summary>Backing field for <see cref="ResourcePool" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IResourcePool[] _resourcePool;

        /// <summary>The list of Resource Pools</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IResourcePool[] ResourcePool { get => this._resourcePool; set => this._resourcePool = value; }

        /// <summary>Backing field for <see cref="State" /> property.</summary>
        private string _state;

        /// <summary>Private Cloud state, e.g. "operational"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string State { get => this._state; set => this._state = value; }

        /// <summary>Backing field for <see cref="TotalCpuCore" /> property.</summary>
        private int? _totalCpuCore;

        /// <summary>Number of cores</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public int? TotalCpuCore { get => this._totalCpuCore; set => this._totalCpuCore = value; }

        /// <summary>Backing field for <see cref="TotalNode" /> property.</summary>
        private int? _totalNode;

        /// <summary>Number of nodes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public int? TotalNode { get => this._totalNode; set => this._totalNode = value; }

        /// <summary>Backing field for <see cref="TotalRam" /> property.</summary>
        private int? _totalRam;

        /// <summary>Memory size</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public int? TotalRam { get => this._totalRam; set => this._totalRam = value; }

        /// <summary>Backing field for <see cref="TotalStorage" /> property.</summary>
        private float? _totalStorage;

        /// <summary>Disk space in TB</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public float? TotalStorage { get => this._totalStorage; set => this._totalStorage = value; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>Virtualization type e.g. "vSphere"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string Type { get => this._type; set => this._type = value; }

        /// <summary>Backing field for <see cref="VSphereVersion" /> property.</summary>
        private string _vSphereVersion;

        /// <summary>e.g. "6.5u2"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string VSphereVersion { get => this._vSphereVersion; set => this._vSphereVersion = value; }

        /// <summary>Backing field for <see cref="VcenterFqdn" /> property.</summary>
        private string _vcenterFqdn;

        /// <summary>FQDN for vcenter access</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string VcenterFqdn { get => this._vcenterFqdn; set => this._vcenterFqdn = value; }

        /// <summary>Backing field for <see cref="VcenterRefid" /> property.</summary>
        private string _vcenterRefid;

        /// <summary>Vcenter ip address</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string VcenterRefid { get => this._vcenterRefid; set => this._vcenterRefid = value; }

        /// <summary>Backing field for <see cref="VirtualMachineTemplate" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineTemplate[] _virtualMachineTemplate;

        /// <summary>The list of Virtual Machine Templates</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineTemplate[] VirtualMachineTemplate { get => this._virtualMachineTemplate; set => this._virtualMachineTemplate = value; }

        /// <summary>Backing field for <see cref="VirtualNetwork" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNetwork[] _virtualNetwork;

        /// <summary>The list of Virtual Networks</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNetwork[] VirtualNetwork { get => this._virtualNetwork; set => this._virtualNetwork = value; }

        /// <summary>Backing field for <see cref="VrOpsEnabled" /> property.</summary>
        private bool? _vrOpsEnabled;

        /// <summary>Is Vrops enabled/disabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public bool? VrOpsEnabled { get => this._vrOpsEnabled; set => this._vrOpsEnabled = value; }

        /// <summary>Creates an new <see cref="PrivateCloudProperties" /> instance.</summary>
        public PrivateCloudProperties()
        {

        }
    }
    /// Properties of private
    public partial interface IPrivateCloudProperties :
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.IJsonSerializable
    {
        /// <summary>Availability Zone id, e.g. "az1"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Availability Zone id, e.g. ""az1""",
        SerializedName = @"availabilityZoneId",
        PossibleTypes = new [] { typeof(string) })]
        string AvailabilityZoneId { get; set; }
        /// <summary>Availability Zone name, e.g. "Availability Zone 1"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Availability Zone name, e.g. ""Availability Zone 1""",
        SerializedName = @"availabilityZoneName",
        PossibleTypes = new [] { typeof(string) })]
        string AvailabilityZoneName { get; set; }
        /// <summary>Number of clusters</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of clusters",
        SerializedName = @"clustersNumber",
        PossibleTypes = new [] { typeof(int) })]
        int? ClustersNumber { get; set; }
        /// <summary>User's emails who created cloud</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"User's emails who created cloud",
        SerializedName = @"createdBy",
        PossibleTypes = new [] { typeof(string) })]
        string CreatedBy { get; set; }
        /// <summary>When private cloud was created</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"When private cloud was created",
        SerializedName = @"createdOn",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CreatedOn { get; set; }
        /// <summary>Array of DNS servers</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Array of DNS servers",
        SerializedName = @"dnsServers",
        PossibleTypes = new [] { typeof(string) })]
        string[] DnsServer { get; set; }
        /// <summary>Expiration date of PC</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Expiration date of PC",
        SerializedName = @"expires",
        PossibleTypes = new [] { typeof(string) })]
        string Expire { get; set; }
        /// <summary>Nsx Type, e.g. "Advanced"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Nsx Type, e.g. ""Advanced""",
        SerializedName = @"nsxType",
        PossibleTypes = new [] { typeof(string) })]
        string NsxType { get; set; }
        /// <summary>Placement Group id, e.g. "n1"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Placement Group id, e.g. ""n1""",
        SerializedName = @"placementGroupId",
        PossibleTypes = new [] { typeof(string) })]
        string PlacementGroupId { get; set; }
        /// <summary>Placement Group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Placement Group name",
        SerializedName = @"placementGroupName",
        PossibleTypes = new [] { typeof(string) })]
        string PlacementGroupName { get; set; }
        /// <summary>Id of a private cloud</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Id of a private cloud",
        SerializedName = @"privateCloudId",
        PossibleTypes = new [] { typeof(string) })]
        string PrivateCloudId { get; set; }
        /// <summary>The list of Resource Pools</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of Resource Pools",
        SerializedName = @"resourcePools",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IResourcePool) })]
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IResourcePool[] ResourcePool { get; set; }
        /// <summary>Private Cloud state, e.g. "operational"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Private Cloud state, e.g. ""operational""",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(string) })]
        string State { get; set; }
        /// <summary>Number of cores</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of cores",
        SerializedName = @"totalCpuCores",
        PossibleTypes = new [] { typeof(int) })]
        int? TotalCpuCore { get; set; }
        /// <summary>Number of nodes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of nodes",
        SerializedName = @"totalNodes",
        PossibleTypes = new [] { typeof(int) })]
        int? TotalNode { get; set; }
        /// <summary>Memory size</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Memory size",
        SerializedName = @"totalRam",
        PossibleTypes = new [] { typeof(int) })]
        int? TotalRam { get; set; }
        /// <summary>Disk space in TB</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Disk space in TB",
        SerializedName = @"totalStorage",
        PossibleTypes = new [] { typeof(float) })]
        float? TotalStorage { get; set; }
        /// <summary>Virtualization type e.g. "vSphere"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Virtualization type e.g. ""vSphere""",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get; set; }
        /// <summary>e.g. "6.5u2"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"e.g. ""6.5u2""",
        SerializedName = @"vSphereVersion",
        PossibleTypes = new [] { typeof(string) })]
        string VSphereVersion { get; set; }
        /// <summary>FQDN for vcenter access</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"FQDN for vcenter access",
        SerializedName = @"vcenterFqdn",
        PossibleTypes = new [] { typeof(string) })]
        string VcenterFqdn { get; set; }
        /// <summary>Vcenter ip address</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Vcenter ip address",
        SerializedName = @"vcenterRefid",
        PossibleTypes = new [] { typeof(string) })]
        string VcenterRefid { get; set; }
        /// <summary>The list of Virtual Machine Templates</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of Virtual Machine Templates",
        SerializedName = @"virtualMachineTemplates",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineTemplate) })]
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineTemplate[] VirtualMachineTemplate { get; set; }
        /// <summary>The list of Virtual Networks</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of Virtual Networks",
        SerializedName = @"virtualNetworks",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNetwork) })]
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNetwork[] VirtualNetwork { get; set; }
        /// <summary>Is Vrops enabled/disabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Is Vrops enabled/disabled",
        SerializedName = @"vrOpsEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? VrOpsEnabled { get; set; }

    }
    /// Properties of private
    internal partial interface IPrivateCloudPropertiesInternal

    {
        /// <summary>Availability Zone id, e.g. "az1"</summary>
        string AvailabilityZoneId { get; set; }
        /// <summary>Availability Zone name, e.g. "Availability Zone 1"</summary>
        string AvailabilityZoneName { get; set; }
        /// <summary>Number of clusters</summary>
        int? ClustersNumber { get; set; }
        /// <summary>User's emails who created cloud</summary>
        string CreatedBy { get; set; }
        /// <summary>When private cloud was created</summary>
        global::System.DateTime? CreatedOn { get; set; }
        /// <summary>Array of DNS servers</summary>
        string[] DnsServer { get; set; }
        /// <summary>Expiration date of PC</summary>
        string Expire { get; set; }
        /// <summary>Nsx Type, e.g. "Advanced"</summary>
        string NsxType { get; set; }
        /// <summary>Placement Group id, e.g. "n1"</summary>
        string PlacementGroupId { get; set; }
        /// <summary>Placement Group name</summary>
        string PlacementGroupName { get; set; }
        /// <summary>Id of a private cloud</summary>
        string PrivateCloudId { get; set; }
        /// <summary>The list of Resource Pools</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IResourcePool[] ResourcePool { get; set; }
        /// <summary>Private Cloud state, e.g. "operational"</summary>
        string State { get; set; }
        /// <summary>Number of cores</summary>
        int? TotalCpuCore { get; set; }
        /// <summary>Number of nodes</summary>
        int? TotalNode { get; set; }
        /// <summary>Memory size</summary>
        int? TotalRam { get; set; }
        /// <summary>Disk space in TB</summary>
        float? TotalStorage { get; set; }
        /// <summary>Virtualization type e.g. "vSphere"</summary>
        string Type { get; set; }
        /// <summary>e.g. "6.5u2"</summary>
        string VSphereVersion { get; set; }
        /// <summary>FQDN for vcenter access</summary>
        string VcenterFqdn { get; set; }
        /// <summary>Vcenter ip address</summary>
        string VcenterRefid { get; set; }
        /// <summary>The list of Virtual Machine Templates</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineTemplate[] VirtualMachineTemplate { get; set; }
        /// <summary>The list of Virtual Networks</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNetwork[] VirtualNetwork { get; set; }
        /// <summary>Is Vrops enabled/disabled</summary>
        bool? VrOpsEnabled { get; set; }

    }
}