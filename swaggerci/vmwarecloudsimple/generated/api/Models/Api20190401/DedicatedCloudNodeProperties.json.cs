// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Extensions;

    /// <summary>Properties of dedicated cloud node</summary>
    public partial class DedicatedCloudNodeProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonObject into a new instance of <see cref="DedicatedCloudNodeProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal DedicatedCloudNodeProperties(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_skuDescription = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonObject>("skuDescription"), out var __jsonSkuDescription) ? Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.SkuDescription.FromJson(__jsonSkuDescription) : SkuDescription;}
            {_availabilityZoneId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString>("availabilityZoneId"), out var __jsonAvailabilityZoneId) ? (string)__jsonAvailabilityZoneId : (string)AvailabilityZoneId;}
            {_availabilityZoneName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString>("availabilityZoneName"), out var __jsonAvailabilityZoneName) ? (string)__jsonAvailabilityZoneName : (string)AvailabilityZoneName;}
            {_cloudRackName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString>("cloudRackName"), out var __jsonCloudRackName) ? (string)__jsonCloudRackName : (string)CloudRackName;}
            {_created = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString>("created"), out var __jsonCreated) ? global::System.DateTime.TryParse((string)__jsonCreated, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonCreatedValue) ? __jsonCreatedValue : Created : Created;}
            {_nodesCount = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNumber>("nodesCount"), out var __jsonNodesCount) ? (int)__jsonNodesCount : NodesCount;}
            {_placementGroupId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString>("placementGroupId"), out var __jsonPlacementGroupId) ? (string)__jsonPlacementGroupId : (string)PlacementGroupId;}
            {_placementGroupName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString>("placementGroupName"), out var __jsonPlacementGroupName) ? (string)__jsonPlacementGroupName : (string)PlacementGroupName;}
            {_privateCloudId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString>("privateCloudId"), out var __jsonPrivateCloudId) ? (string)__jsonPrivateCloudId : (string)PrivateCloudId;}
            {_privateCloudName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString>("privateCloudName"), out var __jsonPrivateCloudName) ? (string)__jsonPrivateCloudName : (string)PrivateCloudName;}
            {_provisioningState = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString>("provisioningState"), out var __jsonProvisioningState) ? (string)__jsonProvisioningState : (string)ProvisioningState;}
            {_purchaseId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString>("purchaseId"), out var __jsonPurchaseId) ? (string)__jsonPurchaseId : (string)PurchaseId;}
            {_status = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString>("status"), out var __jsonStatus) ? (string)__jsonStatus : (string)Status;}
            {_vmwareClusterName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString>("vmwareClusterName"), out var __jsonVmwareClusterName) ? (string)__jsonVmwareClusterName : (string)VmwareClusterName;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodeProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodeProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodeProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonObject json ? new DedicatedCloudNodeProperties(json) : null;
        }

        /// <summary>
        /// Serializes this instance of <see cref="DedicatedCloudNodeProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="DedicatedCloudNodeProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != this._skuDescription ? (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode) this._skuDescription.ToJson(null,serializationMode) : null, "skuDescription" ,container.Add );
            AddIf( null != (((object)this._availabilityZoneId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString(this._availabilityZoneId.ToString()) : null, "availabilityZoneId" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._availabilityZoneName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString(this._availabilityZoneName.ToString()) : null, "availabilityZoneName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._cloudRackName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString(this._cloudRackName.ToString()) : null, "cloudRackName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._created ? (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString(this._created?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "created" ,container.Add );
            }
            AddIf( (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNumber(this._nodesCount), "nodesCount" ,container.Add );
            AddIf( null != (((object)this._placementGroupId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString(this._placementGroupId.ToString()) : null, "placementGroupId" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._placementGroupName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString(this._placementGroupName.ToString()) : null, "placementGroupName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._privateCloudId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString(this._privateCloudId.ToString()) : null, "privateCloudId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._privateCloudName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString(this._privateCloudName.ToString()) : null, "privateCloudName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._provisioningState)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString(this._provisioningState.ToString()) : null, "provisioningState" ,container.Add );
            }
            AddIf( null != (((object)this._purchaseId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString(this._purchaseId.ToString()) : null, "purchaseId" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._status)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString(this._status.ToString()) : null, "status" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._vmwareClusterName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString(this._vmwareClusterName.ToString()) : null, "vmwareClusterName" ,container.Add );
            }
            AfterToJson(ref container);
            return container;
        }
    }
}