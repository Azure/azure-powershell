// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Extensions;

    /// <summary>Properties of virtual machine</summary>
    public partial class VirtualMachineProperties :
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineProperties,
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachinePropertiesInternal
    {

        /// <summary>Backing field for <see cref="AmountOfRam" /> property.</summary>
        private int _amountOfRam;

        /// <summary>The amount of memory</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public int AmountOfRam { get => this._amountOfRam; set => this._amountOfRam = value; }

        /// <summary>Backing field for <see cref="Controller" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualDiskController[] _controller;

        /// <summary>The list of Virtual Disks' Controllers</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualDiskController[] Controller { get => this._controller; }

        /// <summary>Backing field for <see cref="Customization" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IGuestOSCustomization _customization;

        /// <summary>Virtual machine properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IGuestOSCustomization Customization { get => (this._customization = this._customization ?? new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.GuestOSCustomization()); set => this._customization = value; }

        /// <summary>List of dns servers to use</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string[] CustomizationDnsServer { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IGuestOSCustomizationInternal)Customization).DnsServer; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IGuestOSCustomizationInternal)Customization).DnsServer = value ?? null /* arrayOf */; }

        /// <summary>Virtual Machine hostname</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string CustomizationHostName { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IGuestOSCustomizationInternal)Customization).HostName; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IGuestOSCustomizationInternal)Customization).HostName = value ?? null; }

        /// <summary>Password for login</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string CustomizationPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IGuestOSCustomizationInternal)Customization).Password; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IGuestOSCustomizationInternal)Customization).Password = value ?? null; }

        /// <summary>id of customization policy</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string CustomizationPolicyId { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IGuestOSCustomizationInternal)Customization).PolicyId; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IGuestOSCustomizationInternal)Customization).PolicyId = value ?? null; }

        /// <summary>Username for login</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string CustomizationUsername { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IGuestOSCustomizationInternal)Customization).Username; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IGuestOSCustomizationInternal)Customization).Username = value ?? null; }

        /// <summary>Backing field for <see cref="Disk" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualDisk[] _disk;

        /// <summary>The list of Virtual Disks</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualDisk[] Disk { get => this._disk; set => this._disk = value; }

        /// <summary>Backing field for <see cref="Dnsname" /> property.</summary>
        private string _dnsname;

        /// <summary>The DNS name of Virtual Machine in VCenter</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string Dnsname { get => this._dnsname; }

        /// <summary>Backing field for <see cref="ExposeToGuestVM" /> property.</summary>
        private bool? _exposeToGuestVM;

        /// <summary>Expose Guest OS or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public bool? ExposeToGuestVM { get => this._exposeToGuestVM; set => this._exposeToGuestVM = value; }

        /// <summary>Backing field for <see cref="Folder" /> property.</summary>
        private string _folder;

        /// <summary>The path to virtual machine folder in VCenter</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string Folder { get => this._folder; }

        /// <summary>Hierarchical resource pool name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string FullName { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IResourcePoolInternal)ResourcePool).FullName; }

        /// <summary>Backing field for <see cref="GuestOS" /> property.</summary>
        private string _guestOS;

        /// <summary>The name of Guest OS</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string GuestOS { get => this._guestOS; }

        /// <summary>Backing field for <see cref="GuestOSType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.GuestOSType? _guestOSType;

        /// <summary>The Guest OS type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.GuestOSType? GuestOSType { get => this._guestOSType; }

        /// <summary>Internal Acessors for Controller</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualDiskController[] Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachinePropertiesInternal.Controller { get => this._controller; set { {_controller = value;} } }

        /// <summary>Internal Acessors for Customization</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IGuestOSCustomization Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachinePropertiesInternal.Customization { get => (this._customization = this._customization ?? new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.GuestOSCustomization()); set { {_customization = value;} } }

        /// <summary>Internal Acessors for Dnsname</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachinePropertiesInternal.Dnsname { get => this._dnsname; set { {_dnsname = value;} } }

        /// <summary>Internal Acessors for Folder</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachinePropertiesInternal.Folder { get => this._folder; set { {_folder = value;} } }

        /// <summary>Internal Acessors for FullName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachinePropertiesInternal.FullName { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IResourcePoolInternal)ResourcePool).FullName; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IResourcePoolInternal)ResourcePool).FullName = value; }

        /// <summary>Internal Acessors for GuestOS</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachinePropertiesInternal.GuestOS { get => this._guestOS; set { {_guestOS = value;} } }

        /// <summary>Internal Acessors for GuestOSType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.GuestOSType? Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachinePropertiesInternal.GuestOSType { get => this._guestOSType; set { {_guestOSType = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachinePropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for PublicIP</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachinePropertiesInternal.PublicIP { get => this._publicIP; set { {_publicIP = value;} } }

        /// <summary>Internal Acessors for ResourcePool</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IResourcePool Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachinePropertiesInternal.ResourcePool { get => (this._resourcePool = this._resourcePool ?? new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.ResourcePool()); set { {_resourcePool = value;} } }

        /// <summary>Internal Acessors for ResourcePoolLocation</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachinePropertiesInternal.ResourcePoolLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IResourcePoolInternal)ResourcePool).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IResourcePoolInternal)ResourcePool).Location = value; }

        /// <summary>Internal Acessors for ResourcePoolName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachinePropertiesInternal.ResourcePoolName { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IResourcePoolInternal)ResourcePool).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IResourcePoolInternal)ResourcePool).Name = value; }

        /// <summary>Internal Acessors for ResourcePoolPrivateCloudId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachinePropertiesInternal.ResourcePoolPrivateCloudId { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IResourcePoolInternal)ResourcePool).PrivateCloudId; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IResourcePoolInternal)ResourcePool).PrivateCloudId = value; }

        /// <summary>Internal Acessors for ResourcePoolProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IResourcePoolProperties Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachinePropertiesInternal.ResourcePoolProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IResourcePoolInternal)ResourcePool).Property; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IResourcePoolInternal)ResourcePool).Property = value; }

        /// <summary>Internal Acessors for ResourcePoolType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachinePropertiesInternal.ResourcePoolType { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IResourcePoolInternal)ResourcePool).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IResourcePoolInternal)ResourcePool).Type = value; }

        /// <summary>Internal Acessors for Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.VirtualMachineStatus? Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachinePropertiesInternal.Status { get => this._status; set { {_status = value;} } }

        /// <summary>Internal Acessors for VMId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachinePropertiesInternal.VMId { get => this._vMId; set { {_vMId = value;} } }

        /// <summary>Internal Acessors for Vmwaretool</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachinePropertiesInternal.Vmwaretool { get => this._vmwaretool; set { {_vmwaretool = value;} } }

        /// <summary>Backing field for <see cref="Nic" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNic[] _nic;

        /// <summary>The list of Virtual NICs</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNic[] Nic { get => this._nic; set => this._nic = value; }

        /// <summary>Backing field for <see cref="NumberOfCore" /> property.</summary>
        private int _numberOfCore;

        /// <summary>The number of CPU cores</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public int NumberOfCore { get => this._numberOfCore; set => this._numberOfCore = value; }

        /// <summary>Backing field for <see cref="Password" /> property.</summary>
        private string _password;

        /// <summary>Password for login. Deprecated - use customization property</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string Password { get => this._password; set => this._password = value; }

        /// <summary>Backing field for <see cref="PrivateCloudId" /> property.</summary>
        private string _privateCloudId;

        /// <summary>Private Cloud Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string PrivateCloudId { get => this._privateCloudId; set => this._privateCloudId = value; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>The provisioning status of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="PublicIP" /> property.</summary>
        private string _publicIP;

        /// <summary>The public ip of Virtual Machine</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string PublicIP { get => this._publicIP; }

        /// <summary>Backing field for <see cref="ResourcePool" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IResourcePool _resourcePool;

        /// <summary>Virtual Machines Resource Pool</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IResourcePool ResourcePool { get => (this._resourcePool = this._resourcePool ?? new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.ResourcePool()); set => this._resourcePool = value; }

        /// <summary>resource pool id (privateCloudId:vsphereId)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string ResourcePoolId { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IResourcePoolInternal)ResourcePool).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IResourcePoolInternal)ResourcePool).Id = value ?? null; }

        /// <summary>Azure region</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string ResourcePoolLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IResourcePoolInternal)ResourcePool).Location; }

        /// <summary>{ResourcePoolName}</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string ResourcePoolName { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IResourcePoolInternal)ResourcePool).Name; }

        /// <summary>The Private Cloud Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string ResourcePoolPrivateCloudId { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IResourcePoolInternal)ResourcePool).PrivateCloudId; }

        /// <summary>{resourceProviderNamespace}/{resourceType}</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string ResourcePoolType { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IResourcePoolInternal)ResourcePool).Type; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.VirtualMachineStatus? _status;

        /// <summary>The status of Virtual machine</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.VirtualMachineStatus? Status { get => this._status; }

        /// <summary>Backing field for <see cref="TemplateId" /> property.</summary>
        private string _templateId;

        /// <summary>Virtual Machine Template Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string TemplateId { get => this._templateId; set => this._templateId = value; }

        /// <summary>Backing field for <see cref="Username" /> property.</summary>
        private string _username;

        /// <summary>Username for login. Deprecated - use customization property</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string Username { get => this._username; set => this._username = value; }

        /// <summary>Backing field for <see cref="VMId" /> property.</summary>
        private string _vMId;

        /// <summary>The internal id of Virtual Machine in VCenter</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string VMId { get => this._vMId; }

        /// <summary>Backing field for <see cref="VSphereNetwork" /> property.</summary>
        private string[] _vSphereNetwork;

        /// <summary>The list of Virtual VSphere Networks</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string[] VSphereNetwork { get => this._vSphereNetwork; set => this._vSphereNetwork = value; }

        /// <summary>Backing field for <see cref="Vmwaretool" /> property.</summary>
        private string _vmwaretool;

        /// <summary>VMware tools version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string Vmwaretool { get => this._vmwaretool; }

        /// <summary>Creates an new <see cref="VirtualMachineProperties" /> instance.</summary>
        public VirtualMachineProperties()
        {

        }
    }
    /// Properties of virtual machine
    public partial interface IVirtualMachineProperties :
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.IJsonSerializable
    {
        /// <summary>The amount of memory</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The amount of memory",
        SerializedName = @"amountOfRam",
        PossibleTypes = new [] { typeof(int) })]
        int AmountOfRam { get; set; }
        /// <summary>The list of Virtual Disks' Controllers</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of Virtual Disks' Controllers",
        SerializedName = @"controllers",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualDiskController) })]
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualDiskController[] Controller { get;  }
        /// <summary>List of dns servers to use</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of dns servers to use",
        SerializedName = @"dnsServers",
        PossibleTypes = new [] { typeof(string) })]
        string[] CustomizationDnsServer { get; set; }
        /// <summary>Virtual Machine hostname</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Virtual Machine hostname",
        SerializedName = @"hostName",
        PossibleTypes = new [] { typeof(string) })]
        string CustomizationHostName { get; set; }
        /// <summary>Password for login</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Password for login",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(string) })]
        string CustomizationPassword { get; set; }
        /// <summary>id of customization policy</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"id of customization policy",
        SerializedName = @"policyId",
        PossibleTypes = new [] { typeof(string) })]
        string CustomizationPolicyId { get; set; }
        /// <summary>Username for login</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Username for login",
        SerializedName = @"username",
        PossibleTypes = new [] { typeof(string) })]
        string CustomizationUsername { get; set; }
        /// <summary>The list of Virtual Disks</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of Virtual Disks",
        SerializedName = @"disks",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualDisk) })]
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualDisk[] Disk { get; set; }
        /// <summary>The DNS name of Virtual Machine in VCenter</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The DNS name of Virtual Machine in VCenter",
        SerializedName = @"dnsname",
        PossibleTypes = new [] { typeof(string) })]
        string Dnsname { get;  }
        /// <summary>Expose Guest OS or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Expose Guest OS or not",
        SerializedName = @"exposeToGuestVM",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ExposeToGuestVM { get; set; }
        /// <summary>The path to virtual machine folder in VCenter</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The path to virtual machine folder in VCenter",
        SerializedName = @"folder",
        PossibleTypes = new [] { typeof(string) })]
        string Folder { get;  }
        /// <summary>Hierarchical resource pool name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Hierarchical resource pool name",
        SerializedName = @"fullName",
        PossibleTypes = new [] { typeof(string) })]
        string FullName { get;  }
        /// <summary>The name of Guest OS</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of Guest OS",
        SerializedName = @"guestOS",
        PossibleTypes = new [] { typeof(string) })]
        string GuestOS { get;  }
        /// <summary>The Guest OS type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The Guest OS type",
        SerializedName = @"guestOSType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.GuestOSType) })]
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.GuestOSType? GuestOSType { get;  }
        /// <summary>The list of Virtual NICs</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of Virtual NICs",
        SerializedName = @"nics",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNic) })]
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNic[] Nic { get; set; }
        /// <summary>The number of CPU cores</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The number of CPU cores",
        SerializedName = @"numberOfCores",
        PossibleTypes = new [] { typeof(int) })]
        int NumberOfCore { get; set; }
        /// <summary>Password for login. Deprecated - use customization property</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Password for login. Deprecated - use customization property",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(string) })]
        string Password { get; set; }
        /// <summary>Private Cloud Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Private Cloud Id",
        SerializedName = @"privateCloudId",
        PossibleTypes = new [] { typeof(string) })]
        string PrivateCloudId { get; set; }
        /// <summary>The provisioning status of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning status of the resource",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>The public ip of Virtual Machine</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The public ip of Virtual Machine",
        SerializedName = @"publicIP",
        PossibleTypes = new [] { typeof(string) })]
        string PublicIP { get;  }
        /// <summary>resource pool id (privateCloudId:vsphereId)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"resource pool id (privateCloudId:vsphereId)",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string ResourcePoolId { get; set; }
        /// <summary>Azure region</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Azure region",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string ResourcePoolLocation { get;  }
        /// <summary>{ResourcePoolName}</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"{ResourcePoolName}",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string ResourcePoolName { get;  }
        /// <summary>The Private Cloud Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The Private Cloud Id",
        SerializedName = @"privateCloudId",
        PossibleTypes = new [] { typeof(string) })]
        string ResourcePoolPrivateCloudId { get;  }
        /// <summary>{resourceProviderNamespace}/{resourceType}</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"{resourceProviderNamespace}/{resourceType}",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string ResourcePoolType { get;  }
        /// <summary>The status of Virtual machine</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The status of Virtual machine",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.VirtualMachineStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.VirtualMachineStatus? Status { get;  }
        /// <summary>Virtual Machine Template Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Virtual Machine Template Id",
        SerializedName = @"templateId",
        PossibleTypes = new [] { typeof(string) })]
        string TemplateId { get; set; }
        /// <summary>Username for login. Deprecated - use customization property</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Username for login. Deprecated - use customization property",
        SerializedName = @"username",
        PossibleTypes = new [] { typeof(string) })]
        string Username { get; set; }
        /// <summary>The internal id of Virtual Machine in VCenter</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The internal id of Virtual Machine in VCenter",
        SerializedName = @"vmId",
        PossibleTypes = new [] { typeof(string) })]
        string VMId { get;  }
        /// <summary>The list of Virtual VSphere Networks</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of Virtual VSphere Networks",
        SerializedName = @"vSphereNetworks",
        PossibleTypes = new [] { typeof(string) })]
        string[] VSphereNetwork { get; set; }
        /// <summary>VMware tools version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"VMware tools version",
        SerializedName = @"vmwaretools",
        PossibleTypes = new [] { typeof(string) })]
        string Vmwaretool { get;  }

    }
    /// Properties of virtual machine
    internal partial interface IVirtualMachinePropertiesInternal

    {
        /// <summary>The amount of memory</summary>
        int AmountOfRam { get; set; }
        /// <summary>The list of Virtual Disks' Controllers</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualDiskController[] Controller { get; set; }
        /// <summary>Virtual machine properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IGuestOSCustomization Customization { get; set; }
        /// <summary>List of dns servers to use</summary>
        string[] CustomizationDnsServer { get; set; }
        /// <summary>Virtual Machine hostname</summary>
        string CustomizationHostName { get; set; }
        /// <summary>Password for login</summary>
        string CustomizationPassword { get; set; }
        /// <summary>id of customization policy</summary>
        string CustomizationPolicyId { get; set; }
        /// <summary>Username for login</summary>
        string CustomizationUsername { get; set; }
        /// <summary>The list of Virtual Disks</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualDisk[] Disk { get; set; }
        /// <summary>The DNS name of Virtual Machine in VCenter</summary>
        string Dnsname { get; set; }
        /// <summary>Expose Guest OS or not</summary>
        bool? ExposeToGuestVM { get; set; }
        /// <summary>The path to virtual machine folder in VCenter</summary>
        string Folder { get; set; }
        /// <summary>Hierarchical resource pool name</summary>
        string FullName { get; set; }
        /// <summary>The name of Guest OS</summary>
        string GuestOS { get; set; }
        /// <summary>The Guest OS type</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.GuestOSType? GuestOSType { get; set; }
        /// <summary>The list of Virtual NICs</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNic[] Nic { get; set; }
        /// <summary>The number of CPU cores</summary>
        int NumberOfCore { get; set; }
        /// <summary>Password for login. Deprecated - use customization property</summary>
        string Password { get; set; }
        /// <summary>Private Cloud Id</summary>
        string PrivateCloudId { get; set; }
        /// <summary>The provisioning status of the resource</summary>
        string ProvisioningState { get; set; }
        /// <summary>The public ip of Virtual Machine</summary>
        string PublicIP { get; set; }
        /// <summary>Virtual Machines Resource Pool</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IResourcePool ResourcePool { get; set; }
        /// <summary>resource pool id (privateCloudId:vsphereId)</summary>
        string ResourcePoolId { get; set; }
        /// <summary>Azure region</summary>
        string ResourcePoolLocation { get; set; }
        /// <summary>{ResourcePoolName}</summary>
        string ResourcePoolName { get; set; }
        /// <summary>The Private Cloud Id</summary>
        string ResourcePoolPrivateCloudId { get; set; }
        /// <summary>Resource pool properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IResourcePoolProperties ResourcePoolProperty { get; set; }
        /// <summary>{resourceProviderNamespace}/{resourceType}</summary>
        string ResourcePoolType { get; set; }
        /// <summary>The status of Virtual machine</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.VirtualMachineStatus? Status { get; set; }
        /// <summary>Virtual Machine Template Id</summary>
        string TemplateId { get; set; }
        /// <summary>Username for login. Deprecated - use customization property</summary>
        string Username { get; set; }
        /// <summary>The internal id of Virtual Machine in VCenter</summary>
        string VMId { get; set; }
        /// <summary>The list of Virtual VSphere Networks</summary>
        string[] VSphereNetwork { get; set; }
        /// <summary>VMware tools version</summary>
        string Vmwaretool { get; set; }

    }
}