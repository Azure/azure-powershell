// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Extensions;

    /// <summary>Properties of virtual machine template</summary>
    public partial class VirtualMachineTemplateProperties :
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineTemplateProperties,
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineTemplatePropertiesInternal
    {

        /// <summary>Backing field for <see cref="AmountOfRam" /> property.</summary>
        private int? _amountOfRam;

        /// <summary>The amount of memory</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public int? AmountOfRam { get => this._amountOfRam; set => this._amountOfRam = value; }

        /// <summary>Backing field for <see cref="Controller" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualDiskController[] _controller;

        /// <summary>The list of Virtual Disk Controllers</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualDiskController[] Controller { get => this._controller; set => this._controller = value; }

        /// <summary>Backing field for <see cref="Description" /> property.</summary>
        private string _description;

        /// <summary>The description of Virtual Machine Template</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string Description { get => this._description; set => this._description = value; }

        /// <summary>Backing field for <see cref="Disk" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualDisk[] _disk;

        /// <summary>The list of Virtual Disks</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualDisk[] Disk { get => this._disk; set => this._disk = value; }

        /// <summary>Backing field for <see cref="ExposeToGuestVM" /> property.</summary>
        private bool? _exposeToGuestVM;

        /// <summary>Expose Guest OS or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public bool? ExposeToGuestVM { get => this._exposeToGuestVM; set => this._exposeToGuestVM = value; }

        /// <summary>Backing field for <see cref="GuestOS" /> property.</summary>
        private string _guestOS;

        /// <summary>The Guest OS</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string GuestOS { get => this._guestOS; }

        /// <summary>Backing field for <see cref="GuestOSType" /> property.</summary>
        private string _guestOSType;

        /// <summary>The Guest OS types</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string GuestOSType { get => this._guestOSType; }

        /// <summary>Internal Acessors for GuestOS</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineTemplatePropertiesInternal.GuestOS { get => this._guestOS; set { {_guestOS = value;} } }

        /// <summary>Internal Acessors for GuestOSType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineTemplatePropertiesInternal.GuestOSType { get => this._guestOSType; set { {_guestOSType = value;} } }

        /// <summary>Internal Acessors for Vmwaretool</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineTemplatePropertiesInternal.Vmwaretool { get => this._vmwaretool; set { {_vmwaretool = value;} } }

        /// <summary>Backing field for <see cref="Nic" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNic[] _nic;

        /// <summary>The list of Virtual NICs</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNic[] Nic { get => this._nic; set => this._nic = value; }

        /// <summary>Backing field for <see cref="NumberOfCore" /> property.</summary>
        private int? _numberOfCore;

        /// <summary>The number of CPU cores</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public int? NumberOfCore { get => this._numberOfCore; set => this._numberOfCore = value; }

        /// <summary>Backing field for <see cref="Path" /> property.</summary>
        private string _path;

        /// <summary>path to folder</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string Path { get => this._path; set => this._path = value; }

        /// <summary>Backing field for <see cref="PrivateCloudId" /> property.</summary>
        private string _privateCloudId;

        /// <summary>The Private Cloud Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string PrivateCloudId { get => this._privateCloudId; set => this._privateCloudId = value; }

        /// <summary>Backing field for <see cref="VSphereNetwork" /> property.</summary>
        private string[] _vSphereNetwork;

        /// <summary>The list of VSphere networks</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string[] VSphereNetwork { get => this._vSphereNetwork; set => this._vSphereNetwork = value; }

        /// <summary>Backing field for <see cref="VSphereTag" /> property.</summary>
        private string[] _vSphereTag;

        /// <summary>The tags from VSphere</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string[] VSphereTag { get => this._vSphereTag; set => this._vSphereTag = value; }

        /// <summary>Backing field for <see cref="Vmwaretool" /> property.</summary>
        private string _vmwaretool;

        /// <summary>The VMware tools version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string Vmwaretool { get => this._vmwaretool; }

        /// <summary>Creates an new <see cref="VirtualMachineTemplateProperties" /> instance.</summary>
        public VirtualMachineTemplateProperties()
        {

        }
    }
    /// Properties of virtual machine template
    public partial interface IVirtualMachineTemplateProperties :
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.IJsonSerializable
    {
        /// <summary>The amount of memory</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The amount of memory",
        SerializedName = @"amountOfRam",
        PossibleTypes = new [] { typeof(int) })]
        int? AmountOfRam { get; set; }
        /// <summary>The list of Virtual Disk Controllers</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of Virtual Disk Controllers",
        SerializedName = @"controllers",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualDiskController) })]
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualDiskController[] Controller { get; set; }
        /// <summary>The description of Virtual Machine Template</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The description of Virtual Machine Template",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>The list of Virtual Disks</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of Virtual Disks",
        SerializedName = @"disks",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualDisk) })]
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualDisk[] Disk { get; set; }
        /// <summary>Expose Guest OS or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Expose Guest OS or not",
        SerializedName = @"exposeToGuestVM",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ExposeToGuestVM { get; set; }
        /// <summary>The Guest OS</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The Guest OS",
        SerializedName = @"guestOS",
        PossibleTypes = new [] { typeof(string) })]
        string GuestOS { get;  }
        /// <summary>The Guest OS types</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The Guest OS types",
        SerializedName = @"guestOSType",
        PossibleTypes = new [] { typeof(string) })]
        string GuestOSType { get;  }
        /// <summary>The list of Virtual NICs</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of Virtual NICs",
        SerializedName = @"nics",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNic) })]
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNic[] Nic { get; set; }
        /// <summary>The number of CPU cores</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of CPU cores",
        SerializedName = @"numberOfCores",
        PossibleTypes = new [] { typeof(int) })]
        int? NumberOfCore { get; set; }
        /// <summary>path to folder</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"path to folder",
        SerializedName = @"path",
        PossibleTypes = new [] { typeof(string) })]
        string Path { get; set; }
        /// <summary>The Private Cloud Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The Private Cloud Id",
        SerializedName = @"privateCloudId",
        PossibleTypes = new [] { typeof(string) })]
        string PrivateCloudId { get; set; }
        /// <summary>The list of VSphere networks</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of VSphere networks",
        SerializedName = @"vSphereNetworks",
        PossibleTypes = new [] { typeof(string) })]
        string[] VSphereNetwork { get; set; }
        /// <summary>The tags from VSphere</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The tags from VSphere",
        SerializedName = @"vSphereTags",
        PossibleTypes = new [] { typeof(string) })]
        string[] VSphereTag { get; set; }
        /// <summary>The VMware tools version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The VMware tools version",
        SerializedName = @"vmwaretools",
        PossibleTypes = new [] { typeof(string) })]
        string Vmwaretool { get;  }

    }
    /// Properties of virtual machine template
    internal partial interface IVirtualMachineTemplatePropertiesInternal

    {
        /// <summary>The amount of memory</summary>
        int? AmountOfRam { get; set; }
        /// <summary>The list of Virtual Disk Controllers</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualDiskController[] Controller { get; set; }
        /// <summary>The description of Virtual Machine Template</summary>
        string Description { get; set; }
        /// <summary>The list of Virtual Disks</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualDisk[] Disk { get; set; }
        /// <summary>Expose Guest OS or not</summary>
        bool? ExposeToGuestVM { get; set; }
        /// <summary>The Guest OS</summary>
        string GuestOS { get; set; }
        /// <summary>The Guest OS types</summary>
        string GuestOSType { get; set; }
        /// <summary>The list of Virtual NICs</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNic[] Nic { get; set; }
        /// <summary>The number of CPU cores</summary>
        int? NumberOfCore { get; set; }
        /// <summary>path to folder</summary>
        string Path { get; set; }
        /// <summary>The Private Cloud Id</summary>
        string PrivateCloudId { get; set; }
        /// <summary>The list of VSphere networks</summary>
        string[] VSphereNetwork { get; set; }
        /// <summary>The tags from VSphere</summary>
        string[] VSphereTag { get; set; }
        /// <summary>The VMware tools version</summary>
        string Vmwaretool { get; set; }

    }
}