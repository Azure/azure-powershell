// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Extensions;

    /// <summary>Dedicated cloud node model</summary>
    public partial class DedicatedCloudNode :
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNode,
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodeInternal,
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.IHeaderSerializable
    {

        /// <summary>Availability Zone id, e.g. "az1"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string AvailabilityZoneId { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodePropertiesInternal)Property).AvailabilityZoneId; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodePropertiesInternal)Property).AvailabilityZoneId = value ?? null; }

        /// <summary>Availability Zone name, e.g. "Availability Zone 1"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string AvailabilityZoneName { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodePropertiesInternal)Property).AvailabilityZoneName; }

        /// <summary>Backing field for <see cref="AzureAsyncOperation" /> property.</summary>
        private string _azureAsyncOperation;

        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string AzureAsyncOperation { get => this._azureAsyncOperation; set => this._azureAsyncOperation = value; }

        /// <summary>VMWare Cloud Rack Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string CloudRackName { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodePropertiesInternal)Property).CloudRackName; }

        /// <summary>date time the resource was created</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public global::System.DateTime? Created { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodePropertiesInternal)Property).Created; }

        /// <summary>
        /// dedicatedCloudNode example: 8 x Ten-Core Intel® Xeon® Processor E5-2640 v4 2.40GHz 25MB Cache (90W); 12 x 64GB PC4-19200
        /// 2400MHz DDR4 ECC Registered DIMM, ...
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string Description { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.ISkuInternal)Sku).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.ISkuInternal)Sku).Description = value ?? null; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/dedicatedCloudNodes/{dedicatedCloudNodeName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string Id { get => this._id; }

        /// <summary>Backing field for <see cref="Location" /> property.</summary>
        private string _location;

        /// <summary>Azure region</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string Location { get => this._location; set => this._location = value; }

        /// <summary>Backing field for <see cref="Location1" /> property.</summary>
        private string _location1;

        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string Location1 { get => this._location1; set => this._location1 = value; }

        /// <summary>Internal Acessors for AvailabilityZoneName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodeInternal.AvailabilityZoneName { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodePropertiesInternal)Property).AvailabilityZoneName; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodePropertiesInternal)Property).AvailabilityZoneName = value; }

        /// <summary>Internal Acessors for CloudRackName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodeInternal.CloudRackName { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodePropertiesInternal)Property).CloudRackName; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodePropertiesInternal)Property).CloudRackName = value; }

        /// <summary>Internal Acessors for Created</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodeInternal.Created { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodePropertiesInternal)Property).Created; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodePropertiesInternal)Property).Created = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodeInternal.Id { get => this._id; set { {_id = value;} } }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodeInternal.Name { get => this._name; set { {_name = value;} } }

        /// <summary>Internal Acessors for PlacementGroupName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodeInternal.PlacementGroupName { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodePropertiesInternal)Property).PlacementGroupName; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodePropertiesInternal)Property).PlacementGroupName = value; }

        /// <summary>Internal Acessors for PrivateCloudId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodeInternal.PrivateCloudId { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodePropertiesInternal)Property).PrivateCloudId; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodePropertiesInternal)Property).PrivateCloudId = value; }

        /// <summary>Internal Acessors for PrivateCloudName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodeInternal.PrivateCloudName { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodePropertiesInternal)Property).PrivateCloudName; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodePropertiesInternal)Property).PrivateCloudName = value; }

        /// <summary>Internal Acessors for PropertiesSkuDescription</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.ISkuDescription Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodeInternal.PropertiesSkuDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodePropertiesInternal)Property).SkuDescription; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodePropertiesInternal)Property).SkuDescription = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodeProperties Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodeInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.DedicatedCloudNodeProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodeInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodePropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodePropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for Sku</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.ISku Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodeInternal.Sku { get => (this._sku = this._sku ?? new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.Sku()); set { {_sku = value;} } }

        /// <summary>Internal Acessors for Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.NodeStatus? Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodeInternal.Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodePropertiesInternal)Property).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodePropertiesInternal)Property).Status = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodeInternal.Type { get => this._type; set { {_type = value;} } }

        /// <summary>Internal Acessors for VmwareClusterName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodeInternal.VmwareClusterName { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodePropertiesInternal)Property).VmwareClusterName; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodePropertiesInternal)Property).VmwareClusterName = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>{dedicatedCloudNodeName}</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string Name { get => this._name; }

        /// <summary>count of nodes to create</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public int? NodesCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodePropertiesInternal)Property).NodesCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodePropertiesInternal)Property).NodesCount = value ?? default(int); }

        /// <summary>Placement Group id, e.g. "n1"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string PlacementGroupId { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodePropertiesInternal)Property).PlacementGroupId; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodePropertiesInternal)Property).PlacementGroupId = value ?? null; }

        /// <summary>Placement Name, e.g. "Placement Group 1"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string PlacementGroupName { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodePropertiesInternal)Property).PlacementGroupName; }

        /// <summary>Private Cloud Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string PrivateCloudId { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodePropertiesInternal)Property).PrivateCloudId; }

        /// <summary>Resource Pool Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string PrivateCloudName { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodePropertiesInternal)Property).PrivateCloudName; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodeProperties _property;

        /// <summary>Dedicated Cloud Nodes properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodeProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.DedicatedCloudNodeProperties()); set => this._property = value; }

        /// <summary>The provisioning status of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodePropertiesInternal)Property).ProvisioningState; }

        /// <summary>purchase id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string PurchaseId { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodePropertiesInternal)Property).PurchaseId; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodePropertiesInternal)Property).PurchaseId = value ?? null; }

        /// <summary>Backing field for <see cref="RetryAfter" /> property.</summary>
        private int? _retryAfter;

        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public int? RetryAfter { get => this._retryAfter; set => this._retryAfter = value; }

        /// <summary>Backing field for <see cref="Sku" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.ISku _sku;

        /// <summary>Dedicated Cloud Nodes SKU</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.ISku Sku { get => (this._sku = this._sku ?? new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.Sku()); set => this._sku = value; }

        /// <summary>The capacity of the SKU</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string SkuCapacity { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.ISkuInternal)Sku).Capacity; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.ISkuInternal)Sku).Capacity = value ?? null; }

        /// <summary>SKU's id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string SkuDescriptionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodePropertiesInternal)Property).SkuDescriptionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodePropertiesInternal)Property).SkuDescriptionId = value ?? null; }

        /// <summary>SKU's name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string SkuDescriptionName { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodePropertiesInternal)Property).SkuDescriptionName; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodePropertiesInternal)Property).SkuDescriptionName = value ?? null; }

        /// <summary>
        /// If the service has different generations of hardware, for the same SKU, then that can be captured here
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string SkuFamily { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.ISkuInternal)Sku).Family; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.ISkuInternal)Sku).Family = value ?? null; }

        /// <summary>The name of the SKU for VMWare CloudSimple Node</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string SkuName { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.ISkuInternal)Sku).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.ISkuInternal)Sku).Name = value ?? null; }

        /// <summary>The tier of the SKU</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string SkuTier { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.ISkuInternal)Sku).Tier; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.ISkuInternal)Sku).Tier = value ?? null; }

        /// <summary>Node status, indicates is private cloud set up on this node or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.NodeStatus? Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodePropertiesInternal)Property).Status; }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.ITags _tag;

        /// <summary>Dedicated Cloud Nodes tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.ITags Tag { get => (this._tag = this._tag ?? new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.Tags()); set => this._tag = value; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>{resourceProviderNamespace}/{resourceType}</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string Type { get => this._type; }

        /// <summary>VMWare Cluster Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string VmwareClusterName { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodePropertiesInternal)Property).VmwareClusterName; }

        /// <summary>Creates an new <see cref="DedicatedCloudNode" /> instance.</summary>
        public DedicatedCloudNode()
        {

        }

        /// <param name="headers"></param>
        void Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.IHeaderSerializable.ReadHeaders(global::System.Net.Http.Headers.HttpResponseHeaders headers)
        {
            if (headers.TryGetValues("Azure-AsyncOperation", out var __azureAsyncOperationHeader0))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodeInternal)this).AzureAsyncOperation = System.Linq.Enumerable.FirstOrDefault(__azureAsyncOperationHeader0) is string __headerAzureAsyncOperationHeader0 ? __headerAzureAsyncOperationHeader0 : (string)null;
            }
            if (headers.TryGetValues("Location", out var __locationHeader1))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodeInternal)this).Location1 = System.Linq.Enumerable.FirstOrDefault(__locationHeader1) is string __headerLocationHeader1 ? __headerLocationHeader1 : (string)null;
            }
            if (headers.TryGetValues("Retry-After", out var __retryAfterHeader2))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodeInternal)this).RetryAfter = System.Linq.Enumerable.FirstOrDefault(__retryAfterHeader2) is string __headerRetryAfterHeader2 ? int.TryParse( __headerRetryAfterHeader2, out int __headerRetryAfterHeader2Value ) ? __headerRetryAfterHeader2Value : default(int?) : default(int?);
            }
        }
    }
    /// Dedicated cloud node model
    public partial interface IDedicatedCloudNode :
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.IJsonSerializable
    {
        /// <summary>Availability Zone id, e.g. "az1"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Availability Zone id, e.g. ""az1""",
        SerializedName = @"availabilityZoneId",
        PossibleTypes = new [] { typeof(string) })]
        string AvailabilityZoneId { get; set; }
        /// <summary>Availability Zone name, e.g. "Availability Zone 1"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Availability Zone name, e.g. ""Availability Zone 1""",
        SerializedName = @"availabilityZoneName",
        PossibleTypes = new [] { typeof(string) })]
        string AvailabilityZoneName { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"Azure-AsyncOperation",
        PossibleTypes = new [] { typeof(string) })]
        string AzureAsyncOperation { get; set; }
        /// <summary>VMWare Cloud Rack Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"VMWare Cloud Rack Name",
        SerializedName = @"cloudRackName",
        PossibleTypes = new [] { typeof(string) })]
        string CloudRackName { get;  }
        /// <summary>date time the resource was created</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"date time the resource was created",
        SerializedName = @"created",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? Created { get;  }
        /// <summary>
        /// dedicatedCloudNode example: 8 x Ten-Core Intel® Xeon® Processor E5-2640 v4 2.40GHz 25MB Cache (90W); 12 x 64GB PC4-19200
        /// 2400MHz DDR4 ECC Registered DIMM, ...
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"dedicatedCloudNode example: 8 x Ten-Core Intel® Xeon® Processor E5-2640 v4 2.40GHz 25MB Cache (90W); 12 x 64GB PC4-19200 2400MHz DDR4 ECC Registered DIMM, ...",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/dedicatedCloudNodes/{dedicatedCloudNodeName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/dedicatedCloudNodes/{dedicatedCloudNodeName}",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get;  }
        /// <summary>Azure region</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Azure region",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string Location { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"Location",
        PossibleTypes = new [] { typeof(string) })]
        string Location1 { get; set; }
        /// <summary>{dedicatedCloudNodeName}</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"{dedicatedCloudNodeName}",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get;  }
        /// <summary>count of nodes to create</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"count of nodes to create",
        SerializedName = @"nodesCount",
        PossibleTypes = new [] { typeof(int) })]
        int? NodesCount { get; set; }
        /// <summary>Placement Group id, e.g. "n1"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Placement Group id, e.g. ""n1""",
        SerializedName = @"placementGroupId",
        PossibleTypes = new [] { typeof(string) })]
        string PlacementGroupId { get; set; }
        /// <summary>Placement Name, e.g. "Placement Group 1"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Placement Name, e.g. ""Placement Group 1""",
        SerializedName = @"placementGroupName",
        PossibleTypes = new [] { typeof(string) })]
        string PlacementGroupName { get;  }
        /// <summary>Private Cloud Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Private Cloud Id",
        SerializedName = @"privateCloudId",
        PossibleTypes = new [] { typeof(string) })]
        string PrivateCloudId { get;  }
        /// <summary>Resource Pool Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Resource Pool Name",
        SerializedName = @"privateCloudName",
        PossibleTypes = new [] { typeof(string) })]
        string PrivateCloudName { get;  }
        /// <summary>The provisioning status of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning status of the resource",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>purchase id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"purchase id",
        SerializedName = @"purchaseId",
        PossibleTypes = new [] { typeof(string) })]
        string PurchaseId { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"Retry-After",
        PossibleTypes = new [] { typeof(int) })]
        int? RetryAfter { get; set; }
        /// <summary>The capacity of the SKU</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The capacity of the SKU",
        SerializedName = @"capacity",
        PossibleTypes = new [] { typeof(string) })]
        string SkuCapacity { get; set; }
        /// <summary>SKU's id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"SKU's id",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string SkuDescriptionId { get; set; }
        /// <summary>SKU's name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"SKU's name",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string SkuDescriptionName { get; set; }
        /// <summary>
        /// If the service has different generations of hardware, for the same SKU, then that can be captured here
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If the service has different generations of hardware, for the same SKU, then that can be captured here",
        SerializedName = @"family",
        PossibleTypes = new [] { typeof(string) })]
        string SkuFamily { get; set; }
        /// <summary>The name of the SKU for VMWare CloudSimple Node</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the SKU for VMWare CloudSimple Node",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string SkuName { get; set; }
        /// <summary>The tier of the SKU</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The tier of the SKU",
        SerializedName = @"tier",
        PossibleTypes = new [] { typeof(string) })]
        string SkuTier { get; set; }
        /// <summary>Node status, indicates is private cloud set up on this node or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Node status, indicates is private cloud set up on this node or not",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.NodeStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.NodeStatus? Status { get;  }
        /// <summary>Dedicated Cloud Nodes tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Dedicated Cloud Nodes tags",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.ITags) })]
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.ITags Tag { get; set; }
        /// <summary>{resourceProviderNamespace}/{resourceType}</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"{resourceProviderNamespace}/{resourceType}",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get;  }
        /// <summary>VMWare Cluster Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"VMWare Cluster Name",
        SerializedName = @"vmwareClusterName",
        PossibleTypes = new [] { typeof(string) })]
        string VmwareClusterName { get;  }

    }
    /// Dedicated cloud node model
    internal partial interface IDedicatedCloudNodeInternal

    {
        /// <summary>Availability Zone id, e.g. "az1"</summary>
        string AvailabilityZoneId { get; set; }
        /// <summary>Availability Zone name, e.g. "Availability Zone 1"</summary>
        string AvailabilityZoneName { get; set; }

        string AzureAsyncOperation { get; set; }
        /// <summary>VMWare Cloud Rack Name</summary>
        string CloudRackName { get; set; }
        /// <summary>date time the resource was created</summary>
        global::System.DateTime? Created { get; set; }
        /// <summary>
        /// dedicatedCloudNode example: 8 x Ten-Core Intel® Xeon® Processor E5-2640 v4 2.40GHz 25MB Cache (90W); 12 x 64GB PC4-19200
        /// 2400MHz DDR4 ECC Registered DIMM, ...
        /// </summary>
        string Description { get; set; }
        /// <summary>
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/dedicatedCloudNodes/{dedicatedCloudNodeName}
        /// </summary>
        string Id { get; set; }
        /// <summary>Azure region</summary>
        string Location { get; set; }

        string Location1 { get; set; }
        /// <summary>{dedicatedCloudNodeName}</summary>
        string Name { get; set; }
        /// <summary>count of nodes to create</summary>
        int? NodesCount { get; set; }
        /// <summary>Placement Group id, e.g. "n1"</summary>
        string PlacementGroupId { get; set; }
        /// <summary>Placement Name, e.g. "Placement Group 1"</summary>
        string PlacementGroupName { get; set; }
        /// <summary>Private Cloud Id</summary>
        string PrivateCloudId { get; set; }
        /// <summary>Resource Pool Name</summary>
        string PrivateCloudName { get; set; }
        /// <summary>Dedicated Cloud Nodes SKU's description</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.ISkuDescription PropertiesSkuDescription { get; set; }
        /// <summary>Dedicated Cloud Nodes properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudNodeProperties Property { get; set; }
        /// <summary>The provisioning status of the resource</summary>
        string ProvisioningState { get; set; }
        /// <summary>purchase id</summary>
        string PurchaseId { get; set; }

        int? RetryAfter { get; set; }
        /// <summary>Dedicated Cloud Nodes SKU</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.ISku Sku { get; set; }
        /// <summary>The capacity of the SKU</summary>
        string SkuCapacity { get; set; }
        /// <summary>SKU's id</summary>
        string SkuDescriptionId { get; set; }
        /// <summary>SKU's name</summary>
        string SkuDescriptionName { get; set; }
        /// <summary>
        /// If the service has different generations of hardware, for the same SKU, then that can be captured here
        /// </summary>
        string SkuFamily { get; set; }
        /// <summary>The name of the SKU for VMWare CloudSimple Node</summary>
        string SkuName { get; set; }
        /// <summary>The tier of the SKU</summary>
        string SkuTier { get; set; }
        /// <summary>Node status, indicates is private cloud set up on this node or not</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.NodeStatus? Status { get; set; }
        /// <summary>Dedicated Cloud Nodes tags</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.ITags Tag { get; set; }
        /// <summary>{resourceProviderNamespace}/{resourceType}</summary>
        string Type { get; set; }
        /// <summary>VMWare Cluster Name</summary>
        string VmwareClusterName { get; set; }

    }
}