// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Extensions;

    /// <summary>Virtual NIC model</summary>
    public partial class VirtualNic :
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNic,
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal
    {

        /// <summary>Backing field for <see cref="Customization" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IGuestOsnicCustomization _customization;

        /// <summary>guest OS customization for nic</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IGuestOsnicCustomization Customization { get => (this._customization = this._customization ?? new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.GuestOsnicCustomization()); set => this._customization = value; }

        /// <summary>IP address allocation method</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string CustomizationAllocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IGuestOsnicCustomizationInternal)Customization).Allocation; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IGuestOsnicCustomizationInternal)Customization).Allocation = value ?? null; }

        /// <summary>List of dns servers to use</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string[] CustomizationDnsServer { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IGuestOsnicCustomizationInternal)Customization).DnsServer; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IGuestOsnicCustomizationInternal)Customization).DnsServer = value ?? null /* arrayOf */; }

        /// <summary>Gateway addresses assigned to nic</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string[] CustomizationGateway { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IGuestOsnicCustomizationInternal)Customization).Gateway; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IGuestOsnicCustomizationInternal)Customization).Gateway = value ?? null /* arrayOf */; }

        /// <summary>Static ip address for nic</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string CustomizationIPAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IGuestOsnicCustomizationInternal)Customization).IPAddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IGuestOsnicCustomizationInternal)Customization).IPAddress = value ?? null; }

        /// <summary>Network mask for nic</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string CustomizationMask { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IGuestOsnicCustomizationInternal)Customization).Mask; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IGuestOsnicCustomizationInternal)Customization).Mask = value ?? null; }

        /// <summary>primary WINS server for Windows</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string CustomizationPrimaryWinsServer { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IGuestOsnicCustomizationInternal)Customization).PrimaryWinsServer; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IGuestOsnicCustomizationInternal)Customization).PrimaryWinsServer = value ?? null; }

        /// <summary>secondary WINS server for Windows</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string CustomizationSecondaryWinsServer { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IGuestOsnicCustomizationInternal)Customization).SecondaryWinsServer; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IGuestOsnicCustomizationInternal)Customization).SecondaryWinsServer = value ?? null; }

        /// <summary>Backing field for <see cref="IPAddress" /> property.</summary>
        private string[] _iPAddress;

        /// <summary>NIC ip address</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string[] IPAddress { get => this._iPAddress; set => this._iPAddress = value; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>NIC id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string Id { get => this._id; set => this._id = value; }

        /// <summary>Backing field for <see cref="MacAddress" /> property.</summary>
        private string _macAddress;

        /// <summary>NIC MAC address</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string MacAddress { get => this._macAddress; set => this._macAddress = value; }

        /// <summary>Internal Acessors for Customization</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IGuestOsnicCustomization Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal.Customization { get => (this._customization = this._customization ?? new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.GuestOsnicCustomization()); set { {_customization = value;} } }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal.Name { get => this._name; set { {_name = value;} } }

        /// <summary>Internal Acessors for Network</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNetwork Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal.Network { get => (this._network = this._network ?? new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.VirtualNetwork()); set { {_network = value;} } }

        /// <summary>Internal Acessors for NetworkAssignable</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal.NetworkAssignable { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNetworkInternal)Network).Assignable; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNetworkInternal)Network).Assignable = value; }

        /// <summary>Internal Acessors for NetworkLocation</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal.NetworkLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNetworkInternal)Network).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNetworkInternal)Network).Location = value; }

        /// <summary>Internal Acessors for NetworkName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal.NetworkName { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNetworkInternal)Network).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNetworkInternal)Network).Name = value; }

        /// <summary>Internal Acessors for NetworkProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNetworkProperties Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal.NetworkProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNetworkInternal)Network).Property; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNetworkInternal)Network).Property = value; }

        /// <summary>Internal Acessors for NetworkType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal.NetworkType { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNetworkInternal)Network).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNetworkInternal)Network).Type = value; }

        /// <summary>Internal Acessors for PrivateCloudId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal.PrivateCloudId { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNetworkInternal)Network).PrivateCloudId; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNetworkInternal)Network).PrivateCloudId = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>NIC name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string Name { get => this._name; }

        /// <summary>Backing field for <see cref="Network" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNetwork _network;

        /// <summary>Virtual Network</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNetwork Network { get => (this._network = this._network ?? new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.VirtualNetwork()); set => this._network = value; }

        /// <summary>can be used in vm creation/deletion</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public bool? NetworkAssignable { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNetworkInternal)Network).Assignable; }

        /// <summary>virtual network id (privateCloudId:vsphereId)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string NetworkId { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNetworkInternal)Network).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNetworkInternal)Network).Id = value ; }

        /// <summary>Azure region</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string NetworkLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNetworkInternal)Network).Location; }

        /// <summary>{VirtualNetworkName}</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string NetworkName { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNetworkInternal)Network).Name; }

        /// <summary>{resourceProviderNamespace}/{resourceType}</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string NetworkType { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNetworkInternal)Network).Type; }

        /// <summary>Backing field for <see cref="NicType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.NicType _nicType;

        /// <summary>NIC type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.NicType NicType { get => this._nicType; set => this._nicType = value; }

        /// <summary>Backing field for <see cref="PowerOnBoot" /> property.</summary>
        private bool? _powerOnBoot;

        /// <summary>Is NIC powered on/off on boot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public bool? PowerOnBoot { get => this._powerOnBoot; set => this._powerOnBoot = value; }

        /// <summary>The Private Cloud id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string PrivateCloudId { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNetworkInternal)Network).PrivateCloudId; }

        /// <summary>Creates an new <see cref="VirtualNic" /> instance.</summary>
        public VirtualNic()
        {

        }
    }
    /// Virtual NIC model
    public partial interface IVirtualNic :
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.IJsonSerializable
    {
        /// <summary>IP address allocation method</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"IP address allocation method",
        SerializedName = @"allocation",
        PossibleTypes = new [] { typeof(string) })]
        string CustomizationAllocation { get; set; }
        /// <summary>List of dns servers to use</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of dns servers to use",
        SerializedName = @"dnsServers",
        PossibleTypes = new [] { typeof(string) })]
        string[] CustomizationDnsServer { get; set; }
        /// <summary>Gateway addresses assigned to nic</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gateway addresses assigned to nic",
        SerializedName = @"gateway",
        PossibleTypes = new [] { typeof(string) })]
        string[] CustomizationGateway { get; set; }
        /// <summary>Static ip address for nic</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Static ip address for nic",
        SerializedName = @"ipAddress",
        PossibleTypes = new [] { typeof(string) })]
        string CustomizationIPAddress { get; set; }
        /// <summary>Network mask for nic</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Network mask for nic",
        SerializedName = @"mask",
        PossibleTypes = new [] { typeof(string) })]
        string CustomizationMask { get; set; }
        /// <summary>primary WINS server for Windows</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"primary WINS server for Windows",
        SerializedName = @"primaryWinsServer",
        PossibleTypes = new [] { typeof(string) })]
        string CustomizationPrimaryWinsServer { get; set; }
        /// <summary>secondary WINS server for Windows</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"secondary WINS server for Windows",
        SerializedName = @"secondaryWinsServer",
        PossibleTypes = new [] { typeof(string) })]
        string CustomizationSecondaryWinsServer { get; set; }
        /// <summary>NIC ip address</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"NIC ip address",
        SerializedName = @"ipAddresses",
        PossibleTypes = new [] { typeof(string) })]
        string[] IPAddress { get; set; }
        /// <summary>NIC id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"NIC id",
        SerializedName = @"virtualNicId",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get; set; }
        /// <summary>NIC MAC address</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"NIC MAC address",
        SerializedName = @"macAddress",
        PossibleTypes = new [] { typeof(string) })]
        string MacAddress { get; set; }
        /// <summary>NIC name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"NIC name",
        SerializedName = @"virtualNicName",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get;  }
        /// <summary>can be used in vm creation/deletion</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"can be used in vm creation/deletion",
        SerializedName = @"assignable",
        PossibleTypes = new [] { typeof(bool) })]
        bool? NetworkAssignable { get;  }
        /// <summary>virtual network id (privateCloudId:vsphereId)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"virtual network id (privateCloudId:vsphereId)",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkId { get; set; }
        /// <summary>Azure region</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Azure region",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkLocation { get;  }
        /// <summary>{VirtualNetworkName}</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"{VirtualNetworkName}",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkName { get;  }
        /// <summary>{resourceProviderNamespace}/{resourceType}</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"{resourceProviderNamespace}/{resourceType}",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkType { get;  }
        /// <summary>NIC type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"NIC type",
        SerializedName = @"nicType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.NicType) })]
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.NicType NicType { get; set; }
        /// <summary>Is NIC powered on/off on boot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Is NIC powered on/off on boot",
        SerializedName = @"powerOnBoot",
        PossibleTypes = new [] { typeof(bool) })]
        bool? PowerOnBoot { get; set; }
        /// <summary>The Private Cloud id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The Private Cloud id",
        SerializedName = @"privateCloudId",
        PossibleTypes = new [] { typeof(string) })]
        string PrivateCloudId { get;  }

    }
    /// Virtual NIC model
    internal partial interface IVirtualNicInternal

    {
        /// <summary>guest OS customization for nic</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IGuestOsnicCustomization Customization { get; set; }
        /// <summary>IP address allocation method</summary>
        string CustomizationAllocation { get; set; }
        /// <summary>List of dns servers to use</summary>
        string[] CustomizationDnsServer { get; set; }
        /// <summary>Gateway addresses assigned to nic</summary>
        string[] CustomizationGateway { get; set; }
        /// <summary>Static ip address for nic</summary>
        string CustomizationIPAddress { get; set; }
        /// <summary>Network mask for nic</summary>
        string CustomizationMask { get; set; }
        /// <summary>primary WINS server for Windows</summary>
        string CustomizationPrimaryWinsServer { get; set; }
        /// <summary>secondary WINS server for Windows</summary>
        string CustomizationSecondaryWinsServer { get; set; }
        /// <summary>NIC ip address</summary>
        string[] IPAddress { get; set; }
        /// <summary>NIC id</summary>
        string Id { get; set; }
        /// <summary>NIC MAC address</summary>
        string MacAddress { get; set; }
        /// <summary>NIC name</summary>
        string Name { get; set; }
        /// <summary>Virtual Network</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNetwork Network { get; set; }
        /// <summary>can be used in vm creation/deletion</summary>
        bool? NetworkAssignable { get; set; }
        /// <summary>virtual network id (privateCloudId:vsphereId)</summary>
        string NetworkId { get; set; }
        /// <summary>Azure region</summary>
        string NetworkLocation { get; set; }
        /// <summary>{VirtualNetworkName}</summary>
        string NetworkName { get; set; }
        /// <summary>Virtual Network properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNetworkProperties NetworkProperty { get; set; }
        /// <summary>{resourceProviderNamespace}/{resourceType}</summary>
        string NetworkType { get; set; }
        /// <summary>NIC type</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.NicType NicType { get; set; }
        /// <summary>Is NIC powered on/off on boot</summary>
        bool? PowerOnBoot { get; set; }
        /// <summary>The Private Cloud id</summary>
        string PrivateCloudId { get; set; }

    }
}