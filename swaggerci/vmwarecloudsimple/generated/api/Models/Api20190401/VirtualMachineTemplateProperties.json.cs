// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Extensions;

    /// <summary>Properties of virtual machine template</summary>
    public partial class VirtualMachineTemplateProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineTemplateProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineTemplateProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineTemplateProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonObject json ? new VirtualMachineTemplateProperties(json) : null;
        }

        /// <summary>
        /// Serializes this instance of <see cref="VirtualMachineTemplateProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="VirtualMachineTemplateProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != this._amountOfRam ? (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNumber((int)this._amountOfRam) : null, "amountOfRam" ,container.Add );
            if (null != this._controller)
            {
                var __w = new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.XNodeArray();
                foreach( var __x in this._controller )
                {
                    AddIf(__x?.ToJson(null, serializationMode) ,__w.Add);
                }
                container.Add("controllers",__w);
            }
            AddIf( null != (((object)this._description)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString(this._description.ToString()) : null, "description" ,container.Add );
            if (null != this._disk)
            {
                var __r = new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.XNodeArray();
                foreach( var __s in this._disk )
                {
                    AddIf(__s?.ToJson(null, serializationMode) ,__r.Add);
                }
                container.Add("disks",__r);
            }
            AddIf( null != this._exposeToGuestVM ? (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonBoolean((bool)this._exposeToGuestVM) : null, "exposeToGuestVM" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._guestOS)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString(this._guestOS.ToString()) : null, "guestOS" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._guestOSType)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString(this._guestOSType.ToString()) : null, "guestOSType" ,container.Add );
            }
            if (null != this._nic)
            {
                var __m = new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.XNodeArray();
                foreach( var __n in this._nic )
                {
                    AddIf(__n?.ToJson(null, serializationMode) ,__m.Add);
                }
                container.Add("nics",__m);
            }
            AddIf( null != this._numberOfCore ? (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNumber((int)this._numberOfCore) : null, "numberOfCores" ,container.Add );
            AddIf( null != (((object)this._path)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString(this._path.ToString()) : null, "path" ,container.Add );
            AddIf( null != (((object)this._privateCloudId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString(this._privateCloudId.ToString()) : null, "privateCloudId" ,container.Add );
            if (null != this._vSphereNetwork)
            {
                var __h = new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.XNodeArray();
                foreach( var __i in this._vSphereNetwork )
                {
                    AddIf(null != (((object)__i)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString(__i.ToString()) : null ,__h.Add);
                }
                container.Add("vSphereNetworks",__h);
            }
            if (null != this._vSphereTag)
            {
                var __c = new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.XNodeArray();
                foreach( var __d in this._vSphereTag )
                {
                    AddIf(null != (((object)__d)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString(__d.ToString()) : null ,__c.Add);
                }
                container.Add("vSphereTags",__c);
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._vmwaretool)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString(this._vmwaretool.ToString()) : null, "vmwaretools" ,container.Add );
            }
            AfterToJson(ref container);
            return container;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonObject into a new instance of <see cref="VirtualMachineTemplateProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal VirtualMachineTemplateProperties(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_amountOfRam = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNumber>("amountOfRam"), out var __jsonAmountOfRam) ? (int?)__jsonAmountOfRam : AmountOfRam;}
            {_controller = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonArray>("controllers"), out var __jsonControllers) ? If( __jsonControllers as Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualDiskController[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualDiskController) (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.VirtualDiskController.FromJson(__u) )) ))() : null : Controller;}
            {_description = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString>("description"), out var __jsonDescription) ? (string)__jsonDescription : (string)Description;}
            {_disk = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonArray>("disks"), out var __jsonDisks) ? If( __jsonDisks as Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonArray, out var __q) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualDisk[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__q, (__p)=>(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualDisk) (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.VirtualDisk.FromJson(__p) )) ))() : null : Disk;}
            {_exposeToGuestVM = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonBoolean>("exposeToGuestVM"), out var __jsonExposeToGuestVM) ? (bool?)__jsonExposeToGuestVM : ExposeToGuestVM;}
            {_guestOS = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString>("guestOS"), out var __jsonGuestOS) ? (string)__jsonGuestOS : (string)GuestOS;}
            {_guestOSType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString>("guestOSType"), out var __jsonGuestOSType) ? (string)__jsonGuestOSType : (string)GuestOSType;}
            {_nic = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonArray>("nics"), out var __jsonNics) ? If( __jsonNics as Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonArray, out var __l) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNic[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__l, (__k)=>(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNic) (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.VirtualNic.FromJson(__k) )) ))() : null : Nic;}
            {_numberOfCore = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNumber>("numberOfCores"), out var __jsonNumberOfCores) ? (int?)__jsonNumberOfCores : NumberOfCore;}
            {_path = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString>("path"), out var __jsonPath) ? (string)__jsonPath : (string)Path;}
            {_privateCloudId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString>("privateCloudId"), out var __jsonPrivateCloudId) ? (string)__jsonPrivateCloudId : (string)PrivateCloudId;}
            {_vSphereNetwork = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonArray>("vSphereNetworks"), out var __jsonVSphereNetworks) ? If( __jsonVSphereNetworks as Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonArray, out var __g) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__g, (__f)=>(string) (__f is Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString __e ? (string)(__e.ToString()) : null)) ))() : null : VSphereNetwork;}
            {_vSphereTag = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonArray>("vSphereTags"), out var __jsonVSphereTags) ? If( __jsonVSphereTags as Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonArray, out var __b) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__b, (__a)=>(string) (__a is Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString ___z ? (string)(___z.ToString()) : null)) ))() : null : VSphereTag;}
            {_vmwaretool = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString>("vmwaretools"), out var __jsonVmwaretools) ? (string)__jsonVmwaretools : (string)Vmwaretool;}
            AfterFromJson(json);
        }
    }
}