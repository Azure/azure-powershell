// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Extensions;

    /// <summary>Properties of private</summary>
    public partial class PrivateCloudProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonObject json ? new PrivateCloudProperties(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonObject into a new instance of <see cref="PrivateCloudProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal PrivateCloudProperties(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_availabilityZoneId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString>("availabilityZoneId"), out var __jsonAvailabilityZoneId) ? (string)__jsonAvailabilityZoneId : (string)AvailabilityZoneId;}
            {_availabilityZoneName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString>("availabilityZoneName"), out var __jsonAvailabilityZoneName) ? (string)__jsonAvailabilityZoneName : (string)AvailabilityZoneName;}
            {_clustersNumber = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNumber>("clustersNumber"), out var __jsonClustersNumber) ? (int?)__jsonClustersNumber : ClustersNumber;}
            {_createdBy = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString>("createdBy"), out var __jsonCreatedBy) ? (string)__jsonCreatedBy : (string)CreatedBy;}
            {_createdOn = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString>("createdOn"), out var __jsonCreatedOn) ? global::System.DateTime.TryParse((string)__jsonCreatedOn, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonCreatedOnValue) ? __jsonCreatedOnValue : CreatedOn : CreatedOn;}
            {_dnsServer = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonArray>("dnsServers"), out var __jsonDnsServers) ? If( __jsonDnsServers as Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(string) (__u is Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString __t ? (string)(__t.ToString()) : null)) ))() : null : DnsServer;}
            {_expire = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString>("expires"), out var __jsonExpires) ? (string)__jsonExpires : (string)Expire;}
            {_nsxType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString>("nsxType"), out var __jsonNsxType) ? (string)__jsonNsxType : (string)NsxType;}
            {_placementGroupId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString>("placementGroupId"), out var __jsonPlacementGroupId) ? (string)__jsonPlacementGroupId : (string)PlacementGroupId;}
            {_placementGroupName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString>("placementGroupName"), out var __jsonPlacementGroupName) ? (string)__jsonPlacementGroupName : (string)PlacementGroupName;}
            {_privateCloudId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString>("privateCloudId"), out var __jsonPrivateCloudId) ? (string)__jsonPrivateCloudId : (string)PrivateCloudId;}
            {_resourcePool = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonArray>("resourcePools"), out var __jsonResourcePools) ? If( __jsonResourcePools as Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonArray, out var __q) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IResourcePool[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__q, (__p)=>(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IResourcePool) (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.ResourcePool.FromJson(__p) )) ))() : null : ResourcePool;}
            {_state = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString>("state"), out var __jsonState) ? (string)__jsonState : (string)State;}
            {_totalCpuCore = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNumber>("totalCpuCores"), out var __jsonTotalCpuCores) ? (int?)__jsonTotalCpuCores : TotalCpuCore;}
            {_totalNode = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNumber>("totalNodes"), out var __jsonTotalNodes) ? (int?)__jsonTotalNodes : TotalNode;}
            {_totalRam = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNumber>("totalRam"), out var __jsonTotalRam) ? (int?)__jsonTotalRam : TotalRam;}
            {_totalStorage = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNumber>("totalStorage"), out var __jsonTotalStorage) ? (float?)__jsonTotalStorage : TotalStorage;}
            {_type = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString>("type"), out var __jsonType) ? (string)__jsonType : (string)Type;}
            {_vSphereVersion = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString>("vSphereVersion"), out var __jsonVSphereVersion) ? (string)__jsonVSphereVersion : (string)VSphereVersion;}
            {_vcenterFqdn = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString>("vcenterFqdn"), out var __jsonVcenterFqdn) ? (string)__jsonVcenterFqdn : (string)VcenterFqdn;}
            {_vcenterRefid = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString>("vcenterRefid"), out var __jsonVcenterRefid) ? (string)__jsonVcenterRefid : (string)VcenterRefid;}
            {_virtualMachineTemplate = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonArray>("virtualMachineTemplates"), out var __jsonVirtualMachineTemplates) ? If( __jsonVirtualMachineTemplates as Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonArray, out var __l) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineTemplate[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__l, (__k)=>(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineTemplate) (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.VirtualMachineTemplate.FromJson(__k) )) ))() : null : VirtualMachineTemplate;}
            {_virtualNetwork = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonArray>("virtualNetworks"), out var __jsonVirtualNetworks) ? If( __jsonVirtualNetworks as Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonArray, out var __g) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNetwork[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__g, (__f)=>(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNetwork) (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.VirtualNetwork.FromJson(__f) )) ))() : null : VirtualNetwork;}
            {_vrOpsEnabled = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonBoolean>("vrOpsEnabled"), out var __jsonVrOpsEnabled) ? (bool?)__jsonVrOpsEnabled : VrOpsEnabled;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="PrivateCloudProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="PrivateCloudProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != (((object)this._availabilityZoneId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString(this._availabilityZoneId.ToString()) : null, "availabilityZoneId" ,container.Add );
            AddIf( null != (((object)this._availabilityZoneName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString(this._availabilityZoneName.ToString()) : null, "availabilityZoneName" ,container.Add );
            AddIf( null != this._clustersNumber ? (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNumber((int)this._clustersNumber) : null, "clustersNumber" ,container.Add );
            AddIf( null != (((object)this._createdBy)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString(this._createdBy.ToString()) : null, "createdBy" ,container.Add );
            AddIf( null != this._createdOn ? (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString(this._createdOn?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "createdOn" ,container.Add );
            if (null != this._dnsServer)
            {
                var __w = new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.XNodeArray();
                foreach( var __x in this._dnsServer )
                {
                    AddIf(null != (((object)__x)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString(__x.ToString()) : null ,__w.Add);
                }
                container.Add("dnsServers",__w);
            }
            AddIf( null != (((object)this._expire)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString(this._expire.ToString()) : null, "expires" ,container.Add );
            AddIf( null != (((object)this._nsxType)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString(this._nsxType.ToString()) : null, "nsxType" ,container.Add );
            AddIf( null != (((object)this._placementGroupId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString(this._placementGroupId.ToString()) : null, "placementGroupId" ,container.Add );
            AddIf( null != (((object)this._placementGroupName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString(this._placementGroupName.ToString()) : null, "placementGroupName" ,container.Add );
            AddIf( null != (((object)this._privateCloudId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString(this._privateCloudId.ToString()) : null, "privateCloudId" ,container.Add );
            if (null != this._resourcePool)
            {
                var __r = new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.XNodeArray();
                foreach( var __s in this._resourcePool )
                {
                    AddIf(__s?.ToJson(null, serializationMode) ,__r.Add);
                }
                container.Add("resourcePools",__r);
            }
            AddIf( null != (((object)this._state)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString(this._state.ToString()) : null, "state" ,container.Add );
            AddIf( null != this._totalCpuCore ? (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNumber((int)this._totalCpuCore) : null, "totalCpuCores" ,container.Add );
            AddIf( null != this._totalNode ? (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNumber((int)this._totalNode) : null, "totalNodes" ,container.Add );
            AddIf( null != this._totalRam ? (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNumber((int)this._totalRam) : null, "totalRam" ,container.Add );
            AddIf( null != this._totalStorage ? (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNumber((float)this._totalStorage) : null, "totalStorage" ,container.Add );
            AddIf( null != (((object)this._type)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString(this._type.ToString()) : null, "type" ,container.Add );
            AddIf( null != (((object)this._vSphereVersion)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString(this._vSphereVersion.ToString()) : null, "vSphereVersion" ,container.Add );
            AddIf( null != (((object)this._vcenterFqdn)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString(this._vcenterFqdn.ToString()) : null, "vcenterFqdn" ,container.Add );
            AddIf( null != (((object)this._vcenterRefid)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonString(this._vcenterRefid.ToString()) : null, "vcenterRefid" ,container.Add );
            if (null != this._virtualMachineTemplate)
            {
                var __m = new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.XNodeArray();
                foreach( var __n in this._virtualMachineTemplate )
                {
                    AddIf(__n?.ToJson(null, serializationMode) ,__m.Add);
                }
                container.Add("virtualMachineTemplates",__m);
            }
            if (null != this._virtualNetwork)
            {
                var __h = new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.XNodeArray();
                foreach( var __i in this._virtualNetwork )
                {
                    AddIf(__i?.ToJson(null, serializationMode) ,__h.Add);
                }
                container.Add("virtualNetworks",__h);
            }
            AddIf( null != this._vrOpsEnabled ? (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonBoolean((bool)this._vrOpsEnabled) : null, "vrOpsEnabled" ,container.Add );
            AfterToJson(ref container);
            return container;
        }
    }
}