// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401
{
    using Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.PowerShell;

    /// <summary>Virtual NIC model</summary>
    [System.ComponentModel.TypeConverter(typeof(VirtualNicTypeConverter))]
    public partial class VirtualNic
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.VirtualNic"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNic" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNic DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new VirtualNic(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.VirtualNic"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNic" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNic DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new VirtualNic(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="VirtualNic" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="VirtualNic" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNic FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.SerializationMode.IncludeAll)?.ToString();

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.VirtualNic"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal VirtualNic(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Customization"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).Customization = (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IGuestOsnicCustomization) content.GetValueForProperty("Customization",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).Customization, Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.GuestOsnicCustomizationTypeConverter.ConvertFrom);
            }
            if (content.Contains("Network"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).Network = (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNetwork) content.GetValueForProperty("Network",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).Network, Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.VirtualNetworkTypeConverter.ConvertFrom);
            }
            if (content.Contains("IPAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).IPAddress = (string[]) content.GetValueForProperty("IPAddress",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).IPAddress, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("MacAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).MacAddress = (string) content.GetValueForProperty("MacAddress",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).MacAddress, global::System.Convert.ToString);
            }
            if (content.Contains("NicType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).NicType = (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.NicType) content.GetValueForProperty("NicType",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).NicType, Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.NicType.CreateFrom);
            }
            if (content.Contains("PowerOnBoot"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).PowerOnBoot = (bool?) content.GetValueForProperty("PowerOnBoot",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).PowerOnBoot, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("CustomizationAllocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).CustomizationAllocation = (string) content.GetValueForProperty("CustomizationAllocation",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).CustomizationAllocation, global::System.Convert.ToString);
            }
            if (content.Contains("CustomizationDnsServer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).CustomizationDnsServer = (string[]) content.GetValueForProperty("CustomizationDnsServer",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).CustomizationDnsServer, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("CustomizationGateway"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).CustomizationGateway = (string[]) content.GetValueForProperty("CustomizationGateway",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).CustomizationGateway, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("CustomizationIPAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).CustomizationIPAddress = (string) content.GetValueForProperty("CustomizationIPAddress",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).CustomizationIPAddress, global::System.Convert.ToString);
            }
            if (content.Contains("CustomizationMask"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).CustomizationMask = (string) content.GetValueForProperty("CustomizationMask",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).CustomizationMask, global::System.Convert.ToString);
            }
            if (content.Contains("CustomizationPrimaryWinsServer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).CustomizationPrimaryWinsServer = (string) content.GetValueForProperty("CustomizationPrimaryWinsServer",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).CustomizationPrimaryWinsServer, global::System.Convert.ToString);
            }
            if (content.Contains("CustomizationSecondaryWinsServer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).CustomizationSecondaryWinsServer = (string) content.GetValueForProperty("CustomizationSecondaryWinsServer",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).CustomizationSecondaryWinsServer, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkProperty"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).NetworkProperty = (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNetworkProperties) content.GetValueForProperty("NetworkProperty",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).NetworkProperty, Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.VirtualNetworkPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkAssignable"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).NetworkAssignable = (bool?) content.GetValueForProperty("NetworkAssignable",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).NetworkAssignable, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("NetworkId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).NetworkId = (string) content.GetValueForProperty("NetworkId",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).NetworkId, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).NetworkLocation = (string) content.GetValueForProperty("NetworkLocation",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).NetworkLocation, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).NetworkName = (string) content.GetValueForProperty("NetworkName",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).NetworkName, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).NetworkType = (string) content.GetValueForProperty("NetworkType",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).NetworkType, global::System.Convert.ToString);
            }
            if (content.Contains("PrivateCloudId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).PrivateCloudId = (string) content.GetValueForProperty("PrivateCloudId",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).PrivateCloudId, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.VirtualNic"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal VirtualNic(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Customization"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).Customization = (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IGuestOsnicCustomization) content.GetValueForProperty("Customization",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).Customization, Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.GuestOsnicCustomizationTypeConverter.ConvertFrom);
            }
            if (content.Contains("Network"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).Network = (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNetwork) content.GetValueForProperty("Network",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).Network, Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.VirtualNetworkTypeConverter.ConvertFrom);
            }
            if (content.Contains("IPAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).IPAddress = (string[]) content.GetValueForProperty("IPAddress",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).IPAddress, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("MacAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).MacAddress = (string) content.GetValueForProperty("MacAddress",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).MacAddress, global::System.Convert.ToString);
            }
            if (content.Contains("NicType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).NicType = (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.NicType) content.GetValueForProperty("NicType",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).NicType, Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.NicType.CreateFrom);
            }
            if (content.Contains("PowerOnBoot"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).PowerOnBoot = (bool?) content.GetValueForProperty("PowerOnBoot",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).PowerOnBoot, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("CustomizationAllocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).CustomizationAllocation = (string) content.GetValueForProperty("CustomizationAllocation",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).CustomizationAllocation, global::System.Convert.ToString);
            }
            if (content.Contains("CustomizationDnsServer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).CustomizationDnsServer = (string[]) content.GetValueForProperty("CustomizationDnsServer",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).CustomizationDnsServer, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("CustomizationGateway"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).CustomizationGateway = (string[]) content.GetValueForProperty("CustomizationGateway",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).CustomizationGateway, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("CustomizationIPAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).CustomizationIPAddress = (string) content.GetValueForProperty("CustomizationIPAddress",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).CustomizationIPAddress, global::System.Convert.ToString);
            }
            if (content.Contains("CustomizationMask"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).CustomizationMask = (string) content.GetValueForProperty("CustomizationMask",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).CustomizationMask, global::System.Convert.ToString);
            }
            if (content.Contains("CustomizationPrimaryWinsServer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).CustomizationPrimaryWinsServer = (string) content.GetValueForProperty("CustomizationPrimaryWinsServer",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).CustomizationPrimaryWinsServer, global::System.Convert.ToString);
            }
            if (content.Contains("CustomizationSecondaryWinsServer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).CustomizationSecondaryWinsServer = (string) content.GetValueForProperty("CustomizationSecondaryWinsServer",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).CustomizationSecondaryWinsServer, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkProperty"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).NetworkProperty = (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNetworkProperties) content.GetValueForProperty("NetworkProperty",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).NetworkProperty, Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.VirtualNetworkPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkAssignable"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).NetworkAssignable = (bool?) content.GetValueForProperty("NetworkAssignable",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).NetworkAssignable, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("NetworkId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).NetworkId = (string) content.GetValueForProperty("NetworkId",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).NetworkId, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).NetworkLocation = (string) content.GetValueForProperty("NetworkLocation",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).NetworkLocation, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).NetworkName = (string) content.GetValueForProperty("NetworkName",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).NetworkName, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).NetworkType = (string) content.GetValueForProperty("NetworkType",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).NetworkType, global::System.Convert.ToString);
            }
            if (content.Contains("PrivateCloudId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).PrivateCloudId = (string) content.GetValueForProperty("PrivateCloudId",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNicInternal)this).PrivateCloudId, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }
    }
    /// Virtual NIC model
    [System.ComponentModel.TypeConverter(typeof(VirtualNicTypeConverter))]
    public partial interface IVirtualNic

    {

    }
}