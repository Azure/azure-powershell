// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Extensions;

    /// <summary>Dedicated cloud service model</summary>
    public partial class DedicatedCloudService :
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudService,
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudServiceInternal
    {

        /// <summary>
        /// gateway Subnet for the account. It will collect the subnet address and always treat it as /28
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string GatewaySubnet { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudServicePropertiesInternal)Property).GatewaySubnet; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudServicePropertiesInternal)Property).GatewaySubnet = value ?? null; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/dedicatedCloudServices/{dedicatedCloudServiceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string Id { get => this._id; }

        /// <summary>indicates whether account onboarded or not in a given region</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.OnboardingStatus? IsAccountOnboarded { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudServicePropertiesInternal)Property).IsAccountOnboarded; }

        /// <summary>Backing field for <see cref="Location" /> property.</summary>
        private string _location;

        /// <summary>Azure region</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string Location { get => this._location; set => this._location = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudServiceInternal.Id { get => this._id; set { {_id = value;} } }

        /// <summary>Internal Acessors for IsAccountOnboarded</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.OnboardingStatus? Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudServiceInternal.IsAccountOnboarded { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudServicePropertiesInternal)Property).IsAccountOnboarded; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudServicePropertiesInternal)Property).IsAccountOnboarded = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudServiceInternal.Name { get => this._name; set { {_name = value;} } }

        /// <summary>Internal Acessors for Node</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudServiceInternal.Node { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudServicePropertiesInternal)Property).Node; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudServicePropertiesInternal)Property).Node = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudServiceProperties Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudServiceInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.DedicatedCloudServiceProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ServiceUrl</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudServiceInternal.ServiceUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudServicePropertiesInternal)Property).ServiceUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudServicePropertiesInternal)Property).ServiceUrl = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudServiceInternal.Type { get => this._type; set { {_type = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>{dedicatedCloudServiceName}</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string Name { get => this._name; }

        /// <summary>total nodes purchased</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public int? Node { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudServicePropertiesInternal)Property).Node; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudServiceProperties _property;

        /// <summary>The properties of Dedicated Node Service</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudServiceProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.DedicatedCloudServiceProperties()); set => this._property = value; }

        /// <summary>link to a service management web portal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string ServiceUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudServicePropertiesInternal)Property).ServiceUrl; }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.ITags _tag;

        /// <summary>The list of tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.ITags Tag { get => (this._tag = this._tag ?? new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.Tags()); set => this._tag = value; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>{resourceProviderNamespace}/{resourceType}</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string Type { get => this._type; }

        /// <summary>Creates an new <see cref="DedicatedCloudService" /> instance.</summary>
        public DedicatedCloudService()
        {

        }
    }
    /// Dedicated cloud service model
    public partial interface IDedicatedCloudService :
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.IJsonSerializable
    {
        /// <summary>
        /// gateway Subnet for the account. It will collect the subnet address and always treat it as /28
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"gateway Subnet for the account. It will collect the subnet address and always treat it as /28",
        SerializedName = @"gatewaySubnet",
        PossibleTypes = new [] { typeof(string) })]
        string GatewaySubnet { get; set; }
        /// <summary>
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/dedicatedCloudServices/{dedicatedCloudServiceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/dedicatedCloudServices/{dedicatedCloudServiceName}",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get;  }
        /// <summary>indicates whether account onboarded or not in a given region</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"indicates whether account onboarded or not in a given region",
        SerializedName = @"isAccountOnboarded",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.OnboardingStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.OnboardingStatus? IsAccountOnboarded { get;  }
        /// <summary>Azure region</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Azure region",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string Location { get; set; }
        /// <summary>{dedicatedCloudServiceName}</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"{dedicatedCloudServiceName}",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get;  }
        /// <summary>total nodes purchased</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"total nodes purchased",
        SerializedName = @"nodes",
        PossibleTypes = new [] { typeof(int) })]
        int? Node { get;  }
        /// <summary>link to a service management web portal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"link to a service management web portal",
        SerializedName = @"serviceURL",
        PossibleTypes = new [] { typeof(string) })]
        string ServiceUrl { get;  }
        /// <summary>The list of tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of tags",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.ITags) })]
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.ITags Tag { get; set; }
        /// <summary>{resourceProviderNamespace}/{resourceType}</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"{resourceProviderNamespace}/{resourceType}",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get;  }

    }
    /// Dedicated cloud service model
    internal partial interface IDedicatedCloudServiceInternal

    {
        /// <summary>
        /// gateway Subnet for the account. It will collect the subnet address and always treat it as /28
        /// </summary>
        string GatewaySubnet { get; set; }
        /// <summary>
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/dedicatedCloudServices/{dedicatedCloudServiceName}
        /// </summary>
        string Id { get; set; }
        /// <summary>indicates whether account onboarded or not in a given region</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.OnboardingStatus? IsAccountOnboarded { get; set; }
        /// <summary>Azure region</summary>
        string Location { get; set; }
        /// <summary>{dedicatedCloudServiceName}</summary>
        string Name { get; set; }
        /// <summary>total nodes purchased</summary>
        int? Node { get; set; }
        /// <summary>The properties of Dedicated Node Service</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudServiceProperties Property { get; set; }
        /// <summary>link to a service management web portal</summary>
        string ServiceUrl { get; set; }
        /// <summary>The list of tags</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.ITags Tag { get; set; }
        /// <summary>{resourceProviderNamespace}/{resourceType}</summary>
        string Type { get; set; }

    }
}