// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Extensions;

    /// <summary>Private cloud model</summary>
    public partial class PrivateCloud :
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloud,
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal
    {

        /// <summary>Availability Zone id, e.g. "az1"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string AvailabilityZoneId { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudPropertiesInternal)Property).AvailabilityZoneId; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudPropertiesInternal)Property).AvailabilityZoneId = value ?? null; }

        /// <summary>Availability Zone name, e.g. "Availability Zone 1"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string AvailabilityZoneName { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudPropertiesInternal)Property).AvailabilityZoneName; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudPropertiesInternal)Property).AvailabilityZoneName = value ?? null; }

        /// <summary>Number of clusters</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public int? ClustersNumber { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudPropertiesInternal)Property).ClustersNumber; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudPropertiesInternal)Property).ClustersNumber = value ?? default(int); }

        /// <summary>User's emails who created cloud</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string CreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudPropertiesInternal)Property).CreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudPropertiesInternal)Property).CreatedBy = value ?? null; }

        /// <summary>When private cloud was created</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public global::System.DateTime? CreatedOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudPropertiesInternal)Property).CreatedOn; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudPropertiesInternal)Property).CreatedOn = value ?? default(global::System.DateTime); }

        /// <summary>Array of DNS servers</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string[] DnsServer { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudPropertiesInternal)Property).DnsServer; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudPropertiesInternal)Property).DnsServer = value ?? null /* arrayOf */; }

        /// <summary>Expiration date of PC</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string Expire { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudPropertiesInternal)Property).Expire; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudPropertiesInternal)Property).Expire = value ?? null; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>
        /// Azure Id, e.g. "/subscriptions/4da99247-a172-4ed6-8ae9-ebed2d12f839/providers/Microsoft.VMwareCloudSimple/privateClouds/cloud123"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string Id { get => this._id; set => this._id = value; }

        /// <summary>Backing field for <see cref="Location" /> property.</summary>
        private string _location;

        /// <summary>Location where private cloud created, e.g "westus"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string Location { get => this._location; set => this._location = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudProperties Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.PrivateCloudProperties()); set { {_property = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Private cloud name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Nsx Type, e.g. "Advanced"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string NsxType { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudPropertiesInternal)Property).NsxType; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudPropertiesInternal)Property).NsxType = value ?? null; }

        /// <summary>Placement Group id, e.g. "n1"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string PlacementGroupId { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudPropertiesInternal)Property).PlacementGroupId; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudPropertiesInternal)Property).PlacementGroupId = value ?? null; }

        /// <summary>Placement Group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string PlacementGroupName { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudPropertiesInternal)Property).PlacementGroupName; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudPropertiesInternal)Property).PlacementGroupName = value ?? null; }

        /// <summary>Id of a private cloud</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string PrivateCloudId { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudPropertiesInternal)Property).PrivateCloudId; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudPropertiesInternal)Property).PrivateCloudId = value ?? null; }

        /// <summary>Virtualization type e.g. "vSphere"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string PropertiesType { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudPropertiesInternal)Property).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudPropertiesInternal)Property).Type = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudProperties _property;

        /// <summary>Private cloud properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.PrivateCloudProperties()); set => this._property = value; }

        /// <summary>The list of Resource Pools</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IResourcePool[] ResourcePool { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudPropertiesInternal)Property).ResourcePool; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudPropertiesInternal)Property).ResourcePool = value ?? null /* arrayOf */; }

        /// <summary>Private Cloud state, e.g. "operational"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string State { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudPropertiesInternal)Property).State; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudPropertiesInternal)Property).State = value ?? null; }

        /// <summary>Number of cores</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public int? TotalCpuCore { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudPropertiesInternal)Property).TotalCpuCore; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudPropertiesInternal)Property).TotalCpuCore = value ?? default(int); }

        /// <summary>Number of nodes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public int? TotalNode { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudPropertiesInternal)Property).TotalNode; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudPropertiesInternal)Property).TotalNode = value ?? default(int); }

        /// <summary>Memory size</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public int? TotalRam { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudPropertiesInternal)Property).TotalRam; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudPropertiesInternal)Property).TotalRam = value ?? default(int); }

        /// <summary>Disk space in TB</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public float? TotalStorage { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudPropertiesInternal)Property).TotalStorage; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudPropertiesInternal)Property).TotalStorage = value ?? default(float); }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.PrivateCloudResourceType? _type;

        /// <summary>Azure Resource type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.PrivateCloudResourceType? Type { get => this._type; set => this._type = value; }

        /// <summary>e.g. "6.5u2"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string VSphereVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudPropertiesInternal)Property).VSphereVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudPropertiesInternal)Property).VSphereVersion = value ?? null; }

        /// <summary>FQDN for vcenter access</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string VcenterFqdn { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudPropertiesInternal)Property).VcenterFqdn; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudPropertiesInternal)Property).VcenterFqdn = value ?? null; }

        /// <summary>Vcenter ip address</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public string VcenterRefid { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudPropertiesInternal)Property).VcenterRefid; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudPropertiesInternal)Property).VcenterRefid = value ?? null; }

        /// <summary>The list of Virtual Machine Templates</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineTemplate[] VirtualMachineTemplate { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudPropertiesInternal)Property).VirtualMachineTemplate; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudPropertiesInternal)Property).VirtualMachineTemplate = value ?? null /* arrayOf */; }

        /// <summary>The list of Virtual Networks</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNetwork[] VirtualNetwork { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudPropertiesInternal)Property).VirtualNetwork; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudPropertiesInternal)Property).VirtualNetwork = value ?? null /* arrayOf */; }

        /// <summary>Is Vrops enabled/disabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Inlined)]
        public bool? VrOpsEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudPropertiesInternal)Property).VrOpsEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudPropertiesInternal)Property).VrOpsEnabled = value ?? default(bool); }

        /// <summary>Creates an new <see cref="PrivateCloud" /> instance.</summary>
        public PrivateCloud()
        {

        }
    }
    /// Private cloud model
    public partial interface IPrivateCloud :
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.IJsonSerializable
    {
        /// <summary>Availability Zone id, e.g. "az1"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Availability Zone id, e.g. ""az1""",
        SerializedName = @"availabilityZoneId",
        PossibleTypes = new [] { typeof(string) })]
        string AvailabilityZoneId { get; set; }
        /// <summary>Availability Zone name, e.g. "Availability Zone 1"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Availability Zone name, e.g. ""Availability Zone 1""",
        SerializedName = @"availabilityZoneName",
        PossibleTypes = new [] { typeof(string) })]
        string AvailabilityZoneName { get; set; }
        /// <summary>Number of clusters</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of clusters",
        SerializedName = @"clustersNumber",
        PossibleTypes = new [] { typeof(int) })]
        int? ClustersNumber { get; set; }
        /// <summary>User's emails who created cloud</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"User's emails who created cloud",
        SerializedName = @"createdBy",
        PossibleTypes = new [] { typeof(string) })]
        string CreatedBy { get; set; }
        /// <summary>When private cloud was created</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"When private cloud was created",
        SerializedName = @"createdOn",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CreatedOn { get; set; }
        /// <summary>Array of DNS servers</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Array of DNS servers",
        SerializedName = @"dnsServers",
        PossibleTypes = new [] { typeof(string) })]
        string[] DnsServer { get; set; }
        /// <summary>Expiration date of PC</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Expiration date of PC",
        SerializedName = @"expires",
        PossibleTypes = new [] { typeof(string) })]
        string Expire { get; set; }
        /// <summary>
        /// Azure Id, e.g. "/subscriptions/4da99247-a172-4ed6-8ae9-ebed2d12f839/providers/Microsoft.VMwareCloudSimple/privateClouds/cloud123"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Azure Id, e.g. ""/subscriptions/4da99247-a172-4ed6-8ae9-ebed2d12f839/providers/Microsoft.VMwareCloudSimple/privateClouds/cloud123""",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get; set; }
        /// <summary>Location where private cloud created, e.g "westus"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Location where private cloud created, e.g ""westus""",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string Location { get; set; }
        /// <summary>Private cloud name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Private cloud name",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>Nsx Type, e.g. "Advanced"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Nsx Type, e.g. ""Advanced""",
        SerializedName = @"nsxType",
        PossibleTypes = new [] { typeof(string) })]
        string NsxType { get; set; }
        /// <summary>Placement Group id, e.g. "n1"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Placement Group id, e.g. ""n1""",
        SerializedName = @"placementGroupId",
        PossibleTypes = new [] { typeof(string) })]
        string PlacementGroupId { get; set; }
        /// <summary>Placement Group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Placement Group name",
        SerializedName = @"placementGroupName",
        PossibleTypes = new [] { typeof(string) })]
        string PlacementGroupName { get; set; }
        /// <summary>Id of a private cloud</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Id of a private cloud",
        SerializedName = @"privateCloudId",
        PossibleTypes = new [] { typeof(string) })]
        string PrivateCloudId { get; set; }
        /// <summary>Virtualization type e.g. "vSphere"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Virtualization type e.g. ""vSphere""",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string PropertiesType { get; set; }
        /// <summary>The list of Resource Pools</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of Resource Pools",
        SerializedName = @"resourcePools",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IResourcePool) })]
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IResourcePool[] ResourcePool { get; set; }
        /// <summary>Private Cloud state, e.g. "operational"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Private Cloud state, e.g. ""operational""",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(string) })]
        string State { get; set; }
        /// <summary>Number of cores</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of cores",
        SerializedName = @"totalCpuCores",
        PossibleTypes = new [] { typeof(int) })]
        int? TotalCpuCore { get; set; }
        /// <summary>Number of nodes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of nodes",
        SerializedName = @"totalNodes",
        PossibleTypes = new [] { typeof(int) })]
        int? TotalNode { get; set; }
        /// <summary>Memory size</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Memory size",
        SerializedName = @"totalRam",
        PossibleTypes = new [] { typeof(int) })]
        int? TotalRam { get; set; }
        /// <summary>Disk space in TB</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Disk space in TB",
        SerializedName = @"totalStorage",
        PossibleTypes = new [] { typeof(float) })]
        float? TotalStorage { get; set; }
        /// <summary>Azure Resource type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Azure Resource type",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.PrivateCloudResourceType) })]
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.PrivateCloudResourceType? Type { get; set; }
        /// <summary>e.g. "6.5u2"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"e.g. ""6.5u2""",
        SerializedName = @"vSphereVersion",
        PossibleTypes = new [] { typeof(string) })]
        string VSphereVersion { get; set; }
        /// <summary>FQDN for vcenter access</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"FQDN for vcenter access",
        SerializedName = @"vcenterFqdn",
        PossibleTypes = new [] { typeof(string) })]
        string VcenterFqdn { get; set; }
        /// <summary>Vcenter ip address</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Vcenter ip address",
        SerializedName = @"vcenterRefid",
        PossibleTypes = new [] { typeof(string) })]
        string VcenterRefid { get; set; }
        /// <summary>The list of Virtual Machine Templates</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of Virtual Machine Templates",
        SerializedName = @"virtualMachineTemplates",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineTemplate) })]
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineTemplate[] VirtualMachineTemplate { get; set; }
        /// <summary>The list of Virtual Networks</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of Virtual Networks",
        SerializedName = @"virtualNetworks",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNetwork) })]
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNetwork[] VirtualNetwork { get; set; }
        /// <summary>Is Vrops enabled/disabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Is Vrops enabled/disabled",
        SerializedName = @"vrOpsEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? VrOpsEnabled { get; set; }

    }
    /// Private cloud model
    internal partial interface IPrivateCloudInternal

    {
        /// <summary>Availability Zone id, e.g. "az1"</summary>
        string AvailabilityZoneId { get; set; }
        /// <summary>Availability Zone name, e.g. "Availability Zone 1"</summary>
        string AvailabilityZoneName { get; set; }
        /// <summary>Number of clusters</summary>
        int? ClustersNumber { get; set; }
        /// <summary>User's emails who created cloud</summary>
        string CreatedBy { get; set; }
        /// <summary>When private cloud was created</summary>
        global::System.DateTime? CreatedOn { get; set; }
        /// <summary>Array of DNS servers</summary>
        string[] DnsServer { get; set; }
        /// <summary>Expiration date of PC</summary>
        string Expire { get; set; }
        /// <summary>
        /// Azure Id, e.g. "/subscriptions/4da99247-a172-4ed6-8ae9-ebed2d12f839/providers/Microsoft.VMwareCloudSimple/privateClouds/cloud123"
        /// </summary>
        string Id { get; set; }
        /// <summary>Location where private cloud created, e.g "westus"</summary>
        string Location { get; set; }
        /// <summary>Private cloud name</summary>
        string Name { get; set; }
        /// <summary>Nsx Type, e.g. "Advanced"</summary>
        string NsxType { get; set; }
        /// <summary>Placement Group id, e.g. "n1"</summary>
        string PlacementGroupId { get; set; }
        /// <summary>Placement Group name</summary>
        string PlacementGroupName { get; set; }
        /// <summary>Id of a private cloud</summary>
        string PrivateCloudId { get; set; }
        /// <summary>Virtualization type e.g. "vSphere"</summary>
        string PropertiesType { get; set; }
        /// <summary>Private cloud properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudProperties Property { get; set; }
        /// <summary>The list of Resource Pools</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IResourcePool[] ResourcePool { get; set; }
        /// <summary>Private Cloud state, e.g. "operational"</summary>
        string State { get; set; }
        /// <summary>Number of cores</summary>
        int? TotalCpuCore { get; set; }
        /// <summary>Number of nodes</summary>
        int? TotalNode { get; set; }
        /// <summary>Memory size</summary>
        int? TotalRam { get; set; }
        /// <summary>Disk space in TB</summary>
        float? TotalStorage { get; set; }
        /// <summary>Azure Resource type</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.PrivateCloudResourceType? Type { get; set; }
        /// <summary>e.g. "6.5u2"</summary>
        string VSphereVersion { get; set; }
        /// <summary>FQDN for vcenter access</summary>
        string VcenterFqdn { get; set; }
        /// <summary>Vcenter ip address</summary>
        string VcenterRefid { get; set; }
        /// <summary>The list of Virtual Machine Templates</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineTemplate[] VirtualMachineTemplate { get; set; }
        /// <summary>The list of Virtual Networks</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNetwork[] VirtualNetwork { get; set; }
        /// <summary>Is Vrops enabled/disabled</summary>
        bool? VrOpsEnabled { get; set; }

    }
}