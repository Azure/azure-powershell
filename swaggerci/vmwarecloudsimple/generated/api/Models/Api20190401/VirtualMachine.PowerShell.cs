// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401
{
    using Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.PowerShell;

    /// <summary>Virtual machine model</summary>
    [System.ComponentModel.TypeConverter(typeof(VirtualMachineTypeConverter))]
    public partial class VirtualMachine
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.VirtualMachine"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachine" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachine DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new VirtualMachine(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.VirtualMachine"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachine" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachine DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new VirtualMachine(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="VirtualMachine" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="VirtualMachine" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachine FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.SerializationMode.IncludeAll)?.ToString();

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.VirtualMachine"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal VirtualMachine(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.VirtualMachinePropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.ITags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.TagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("AzureAsyncOperation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).AzureAsyncOperation = (string) content.GetValueForProperty("AzureAsyncOperation",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).AzureAsyncOperation, global::System.Convert.ToString);
            }
            if (content.Contains("ResourcePool"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).ResourcePool = (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IResourcePool) content.GetValueForProperty("ResourcePool",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).ResourcePool, Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.ResourcePoolTypeConverter.ConvertFrom);
            }
            if (content.Contains("Customization"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Customization = (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IGuestOSCustomization) content.GetValueForProperty("Customization",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Customization, Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.GuestOSCustomizationTypeConverter.ConvertFrom);
            }
            if (content.Contains("AmountOfRam"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).AmountOfRam = (int) content.GetValueForProperty("AmountOfRam",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).AmountOfRam, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("Controller"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Controller = (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualDiskController[]) content.GetValueForProperty("Controller",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Controller, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualDiskController>(__y, Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.VirtualDiskControllerTypeConverter.ConvertFrom));
            }
            if (content.Contains("Disk"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Disk = (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualDisk[]) content.GetValueForProperty("Disk",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Disk, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualDisk>(__y, Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.VirtualDiskTypeConverter.ConvertFrom));
            }
            if (content.Contains("Dnsname"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Dnsname = (string) content.GetValueForProperty("Dnsname",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Dnsname, global::System.Convert.ToString);
            }
            if (content.Contains("ExposeToGuestVM"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).ExposeToGuestVM = (bool?) content.GetValueForProperty("ExposeToGuestVM",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).ExposeToGuestVM, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("Folder"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Folder = (string) content.GetValueForProperty("Folder",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Folder, global::System.Convert.ToString);
            }
            if (content.Contains("GuestOS"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).GuestOS = (string) content.GetValueForProperty("GuestOS",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).GuestOS, global::System.Convert.ToString);
            }
            if (content.Contains("GuestOSType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).GuestOSType = (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.GuestOSType?) content.GetValueForProperty("GuestOSType",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).GuestOSType, Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.GuestOSType.CreateFrom);
            }
            if (content.Contains("Nic"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Nic = (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNic[]) content.GetValueForProperty("Nic",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Nic, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNic>(__y, Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.VirtualNicTypeConverter.ConvertFrom));
            }
            if (content.Contains("NumberOfCore"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).NumberOfCore = (int) content.GetValueForProperty("NumberOfCore",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).NumberOfCore, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("Password"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Password = (string) content.GetValueForProperty("Password",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Password, global::System.Convert.ToString);
            }
            if (content.Contains("PrivateCloudId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).PrivateCloudId = (string) content.GetValueForProperty("PrivateCloudId",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).PrivateCloudId, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("PublicIP"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).PublicIP = (string) content.GetValueForProperty("PublicIP",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).PublicIP, global::System.Convert.ToString);
            }
            if (content.Contains("Status"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Status = (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.VirtualMachineStatus?) content.GetValueForProperty("Status",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Status, Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.VirtualMachineStatus.CreateFrom);
            }
            if (content.Contains("TemplateId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).TemplateId = (string) content.GetValueForProperty("TemplateId",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).TemplateId, global::System.Convert.ToString);
            }
            if (content.Contains("Username"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Username = (string) content.GetValueForProperty("Username",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Username, global::System.Convert.ToString);
            }
            if (content.Contains("VSphereNetwork"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).VSphereNetwork = (string[]) content.GetValueForProperty("VSphereNetwork",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).VSphereNetwork, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("VMId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).VMId = (string) content.GetValueForProperty("VMId",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).VMId, global::System.Convert.ToString);
            }
            if (content.Contains("Vmwaretool"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Vmwaretool = (string) content.GetValueForProperty("Vmwaretool",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Vmwaretool, global::System.Convert.ToString);
            }
            if (content.Contains("ResourcePoolProperty"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).ResourcePoolProperty = (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IResourcePoolProperties) content.GetValueForProperty("ResourcePoolProperty",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).ResourcePoolProperty, Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.ResourcePoolPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("ResourcePoolId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).ResourcePoolId = (string) content.GetValueForProperty("ResourcePoolId",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).ResourcePoolId, global::System.Convert.ToString);
            }
            if (content.Contains("ResourcePoolLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).ResourcePoolLocation = (string) content.GetValueForProperty("ResourcePoolLocation",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).ResourcePoolLocation, global::System.Convert.ToString);
            }
            if (content.Contains("ResourcePoolName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).ResourcePoolName = (string) content.GetValueForProperty("ResourcePoolName",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).ResourcePoolName, global::System.Convert.ToString);
            }
            if (content.Contains("ResourcePoolType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).ResourcePoolType = (string) content.GetValueForProperty("ResourcePoolType",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).ResourcePoolType, global::System.Convert.ToString);
            }
            if (content.Contains("CustomizationDnsServer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).CustomizationDnsServer = (string[]) content.GetValueForProperty("CustomizationDnsServer",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).CustomizationDnsServer, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("CustomizationHostName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).CustomizationHostName = (string) content.GetValueForProperty("CustomizationHostName",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).CustomizationHostName, global::System.Convert.ToString);
            }
            if (content.Contains("CustomizationPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).CustomizationPassword = (string) content.GetValueForProperty("CustomizationPassword",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).CustomizationPassword, global::System.Convert.ToString);
            }
            if (content.Contains("CustomizationPolicyId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).CustomizationPolicyId = (string) content.GetValueForProperty("CustomizationPolicyId",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).CustomizationPolicyId, global::System.Convert.ToString);
            }
            if (content.Contains("CustomizationUsername"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).CustomizationUsername = (string) content.GetValueForProperty("CustomizationUsername",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).CustomizationUsername, global::System.Convert.ToString);
            }
            if (content.Contains("ResourcePoolPrivateCloudId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).ResourcePoolPrivateCloudId = (string) content.GetValueForProperty("ResourcePoolPrivateCloudId",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).ResourcePoolPrivateCloudId, global::System.Convert.ToString);
            }
            if (content.Contains("FullName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).FullName = (string) content.GetValueForProperty("FullName",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).FullName, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.VirtualMachine"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal VirtualMachine(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.VirtualMachinePropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.ITags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.TagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("AzureAsyncOperation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).AzureAsyncOperation = (string) content.GetValueForProperty("AzureAsyncOperation",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).AzureAsyncOperation, global::System.Convert.ToString);
            }
            if (content.Contains("ResourcePool"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).ResourcePool = (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IResourcePool) content.GetValueForProperty("ResourcePool",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).ResourcePool, Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.ResourcePoolTypeConverter.ConvertFrom);
            }
            if (content.Contains("Customization"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Customization = (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IGuestOSCustomization) content.GetValueForProperty("Customization",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Customization, Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.GuestOSCustomizationTypeConverter.ConvertFrom);
            }
            if (content.Contains("AmountOfRam"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).AmountOfRam = (int) content.GetValueForProperty("AmountOfRam",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).AmountOfRam, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("Controller"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Controller = (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualDiskController[]) content.GetValueForProperty("Controller",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Controller, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualDiskController>(__y, Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.VirtualDiskControllerTypeConverter.ConvertFrom));
            }
            if (content.Contains("Disk"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Disk = (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualDisk[]) content.GetValueForProperty("Disk",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Disk, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualDisk>(__y, Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.VirtualDiskTypeConverter.ConvertFrom));
            }
            if (content.Contains("Dnsname"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Dnsname = (string) content.GetValueForProperty("Dnsname",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Dnsname, global::System.Convert.ToString);
            }
            if (content.Contains("ExposeToGuestVM"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).ExposeToGuestVM = (bool?) content.GetValueForProperty("ExposeToGuestVM",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).ExposeToGuestVM, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("Folder"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Folder = (string) content.GetValueForProperty("Folder",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Folder, global::System.Convert.ToString);
            }
            if (content.Contains("GuestOS"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).GuestOS = (string) content.GetValueForProperty("GuestOS",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).GuestOS, global::System.Convert.ToString);
            }
            if (content.Contains("GuestOSType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).GuestOSType = (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.GuestOSType?) content.GetValueForProperty("GuestOSType",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).GuestOSType, Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.GuestOSType.CreateFrom);
            }
            if (content.Contains("Nic"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Nic = (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNic[]) content.GetValueForProperty("Nic",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Nic, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNic>(__y, Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.VirtualNicTypeConverter.ConvertFrom));
            }
            if (content.Contains("NumberOfCore"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).NumberOfCore = (int) content.GetValueForProperty("NumberOfCore",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).NumberOfCore, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("Password"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Password = (string) content.GetValueForProperty("Password",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Password, global::System.Convert.ToString);
            }
            if (content.Contains("PrivateCloudId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).PrivateCloudId = (string) content.GetValueForProperty("PrivateCloudId",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).PrivateCloudId, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("PublicIP"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).PublicIP = (string) content.GetValueForProperty("PublicIP",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).PublicIP, global::System.Convert.ToString);
            }
            if (content.Contains("Status"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Status = (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.VirtualMachineStatus?) content.GetValueForProperty("Status",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Status, Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.VirtualMachineStatus.CreateFrom);
            }
            if (content.Contains("TemplateId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).TemplateId = (string) content.GetValueForProperty("TemplateId",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).TemplateId, global::System.Convert.ToString);
            }
            if (content.Contains("Username"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Username = (string) content.GetValueForProperty("Username",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Username, global::System.Convert.ToString);
            }
            if (content.Contains("VSphereNetwork"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).VSphereNetwork = (string[]) content.GetValueForProperty("VSphereNetwork",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).VSphereNetwork, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("VMId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).VMId = (string) content.GetValueForProperty("VMId",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).VMId, global::System.Convert.ToString);
            }
            if (content.Contains("Vmwaretool"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Vmwaretool = (string) content.GetValueForProperty("Vmwaretool",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).Vmwaretool, global::System.Convert.ToString);
            }
            if (content.Contains("ResourcePoolProperty"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).ResourcePoolProperty = (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IResourcePoolProperties) content.GetValueForProperty("ResourcePoolProperty",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).ResourcePoolProperty, Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.ResourcePoolPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("ResourcePoolId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).ResourcePoolId = (string) content.GetValueForProperty("ResourcePoolId",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).ResourcePoolId, global::System.Convert.ToString);
            }
            if (content.Contains("ResourcePoolLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).ResourcePoolLocation = (string) content.GetValueForProperty("ResourcePoolLocation",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).ResourcePoolLocation, global::System.Convert.ToString);
            }
            if (content.Contains("ResourcePoolName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).ResourcePoolName = (string) content.GetValueForProperty("ResourcePoolName",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).ResourcePoolName, global::System.Convert.ToString);
            }
            if (content.Contains("ResourcePoolType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).ResourcePoolType = (string) content.GetValueForProperty("ResourcePoolType",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).ResourcePoolType, global::System.Convert.ToString);
            }
            if (content.Contains("CustomizationDnsServer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).CustomizationDnsServer = (string[]) content.GetValueForProperty("CustomizationDnsServer",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).CustomizationDnsServer, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("CustomizationHostName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).CustomizationHostName = (string) content.GetValueForProperty("CustomizationHostName",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).CustomizationHostName, global::System.Convert.ToString);
            }
            if (content.Contains("CustomizationPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).CustomizationPassword = (string) content.GetValueForProperty("CustomizationPassword",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).CustomizationPassword, global::System.Convert.ToString);
            }
            if (content.Contains("CustomizationPolicyId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).CustomizationPolicyId = (string) content.GetValueForProperty("CustomizationPolicyId",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).CustomizationPolicyId, global::System.Convert.ToString);
            }
            if (content.Contains("CustomizationUsername"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).CustomizationUsername = (string) content.GetValueForProperty("CustomizationUsername",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).CustomizationUsername, global::System.Convert.ToString);
            }
            if (content.Contains("ResourcePoolPrivateCloudId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).ResourcePoolPrivateCloudId = (string) content.GetValueForProperty("ResourcePoolPrivateCloudId",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).ResourcePoolPrivateCloudId, global::System.Convert.ToString);
            }
            if (content.Contains("FullName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).FullName = (string) content.GetValueForProperty("FullName",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineInternal)this).FullName, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }
    }
    /// Virtual machine model
    [System.ComponentModel.TypeConverter(typeof(VirtualMachineTypeConverter))]
    public partial interface IVirtualMachine

    {

    }
}