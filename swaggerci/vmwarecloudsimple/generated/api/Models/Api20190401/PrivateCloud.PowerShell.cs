// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401
{
    using Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.PowerShell;

    /// <summary>Private cloud model</summary>
    [System.ComponentModel.TypeConverter(typeof(PrivateCloudTypeConverter))]
    public partial class PrivateCloud
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.PrivateCloud"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloud" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloud DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new PrivateCloud(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.PrivateCloud"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloud" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloud DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new PrivateCloud(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="PrivateCloud" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="PrivateCloud" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloud FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.PrivateCloud"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal PrivateCloud(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.PrivateCloudPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).Type = (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.PrivateCloudResourceType?) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).Type, Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.PrivateCloudResourceType.CreateFrom);
            }
            if (content.Contains("AvailabilityZoneId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).AvailabilityZoneId = (string) content.GetValueForProperty("AvailabilityZoneId",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).AvailabilityZoneId, global::System.Convert.ToString);
            }
            if (content.Contains("AvailabilityZoneName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).AvailabilityZoneName = (string) content.GetValueForProperty("AvailabilityZoneName",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).AvailabilityZoneName, global::System.Convert.ToString);
            }
            if (content.Contains("ClustersNumber"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).ClustersNumber = (int?) content.GetValueForProperty("ClustersNumber",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).ClustersNumber, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("CreatedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).CreatedBy = (string) content.GetValueForProperty("CreatedBy",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).CreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("CreatedOn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).CreatedOn = (global::System.DateTime?) content.GetValueForProperty("CreatedOn",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).CreatedOn, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("DnsServer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).DnsServer = (string[]) content.GetValueForProperty("DnsServer",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).DnsServer, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("Expire"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).Expire = (string) content.GetValueForProperty("Expire",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).Expire, global::System.Convert.ToString);
            }
            if (content.Contains("NsxType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).NsxType = (string) content.GetValueForProperty("NsxType",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).NsxType, global::System.Convert.ToString);
            }
            if (content.Contains("PlacementGroupId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).PlacementGroupId = (string) content.GetValueForProperty("PlacementGroupId",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).PlacementGroupId, global::System.Convert.ToString);
            }
            if (content.Contains("PlacementGroupName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).PlacementGroupName = (string) content.GetValueForProperty("PlacementGroupName",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).PlacementGroupName, global::System.Convert.ToString);
            }
            if (content.Contains("PrivateCloudId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).PrivateCloudId = (string) content.GetValueForProperty("PrivateCloudId",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).PrivateCloudId, global::System.Convert.ToString);
            }
            if (content.Contains("ResourcePool"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).ResourcePool = (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IResourcePool[]) content.GetValueForProperty("ResourcePool",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).ResourcePool, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IResourcePool>(__y, Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.ResourcePoolTypeConverter.ConvertFrom));
            }
            if (content.Contains("State"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).State = (string) content.GetValueForProperty("State",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).State, global::System.Convert.ToString);
            }
            if (content.Contains("TotalCpuCore"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).TotalCpuCore = (int?) content.GetValueForProperty("TotalCpuCore",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).TotalCpuCore, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("TotalNode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).TotalNode = (int?) content.GetValueForProperty("TotalNode",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).TotalNode, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("TotalRam"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).TotalRam = (int?) content.GetValueForProperty("TotalRam",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).TotalRam, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("TotalStorage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).TotalStorage = (float?) content.GetValueForProperty("TotalStorage",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).TotalStorage, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("PropertiesType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).PropertiesType = (string) content.GetValueForProperty("PropertiesType",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).PropertiesType, global::System.Convert.ToString);
            }
            if (content.Contains("VSphereVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).VSphereVersion = (string) content.GetValueForProperty("VSphereVersion",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).VSphereVersion, global::System.Convert.ToString);
            }
            if (content.Contains("VcenterFqdn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).VcenterFqdn = (string) content.GetValueForProperty("VcenterFqdn",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).VcenterFqdn, global::System.Convert.ToString);
            }
            if (content.Contains("VcenterRefid"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).VcenterRefid = (string) content.GetValueForProperty("VcenterRefid",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).VcenterRefid, global::System.Convert.ToString);
            }
            if (content.Contains("VirtualMachineTemplate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).VirtualMachineTemplate = (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineTemplate[]) content.GetValueForProperty("VirtualMachineTemplate",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).VirtualMachineTemplate, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineTemplate>(__y, Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.VirtualMachineTemplateTypeConverter.ConvertFrom));
            }
            if (content.Contains("VirtualNetwork"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).VirtualNetwork = (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNetwork[]) content.GetValueForProperty("VirtualNetwork",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).VirtualNetwork, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNetwork>(__y, Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.VirtualNetworkTypeConverter.ConvertFrom));
            }
            if (content.Contains("VrOpsEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).VrOpsEnabled = (bool?) content.GetValueForProperty("VrOpsEnabled",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).VrOpsEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.PrivateCloud"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal PrivateCloud(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.PrivateCloudPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).Type = (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.PrivateCloudResourceType?) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).Type, Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.PrivateCloudResourceType.CreateFrom);
            }
            if (content.Contains("AvailabilityZoneId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).AvailabilityZoneId = (string) content.GetValueForProperty("AvailabilityZoneId",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).AvailabilityZoneId, global::System.Convert.ToString);
            }
            if (content.Contains("AvailabilityZoneName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).AvailabilityZoneName = (string) content.GetValueForProperty("AvailabilityZoneName",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).AvailabilityZoneName, global::System.Convert.ToString);
            }
            if (content.Contains("ClustersNumber"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).ClustersNumber = (int?) content.GetValueForProperty("ClustersNumber",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).ClustersNumber, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("CreatedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).CreatedBy = (string) content.GetValueForProperty("CreatedBy",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).CreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("CreatedOn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).CreatedOn = (global::System.DateTime?) content.GetValueForProperty("CreatedOn",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).CreatedOn, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("DnsServer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).DnsServer = (string[]) content.GetValueForProperty("DnsServer",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).DnsServer, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("Expire"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).Expire = (string) content.GetValueForProperty("Expire",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).Expire, global::System.Convert.ToString);
            }
            if (content.Contains("NsxType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).NsxType = (string) content.GetValueForProperty("NsxType",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).NsxType, global::System.Convert.ToString);
            }
            if (content.Contains("PlacementGroupId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).PlacementGroupId = (string) content.GetValueForProperty("PlacementGroupId",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).PlacementGroupId, global::System.Convert.ToString);
            }
            if (content.Contains("PlacementGroupName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).PlacementGroupName = (string) content.GetValueForProperty("PlacementGroupName",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).PlacementGroupName, global::System.Convert.ToString);
            }
            if (content.Contains("PrivateCloudId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).PrivateCloudId = (string) content.GetValueForProperty("PrivateCloudId",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).PrivateCloudId, global::System.Convert.ToString);
            }
            if (content.Contains("ResourcePool"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).ResourcePool = (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IResourcePool[]) content.GetValueForProperty("ResourcePool",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).ResourcePool, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IResourcePool>(__y, Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.ResourcePoolTypeConverter.ConvertFrom));
            }
            if (content.Contains("State"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).State = (string) content.GetValueForProperty("State",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).State, global::System.Convert.ToString);
            }
            if (content.Contains("TotalCpuCore"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).TotalCpuCore = (int?) content.GetValueForProperty("TotalCpuCore",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).TotalCpuCore, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("TotalNode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).TotalNode = (int?) content.GetValueForProperty("TotalNode",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).TotalNode, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("TotalRam"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).TotalRam = (int?) content.GetValueForProperty("TotalRam",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).TotalRam, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("TotalStorage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).TotalStorage = (float?) content.GetValueForProperty("TotalStorage",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).TotalStorage, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("PropertiesType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).PropertiesType = (string) content.GetValueForProperty("PropertiesType",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).PropertiesType, global::System.Convert.ToString);
            }
            if (content.Contains("VSphereVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).VSphereVersion = (string) content.GetValueForProperty("VSphereVersion",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).VSphereVersion, global::System.Convert.ToString);
            }
            if (content.Contains("VcenterFqdn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).VcenterFqdn = (string) content.GetValueForProperty("VcenterFqdn",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).VcenterFqdn, global::System.Convert.ToString);
            }
            if (content.Contains("VcenterRefid"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).VcenterRefid = (string) content.GetValueForProperty("VcenterRefid",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).VcenterRefid, global::System.Convert.ToString);
            }
            if (content.Contains("VirtualMachineTemplate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).VirtualMachineTemplate = (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineTemplate[]) content.GetValueForProperty("VirtualMachineTemplate",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).VirtualMachineTemplate, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualMachineTemplate>(__y, Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.VirtualMachineTemplateTypeConverter.ConvertFrom));
            }
            if (content.Contains("VirtualNetwork"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).VirtualNetwork = (Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNetwork[]) content.GetValueForProperty("VirtualNetwork",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).VirtualNetwork, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IVirtualNetwork>(__y, Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.VirtualNetworkTypeConverter.ConvertFrom));
            }
            if (content.Contains("VrOpsEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).VrOpsEnabled = (bool?) content.GetValueForProperty("VrOpsEnabled",((Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IPrivateCloudInternal)this).VrOpsEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Private cloud model
    [System.ComponentModel.TypeConverter(typeof(PrivateCloudTypeConverter))]
    public partial interface IPrivateCloud

    {

    }
}