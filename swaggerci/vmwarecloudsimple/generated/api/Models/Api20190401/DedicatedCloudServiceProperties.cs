// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Extensions;

    /// <summary>Properties of dedicated cloud service</summary>
    public partial class DedicatedCloudServiceProperties :
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudServiceProperties,
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudServicePropertiesInternal
    {

        /// <summary>Backing field for <see cref="GatewaySubnet" /> property.</summary>
        private string _gatewaySubnet;

        /// <summary>
        /// gateway Subnet for the account. It will collect the subnet address and always treat it as /28
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string GatewaySubnet { get => this._gatewaySubnet; set => this._gatewaySubnet = value; }

        /// <summary>Backing field for <see cref="IsAccountOnboarded" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.OnboardingStatus? _isAccountOnboarded;

        /// <summary>indicates whether account onboarded or not in a given region</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.OnboardingStatus? IsAccountOnboarded { get => this._isAccountOnboarded; }

        /// <summary>Internal Acessors for IsAccountOnboarded</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.OnboardingStatus? Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudServicePropertiesInternal.IsAccountOnboarded { get => this._isAccountOnboarded; set { {_isAccountOnboarded = value;} } }

        /// <summary>Internal Acessors for Node</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudServicePropertiesInternal.Node { get => this._node; set { {_node = value;} } }

        /// <summary>Internal Acessors for ServiceUrl</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Models.Api20190401.IDedicatedCloudServicePropertiesInternal.ServiceUrl { get => this._serviceUrl; set { {_serviceUrl = value;} } }

        /// <summary>Backing field for <see cref="Node" /> property.</summary>
        private int? _node;

        /// <summary>total nodes purchased</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public int? Node { get => this._node; }

        /// <summary>Backing field for <see cref="ServiceUrl" /> property.</summary>
        private string _serviceUrl;

        /// <summary>link to a service management web portal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.PropertyOrigin.Owned)]
        public string ServiceUrl { get => this._serviceUrl; }

        /// <summary>Creates an new <see cref="DedicatedCloudServiceProperties" /> instance.</summary>
        public DedicatedCloudServiceProperties()
        {

        }
    }
    /// Properties of dedicated cloud service
    public partial interface IDedicatedCloudServiceProperties :
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.IJsonSerializable
    {
        /// <summary>
        /// gateway Subnet for the account. It will collect the subnet address and always treat it as /28
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"gateway Subnet for the account. It will collect the subnet address and always treat it as /28",
        SerializedName = @"gatewaySubnet",
        PossibleTypes = new [] { typeof(string) })]
        string GatewaySubnet { get; set; }
        /// <summary>indicates whether account onboarded or not in a given region</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"indicates whether account onboarded or not in a given region",
        SerializedName = @"isAccountOnboarded",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.OnboardingStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.OnboardingStatus? IsAccountOnboarded { get;  }
        /// <summary>total nodes purchased</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"total nodes purchased",
        SerializedName = @"nodes",
        PossibleTypes = new [] { typeof(int) })]
        int? Node { get;  }
        /// <summary>link to a service management web portal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"link to a service management web portal",
        SerializedName = @"serviceURL",
        PossibleTypes = new [] { typeof(string) })]
        string ServiceUrl { get;  }

    }
    /// Properties of dedicated cloud service
    internal partial interface IDedicatedCloudServicePropertiesInternal

    {
        /// <summary>
        /// gateway Subnet for the account. It will collect the subnet address and always treat it as /28
        /// </summary>
        string GatewaySubnet { get; set; }
        /// <summary>indicates whether account onboarded or not in a given region</summary>
        Microsoft.Azure.PowerShell.Cmdlets.VMwareCloudSimple.Support.OnboardingStatus? IsAccountOnboarded { get; set; }
        /// <summary>total nodes purchased</summary>
        int? Node { get; set; }
        /// <summary>link to a service management web portal</summary>
        string ServiceUrl { get; set; }

    }
}