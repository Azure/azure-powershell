// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Extensions;

    /// <summary>Product action log.</summary>
    public partial class ProductLog
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json erialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IProductLog.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IProductLog.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IProductLog FromJson(Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonObject json ? new ProductLog(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonObject into a new instance of <see cref="ProductLog" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal ProductLog(Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_id = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonString>("id"), out var __jsonId) ? (string)__jsonId : (string)Id;}
            {_productId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonString>("productId"), out var __jsonProductId) ? (string)__jsonProductId : (string)ProductId;}
            {_subscriptionId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonString>("subscriptionId"), out var __jsonSubscriptionId) ? (string)__jsonSubscriptionId : (string)SubscriptionId;}
            {_registrationName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonString>("registrationName"), out var __jsonRegistrationName) ? (string)__jsonRegistrationName : (string)RegistrationName;}
            {_resourceGroupName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonString>("resourceGroupName"), out var __jsonResourceGroupName) ? (string)__jsonResourceGroupName : (string)ResourceGroupName;}
            {_operation = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonString>("operation"), out var __jsonOperation) ? (string)__jsonOperation : (string)Operation;}
            {_startDate = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonString>("startDate"), out var __jsonStartDate) ? (string)__jsonStartDate : (string)StartDate;}
            {_endDate = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonString>("endDate"), out var __jsonEndDate) ? (string)__jsonEndDate : (string)EndDate;}
            {_status = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonString>("status"), out var __jsonStatus) ? (string)__jsonStatus : (string)Status;}
            {_error = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonString>("error"), out var __jsonError) ? (string)__jsonError : (string)Error;}
            {_detail = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonString>("details"), out var __jsonDetails) ? (string)__jsonDetails : (string)Detail;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="ProductLog" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="ProductLog" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._id)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonString(this._id.ToString()) : null, "id" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._productId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonString(this._productId.ToString()) : null, "productId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._subscriptionId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonString(this._subscriptionId.ToString()) : null, "subscriptionId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._registrationName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonString(this._registrationName.ToString()) : null, "registrationName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._resourceGroupName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonString(this._resourceGroupName.ToString()) : null, "resourceGroupName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._operation)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonString(this._operation.ToString()) : null, "operation" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._startDate)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonString(this._startDate.ToString()) : null, "startDate" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._endDate)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonString(this._endDate.ToString()) : null, "endDate" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._status)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonString(this._status.ToString()) : null, "status" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._error)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonString(this._error.ToString()) : null, "error" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._detail)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonString(this._detail.ToString()) : null, "details" ,container.Add );
            }
            AfterToJson(ref container);
            return container;
        }
    }
}