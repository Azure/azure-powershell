// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview
{
    using Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.PowerShell;

    /// <summary>
    /// Extended description about the product required for installing it into Azure Stack.
    /// </summary>
    [System.ComponentModel.TypeConverter(typeof(ExtendedProductTypeConverter))]
    public partial class ExtendedProduct
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.ExtendedProduct"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProduct" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProduct DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new ExtendedProduct(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.ExtendedProduct"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProduct" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProduct DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new ExtendedProduct(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.ExtendedProduct"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal ExtendedProduct(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.ExtendedProductPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("GalleryPackageBlobSasUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).GalleryPackageBlobSasUri = (string) content.GetValueForProperty("GalleryPackageBlobSasUri",((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).GalleryPackageBlobSasUri, global::System.Convert.ToString);
            }
            if (content.Contains("ProductKind"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).ProductKind = (string) content.GetValueForProperty("ProductKind",((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).ProductKind, global::System.Convert.ToString);
            }
            if (content.Contains("ComputeRole"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).ComputeRole = (Microsoft.Azure.PowerShell.Cmdlets.Stack.Support.ComputeRole?) content.GetValueForProperty("ComputeRole",((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).ComputeRole, Microsoft.Azure.PowerShell.Cmdlets.Stack.Support.ComputeRole.CreateFrom);
            }
            if (content.Contains("SourceBlobUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).SourceBlobUri = (string) content.GetValueForProperty("SourceBlobUri",((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).SourceBlobUri, global::System.Convert.ToString);
            }
            if (content.Contains("SourceBlob"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).SourceBlob = (Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IUri) content.GetValueForProperty("SourceBlob",((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).SourceBlob, Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.UriTypeConverter.ConvertFrom);
            }
            if (content.Contains("IsSystemExtension"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).IsSystemExtension = (bool?) content.GetValueForProperty("IsSystemExtension",((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).IsSystemExtension, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("SupportMultipleExtension"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).SupportMultipleExtension = (bool?) content.GetValueForProperty("SupportMultipleExtension",((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).SupportMultipleExtension, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("Version"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).Version = (string) content.GetValueForProperty("Version",((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).Version, global::System.Convert.ToString);
            }
            if (content.Contains("VmosType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).VmosType = (Microsoft.Azure.PowerShell.Cmdlets.Stack.Support.OperatingSystem?) content.GetValueForProperty("VmosType",((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).VmosType, Microsoft.Azure.PowerShell.Cmdlets.Stack.Support.OperatingSystem.CreateFrom);
            }
            if (content.Contains("VMScaleSetEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).VMScaleSetEnabled = (bool?) content.GetValueForProperty("VMScaleSetEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).VMScaleSetEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("OSDiskImageOperatingSystem"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).OSDiskImageOperatingSystem = (Microsoft.Azure.PowerShell.Cmdlets.Stack.Support.OperatingSystem?) content.GetValueForProperty("OSDiskImageOperatingSystem",((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).OSDiskImageOperatingSystem, Microsoft.Azure.PowerShell.Cmdlets.Stack.Support.OperatingSystem.CreateFrom);
            }
            if (content.Contains("OSDiskImage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).OSDiskImage = (Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IOSDiskImage) content.GetValueForProperty("OSDiskImage",((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).OSDiskImage, Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.OSDiskImageTypeConverter.ConvertFrom);
            }
            if (content.Contains("DataDiskImage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).DataDiskImage = (Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IDataDiskImage[]) content.GetValueForProperty("DataDiskImage",((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).DataDiskImage, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IDataDiskImage>(__y, Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.DataDiskImageTypeConverter.ConvertFrom));
            }
            if (content.Contains("OSDiskImageSourceBlobSasUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).OSDiskImageSourceBlobSasUri = (string) content.GetValueForProperty("OSDiskImageSourceBlobSasUri",((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).OSDiskImageSourceBlobSasUri, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.ExtendedProduct"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal ExtendedProduct(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.ExtendedProductPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("GalleryPackageBlobSasUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).GalleryPackageBlobSasUri = (string) content.GetValueForProperty("GalleryPackageBlobSasUri",((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).GalleryPackageBlobSasUri, global::System.Convert.ToString);
            }
            if (content.Contains("ProductKind"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).ProductKind = (string) content.GetValueForProperty("ProductKind",((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).ProductKind, global::System.Convert.ToString);
            }
            if (content.Contains("ComputeRole"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).ComputeRole = (Microsoft.Azure.PowerShell.Cmdlets.Stack.Support.ComputeRole?) content.GetValueForProperty("ComputeRole",((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).ComputeRole, Microsoft.Azure.PowerShell.Cmdlets.Stack.Support.ComputeRole.CreateFrom);
            }
            if (content.Contains("SourceBlobUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).SourceBlobUri = (string) content.GetValueForProperty("SourceBlobUri",((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).SourceBlobUri, global::System.Convert.ToString);
            }
            if (content.Contains("SourceBlob"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).SourceBlob = (Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IUri) content.GetValueForProperty("SourceBlob",((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).SourceBlob, Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.UriTypeConverter.ConvertFrom);
            }
            if (content.Contains("IsSystemExtension"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).IsSystemExtension = (bool?) content.GetValueForProperty("IsSystemExtension",((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).IsSystemExtension, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("SupportMultipleExtension"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).SupportMultipleExtension = (bool?) content.GetValueForProperty("SupportMultipleExtension",((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).SupportMultipleExtension, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("Version"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).Version = (string) content.GetValueForProperty("Version",((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).Version, global::System.Convert.ToString);
            }
            if (content.Contains("VmosType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).VmosType = (Microsoft.Azure.PowerShell.Cmdlets.Stack.Support.OperatingSystem?) content.GetValueForProperty("VmosType",((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).VmosType, Microsoft.Azure.PowerShell.Cmdlets.Stack.Support.OperatingSystem.CreateFrom);
            }
            if (content.Contains("VMScaleSetEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).VMScaleSetEnabled = (bool?) content.GetValueForProperty("VMScaleSetEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).VMScaleSetEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("OSDiskImageOperatingSystem"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).OSDiskImageOperatingSystem = (Microsoft.Azure.PowerShell.Cmdlets.Stack.Support.OperatingSystem?) content.GetValueForProperty("OSDiskImageOperatingSystem",((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).OSDiskImageOperatingSystem, Microsoft.Azure.PowerShell.Cmdlets.Stack.Support.OperatingSystem.CreateFrom);
            }
            if (content.Contains("OSDiskImage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).OSDiskImage = (Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IOSDiskImage) content.GetValueForProperty("OSDiskImage",((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).OSDiskImage, Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.OSDiskImageTypeConverter.ConvertFrom);
            }
            if (content.Contains("DataDiskImage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).DataDiskImage = (Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IDataDiskImage[]) content.GetValueForProperty("DataDiskImage",((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).DataDiskImage, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IDataDiskImage>(__y, Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.DataDiskImageTypeConverter.ConvertFrom));
            }
            if (content.Contains("OSDiskImageSourceBlobSasUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).OSDiskImageSourceBlobSasUri = (string) content.GetValueForProperty("OSDiskImageSourceBlobSasUri",((Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProductInternal)this).OSDiskImageSourceBlobSasUri, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="ExtendedProduct" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="className" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Stack.Models.Api20200601Preview.IExtendedProduct FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Stack.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Extended description about the product required for installing it into Azure Stack.
    [System.ComponentModel.TypeConverter(typeof(ExtendedProductTypeConverter))]
    public partial interface IExtendedProduct

    {

    }
}