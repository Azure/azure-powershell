// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Extensions;

    /// <summary>Volume mount for the Container App.</summary>
    public partial class VolumeMount :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20220301.IVolumeMount,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20220301.IVolumeMountInternal
    {

        /// <summary>Backing field for <see cref="MountPath" /> property.</summary>
        private string _mountPath;

        /// <summary>
        /// Path within the container at which the volume should be mounted.Must not contain ':'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public string MountPath { get => this._mountPath; set => this._mountPath = value; }

        /// <summary>Backing field for <see cref="VolumeName" /> property.</summary>
        private string _volumeName;

        /// <summary>This must match the Name of a Volume.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public string VolumeName { get => this._volumeName; set => this._volumeName = value; }

        /// <summary>Creates an new <see cref="VolumeMount" /> instance.</summary>
        public VolumeMount()
        {

        }
    }
    /// Volume mount for the Container App.
    public partial interface IVolumeMount :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Path within the container at which the volume should be mounted.Must not contain ':'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Path within the container at which the volume should be mounted.Must not contain ':'.",
        SerializedName = @"mountPath",
        PossibleTypes = new [] { typeof(string) })]
        string MountPath { get; set; }
        /// <summary>This must match the Name of a Volume.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This must match the Name of a Volume.",
        SerializedName = @"volumeName",
        PossibleTypes = new [] { typeof(string) })]
        string VolumeName { get; set; }

    }
    /// Volume mount for the Container App.
    internal partial interface IVolumeMountInternal

    {
        /// <summary>
        /// Path within the container at which the volume should be mounted.Must not contain ':'.
        /// </summary>
        string MountPath { get; set; }
        /// <summary>This must match the Name of a Volume.</summary>
        string VolumeName { get; set; }

    }
}