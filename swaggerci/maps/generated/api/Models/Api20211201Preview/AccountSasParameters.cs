// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20211201Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Maps.Runtime.Extensions;

    /// <summary>
    /// Parameters used to create an account Shared Access Signature (SAS) token. The REST API access control is provided by Azure
    /// Maps Role Based Access (RBAC) identity and access.
    /// </summary>
    public partial class AccountSasParameters :
        Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20211201Preview.IAccountSasParameters,
        Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20211201Preview.IAccountSasParametersInternal
    {

        /// <summary>Backing field for <see cref="Expiry" /> property.</summary>
        private string _expiry;

        /// <summary>
        /// The date time offset of when the token validity expires. For example "2017-05-24T10:42:03.1567373Z"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maps.PropertyOrigin.Owned)]
        public string Expiry { get => this._expiry; set => this._expiry = value; }

        /// <summary>Backing field for <see cref="MaxRatePerSecond" /> property.</summary>
        private int _maxRatePerSecond;

        /// <summary>
        /// Required parameter which represents the desired maximum request per second to allowed for the given SAS token. This does
        /// not guarantee perfect accuracy in measurements but provides application safe guards of abuse with eventual enforcement.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maps.PropertyOrigin.Owned)]
        public int MaxRatePerSecond { get => this._maxRatePerSecond; set => this._maxRatePerSecond = value; }

        /// <summary>Backing field for <see cref="PrincipalId" /> property.</summary>
        private string _principalId;

        /// <summary>
        /// The principal Id also known as the object Id of a User Assigned Managed Identity currently assigned to the Map Account.
        /// To assign a Managed Identity of the account, use operation Create or Update an assign a User Assigned Identity resource
        /// Id.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maps.PropertyOrigin.Owned)]
        public string PrincipalId { get => this._principalId; set => this._principalId = value; }

        /// <summary>Backing field for <see cref="Region" /> property.</summary>
        private string[] _region;

        /// <summary>
        /// Optional, allows control of which region locations are permitted access to Azure Maps REST APIs with the SAS token. Example:
        /// "eastus", "westus2". Omitting this parameter will allow all region locations to be accessible.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maps.PropertyOrigin.Owned)]
        public string[] Region { get => this._region; set => this._region = value; }

        /// <summary>Backing field for <see cref="SigningKey" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Maps.Support.SigningKey _signingKey;

        /// <summary>The Map account key to use for signing.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maps.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Maps.Support.SigningKey SigningKey { get => this._signingKey; set => this._signingKey = value; }

        /// <summary>Backing field for <see cref="Start" /> property.</summary>
        private string _start;

        /// <summary>
        /// The date time offset of when the token validity begins. For example "2017-05-24T10:42:03.1567373Z".
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maps.PropertyOrigin.Owned)]
        public string Start { get => this._start; set => this._start = value; }

        /// <summary>Creates an new <see cref="AccountSasParameters" /> instance.</summary>
        public AccountSasParameters()
        {

        }
    }
    /// Parameters used to create an account Shared Access Signature (SAS) token. The REST API access control is provided by Azure
    /// Maps Role Based Access (RBAC) identity and access.
    public partial interface IAccountSasParameters :
        Microsoft.Azure.PowerShell.Cmdlets.Maps.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The date time offset of when the token validity expires. For example "2017-05-24T10:42:03.1567373Z"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The date time offset of when the token validity expires. For example ""2017-05-24T10:42:03.1567373Z""",
        SerializedName = @"expiry",
        PossibleTypes = new [] { typeof(string) })]
        string Expiry { get; set; }
        /// <summary>
        /// Required parameter which represents the desired maximum request per second to allowed for the given SAS token. This does
        /// not guarantee perfect accuracy in measurements but provides application safe guards of abuse with eventual enforcement.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Required parameter which represents the desired maximum request per second to allowed for the given SAS token. This does not guarantee perfect accuracy in measurements but provides application safe guards of abuse with eventual enforcement.",
        SerializedName = @"maxRatePerSecond",
        PossibleTypes = new [] { typeof(int) })]
        int MaxRatePerSecond { get; set; }
        /// <summary>
        /// The principal Id also known as the object Id of a User Assigned Managed Identity currently assigned to the Map Account.
        /// To assign a Managed Identity of the account, use operation Create or Update an assign a User Assigned Identity resource
        /// Id.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The principal Id also known as the object Id of a User Assigned Managed Identity currently assigned to the Map Account. To assign a Managed Identity of the account, use operation Create or Update an assign a User Assigned Identity resource Id.",
        SerializedName = @"principalId",
        PossibleTypes = new [] { typeof(string) })]
        string PrincipalId { get; set; }
        /// <summary>
        /// Optional, allows control of which region locations are permitted access to Azure Maps REST APIs with the SAS token. Example:
        /// "eastus", "westus2". Omitting this parameter will allow all region locations to be accessible.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Optional, allows control of which region locations are permitted access to Azure Maps REST APIs with the SAS token. Example: ""eastus"", ""westus2"". Omitting this parameter will allow all region locations to be accessible.",
        SerializedName = @"regions",
        PossibleTypes = new [] { typeof(string) })]
        string[] Region { get; set; }
        /// <summary>The Map account key to use for signing.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The Map account key to use for signing.",
        SerializedName = @"signingKey",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Maps.Support.SigningKey) })]
        Microsoft.Azure.PowerShell.Cmdlets.Maps.Support.SigningKey SigningKey { get; set; }
        /// <summary>
        /// The date time offset of when the token validity begins. For example "2017-05-24T10:42:03.1567373Z".
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The date time offset of when the token validity begins. For example ""2017-05-24T10:42:03.1567373Z"".",
        SerializedName = @"start",
        PossibleTypes = new [] { typeof(string) })]
        string Start { get; set; }

    }
    /// Parameters used to create an account Shared Access Signature (SAS) token. The REST API access control is provided by Azure
    /// Maps Role Based Access (RBAC) identity and access.
    internal partial interface IAccountSasParametersInternal

    {
        /// <summary>
        /// The date time offset of when the token validity expires. For example "2017-05-24T10:42:03.1567373Z"
        /// </summary>
        string Expiry { get; set; }
        /// <summary>
        /// Required parameter which represents the desired maximum request per second to allowed for the given SAS token. This does
        /// not guarantee perfect accuracy in measurements but provides application safe guards of abuse with eventual enforcement.
        /// </summary>
        int MaxRatePerSecond { get; set; }
        /// <summary>
        /// The principal Id also known as the object Id of a User Assigned Managed Identity currently assigned to the Map Account.
        /// To assign a Managed Identity of the account, use operation Create or Update an assign a User Assigned Identity resource
        /// Id.
        /// </summary>
        string PrincipalId { get; set; }
        /// <summary>
        /// Optional, allows control of which region locations are permitted access to Azure Maps REST APIs with the SAS token. Example:
        /// "eastus", "westus2". Omitting this parameter will allow all region locations to be accessible.
        /// </summary>
        string[] Region { get; set; }
        /// <summary>The Map account key to use for signing.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maps.Support.SigningKey SigningKey { get; set; }
        /// <summary>
        /// The date time offset of when the token validity begins. For example "2017-05-24T10:42:03.1567373Z".
        /// </summary>
        string Start { get; set; }

    }
}