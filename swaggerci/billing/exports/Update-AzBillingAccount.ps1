
# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Updates the properties of a billing account.
Currently, displayName and address can be updated.
The operation is supported only for billing accounts with agreement type Microsoft Customer Agreement.
.Description
Updates the properties of a billing account.
Currently, displayName and address can be updated.
The operation is supported only for billing accounts with agreement type Microsoft Customer Agreement.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingIdentity
.Outputs
Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccount
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BILLINGPROFILEVALUE <IBillingProfile[]>: The billing profiles associated with the billing account.
  [BillToAddressLine1 <String>]: Address line 1.
  [BillToAddressLine2 <String>]: Address line 2.
  [BillToAddressLine3 <String>]: Address line 3.
  [BillToCity <String>]: Address city.
  [BillToCompanyName <String>]: Company name.
  [BillToCountry <String>]: Country code uses ISO2, 2-digit format.
  [BillToDistrict <String>]: Address district.
  [BillToEmail <String>]: Email address.
  [BillToFirstName <String>]: First name.
  [BillToLastName <String>]: Last name.
  [BillToMiddleName <String>]: Middle name.
  [BillToPhoneNumber <String>]: Phone number.
  [BillToPostalCode <String>]: Postal code.
  [BillToRegion <String>]: Address region.
  [DisplayName <String>]: The name of the billing profile.
  [EnabledAzurePlan <IAzurePlan[]>]: Information about the enabled azure plans.
    [SkuId <String>]: The sku id.
  [IndirectRelationshipInfoBillingAccountName <String>]: The billing account name of the partner or the customer for an indirect motion.
  [IndirectRelationshipInfoBillingProfileName <String>]: The billing profile name of the partner or the customer for an indirect motion.
  [IndirectRelationshipInfoDisplayName <String>]: The display name of the partner or customer for an indirect motion.
  [InvoiceEmailOptIn <Boolean?>]: Flag controlling whether the invoices for the billing profile are sent through email.
  [InvoiceSectionValue <IInvoiceSection[]>]: The invoice sections associated to the billing profile.
    [DisplayName <String>]: The name of the invoice section.
    [Label <IInvoiceSectionPropertiesLabels>]: Dictionary of metadata associated with the invoice section.
      [(Any) <String>]: This indicates any property can be added to this object.
    [Tag <IInvoiceSectionPropertiesTags>]: Dictionary of metadata associated with the invoice section. Maximum key/value length supported of 256 characters. Keys/value should not empty value nor null. Keys can not contain < > % & \ ? /
      [(Any) <String>]: This indicates any property can be added to this object.
  [PoNumber <String>]: The purchase order name that will appear on the invoices generated for the billing profile.
  [Tag <IBillingProfilePropertiesTags>]: Tags of billing profiles.
    [(Any) <String>]: This indicates any property can be added to this object.

DEPARTMENT <IDepartment[]>: The departments associated to the enrollment.
  [CostCenter <String>]: The cost center associated with the department.
  [DepartmentName <String>]: The name of the department.
  [EnrollmentAccount <IEnrollmentAccount[]>]: Associated enrollment accounts. By default this is not populated, unless it's specified in $expand.
    [AccountName <String>]: The name of the enrollment account.
    [AccountOwner <String>]: The owner of the enrollment account.
    [AccountOwnerEmail <String>]: The enrollment account owner email address.
    [CostCenter <String>]: The cost center associated with the enrollment account.
    [DepartmentPropertiesCostCenter <String>]: The cost center associated with the department.
    [DepartmentPropertiesDepartmentName <String>]: The name of the department.
    [DepartmentPropertiesStatus <String>]: The status of the department.
    [EndDate <DateTime?>]: The end date of the enrollment account.
    [PropertiesDepartmentPropertiesEnrollmentAccounts <IEnrollmentAccount[]>]: Associated enrollment accounts. By default this is not populated, unless it's specified in $expand.
    [StartDate <DateTime?>]: The start date of the enrollment account.
    [Status <String>]: The status of the enrollment account.
  [Status <String>]: The status of the department.

ENROLLMENTACCOUNT <IEnrollmentAccount[]>: The accounts associated to the enrollment.
  [AccountName <String>]: The name of the enrollment account.
  [AccountOwner <String>]: The owner of the enrollment account.
  [AccountOwnerEmail <String>]: The enrollment account owner email address.
  [CostCenter <String>]: The cost center associated with the enrollment account.
  [DepartmentPropertiesCostCenter <String>]: The cost center associated with the department.
  [DepartmentPropertiesDepartmentName <String>]: The name of the department.
  [DepartmentPropertiesStatus <String>]: The status of the department.
  [EndDate <DateTime?>]: The end date of the enrollment account.
  [PropertiesDepartmentPropertiesEnrollmentAccounts <IEnrollmentAccount[]>]: Associated enrollment accounts. By default this is not populated, unless it's specified in $expand.
  [StartDate <DateTime?>]: The start date of the enrollment account.
  [Status <String>]: The status of the enrollment account.

INPUTOBJECT <IBillingIdentity>: Identity Parameter
  [AgreementName <String>]: The ID that uniquely identifies an agreement.
  [BillingAccountName <String>]: The ID that uniquely identifies a billing account.
  [BillingPeriodName <String>]: The name of a BillingPeriod resource.
  [BillingProfileName <String>]: The ID that uniquely identifies a billing profile.
  [BillingRoleAssignmentName <String>]: The ID that uniquely identifies a role assignment.
  [BillingRoleDefinitionName <String>]: The ID that uniquely identifies a role definition.
  [CustomerName <String>]: The ID that uniquely identifies a customer.
  [Id <String>]: Resource identity path
  [InstructionName <String>]: Instruction Name.
  [InvoiceName <String>]: The ID that uniquely identifies an invoice.
  [InvoiceSectionName <String>]: The ID that uniquely identifies an invoice section.
  [Name <String>]: Enrollment Account name.
  [ProductName <String>]: The ID that uniquely identifies a product.
  [SubscriptionId <String>]: The ID that uniquely identifies an Azure subscription.
.Link
https://docs.microsoft.com/en-us/powershell/module/az.billing/update-azbillingaccount
#>
function Update-AzBillingAccount {
[OutputType([Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccount])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Alias('BillingAccountName')]
    [Microsoft.Azure.PowerShell.Cmdlets.Billing.Category('Path')]
    [System.String]
    # The ID that uniquely identifies a billing account.
    ${Name},

    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Azure.PowerShell.Cmdlets.Billing.Category('Path')]
    [Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.Billing.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingProfile[]]
    # The billing profiles associated with the billing account.
    # To construct, see NOTES section for BILLINGPROFILEVALUE properties and create a hash table.
    ${BillingProfileValue},

    [Parameter()]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.Billing.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IDepartment[]]
    # The departments associated to the enrollment.
    # To construct, see NOTES section for DEPARTMENT properties and create a hash table.
    ${Department},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.Billing.Category('Body')]
    [System.String]
    # The billing account name.
    ${DisplayName},

    [Parameter()]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.Billing.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IEnrollmentAccount[]]
    # The accounts associated to the enrollment.
    # To construct, see NOTES section for ENROLLMENTACCOUNT properties and create a hash table.
    ${EnrollmentAccount},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.Billing.Category('Body')]
    [System.String]
    # Notification email address, only for legacy accounts
    ${NotificationEmailAddress},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.Billing.Category('Body')]
    [System.String]
    # Address line 1.
    ${SoldToAddressLine1},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.Billing.Category('Body')]
    [System.String]
    # Address line 2.
    ${SoldToAddressLine2},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.Billing.Category('Body')]
    [System.String]
    # Address line 3.
    ${SoldToAddressLine3},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.Billing.Category('Body')]
    [System.String]
    # Address city.
    ${SoldToCity},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.Billing.Category('Body')]
    [System.String]
    # Company name.
    ${SoldToCompanyName},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.Billing.Category('Body')]
    [System.String]
    # Country code uses ISO2, 2-digit format.
    ${SoldToCountry},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.Billing.Category('Body')]
    [System.String]
    # Address district.
    ${SoldToDistrict},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.Billing.Category('Body')]
    [System.String]
    # Email address.
    ${SoldToEmail},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.Billing.Category('Body')]
    [System.String]
    # First name.
    ${SoldToFirstName},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.Billing.Category('Body')]
    [System.String]
    # Last name.
    ${SoldToLastName},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.Billing.Category('Body')]
    [System.String]
    # Middle name.
    ${SoldToMiddleName},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.Billing.Category('Body')]
    [System.String]
    # Phone number.
    ${SoldToPhoneNumber},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.Billing.Category('Body')]
    [System.String]
    # Postal code.
    ${SoldToPostalCode},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.Billing.Category('Body')]
    [System.String]
    # Address region.
    ${SoldToRegion},

    [Parameter()]
    [Alias('AzureRMContext', 'AzureCredential')]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.Billing.Category('Azure')]
    [System.Management.Automation.PSObject]
    # The credentials, account, tenant, and subscription used for communication with Azure.
    ${DefaultProfile},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.Billing.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Run the command as a job
    ${AsJob},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.Billing.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.Billing.Category('Runtime')]
    [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.Billing.Category('Runtime')]
    [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.Billing.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Run the command asynchronously
    ${NoWait},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.Billing.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.Billing.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.Billing.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        if ($null -eq [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PowerShellVersion) {
            [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PowerShellVersion = $Host.Runspace.Version.ToString()
        }         
        $preTelemetryId = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId
        if ($preTelemetryId -eq '') {
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId =(New-Guid).ToString()
            [Microsoft.Azure.PowerShell.Cmdlets.Billing.module]::Instance.Telemetry.Invoke('Create', $MyInvocation, $parameterSet, $PSCmdlet)
        } else {
            $internalCalledCmdlets = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets
            if ($internalCalledCmdlets -eq '') {
                [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets = $MyInvocation.MyCommand.Name
            } else {
                [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets += ',' + $MyInvocation.MyCommand.Name
            }
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = 'internal'
        }

        $mapping = @{
            UpdateExpanded = 'Az.Billing.private\Update-AzBillingAccount_UpdateExpanded';
            UpdateViaIdentityExpanded = 'Az.Billing.private\Update-AzBillingAccount_UpdateViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }

    finally {
        $backupTelemetryId = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId
        $backupInternalCalledCmdlets = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
    }

}
end {
    try {
        $steppablePipeline.End()

        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = $backupTelemetryId
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets = $backupInternalCalledCmdlets
        if ($preTelemetryId -eq '') {
            [Microsoft.Azure.PowerShell.Cmdlets.Billing.module]::Instance.Telemetry.Invoke('Send', $MyInvocation, $parameterSet, $PSCmdlet)
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        }
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = $preTelemetryId

    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }
} 
}
