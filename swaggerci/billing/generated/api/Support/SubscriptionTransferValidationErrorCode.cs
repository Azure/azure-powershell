// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Billing.Support
{

    /// <summary>Error code of the transfer validation response.</summary>
    public partial struct SubscriptionTransferValidationErrorCode :
        System.IEquatable<SubscriptionTransferValidationErrorCode>
    {
        public static Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.SubscriptionTransferValidationErrorCode BillingAccountInactive = @"BillingAccountInactive";

        public static Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.SubscriptionTransferValidationErrorCode CrossBillingAccountNotAllowed = @"CrossBillingAccountNotAllowed";

        public static Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.SubscriptionTransferValidationErrorCode DestinationBillingProfileInactive = @"DestinationBillingProfileInactive";

        public static Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.SubscriptionTransferValidationErrorCode DestinationBillingProfileNotFound = @"DestinationBillingProfileNotFound";

        public static Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.SubscriptionTransferValidationErrorCode DestinationBillingProfilePastDue = @"DestinationBillingProfilePastDue";

        public static Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.SubscriptionTransferValidationErrorCode DestinationInvoiceSectionInactive = @"DestinationInvoiceSectionInactive";

        public static Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.SubscriptionTransferValidationErrorCode DestinationInvoiceSectionNotFound = @"DestinationInvoiceSectionNotFound";

        public static Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.SubscriptionTransferValidationErrorCode InsufficientPermissionOnDestination = @"InsufficientPermissionOnDestination";

        public static Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.SubscriptionTransferValidationErrorCode InsufficientPermissionOnSource = @"InsufficientPermissionOnSource";

        public static Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.SubscriptionTransferValidationErrorCode InvalidDestination = @"InvalidDestination";

        public static Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.SubscriptionTransferValidationErrorCode InvalidSource = @"InvalidSource";

        public static Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.SubscriptionTransferValidationErrorCode MarketplaceNotEnabledOnDestination = @"MarketplaceNotEnabledOnDestination";

        public static Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.SubscriptionTransferValidationErrorCode NotAvailableForDestinationMarket = @"NotAvailableForDestinationMarket";

        public static Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.SubscriptionTransferValidationErrorCode ProductInactive = @"ProductInactive";

        public static Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.SubscriptionTransferValidationErrorCode ProductNotFound = @"ProductNotFound";

        public static Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.SubscriptionTransferValidationErrorCode ProductTypeNotSupported = @"ProductTypeNotSupported";

        public static Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.SubscriptionTransferValidationErrorCode SourceBillingProfilePastDue = @"SourceBillingProfilePastDue";

        public static Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.SubscriptionTransferValidationErrorCode SourceInvoiceSectionInactive = @"SourceInvoiceSectionInactive";

        public static Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.SubscriptionTransferValidationErrorCode SubscriptionNotActive = @"SubscriptionNotActive";

        public static Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.SubscriptionTransferValidationErrorCode SubscriptionTypeNotSupported = @"SubscriptionTypeNotSupported";

        /// <summary>
        /// the value for an instance of the <see cref="SubscriptionTransferValidationErrorCode" /> Enum.
        /// </summary>
        private string _value { get; set; }

        /// <summary>Conversion from arbitrary object to SubscriptionTransferValidationErrorCode</summary>
        /// <param name="value">the value to convert to an instance of <see cref="SubscriptionTransferValidationErrorCode" />.</param>
        internal static object CreateFrom(object value)
        {
            return new SubscriptionTransferValidationErrorCode(global::System.Convert.ToString(value));
        }

        /// <summary>Compares values of enum type SubscriptionTransferValidationErrorCode</summary>
        /// <param name="e">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public bool Equals(Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.SubscriptionTransferValidationErrorCode e)
        {
            return _value.Equals(e._value);
        }

        /// <summary>
        /// Compares values of enum type SubscriptionTransferValidationErrorCode (override for Object)
        /// </summary>
        /// <param name="obj">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public override bool Equals(object obj)
        {
            return obj is SubscriptionTransferValidationErrorCode && Equals((SubscriptionTransferValidationErrorCode)obj);
        }

        /// <summary>Returns hashCode for enum SubscriptionTransferValidationErrorCode</summary>
        /// <returns>The hashCode of the value</returns>
        public override int GetHashCode()
        {
            return this._value.GetHashCode();
        }

        /// <summary>
        /// Creates an instance of the <see cref="SubscriptionTransferValidationErrorCode" Enum class./>
        /// </summary>
        /// <param name="underlyingValue">the value to create an instance for.</param>
        private SubscriptionTransferValidationErrorCode(string underlyingValue)
        {
            this._value = underlyingValue;
        }

        /// <summary>Returns string representation for SubscriptionTransferValidationErrorCode</summary>
        /// <returns>A string for this value.</returns>
        public override string ToString()
        {
            return this._value;
        }

        /// <summary>Implicit operator to convert string to SubscriptionTransferValidationErrorCode</summary>
        /// <param name="value">the value to convert to an instance of <see cref="SubscriptionTransferValidationErrorCode" />.</param>

        public static implicit operator SubscriptionTransferValidationErrorCode(string value)
        {
            return new SubscriptionTransferValidationErrorCode(value);
        }

        /// <summary>Implicit operator to convert SubscriptionTransferValidationErrorCode to string</summary>
        /// <param name="e">the value to convert to an instance of <see cref="SubscriptionTransferValidationErrorCode" />.</param>

        public static implicit operator string(Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.SubscriptionTransferValidationErrorCode e)
        {
            return e._value;
        }

        /// <summary>Overriding != operator for enum SubscriptionTransferValidationErrorCode</summary>
        /// <param name="e1">the value to compare against <see cref="e2" /></param>
        /// <param name="e2">the value to compare against <see cref="e1" /></param>
        /// <returns><c>true</c> if the two instances are not equal to the same value</returns>
        public static bool operator !=(Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.SubscriptionTransferValidationErrorCode e1, Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.SubscriptionTransferValidationErrorCode e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>Overriding == operator for enum SubscriptionTransferValidationErrorCode</summary>
        /// <param name="e1">the value to compare against <see cref="e2" /></param>
        /// <param name="e2">the value to compare against <see cref="e1" /></param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public static bool operator ==(Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.SubscriptionTransferValidationErrorCode e1, Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.SubscriptionTransferValidationErrorCode e2)
        {
            return e2.Equals(e1);
        }
    }
}