// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501
{
    using Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.PowerShell;

    /// <summary>A transaction.</summary>
    [System.ComponentModel.TypeConverter(typeof(TransactionTypeConverter))]
    public partial class Transaction
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.Transaction"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransaction" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransaction DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new Transaction(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.Transaction"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransaction" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransaction DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new Transaction(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="Transaction" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="className" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransaction FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeAll)?.ToString();

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.Transaction"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal Transaction(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.TransactionPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Amount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).Amount = (Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmount) content.GetValueForProperty("Amount",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).Amount, Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.AmountTypeConverter.ConvertFrom);
            }
            if (content.Contains("AzureCreditApplied"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).AzureCreditApplied = (Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmount) content.GetValueForProperty("AzureCreditApplied",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).AzureCreditApplied, Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.AmountTypeConverter.ConvertFrom);
            }
            if (content.Contains("EffectivePrice"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).EffectivePrice = (Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmount) content.GetValueForProperty("EffectivePrice",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).EffectivePrice, Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.AmountTypeConverter.ConvertFrom);
            }
            if (content.Contains("MarketPrice"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).MarketPrice = (Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmount) content.GetValueForProperty("MarketPrice",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).MarketPrice, Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.AmountTypeConverter.ConvertFrom);
            }
            if (content.Contains("SubTotal"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).SubTotal = (Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmount) content.GetValueForProperty("SubTotal",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).SubTotal, Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.AmountTypeConverter.ConvertFrom);
            }
            if (content.Contains("Tax"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).Tax = (Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmount) content.GetValueForProperty("Tax",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).Tax, Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.AmountTypeConverter.ConvertFrom);
            }
            if (content.Contains("Kind"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).Kind = (Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.TransactionTypeKind?) content.GetValueForProperty("Kind",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).Kind, Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.TransactionTypeKind.CreateFrom);
            }
            if (content.Contains("Date"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).Date = (global::System.DateTime?) content.GetValueForProperty("Date",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).Date, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("Invoice"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).Invoice = (string) content.GetValueForProperty("Invoice",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).Invoice, global::System.Convert.ToString);
            }
            if (content.Contains("InvoiceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).InvoiceId = (string) content.GetValueForProperty("InvoiceId",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).InvoiceId, global::System.Convert.ToString);
            }
            if (content.Contains("OrderId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).OrderId = (string) content.GetValueForProperty("OrderId",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).OrderId, global::System.Convert.ToString);
            }
            if (content.Contains("OrderName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).OrderName = (string) content.GetValueForProperty("OrderName",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).OrderName, global::System.Convert.ToString);
            }
            if (content.Contains("ProductFamily"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).ProductFamily = (string) content.GetValueForProperty("ProductFamily",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).ProductFamily, global::System.Convert.ToString);
            }
            if (content.Contains("ProductTypeId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).ProductTypeId = (string) content.GetValueForProperty("ProductTypeId",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).ProductTypeId, global::System.Convert.ToString);
            }
            if (content.Contains("ProductType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).ProductType = (string) content.GetValueForProperty("ProductType",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).ProductType, global::System.Convert.ToString);
            }
            if (content.Contains("ProductDescription"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).ProductDescription = (string) content.GetValueForProperty("ProductDescription",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).ProductDescription, global::System.Convert.ToString);
            }
            if (content.Contains("TransactionType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).TransactionType = (Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.ReservationType?) content.GetValueForProperty("TransactionType",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).TransactionType, Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.ReservationType.CreateFrom);
            }
            if (content.Contains("Quantity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).Quantity = (int?) content.GetValueForProperty("Quantity",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).Quantity, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("InvoiceSectionId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).InvoiceSectionId = (string) content.GetValueForProperty("InvoiceSectionId",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).InvoiceSectionId, global::System.Convert.ToString);
            }
            if (content.Contains("InvoiceSectionDisplayName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).InvoiceSectionDisplayName = (string) content.GetValueForProperty("InvoiceSectionDisplayName",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).InvoiceSectionDisplayName, global::System.Convert.ToString);
            }
            if (content.Contains("BillingProfileId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).BillingProfileId = (string) content.GetValueForProperty("BillingProfileId",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).BillingProfileId, global::System.Convert.ToString);
            }
            if (content.Contains("BillingProfileDisplayName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).BillingProfileDisplayName = (string) content.GetValueForProperty("BillingProfileDisplayName",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).BillingProfileDisplayName, global::System.Convert.ToString);
            }
            if (content.Contains("CustomerId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).CustomerId = (string) content.GetValueForProperty("CustomerId",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).CustomerId, global::System.Convert.ToString);
            }
            if (content.Contains("CustomerDisplayName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).CustomerDisplayName = (string) content.GetValueForProperty("CustomerDisplayName",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).CustomerDisplayName, global::System.Convert.ToString);
            }
            if (content.Contains("SubscriptionId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).SubscriptionId = (string) content.GetValueForProperty("SubscriptionId",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).SubscriptionId, global::System.Convert.ToString);
            }
            if (content.Contains("SubscriptionName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).SubscriptionName = (string) content.GetValueForProperty("SubscriptionName",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).SubscriptionName, global::System.Convert.ToString);
            }
            if (content.Contains("AzurePlan"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).AzurePlan = (string) content.GetValueForProperty("AzurePlan",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).AzurePlan, global::System.Convert.ToString);
            }
            if (content.Contains("BillingCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).BillingCurrency = (string) content.GetValueForProperty("BillingCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).BillingCurrency, global::System.Convert.ToString);
            }
            if (content.Contains("Discount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).Discount = (float?) content.GetValueForProperty("Discount",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).Discount, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("ExchangeRate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).ExchangeRate = (float?) content.GetValueForProperty("ExchangeRate",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).ExchangeRate, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("PricingCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).PricingCurrency = (string) content.GetValueForProperty("PricingCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).PricingCurrency, global::System.Convert.ToString);
            }
            if (content.Contains("ServicePeriodStartDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).ServicePeriodStartDate = (global::System.DateTime?) content.GetValueForProperty("ServicePeriodStartDate",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).ServicePeriodStartDate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ServicePeriodEndDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).ServicePeriodEndDate = (global::System.DateTime?) content.GetValueForProperty("ServicePeriodEndDate",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).ServicePeriodEndDate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("UnitOfMeasure"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).UnitOfMeasure = (string) content.GetValueForProperty("UnitOfMeasure",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).UnitOfMeasure, global::System.Convert.ToString);
            }
            if (content.Contains("Unit"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).Unit = (float?) content.GetValueForProperty("Unit",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).Unit, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("UnitType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).UnitType = (string) content.GetValueForProperty("UnitType",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).UnitType, global::System.Convert.ToString);
            }
            if (content.Contains("AmountCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).AmountCurrency = (string) content.GetValueForProperty("AmountCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).AmountCurrency, global::System.Convert.ToString);
            }
            if (content.Contains("AmountValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).AmountValue = (float?) content.GetValueForProperty("AmountValue",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).AmountValue, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("AzureCreditAppliedCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).AzureCreditAppliedCurrency = (string) content.GetValueForProperty("AzureCreditAppliedCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).AzureCreditAppliedCurrency, global::System.Convert.ToString);
            }
            if (content.Contains("AzureCreditAppliedValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).AzureCreditAppliedValue = (float?) content.GetValueForProperty("AzureCreditAppliedValue",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).AzureCreditAppliedValue, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("EffectivePriceCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).EffectivePriceCurrency = (string) content.GetValueForProperty("EffectivePriceCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).EffectivePriceCurrency, global::System.Convert.ToString);
            }
            if (content.Contains("EffectivePriceValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).EffectivePriceValue = (float?) content.GetValueForProperty("EffectivePriceValue",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).EffectivePriceValue, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("MarketPriceCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).MarketPriceCurrency = (string) content.GetValueForProperty("MarketPriceCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).MarketPriceCurrency, global::System.Convert.ToString);
            }
            if (content.Contains("MarketPriceValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).MarketPriceValue = (float?) content.GetValueForProperty("MarketPriceValue",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).MarketPriceValue, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("SubTotalCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).SubTotalCurrency = (string) content.GetValueForProperty("SubTotalCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).SubTotalCurrency, global::System.Convert.ToString);
            }
            if (content.Contains("SubTotalValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).SubTotalValue = (float?) content.GetValueForProperty("SubTotalValue",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).SubTotalValue, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("TaxCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).TaxCurrency = (string) content.GetValueForProperty("TaxCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).TaxCurrency, global::System.Convert.ToString);
            }
            if (content.Contains("TaxValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).TaxValue = (float?) content.GetValueForProperty("TaxValue",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).TaxValue, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.Transaction"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal Transaction(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.TransactionPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Amount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).Amount = (Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmount) content.GetValueForProperty("Amount",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).Amount, Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.AmountTypeConverter.ConvertFrom);
            }
            if (content.Contains("AzureCreditApplied"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).AzureCreditApplied = (Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmount) content.GetValueForProperty("AzureCreditApplied",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).AzureCreditApplied, Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.AmountTypeConverter.ConvertFrom);
            }
            if (content.Contains("EffectivePrice"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).EffectivePrice = (Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmount) content.GetValueForProperty("EffectivePrice",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).EffectivePrice, Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.AmountTypeConverter.ConvertFrom);
            }
            if (content.Contains("MarketPrice"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).MarketPrice = (Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmount) content.GetValueForProperty("MarketPrice",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).MarketPrice, Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.AmountTypeConverter.ConvertFrom);
            }
            if (content.Contains("SubTotal"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).SubTotal = (Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmount) content.GetValueForProperty("SubTotal",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).SubTotal, Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.AmountTypeConverter.ConvertFrom);
            }
            if (content.Contains("Tax"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).Tax = (Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmount) content.GetValueForProperty("Tax",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).Tax, Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.AmountTypeConverter.ConvertFrom);
            }
            if (content.Contains("Kind"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).Kind = (Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.TransactionTypeKind?) content.GetValueForProperty("Kind",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).Kind, Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.TransactionTypeKind.CreateFrom);
            }
            if (content.Contains("Date"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).Date = (global::System.DateTime?) content.GetValueForProperty("Date",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).Date, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("Invoice"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).Invoice = (string) content.GetValueForProperty("Invoice",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).Invoice, global::System.Convert.ToString);
            }
            if (content.Contains("InvoiceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).InvoiceId = (string) content.GetValueForProperty("InvoiceId",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).InvoiceId, global::System.Convert.ToString);
            }
            if (content.Contains("OrderId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).OrderId = (string) content.GetValueForProperty("OrderId",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).OrderId, global::System.Convert.ToString);
            }
            if (content.Contains("OrderName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).OrderName = (string) content.GetValueForProperty("OrderName",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).OrderName, global::System.Convert.ToString);
            }
            if (content.Contains("ProductFamily"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).ProductFamily = (string) content.GetValueForProperty("ProductFamily",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).ProductFamily, global::System.Convert.ToString);
            }
            if (content.Contains("ProductTypeId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).ProductTypeId = (string) content.GetValueForProperty("ProductTypeId",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).ProductTypeId, global::System.Convert.ToString);
            }
            if (content.Contains("ProductType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).ProductType = (string) content.GetValueForProperty("ProductType",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).ProductType, global::System.Convert.ToString);
            }
            if (content.Contains("ProductDescription"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).ProductDescription = (string) content.GetValueForProperty("ProductDescription",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).ProductDescription, global::System.Convert.ToString);
            }
            if (content.Contains("TransactionType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).TransactionType = (Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.ReservationType?) content.GetValueForProperty("TransactionType",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).TransactionType, Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.ReservationType.CreateFrom);
            }
            if (content.Contains("Quantity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).Quantity = (int?) content.GetValueForProperty("Quantity",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).Quantity, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("InvoiceSectionId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).InvoiceSectionId = (string) content.GetValueForProperty("InvoiceSectionId",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).InvoiceSectionId, global::System.Convert.ToString);
            }
            if (content.Contains("InvoiceSectionDisplayName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).InvoiceSectionDisplayName = (string) content.GetValueForProperty("InvoiceSectionDisplayName",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).InvoiceSectionDisplayName, global::System.Convert.ToString);
            }
            if (content.Contains("BillingProfileId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).BillingProfileId = (string) content.GetValueForProperty("BillingProfileId",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).BillingProfileId, global::System.Convert.ToString);
            }
            if (content.Contains("BillingProfileDisplayName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).BillingProfileDisplayName = (string) content.GetValueForProperty("BillingProfileDisplayName",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).BillingProfileDisplayName, global::System.Convert.ToString);
            }
            if (content.Contains("CustomerId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).CustomerId = (string) content.GetValueForProperty("CustomerId",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).CustomerId, global::System.Convert.ToString);
            }
            if (content.Contains("CustomerDisplayName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).CustomerDisplayName = (string) content.GetValueForProperty("CustomerDisplayName",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).CustomerDisplayName, global::System.Convert.ToString);
            }
            if (content.Contains("SubscriptionId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).SubscriptionId = (string) content.GetValueForProperty("SubscriptionId",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).SubscriptionId, global::System.Convert.ToString);
            }
            if (content.Contains("SubscriptionName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).SubscriptionName = (string) content.GetValueForProperty("SubscriptionName",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).SubscriptionName, global::System.Convert.ToString);
            }
            if (content.Contains("AzurePlan"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).AzurePlan = (string) content.GetValueForProperty("AzurePlan",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).AzurePlan, global::System.Convert.ToString);
            }
            if (content.Contains("BillingCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).BillingCurrency = (string) content.GetValueForProperty("BillingCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).BillingCurrency, global::System.Convert.ToString);
            }
            if (content.Contains("Discount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).Discount = (float?) content.GetValueForProperty("Discount",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).Discount, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("ExchangeRate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).ExchangeRate = (float?) content.GetValueForProperty("ExchangeRate",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).ExchangeRate, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("PricingCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).PricingCurrency = (string) content.GetValueForProperty("PricingCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).PricingCurrency, global::System.Convert.ToString);
            }
            if (content.Contains("ServicePeriodStartDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).ServicePeriodStartDate = (global::System.DateTime?) content.GetValueForProperty("ServicePeriodStartDate",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).ServicePeriodStartDate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ServicePeriodEndDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).ServicePeriodEndDate = (global::System.DateTime?) content.GetValueForProperty("ServicePeriodEndDate",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).ServicePeriodEndDate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("UnitOfMeasure"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).UnitOfMeasure = (string) content.GetValueForProperty("UnitOfMeasure",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).UnitOfMeasure, global::System.Convert.ToString);
            }
            if (content.Contains("Unit"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).Unit = (float?) content.GetValueForProperty("Unit",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).Unit, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("UnitType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).UnitType = (string) content.GetValueForProperty("UnitType",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).UnitType, global::System.Convert.ToString);
            }
            if (content.Contains("AmountCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).AmountCurrency = (string) content.GetValueForProperty("AmountCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).AmountCurrency, global::System.Convert.ToString);
            }
            if (content.Contains("AmountValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).AmountValue = (float?) content.GetValueForProperty("AmountValue",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).AmountValue, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("AzureCreditAppliedCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).AzureCreditAppliedCurrency = (string) content.GetValueForProperty("AzureCreditAppliedCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).AzureCreditAppliedCurrency, global::System.Convert.ToString);
            }
            if (content.Contains("AzureCreditAppliedValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).AzureCreditAppliedValue = (float?) content.GetValueForProperty("AzureCreditAppliedValue",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).AzureCreditAppliedValue, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("EffectivePriceCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).EffectivePriceCurrency = (string) content.GetValueForProperty("EffectivePriceCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).EffectivePriceCurrency, global::System.Convert.ToString);
            }
            if (content.Contains("EffectivePriceValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).EffectivePriceValue = (float?) content.GetValueForProperty("EffectivePriceValue",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).EffectivePriceValue, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("MarketPriceCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).MarketPriceCurrency = (string) content.GetValueForProperty("MarketPriceCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).MarketPriceCurrency, global::System.Convert.ToString);
            }
            if (content.Contains("MarketPriceValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).MarketPriceValue = (float?) content.GetValueForProperty("MarketPriceValue",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).MarketPriceValue, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("SubTotalCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).SubTotalCurrency = (string) content.GetValueForProperty("SubTotalCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).SubTotalCurrency, global::System.Convert.ToString);
            }
            if (content.Contains("SubTotalValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).SubTotalValue = (float?) content.GetValueForProperty("SubTotalValue",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).SubTotalValue, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("TaxCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).TaxCurrency = (string) content.GetValueForProperty("TaxCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).TaxCurrency, global::System.Convert.ToString);
            }
            if (content.Contains("TaxValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).TaxValue = (float?) content.GetValueForProperty("TaxValue",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionInternal)this).TaxValue, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            AfterDeserializePSObject(content);
        }
    }
    /// A transaction.
    [System.ComponentModel.TypeConverter(typeof(TransactionTypeConverter))]
    public partial interface ITransaction

    {

    }
}