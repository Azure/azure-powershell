// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Extensions;

    /// <summary>The properties of a transaction.</summary>
    public partial class TransactionProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json erialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject json ? new TransactionProperties(json) : null;
        }

        /// <summary>
        /// Serializes this instance of <see cref="TransactionProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="TransactionProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._transactionAmount ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) this._transactionAmount.ToJson(null,serializationMode) : null, "transactionAmount" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._azureCreditApplied ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) this._azureCreditApplied.ToJson(null,serializationMode) : null, "azureCreditApplied" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._effectivePrice ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) this._effectivePrice.ToJson(null,serializationMode) : null, "effectivePrice" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._marketPrice ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) this._marketPrice.ToJson(null,serializationMode) : null, "marketPrice" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._subTotal ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) this._subTotal.ToJson(null,serializationMode) : null, "subTotal" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._tax ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) this._tax.ToJson(null,serializationMode) : null, "tax" ,container.Add );
            }
            AddIf( null != (((object)this._kind)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._kind.ToString()) : null, "kind" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._date ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._date?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "date" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._invoice)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._invoice.ToString()) : null, "invoice" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._invoiceId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._invoiceId.ToString()) : null, "invoiceId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._orderId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._orderId.ToString()) : null, "orderId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._orderName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._orderName.ToString()) : null, "orderName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._productFamily)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._productFamily.ToString()) : null, "productFamily" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._productTypeId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._productTypeId.ToString()) : null, "productTypeId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._productType)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._productType.ToString()) : null, "productType" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._productDescription)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._productDescription.ToString()) : null, "productDescription" ,container.Add );
            }
            AddIf( null != (((object)this._transactionType)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._transactionType.ToString()) : null, "transactionType" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._quantity ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNumber((int)this._quantity) : null, "quantity" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._invoiceSectionId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._invoiceSectionId.ToString()) : null, "invoiceSectionId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._invoiceSectionDisplayName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._invoiceSectionDisplayName.ToString()) : null, "invoiceSectionDisplayName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._billingProfileId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._billingProfileId.ToString()) : null, "billingProfileId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._billingProfileDisplayName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._billingProfileDisplayName.ToString()) : null, "billingProfileDisplayName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._customerId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._customerId.ToString()) : null, "customerId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._customerDisplayName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._customerDisplayName.ToString()) : null, "customerDisplayName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._subscriptionId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._subscriptionId.ToString()) : null, "subscriptionId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._subscriptionName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._subscriptionName.ToString()) : null, "subscriptionName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._azurePlan)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._azurePlan.ToString()) : null, "azurePlan" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._billingCurrency)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._billingCurrency.ToString()) : null, "billingCurrency" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._discount ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNumber((float)this._discount) : null, "discount" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._exchangeRate ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNumber((float)this._exchangeRate) : null, "exchangeRate" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._pricingCurrency)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._pricingCurrency.ToString()) : null, "pricingCurrency" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._servicePeriodStartDate ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._servicePeriodStartDate?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "servicePeriodStartDate" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._servicePeriodEndDate ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._servicePeriodEndDate?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "servicePeriodEndDate" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._unitOfMeasure)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._unitOfMeasure.ToString()) : null, "unitOfMeasure" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._unit ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNumber((float)this._unit) : null, "units" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._unitType)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._unitType.ToString()) : null, "unitType" ,container.Add );
            }
            AfterToJson(ref container);
            return container;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject into a new instance of <see cref="TransactionProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal TransactionProperties(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_transactionAmount = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject>("transactionAmount"), out var __jsonTransactionAmount) ? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.Amount.FromJson(__jsonTransactionAmount) : TransactionAmount;}
            {_azureCreditApplied = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject>("azureCreditApplied"), out var __jsonAzureCreditApplied) ? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.Amount.FromJson(__jsonAzureCreditApplied) : AzureCreditApplied;}
            {_effectivePrice = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject>("effectivePrice"), out var __jsonEffectivePrice) ? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.Amount.FromJson(__jsonEffectivePrice) : EffectivePrice;}
            {_marketPrice = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject>("marketPrice"), out var __jsonMarketPrice) ? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.Amount.FromJson(__jsonMarketPrice) : MarketPrice;}
            {_subTotal = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject>("subTotal"), out var __jsonSubTotal) ? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.Amount.FromJson(__jsonSubTotal) : SubTotal;}
            {_tax = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject>("tax"), out var __jsonTax) ? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.Amount.FromJson(__jsonTax) : Tax;}
            {_kind = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("kind"), out var __jsonKind) ? (string)__jsonKind : (string)Kind;}
            {_date = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("date"), out var __jsonDate) ? global::System.DateTime.TryParse((string)__jsonDate, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonDateValue) ? __jsonDateValue : Date : Date;}
            {_invoice = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("invoice"), out var __jsonInvoice) ? (string)__jsonInvoice : (string)Invoice;}
            {_invoiceId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("invoiceId"), out var __jsonInvoiceId) ? (string)__jsonInvoiceId : (string)InvoiceId;}
            {_orderId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("orderId"), out var __jsonOrderId) ? (string)__jsonOrderId : (string)OrderId;}
            {_orderName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("orderName"), out var __jsonOrderName) ? (string)__jsonOrderName : (string)OrderName;}
            {_productFamily = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("productFamily"), out var __jsonProductFamily) ? (string)__jsonProductFamily : (string)ProductFamily;}
            {_productTypeId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("productTypeId"), out var __jsonProductTypeId) ? (string)__jsonProductTypeId : (string)ProductTypeId;}
            {_productType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("productType"), out var __jsonProductType) ? (string)__jsonProductType : (string)ProductType;}
            {_productDescription = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("productDescription"), out var __jsonProductDescription) ? (string)__jsonProductDescription : (string)ProductDescription;}
            {_transactionType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("transactionType"), out var __jsonTransactionType) ? (string)__jsonTransactionType : (string)TransactionType;}
            {_quantity = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNumber>("quantity"), out var __jsonQuantity) ? (int?)__jsonQuantity : Quantity;}
            {_invoiceSectionId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("invoiceSectionId"), out var __jsonInvoiceSectionId) ? (string)__jsonInvoiceSectionId : (string)InvoiceSectionId;}
            {_invoiceSectionDisplayName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("invoiceSectionDisplayName"), out var __jsonInvoiceSectionDisplayName) ? (string)__jsonInvoiceSectionDisplayName : (string)InvoiceSectionDisplayName;}
            {_billingProfileId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("billingProfileId"), out var __jsonBillingProfileId) ? (string)__jsonBillingProfileId : (string)BillingProfileId;}
            {_billingProfileDisplayName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("billingProfileDisplayName"), out var __jsonBillingProfileDisplayName) ? (string)__jsonBillingProfileDisplayName : (string)BillingProfileDisplayName;}
            {_customerId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("customerId"), out var __jsonCustomerId) ? (string)__jsonCustomerId : (string)CustomerId;}
            {_customerDisplayName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("customerDisplayName"), out var __jsonCustomerDisplayName) ? (string)__jsonCustomerDisplayName : (string)CustomerDisplayName;}
            {_subscriptionId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("subscriptionId"), out var __jsonSubscriptionId) ? (string)__jsonSubscriptionId : (string)SubscriptionId;}
            {_subscriptionName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("subscriptionName"), out var __jsonSubscriptionName) ? (string)__jsonSubscriptionName : (string)SubscriptionName;}
            {_azurePlan = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("azurePlan"), out var __jsonAzurePlan) ? (string)__jsonAzurePlan : (string)AzurePlan;}
            {_billingCurrency = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("billingCurrency"), out var __jsonBillingCurrency) ? (string)__jsonBillingCurrency : (string)BillingCurrency;}
            {_discount = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNumber>("discount"), out var __jsonDiscount) ? (float?)__jsonDiscount : Discount;}
            {_exchangeRate = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNumber>("exchangeRate"), out var __jsonExchangeRate) ? (float?)__jsonExchangeRate : ExchangeRate;}
            {_pricingCurrency = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("pricingCurrency"), out var __jsonPricingCurrency) ? (string)__jsonPricingCurrency : (string)PricingCurrency;}
            {_servicePeriodStartDate = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("servicePeriodStartDate"), out var __jsonServicePeriodStartDate) ? global::System.DateTime.TryParse((string)__jsonServicePeriodStartDate, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonServicePeriodStartDateValue) ? __jsonServicePeriodStartDateValue : ServicePeriodStartDate : ServicePeriodStartDate;}
            {_servicePeriodEndDate = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("servicePeriodEndDate"), out var __jsonServicePeriodEndDate) ? global::System.DateTime.TryParse((string)__jsonServicePeriodEndDate, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonServicePeriodEndDateValue) ? __jsonServicePeriodEndDateValue : ServicePeriodEndDate : ServicePeriodEndDate;}
            {_unitOfMeasure = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("unitOfMeasure"), out var __jsonUnitOfMeasure) ? (string)__jsonUnitOfMeasure : (string)UnitOfMeasure;}
            {_unit = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNumber>("units"), out var __jsonUnits) ? (float?)__jsonUnits : Unit;}
            {_unitType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("unitType"), out var __jsonUnitType) ? (string)__jsonUnitType : (string)UnitType;}
            AfterFromJson(json);
        }
    }
}