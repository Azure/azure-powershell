// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501
{
    using Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.PowerShell;

    /// <summary>A billing subscription.</summary>
    [System.ComponentModel.TypeConverter(typeof(BillingSubscriptionTypeConverter))]
    public partial class BillingSubscription
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.BillingSubscription"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal BillingSubscription(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.BillingSubscriptionPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Reseller"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).Reseller = (Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IReseller) content.GetValueForProperty("Reseller",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).Reseller, Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ResellerTypeConverter.ConvertFrom);
            }
            if (content.Contains("LastMonthCharge"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).LastMonthCharge = (Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmount) content.GetValueForProperty("LastMonthCharge",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).LastMonthCharge, Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.AmountTypeConverter.ConvertFrom);
            }
            if (content.Contains("MonthToDateCharge"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).MonthToDateCharge = (Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmount) content.GetValueForProperty("MonthToDateCharge",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).MonthToDateCharge, Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.AmountTypeConverter.ConvertFrom);
            }
            if (content.Contains("DisplayName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).DisplayName = (string) content.GetValueForProperty("DisplayName",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).DisplayName, global::System.Convert.ToString);
            }
            if (content.Contains("SubscriptionId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).SubscriptionId = (string) content.GetValueForProperty("SubscriptionId",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).SubscriptionId, global::System.Convert.ToString);
            }
            if (content.Contains("SubscriptionBillingStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).SubscriptionBillingStatus = (Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.BillingSubscriptionStatusType?) content.GetValueForProperty("SubscriptionBillingStatus",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).SubscriptionBillingStatus, Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.BillingSubscriptionStatusType.CreateFrom);
            }
            if (content.Contains("BillingProfileId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).BillingProfileId = (string) content.GetValueForProperty("BillingProfileId",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).BillingProfileId, global::System.Convert.ToString);
            }
            if (content.Contains("BillingProfileDisplayName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).BillingProfileDisplayName = (string) content.GetValueForProperty("BillingProfileDisplayName",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).BillingProfileDisplayName, global::System.Convert.ToString);
            }
            if (content.Contains("CostCenter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).CostCenter = (string) content.GetValueForProperty("CostCenter",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).CostCenter, global::System.Convert.ToString);
            }
            if (content.Contains("CustomerId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).CustomerId = (string) content.GetValueForProperty("CustomerId",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).CustomerId, global::System.Convert.ToString);
            }
            if (content.Contains("CustomerDisplayName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).CustomerDisplayName = (string) content.GetValueForProperty("CustomerDisplayName",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).CustomerDisplayName, global::System.Convert.ToString);
            }
            if (content.Contains("InvoiceSectionId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).InvoiceSectionId = (string) content.GetValueForProperty("InvoiceSectionId",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).InvoiceSectionId, global::System.Convert.ToString);
            }
            if (content.Contains("InvoiceSectionDisplayName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).InvoiceSectionDisplayName = (string) content.GetValueForProperty("InvoiceSectionDisplayName",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).InvoiceSectionDisplayName, global::System.Convert.ToString);
            }
            if (content.Contains("SkuId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).SkuId = (string) content.GetValueForProperty("SkuId",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).SkuId, global::System.Convert.ToString);
            }
            if (content.Contains("SkuDescription"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).SkuDescription = (string) content.GetValueForProperty("SkuDescription",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).SkuDescription, global::System.Convert.ToString);
            }
            if (content.Contains("SuspensionReason"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).SuspensionReason = (string[]) content.GetValueForProperty("SuspensionReason",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).SuspensionReason, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ResellerId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).ResellerId = (string) content.GetValueForProperty("ResellerId",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).ResellerId, global::System.Convert.ToString);
            }
            if (content.Contains("ResellerDescription"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).ResellerDescription = (string) content.GetValueForProperty("ResellerDescription",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).ResellerDescription, global::System.Convert.ToString);
            }
            if (content.Contains("LastMonthChargeCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).LastMonthChargeCurrency = (string) content.GetValueForProperty("LastMonthChargeCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).LastMonthChargeCurrency, global::System.Convert.ToString);
            }
            if (content.Contains("LastMonthChargeValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).LastMonthChargeValue = (float?) content.GetValueForProperty("LastMonthChargeValue",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).LastMonthChargeValue, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("MonthToDateChargeCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).MonthToDateChargeCurrency = (string) content.GetValueForProperty("MonthToDateChargeCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).MonthToDateChargeCurrency, global::System.Convert.ToString);
            }
            if (content.Contains("MonthToDateChargeValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).MonthToDateChargeValue = (float?) content.GetValueForProperty("MonthToDateChargeValue",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).MonthToDateChargeValue, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.BillingSubscription"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal BillingSubscription(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.BillingSubscriptionPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Reseller"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).Reseller = (Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IReseller) content.GetValueForProperty("Reseller",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).Reseller, Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ResellerTypeConverter.ConvertFrom);
            }
            if (content.Contains("LastMonthCharge"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).LastMonthCharge = (Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmount) content.GetValueForProperty("LastMonthCharge",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).LastMonthCharge, Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.AmountTypeConverter.ConvertFrom);
            }
            if (content.Contains("MonthToDateCharge"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).MonthToDateCharge = (Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmount) content.GetValueForProperty("MonthToDateCharge",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).MonthToDateCharge, Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.AmountTypeConverter.ConvertFrom);
            }
            if (content.Contains("DisplayName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).DisplayName = (string) content.GetValueForProperty("DisplayName",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).DisplayName, global::System.Convert.ToString);
            }
            if (content.Contains("SubscriptionId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).SubscriptionId = (string) content.GetValueForProperty("SubscriptionId",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).SubscriptionId, global::System.Convert.ToString);
            }
            if (content.Contains("SubscriptionBillingStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).SubscriptionBillingStatus = (Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.BillingSubscriptionStatusType?) content.GetValueForProperty("SubscriptionBillingStatus",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).SubscriptionBillingStatus, Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.BillingSubscriptionStatusType.CreateFrom);
            }
            if (content.Contains("BillingProfileId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).BillingProfileId = (string) content.GetValueForProperty("BillingProfileId",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).BillingProfileId, global::System.Convert.ToString);
            }
            if (content.Contains("BillingProfileDisplayName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).BillingProfileDisplayName = (string) content.GetValueForProperty("BillingProfileDisplayName",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).BillingProfileDisplayName, global::System.Convert.ToString);
            }
            if (content.Contains("CostCenter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).CostCenter = (string) content.GetValueForProperty("CostCenter",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).CostCenter, global::System.Convert.ToString);
            }
            if (content.Contains("CustomerId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).CustomerId = (string) content.GetValueForProperty("CustomerId",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).CustomerId, global::System.Convert.ToString);
            }
            if (content.Contains("CustomerDisplayName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).CustomerDisplayName = (string) content.GetValueForProperty("CustomerDisplayName",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).CustomerDisplayName, global::System.Convert.ToString);
            }
            if (content.Contains("InvoiceSectionId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).InvoiceSectionId = (string) content.GetValueForProperty("InvoiceSectionId",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).InvoiceSectionId, global::System.Convert.ToString);
            }
            if (content.Contains("InvoiceSectionDisplayName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).InvoiceSectionDisplayName = (string) content.GetValueForProperty("InvoiceSectionDisplayName",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).InvoiceSectionDisplayName, global::System.Convert.ToString);
            }
            if (content.Contains("SkuId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).SkuId = (string) content.GetValueForProperty("SkuId",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).SkuId, global::System.Convert.ToString);
            }
            if (content.Contains("SkuDescription"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).SkuDescription = (string) content.GetValueForProperty("SkuDescription",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).SkuDescription, global::System.Convert.ToString);
            }
            if (content.Contains("SuspensionReason"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).SuspensionReason = (string[]) content.GetValueForProperty("SuspensionReason",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).SuspensionReason, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ResellerId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).ResellerId = (string) content.GetValueForProperty("ResellerId",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).ResellerId, global::System.Convert.ToString);
            }
            if (content.Contains("ResellerDescription"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).ResellerDescription = (string) content.GetValueForProperty("ResellerDescription",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).ResellerDescription, global::System.Convert.ToString);
            }
            if (content.Contains("LastMonthChargeCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).LastMonthChargeCurrency = (string) content.GetValueForProperty("LastMonthChargeCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).LastMonthChargeCurrency, global::System.Convert.ToString);
            }
            if (content.Contains("LastMonthChargeValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).LastMonthChargeValue = (float?) content.GetValueForProperty("LastMonthChargeValue",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).LastMonthChargeValue, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("MonthToDateChargeCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).MonthToDateChargeCurrency = (string) content.GetValueForProperty("MonthToDateChargeCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).MonthToDateChargeCurrency, global::System.Convert.ToString);
            }
            if (content.Contains("MonthToDateChargeValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).MonthToDateChargeValue = (float?) content.GetValueForProperty("MonthToDateChargeValue",((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscriptionInternal)this).MonthToDateChargeValue, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.BillingSubscription"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscription" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscription DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new BillingSubscription(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.BillingSubscription"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscription" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscription DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new BillingSubscription(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="BillingSubscription" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="className" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingSubscription FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// A billing subscription.
    [System.ComponentModel.TypeConverter(typeof(BillingSubscriptionTypeConverter))]
    public partial interface IBillingSubscription

    {

    }
}