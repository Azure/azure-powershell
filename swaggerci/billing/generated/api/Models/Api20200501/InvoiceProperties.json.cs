// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Extensions;

    /// <summary>The properties of the invoice.</summary>
    public partial class InvoiceProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json erialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IInvoiceProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IInvoiceProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IInvoiceProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject json ? new InvoiceProperties(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject into a new instance of <see cref="InvoiceProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal InvoiceProperties(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_amountDue = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject>("amountDue"), out var __jsonAmountDue) ? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.Amount.FromJson(__jsonAmountDue) : AmountDue;}
            {_azurePrepaymentApplied = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject>("azurePrepaymentApplied"), out var __jsonAzurePrepaymentApplied) ? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.Amount.FromJson(__jsonAzurePrepaymentApplied) : AzurePrepaymentApplied;}
            {_billedAmount = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject>("billedAmount"), out var __jsonBilledAmount) ? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.Amount.FromJson(__jsonBilledAmount) : BilledAmount;}
            {_creditAmount = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject>("creditAmount"), out var __jsonCreditAmount) ? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.Amount.FromJson(__jsonCreditAmount) : CreditAmount;}
            {_freeAzureCreditApplied = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject>("freeAzureCreditApplied"), out var __jsonFreeAzureCreditApplied) ? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.Amount.FromJson(__jsonFreeAzureCreditApplied) : FreeAzureCreditApplied;}
            {_subTotal = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject>("subTotal"), out var __jsonSubTotal) ? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.Amount.FromJson(__jsonSubTotal) : SubTotal;}
            {_taxAmount = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject>("taxAmount"), out var __jsonTaxAmount) ? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.Amount.FromJson(__jsonTaxAmount) : TaxAmount;}
            {_totalAmount = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject>("totalAmount"), out var __jsonTotalAmount) ? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.Amount.FromJson(__jsonTotalAmount) : TotalAmount;}
            {_dueDate = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("dueDate"), out var __jsonDueDate) ? global::System.DateTime.TryParse((string)__jsonDueDate, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonDueDateValue) ? __jsonDueDateValue : DueDate : DueDate;}
            {_invoiceDate = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("invoiceDate"), out var __jsonInvoiceDate) ? global::System.DateTime.TryParse((string)__jsonInvoiceDate, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonInvoiceDateValue) ? __jsonInvoiceDateValue : InvoiceDate : InvoiceDate;}
            {_status = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("status"), out var __jsonStatus) ? (string)__jsonStatus : (string)Status;}
            {_invoicePeriodStartDate = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("invoicePeriodStartDate"), out var __jsonInvoicePeriodStartDate) ? global::System.DateTime.TryParse((string)__jsonInvoicePeriodStartDate, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonInvoicePeriodStartDateValue) ? __jsonInvoicePeriodStartDateValue : InvoicePeriodStartDate : InvoicePeriodStartDate;}
            {_invoicePeriodEndDate = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("invoicePeriodEndDate"), out var __jsonInvoicePeriodEndDate) ? global::System.DateTime.TryParse((string)__jsonInvoicePeriodEndDate, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonInvoicePeriodEndDateValue) ? __jsonInvoicePeriodEndDateValue : InvoicePeriodEndDate : InvoicePeriodEndDate;}
            {_invoiceType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("invoiceType"), out var __jsonInvoiceType) ? (string)__jsonInvoiceType : (string)InvoiceType;}
            {_isMonthlyInvoice = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonBoolean>("isMonthlyInvoice"), out var __jsonIsMonthlyInvoice) ? (bool?)__jsonIsMonthlyInvoice : IsMonthlyInvoice;}
            {_billingProfileId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("billingProfileId"), out var __jsonBillingProfileId) ? (string)__jsonBillingProfileId : (string)BillingProfileId;}
            {_billingProfileDisplayName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("billingProfileDisplayName"), out var __jsonBillingProfileDisplayName) ? (string)__jsonBillingProfileDisplayName : (string)BillingProfileDisplayName;}
            {_purchaseOrderNumber = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("purchaseOrderNumber"), out var __jsonPurchaseOrderNumber) ? (string)__jsonPurchaseOrderNumber : (string)PurchaseOrderNumber;}
            {_document = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonArray>("documents"), out var __jsonDocuments) ? If( __jsonDocuments as Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IDocument[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IDocument) (Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.Document.FromJson(__u) )) ))() : null : Document;}
            {_payment = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonArray>("payments"), out var __jsonPayments) ? If( __jsonPayments as Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonArray, out var __q) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IPaymentProperties[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__q, (__p)=>(Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IPaymentProperties) (Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.PaymentProperties.FromJson(__p) )) ))() : null : Payment;}
            {_rebillDetail = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject>("rebillDetails"), out var __jsonRebillDetails) ? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.InvoicePropertiesRebillDetails.FromJson(__jsonRebillDetails) : RebillDetail;}
            {_documentType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("documentType"), out var __jsonDocumentType) ? (string)__jsonDocumentType : (string)DocumentType;}
            {_billedDocumentId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("billedDocumentId"), out var __jsonBilledDocumentId) ? (string)__jsonBilledDocumentId : (string)BilledDocumentId;}
            {_creditForDocumentId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("creditForDocumentId"), out var __jsonCreditForDocumentId) ? (string)__jsonCreditForDocumentId : (string)CreditForDocumentId;}
            {_subscriptionId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("subscriptionId"), out var __jsonSubscriptionId) ? (string)__jsonSubscriptionId : (string)SubscriptionId;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="InvoiceProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="InvoiceProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._amountDue ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) this._amountDue.ToJson(null,serializationMode) : null, "amountDue" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._azurePrepaymentApplied ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) this._azurePrepaymentApplied.ToJson(null,serializationMode) : null, "azurePrepaymentApplied" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._billedAmount ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) this._billedAmount.ToJson(null,serializationMode) : null, "billedAmount" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._creditAmount ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) this._creditAmount.ToJson(null,serializationMode) : null, "creditAmount" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._freeAzureCreditApplied ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) this._freeAzureCreditApplied.ToJson(null,serializationMode) : null, "freeAzureCreditApplied" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._subTotal ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) this._subTotal.ToJson(null,serializationMode) : null, "subTotal" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._taxAmount ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) this._taxAmount.ToJson(null,serializationMode) : null, "taxAmount" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._totalAmount ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) this._totalAmount.ToJson(null,serializationMode) : null, "totalAmount" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._dueDate ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._dueDate?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "dueDate" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._invoiceDate ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._invoiceDate?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "invoiceDate" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._status)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._status.ToString()) : null, "status" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._invoicePeriodStartDate ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._invoicePeriodStartDate?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "invoicePeriodStartDate" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._invoicePeriodEndDate ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._invoicePeriodEndDate?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "invoicePeriodEndDate" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._invoiceType)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._invoiceType.ToString()) : null, "invoiceType" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._isMonthlyInvoice ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonBoolean((bool)this._isMonthlyInvoice) : null, "isMonthlyInvoice" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._billingProfileId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._billingProfileId.ToString()) : null, "billingProfileId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._billingProfileDisplayName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._billingProfileDisplayName.ToString()) : null, "billingProfileDisplayName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._purchaseOrderNumber)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._purchaseOrderNumber.ToString()) : null, "purchaseOrderNumber" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                if (null != this._document)
                {
                    var __w = new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.XNodeArray();
                    foreach( var __x in this._document )
                    {
                        AddIf(__x?.ToJson(null, serializationMode) ,__w.Add);
                    }
                    container.Add("documents",__w);
                }
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                if (null != this._payment)
                {
                    var __r = new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.XNodeArray();
                    foreach( var __s in this._payment )
                    {
                        AddIf(__s?.ToJson(null, serializationMode) ,__r.Add);
                    }
                    container.Add("payments",__r);
                }
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._rebillDetail ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) this._rebillDetail.ToJson(null,serializationMode) : null, "rebillDetails" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._documentType)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._documentType.ToString()) : null, "documentType" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._billedDocumentId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._billedDocumentId.ToString()) : null, "billedDocumentId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._creditForDocumentId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._creditForDocumentId.ToString()) : null, "creditForDocumentId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._subscriptionId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._subscriptionId.ToString()) : null, "subscriptionId" ,container.Add );
            }
            AfterToJson(ref container);
            return container;
        }
    }
}