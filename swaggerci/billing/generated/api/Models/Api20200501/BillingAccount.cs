// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Extensions;

    /// <summary>A billing account.</summary>
    public partial class BillingAccount :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccount,
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.Resource();

        /// <summary>The current status of the billing account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.AccountStatus? AccountStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).AccountStatus; }

        /// <summary>The type of customer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.AccountType? AccountType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).AccountType; }

        /// <summary>The type of agreement.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.AgreementType? AgreementType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).AgreementType; }

        /// <summary>
        /// Indicates whether there are more billing profiles than the ones listed in this collection. The collection lists a maximum
        /// of 50 billing profiles. To get all billing profiles, use the list billing profiles API.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public bool? BillingProfileHasMoreResult { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).BillingProfileHasMoreResult; }

        /// <summary>The billing profiles associated with the billing account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingProfile[] BillingProfileValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).BillingProfileValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).BillingProfileValue = value ?? null /* arrayOf */; }

        /// <summary>The departments associated to the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IDepartment[] Department { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).Department; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).Department = value ?? null /* arrayOf */; }

        /// <summary>The billing account name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string DisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).DisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).DisplayName = value ?? null; }

        /// <summary>The accounts associated to the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IEnrollmentAccount[] EnrollmentAccount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).EnrollmentAccount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).EnrollmentAccount = value ?? null /* arrayOf */; }

        /// <summary>The billing cycle for the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string EnrollmentDetailBillingCycle { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).EnrollmentDetailBillingCycle; }

        /// <summary>The channel type of the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string EnrollmentDetailChannel { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).EnrollmentDetailChannel; }

        /// <summary>The country code of the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string EnrollmentDetailCountryCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).EnrollmentDetailCountryCode; }

        /// <summary>The billing currency for the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string EnrollmentDetailCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).EnrollmentDetailCurrency; }

        /// <summary>The end date of the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public global::System.DateTime? EnrollmentDetailEndDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).EnrollmentDetailEndDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).EnrollmentDetailEndDate = value ?? default(global::System.DateTime); }

        /// <summary>The language for the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string EnrollmentDetailLanguage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).EnrollmentDetailLanguage; }

        /// <summary>The start date of the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public global::System.DateTime? EnrollmentDetailStartDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).EnrollmentDetailStartDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).EnrollmentDetailStartDate = value ?? default(global::System.DateTime); }

        /// <summary>The current status of the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string EnrollmentDetailStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).EnrollmentDetailStatus; }

        /// <summary>Indicates whether user has read access to the billing account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public bool? HasReadAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).HasReadAccess; }

        /// <summary>Resource Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResourceInternal)__resource).Id; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResourceInternal)__resource).Type = value; }

        /// <summary>Internal Acessors for AccountStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.AccountStatus? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountInternal.AccountStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).AccountStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).AccountStatus = value; }

        /// <summary>Internal Acessors for AccountType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.AccountType? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountInternal.AccountType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).AccountType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).AccountType = value; }

        /// <summary>Internal Acessors for AgreementType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.AgreementType? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountInternal.AgreementType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).AgreementType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).AgreementType = value; }

        /// <summary>Internal Acessors for BillingProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingProfilesOnExpand Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountInternal.BillingProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).BillingProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).BillingProfile = value; }

        /// <summary>Internal Acessors for BillingProfileHasMoreResult</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountInternal.BillingProfileHasMoreResult { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).BillingProfileHasMoreResult; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).BillingProfileHasMoreResult = value; }

        /// <summary>Internal Acessors for EnrollmentDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IEnrollment Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountInternal.EnrollmentDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).EnrollmentDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).EnrollmentDetail = value; }

        /// <summary>Internal Acessors for EnrollmentDetailBillingCycle</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountInternal.EnrollmentDetailBillingCycle { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).EnrollmentDetailBillingCycle; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).EnrollmentDetailBillingCycle = value; }

        /// <summary>Internal Acessors for EnrollmentDetailChannel</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountInternal.EnrollmentDetailChannel { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).EnrollmentDetailChannel; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).EnrollmentDetailChannel = value; }

        /// <summary>Internal Acessors for EnrollmentDetailCountryCode</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountInternal.EnrollmentDetailCountryCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).EnrollmentDetailCountryCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).EnrollmentDetailCountryCode = value; }

        /// <summary>Internal Acessors for EnrollmentDetailCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountInternal.EnrollmentDetailCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).EnrollmentDetailCurrency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).EnrollmentDetailCurrency = value; }

        /// <summary>Internal Acessors for EnrollmentDetailLanguage</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountInternal.EnrollmentDetailLanguage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).EnrollmentDetailLanguage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).EnrollmentDetailLanguage = value; }

        /// <summary>Internal Acessors for EnrollmentDetailPolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IEnrollmentPolicies Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountInternal.EnrollmentDetailPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).EnrollmentDetailPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).EnrollmentDetailPolicy = value; }

        /// <summary>Internal Acessors for EnrollmentDetailStatus</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountInternal.EnrollmentDetailStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).EnrollmentDetailStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).EnrollmentDetailStatus = value; }

        /// <summary>Internal Acessors for HasReadAccess</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountInternal.HasReadAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).HasReadAccess; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).HasReadAccess = value; }

        /// <summary>Internal Acessors for PolicyAccountOwnerViewCharge</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountInternal.PolicyAccountOwnerViewCharge { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).PolicyAccountOwnerViewCharge; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).PolicyAccountOwnerViewCharge = value; }

        /// <summary>Internal Acessors for PolicyDepartmentAdminViewCharge</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountInternal.PolicyDepartmentAdminViewCharge { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).PolicyDepartmentAdminViewCharge; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).PolicyDepartmentAdminViewCharge = value; }

        /// <summary>Internal Acessors for PolicyMarketplaceEnabled</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountInternal.PolicyMarketplaceEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).PolicyMarketplaceEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).PolicyMarketplaceEnabled = value; }

        /// <summary>Internal Acessors for PolicyReservedInstancesEnabled</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountInternal.PolicyReservedInstancesEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).PolicyReservedInstancesEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).PolicyReservedInstancesEnabled = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountProperties Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.BillingAccountProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for SoldTo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAddressDetails Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountInternal.SoldTo { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).SoldTo; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).SoldTo = value; }

        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResourceInternal)__resource).Name; }

        /// <summary>Notification email address, only for legacy accounts</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string NotificationEmailAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).NotificationEmailAddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).NotificationEmailAddress = value ?? null; }

        /// <summary>The policy that controls whether Account Owners can view charges.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public bool? PolicyAccountOwnerViewCharge { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).PolicyAccountOwnerViewCharge; }

        /// <summary>The policy that controls whether Department Administrators can view charges.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public bool? PolicyDepartmentAdminViewCharge { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).PolicyDepartmentAdminViewCharge; }

        /// <summary>
        /// The policy that controls whether Azure marketplace purchases are allowed in the enrollment.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public bool? PolicyMarketplaceEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).PolicyMarketplaceEnabled; }

        /// <summary>
        /// The policy that controls whether Azure reservation purchases are allowed in the enrollment.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public bool? PolicyReservedInstancesEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).PolicyReservedInstancesEnabled; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountProperties _property;

        /// <summary>The properties of the billing account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.BillingAccountProperties()); set => this._property = value; }

        /// <summary>Address line 1.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SoldToAddressLine1 { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).SoldToAddressLine1; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).SoldToAddressLine1 = value ?? null; }

        /// <summary>Address line 2.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SoldToAddressLine2 { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).SoldToAddressLine2; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).SoldToAddressLine2 = value ?? null; }

        /// <summary>Address line 3.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SoldToAddressLine3 { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).SoldToAddressLine3; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).SoldToAddressLine3 = value ?? null; }

        /// <summary>Address city.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SoldToCity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).SoldToCity; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).SoldToCity = value ?? null; }

        /// <summary>Company name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SoldToCompanyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).SoldToCompanyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).SoldToCompanyName = value ?? null; }

        /// <summary>Country code uses ISO2, 2-digit format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SoldToCountry { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).SoldToCountry; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).SoldToCountry = value ?? null; }

        /// <summary>Address district.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SoldToDistrict { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).SoldToDistrict; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).SoldToDistrict = value ?? null; }

        /// <summary>Email address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SoldToEmail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).SoldToEmail; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).SoldToEmail = value ?? null; }

        /// <summary>First name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SoldToFirstName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).SoldToFirstName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).SoldToFirstName = value ?? null; }

        /// <summary>Last name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SoldToLastName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).SoldToLastName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).SoldToLastName = value ?? null; }

        /// <summary>Middle name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SoldToMiddleName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).SoldToMiddleName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).SoldToMiddleName = value ?? null; }

        /// <summary>Phone number.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SoldToPhoneNumber { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).SoldToPhoneNumber; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).SoldToPhoneNumber = value ?? null; }

        /// <summary>Postal code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SoldToPostalCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).SoldToPostalCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).SoldToPostalCode = value ?? null; }

        /// <summary>Address region.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SoldToRegion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).SoldToRegion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountPropertiesInternal)Property).SoldToRegion = value ?? null; }

        /// <summary>Resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResourceInternal)__resource).Type; }

        /// <summary>Creates an new <see cref="BillingAccount" /> instance.</summary>
        public BillingAccount()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// A billing account.
    public partial interface IBillingAccount :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResource
    {
        /// <summary>The current status of the billing account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The current status of the billing account.",
        SerializedName = @"accountStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.AccountStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.AccountStatus? AccountStatus { get;  }
        /// <summary>The type of customer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The type of customer.",
        SerializedName = @"accountType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.AccountType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.AccountType? AccountType { get;  }
        /// <summary>The type of agreement.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The type of agreement.",
        SerializedName = @"agreementType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.AgreementType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.AgreementType? AgreementType { get;  }
        /// <summary>
        /// Indicates whether there are more billing profiles than the ones listed in this collection. The collection lists a maximum
        /// of 50 billing profiles. To get all billing profiles, use the list billing profiles API.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Indicates whether there are more billing profiles than the ones listed in this collection. The collection lists a maximum of 50 billing profiles. To get all billing profiles, use the list billing profiles API.",
        SerializedName = @"hasMoreResults",
        PossibleTypes = new [] { typeof(bool) })]
        bool? BillingProfileHasMoreResult { get;  }
        /// <summary>The billing profiles associated with the billing account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The billing profiles associated with the billing account.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingProfile) })]
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingProfile[] BillingProfileValue { get; set; }
        /// <summary>The departments associated to the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The departments associated to the enrollment.",
        SerializedName = @"departments",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IDepartment) })]
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IDepartment[] Department { get; set; }
        /// <summary>The billing account name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The billing account name.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>The accounts associated to the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The accounts associated to the enrollment.",
        SerializedName = @"enrollmentAccounts",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IEnrollmentAccount) })]
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IEnrollmentAccount[] EnrollmentAccount { get; set; }
        /// <summary>The billing cycle for the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The billing cycle for the enrollment.",
        SerializedName = @"billingCycle",
        PossibleTypes = new [] { typeof(string) })]
        string EnrollmentDetailBillingCycle { get;  }
        /// <summary>The channel type of the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The channel type of the enrollment.",
        SerializedName = @"channel",
        PossibleTypes = new [] { typeof(string) })]
        string EnrollmentDetailChannel { get;  }
        /// <summary>The country code of the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The country code of the enrollment.",
        SerializedName = @"countryCode",
        PossibleTypes = new [] { typeof(string) })]
        string EnrollmentDetailCountryCode { get;  }
        /// <summary>The billing currency for the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The billing currency for the enrollment.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string EnrollmentDetailCurrency { get;  }
        /// <summary>The end date of the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The end date of the enrollment.",
        SerializedName = @"endDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? EnrollmentDetailEndDate { get; set; }
        /// <summary>The language for the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The language for the enrollment.",
        SerializedName = @"language",
        PossibleTypes = new [] { typeof(string) })]
        string EnrollmentDetailLanguage { get;  }
        /// <summary>The start date of the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The start date of the enrollment.",
        SerializedName = @"startDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? EnrollmentDetailStartDate { get; set; }
        /// <summary>The current status of the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The current status of the enrollment.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(string) })]
        string EnrollmentDetailStatus { get;  }
        /// <summary>Indicates whether user has read access to the billing account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Indicates whether user has read access to the billing account.",
        SerializedName = @"hasReadAccess",
        PossibleTypes = new [] { typeof(bool) })]
        bool? HasReadAccess { get;  }
        /// <summary>Notification email address, only for legacy accounts</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Notification email address, only for legacy accounts",
        SerializedName = @"notificationEmailAddress",
        PossibleTypes = new [] { typeof(string) })]
        string NotificationEmailAddress { get; set; }
        /// <summary>The policy that controls whether Account Owners can view charges.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The policy that controls whether Account Owners can view charges.",
        SerializedName = @"accountOwnerViewCharges",
        PossibleTypes = new [] { typeof(bool) })]
        bool? PolicyAccountOwnerViewCharge { get;  }
        /// <summary>The policy that controls whether Department Administrators can view charges.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The policy that controls whether Department Administrators can view charges.",
        SerializedName = @"departmentAdminViewCharges",
        PossibleTypes = new [] { typeof(bool) })]
        bool? PolicyDepartmentAdminViewCharge { get;  }
        /// <summary>
        /// The policy that controls whether Azure marketplace purchases are allowed in the enrollment.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The policy that controls whether Azure marketplace purchases are allowed in the enrollment.",
        SerializedName = @"marketplaceEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? PolicyMarketplaceEnabled { get;  }
        /// <summary>
        /// The policy that controls whether Azure reservation purchases are allowed in the enrollment.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The policy that controls whether Azure reservation purchases are allowed in the enrollment.",
        SerializedName = @"reservedInstancesEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? PolicyReservedInstancesEnabled { get;  }
        /// <summary>Address line 1.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Address line 1.",
        SerializedName = @"addressLine1",
        PossibleTypes = new [] { typeof(string) })]
        string SoldToAddressLine1 { get; set; }
        /// <summary>Address line 2.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Address line 2.",
        SerializedName = @"addressLine2",
        PossibleTypes = new [] { typeof(string) })]
        string SoldToAddressLine2 { get; set; }
        /// <summary>Address line 3.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Address line 3.",
        SerializedName = @"addressLine3",
        PossibleTypes = new [] { typeof(string) })]
        string SoldToAddressLine3 { get; set; }
        /// <summary>Address city.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Address city.",
        SerializedName = @"city",
        PossibleTypes = new [] { typeof(string) })]
        string SoldToCity { get; set; }
        /// <summary>Company name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Company name.",
        SerializedName = @"companyName",
        PossibleTypes = new [] { typeof(string) })]
        string SoldToCompanyName { get; set; }
        /// <summary>Country code uses ISO2, 2-digit format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Country code uses ISO2, 2-digit format.",
        SerializedName = @"country",
        PossibleTypes = new [] { typeof(string) })]
        string SoldToCountry { get; set; }
        /// <summary>Address district.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Address district.",
        SerializedName = @"district",
        PossibleTypes = new [] { typeof(string) })]
        string SoldToDistrict { get; set; }
        /// <summary>Email address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Email address.",
        SerializedName = @"email",
        PossibleTypes = new [] { typeof(string) })]
        string SoldToEmail { get; set; }
        /// <summary>First name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"First name.",
        SerializedName = @"firstName",
        PossibleTypes = new [] { typeof(string) })]
        string SoldToFirstName { get; set; }
        /// <summary>Last name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Last name.",
        SerializedName = @"lastName",
        PossibleTypes = new [] { typeof(string) })]
        string SoldToLastName { get; set; }
        /// <summary>Middle name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Middle name.",
        SerializedName = @"middleName",
        PossibleTypes = new [] { typeof(string) })]
        string SoldToMiddleName { get; set; }
        /// <summary>Phone number.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Phone number.",
        SerializedName = @"phoneNumber",
        PossibleTypes = new [] { typeof(string) })]
        string SoldToPhoneNumber { get; set; }
        /// <summary>Postal code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Postal code.",
        SerializedName = @"postalCode",
        PossibleTypes = new [] { typeof(string) })]
        string SoldToPostalCode { get; set; }
        /// <summary>Address region.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Address region.",
        SerializedName = @"region",
        PossibleTypes = new [] { typeof(string) })]
        string SoldToRegion { get; set; }

    }
    /// A billing account.
    internal partial interface IBillingAccountInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResourceInternal
    {
        /// <summary>The current status of the billing account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.AccountStatus? AccountStatus { get; set; }
        /// <summary>The type of customer.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.AccountType? AccountType { get; set; }
        /// <summary>The type of agreement.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.AgreementType? AgreementType { get; set; }
        /// <summary>
        /// The billing profiles associated with the billing account. By default this is not populated, unless it's specified in $expand.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingProfilesOnExpand BillingProfile { get; set; }
        /// <summary>
        /// Indicates whether there are more billing profiles than the ones listed in this collection. The collection lists a maximum
        /// of 50 billing profiles. To get all billing profiles, use the list billing profiles API.
        /// </summary>
        bool? BillingProfileHasMoreResult { get; set; }
        /// <summary>The billing profiles associated with the billing account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingProfile[] BillingProfileValue { get; set; }
        /// <summary>The departments associated to the enrollment.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IDepartment[] Department { get; set; }
        /// <summary>The billing account name.</summary>
        string DisplayName { get; set; }
        /// <summary>The accounts associated to the enrollment.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IEnrollmentAccount[] EnrollmentAccount { get; set; }
        /// <summary>
        /// The details about the associated legacy enrollment. By default this is not populated, unless it's specified in $expand.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IEnrollment EnrollmentDetail { get; set; }
        /// <summary>The billing cycle for the enrollment.</summary>
        string EnrollmentDetailBillingCycle { get; set; }
        /// <summary>The channel type of the enrollment.</summary>
        string EnrollmentDetailChannel { get; set; }
        /// <summary>The country code of the enrollment.</summary>
        string EnrollmentDetailCountryCode { get; set; }
        /// <summary>The billing currency for the enrollment.</summary>
        string EnrollmentDetailCurrency { get; set; }
        /// <summary>The end date of the enrollment.</summary>
        global::System.DateTime? EnrollmentDetailEndDate { get; set; }
        /// <summary>The language for the enrollment.</summary>
        string EnrollmentDetailLanguage { get; set; }
        /// <summary>The policies for Enterprise Agreement enrollments.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IEnrollmentPolicies EnrollmentDetailPolicy { get; set; }
        /// <summary>The start date of the enrollment.</summary>
        global::System.DateTime? EnrollmentDetailStartDate { get; set; }
        /// <summary>The current status of the enrollment.</summary>
        string EnrollmentDetailStatus { get; set; }
        /// <summary>Indicates whether user has read access to the billing account.</summary>
        bool? HasReadAccess { get; set; }
        /// <summary>Notification email address, only for legacy accounts</summary>
        string NotificationEmailAddress { get; set; }
        /// <summary>The policy that controls whether Account Owners can view charges.</summary>
        bool? PolicyAccountOwnerViewCharge { get; set; }
        /// <summary>The policy that controls whether Department Administrators can view charges.</summary>
        bool? PolicyDepartmentAdminViewCharge { get; set; }
        /// <summary>
        /// The policy that controls whether Azure marketplace purchases are allowed in the enrollment.
        /// </summary>
        bool? PolicyMarketplaceEnabled { get; set; }
        /// <summary>
        /// The policy that controls whether Azure reservation purchases are allowed in the enrollment.
        /// </summary>
        bool? PolicyReservedInstancesEnabled { get; set; }
        /// <summary>The properties of the billing account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingAccountProperties Property { get; set; }
        /// <summary>
        /// The address of the individual or organization that is responsible for the billing account.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAddressDetails SoldTo { get; set; }
        /// <summary>Address line 1.</summary>
        string SoldToAddressLine1 { get; set; }
        /// <summary>Address line 2.</summary>
        string SoldToAddressLine2 { get; set; }
        /// <summary>Address line 3.</summary>
        string SoldToAddressLine3 { get; set; }
        /// <summary>Address city.</summary>
        string SoldToCity { get; set; }
        /// <summary>Company name.</summary>
        string SoldToCompanyName { get; set; }
        /// <summary>Country code uses ISO2, 2-digit format.</summary>
        string SoldToCountry { get; set; }
        /// <summary>Address district.</summary>
        string SoldToDistrict { get; set; }
        /// <summary>Email address.</summary>
        string SoldToEmail { get; set; }
        /// <summary>First name.</summary>
        string SoldToFirstName { get; set; }
        /// <summary>Last name.</summary>
        string SoldToLastName { get; set; }
        /// <summary>Middle name.</summary>
        string SoldToMiddleName { get; set; }
        /// <summary>Phone number.</summary>
        string SoldToPhoneNumber { get; set; }
        /// <summary>Postal code.</summary>
        string SoldToPostalCode { get; set; }
        /// <summary>Address region.</summary>
        string SoldToRegion { get; set; }

    }
}