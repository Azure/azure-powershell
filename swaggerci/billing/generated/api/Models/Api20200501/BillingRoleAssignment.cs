// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Extensions;

    /// <summary>The role assignment</summary>
    public partial class BillingRoleAssignment :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingRoleAssignment,
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingRoleAssignmentInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.Resource();

        /// <summary>The principal Id of the user who created the role assignment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string CreatedByPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingRoleAssignmentPropertiesInternal)Property).CreatedByPrincipalId; }

        /// <summary>The tenant Id of the user who created the role assignment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string CreatedByPrincipalTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingRoleAssignmentPropertiesInternal)Property).CreatedByPrincipalTenantId; }

        /// <summary>The email address of the user who created the role assignment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string CreatedByUserEmailAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingRoleAssignmentPropertiesInternal)Property).CreatedByUserEmailAddress; }

        /// <summary>The date the role assignment was created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string CreatedOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingRoleAssignmentPropertiesInternal)Property).CreatedOn; }

        /// <summary>Resource Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResourceInternal)__resource).Id; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResourceInternal)__resource).Type = value; }

        /// <summary>Internal Acessors for CreatedByPrincipalId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingRoleAssignmentInternal.CreatedByPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingRoleAssignmentPropertiesInternal)Property).CreatedByPrincipalId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingRoleAssignmentPropertiesInternal)Property).CreatedByPrincipalId = value; }

        /// <summary>Internal Acessors for CreatedByPrincipalTenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingRoleAssignmentInternal.CreatedByPrincipalTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingRoleAssignmentPropertiesInternal)Property).CreatedByPrincipalTenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingRoleAssignmentPropertiesInternal)Property).CreatedByPrincipalTenantId = value; }

        /// <summary>Internal Acessors for CreatedByUserEmailAddress</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingRoleAssignmentInternal.CreatedByUserEmailAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingRoleAssignmentPropertiesInternal)Property).CreatedByUserEmailAddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingRoleAssignmentPropertiesInternal)Property).CreatedByUserEmailAddress = value; }

        /// <summary>Internal Acessors for CreatedOn</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingRoleAssignmentInternal.CreatedOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingRoleAssignmentPropertiesInternal)Property).CreatedOn; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingRoleAssignmentPropertiesInternal)Property).CreatedOn = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingRoleAssignmentProperties Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingRoleAssignmentInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.BillingRoleAssignmentProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for Scope</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingRoleAssignmentInternal.Scope { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingRoleAssignmentPropertiesInternal)Property).Scope; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingRoleAssignmentPropertiesInternal)Property).Scope = value; }

        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResourceInternal)__resource).Name; }

        /// <summary>The principal id of the user to whom the role was assigned.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string PrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingRoleAssignmentPropertiesInternal)Property).PrincipalId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingRoleAssignmentPropertiesInternal)Property).PrincipalId = value ?? null; }

        /// <summary>The principal tenant id of the user to whom the role was assigned.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string PrincipalTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingRoleAssignmentPropertiesInternal)Property).PrincipalTenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingRoleAssignmentPropertiesInternal)Property).PrincipalTenantId = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingRoleAssignmentProperties _property;

        /// <summary>The properties of the role assignment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingRoleAssignmentProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.BillingRoleAssignmentProperties()); set => this._property = value; }

        /// <summary>The ID of the role definition.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string RoleDefinitionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingRoleAssignmentPropertiesInternal)Property).RoleDefinitionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingRoleAssignmentPropertiesInternal)Property).RoleDefinitionId = value ?? null; }

        /// <summary>The scope at which the role was assigned.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string Scope { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingRoleAssignmentPropertiesInternal)Property).Scope; }

        /// <summary>Resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResourceInternal)__resource).Type; }

        /// <summary>The authentication type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string UserAuthenticationType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingRoleAssignmentPropertiesInternal)Property).UserAuthenticationType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingRoleAssignmentPropertiesInternal)Property).UserAuthenticationType = value ?? null; }

        /// <summary>The email address of the user.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string UserEmailAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingRoleAssignmentPropertiesInternal)Property).UserEmailAddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingRoleAssignmentPropertiesInternal)Property).UserEmailAddress = value ?? null; }

        /// <summary>Creates an new <see cref="BillingRoleAssignment" /> instance.</summary>
        public BillingRoleAssignment()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// The role assignment
    public partial interface IBillingRoleAssignment :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResource
    {
        /// <summary>The principal Id of the user who created the role assignment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The principal Id of the user who created the role assignment.",
        SerializedName = @"createdByPrincipalId",
        PossibleTypes = new [] { typeof(string) })]
        string CreatedByPrincipalId { get;  }
        /// <summary>The tenant Id of the user who created the role assignment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The tenant Id of the user who created the role assignment.",
        SerializedName = @"createdByPrincipalTenantId",
        PossibleTypes = new [] { typeof(string) })]
        string CreatedByPrincipalTenantId { get;  }
        /// <summary>The email address of the user who created the role assignment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The email address of the user who created the role assignment.",
        SerializedName = @"createdByUserEmailAddress",
        PossibleTypes = new [] { typeof(string) })]
        string CreatedByUserEmailAddress { get;  }
        /// <summary>The date the role assignment was created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The date the role assignment was created.",
        SerializedName = @"createdOn",
        PossibleTypes = new [] { typeof(string) })]
        string CreatedOn { get;  }
        /// <summary>The principal id of the user to whom the role was assigned.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The principal id of the user to whom the role was assigned.",
        SerializedName = @"principalId",
        PossibleTypes = new [] { typeof(string) })]
        string PrincipalId { get; set; }
        /// <summary>The principal tenant id of the user to whom the role was assigned.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The principal tenant id of the user to whom the role was assigned.",
        SerializedName = @"principalTenantId",
        PossibleTypes = new [] { typeof(string) })]
        string PrincipalTenantId { get; set; }
        /// <summary>The ID of the role definition.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ID of the role definition.",
        SerializedName = @"roleDefinitionId",
        PossibleTypes = new [] { typeof(string) })]
        string RoleDefinitionId { get; set; }
        /// <summary>The scope at which the role was assigned.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The scope at which the role was assigned.",
        SerializedName = @"scope",
        PossibleTypes = new [] { typeof(string) })]
        string Scope { get;  }
        /// <summary>The authentication type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The authentication type.",
        SerializedName = @"userAuthenticationType",
        PossibleTypes = new [] { typeof(string) })]
        string UserAuthenticationType { get; set; }
        /// <summary>The email address of the user.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The email address of the user.",
        SerializedName = @"userEmailAddress",
        PossibleTypes = new [] { typeof(string) })]
        string UserEmailAddress { get; set; }

    }
    /// The role assignment
    internal partial interface IBillingRoleAssignmentInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20180301Preview.IResourceInternal
    {
        /// <summary>The principal Id of the user who created the role assignment.</summary>
        string CreatedByPrincipalId { get; set; }
        /// <summary>The tenant Id of the user who created the role assignment.</summary>
        string CreatedByPrincipalTenantId { get; set; }
        /// <summary>The email address of the user who created the role assignment.</summary>
        string CreatedByUserEmailAddress { get; set; }
        /// <summary>The date the role assignment was created.</summary>
        string CreatedOn { get; set; }
        /// <summary>The principal id of the user to whom the role was assigned.</summary>
        string PrincipalId { get; set; }
        /// <summary>The principal tenant id of the user to whom the role was assigned.</summary>
        string PrincipalTenantId { get; set; }
        /// <summary>The properties of the role assignment.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IBillingRoleAssignmentProperties Property { get; set; }
        /// <summary>The ID of the role definition.</summary>
        string RoleDefinitionId { get; set; }
        /// <summary>The scope at which the role was assigned.</summary>
        string Scope { get; set; }
        /// <summary>The authentication type.</summary>
        string UserAuthenticationType { get; set; }
        /// <summary>The email address of the user.</summary>
        string UserEmailAddress { get; set; }

    }
}