// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Extensions;

    /// <summary>The properties of a transaction.</summary>
    public partial class TransactionProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AzureCreditApplied" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmount _azureCreditApplied;

        /// <summary>The amount of any Azure credits automatically applied to this transaction.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmount AzureCreditApplied { get => (this._azureCreditApplied = this._azureCreditApplied ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.Amount()); }

        /// <summary>The currency for the amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string AzureCreditAppliedCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmountInternal)AzureCreditApplied).Currency; }

        /// <summary>Amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public float? AzureCreditAppliedValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmountInternal)AzureCreditApplied).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmountInternal)AzureCreditApplied).Value = value ?? default(float); }

        /// <summary>Backing field for <see cref="AzurePlan" /> property.</summary>
        private string _azurePlan;

        /// <summary>The type of azure plan of the subscription that was used for the transaction.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string AzurePlan { get => this._azurePlan; }

        /// <summary>Backing field for <see cref="BillingCurrency" /> property.</summary>
        private string _billingCurrency;

        /// <summary>The ISO 4217 code for the currency in which this transaction is billed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string BillingCurrency { get => this._billingCurrency; }

        /// <summary>Backing field for <see cref="BillingProfileDisplayName" /> property.</summary>
        private string _billingProfileDisplayName;

        /// <summary>The name of the billing profile which will be billed for the transaction.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string BillingProfileDisplayName { get => this._billingProfileDisplayName; }

        /// <summary>Backing field for <see cref="BillingProfileId" /> property.</summary>
        private string _billingProfileId;

        /// <summary>The ID of the billing profile which will be billed for the transaction.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string BillingProfileId { get => this._billingProfileId; }

        /// <summary>Backing field for <see cref="CustomerDisplayName" /> property.</summary>
        private string _customerDisplayName;

        /// <summary>
        /// The name of the customer for which the transaction took place. The field is applicable only for Microsoft Partner Agreement
        /// billing account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string CustomerDisplayName { get => this._customerDisplayName; }

        /// <summary>Backing field for <see cref="CustomerId" /> property.</summary>
        private string _customerId;

        /// <summary>
        /// The ID of the customer for which the transaction took place. The field is applicable only for Microsoft Partner Agreement
        /// billing account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string CustomerId { get => this._customerId; }

        /// <summary>Backing field for <see cref="Date" /> property.</summary>
        private global::System.DateTime? _date;

        /// <summary>The date of transaction.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public global::System.DateTime? Date { get => this._date; }

        /// <summary>Backing field for <see cref="Discount" /> property.</summary>
        private float? _discount;

        /// <summary>The percentage discount, if any, applied to this transaction.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public float? Discount { get => this._discount; }

        /// <summary>Backing field for <see cref="EffectivePrice" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmount _effectivePrice;

        /// <summary>The price of the product after applying any discounts.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmount EffectivePrice { get => (this._effectivePrice = this._effectivePrice ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.Amount()); }

        /// <summary>The currency for the amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string EffectivePriceCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmountInternal)EffectivePrice).Currency; }

        /// <summary>Amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public float? EffectivePriceValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmountInternal)EffectivePrice).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmountInternal)EffectivePrice).Value = value ?? default(float); }

        /// <summary>Backing field for <see cref="ExchangeRate" /> property.</summary>
        private float? _exchangeRate;

        /// <summary>
        /// The exchange rate used to convert charged amount to billing currency, if applicable.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public float? ExchangeRate { get => this._exchangeRate; }

        /// <summary>Backing field for <see cref="Invoice" /> property.</summary>
        private string _invoice;

        /// <summary>
        /// Invoice on which the transaction was billed or 'pending' if the transaction is not billed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string Invoice { get => this._invoice; }

        /// <summary>Backing field for <see cref="InvoiceId" /> property.</summary>
        private string _invoiceId;

        /// <summary>
        /// The ID of the invoice on which the transaction was billed. This field is only applicable for transactions which are billed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string InvoiceId { get => this._invoiceId; }

        /// <summary>Backing field for <see cref="InvoiceSectionDisplayName" /> property.</summary>
        private string _invoiceSectionDisplayName;

        /// <summary>The name of the invoice section which will be billed for the transaction.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string InvoiceSectionDisplayName { get => this._invoiceSectionDisplayName; }

        /// <summary>Backing field for <see cref="InvoiceSectionId" /> property.</summary>
        private string _invoiceSectionId;

        /// <summary>The ID of the invoice section which will be billed for the transaction.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string InvoiceSectionId { get => this._invoiceSectionId; }

        /// <summary>Backing field for <see cref="Kind" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.TransactionTypeKind? _kind;

        /// <summary>The kind of transaction. Options are all or reservation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.TransactionTypeKind? Kind { get => this._kind; set => this._kind = value; }

        /// <summary>Backing field for <see cref="MarketPrice" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmount _marketPrice;

        /// <summary>The retail price of the product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmount MarketPrice { get => (this._marketPrice = this._marketPrice ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.Amount()); }

        /// <summary>The currency for the amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string MarketPriceCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmountInternal)MarketPrice).Currency; }

        /// <summary>Amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public float? MarketPriceValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmountInternal)MarketPrice).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmountInternal)MarketPrice).Value = value ?? default(float); }

        /// <summary>Internal Acessors for AzureCreditApplied</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmount Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionPropertiesInternal.AzureCreditApplied { get => (this._azureCreditApplied = this._azureCreditApplied ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.Amount()); set { {_azureCreditApplied = value;} } }

        /// <summary>Internal Acessors for AzureCreditAppliedCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionPropertiesInternal.AzureCreditAppliedCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmountInternal)AzureCreditApplied).Currency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmountInternal)AzureCreditApplied).Currency = value; }

        /// <summary>Internal Acessors for AzurePlan</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionPropertiesInternal.AzurePlan { get => this._azurePlan; set { {_azurePlan = value;} } }

        /// <summary>Internal Acessors for BillingCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionPropertiesInternal.BillingCurrency { get => this._billingCurrency; set { {_billingCurrency = value;} } }

        /// <summary>Internal Acessors for BillingProfileDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionPropertiesInternal.BillingProfileDisplayName { get => this._billingProfileDisplayName; set { {_billingProfileDisplayName = value;} } }

        /// <summary>Internal Acessors for BillingProfileId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionPropertiesInternal.BillingProfileId { get => this._billingProfileId; set { {_billingProfileId = value;} } }

        /// <summary>Internal Acessors for CustomerDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionPropertiesInternal.CustomerDisplayName { get => this._customerDisplayName; set { {_customerDisplayName = value;} } }

        /// <summary>Internal Acessors for CustomerId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionPropertiesInternal.CustomerId { get => this._customerId; set { {_customerId = value;} } }

        /// <summary>Internal Acessors for Date</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionPropertiesInternal.Date { get => this._date; set { {_date = value;} } }

        /// <summary>Internal Acessors for Discount</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionPropertiesInternal.Discount { get => this._discount; set { {_discount = value;} } }

        /// <summary>Internal Acessors for EffectivePrice</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmount Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionPropertiesInternal.EffectivePrice { get => (this._effectivePrice = this._effectivePrice ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.Amount()); set { {_effectivePrice = value;} } }

        /// <summary>Internal Acessors for EffectivePriceCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionPropertiesInternal.EffectivePriceCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmountInternal)EffectivePrice).Currency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmountInternal)EffectivePrice).Currency = value; }

        /// <summary>Internal Acessors for ExchangeRate</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionPropertiesInternal.ExchangeRate { get => this._exchangeRate; set { {_exchangeRate = value;} } }

        /// <summary>Internal Acessors for Invoice</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionPropertiesInternal.Invoice { get => this._invoice; set { {_invoice = value;} } }

        /// <summary>Internal Acessors for InvoiceId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionPropertiesInternal.InvoiceId { get => this._invoiceId; set { {_invoiceId = value;} } }

        /// <summary>Internal Acessors for InvoiceSectionDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionPropertiesInternal.InvoiceSectionDisplayName { get => this._invoiceSectionDisplayName; set { {_invoiceSectionDisplayName = value;} } }

        /// <summary>Internal Acessors for InvoiceSectionId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionPropertiesInternal.InvoiceSectionId { get => this._invoiceSectionId; set { {_invoiceSectionId = value;} } }

        /// <summary>Internal Acessors for MarketPrice</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmount Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionPropertiesInternal.MarketPrice { get => (this._marketPrice = this._marketPrice ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.Amount()); set { {_marketPrice = value;} } }

        /// <summary>Internal Acessors for MarketPriceCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionPropertiesInternal.MarketPriceCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmountInternal)MarketPrice).Currency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmountInternal)MarketPrice).Currency = value; }

        /// <summary>Internal Acessors for OrderId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionPropertiesInternal.OrderId { get => this._orderId; set { {_orderId = value;} } }

        /// <summary>Internal Acessors for OrderName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionPropertiesInternal.OrderName { get => this._orderName; set { {_orderName = value;} } }

        /// <summary>Internal Acessors for PricingCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionPropertiesInternal.PricingCurrency { get => this._pricingCurrency; set { {_pricingCurrency = value;} } }

        /// <summary>Internal Acessors for ProductDescription</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionPropertiesInternal.ProductDescription { get => this._productDescription; set { {_productDescription = value;} } }

        /// <summary>Internal Acessors for ProductFamily</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionPropertiesInternal.ProductFamily { get => this._productFamily; set { {_productFamily = value;} } }

        /// <summary>Internal Acessors for ProductType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionPropertiesInternal.ProductType { get => this._productType; set { {_productType = value;} } }

        /// <summary>Internal Acessors for ProductTypeId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionPropertiesInternal.ProductTypeId { get => this._productTypeId; set { {_productTypeId = value;} } }

        /// <summary>Internal Acessors for Quantity</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionPropertiesInternal.Quantity { get => this._quantity; set { {_quantity = value;} } }

        /// <summary>Internal Acessors for ServicePeriodEndDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionPropertiesInternal.ServicePeriodEndDate { get => this._servicePeriodEndDate; set { {_servicePeriodEndDate = value;} } }

        /// <summary>Internal Acessors for ServicePeriodStartDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionPropertiesInternal.ServicePeriodStartDate { get => this._servicePeriodStartDate; set { {_servicePeriodStartDate = value;} } }

        /// <summary>Internal Acessors for SubTotal</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmount Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionPropertiesInternal.SubTotal { get => (this._subTotal = this._subTotal ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.Amount()); set { {_subTotal = value;} } }

        /// <summary>Internal Acessors for SubTotalCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionPropertiesInternal.SubTotalCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmountInternal)SubTotal).Currency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmountInternal)SubTotal).Currency = value; }

        /// <summary>Internal Acessors for SubscriptionId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionPropertiesInternal.SubscriptionId { get => this._subscriptionId; set { {_subscriptionId = value;} } }

        /// <summary>Internal Acessors for SubscriptionName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionPropertiesInternal.SubscriptionName { get => this._subscriptionName; set { {_subscriptionName = value;} } }

        /// <summary>Internal Acessors for Tax</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmount Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionPropertiesInternal.Tax { get => (this._tax = this._tax ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.Amount()); set { {_tax = value;} } }

        /// <summary>Internal Acessors for TaxCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionPropertiesInternal.TaxCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmountInternal)Tax).Currency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmountInternal)Tax).Currency = value; }

        /// <summary>Internal Acessors for TransactionAmount</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmount Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionPropertiesInternal.TransactionAmount { get => (this._transactionAmount = this._transactionAmount ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.Amount()); set { {_transactionAmount = value;} } }

        /// <summary>Internal Acessors for TransactionAmountCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionPropertiesInternal.TransactionAmountCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmountInternal)TransactionAmount).Currency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmountInternal)TransactionAmount).Currency = value; }

        /// <summary>Internal Acessors for Unit</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionPropertiesInternal.Unit { get => this._unit; set { {_unit = value;} } }

        /// <summary>Internal Acessors for UnitOfMeasure</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionPropertiesInternal.UnitOfMeasure { get => this._unitOfMeasure; set { {_unitOfMeasure = value;} } }

        /// <summary>Internal Acessors for UnitType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ITransactionPropertiesInternal.UnitType { get => this._unitType; set { {_unitType = value;} } }

        /// <summary>Backing field for <see cref="OrderId" /> property.</summary>
        private string _orderId;

        /// <summary>
        /// The order ID of the reservation. The field is only applicable for transaction of kind reservation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string OrderId { get => this._orderId; }

        /// <summary>Backing field for <see cref="OrderName" /> property.</summary>
        private string _orderName;

        /// <summary>
        /// The name of the reservation order. The field is only applicable for transactions of kind reservation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string OrderName { get => this._orderName; }

        /// <summary>Backing field for <see cref="PricingCurrency" /> property.</summary>
        private string _pricingCurrency;

        /// <summary>The ISO 4217 code for the currency in which the product is priced.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string PricingCurrency { get => this._pricingCurrency; }

        /// <summary>Backing field for <see cref="ProductDescription" /> property.</summary>
        private string _productDescription;

        /// <summary>The description of the product for which the transaction took place.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string ProductDescription { get => this._productDescription; }

        /// <summary>Backing field for <see cref="ProductFamily" /> property.</summary>
        private string _productFamily;

        /// <summary>The family of the product for which the transaction took place.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string ProductFamily { get => this._productFamily; }

        /// <summary>Backing field for <see cref="ProductType" /> property.</summary>
        private string _productType;

        /// <summary>The type of the product for which the transaction took place.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string ProductType { get => this._productType; }

        /// <summary>Backing field for <see cref="ProductTypeId" /> property.</summary>
        private string _productTypeId;

        /// <summary>The ID of the product type for which the transaction took place.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string ProductTypeId { get => this._productTypeId; }

        /// <summary>Backing field for <see cref="Quantity" /> property.</summary>
        private int? _quantity;

        /// <summary>The quantity purchased in the transaction.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public int? Quantity { get => this._quantity; }

        /// <summary>Backing field for <see cref="ServicePeriodEndDate" /> property.</summary>
        private global::System.DateTime? _servicePeriodEndDate;

        /// <summary>
        /// The end date of the product term, or the end date of the month in which usage ended.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public global::System.DateTime? ServicePeriodEndDate { get => this._servicePeriodEndDate; }

        /// <summary>Backing field for <see cref="ServicePeriodStartDate" /> property.</summary>
        private global::System.DateTime? _servicePeriodStartDate;

        /// <summary>
        /// The date of the purchase of the product, or the start date of the month in which usage started.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public global::System.DateTime? ServicePeriodStartDate { get => this._servicePeriodStartDate; }

        /// <summary>Backing field for <see cref="SubTotal" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmount _subTotal;

        /// <summary>The pre-tax charged amount for the transaction.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmount SubTotal { get => (this._subTotal = this._subTotal ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.Amount()); }

        /// <summary>The currency for the amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SubTotalCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmountInternal)SubTotal).Currency; }

        /// <summary>Amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public float? SubTotalValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmountInternal)SubTotal).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmountInternal)SubTotal).Value = value ?? default(float); }

        /// <summary>Backing field for <see cref="SubscriptionId" /> property.</summary>
        private string _subscriptionId;

        /// <summary>
        /// The ID of the subscription that was used for the transaction. The field is only applicable for transaction of kind reservation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string SubscriptionId { get => this._subscriptionId; }

        /// <summary>Backing field for <see cref="SubscriptionName" /> property.</summary>
        private string _subscriptionName;

        /// <summary>
        /// The name of the subscription that was used for the transaction. The field is only applicable for transaction of kind reservation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string SubscriptionName { get => this._subscriptionName; }

        /// <summary>Backing field for <see cref="Tax" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmount _tax;

        /// <summary>The tax amount applied to the transaction.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmount Tax { get => (this._tax = this._tax ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.Amount()); }

        /// <summary>The currency for the amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string TaxCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmountInternal)Tax).Currency; }

        /// <summary>Amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public float? TaxValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmountInternal)Tax).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmountInternal)Tax).Value = value ?? default(float); }

        /// <summary>Backing field for <see cref="TransactionAmount" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmount _transactionAmount;

        /// <summary>The charge associated with the transaction.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmount TransactionAmount { get => (this._transactionAmount = this._transactionAmount ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.Amount()); }

        /// <summary>The currency for the amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string TransactionAmountCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmountInternal)TransactionAmount).Currency; }

        /// <summary>Amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public float? TransactionAmountValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmountInternal)TransactionAmount).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmountInternal)TransactionAmount).Value = value ?? default(float); }

        /// <summary>Backing field for <see cref="TransactionType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.ReservationType? _transactionType;

        /// <summary>The type of transaction.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.ReservationType? TransactionType { get => this._transactionType; set => this._transactionType = value; }

        /// <summary>Backing field for <see cref="Unit" /> property.</summary>
        private float? _unit;

        /// <summary>The number of units used for a given product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public float? Unit { get => this._unit; }

        /// <summary>Backing field for <see cref="UnitOfMeasure" /> property.</summary>
        private string _unitOfMeasure;

        /// <summary>
        /// The unit of measure used to bill for the product. For example, compute services are billed per hour.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string UnitOfMeasure { get => this._unitOfMeasure; }

        /// <summary>Backing field for <see cref="UnitType" /> property.</summary>
        private string _unitType;

        /// <summary>The description for the unit of measure for a given product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string UnitType { get => this._unitType; }

        /// <summary>Creates an new <see cref="TransactionProperties" /> instance.</summary>
        public TransactionProperties()
        {

        }
    }
    /// The properties of a transaction.
    public partial interface ITransactionProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IJsonSerializable
    {
        /// <summary>The currency for the amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The currency for the amount value.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string AzureCreditAppliedCurrency { get;  }
        /// <summary>Amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Amount value.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(float) })]
        float? AzureCreditAppliedValue { get; set; }
        /// <summary>The type of azure plan of the subscription that was used for the transaction.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The type of azure plan of the subscription that was used for the transaction.",
        SerializedName = @"azurePlan",
        PossibleTypes = new [] { typeof(string) })]
        string AzurePlan { get;  }
        /// <summary>The ISO 4217 code for the currency in which this transaction is billed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The ISO 4217 code for the currency in which this transaction is billed.",
        SerializedName = @"billingCurrency",
        PossibleTypes = new [] { typeof(string) })]
        string BillingCurrency { get;  }
        /// <summary>The name of the billing profile which will be billed for the transaction.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of the billing profile which will be billed for the transaction.",
        SerializedName = @"billingProfileDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string BillingProfileDisplayName { get;  }
        /// <summary>The ID of the billing profile which will be billed for the transaction.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The ID of the billing profile which will be billed for the transaction.",
        SerializedName = @"billingProfileId",
        PossibleTypes = new [] { typeof(string) })]
        string BillingProfileId { get;  }
        /// <summary>
        /// The name of the customer for which the transaction took place. The field is applicable only for Microsoft Partner Agreement
        /// billing account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of the customer for which the transaction took place. The field is applicable only for Microsoft Partner Agreement billing account.",
        SerializedName = @"customerDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string CustomerDisplayName { get;  }
        /// <summary>
        /// The ID of the customer for which the transaction took place. The field is applicable only for Microsoft Partner Agreement
        /// billing account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The ID of the customer for which the transaction took place. The field is applicable only for Microsoft Partner Agreement billing account.",
        SerializedName = @"customerId",
        PossibleTypes = new [] { typeof(string) })]
        string CustomerId { get;  }
        /// <summary>The date of transaction.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The date of transaction.",
        SerializedName = @"date",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? Date { get;  }
        /// <summary>The percentage discount, if any, applied to this transaction.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The percentage discount, if any, applied to this transaction.",
        SerializedName = @"discount",
        PossibleTypes = new [] { typeof(float) })]
        float? Discount { get;  }
        /// <summary>The currency for the amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The currency for the amount value.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string EffectivePriceCurrency { get;  }
        /// <summary>Amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Amount value.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(float) })]
        float? EffectivePriceValue { get; set; }
        /// <summary>
        /// The exchange rate used to convert charged amount to billing currency, if applicable.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The exchange rate used to convert charged amount to billing currency, if applicable.",
        SerializedName = @"exchangeRate",
        PossibleTypes = new [] { typeof(float) })]
        float? ExchangeRate { get;  }
        /// <summary>
        /// Invoice on which the transaction was billed or 'pending' if the transaction is not billed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Invoice on which the transaction was billed or 'pending' if the transaction is not billed.",
        SerializedName = @"invoice",
        PossibleTypes = new [] { typeof(string) })]
        string Invoice { get;  }
        /// <summary>
        /// The ID of the invoice on which the transaction was billed. This field is only applicable for transactions which are billed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The ID of the invoice on which the transaction was billed. This field is only applicable for transactions which are billed.",
        SerializedName = @"invoiceId",
        PossibleTypes = new [] { typeof(string) })]
        string InvoiceId { get;  }
        /// <summary>The name of the invoice section which will be billed for the transaction.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of the invoice section which will be billed for the transaction.",
        SerializedName = @"invoiceSectionDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string InvoiceSectionDisplayName { get;  }
        /// <summary>The ID of the invoice section which will be billed for the transaction.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The ID of the invoice section which will be billed for the transaction.",
        SerializedName = @"invoiceSectionId",
        PossibleTypes = new [] { typeof(string) })]
        string InvoiceSectionId { get;  }
        /// <summary>The kind of transaction. Options are all or reservation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The kind of transaction. Options are all or reservation.",
        SerializedName = @"kind",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.TransactionTypeKind) })]
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.TransactionTypeKind? Kind { get; set; }
        /// <summary>The currency for the amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The currency for the amount value.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string MarketPriceCurrency { get;  }
        /// <summary>Amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Amount value.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(float) })]
        float? MarketPriceValue { get; set; }
        /// <summary>
        /// The order ID of the reservation. The field is only applicable for transaction of kind reservation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The order ID of the reservation. The field is only applicable for transaction of kind reservation.",
        SerializedName = @"orderId",
        PossibleTypes = new [] { typeof(string) })]
        string OrderId { get;  }
        /// <summary>
        /// The name of the reservation order. The field is only applicable for transactions of kind reservation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of the reservation order. The field is only applicable for transactions of kind reservation.",
        SerializedName = @"orderName",
        PossibleTypes = new [] { typeof(string) })]
        string OrderName { get;  }
        /// <summary>The ISO 4217 code for the currency in which the product is priced.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The ISO 4217 code for the currency in which the product is priced.",
        SerializedName = @"pricingCurrency",
        PossibleTypes = new [] { typeof(string) })]
        string PricingCurrency { get;  }
        /// <summary>The description of the product for which the transaction took place.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The description of the product for which the transaction took place.",
        SerializedName = @"productDescription",
        PossibleTypes = new [] { typeof(string) })]
        string ProductDescription { get;  }
        /// <summary>The family of the product for which the transaction took place.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The family of the product for which the transaction took place.",
        SerializedName = @"productFamily",
        PossibleTypes = new [] { typeof(string) })]
        string ProductFamily { get;  }
        /// <summary>The type of the product for which the transaction took place.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The type of the product for which the transaction took place.",
        SerializedName = @"productType",
        PossibleTypes = new [] { typeof(string) })]
        string ProductType { get;  }
        /// <summary>The ID of the product type for which the transaction took place.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The ID of the product type for which the transaction took place.",
        SerializedName = @"productTypeId",
        PossibleTypes = new [] { typeof(string) })]
        string ProductTypeId { get;  }
        /// <summary>The quantity purchased in the transaction.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The quantity purchased in the transaction.",
        SerializedName = @"quantity",
        PossibleTypes = new [] { typeof(int) })]
        int? Quantity { get;  }
        /// <summary>
        /// The end date of the product term, or the end date of the month in which usage ended.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The end date of the product term, or the end date of the month in which usage ended.",
        SerializedName = @"servicePeriodEndDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ServicePeriodEndDate { get;  }
        /// <summary>
        /// The date of the purchase of the product, or the start date of the month in which usage started.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The date of the purchase of the product, or the start date of the month in which usage started.",
        SerializedName = @"servicePeriodStartDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ServicePeriodStartDate { get;  }
        /// <summary>The currency for the amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The currency for the amount value.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string SubTotalCurrency { get;  }
        /// <summary>Amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Amount value.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(float) })]
        float? SubTotalValue { get; set; }
        /// <summary>
        /// The ID of the subscription that was used for the transaction. The field is only applicable for transaction of kind reservation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The ID of the subscription that was used for the transaction. The field is only applicable for transaction of kind reservation.",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionId { get;  }
        /// <summary>
        /// The name of the subscription that was used for the transaction. The field is only applicable for transaction of kind reservation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of the subscription that was used for the transaction. The field is only applicable for transaction of kind reservation.",
        SerializedName = @"subscriptionName",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionName { get;  }
        /// <summary>The currency for the amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The currency for the amount value.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string TaxCurrency { get;  }
        /// <summary>Amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Amount value.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(float) })]
        float? TaxValue { get; set; }
        /// <summary>The currency for the amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The currency for the amount value.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string TransactionAmountCurrency { get;  }
        /// <summary>Amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Amount value.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(float) })]
        float? TransactionAmountValue { get; set; }
        /// <summary>The type of transaction.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of transaction.",
        SerializedName = @"transactionType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.ReservationType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.ReservationType? TransactionType { get; set; }
        /// <summary>The number of units used for a given product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of units used for a given product.",
        SerializedName = @"units",
        PossibleTypes = new [] { typeof(float) })]
        float? Unit { get;  }
        /// <summary>
        /// The unit of measure used to bill for the product. For example, compute services are billed per hour.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The unit of measure used to bill for the product. For example, compute services are billed per hour.",
        SerializedName = @"unitOfMeasure",
        PossibleTypes = new [] { typeof(string) })]
        string UnitOfMeasure { get;  }
        /// <summary>The description for the unit of measure for a given product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The description for the unit of measure for a given product.",
        SerializedName = @"unitType",
        PossibleTypes = new [] { typeof(string) })]
        string UnitType { get;  }

    }
    /// The properties of a transaction.
    internal partial interface ITransactionPropertiesInternal

    {
        /// <summary>The amount of any Azure credits automatically applied to this transaction.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmount AzureCreditApplied { get; set; }
        /// <summary>The currency for the amount value.</summary>
        string AzureCreditAppliedCurrency { get; set; }
        /// <summary>Amount value.</summary>
        float? AzureCreditAppliedValue { get; set; }
        /// <summary>The type of azure plan of the subscription that was used for the transaction.</summary>
        string AzurePlan { get; set; }
        /// <summary>The ISO 4217 code for the currency in which this transaction is billed.</summary>
        string BillingCurrency { get; set; }
        /// <summary>The name of the billing profile which will be billed for the transaction.</summary>
        string BillingProfileDisplayName { get; set; }
        /// <summary>The ID of the billing profile which will be billed for the transaction.</summary>
        string BillingProfileId { get; set; }
        /// <summary>
        /// The name of the customer for which the transaction took place. The field is applicable only for Microsoft Partner Agreement
        /// billing account.
        /// </summary>
        string CustomerDisplayName { get; set; }
        /// <summary>
        /// The ID of the customer for which the transaction took place. The field is applicable only for Microsoft Partner Agreement
        /// billing account.
        /// </summary>
        string CustomerId { get; set; }
        /// <summary>The date of transaction.</summary>
        global::System.DateTime? Date { get; set; }
        /// <summary>The percentage discount, if any, applied to this transaction.</summary>
        float? Discount { get; set; }
        /// <summary>The price of the product after applying any discounts.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmount EffectivePrice { get; set; }
        /// <summary>The currency for the amount value.</summary>
        string EffectivePriceCurrency { get; set; }
        /// <summary>Amount value.</summary>
        float? EffectivePriceValue { get; set; }
        /// <summary>
        /// The exchange rate used to convert charged amount to billing currency, if applicable.
        /// </summary>
        float? ExchangeRate { get; set; }
        /// <summary>
        /// Invoice on which the transaction was billed or 'pending' if the transaction is not billed.
        /// </summary>
        string Invoice { get; set; }
        /// <summary>
        /// The ID of the invoice on which the transaction was billed. This field is only applicable for transactions which are billed.
        /// </summary>
        string InvoiceId { get; set; }
        /// <summary>The name of the invoice section which will be billed for the transaction.</summary>
        string InvoiceSectionDisplayName { get; set; }
        /// <summary>The ID of the invoice section which will be billed for the transaction.</summary>
        string InvoiceSectionId { get; set; }
        /// <summary>The kind of transaction. Options are all or reservation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.TransactionTypeKind? Kind { get; set; }
        /// <summary>The retail price of the product.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmount MarketPrice { get; set; }
        /// <summary>The currency for the amount value.</summary>
        string MarketPriceCurrency { get; set; }
        /// <summary>Amount value.</summary>
        float? MarketPriceValue { get; set; }
        /// <summary>
        /// The order ID of the reservation. The field is only applicable for transaction of kind reservation.
        /// </summary>
        string OrderId { get; set; }
        /// <summary>
        /// The name of the reservation order. The field is only applicable for transactions of kind reservation.
        /// </summary>
        string OrderName { get; set; }
        /// <summary>The ISO 4217 code for the currency in which the product is priced.</summary>
        string PricingCurrency { get; set; }
        /// <summary>The description of the product for which the transaction took place.</summary>
        string ProductDescription { get; set; }
        /// <summary>The family of the product for which the transaction took place.</summary>
        string ProductFamily { get; set; }
        /// <summary>The type of the product for which the transaction took place.</summary>
        string ProductType { get; set; }
        /// <summary>The ID of the product type for which the transaction took place.</summary>
        string ProductTypeId { get; set; }
        /// <summary>The quantity purchased in the transaction.</summary>
        int? Quantity { get; set; }
        /// <summary>
        /// The end date of the product term, or the end date of the month in which usage ended.
        /// </summary>
        global::System.DateTime? ServicePeriodEndDate { get; set; }
        /// <summary>
        /// The date of the purchase of the product, or the start date of the month in which usage started.
        /// </summary>
        global::System.DateTime? ServicePeriodStartDate { get; set; }
        /// <summary>The pre-tax charged amount for the transaction.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmount SubTotal { get; set; }
        /// <summary>The currency for the amount value.</summary>
        string SubTotalCurrency { get; set; }
        /// <summary>Amount value.</summary>
        float? SubTotalValue { get; set; }
        /// <summary>
        /// The ID of the subscription that was used for the transaction. The field is only applicable for transaction of kind reservation.
        /// </summary>
        string SubscriptionId { get; set; }
        /// <summary>
        /// The name of the subscription that was used for the transaction. The field is only applicable for transaction of kind reservation.
        /// </summary>
        string SubscriptionName { get; set; }
        /// <summary>The tax amount applied to the transaction.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmount Tax { get; set; }
        /// <summary>The currency for the amount value.</summary>
        string TaxCurrency { get; set; }
        /// <summary>Amount value.</summary>
        float? TaxValue { get; set; }
        /// <summary>The charge associated with the transaction.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IAmount TransactionAmount { get; set; }
        /// <summary>The currency for the amount value.</summary>
        string TransactionAmountCurrency { get; set; }
        /// <summary>Amount value.</summary>
        float? TransactionAmountValue { get; set; }
        /// <summary>The type of transaction.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.ReservationType? TransactionType { get; set; }
        /// <summary>The number of units used for a given product.</summary>
        float? Unit { get; set; }
        /// <summary>
        /// The unit of measure used to bill for the product. For example, compute services are billed per hour.
        /// </summary>
        string UnitOfMeasure { get; set; }
        /// <summary>The description for the unit of measure for a given product.</summary>
        string UnitType { get; set; }

    }
}