// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Extensions;

    /// <summary>The property of reservation object.</summary>
    public partial class ReservationProperty :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IReservationProperty,
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IReservationPropertyInternal
    {

        /// <summary>Backing field for <see cref="AppliedScope" /> property.</summary>
        private string[] _appliedScope;

        /// <summary>
        /// The array of applied scopes of a reservation. Will be null if the reservation is in Shared scope
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string[] AppliedScope { get => this._appliedScope; set => this._appliedScope = value; }

        /// <summary>Backing field for <see cref="AppliedScopeType" /> property.</summary>
        private string _appliedScopeType;

        /// <summary>The applied scope type of the reservation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string AppliedScopeType { get => this._appliedScopeType; }

        /// <summary>Backing field for <see cref="DisplayName" /> property.</summary>
        private string _displayName;

        /// <summary>The display name of the reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string DisplayName { get => this._displayName; }

        /// <summary>Backing field for <see cref="DisplayProvisioningState" /> property.</summary>
        private string _displayProvisioningState;

        /// <summary>The provisioning state of the reservation for display, e.g. Succeeded</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string DisplayProvisioningState { get => this._displayProvisioningState; }

        /// <summary>Backing field for <see cref="EffectiveDateTime" /> property.</summary>
        private string _effectiveDateTime;

        /// <summary>The effective date time of the reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string EffectiveDateTime { get => this._effectiveDateTime; }

        /// <summary>Backing field for <see cref="ExpiryDate" /> property.</summary>
        private string _expiryDate;

        /// <summary>The expiry date of the reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string ExpiryDate { get => this._expiryDate; }

        /// <summary>Internal Acessors for AppliedScopeType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IReservationPropertyInternal.AppliedScopeType { get => this._appliedScopeType; set { {_appliedScopeType = value;} } }

        /// <summary>Internal Acessors for DisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IReservationPropertyInternal.DisplayName { get => this._displayName; set { {_displayName = value;} } }

        /// <summary>Internal Acessors for DisplayProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IReservationPropertyInternal.DisplayProvisioningState { get => this._displayProvisioningState; set { {_displayProvisioningState = value;} } }

        /// <summary>Internal Acessors for EffectiveDateTime</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IReservationPropertyInternal.EffectiveDateTime { get => this._effectiveDateTime; set { {_effectiveDateTime = value;} } }

        /// <summary>Internal Acessors for ExpiryDate</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IReservationPropertyInternal.ExpiryDate { get => this._expiryDate; set { {_expiryDate = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IReservationPropertyInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for ProvisioningSubState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IReservationPropertyInternal.ProvisioningSubState { get => this._provisioningSubState; set { {_provisioningSubState = value;} } }

        /// <summary>Internal Acessors for Quantity</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IReservationPropertyInternal.Quantity { get => this._quantity; set { {_quantity = value;} } }

        /// <summary>Internal Acessors for Renew</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IReservationPropertyInternal.Renew { get => this._renew; set { {_renew = value;} } }

        /// <summary>Internal Acessors for RenewSource</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IReservationPropertyInternal.RenewSource { get => this._renewSource; set { {_renewSource = value;} } }

        /// <summary>Internal Acessors for ReservedResourceType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IReservationPropertyInternal.ReservedResourceType { get => this._reservedResourceType; set { {_reservedResourceType = value;} } }

        /// <summary>Internal Acessors for SkuDescription</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IReservationPropertyInternal.SkuDescription { get => this._skuDescription; set { {_skuDescription = value;} } }

        /// <summary>Internal Acessors for Term</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IReservationPropertyInternal.Term { get => this._term; set { {_term = value;} } }

        /// <summary>Internal Acessors for UserFriendlyAppliedScopeType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IReservationPropertyInternal.UserFriendlyAppliedScopeType { get => this._userFriendlyAppliedScopeType; set { {_userFriendlyAppliedScopeType = value;} } }

        /// <summary>Internal Acessors for UserFriendlyRenewState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IReservationPropertyInternal.UserFriendlyRenewState { get => this._userFriendlyRenewState; set { {_userFriendlyRenewState = value;} } }

        /// <summary>Internal Acessors for Utilization</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IReservationPropertyUtilization Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IReservationPropertyInternal.Utilization { get => (this._utilization = this._utilization ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ReservationPropertyUtilization()); set { {_utilization = value;} } }

        /// <summary>Internal Acessors for UtilizationTrend</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IReservationPropertyInternal.UtilizationTrend { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IReservationPropertyUtilizationInternal)Utilization).Trend; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IReservationPropertyUtilizationInternal)Utilization).Trend = value; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>The provisioning state of the reservation, e.g. Succeeded</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="ProvisioningSubState" /> property.</summary>
        private string _provisioningSubState;

        /// <summary>The provisioning state of the reservation, e.g. Succeeded</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string ProvisioningSubState { get => this._provisioningSubState; }

        /// <summary>Backing field for <see cref="Quantity" /> property.</summary>
        private float? _quantity;

        /// <summary>The number of the reservation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public float? Quantity { get => this._quantity; }

        /// <summary>Backing field for <see cref="Renew" /> property.</summary>
        private bool? _renew;

        /// <summary>The renew state of the reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public bool? Renew { get => this._renew; }

        /// <summary>Backing field for <see cref="RenewSource" /> property.</summary>
        private string _renewSource;

        /// <summary>The renew source of the reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string RenewSource { get => this._renewSource; }

        /// <summary>Backing field for <see cref="ReservedResourceType" /> property.</summary>
        private string _reservedResourceType;

        /// <summary>The reserved source type of the reservation, e.g. virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string ReservedResourceType { get => this._reservedResourceType; }

        /// <summary>Backing field for <see cref="SkuDescription" /> property.</summary>
        private string _skuDescription;

        /// <summary>The sku description of the reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string SkuDescription { get => this._skuDescription; }

        /// <summary>Backing field for <see cref="Term" /> property.</summary>
        private string _term;

        /// <summary>The term of the reservation, e.g. P1Y</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string Term { get => this._term; }

        /// <summary>Backing field for <see cref="UserFriendlyAppliedScopeType" /> property.</summary>
        private string _userFriendlyAppliedScopeType;

        /// <summary>The applied scope type of the reservation for display, e.g. Shared</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string UserFriendlyAppliedScopeType { get => this._userFriendlyAppliedScopeType; }

        /// <summary>Backing field for <see cref="UserFriendlyRenewState" /> property.</summary>
        private string _userFriendlyRenewState;

        /// <summary>The renew state of the reservation for display, e.g. On</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string UserFriendlyRenewState { get => this._userFriendlyRenewState; }

        /// <summary>Backing field for <see cref="Utilization" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IReservationPropertyUtilization _utilization;

        /// <summary>Reservation utilization</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IReservationPropertyUtilization Utilization { get => (this._utilization = this._utilization ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.ReservationPropertyUtilization()); }

        /// <summary>The array of aggregates of a reservation's utilization</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IReservationUtilizationAggregates[] UtilizationAggregate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IReservationPropertyUtilizationInternal)Utilization).Aggregate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IReservationPropertyUtilizationInternal)Utilization).Aggregate = value ?? null /* arrayOf */; }

        /// <summary>The number of days trend for a reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string UtilizationTrend { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IReservationPropertyUtilizationInternal)Utilization).Trend; }

        /// <summary>Creates an new <see cref="ReservationProperty" /> instance.</summary>
        public ReservationProperty()
        {

        }
    }
    /// The property of reservation object.
    public partial interface IReservationProperty :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The array of applied scopes of a reservation. Will be null if the reservation is in Shared scope
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The array of applied scopes of a reservation. Will be null if the reservation is in Shared scope",
        SerializedName = @"appliedScopes",
        PossibleTypes = new [] { typeof(string) })]
        string[] AppliedScope { get; set; }
        /// <summary>The applied scope type of the reservation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The applied scope type of the reservation.",
        SerializedName = @"appliedScopeType",
        PossibleTypes = new [] { typeof(string) })]
        string AppliedScopeType { get;  }
        /// <summary>The display name of the reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The display name of the reservation",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get;  }
        /// <summary>The provisioning state of the reservation for display, e.g. Succeeded</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state of the reservation for display, e.g. Succeeded",
        SerializedName = @"displayProvisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayProvisioningState { get;  }
        /// <summary>The effective date time of the reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The effective date time of the reservation",
        SerializedName = @"effectiveDateTime",
        PossibleTypes = new [] { typeof(string) })]
        string EffectiveDateTime { get;  }
        /// <summary>The expiry date of the reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The expiry date of the reservation",
        SerializedName = @"expiryDate",
        PossibleTypes = new [] { typeof(string) })]
        string ExpiryDate { get;  }
        /// <summary>The provisioning state of the reservation, e.g. Succeeded</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state of the reservation, e.g. Succeeded",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>The provisioning state of the reservation, e.g. Succeeded</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state of the reservation, e.g. Succeeded",
        SerializedName = @"provisioningSubState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningSubState { get;  }
        /// <summary>The number of the reservation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of the reservation.",
        SerializedName = @"quantity",
        PossibleTypes = new [] { typeof(float) })]
        float? Quantity { get;  }
        /// <summary>The renew state of the reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The renew state of the reservation",
        SerializedName = @"renew",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Renew { get;  }
        /// <summary>The renew source of the reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The renew source of the reservation",
        SerializedName = @"renewSource",
        PossibleTypes = new [] { typeof(string) })]
        string RenewSource { get;  }
        /// <summary>The reserved source type of the reservation, e.g. virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The reserved source type of the reservation, e.g. virtual machine.",
        SerializedName = @"reservedResourceType",
        PossibleTypes = new [] { typeof(string) })]
        string ReservedResourceType { get;  }
        /// <summary>The sku description of the reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The sku description of the reservation",
        SerializedName = @"skuDescription",
        PossibleTypes = new [] { typeof(string) })]
        string SkuDescription { get;  }
        /// <summary>The term of the reservation, e.g. P1Y</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The term of the reservation, e.g. P1Y",
        SerializedName = @"term",
        PossibleTypes = new [] { typeof(string) })]
        string Term { get;  }
        /// <summary>The applied scope type of the reservation for display, e.g. Shared</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The applied scope type of the reservation for display, e.g. Shared",
        SerializedName = @"userFriendlyAppliedScopeType",
        PossibleTypes = new [] { typeof(string) })]
        string UserFriendlyAppliedScopeType { get;  }
        /// <summary>The renew state of the reservation for display, e.g. On</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The renew state of the reservation for display, e.g. On",
        SerializedName = @"userFriendlyRenewState",
        PossibleTypes = new [] { typeof(string) })]
        string UserFriendlyRenewState { get;  }
        /// <summary>The array of aggregates of a reservation's utilization</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The array of aggregates of a reservation's utilization",
        SerializedName = @"aggregates",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IReservationUtilizationAggregates) })]
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IReservationUtilizationAggregates[] UtilizationAggregate { get; set; }
        /// <summary>The number of days trend for a reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of days trend for a reservation",
        SerializedName = @"trend",
        PossibleTypes = new [] { typeof(string) })]
        string UtilizationTrend { get;  }

    }
    /// The property of reservation object.
    internal partial interface IReservationPropertyInternal

    {
        /// <summary>
        /// The array of applied scopes of a reservation. Will be null if the reservation is in Shared scope
        /// </summary>
        string[] AppliedScope { get; set; }
        /// <summary>The applied scope type of the reservation.</summary>
        string AppliedScopeType { get; set; }
        /// <summary>The display name of the reservation</summary>
        string DisplayName { get; set; }
        /// <summary>The provisioning state of the reservation for display, e.g. Succeeded</summary>
        string DisplayProvisioningState { get; set; }
        /// <summary>The effective date time of the reservation</summary>
        string EffectiveDateTime { get; set; }
        /// <summary>The expiry date of the reservation</summary>
        string ExpiryDate { get; set; }
        /// <summary>The provisioning state of the reservation, e.g. Succeeded</summary>
        string ProvisioningState { get; set; }
        /// <summary>The provisioning state of the reservation, e.g. Succeeded</summary>
        string ProvisioningSubState { get; set; }
        /// <summary>The number of the reservation.</summary>
        float? Quantity { get; set; }
        /// <summary>The renew state of the reservation</summary>
        bool? Renew { get; set; }
        /// <summary>The renew source of the reservation</summary>
        string RenewSource { get; set; }
        /// <summary>The reserved source type of the reservation, e.g. virtual machine.</summary>
        string ReservedResourceType { get; set; }
        /// <summary>The sku description of the reservation</summary>
        string SkuDescription { get; set; }
        /// <summary>The term of the reservation, e.g. P1Y</summary>
        string Term { get; set; }
        /// <summary>The applied scope type of the reservation for display, e.g. Shared</summary>
        string UserFriendlyAppliedScopeType { get; set; }
        /// <summary>The renew state of the reservation for display, e.g. On</summary>
        string UserFriendlyRenewState { get; set; }
        /// <summary>Reservation utilization</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IReservationPropertyUtilization Utilization { get; set; }
        /// <summary>The array of aggregates of a reservation's utilization</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20200501.IReservationUtilizationAggregates[] UtilizationAggregate { get; set; }
        /// <summary>The number of days trend for a reservation</summary>
        string UtilizationTrend { get; set; }

    }
}