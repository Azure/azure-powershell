// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Extensions;

    /// <summary>Response of the CheckNameAvailability operation.</summary>
    public partial class ApiManagementServiceNameAvailabilityResult :
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IApiManagementServiceNameAvailabilityResult,
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IApiManagementServiceNameAvailabilityResultInternal
    {

        /// <summary>Backing field for <see cref="Message" /> property.</summary>
        private string _message;

        /// <summary>
        /// If reason == invalid, provide the user with the reason why the given name is invalid, and provide the resource naming
        /// requirements so that the user can select a valid name. If reason == AlreadyExists, explain that <resourceName> is already
        /// in use, and direct them to select a different name.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public string Message { get => this._message; }

        /// <summary>Internal Acessors for Message</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IApiManagementServiceNameAvailabilityResultInternal.Message { get => this._message; set { {_message = value;} } }

        /// <summary>Internal Acessors for NameAvailable</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IApiManagementServiceNameAvailabilityResultInternal.NameAvailable { get => this._nameAvailable; set { {_nameAvailable = value;} } }

        /// <summary>Backing field for <see cref="NameAvailable" /> property.</summary>
        private bool? _nameAvailable;

        /// <summary>
        /// True if the name is available and can be used to create a new API Management service; otherwise false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public bool? NameAvailable { get => this._nameAvailable; }

        /// <summary>Backing field for <see cref="Reason" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Api.Support.NameAvailabilityReason? _reason;

        /// <summary>
        /// Invalid indicates the name provided does not match the resource provider’s naming requirements (incorrect length, unsupported
        /// characters, etc.) AlreadyExists indicates that the name is already in use and is therefore unavailable.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Api.Support.NameAvailabilityReason? Reason { get => this._reason; set => this._reason = value; }

        /// <summary>
        /// Creates an new <see cref="ApiManagementServiceNameAvailabilityResult" /> instance.
        /// </summary>
        public ApiManagementServiceNameAvailabilityResult()
        {

        }
    }
    /// Response of the CheckNameAvailability operation.
    public partial interface IApiManagementServiceNameAvailabilityResult :
        Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.IJsonSerializable
    {
        /// <summary>
        /// If reason == invalid, provide the user with the reason why the given name is invalid, and provide the resource naming
        /// requirements so that the user can select a valid name. If reason == AlreadyExists, explain that <resourceName> is already
        /// in use, and direct them to select a different name.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"If reason == invalid, provide the user with the reason why the given name is invalid, and provide the resource naming requirements so that the user can select a valid name. If reason == AlreadyExists, explain that <resourceName> is already in use, and direct them to select a different name.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string Message { get;  }
        /// <summary>
        /// True if the name is available and can be used to create a new API Management service; otherwise false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"True if the name is available and can be used to create a new API Management service; otherwise false.",
        SerializedName = @"nameAvailable",
        PossibleTypes = new [] { typeof(bool) })]
        bool? NameAvailable { get;  }
        /// <summary>
        /// Invalid indicates the name provided does not match the resource provider’s naming requirements (incorrect length, unsupported
        /// characters, etc.) AlreadyExists indicates that the name is already in use and is therefore unavailable.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Invalid indicates the name provided does not match the resource provider’s naming requirements (incorrect length, unsupported characters, etc.)  AlreadyExists indicates that the name is already in use and is therefore unavailable.",
        SerializedName = @"reason",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Api.Support.NameAvailabilityReason) })]
        Microsoft.Azure.PowerShell.Cmdlets.Api.Support.NameAvailabilityReason? Reason { get; set; }

    }
    /// Response of the CheckNameAvailability operation.
    internal partial interface IApiManagementServiceNameAvailabilityResultInternal

    {
        /// <summary>
        /// If reason == invalid, provide the user with the reason why the given name is invalid, and provide the resource naming
        /// requirements so that the user can select a valid name. If reason == AlreadyExists, explain that <resourceName> is already
        /// in use, and direct them to select a different name.
        /// </summary>
        string Message { get; set; }
        /// <summary>
        /// True if the name is available and can be used to create a new API Management service; otherwise false.
        /// </summary>
        bool? NameAvailable { get; set; }
        /// <summary>
        /// Invalid indicates the name provided does not match the resource provider’s naming requirements (incorrect length, unsupported
        /// characters, etc.) AlreadyExists indicates that the name is already in use and is therefore unavailable.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Support.NameAvailabilityReason? Reason { get; set; }

    }
}