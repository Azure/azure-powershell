// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Extensions;

    /// <summary>Parameters supplied to update Identity Provider</summary>
    public partial class IdentityProviderUpdateParameters :
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IIdentityProviderUpdateParameters,
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IIdentityProviderUpdateParametersInternal
    {

        /// <summary>List of Allowed Tenants when configuring Azure Active Directory login.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string[] AllowedTenant { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IIdentityProviderBaseParametersInternal)Property).AllowedTenant; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IIdentityProviderBaseParametersInternal)Property).AllowedTenant = value ?? null /* arrayOf */; }

        /// <summary>OpenID Connect discovery endpoint hostname for AAD or AAD B2C.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string Authority { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IIdentityProviderBaseParametersInternal)Property).Authority; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IIdentityProviderBaseParametersInternal)Property).Authority = value ?? null; }

        /// <summary>
        /// Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for Google
        /// login, App ID for Microsoft.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string ClientId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IIdentityProviderUpdatePropertiesInternal)Property).ClientId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IIdentityProviderUpdatePropertiesInternal)Property).ClientId = value ?? null; }

        /// <summary>
        /// The client library to be used in the developer portal. Only applies to AAD and AAD B2C Identity Provider.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string ClientLibrary { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IIdentityProviderBaseParametersInternal)Property).ClientLibrary; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IIdentityProviderBaseParametersInternal)Property).ClientLibrary = value ?? null; }

        /// <summary>
        /// Client secret of the Application in external Identity Provider, used to authenticate login request. For example, it is
        /// App Secret for Facebook login, API Key for Google login, Public Key for Microsoft.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string ClientSecret { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IIdentityProviderUpdatePropertiesInternal)Property).ClientSecret; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IIdentityProviderUpdatePropertiesInternal)Property).ClientSecret = value ?? null; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IIdentityProviderUpdateProperties Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IIdentityProviderUpdateParametersInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IdentityProviderUpdateProperties()); set { {_property = value;} } }

        /// <summary>Password Reset Policy Name. Only applies to AAD B2C Identity Provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string PasswordResetPolicyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IIdentityProviderBaseParametersInternal)Property).PasswordResetPolicyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IIdentityProviderBaseParametersInternal)Property).PasswordResetPolicyName = value ?? null; }

        /// <summary>Profile Editing Policy Name. Only applies to AAD B2C Identity Provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string ProfileEditingPolicyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IIdentityProviderBaseParametersInternal)Property).ProfileEditingPolicyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IIdentityProviderBaseParametersInternal)Property).ProfileEditingPolicyName = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IIdentityProviderUpdateProperties _property;

        /// <summary>Identity Provider update properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IIdentityProviderUpdateProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IdentityProviderUpdateProperties()); set => this._property = value; }

        /// <summary>Signin Policy Name. Only applies to AAD B2C Identity Provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string SigninPolicyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IIdentityProviderBaseParametersInternal)Property).SigninPolicyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IIdentityProviderBaseParametersInternal)Property).SigninPolicyName = value ?? null; }

        /// <summary>The TenantId to use instead of Common when logging into Active Directory</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string SigninTenant { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IIdentityProviderBaseParametersInternal)Property).SigninTenant; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IIdentityProviderBaseParametersInternal)Property).SigninTenant = value ?? null; }

        /// <summary>Signup Policy Name. Only applies to AAD B2C Identity Provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string SignupPolicyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IIdentityProviderBaseParametersInternal)Property).SignupPolicyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IIdentityProviderBaseParametersInternal)Property).SignupPolicyName = value ?? null; }

        /// <summary>Identity Provider Type identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Api.Support.IdentityProviderType? Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IIdentityProviderBaseParametersInternal)Property).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IIdentityProviderBaseParametersInternal)Property).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Api.Support.IdentityProviderType)""); }

        /// <summary>Creates an new <see cref="IdentityProviderUpdateParameters" /> instance.</summary>
        public IdentityProviderUpdateParameters()
        {

        }
    }
    /// Parameters supplied to update Identity Provider
    public partial interface IIdentityProviderUpdateParameters :
        Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.IJsonSerializable
    {
        /// <summary>List of Allowed Tenants when configuring Azure Active Directory login.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of Allowed Tenants when configuring Azure Active Directory login.",
        SerializedName = @"allowedTenants",
        PossibleTypes = new [] { typeof(string) })]
        string[] AllowedTenant { get; set; }
        /// <summary>OpenID Connect discovery endpoint hostname for AAD or AAD B2C.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"OpenID Connect discovery endpoint hostname for AAD or AAD B2C.",
        SerializedName = @"authority",
        PossibleTypes = new [] { typeof(string) })]
        string Authority { get; set; }
        /// <summary>
        /// Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for Google
        /// login, App ID for Microsoft.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for Google login, App ID for Microsoft.",
        SerializedName = @"clientId",
        PossibleTypes = new [] { typeof(string) })]
        string ClientId { get; set; }
        /// <summary>
        /// The client library to be used in the developer portal. Only applies to AAD and AAD B2C Identity Provider.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The client library to be used in the developer portal. Only applies to AAD and AAD B2C Identity Provider.",
        SerializedName = @"clientLibrary",
        PossibleTypes = new [] { typeof(string) })]
        string ClientLibrary { get; set; }
        /// <summary>
        /// Client secret of the Application in external Identity Provider, used to authenticate login request. For example, it is
        /// App Secret for Facebook login, API Key for Google login, Public Key for Microsoft.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Client secret of the Application in external Identity Provider, used to authenticate login request. For example, it is App Secret for Facebook login, API Key for Google login, Public Key for Microsoft.",
        SerializedName = @"clientSecret",
        PossibleTypes = new [] { typeof(string) })]
        string ClientSecret { get; set; }
        /// <summary>Password Reset Policy Name. Only applies to AAD B2C Identity Provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Password Reset Policy Name. Only applies to AAD B2C Identity Provider.",
        SerializedName = @"passwordResetPolicyName",
        PossibleTypes = new [] { typeof(string) })]
        string PasswordResetPolicyName { get; set; }
        /// <summary>Profile Editing Policy Name. Only applies to AAD B2C Identity Provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Profile Editing Policy Name. Only applies to AAD B2C Identity Provider.",
        SerializedName = @"profileEditingPolicyName",
        PossibleTypes = new [] { typeof(string) })]
        string ProfileEditingPolicyName { get; set; }
        /// <summary>Signin Policy Name. Only applies to AAD B2C Identity Provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Signin Policy Name. Only applies to AAD B2C Identity Provider.",
        SerializedName = @"signinPolicyName",
        PossibleTypes = new [] { typeof(string) })]
        string SigninPolicyName { get; set; }
        /// <summary>The TenantId to use instead of Common when logging into Active Directory</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The TenantId to use instead of Common when logging into Active Directory",
        SerializedName = @"signinTenant",
        PossibleTypes = new [] { typeof(string) })]
        string SigninTenant { get; set; }
        /// <summary>Signup Policy Name. Only applies to AAD B2C Identity Provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Signup Policy Name. Only applies to AAD B2C Identity Provider.",
        SerializedName = @"signupPolicyName",
        PossibleTypes = new [] { typeof(string) })]
        string SignupPolicyName { get; set; }
        /// <summary>Identity Provider Type identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Identity Provider Type identifier.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Api.Support.IdentityProviderType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Api.Support.IdentityProviderType? Type { get; set; }

    }
    /// Parameters supplied to update Identity Provider
    internal partial interface IIdentityProviderUpdateParametersInternal

    {
        /// <summary>List of Allowed Tenants when configuring Azure Active Directory login.</summary>
        string[] AllowedTenant { get; set; }
        /// <summary>OpenID Connect discovery endpoint hostname for AAD or AAD B2C.</summary>
        string Authority { get; set; }
        /// <summary>
        /// Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for Google
        /// login, App ID for Microsoft.
        /// </summary>
        string ClientId { get; set; }
        /// <summary>
        /// The client library to be used in the developer portal. Only applies to AAD and AAD B2C Identity Provider.
        /// </summary>
        string ClientLibrary { get; set; }
        /// <summary>
        /// Client secret of the Application in external Identity Provider, used to authenticate login request. For example, it is
        /// App Secret for Facebook login, API Key for Google login, Public Key for Microsoft.
        /// </summary>
        string ClientSecret { get; set; }
        /// <summary>Password Reset Policy Name. Only applies to AAD B2C Identity Provider.</summary>
        string PasswordResetPolicyName { get; set; }
        /// <summary>Profile Editing Policy Name. Only applies to AAD B2C Identity Provider.</summary>
        string ProfileEditingPolicyName { get; set; }
        /// <summary>Identity Provider update properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IIdentityProviderUpdateProperties Property { get; set; }
        /// <summary>Signin Policy Name. Only applies to AAD B2C Identity Provider.</summary>
        string SigninPolicyName { get; set; }
        /// <summary>The TenantId to use instead of Common when logging into Active Directory</summary>
        string SigninTenant { get; set; }
        /// <summary>Signup Policy Name. Only applies to AAD B2C Identity Provider.</summary>
        string SignupPolicyName { get; set; }
        /// <summary>Identity Provider Type identifier.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Support.IdentityProviderType? Type { get; set; }

    }
}