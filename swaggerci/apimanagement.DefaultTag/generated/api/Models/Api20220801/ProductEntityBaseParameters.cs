// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Extensions;

    /// <summary>Product Entity Base Parameters</summary>
    public partial class ProductEntityBaseParameters :
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IProductEntityBaseParameters,
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IProductEntityBaseParametersInternal
    {

        /// <summary>Backing field for <see cref="ApprovalRequired" /> property.</summary>
        private bool? _approvalRequired;

        /// <summary>
        /// whether subscription approval is required. If false, new subscriptions will be approved automatically enabling developers
        /// to call the product’s APIs immediately after subscribing. If true, administrators must manually approve the subscription
        /// before the developer can any of the product’s APIs. Can be present only if subscriptionRequired property is present and
        /// has a value of false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public bool? ApprovalRequired { get => this._approvalRequired; set => this._approvalRequired = value; }

        /// <summary>Backing field for <see cref="Description" /> property.</summary>
        private string _description;

        /// <summary>Product description. May include HTML formatting tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public string Description { get => this._description; set => this._description = value; }

        /// <summary>Backing field for <see cref="State" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Api.Support.ProductState? _state;

        /// <summary>
        /// whether product is published or not. Published products are discoverable by users of developer portal. Non published products
        /// are visible only to administrators. Default state of Product is notPublished.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Api.Support.ProductState? State { get => this._state; set => this._state = value; }

        /// <summary>Backing field for <see cref="SubscriptionRequired" /> property.</summary>
        private bool? _subscriptionRequired;

        /// <summary>
        /// Whether a product subscription is required for accessing APIs included in this product. If true, the product is referred
        /// to as "protected" and a valid subscription key is required for a request to an API included in the product to succeed.
        /// If false, the product is referred to as "open" and requests to an API included in the product can be made without a subscription
        /// key. If property is omitted when creating a new product it's value is assumed to be true.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public bool? SubscriptionRequired { get => this._subscriptionRequired; set => this._subscriptionRequired = value; }

        /// <summary>Backing field for <see cref="SubscriptionsLimit" /> property.</summary>
        private int? _subscriptionsLimit;

        /// <summary>
        /// Whether the number of subscriptions a user can have to this product at the same time. Set to null or omit to allow unlimited
        /// per user subscriptions. Can be present only if subscriptionRequired property is present and has a value of false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public int? SubscriptionsLimit { get => this._subscriptionsLimit; set => this._subscriptionsLimit = value; }

        /// <summary>Backing field for <see cref="Term" /> property.</summary>
        private string _term;

        /// <summary>
        /// Product terms of use. Developers trying to subscribe to the product will be presented and required to accept these terms
        /// before they can complete the subscription process.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public string Term { get => this._term; set => this._term = value; }

        /// <summary>Creates an new <see cref="ProductEntityBaseParameters" /> instance.</summary>
        public ProductEntityBaseParameters()
        {

        }
    }
    /// Product Entity Base Parameters
    public partial interface IProductEntityBaseParameters :
        Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.IJsonSerializable
    {
        /// <summary>
        /// whether subscription approval is required. If false, new subscriptions will be approved automatically enabling developers
        /// to call the product’s APIs immediately after subscribing. If true, administrators must manually approve the subscription
        /// before the developer can any of the product’s APIs. Can be present only if subscriptionRequired property is present and
        /// has a value of false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"whether subscription approval is required. If false, new subscriptions will be approved automatically enabling developers to call the product’s APIs immediately after subscribing. If true, administrators must manually approve the subscription before the developer can any of the product’s APIs. Can be present only if subscriptionRequired property is present and has a value of false.",
        SerializedName = @"approvalRequired",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ApprovalRequired { get; set; }
        /// <summary>Product description. May include HTML formatting tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Product description. May include HTML formatting tags.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>
        /// whether product is published or not. Published products are discoverable by users of developer portal. Non published products
        /// are visible only to administrators. Default state of Product is notPublished.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"whether product is published or not. Published products are discoverable by users of developer portal. Non published products are visible only to administrators. Default state of Product is notPublished.",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Api.Support.ProductState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Api.Support.ProductState? State { get; set; }
        /// <summary>
        /// Whether a product subscription is required for accessing APIs included in this product. If true, the product is referred
        /// to as "protected" and a valid subscription key is required for a request to an API included in the product to succeed.
        /// If false, the product is referred to as "open" and requests to an API included in the product can be made without a subscription
        /// key. If property is omitted when creating a new product it's value is assumed to be true.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether a product subscription is required for accessing APIs included in this product. If true, the product is referred to as ""protected"" and a valid subscription key is required for a request to an API included in the product to succeed. If false, the product is referred to as ""open"" and requests to an API included in the product can be made without a subscription key. If property is omitted when creating a new product it's value is assumed to be true.",
        SerializedName = @"subscriptionRequired",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SubscriptionRequired { get; set; }
        /// <summary>
        /// Whether the number of subscriptions a user can have to this product at the same time. Set to null or omit to allow unlimited
        /// per user subscriptions. Can be present only if subscriptionRequired property is present and has a value of false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether the number of subscriptions a user can have to this product at the same time. Set to null or omit to allow unlimited per user subscriptions. Can be present only if subscriptionRequired property is present and has a value of false.",
        SerializedName = @"subscriptionsLimit",
        PossibleTypes = new [] { typeof(int) })]
        int? SubscriptionsLimit { get; set; }
        /// <summary>
        /// Product terms of use. Developers trying to subscribe to the product will be presented and required to accept these terms
        /// before they can complete the subscription process.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Product terms of use. Developers trying to subscribe to the product will be presented and required to accept these terms before they can complete the subscription process.",
        SerializedName = @"terms",
        PossibleTypes = new [] { typeof(string) })]
        string Term { get; set; }

    }
    /// Product Entity Base Parameters
    internal partial interface IProductEntityBaseParametersInternal

    {
        /// <summary>
        /// whether subscription approval is required. If false, new subscriptions will be approved automatically enabling developers
        /// to call the product’s APIs immediately after subscribing. If true, administrators must manually approve the subscription
        /// before the developer can any of the product’s APIs. Can be present only if subscriptionRequired property is present and
        /// has a value of false.
        /// </summary>
        bool? ApprovalRequired { get; set; }
        /// <summary>Product description. May include HTML formatting tags.</summary>
        string Description { get; set; }
        /// <summary>
        /// whether product is published or not. Published products are discoverable by users of developer portal. Non published products
        /// are visible only to administrators. Default state of Product is notPublished.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Support.ProductState? State { get; set; }
        /// <summary>
        /// Whether a product subscription is required for accessing APIs included in this product. If true, the product is referred
        /// to as "protected" and a valid subscription key is required for a request to an API included in the product to succeed.
        /// If false, the product is referred to as "open" and requests to an API included in the product can be made without a subscription
        /// key. If property is omitted when creating a new product it's value is assumed to be true.
        /// </summary>
        bool? SubscriptionRequired { get; set; }
        /// <summary>
        /// Whether the number of subscriptions a user can have to this product at the same time. Set to null or omit to allow unlimited
        /// per user subscriptions. Can be present only if subscriptionRequired property is present and has a value of false.
        /// </summary>
        int? SubscriptionsLimit { get; set; }
        /// <summary>
        /// Product terms of use. Developers trying to subscribe to the product will be presented and required to accept these terms
        /// before they can complete the subscription process.
        /// </summary>
        string Term { get; set; }

    }
}