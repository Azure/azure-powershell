// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Extensions;

    /// <summary>The developer portal Content Security Policy (CSP) settings.</summary>
    public partial class PortalConfigCspProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigCspProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigCspPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AllowedSource" /> property.</summary>
        private string[] _allowedSource;

        /// <summary>Allowed sources, e.g. `*.trusted.com`, `trusted.com`, `https://`.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public string[] AllowedSource { get => this._allowedSource; set => this._allowedSource = value; }

        /// <summary>Backing field for <see cref="Mode" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Api.Support.PortalSettingsCspMode? _mode;

        /// <summary>The mode of the developer portal Content Security Policy (CSP).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Api.Support.PortalSettingsCspMode? Mode { get => this._mode; set => this._mode = value; }

        /// <summary>Backing field for <see cref="ReportUri" /> property.</summary>
        private string[] _reportUri;

        /// <summary>The URLs used by the browser to report CSP violations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public string[] ReportUri { get => this._reportUri; set => this._reportUri = value; }

        /// <summary>Creates an new <see cref="PortalConfigCspProperties" /> instance.</summary>
        public PortalConfigCspProperties()
        {

        }
    }
    /// The developer portal Content Security Policy (CSP) settings.
    public partial interface IPortalConfigCspProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.IJsonSerializable
    {
        /// <summary>Allowed sources, e.g. `*.trusted.com`, `trusted.com`, `https://`.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Allowed sources, e.g. `*.trusted.com`, `trusted.com`, `https://`.",
        SerializedName = @"allowedSources",
        PossibleTypes = new [] { typeof(string) })]
        string[] AllowedSource { get; set; }
        /// <summary>The mode of the developer portal Content Security Policy (CSP).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The mode of the developer portal Content Security Policy (CSP).",
        SerializedName = @"mode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Api.Support.PortalSettingsCspMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.Api.Support.PortalSettingsCspMode? Mode { get; set; }
        /// <summary>The URLs used by the browser to report CSP violations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The URLs used by the browser to report CSP violations.",
        SerializedName = @"reportUri",
        PossibleTypes = new [] { typeof(string) })]
        string[] ReportUri { get; set; }

    }
    /// The developer portal Content Security Policy (CSP) settings.
    internal partial interface IPortalConfigCspPropertiesInternal

    {
        /// <summary>Allowed sources, e.g. `*.trusted.com`, `trusted.com`, `https://`.</summary>
        string[] AllowedSource { get; set; }
        /// <summary>The mode of the developer portal Content Security Policy (CSP).</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Support.PortalSettingsCspMode? Mode { get; set; }
        /// <summary>The URLs used by the browser to report CSP violations.</summary>
        string[] ReportUri { get; set; }

    }
}