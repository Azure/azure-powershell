// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Extensions;

    /// <summary>Details of the Backend WebProxy Server to use in the Request to Backend.</summary>
    public partial class BackendProxyContract :
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IBackendProxyContract,
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IBackendProxyContractInternal
    {

        /// <summary>Backing field for <see cref="Password" /> property.</summary>
        private string _password;

        /// <summary>Password to connect to the WebProxy Server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public string Password { get => this._password; set => this._password = value; }

        /// <summary>Backing field for <see cref="Url" /> property.</summary>
        private string _url;

        /// <summary>
        /// WebProxy Server AbsoluteUri property which includes the entire URI stored in the Uri instance, including all fragments
        /// and query strings.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public string Url { get => this._url; set => this._url = value; }

        /// <summary>Backing field for <see cref="Username" /> property.</summary>
        private string _username;

        /// <summary>Username to connect to the WebProxy server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public string Username { get => this._username; set => this._username = value; }

        /// <summary>Creates an new <see cref="BackendProxyContract" /> instance.</summary>
        public BackendProxyContract()
        {

        }
    }
    /// Details of the Backend WebProxy Server to use in the Request to Backend.
    public partial interface IBackendProxyContract :
        Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.IJsonSerializable
    {
        /// <summary>Password to connect to the WebProxy Server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Password to connect to the WebProxy Server",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(string) })]
        string Password { get; set; }
        /// <summary>
        /// WebProxy Server AbsoluteUri property which includes the entire URI stored in the Uri instance, including all fragments
        /// and query strings.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"WebProxy Server AbsoluteUri property which includes the entire URI stored in the Uri instance, including all fragments and query strings.",
        SerializedName = @"url",
        PossibleTypes = new [] { typeof(string) })]
        string Url { get; set; }
        /// <summary>Username to connect to the WebProxy server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Username to connect to the WebProxy server",
        SerializedName = @"username",
        PossibleTypes = new [] { typeof(string) })]
        string Username { get; set; }

    }
    /// Details of the Backend WebProxy Server to use in the Request to Backend.
    internal partial interface IBackendProxyContractInternal

    {
        /// <summary>Password to connect to the WebProxy Server</summary>
        string Password { get; set; }
        /// <summary>
        /// WebProxy Server AbsoluteUri property which includes the entire URI stored in the Uri instance, including all fragments
        /// and query strings.
        /// </summary>
        string Url { get; set; }
        /// <summary>Username to connect to the WebProxy server</summary>
        string Username { get; set; }

    }
}