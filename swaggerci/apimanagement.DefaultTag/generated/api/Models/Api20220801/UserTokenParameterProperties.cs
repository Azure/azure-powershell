// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Extensions;

    /// <summary>Parameters supplied to the Get User Token operation.</summary>
    public partial class UserTokenParameterProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IUserTokenParameterProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IUserTokenParameterPropertiesInternal
    {

        /// <summary>Backing field for <see cref="Expiry" /> property.</summary>
        private global::System.DateTime _expiry;

        /// <summary>
        /// The Expiry time of the Token. Maximum token expiry time is set to 30 days. The date conforms to the following format:
        /// `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public global::System.DateTime Expiry { get => this._expiry; set => this._expiry = value; }

        /// <summary>Backing field for <see cref="KeyType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Api.Support.KeyType _keyType;

        /// <summary>The Key to be used to generate token for user.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Api.Support.KeyType KeyType { get => this._keyType; set => this._keyType = value; }

        /// <summary>Creates an new <see cref="UserTokenParameterProperties" /> instance.</summary>
        public UserTokenParameterProperties()
        {

        }
    }
    /// Parameters supplied to the Get User Token operation.
    public partial interface IUserTokenParameterProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The Expiry time of the Token. Maximum token expiry time is set to 30 days. The date conforms to the following format:
        /// `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The Expiry time of the Token. Maximum token expiry time is set to 30 days. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
        ",
        SerializedName = @"expiry",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime Expiry { get; set; }
        /// <summary>The Key to be used to generate token for user.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The Key to be used to generate token for user.",
        SerializedName = @"keyType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Api.Support.KeyType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Api.Support.KeyType KeyType { get; set; }

    }
    /// Parameters supplied to the Get User Token operation.
    internal partial interface IUserTokenParameterPropertiesInternal

    {
        /// <summary>
        /// The Expiry time of the Token. Maximum token expiry time is set to 30 days. The date conforms to the following format:
        /// `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
        /// </summary>
        global::System.DateTime Expiry { get; set; }
        /// <summary>The Key to be used to generate token for user.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Support.KeyType KeyType { get; set; }

    }
}