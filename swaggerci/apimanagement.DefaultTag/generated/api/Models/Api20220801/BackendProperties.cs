// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Extensions;

    /// <summary>Properties specific to the Backend Type.</summary>
    public partial class BackendProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IBackendProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IBackendPropertiesInternal
    {

        /// <summary>Internal Acessors for ServiceFabricCluster</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IBackendServiceFabricClusterProperties Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IBackendPropertiesInternal.ServiceFabricCluster { get => (this._serviceFabricCluster = this._serviceFabricCluster ?? new Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.BackendServiceFabricClusterProperties()); set { {_serviceFabricCluster = value;} } }

        /// <summary>Backing field for <see cref="ServiceFabricCluster" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IBackendServiceFabricClusterProperties _serviceFabricCluster;

        /// <summary>Backend Service Fabric Cluster Properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IBackendServiceFabricClusterProperties ServiceFabricCluster { get => (this._serviceFabricCluster = this._serviceFabricCluster ?? new Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.BackendServiceFabricClusterProperties()); set => this._serviceFabricCluster = value; }

        /// <summary>The client certificate id for the management endpoint.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string ServiceFabricClusterClientCertificateId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IBackendServiceFabricClusterPropertiesInternal)ServiceFabricCluster).ClientCertificateId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IBackendServiceFabricClusterPropertiesInternal)ServiceFabricCluster).ClientCertificateId = value ?? null; }

        /// <summary>
        /// The client certificate thumbprint for the management endpoint. Will be ignored if certificatesIds are provided
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string ServiceFabricClusterClientCertificatethumbprint { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IBackendServiceFabricClusterPropertiesInternal)ServiceFabricCluster).ClientCertificatethumbprint; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IBackendServiceFabricClusterPropertiesInternal)ServiceFabricCluster).ClientCertificatethumbprint = value ?? null; }

        /// <summary>The cluster management endpoint.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string[] ServiceFabricClusterManagementEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IBackendServiceFabricClusterPropertiesInternal)ServiceFabricCluster).ManagementEndpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IBackendServiceFabricClusterPropertiesInternal)ServiceFabricCluster).ManagementEndpoint = value ?? null /* arrayOf */; }

        /// <summary>Maximum number of retries while attempting resolve the partition.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public int? ServiceFabricClusterMaxPartitionResolutionRetry { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IBackendServiceFabricClusterPropertiesInternal)ServiceFabricCluster).MaxPartitionResolutionRetry; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IBackendServiceFabricClusterPropertiesInternal)ServiceFabricCluster).MaxPartitionResolutionRetry = value ?? default(int); }

        /// <summary>
        /// Thumbprints of certificates cluster management service uses for tls communication
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string[] ServiceFabricClusterServerCertificateThumbprint { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IBackendServiceFabricClusterPropertiesInternal)ServiceFabricCluster).ServerCertificateThumbprint; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IBackendServiceFabricClusterPropertiesInternal)ServiceFabricCluster).ServerCertificateThumbprint = value ?? null /* arrayOf */; }

        /// <summary>Server X509 Certificate Names Collection</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IX509CertificateName[] ServiceFabricClusterServerX509Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IBackendServiceFabricClusterPropertiesInternal)ServiceFabricCluster).ServerX509Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IBackendServiceFabricClusterPropertiesInternal)ServiceFabricCluster).ServerX509Name = value ?? null /* arrayOf */; }

        /// <summary>Creates an new <see cref="BackendProperties" /> instance.</summary>
        public BackendProperties()
        {

        }
    }
    /// Properties specific to the Backend Type.
    public partial interface IBackendProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.IJsonSerializable
    {
        /// <summary>The client certificate id for the management endpoint.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The client certificate id for the management endpoint.",
        SerializedName = @"clientCertificateId",
        PossibleTypes = new [] { typeof(string) })]
        string ServiceFabricClusterClientCertificateId { get; set; }
        /// <summary>
        /// The client certificate thumbprint for the management endpoint. Will be ignored if certificatesIds are provided
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The client certificate thumbprint for the management endpoint. Will be ignored if certificatesIds are provided",
        SerializedName = @"clientCertificatethumbprint",
        PossibleTypes = new [] { typeof(string) })]
        string ServiceFabricClusterClientCertificatethumbprint { get; set; }
        /// <summary>The cluster management endpoint.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The cluster management endpoint.",
        SerializedName = @"managementEndpoints",
        PossibleTypes = new [] { typeof(string) })]
        string[] ServiceFabricClusterManagementEndpoint { get; set; }
        /// <summary>Maximum number of retries while attempting resolve the partition.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Maximum number of retries while attempting resolve the partition.",
        SerializedName = @"maxPartitionResolutionRetries",
        PossibleTypes = new [] { typeof(int) })]
        int? ServiceFabricClusterMaxPartitionResolutionRetry { get; set; }
        /// <summary>
        /// Thumbprints of certificates cluster management service uses for tls communication
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Thumbprints of certificates cluster management service uses for tls communication",
        SerializedName = @"serverCertificateThumbprints",
        PossibleTypes = new [] { typeof(string) })]
        string[] ServiceFabricClusterServerCertificateThumbprint { get; set; }
        /// <summary>Server X509 Certificate Names Collection</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Server X509 Certificate Names Collection",
        SerializedName = @"serverX509Names",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IX509CertificateName) })]
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IX509CertificateName[] ServiceFabricClusterServerX509Name { get; set; }

    }
    /// Properties specific to the Backend Type.
    internal partial interface IBackendPropertiesInternal

    {
        /// <summary>Backend Service Fabric Cluster Properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IBackendServiceFabricClusterProperties ServiceFabricCluster { get; set; }
        /// <summary>The client certificate id for the management endpoint.</summary>
        string ServiceFabricClusterClientCertificateId { get; set; }
        /// <summary>
        /// The client certificate thumbprint for the management endpoint. Will be ignored if certificatesIds are provided
        /// </summary>
        string ServiceFabricClusterClientCertificatethumbprint { get; set; }
        /// <summary>The cluster management endpoint.</summary>
        string[] ServiceFabricClusterManagementEndpoint { get; set; }
        /// <summary>Maximum number of retries while attempting resolve the partition.</summary>
        int? ServiceFabricClusterMaxPartitionResolutionRetry { get; set; }
        /// <summary>
        /// Thumbprints of certificates cluster management service uses for tls communication
        /// </summary>
        string[] ServiceFabricClusterServerCertificateThumbprint { get; set; }
        /// <summary>Server X509 Certificate Names Collection</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IX509CertificateName[] ServiceFabricClusterServerX509Name { get; set; }

    }
}