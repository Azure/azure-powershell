// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Extensions;

    /// <summary>Report data.</summary>
    public partial class ReportRecordContract
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IReportRecordContract.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IReportRecordContract.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IReportRecordContract FromJson(Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonObject json ? new ReportRecordContract(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonObject into a new instance of <see cref="ReportRecordContract" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal ReportRecordContract(Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_name = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonString>("name"), out var __jsonName) ? (string)__jsonName : (string)Name;}
            {_timestamp = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonString>("timestamp"), out var __jsonTimestamp) ? global::System.DateTime.TryParse((string)__jsonTimestamp, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonTimestampValue) ? __jsonTimestampValue : Timestamp : Timestamp;}
            {_interval = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonString>("interval"), out var __jsonInterval) ? (string)__jsonInterval : (string)Interval;}
            {_country = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonString>("country"), out var __jsonCountry) ? (string)__jsonCountry : (string)Country;}
            {_region = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonString>("region"), out var __jsonRegion) ? (string)__jsonRegion : (string)Region;}
            {_zip = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonString>("zip"), out var __jsonZip) ? (string)__jsonZip : (string)Zip;}
            {_userId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonString>("userId"), out var __jsonUserId) ? (string)__jsonUserId : (string)UserId;}
            {_productId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonString>("productId"), out var __jsonProductId) ? (string)__jsonProductId : (string)ProductId;}
            {_apiId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonString>("apiId"), out var __jsonApiId) ? (string)__jsonApiId : (string)ApiId;}
            {_operationId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonString>("operationId"), out var __jsonOperationId) ? (string)__jsonOperationId : (string)OperationId;}
            {_apiRegion = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonString>("apiRegion"), out var __jsonApiRegion) ? (string)__jsonApiRegion : (string)ApiRegion;}
            {_subscriptionId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonString>("subscriptionId"), out var __jsonSubscriptionId) ? (string)__jsonSubscriptionId : (string)SubscriptionId;}
            {_callCountSuccess = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNumber>("callCountSuccess"), out var __jsonCallCountSuccess) ? (int?)__jsonCallCountSuccess : CallCountSuccess;}
            {_callCountBlocked = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNumber>("callCountBlocked"), out var __jsonCallCountBlocked) ? (int?)__jsonCallCountBlocked : CallCountBlocked;}
            {_callCountFailed = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNumber>("callCountFailed"), out var __jsonCallCountFailed) ? (int?)__jsonCallCountFailed : CallCountFailed;}
            {_callCountOther = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNumber>("callCountOther"), out var __jsonCallCountOther) ? (int?)__jsonCallCountOther : CallCountOther;}
            {_callCountTotal = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNumber>("callCountTotal"), out var __jsonCallCountTotal) ? (int?)__jsonCallCountTotal : CallCountTotal;}
            {_bandwidth = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNumber>("bandwidth"), out var __jsonBandwidth) ? (long?)__jsonBandwidth : Bandwidth;}
            {_cacheHitCount = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNumber>("cacheHitCount"), out var __jsonCacheHitCount) ? (int?)__jsonCacheHitCount : CacheHitCount;}
            {_cacheMissCount = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNumber>("cacheMissCount"), out var __jsonCacheMissCount) ? (int?)__jsonCacheMissCount : CacheMissCount;}
            {_apiTimeAvg = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNumber>("apiTimeAvg"), out var __jsonApiTimeAvg) ? (double?)__jsonApiTimeAvg : ApiTimeAvg;}
            {_apiTimeMin = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNumber>("apiTimeMin"), out var __jsonApiTimeMin) ? (double?)__jsonApiTimeMin : ApiTimeMin;}
            {_apiTimeMax = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNumber>("apiTimeMax"), out var __jsonApiTimeMax) ? (double?)__jsonApiTimeMax : ApiTimeMax;}
            {_serviceTimeAvg = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNumber>("serviceTimeAvg"), out var __jsonServiceTimeAvg) ? (double?)__jsonServiceTimeAvg : ServiceTimeAvg;}
            {_serviceTimeMin = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNumber>("serviceTimeMin"), out var __jsonServiceTimeMin) ? (double?)__jsonServiceTimeMin : ServiceTimeMin;}
            {_serviceTimeMax = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNumber>("serviceTimeMax"), out var __jsonServiceTimeMax) ? (double?)__jsonServiceTimeMax : ServiceTimeMax;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="ReportRecordContract" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="ReportRecordContract" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != (((object)this._name)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonString(this._name.ToString()) : null, "name" ,container.Add );
            AddIf( null != this._timestamp ? (Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonString(this._timestamp?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "timestamp" ,container.Add );
            AddIf( null != (((object)this._interval)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonString(this._interval.ToString()) : null, "interval" ,container.Add );
            AddIf( null != (((object)this._country)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonString(this._country.ToString()) : null, "country" ,container.Add );
            AddIf( null != (((object)this._region)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonString(this._region.ToString()) : null, "region" ,container.Add );
            AddIf( null != (((object)this._zip)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonString(this._zip.ToString()) : null, "zip" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._userId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonString(this._userId.ToString()) : null, "userId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._productId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonString(this._productId.ToString()) : null, "productId" ,container.Add );
            }
            AddIf( null != (((object)this._apiId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonString(this._apiId.ToString()) : null, "apiId" ,container.Add );
            AddIf( null != (((object)this._operationId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonString(this._operationId.ToString()) : null, "operationId" ,container.Add );
            AddIf( null != (((object)this._apiRegion)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonString(this._apiRegion.ToString()) : null, "apiRegion" ,container.Add );
            AddIf( null != (((object)this._subscriptionId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonString(this._subscriptionId.ToString()) : null, "subscriptionId" ,container.Add );
            AddIf( null != this._callCountSuccess ? (Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNumber((int)this._callCountSuccess) : null, "callCountSuccess" ,container.Add );
            AddIf( null != this._callCountBlocked ? (Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNumber((int)this._callCountBlocked) : null, "callCountBlocked" ,container.Add );
            AddIf( null != this._callCountFailed ? (Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNumber((int)this._callCountFailed) : null, "callCountFailed" ,container.Add );
            AddIf( null != this._callCountOther ? (Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNumber((int)this._callCountOther) : null, "callCountOther" ,container.Add );
            AddIf( null != this._callCountTotal ? (Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNumber((int)this._callCountTotal) : null, "callCountTotal" ,container.Add );
            AddIf( null != this._bandwidth ? (Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNumber((long)this._bandwidth) : null, "bandwidth" ,container.Add );
            AddIf( null != this._cacheHitCount ? (Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNumber((int)this._cacheHitCount) : null, "cacheHitCount" ,container.Add );
            AddIf( null != this._cacheMissCount ? (Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNumber((int)this._cacheMissCount) : null, "cacheMissCount" ,container.Add );
            AddIf( null != this._apiTimeAvg ? (Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNumber((double)this._apiTimeAvg) : null, "apiTimeAvg" ,container.Add );
            AddIf( null != this._apiTimeMin ? (Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNumber((double)this._apiTimeMin) : null, "apiTimeMin" ,container.Add );
            AddIf( null != this._apiTimeMax ? (Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNumber((double)this._apiTimeMax) : null, "apiTimeMax" ,container.Add );
            AddIf( null != this._serviceTimeAvg ? (Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNumber((double)this._serviceTimeAvg) : null, "serviceTimeAvg" ,container.Add );
            AddIf( null != this._serviceTimeMin ? (Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNumber((double)this._serviceTimeMin) : null, "serviceTimeMin" ,container.Add );
            AddIf( null != this._serviceTimeMax ? (Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Json.JsonNumber((double)this._serviceTimeMax) : null, "serviceTimeMax" ,container.Add );
            AfterToJson(ref container);
            return container;
        }
    }
}