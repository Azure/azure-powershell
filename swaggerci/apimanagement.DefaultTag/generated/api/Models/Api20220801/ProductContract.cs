// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Extensions;

    /// <summary>Product details.</summary>
    public partial class ProductContract :
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IProductContract,
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IProductContractInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.IValidates,
        Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.IHeaderSerializable
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResource" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.Resource();

        /// <summary>
        /// whether subscription approval is required. If false, new subscriptions will be approved automatically enabling developers
        /// to call the product’s APIs immediately after subscribing. If true, administrators must manually approve the subscription
        /// before the developer can any of the product’s APIs. Can be present only if subscriptionRequired property is present and
        /// has a value of false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public bool? ApprovalRequired { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IProductEntityBaseParametersInternal)Property).ApprovalRequired; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IProductEntityBaseParametersInternal)Property).ApprovalRequired = value ?? default(bool); }

        /// <summary>Product description. May include HTML formatting tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string Description { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IProductEntityBaseParametersInternal)Property).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IProductEntityBaseParametersInternal)Property).Description = value ?? null; }

        /// <summary>Product name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string DisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IProductContractPropertiesInternal)Property).DisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IProductContractPropertiesInternal)Property).DisplayName = value ?? null; }

        /// <summary>Backing field for <see cref="ETag" /> property.</summary>
        private string _eTag;

        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public string ETag { get => this._eTag; set => this._eTag = value; }

        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal)__resource).Id; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal)__resource).Type = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IProductContractProperties Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IProductContractInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.ProductContractProperties()); set { {_property = value;} } }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal)__resource).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IProductContractProperties _property;

        /// <summary>Product entity contract properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IProductContractProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.ProductContractProperties()); set => this._property = value; }

        /// <summary>
        /// whether product is published or not. Published products are discoverable by users of developer portal. Non published products
        /// are visible only to administrators. Default state of Product is notPublished.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Api.Support.ProductState? State { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IProductEntityBaseParametersInternal)Property).State; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IProductEntityBaseParametersInternal)Property).State = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Api.Support.ProductState)""); }

        /// <summary>
        /// Whether a product subscription is required for accessing APIs included in this product. If true, the product is referred
        /// to as "protected" and a valid subscription key is required for a request to an API included in the product to succeed.
        /// If false, the product is referred to as "open" and requests to an API included in the product can be made without a subscription
        /// key. If property is omitted when creating a new product it's value is assumed to be true.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public bool? SubscriptionRequired { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IProductEntityBaseParametersInternal)Property).SubscriptionRequired; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IProductEntityBaseParametersInternal)Property).SubscriptionRequired = value ?? default(bool); }

        /// <summary>
        /// Whether the number of subscriptions a user can have to this product at the same time. Set to null or omit to allow unlimited
        /// per user subscriptions. Can be present only if subscriptionRequired property is present and has a value of false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public int? SubscriptionsLimit { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IProductEntityBaseParametersInternal)Property).SubscriptionsLimit; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IProductEntityBaseParametersInternal)Property).SubscriptionsLimit = value ?? default(int); }

        /// <summary>
        /// Product terms of use. Developers trying to subscribe to the product will be presented and required to accept these terms
        /// before they can complete the subscription process.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string Term { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IProductEntityBaseParametersInternal)Property).Term; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IProductEntityBaseParametersInternal)Property).Term = value ?? null; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal)__resource).Type; }

        /// <param name="headers"></param>
        void Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.IHeaderSerializable.ReadHeaders(global::System.Net.Http.Headers.HttpResponseHeaders headers)
        {
            if (headers.TryGetValues("ETag", out var __eTagHeader0))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IProductContractInternal)this).ETag = System.Linq.Enumerable.FirstOrDefault(__eTagHeader0) is string __headerETagHeader0 ? __headerETagHeader0 : (string)null;
            }
        }

        /// <summary>Creates an new <see cref="ProductContract" /> instance.</summary>
        public ProductContract()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// Product details.
    public partial interface IProductContract :
        Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResource
    {
        /// <summary>
        /// whether subscription approval is required. If false, new subscriptions will be approved automatically enabling developers
        /// to call the product’s APIs immediately after subscribing. If true, administrators must manually approve the subscription
        /// before the developer can any of the product’s APIs. Can be present only if subscriptionRequired property is present and
        /// has a value of false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"whether subscription approval is required. If false, new subscriptions will be approved automatically enabling developers to call the product’s APIs immediately after subscribing. If true, administrators must manually approve the subscription before the developer can any of the product’s APIs. Can be present only if subscriptionRequired property is present and has a value of false.",
        SerializedName = @"approvalRequired",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ApprovalRequired { get; set; }
        /// <summary>Product description. May include HTML formatting tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Product description. May include HTML formatting tags.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>Product name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Product name.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"ETag",
        PossibleTypes = new [] { typeof(string) })]
        string ETag { get; set; }
        /// <summary>
        /// whether product is published or not. Published products are discoverable by users of developer portal. Non published products
        /// are visible only to administrators. Default state of Product is notPublished.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"whether product is published or not. Published products are discoverable by users of developer portal. Non published products are visible only to administrators. Default state of Product is notPublished.",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Api.Support.ProductState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Api.Support.ProductState? State { get; set; }
        /// <summary>
        /// Whether a product subscription is required for accessing APIs included in this product. If true, the product is referred
        /// to as "protected" and a valid subscription key is required for a request to an API included in the product to succeed.
        /// If false, the product is referred to as "open" and requests to an API included in the product can be made without a subscription
        /// key. If property is omitted when creating a new product it's value is assumed to be true.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether a product subscription is required for accessing APIs included in this product. If true, the product is referred to as ""protected"" and a valid subscription key is required for a request to an API included in the product to succeed. If false, the product is referred to as ""open"" and requests to an API included in the product can be made without a subscription key. If property is omitted when creating a new product it's value is assumed to be true.",
        SerializedName = @"subscriptionRequired",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SubscriptionRequired { get; set; }
        /// <summary>
        /// Whether the number of subscriptions a user can have to this product at the same time. Set to null or omit to allow unlimited
        /// per user subscriptions. Can be present only if subscriptionRequired property is present and has a value of false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether the number of subscriptions a user can have to this product at the same time. Set to null or omit to allow unlimited per user subscriptions. Can be present only if subscriptionRequired property is present and has a value of false.",
        SerializedName = @"subscriptionsLimit",
        PossibleTypes = new [] { typeof(int) })]
        int? SubscriptionsLimit { get; set; }
        /// <summary>
        /// Product terms of use. Developers trying to subscribe to the product will be presented and required to accept these terms
        /// before they can complete the subscription process.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Product terms of use. Developers trying to subscribe to the product will be presented and required to accept these terms before they can complete the subscription process.",
        SerializedName = @"terms",
        PossibleTypes = new [] { typeof(string) })]
        string Term { get; set; }

    }
    /// Product details.
    internal partial interface IProductContractInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal
    {
        /// <summary>
        /// whether subscription approval is required. If false, new subscriptions will be approved automatically enabling developers
        /// to call the product’s APIs immediately after subscribing. If true, administrators must manually approve the subscription
        /// before the developer can any of the product’s APIs. Can be present only if subscriptionRequired property is present and
        /// has a value of false.
        /// </summary>
        bool? ApprovalRequired { get; set; }
        /// <summary>Product description. May include HTML formatting tags.</summary>
        string Description { get; set; }
        /// <summary>Product name.</summary>
        string DisplayName { get; set; }

        string ETag { get; set; }
        /// <summary>Product entity contract properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IProductContractProperties Property { get; set; }
        /// <summary>
        /// whether product is published or not. Published products are discoverable by users of developer portal. Non published products
        /// are visible only to administrators. Default state of Product is notPublished.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Support.ProductState? State { get; set; }
        /// <summary>
        /// Whether a product subscription is required for accessing APIs included in this product. If true, the product is referred
        /// to as "protected" and a valid subscription key is required for a request to an API included in the product to succeed.
        /// If false, the product is referred to as "open" and requests to an API included in the product can be made without a subscription
        /// key. If property is omitted when creating a new product it's value is assumed to be true.
        /// </summary>
        bool? SubscriptionRequired { get; set; }
        /// <summary>
        /// Whether the number of subscriptions a user can have to this product at the same time. Set to null or omit to allow unlimited
        /// per user subscriptions. Can be present only if subscriptionRequired property is present and has a value of false.
        /// </summary>
        int? SubscriptionsLimit { get; set; }
        /// <summary>
        /// Product terms of use. Developers trying to subscribe to the product will be presented and required to accept these terms
        /// before they can complete the subscription process.
        /// </summary>
        string Term { get; set; }

    }
}