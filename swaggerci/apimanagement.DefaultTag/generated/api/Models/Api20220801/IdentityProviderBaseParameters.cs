// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Extensions;

    /// <summary>Identity Provider Base Parameter Properties.</summary>
    public partial class IdentityProviderBaseParameters :
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IIdentityProviderBaseParameters,
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IIdentityProviderBaseParametersInternal
    {

        /// <summary>Backing field for <see cref="AllowedTenant" /> property.</summary>
        private string[] _allowedTenant;

        /// <summary>List of Allowed Tenants when configuring Azure Active Directory login.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public string[] AllowedTenant { get => this._allowedTenant; set => this._allowedTenant = value; }

        /// <summary>Backing field for <see cref="Authority" /> property.</summary>
        private string _authority;

        /// <summary>OpenID Connect discovery endpoint hostname for AAD or AAD B2C.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public string Authority { get => this._authority; set => this._authority = value; }

        /// <summary>Backing field for <see cref="ClientLibrary" /> property.</summary>
        private string _clientLibrary;

        /// <summary>
        /// The client library to be used in the developer portal. Only applies to AAD and AAD B2C Identity Provider.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public string ClientLibrary { get => this._clientLibrary; set => this._clientLibrary = value; }

        /// <summary>Backing field for <see cref="PasswordResetPolicyName" /> property.</summary>
        private string _passwordResetPolicyName;

        /// <summary>Password Reset Policy Name. Only applies to AAD B2C Identity Provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public string PasswordResetPolicyName { get => this._passwordResetPolicyName; set => this._passwordResetPolicyName = value; }

        /// <summary>Backing field for <see cref="ProfileEditingPolicyName" /> property.</summary>
        private string _profileEditingPolicyName;

        /// <summary>Profile Editing Policy Name. Only applies to AAD B2C Identity Provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public string ProfileEditingPolicyName { get => this._profileEditingPolicyName; set => this._profileEditingPolicyName = value; }

        /// <summary>Backing field for <see cref="SigninPolicyName" /> property.</summary>
        private string _signinPolicyName;

        /// <summary>Signin Policy Name. Only applies to AAD B2C Identity Provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public string SigninPolicyName { get => this._signinPolicyName; set => this._signinPolicyName = value; }

        /// <summary>Backing field for <see cref="SigninTenant" /> property.</summary>
        private string _signinTenant;

        /// <summary>The TenantId to use instead of Common when logging into Active Directory</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public string SigninTenant { get => this._signinTenant; set => this._signinTenant = value; }

        /// <summary>Backing field for <see cref="SignupPolicyName" /> property.</summary>
        private string _signupPolicyName;

        /// <summary>Signup Policy Name. Only applies to AAD B2C Identity Provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public string SignupPolicyName { get => this._signupPolicyName; set => this._signupPolicyName = value; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Api.Support.IdentityProviderType? _type;

        /// <summary>Identity Provider Type identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Api.Support.IdentityProviderType? Type { get => this._type; set => this._type = value; }

        /// <summary>Creates an new <see cref="IdentityProviderBaseParameters" /> instance.</summary>
        public IdentityProviderBaseParameters()
        {

        }
    }
    /// Identity Provider Base Parameter Properties.
    public partial interface IIdentityProviderBaseParameters :
        Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.IJsonSerializable
    {
        /// <summary>List of Allowed Tenants when configuring Azure Active Directory login.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of Allowed Tenants when configuring Azure Active Directory login.",
        SerializedName = @"allowedTenants",
        PossibleTypes = new [] { typeof(string) })]
        string[] AllowedTenant { get; set; }
        /// <summary>OpenID Connect discovery endpoint hostname for AAD or AAD B2C.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"OpenID Connect discovery endpoint hostname for AAD or AAD B2C.",
        SerializedName = @"authority",
        PossibleTypes = new [] { typeof(string) })]
        string Authority { get; set; }
        /// <summary>
        /// The client library to be used in the developer portal. Only applies to AAD and AAD B2C Identity Provider.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The client library to be used in the developer portal. Only applies to AAD and AAD B2C Identity Provider.",
        SerializedName = @"clientLibrary",
        PossibleTypes = new [] { typeof(string) })]
        string ClientLibrary { get; set; }
        /// <summary>Password Reset Policy Name. Only applies to AAD B2C Identity Provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Password Reset Policy Name. Only applies to AAD B2C Identity Provider.",
        SerializedName = @"passwordResetPolicyName",
        PossibleTypes = new [] { typeof(string) })]
        string PasswordResetPolicyName { get; set; }
        /// <summary>Profile Editing Policy Name. Only applies to AAD B2C Identity Provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Profile Editing Policy Name. Only applies to AAD B2C Identity Provider.",
        SerializedName = @"profileEditingPolicyName",
        PossibleTypes = new [] { typeof(string) })]
        string ProfileEditingPolicyName { get; set; }
        /// <summary>Signin Policy Name. Only applies to AAD B2C Identity Provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Signin Policy Name. Only applies to AAD B2C Identity Provider.",
        SerializedName = @"signinPolicyName",
        PossibleTypes = new [] { typeof(string) })]
        string SigninPolicyName { get; set; }
        /// <summary>The TenantId to use instead of Common when logging into Active Directory</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The TenantId to use instead of Common when logging into Active Directory",
        SerializedName = @"signinTenant",
        PossibleTypes = new [] { typeof(string) })]
        string SigninTenant { get; set; }
        /// <summary>Signup Policy Name. Only applies to AAD B2C Identity Provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Signup Policy Name. Only applies to AAD B2C Identity Provider.",
        SerializedName = @"signupPolicyName",
        PossibleTypes = new [] { typeof(string) })]
        string SignupPolicyName { get; set; }
        /// <summary>Identity Provider Type identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Identity Provider Type identifier.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Api.Support.IdentityProviderType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Api.Support.IdentityProviderType? Type { get; set; }

    }
    /// Identity Provider Base Parameter Properties.
    internal partial interface IIdentityProviderBaseParametersInternal

    {
        /// <summary>List of Allowed Tenants when configuring Azure Active Directory login.</summary>
        string[] AllowedTenant { get; set; }
        /// <summary>OpenID Connect discovery endpoint hostname for AAD or AAD B2C.</summary>
        string Authority { get; set; }
        /// <summary>
        /// The client library to be used in the developer portal. Only applies to AAD and AAD B2C Identity Provider.
        /// </summary>
        string ClientLibrary { get; set; }
        /// <summary>Password Reset Policy Name. Only applies to AAD B2C Identity Provider.</summary>
        string PasswordResetPolicyName { get; set; }
        /// <summary>Profile Editing Policy Name. Only applies to AAD B2C Identity Provider.</summary>
        string ProfileEditingPolicyName { get; set; }
        /// <summary>Signin Policy Name. Only applies to AAD B2C Identity Provider.</summary>
        string SigninPolicyName { get; set; }
        /// <summary>The TenantId to use instead of Common when logging into Active Directory</summary>
        string SigninTenant { get; set; }
        /// <summary>Signup Policy Name. Only applies to AAD B2C Identity Provider.</summary>
        string SignupPolicyName { get; set; }
        /// <summary>Identity Provider Type identifier.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Support.IdentityProviderType? Type { get; set; }

    }
}