// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Extensions;

    /// <summary>The developer portal configuration contract.</summary>
    public partial class PortalConfigContract :
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigContract,
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigContractInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.IValidates,
        Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.IHeaderSerializable
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResource" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.Resource();

        /// <summary>Allowed origins, e.g. `https://trusted.com`.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string[] CorAllowedOrigin { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigPropertiesInternal)Property).CorAllowedOrigin; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigPropertiesInternal)Property).CorAllowedOrigin = value ?? null /* arrayOf */; }

        /// <summary>Allowed sources, e.g. `*.trusted.com`, `trusted.com`, `https://`.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string[] CspAllowedSource { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigPropertiesInternal)Property).CspAllowedSource; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigPropertiesInternal)Property).CspAllowedSource = value ?? null /* arrayOf */; }

        /// <summary>The mode of the developer portal Content Security Policy (CSP).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Api.Support.PortalSettingsCspMode? CspMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigPropertiesInternal)Property).CspMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigPropertiesInternal)Property).CspMode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Api.Support.PortalSettingsCspMode)""); }

        /// <summary>The URLs used by the browser to report CSP violations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string[] CspReportUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigPropertiesInternal)Property).CspReportUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigPropertiesInternal)Property).CspReportUri = value ?? null /* arrayOf */; }

        /// <summary>Enable or disable delegation for user registration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public bool? DelegationDelegateRegistration { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigPropertiesInternal)Property).DelegationDelegateRegistration; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigPropertiesInternal)Property).DelegationDelegateRegistration = value ?? default(bool); }

        /// <summary>Enable or disable delegation for product subscriptions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public bool? DelegationDelegateSubscription { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigPropertiesInternal)Property).DelegationDelegateSubscription; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigPropertiesInternal)Property).DelegationDelegateSubscription = value ?? default(bool); }

        /// <summary>A delegation endpoint URL.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string DelegationUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigPropertiesInternal)Property).DelegationUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigPropertiesInternal)Property).DelegationUrl = value ?? null; }

        /// <summary>
        /// A base64-encoded validation key to ensure requests originate from Azure API Management service.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string DelegationValidationKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigPropertiesInternal)Property).DelegationValidationKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigPropertiesInternal)Property).DelegationValidationKey = value ?? null; }

        /// <summary>Backing field for <see cref="ETag" /> property.</summary>
        private string _eTag;

        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public string ETag { get => this._eTag; set => this._eTag = value; }

        /// <summary>Enable or disable Basic authentication method.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public bool? EnableBasicAuth { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigPropertiesInternal)Property).EnableBasicAuth; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigPropertiesInternal)Property).EnableBasicAuth = value ?? default(bool); }

        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal)__resource).Id; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal)__resource).Type = value; }

        /// <summary>Internal Acessors for Cor</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigCorsProperties Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigContractInternal.Cor { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigPropertiesInternal)Property).Cor; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigPropertiesInternal)Property).Cor = value; }

        /// <summary>Internal Acessors for Csp</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigCspProperties Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigContractInternal.Csp { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigPropertiesInternal)Property).Csp; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigPropertiesInternal)Property).Csp = value; }

        /// <summary>Internal Acessors for Delegation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigDelegationProperties Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigContractInternal.Delegation { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigPropertiesInternal)Property).Delegation; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigPropertiesInternal)Property).Delegation = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigProperties Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigContractInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.PortalConfigProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for Signin</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigPropertiesSignin Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigContractInternal.Signin { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigPropertiesInternal)Property).Signin; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigPropertiesInternal)Property).Signin = value; }

        /// <summary>Internal Acessors for Signup</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigPropertiesSignup Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigContractInternal.Signup { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigPropertiesInternal)Property).Signup; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigPropertiesInternal)Property).Signup = value; }

        /// <summary>Internal Acessors for SignupTermsOfService</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigTermsOfServiceProperties Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigContractInternal.SignupTermsOfService { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigPropertiesInternal)Property).SignupTermsOfService; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigPropertiesInternal)Property).SignupTermsOfService = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal)__resource).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigProperties _property;

        /// <summary>The developer portal configuration contract properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.PortalConfigProperties()); set => this._property = value; }

        /// <summary>Redirect anonymous users to the sign-in page.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public bool? SigninRequire { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigPropertiesInternal)Property).SigninRequire; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigPropertiesInternal)Property).SigninRequire = value ?? default(bool); }

        /// <summary>Ask user for consent to the terms of service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public bool? TermOfServiceRequireConsent { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigPropertiesInternal)Property).TermOfServiceRequireConsent; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigPropertiesInternal)Property).TermOfServiceRequireConsent = value ?? default(bool); }

        /// <summary>A terms of service text.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string TermOfServiceText { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigPropertiesInternal)Property).TermOfServiceText; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigPropertiesInternal)Property).TermOfServiceText = value ?? null; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal)__resource).Type; }

        /// <param name="headers"></param>
        void Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.IHeaderSerializable.ReadHeaders(global::System.Net.Http.Headers.HttpResponseHeaders headers)
        {
            if (headers.TryGetValues("ETag", out var __eTagHeader0))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigContractInternal)this).ETag = System.Linq.Enumerable.FirstOrDefault(__eTagHeader0) is string __headerETagHeader0 ? __headerETagHeader0 : (string)null;
            }
        }

        /// <summary>Creates an new <see cref="PortalConfigContract" /> instance.</summary>
        public PortalConfigContract()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// The developer portal configuration contract.
    public partial interface IPortalConfigContract :
        Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResource
    {
        /// <summary>Allowed origins, e.g. `https://trusted.com`.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Allowed origins, e.g. `https://trusted.com`.",
        SerializedName = @"allowedOrigins",
        PossibleTypes = new [] { typeof(string) })]
        string[] CorAllowedOrigin { get; set; }
        /// <summary>Allowed sources, e.g. `*.trusted.com`, `trusted.com`, `https://`.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Allowed sources, e.g. `*.trusted.com`, `trusted.com`, `https://`.",
        SerializedName = @"allowedSources",
        PossibleTypes = new [] { typeof(string) })]
        string[] CspAllowedSource { get; set; }
        /// <summary>The mode of the developer portal Content Security Policy (CSP).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The mode of the developer portal Content Security Policy (CSP).",
        SerializedName = @"mode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Api.Support.PortalSettingsCspMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.Api.Support.PortalSettingsCspMode? CspMode { get; set; }
        /// <summary>The URLs used by the browser to report CSP violations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The URLs used by the browser to report CSP violations.",
        SerializedName = @"reportUri",
        PossibleTypes = new [] { typeof(string) })]
        string[] CspReportUri { get; set; }
        /// <summary>Enable or disable delegation for user registration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enable or disable delegation for user registration.",
        SerializedName = @"delegateRegistration",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DelegationDelegateRegistration { get; set; }
        /// <summary>Enable or disable delegation for product subscriptions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enable or disable delegation for product subscriptions.",
        SerializedName = @"delegateSubscription",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DelegationDelegateSubscription { get; set; }
        /// <summary>A delegation endpoint URL.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A delegation endpoint URL.",
        SerializedName = @"delegationUrl",
        PossibleTypes = new [] { typeof(string) })]
        string DelegationUrl { get; set; }
        /// <summary>
        /// A base64-encoded validation key to ensure requests originate from Azure API Management service.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A base64-encoded validation key to ensure requests originate from Azure API Management service.",
        SerializedName = @"validationKey",
        PossibleTypes = new [] { typeof(string) })]
        string DelegationValidationKey { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"ETag",
        PossibleTypes = new [] { typeof(string) })]
        string ETag { get; set; }
        /// <summary>Enable or disable Basic authentication method.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enable or disable Basic authentication method.",
        SerializedName = @"enableBasicAuth",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableBasicAuth { get; set; }
        /// <summary>Redirect anonymous users to the sign-in page.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Redirect anonymous users to the sign-in page.",
        SerializedName = @"require",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SigninRequire { get; set; }
        /// <summary>Ask user for consent to the terms of service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Ask user for consent to the terms of service.",
        SerializedName = @"requireConsent",
        PossibleTypes = new [] { typeof(bool) })]
        bool? TermOfServiceRequireConsent { get; set; }
        /// <summary>A terms of service text.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A terms of service text.",
        SerializedName = @"text",
        PossibleTypes = new [] { typeof(string) })]
        string TermOfServiceText { get; set; }

    }
    /// The developer portal configuration contract.
    internal partial interface IPortalConfigContractInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20.IResourceInternal
    {
        /// <summary>The developer portal Cross-Origin Resource Sharing (CORS) settings.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigCorsProperties Cor { get; set; }
        /// <summary>Allowed origins, e.g. `https://trusted.com`.</summary>
        string[] CorAllowedOrigin { get; set; }
        /// <summary>The developer portal Content Security Policy (CSP) settings.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigCspProperties Csp { get; set; }
        /// <summary>Allowed sources, e.g. `*.trusted.com`, `trusted.com`, `https://`.</summary>
        string[] CspAllowedSource { get; set; }
        /// <summary>The mode of the developer portal Content Security Policy (CSP).</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Support.PortalSettingsCspMode? CspMode { get; set; }
        /// <summary>The URLs used by the browser to report CSP violations.</summary>
        string[] CspReportUri { get; set; }
        /// <summary>The developer portal delegation settings.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigDelegationProperties Delegation { get; set; }
        /// <summary>Enable or disable delegation for user registration.</summary>
        bool? DelegationDelegateRegistration { get; set; }
        /// <summary>Enable or disable delegation for product subscriptions.</summary>
        bool? DelegationDelegateSubscription { get; set; }
        /// <summary>A delegation endpoint URL.</summary>
        string DelegationUrl { get; set; }
        /// <summary>
        /// A base64-encoded validation key to ensure requests originate from Azure API Management service.
        /// </summary>
        string DelegationValidationKey { get; set; }

        string ETag { get; set; }
        /// <summary>Enable or disable Basic authentication method.</summary>
        bool? EnableBasicAuth { get; set; }
        /// <summary>The developer portal configuration contract properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigProperties Property { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigPropertiesSignin Signin { get; set; }
        /// <summary>Redirect anonymous users to the sign-in page.</summary>
        bool? SigninRequire { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigPropertiesSignup Signup { get; set; }
        /// <summary>Terms of service settings.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IPortalConfigTermsOfServiceProperties SignupTermsOfService { get; set; }
        /// <summary>Ask user for consent to the terms of service.</summary>
        bool? TermOfServiceRequireConsent { get; set; }
        /// <summary>A terms of service text.</summary>
        string TermOfServiceText { get; set; }

    }
}