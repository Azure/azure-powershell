// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Extensions;

    /// <summary>
    /// A request to perform the connectivity check operation on a API Management service.
    /// </summary>
    public partial class ConnectivityCheckRequest :
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IConnectivityCheckRequest,
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IConnectivityCheckRequestInternal
    {

        /// <summary>Backing field for <see cref="Destination" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IConnectivityCheckRequestDestination _destination;

        /// <summary>The connectivity check operation destination.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IConnectivityCheckRequestDestination Destination { get => (this._destination = this._destination ?? new Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.ConnectivityCheckRequestDestination()); set => this._destination = value; }

        /// <summary>Destination address. Can either be an IP address or a FQDN.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string DestinationAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IConnectivityCheckRequestDestinationInternal)Destination).Address; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IConnectivityCheckRequestDestinationInternal)Destination).Address = value ; }

        /// <summary>Destination port.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public long DestinationPort { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IConnectivityCheckRequestDestinationInternal)Destination).Port; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IConnectivityCheckRequestDestinationInternal)Destination).Port = value ; }

        /// <summary>List of headers to be included in the request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IHttpHeader[] HttpConfigurationHeader { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IConnectivityCheckRequestProtocolConfigurationInternal)ProtocolConfiguration).HttpConfigurationHeader; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IConnectivityCheckRequestProtocolConfigurationInternal)ProtocolConfiguration).HttpConfigurationHeader = value ?? null /* arrayOf */; }

        /// <summary>The HTTP method to be used.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Api.Support.Method? HttpConfigurationMethod { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IConnectivityCheckRequestProtocolConfigurationInternal)ProtocolConfiguration).HttpConfigurationMethod; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IConnectivityCheckRequestProtocolConfigurationInternal)ProtocolConfiguration).HttpConfigurationMethod = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Api.Support.Method)""); }

        /// <summary>List of HTTP status codes considered valid for the request response.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public long[] HttpConfigurationValidStatusCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IConnectivityCheckRequestProtocolConfigurationInternal)ProtocolConfiguration).HttpConfigurationValidStatusCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IConnectivityCheckRequestProtocolConfigurationInternal)ProtocolConfiguration).HttpConfigurationValidStatusCode = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for Destination</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IConnectivityCheckRequestDestination Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IConnectivityCheckRequestInternal.Destination { get => (this._destination = this._destination ?? new Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.ConnectivityCheckRequestDestination()); set { {_destination = value;} } }

        /// <summary>Internal Acessors for ProtocolConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IConnectivityCheckRequestProtocolConfiguration Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IConnectivityCheckRequestInternal.ProtocolConfiguration { get => (this._protocolConfiguration = this._protocolConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.ConnectivityCheckRequestProtocolConfiguration()); set { {_protocolConfiguration = value;} } }

        /// <summary>Internal Acessors for ProtocolConfigurationHttpConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IConnectivityCheckRequestProtocolConfigurationHttpConfiguration Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IConnectivityCheckRequestInternal.ProtocolConfigurationHttpConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IConnectivityCheckRequestProtocolConfigurationInternal)ProtocolConfiguration).HttpConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IConnectivityCheckRequestProtocolConfigurationInternal)ProtocolConfiguration).HttpConfiguration = value; }

        /// <summary>Internal Acessors for Source</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IConnectivityCheckRequestSource Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IConnectivityCheckRequestInternal.Source { get => (this._source = this._source ?? new Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.ConnectivityCheckRequestSource()); set { {_source = value;} } }

        /// <summary>Backing field for <see cref="PreferredIPVersion" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Api.Support.PreferredIPVersion? _preferredIPVersion;

        /// <summary>The IP version to be used. Only IPv4 is supported for now.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Api.Support.PreferredIPVersion? PreferredIPVersion { get => this._preferredIPVersion; set => this._preferredIPVersion = value; }

        /// <summary>Backing field for <see cref="Protocol" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Api.Support.ConnectivityCheckProtocol? _protocol;

        /// <summary>
        /// The request's protocol. Specific protocol configuration can be available based on this selection. The specified destination
        /// address must be coherent with this value.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Api.Support.ConnectivityCheckProtocol? Protocol { get => this._protocol; set => this._protocol = value; }

        /// <summary>Backing field for <see cref="ProtocolConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IConnectivityCheckRequestProtocolConfiguration _protocolConfiguration;

        /// <summary>Protocol-specific configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IConnectivityCheckRequestProtocolConfiguration ProtocolConfiguration { get => (this._protocolConfiguration = this._protocolConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.ConnectivityCheckRequestProtocolConfiguration()); set => this._protocolConfiguration = value; }

        /// <summary>Backing field for <see cref="Source" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IConnectivityCheckRequestSource _source;

        /// <summary>Definitions about the connectivity check origin.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IConnectivityCheckRequestSource Source { get => (this._source = this._source ?? new Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.ConnectivityCheckRequestSource()); set => this._source = value; }

        /// <summary>The particular VMSS instance from which to fire the request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public long? SourceInstance { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IConnectivityCheckRequestSourceInternal)Source).Instance; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IConnectivityCheckRequestSourceInternal)Source).Instance = value ?? default(long); }

        /// <summary>
        /// The API Management service region from where to start the connectivity check operation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string SourceRegion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IConnectivityCheckRequestSourceInternal)Source).Region; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IConnectivityCheckRequestSourceInternal)Source).Region = value ; }

        /// <summary>Creates an new <see cref="ConnectivityCheckRequest" /> instance.</summary>
        public ConnectivityCheckRequest()
        {

        }
    }
    /// A request to perform the connectivity check operation on a API Management service.
    public partial interface IConnectivityCheckRequest :
        Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.IJsonSerializable
    {
        /// <summary>Destination address. Can either be an IP address or a FQDN.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Destination address. Can either be an IP address or a FQDN.",
        SerializedName = @"address",
        PossibleTypes = new [] { typeof(string) })]
        string DestinationAddress { get; set; }
        /// <summary>Destination port.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Destination port.",
        SerializedName = @"port",
        PossibleTypes = new [] { typeof(long) })]
        long DestinationPort { get; set; }
        /// <summary>List of headers to be included in the request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of headers to be included in the request.",
        SerializedName = @"headers",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IHttpHeader) })]
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IHttpHeader[] HttpConfigurationHeader { get; set; }
        /// <summary>The HTTP method to be used.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The HTTP method to be used.",
        SerializedName = @"method",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Api.Support.Method) })]
        Microsoft.Azure.PowerShell.Cmdlets.Api.Support.Method? HttpConfigurationMethod { get; set; }
        /// <summary>List of HTTP status codes considered valid for the request response.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of HTTP status codes considered valid for the request response.",
        SerializedName = @"validStatusCodes",
        PossibleTypes = new [] { typeof(long) })]
        long[] HttpConfigurationValidStatusCode { get; set; }
        /// <summary>The IP version to be used. Only IPv4 is supported for now.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The IP version to be used. Only IPv4 is supported for now.",
        SerializedName = @"preferredIPVersion",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Api.Support.PreferredIPVersion) })]
        Microsoft.Azure.PowerShell.Cmdlets.Api.Support.PreferredIPVersion? PreferredIPVersion { get; set; }
        /// <summary>
        /// The request's protocol. Specific protocol configuration can be available based on this selection. The specified destination
        /// address must be coherent with this value.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The request's protocol. Specific protocol configuration can be available based on this selection. The specified destination address must be coherent with this value.",
        SerializedName = @"protocol",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Api.Support.ConnectivityCheckProtocol) })]
        Microsoft.Azure.PowerShell.Cmdlets.Api.Support.ConnectivityCheckProtocol? Protocol { get; set; }
        /// <summary>The particular VMSS instance from which to fire the request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The particular VMSS instance from which to fire the request.",
        SerializedName = @"instance",
        PossibleTypes = new [] { typeof(long) })]
        long? SourceInstance { get; set; }
        /// <summary>
        /// The API Management service region from where to start the connectivity check operation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The API Management service region from where to start the connectivity check operation.",
        SerializedName = @"region",
        PossibleTypes = new [] { typeof(string) })]
        string SourceRegion { get; set; }

    }
    /// A request to perform the connectivity check operation on a API Management service.
    internal partial interface IConnectivityCheckRequestInternal

    {
        /// <summary>The connectivity check operation destination.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IConnectivityCheckRequestDestination Destination { get; set; }
        /// <summary>Destination address. Can either be an IP address or a FQDN.</summary>
        string DestinationAddress { get; set; }
        /// <summary>Destination port.</summary>
        long DestinationPort { get; set; }
        /// <summary>List of headers to be included in the request.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IHttpHeader[] HttpConfigurationHeader { get; set; }
        /// <summary>The HTTP method to be used.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Support.Method? HttpConfigurationMethod { get; set; }
        /// <summary>List of HTTP status codes considered valid for the request response.</summary>
        long[] HttpConfigurationValidStatusCode { get; set; }
        /// <summary>The IP version to be used. Only IPv4 is supported for now.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Support.PreferredIPVersion? PreferredIPVersion { get; set; }
        /// <summary>
        /// The request's protocol. Specific protocol configuration can be available based on this selection. The specified destination
        /// address must be coherent with this value.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Support.ConnectivityCheckProtocol? Protocol { get; set; }
        /// <summary>Protocol-specific configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IConnectivityCheckRequestProtocolConfiguration ProtocolConfiguration { get; set; }
        /// <summary>Configuration for HTTP or HTTPS requests.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IConnectivityCheckRequestProtocolConfigurationHttpConfiguration ProtocolConfigurationHttpConfiguration { get; set; }
        /// <summary>Definitions about the connectivity check origin.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20220801.IConnectivityCheckRequestSource Source { get; set; }
        /// <summary>The particular VMSS instance from which to fire the request.</summary>
        long? SourceInstance { get; set; }
        /// <summary>
        /// The API Management service region from where to start the connectivity check operation.
        /// </summary>
        string SourceRegion { get; set; }

    }
}