// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Models.Api20220501Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Runtime.Extensions;

    /// <summary>Azure relay hybrid connection access properties</summary>
    public partial class RelayNamespaceAccessProperties :
        Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Models.Api20220501Preview.IRelayNamespaceAccessProperties,
        Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Models.Api20220501Preview.IRelayNamespaceAccessPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AccessKey" /> property.</summary>
        private string _accessKey;

        /// <summary>Access key for hybrid connection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.PropertyOrigin.Owned)]
        public string AccessKey { get => this._accessKey; }

        /// <summary>Backing field for <see cref="ExpiresOn" /> property.</summary>
        private long? _expiresOn;

        /// <summary>The expiration of access key in unix time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.PropertyOrigin.Owned)]
        public long? ExpiresOn { get => this._expiresOn; set => this._expiresOn = value; }

        /// <summary>Backing field for <see cref="HybridConnectionName" /> property.</summary>
        private string _hybridConnectionName;

        /// <summary>Azure Relay hybrid connection name for the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.PropertyOrigin.Owned)]
        public string HybridConnectionName { get => this._hybridConnectionName; set => this._hybridConnectionName = value; }

        /// <summary>Internal Acessors for AccessKey</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Models.Api20220501Preview.IRelayNamespaceAccessPropertiesInternal.AccessKey { get => this._accessKey; set { {_accessKey = value;} } }

        /// <summary>Backing field for <see cref="NamespaceName" /> property.</summary>
        private string _namespaceName;

        /// <summary>The namespace name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.PropertyOrigin.Owned)]
        public string NamespaceName { get => this._namespaceName; set => this._namespaceName = value; }

        /// <summary>Backing field for <see cref="NamespaceNameSuffix" /> property.</summary>
        private string _namespaceNameSuffix;

        /// <summary>The suffix domain name of relay namespace.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.PropertyOrigin.Owned)]
        public string NamespaceNameSuffix { get => this._namespaceNameSuffix; set => this._namespaceNameSuffix = value; }

        /// <summary>Creates an new <see cref="RelayNamespaceAccessProperties" /> instance.</summary>
        public RelayNamespaceAccessProperties()
        {

        }
    }
    /// Azure relay hybrid connection access properties
    public partial interface IRelayNamespaceAccessProperties :
        Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Runtime.IJsonSerializable
    {
        /// <summary>Access key for hybrid connection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Access key for hybrid connection.",
        SerializedName = @"accessKey",
        PossibleTypes = new [] { typeof(string) })]
        string AccessKey { get;  }
        /// <summary>The expiration of access key in unix time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The expiration of access key in unix time.",
        SerializedName = @"expiresOn",
        PossibleTypes = new [] { typeof(long) })]
        long? ExpiresOn { get; set; }
        /// <summary>Azure Relay hybrid connection name for the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Azure Relay hybrid connection name for the resource.",
        SerializedName = @"hybridConnectionName",
        PossibleTypes = new [] { typeof(string) })]
        string HybridConnectionName { get; set; }
        /// <summary>The namespace name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The namespace name.",
        SerializedName = @"namespaceName",
        PossibleTypes = new [] { typeof(string) })]
        string NamespaceName { get; set; }
        /// <summary>The suffix domain name of relay namespace.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridConnectivityApi.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The suffix domain name of relay namespace.",
        SerializedName = @"namespaceNameSuffix",
        PossibleTypes = new [] { typeof(string) })]
        string NamespaceNameSuffix { get; set; }

    }
    /// Azure relay hybrid connection access properties
    internal partial interface IRelayNamespaceAccessPropertiesInternal

    {
        /// <summary>Access key for hybrid connection.</summary>
        string AccessKey { get; set; }
        /// <summary>The expiration of access key in unix time.</summary>
        long? ExpiresOn { get; set; }
        /// <summary>Azure Relay hybrid connection name for the resource.</summary>
        string HybridConnectionName { get; set; }
        /// <summary>The namespace name.</summary>
        string NamespaceName { get; set; }
        /// <summary>The suffix domain name of relay namespace.</summary>
        string NamespaceNameSuffix { get; set; }

    }
}