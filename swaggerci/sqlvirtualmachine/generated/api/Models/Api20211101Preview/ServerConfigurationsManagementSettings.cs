// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Extensions;

    /// <summary>Set the connectivity, storage and workload settings.</summary>
    public partial class ServerConfigurationsManagementSettings :
        Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.IServerConfigurationsManagementSettings,
        Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.IServerConfigurationsManagementSettingsInternal
    {

        /// <summary>Enable or disable R services (SQL 2016 onwards).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Inlined)]
        public bool? AdditionalFeatureServerConfigurationIsRServicesEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.IAdditionalFeaturesServerConfigurationsInternal)AdditionalFeaturesServerConfiguration).IsRServicesEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.IAdditionalFeaturesServerConfigurationsInternal)AdditionalFeaturesServerConfiguration).IsRServicesEnabled = value ?? default(bool); }

        /// <summary>
        /// Backing field for <see cref="AdditionalFeaturesServerConfiguration" /> property.
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.IAdditionalFeaturesServerConfigurations _additionalFeaturesServerConfiguration;

        /// <summary>Additional SQL feature settings.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.IAdditionalFeaturesServerConfigurations AdditionalFeaturesServerConfiguration { get => (this._additionalFeaturesServerConfiguration = this._additionalFeaturesServerConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.AdditionalFeaturesServerConfigurations()); set => this._additionalFeaturesServerConfiguration = value; }

        /// <summary>Internal Acessors for AdditionalFeaturesServerConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.IAdditionalFeaturesServerConfigurations Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.IServerConfigurationsManagementSettingsInternal.AdditionalFeaturesServerConfiguration { get => (this._additionalFeaturesServerConfiguration = this._additionalFeaturesServerConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.AdditionalFeaturesServerConfigurations()); set { {_additionalFeaturesServerConfiguration = value;} } }

        /// <summary>Internal Acessors for SqlConnectivityUpdateSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.ISqlConnectivityUpdateSettings Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.IServerConfigurationsManagementSettingsInternal.SqlConnectivityUpdateSetting { get => (this._sqlConnectivityUpdateSetting = this._sqlConnectivityUpdateSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.SqlConnectivityUpdateSettings()); set { {_sqlConnectivityUpdateSetting = value;} } }

        /// <summary>Internal Acessors for SqlInstanceSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.ISqlInstanceSettings Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.IServerConfigurationsManagementSettingsInternal.SqlInstanceSetting { get => (this._sqlInstanceSetting = this._sqlInstanceSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.SqlInstanceSettings()); set { {_sqlInstanceSetting = value;} } }

        /// <summary>Internal Acessors for SqlStorageUpdateSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.ISqlStorageUpdateSettings Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.IServerConfigurationsManagementSettingsInternal.SqlStorageUpdateSetting { get => (this._sqlStorageUpdateSetting = this._sqlStorageUpdateSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.SqlStorageUpdateSettings()); set { {_sqlStorageUpdateSetting = value;} } }

        /// <summary>Internal Acessors for SqlWorkloadTypeUpdateSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.ISqlWorkloadTypeUpdateSettings Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.IServerConfigurationsManagementSettingsInternal.SqlWorkloadTypeUpdateSetting { get => (this._sqlWorkloadTypeUpdateSetting = this._sqlWorkloadTypeUpdateSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.SqlWorkloadTypeUpdateSettings()); set { {_sqlWorkloadTypeUpdateSetting = value;} } }

        /// <summary>Backing field for <see cref="SqlConnectivityUpdateSetting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.ISqlConnectivityUpdateSettings _sqlConnectivityUpdateSetting;

        /// <summary>SQL connectivity type settings.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.ISqlConnectivityUpdateSettings SqlConnectivityUpdateSetting { get => (this._sqlConnectivityUpdateSetting = this._sqlConnectivityUpdateSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.SqlConnectivityUpdateSettings()); set => this._sqlConnectivityUpdateSetting = value; }

        /// <summary>SQL Server connectivity option.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.ConnectivityType? SqlConnectivityUpdateSettingConnectivityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.ISqlConnectivityUpdateSettingsInternal)SqlConnectivityUpdateSetting).ConnectivityType; set => ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.ISqlConnectivityUpdateSettingsInternal)SqlConnectivityUpdateSetting).ConnectivityType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.ConnectivityType)""); }

        /// <summary>SQL Server port.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Inlined)]
        public int? SqlConnectivityUpdateSettingPort { get => ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.ISqlConnectivityUpdateSettingsInternal)SqlConnectivityUpdateSetting).Port; set => ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.ISqlConnectivityUpdateSettingsInternal)SqlConnectivityUpdateSetting).Port = value ?? default(int); }

        /// <summary>SQL Server sysadmin login password.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Inlined)]
        public string SqlConnectivityUpdateSettingSqlAuthUpdatePassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.ISqlConnectivityUpdateSettingsInternal)SqlConnectivityUpdateSetting).SqlAuthUpdatePassword; set => ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.ISqlConnectivityUpdateSettingsInternal)SqlConnectivityUpdateSetting).SqlAuthUpdatePassword = value ?? null; }

        /// <summary>SQL Server sysadmin login to create.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Inlined)]
        public string SqlConnectivityUpdateSettingSqlAuthUpdateUserName { get => ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.ISqlConnectivityUpdateSettingsInternal)SqlConnectivityUpdateSetting).SqlAuthUpdateUserName; set => ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.ISqlConnectivityUpdateSettingsInternal)SqlConnectivityUpdateSetting).SqlAuthUpdateUserName = value ?? null; }

        /// <summary>Backing field for <see cref="SqlInstanceSetting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.ISqlInstanceSettings _sqlInstanceSetting;

        /// <summary>SQL Instance settings.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.ISqlInstanceSettings SqlInstanceSetting { get => (this._sqlInstanceSetting = this._sqlInstanceSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.SqlInstanceSettings()); set => this._sqlInstanceSetting = value; }

        /// <summary>SQL Server Collation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Inlined)]
        public string SqlInstanceSettingCollation { get => ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.ISqlInstanceSettingsInternal)SqlInstanceSetting).Collation; set => ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.ISqlInstanceSettingsInternal)SqlInstanceSetting).Collation = value ?? null; }

        /// <summary>SQL Server Optimize for Adhoc workloads.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Inlined)]
        public bool? SqlInstanceSettingIsOptimizeForAdHocWorkloadsEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.ISqlInstanceSettingsInternal)SqlInstanceSetting).IsOptimizeForAdHocWorkloadsEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.ISqlInstanceSettingsInternal)SqlInstanceSetting).IsOptimizeForAdHocWorkloadsEnabled = value ?? default(bool); }

        /// <summary>SQL Server MAXDOP.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Inlined)]
        public int? SqlInstanceSettingMaxDop { get => ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.ISqlInstanceSettingsInternal)SqlInstanceSetting).MaxDop; set => ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.ISqlInstanceSettingsInternal)SqlInstanceSetting).MaxDop = value ?? default(int); }

        /// <summary>SQL Server maximum memory.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Inlined)]
        public int? SqlInstanceSettingMaxServerMemoryMb { get => ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.ISqlInstanceSettingsInternal)SqlInstanceSetting).MaxServerMemoryMb; set => ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.ISqlInstanceSettingsInternal)SqlInstanceSetting).MaxServerMemoryMb = value ?? default(int); }

        /// <summary>SQL Server minimum memory.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Inlined)]
        public int? SqlInstanceSettingMinServerMemoryMb { get => ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.ISqlInstanceSettingsInternal)SqlInstanceSetting).MinServerMemoryMb; set => ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.ISqlInstanceSettingsInternal)SqlInstanceSetting).MinServerMemoryMb = value ?? default(int); }

        /// <summary>Backing field for <see cref="SqlStorageUpdateSetting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.ISqlStorageUpdateSettings _sqlStorageUpdateSetting;

        /// <summary>SQL storage update settings.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.ISqlStorageUpdateSettings SqlStorageUpdateSetting { get => (this._sqlStorageUpdateSetting = this._sqlStorageUpdateSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.SqlStorageUpdateSettings()); set => this._sqlStorageUpdateSetting = value; }

        /// <summary>Disk configuration to apply to SQL Server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.DiskConfigurationType? SqlStorageUpdateSettingDiskConfigurationType { get => ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.ISqlStorageUpdateSettingsInternal)SqlStorageUpdateSetting).DiskConfigurationType; set => ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.ISqlStorageUpdateSettingsInternal)SqlStorageUpdateSetting).DiskConfigurationType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.DiskConfigurationType)""); }

        /// <summary>Virtual machine disk count.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Inlined)]
        public int? SqlStorageUpdateSettingDiskCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.ISqlStorageUpdateSettingsInternal)SqlStorageUpdateSetting).DiskCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.ISqlStorageUpdateSettingsInternal)SqlStorageUpdateSetting).DiskCount = value ?? default(int); }

        /// <summary>Device id of the first disk to be updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Inlined)]
        public int? SqlStorageUpdateSettingStartingDeviceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.ISqlStorageUpdateSettingsInternal)SqlStorageUpdateSetting).StartingDeviceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.ISqlStorageUpdateSettingsInternal)SqlStorageUpdateSetting).StartingDeviceId = value ?? default(int); }

        /// <summary>Backing field for <see cref="SqlWorkloadTypeUpdateSetting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.ISqlWorkloadTypeUpdateSettings _sqlWorkloadTypeUpdateSetting;

        /// <summary>SQL workload type settings.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.ISqlWorkloadTypeUpdateSettings SqlWorkloadTypeUpdateSetting { get => (this._sqlWorkloadTypeUpdateSetting = this._sqlWorkloadTypeUpdateSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.SqlWorkloadTypeUpdateSettings()); set => this._sqlWorkloadTypeUpdateSetting = value; }

        /// <summary>SQL Server workload type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.SqlWorkloadType? SqlWorkloadTypeUpdateSettingSqlWorkloadType { get => ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.ISqlWorkloadTypeUpdateSettingsInternal)SqlWorkloadTypeUpdateSetting).SqlWorkloadType; set => ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.ISqlWorkloadTypeUpdateSettingsInternal)SqlWorkloadTypeUpdateSetting).SqlWorkloadType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.SqlWorkloadType)""); }

        /// <summary>Creates an new <see cref="ServerConfigurationsManagementSettings" /> instance.</summary>
        public ServerConfigurationsManagementSettings()
        {

        }
    }
    /// Set the connectivity, storage and workload settings.
    public partial interface IServerConfigurationsManagementSettings :
        Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.IJsonSerializable
    {
        /// <summary>Enable or disable R services (SQL 2016 onwards).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enable or disable R services (SQL 2016 onwards).",
        SerializedName = @"isRServicesEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AdditionalFeatureServerConfigurationIsRServicesEnabled { get; set; }
        /// <summary>SQL Server connectivity option.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"SQL Server connectivity option.",
        SerializedName = @"connectivityType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.ConnectivityType) })]
        Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.ConnectivityType? SqlConnectivityUpdateSettingConnectivityType { get; set; }
        /// <summary>SQL Server port.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"SQL Server port.",
        SerializedName = @"port",
        PossibleTypes = new [] { typeof(int) })]
        int? SqlConnectivityUpdateSettingPort { get; set; }
        /// <summary>SQL Server sysadmin login password.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"SQL Server sysadmin login password.",
        SerializedName = @"sqlAuthUpdatePassword",
        PossibleTypes = new [] { typeof(string) })]
        string SqlConnectivityUpdateSettingSqlAuthUpdatePassword { get; set; }
        /// <summary>SQL Server sysadmin login to create.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"SQL Server sysadmin login to create.",
        SerializedName = @"sqlAuthUpdateUserName",
        PossibleTypes = new [] { typeof(string) })]
        string SqlConnectivityUpdateSettingSqlAuthUpdateUserName { get; set; }
        /// <summary>SQL Server Collation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"SQL Server Collation.",
        SerializedName = @"collation",
        PossibleTypes = new [] { typeof(string) })]
        string SqlInstanceSettingCollation { get; set; }
        /// <summary>SQL Server Optimize for Adhoc workloads.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"SQL Server Optimize for Adhoc workloads.",
        SerializedName = @"isOptimizeForAdHocWorkloadsEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SqlInstanceSettingIsOptimizeForAdHocWorkloadsEnabled { get; set; }
        /// <summary>SQL Server MAXDOP.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"SQL Server MAXDOP.",
        SerializedName = @"maxDop",
        PossibleTypes = new [] { typeof(int) })]
        int? SqlInstanceSettingMaxDop { get; set; }
        /// <summary>SQL Server maximum memory.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"SQL Server maximum memory.",
        SerializedName = @"maxServerMemoryMB",
        PossibleTypes = new [] { typeof(int) })]
        int? SqlInstanceSettingMaxServerMemoryMb { get; set; }
        /// <summary>SQL Server minimum memory.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"SQL Server minimum memory.",
        SerializedName = @"minServerMemoryMB",
        PossibleTypes = new [] { typeof(int) })]
        int? SqlInstanceSettingMinServerMemoryMb { get; set; }
        /// <summary>Disk configuration to apply to SQL Server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Disk configuration to apply to SQL Server.",
        SerializedName = @"diskConfigurationType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.DiskConfigurationType) })]
        Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.DiskConfigurationType? SqlStorageUpdateSettingDiskConfigurationType { get; set; }
        /// <summary>Virtual machine disk count.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Virtual machine disk count.",
        SerializedName = @"diskCount",
        PossibleTypes = new [] { typeof(int) })]
        int? SqlStorageUpdateSettingDiskCount { get; set; }
        /// <summary>Device id of the first disk to be updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Device id of the first disk to be updated.",
        SerializedName = @"startingDeviceId",
        PossibleTypes = new [] { typeof(int) })]
        int? SqlStorageUpdateSettingStartingDeviceId { get; set; }
        /// <summary>SQL Server workload type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"SQL Server workload type.",
        SerializedName = @"sqlWorkloadType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.SqlWorkloadType) })]
        Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.SqlWorkloadType? SqlWorkloadTypeUpdateSettingSqlWorkloadType { get; set; }

    }
    /// Set the connectivity, storage and workload settings.
    internal partial interface IServerConfigurationsManagementSettingsInternal

    {
        /// <summary>Enable or disable R services (SQL 2016 onwards).</summary>
        bool? AdditionalFeatureServerConfigurationIsRServicesEnabled { get; set; }
        /// <summary>Additional SQL feature settings.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.IAdditionalFeaturesServerConfigurations AdditionalFeaturesServerConfiguration { get; set; }
        /// <summary>SQL connectivity type settings.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.ISqlConnectivityUpdateSettings SqlConnectivityUpdateSetting { get; set; }
        /// <summary>SQL Server connectivity option.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.ConnectivityType? SqlConnectivityUpdateSettingConnectivityType { get; set; }
        /// <summary>SQL Server port.</summary>
        int? SqlConnectivityUpdateSettingPort { get; set; }
        /// <summary>SQL Server sysadmin login password.</summary>
        string SqlConnectivityUpdateSettingSqlAuthUpdatePassword { get; set; }
        /// <summary>SQL Server sysadmin login to create.</summary>
        string SqlConnectivityUpdateSettingSqlAuthUpdateUserName { get; set; }
        /// <summary>SQL Instance settings.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.ISqlInstanceSettings SqlInstanceSetting { get; set; }
        /// <summary>SQL Server Collation.</summary>
        string SqlInstanceSettingCollation { get; set; }
        /// <summary>SQL Server Optimize for Adhoc workloads.</summary>
        bool? SqlInstanceSettingIsOptimizeForAdHocWorkloadsEnabled { get; set; }
        /// <summary>SQL Server MAXDOP.</summary>
        int? SqlInstanceSettingMaxDop { get; set; }
        /// <summary>SQL Server maximum memory.</summary>
        int? SqlInstanceSettingMaxServerMemoryMb { get; set; }
        /// <summary>SQL Server minimum memory.</summary>
        int? SqlInstanceSettingMinServerMemoryMb { get; set; }
        /// <summary>SQL storage update settings.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.ISqlStorageUpdateSettings SqlStorageUpdateSetting { get; set; }
        /// <summary>Disk configuration to apply to SQL Server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.DiskConfigurationType? SqlStorageUpdateSettingDiskConfigurationType { get; set; }
        /// <summary>Virtual machine disk count.</summary>
        int? SqlStorageUpdateSettingDiskCount { get; set; }
        /// <summary>Device id of the first disk to be updated.</summary>
        int? SqlStorageUpdateSettingStartingDeviceId { get; set; }
        /// <summary>SQL workload type settings.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20211101Preview.ISqlWorkloadTypeUpdateSettings SqlWorkloadTypeUpdateSetting { get; set; }
        /// <summary>SQL Server workload type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.SqlWorkloadType? SqlWorkloadTypeUpdateSettingSqlWorkloadType { get; set; }

    }
}