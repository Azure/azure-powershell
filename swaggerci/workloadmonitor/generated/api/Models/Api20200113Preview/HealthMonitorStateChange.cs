// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Extensions;

    /// <summary>Information about the monitorâ€™s health state change at the provided timestamp.</summary>
    public partial class HealthMonitorStateChange :
        Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IHealthMonitorStateChange,
        Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IHealthMonitorStateChangeInternal,
        Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.Resource();

        /// <summary>Current health state of the monitor.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Support.HealthState? CurrentMonitorState { get => ((Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IHealthMonitorStateChangePropertiesInternal)Property).CurrentMonitorState; }

        /// <summary>Timestamp of the monitor's last health state change.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.PropertyOrigin.Inlined)]
        public string CurrentStateFirstObservedTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IHealthMonitorStateChangePropertiesInternal)Property).CurrentStateFirstObservedTimestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IHealthMonitorStateChangePropertiesInternal)Property).CurrentStateFirstObservedTimestamp = value ?? null; }

        /// <summary>Timestamp of the monitor's last health evaluation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.PropertyOrigin.Inlined)]
        public string EvaluationTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IHealthMonitorStateChangePropertiesInternal)Property).EvaluationTimestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IHealthMonitorStateChangePropertiesInternal)Property).EvaluationTimestamp = value ?? null; }

        /// <summary>Evidence validating the monitor's current health state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.IAny Evidence { get => ((Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IHealthMonitorStateChangePropertiesInternal)Property).Evidence; set => ((Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IHealthMonitorStateChangePropertiesInternal)Property).Evidence = value ?? null /* model class */; }

        /// <summary>The resource Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IResourceInternal)__resource).Id; }

        /// <summary>Internal Acessors for CurrentMonitorState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Support.HealthState? Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IHealthMonitorStateChangeInternal.CurrentMonitorState { get => ((Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IHealthMonitorStateChangePropertiesInternal)Property).CurrentMonitorState; set => ((Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IHealthMonitorStateChangePropertiesInternal)Property).CurrentMonitorState = value; }

        /// <summary>Internal Acessors for PreviousMonitorState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Support.HealthState? Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IHealthMonitorStateChangeInternal.PreviousMonitorState { get => ((Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IHealthMonitorStateChangePropertiesInternal)Property).PreviousMonitorState; set => ((Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IHealthMonitorStateChangePropertiesInternal)Property).PreviousMonitorState = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IHealthMonitorStateChangeProperties Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IHealthMonitorStateChangeInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.HealthMonitorStateChangeProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IResourceInternal)__resource).Type = value; }

        /// <summary>The configuration settings at the time of the monitor's health evaluation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.IAny MonitorConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IHealthMonitorStateChangePropertiesInternal)Property).MonitorConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IHealthMonitorStateChangePropertiesInternal)Property).MonitorConfiguration = value ?? null /* model class */; }

        /// <summary>Human-readable name of the monitor.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.PropertyOrigin.Inlined)]
        public string MonitorName { get => ((Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IHealthMonitorStateChangePropertiesInternal)Property).MonitorName; set => ((Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IHealthMonitorStateChangePropertiesInternal)Property).MonitorName = value ?? null; }

        /// <summary>Type of the monitor.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.PropertyOrigin.Inlined)]
        public string MonitorType { get => ((Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IHealthMonitorStateChangePropertiesInternal)Property).MonitorType; set => ((Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IHealthMonitorStateChangePropertiesInternal)Property).MonitorType = value ?? null; }

        /// <summary>Dynamic monitored object of the monitor.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.PropertyOrigin.Inlined)]
        public string MonitoredObject { get => ((Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IHealthMonitorStateChangePropertiesInternal)Property).MonitoredObject; set => ((Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IHealthMonitorStateChangePropertiesInternal)Property).MonitoredObject = value ?? null; }

        /// <summary>The resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IResourceInternal)__resource).Name; }

        /// <summary>Previous health state of the monitor.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Support.HealthState? PreviousMonitorState { get => ((Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IHealthMonitorStateChangePropertiesInternal)Property).PreviousMonitorState; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IHealthMonitorStateChangeProperties _property;

        /// <summary>Properties of the monitor's state change.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IHealthMonitorStateChangeProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.HealthMonitorStateChangeProperties()); set => this._property = value; }

        /// <summary>The resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IResourceInternal)__resource).Type; }

        /// <summary>Creates an new <see cref="HealthMonitorStateChange" /> instance.</summary>
        public HealthMonitorStateChange()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// Information about the monitorâ€™s health state change at the provided timestamp.
    public partial interface IHealthMonitorStateChange :
        Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IResource
    {
        /// <summary>Current health state of the monitor.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Current health state of the monitor.",
        SerializedName = @"currentMonitorState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Support.HealthState) })]
        Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Support.HealthState? CurrentMonitorState { get;  }
        /// <summary>Timestamp of the monitor's last health state change.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Timestamp of the monitor's last health state change.",
        SerializedName = @"currentStateFirstObservedTimestamp",
        PossibleTypes = new [] { typeof(string) })]
        string CurrentStateFirstObservedTimestamp { get; set; }
        /// <summary>Timestamp of the monitor's last health evaluation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Timestamp of the monitor's last health evaluation.",
        SerializedName = @"evaluationTimestamp",
        PossibleTypes = new [] { typeof(string) })]
        string EvaluationTimestamp { get; set; }
        /// <summary>Evidence validating the monitor's current health state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Evidence validating the monitor's current health state.",
        SerializedName = @"evidence",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.IAny Evidence { get; set; }
        /// <summary>The configuration settings at the time of the monitor's health evaluation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The configuration settings at the time of the monitor's health evaluation.",
        SerializedName = @"monitorConfiguration",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.IAny MonitorConfiguration { get; set; }
        /// <summary>Human-readable name of the monitor.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Human-readable name of the monitor.",
        SerializedName = @"monitorName",
        PossibleTypes = new [] { typeof(string) })]
        string MonitorName { get; set; }
        /// <summary>Type of the monitor.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of the monitor.",
        SerializedName = @"monitorType",
        PossibleTypes = new [] { typeof(string) })]
        string MonitorType { get; set; }
        /// <summary>Dynamic monitored object of the monitor.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Dynamic monitored object of the monitor.",
        SerializedName = @"monitoredObject",
        PossibleTypes = new [] { typeof(string) })]
        string MonitoredObject { get; set; }
        /// <summary>Previous health state of the monitor.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Previous health state of the monitor.",
        SerializedName = @"previousMonitorState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Support.HealthState) })]
        Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Support.HealthState? PreviousMonitorState { get;  }

    }
    /// Information about the monitorâ€™s health state change at the provided timestamp.
    internal partial interface IHealthMonitorStateChangeInternal :
        Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IResourceInternal
    {
        /// <summary>Current health state of the monitor.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Support.HealthState? CurrentMonitorState { get; set; }
        /// <summary>Timestamp of the monitor's last health state change.</summary>
        string CurrentStateFirstObservedTimestamp { get; set; }
        /// <summary>Timestamp of the monitor's last health evaluation.</summary>
        string EvaluationTimestamp { get; set; }
        /// <summary>Evidence validating the monitor's current health state.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.IAny Evidence { get; set; }
        /// <summary>The configuration settings at the time of the monitor's health evaluation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.IAny MonitorConfiguration { get; set; }
        /// <summary>Human-readable name of the monitor.</summary>
        string MonitorName { get; set; }
        /// <summary>Type of the monitor.</summary>
        string MonitorType { get; set; }
        /// <summary>Dynamic monitored object of the monitor.</summary>
        string MonitoredObject { get; set; }
        /// <summary>Previous health state of the monitor.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Support.HealthState? PreviousMonitorState { get; set; }
        /// <summary>Properties of the monitor's state change.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IHealthMonitorStateChangeProperties Property { get; set; }

    }
}