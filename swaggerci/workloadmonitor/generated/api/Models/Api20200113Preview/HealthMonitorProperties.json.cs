// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Extensions;

    /// <summary>Properties of the monitor.</summary>
    public partial class HealthMonitorProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IHealthMonitorProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IHealthMonitorProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IHealthMonitorProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Json.JsonObject json ? new HealthMonitorProperties(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Json.JsonObject into a new instance of <see cref="HealthMonitorProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal HealthMonitorProperties(Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_monitorName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Json.JsonString>("monitorName"), out var __jsonMonitorName) ? (string)__jsonMonitorName : (string)MonitorName;}
            {_monitorType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Json.JsonString>("monitorType"), out var __jsonMonitorType) ? (string)__jsonMonitorType : (string)MonitorType;}
            {_monitoredObject = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Json.JsonString>("monitoredObject"), out var __jsonMonitoredObject) ? (string)__jsonMonitoredObject : (string)MonitoredObject;}
            {_parentMonitorName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Json.JsonString>("parentMonitorName"), out var __jsonParentMonitorName) ? (string)__jsonParentMonitorName : (string)ParentMonitorName;}
            {_previousMonitorState = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Json.JsonString>("previousMonitorState"), out var __jsonPreviousMonitorState) ? (string)__jsonPreviousMonitorState : (string)PreviousMonitorState;}
            {_currentMonitorState = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Json.JsonString>("currentMonitorState"), out var __jsonCurrentMonitorState) ? (string)__jsonCurrentMonitorState : (string)CurrentMonitorState;}
            {_evaluationTimestamp = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Json.JsonString>("evaluationTimestamp"), out var __jsonEvaluationTimestamp) ? (string)__jsonEvaluationTimestamp : (string)EvaluationTimestamp;}
            {_currentStateFirstObservedTimestamp = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Json.JsonString>("currentStateFirstObservedTimestamp"), out var __jsonCurrentStateFirstObservedTimestamp) ? (string)__jsonCurrentStateFirstObservedTimestamp : (string)CurrentStateFirstObservedTimestamp;}
            {_lastReportedTimestamp = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Json.JsonString>("lastReportedTimestamp"), out var __jsonLastReportedTimestamp) ? (string)__jsonLastReportedTimestamp : (string)LastReportedTimestamp;}
            {_evidence = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Json.JsonObject>("evidence"), out var __jsonEvidence) ? Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Any.FromJson(__jsonEvidence) : Evidence;}
            {_monitorConfiguration = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Json.JsonObject>("monitorConfiguration"), out var __jsonMonitorConfiguration) ? Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Any.FromJson(__jsonMonitorConfiguration) : MonitorConfiguration;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="HealthMonitorProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="HealthMonitorProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != (((object)this._monitorName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Json.JsonString(this._monitorName.ToString()) : null, "monitorName" ,container.Add );
            AddIf( null != (((object)this._monitorType)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Json.JsonString(this._monitorType.ToString()) : null, "monitorType" ,container.Add );
            AddIf( null != (((object)this._monitoredObject)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Json.JsonString(this._monitoredObject.ToString()) : null, "monitoredObject" ,container.Add );
            AddIf( null != (((object)this._parentMonitorName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Json.JsonString(this._parentMonitorName.ToString()) : null, "parentMonitorName" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._previousMonitorState)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Json.JsonString(this._previousMonitorState.ToString()) : null, "previousMonitorState" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._currentMonitorState)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Json.JsonString(this._currentMonitorState.ToString()) : null, "currentMonitorState" ,container.Add );
            }
            AddIf( null != (((object)this._evaluationTimestamp)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Json.JsonString(this._evaluationTimestamp.ToString()) : null, "evaluationTimestamp" ,container.Add );
            AddIf( null != (((object)this._currentStateFirstObservedTimestamp)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Json.JsonString(this._currentStateFirstObservedTimestamp.ToString()) : null, "currentStateFirstObservedTimestamp" ,container.Add );
            AddIf( null != (((object)this._lastReportedTimestamp)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Json.JsonString(this._lastReportedTimestamp.ToString()) : null, "lastReportedTimestamp" ,container.Add );
            AddIf( null != this._evidence ? (Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Json.JsonNode) this._evidence.ToJson(null,serializationMode) : null, "evidence" ,container.Add );
            AddIf( null != this._monitorConfiguration ? (Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Json.JsonNode) this._monitorConfiguration.ToJson(null,serializationMode) : null, "monitorConfiguration" ,container.Add );
            AfterToJson(ref container);
            return container;
        }
    }
}