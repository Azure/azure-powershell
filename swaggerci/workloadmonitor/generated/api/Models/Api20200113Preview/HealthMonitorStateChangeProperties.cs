// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Extensions;

    /// <summary>Properties of the monitor.</summary>
    public partial class HealthMonitorStateChangeProperties :
        Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IHealthMonitorStateChangeProperties,
        Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IHealthMonitorStateChangePropertiesInternal
    {

        /// <summary>Backing field for <see cref="CurrentMonitorState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Support.HealthState? _currentMonitorState;

        /// <summary>Current health state of the monitor.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Support.HealthState? CurrentMonitorState { get => this._currentMonitorState; }

        /// <summary>Backing field for <see cref="CurrentStateFirstObservedTimestamp" /> property.</summary>
        private string _currentStateFirstObservedTimestamp;

        /// <summary>Timestamp of the monitor's last health state change.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.PropertyOrigin.Owned)]
        public string CurrentStateFirstObservedTimestamp { get => this._currentStateFirstObservedTimestamp; set => this._currentStateFirstObservedTimestamp = value; }

        /// <summary>Backing field for <see cref="EvaluationTimestamp" /> property.</summary>
        private string _evaluationTimestamp;

        /// <summary>Timestamp of the monitor's last health evaluation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.PropertyOrigin.Owned)]
        public string EvaluationTimestamp { get => this._evaluationTimestamp; set => this._evaluationTimestamp = value; }

        /// <summary>Backing field for <see cref="Evidence" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.IAny _evidence;

        /// <summary>Evidence validating the monitor's current health state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.IAny Evidence { get => (this._evidence = this._evidence ?? new Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Any()); set => this._evidence = value; }

        /// <summary>Internal Acessors for CurrentMonitorState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Support.HealthState? Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IHealthMonitorStateChangePropertiesInternal.CurrentMonitorState { get => this._currentMonitorState; set { {_currentMonitorState = value;} } }

        /// <summary>Internal Acessors for PreviousMonitorState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Support.HealthState? Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Api20200113Preview.IHealthMonitorStateChangePropertiesInternal.PreviousMonitorState { get => this._previousMonitorState; set { {_previousMonitorState = value;} } }

        /// <summary>Backing field for <see cref="MonitorConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.IAny _monitorConfiguration;

        /// <summary>The configuration settings at the time of the monitor's health evaluation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.IAny MonitorConfiguration { get => (this._monitorConfiguration = this._monitorConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.Any()); set => this._monitorConfiguration = value; }

        /// <summary>Backing field for <see cref="MonitorName" /> property.</summary>
        private string _monitorName;

        /// <summary>Human-readable name of the monitor.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.PropertyOrigin.Owned)]
        public string MonitorName { get => this._monitorName; set => this._monitorName = value; }

        /// <summary>Backing field for <see cref="MonitorType" /> property.</summary>
        private string _monitorType;

        /// <summary>Type of the monitor.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.PropertyOrigin.Owned)]
        public string MonitorType { get => this._monitorType; set => this._monitorType = value; }

        /// <summary>Backing field for <see cref="MonitoredObject" /> property.</summary>
        private string _monitoredObject;

        /// <summary>Dynamic monitored object of the monitor.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.PropertyOrigin.Owned)]
        public string MonitoredObject { get => this._monitoredObject; set => this._monitoredObject = value; }

        /// <summary>Backing field for <see cref="PreviousMonitorState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Support.HealthState? _previousMonitorState;

        /// <summary>Previous health state of the monitor.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Support.HealthState? PreviousMonitorState { get => this._previousMonitorState; }

        /// <summary>Creates an new <see cref="HealthMonitorStateChangeProperties" /> instance.</summary>
        public HealthMonitorStateChangeProperties()
        {

        }
    }
    /// Properties of the monitor.
    public partial interface IHealthMonitorStateChangeProperties :
        Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.IJsonSerializable
    {
        /// <summary>Current health state of the monitor.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Current health state of the monitor.",
        SerializedName = @"currentMonitorState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Support.HealthState) })]
        Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Support.HealthState? CurrentMonitorState { get;  }
        /// <summary>Timestamp of the monitor's last health state change.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Timestamp of the monitor's last health state change.",
        SerializedName = @"currentStateFirstObservedTimestamp",
        PossibleTypes = new [] { typeof(string) })]
        string CurrentStateFirstObservedTimestamp { get; set; }
        /// <summary>Timestamp of the monitor's last health evaluation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Timestamp of the monitor's last health evaluation.",
        SerializedName = @"evaluationTimestamp",
        PossibleTypes = new [] { typeof(string) })]
        string EvaluationTimestamp { get; set; }
        /// <summary>Evidence validating the monitor's current health state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Evidence validating the monitor's current health state.",
        SerializedName = @"evidence",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.IAny Evidence { get; set; }
        /// <summary>The configuration settings at the time of the monitor's health evaluation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The configuration settings at the time of the monitor's health evaluation.",
        SerializedName = @"monitorConfiguration",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.IAny MonitorConfiguration { get; set; }
        /// <summary>Human-readable name of the monitor.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Human-readable name of the monitor.",
        SerializedName = @"monitorName",
        PossibleTypes = new [] { typeof(string) })]
        string MonitorName { get; set; }
        /// <summary>Type of the monitor.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of the monitor.",
        SerializedName = @"monitorType",
        PossibleTypes = new [] { typeof(string) })]
        string MonitorType { get; set; }
        /// <summary>Dynamic monitored object of the monitor.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Dynamic monitored object of the monitor.",
        SerializedName = @"monitoredObject",
        PossibleTypes = new [] { typeof(string) })]
        string MonitoredObject { get; set; }
        /// <summary>Previous health state of the monitor.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Previous health state of the monitor.",
        SerializedName = @"previousMonitorState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Support.HealthState) })]
        Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Support.HealthState? PreviousMonitorState { get;  }

    }
    /// Properties of the monitor.
    internal partial interface IHealthMonitorStateChangePropertiesInternal

    {
        /// <summary>Current health state of the monitor.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Support.HealthState? CurrentMonitorState { get; set; }
        /// <summary>Timestamp of the monitor's last health state change.</summary>
        string CurrentStateFirstObservedTimestamp { get; set; }
        /// <summary>Timestamp of the monitor's last health evaluation.</summary>
        string EvaluationTimestamp { get; set; }
        /// <summary>Evidence validating the monitor's current health state.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.IAny Evidence { get; set; }
        /// <summary>The configuration settings at the time of the monitor's health evaluation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Models.IAny MonitorConfiguration { get; set; }
        /// <summary>Human-readable name of the monitor.</summary>
        string MonitorName { get; set; }
        /// <summary>Type of the monitor.</summary>
        string MonitorType { get; set; }
        /// <summary>Dynamic monitored object of the monitor.</summary>
        string MonitoredObject { get; set; }
        /// <summary>Previous health state of the monitor.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.WorkloadMonitorApi.Support.HealthState? PreviousMonitorState { get; set; }

    }
}