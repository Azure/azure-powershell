// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Extensions;

    /// <summary>The properties of the legacy usage detail.</summary>
    public partial class LegacyUsageDetailProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AccountName" /> property.</summary>
        private string _accountName;

        /// <summary>Account Name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string AccountName { get => this._accountName; }

        /// <summary>Backing field for <see cref="AccountOwnerId" /> property.</summary>
        private string _accountOwnerId;

        /// <summary>Account Owner Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string AccountOwnerId { get => this._accountOwnerId; }

        /// <summary>Backing field for <see cref="AdditionalInfo" /> property.</summary>
        private string _additionalInfo;

        /// <summary>
        /// Additional details of this usage item. By default this is not populated, unless it's specified in $expand. Use this field
        /// to get usage line item specific details such as the actual VM Size (ServiceType) or the ratio in which the reservation
        /// discount is applied.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string AdditionalInfo { get => this._additionalInfo; }

        /// <summary>Backing field for <see cref="BenefitId" /> property.</summary>
        private string _benefitId;

        /// <summary>Unique identifier for the applicable benefit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string BenefitId { get => this._benefitId; }

        /// <summary>Backing field for <see cref="BenefitName" /> property.</summary>
        private string _benefitName;

        /// <summary>Name of the applicable benefit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string BenefitName { get => this._benefitName; }

        /// <summary>Backing field for <see cref="BillingAccountId" /> property.</summary>
        private string _billingAccountId;

        /// <summary>Billing Account identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string BillingAccountId { get => this._billingAccountId; }

        /// <summary>Backing field for <see cref="BillingAccountName" /> property.</summary>
        private string _billingAccountName;

        /// <summary>Billing Account Name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string BillingAccountName { get => this._billingAccountName; }

        /// <summary>Backing field for <see cref="BillingCurrency" /> property.</summary>
        private string _billingCurrency;

        /// <summary>Billing Currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string BillingCurrency { get => this._billingCurrency; }

        /// <summary>Backing field for <see cref="BillingPeriodEndDate" /> property.</summary>
        private global::System.DateTime? _billingPeriodEndDate;

        /// <summary>The billing period end date.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public global::System.DateTime? BillingPeriodEndDate { get => this._billingPeriodEndDate; }

        /// <summary>Backing field for <see cref="BillingPeriodStartDate" /> property.</summary>
        private global::System.DateTime? _billingPeriodStartDate;

        /// <summary>The billing period start date.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public global::System.DateTime? BillingPeriodStartDate { get => this._billingPeriodStartDate; }

        /// <summary>Backing field for <see cref="BillingProfileId" /> property.</summary>
        private string _billingProfileId;

        /// <summary>Billing Profile identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string BillingProfileId { get => this._billingProfileId; }

        /// <summary>Backing field for <see cref="BillingProfileName" /> property.</summary>
        private string _billingProfileName;

        /// <summary>Billing Profile Name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string BillingProfileName { get => this._billingProfileName; }

        /// <summary>Backing field for <see cref="ChargeType" /> property.</summary>
        private string _chargeType;

        /// <summary>
        /// Indicates a charge represents credits, usage, a Marketplace purchase, a reservation fee, or a refund.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string ChargeType { get => this._chargeType; }

        /// <summary>Backing field for <see cref="ConsumedService" /> property.</summary>
        private string _consumedService;

        /// <summary>
        /// Consumed service name. Name of the azure resource provider that emits the usage or was purchased. This value is not provided
        /// for marketplace usage.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string ConsumedService { get => this._consumedService; }

        /// <summary>Backing field for <see cref="Cost" /> property.</summary>
        private decimal? _cost;

        /// <summary>The amount of cost before tax.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public decimal? Cost { get => this._cost; }

        /// <summary>Backing field for <see cref="CostCenter" /> property.</summary>
        private string _costCenter;

        /// <summary>
        /// The cost center of this department if it is a department and a cost center is provided.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string CostCenter { get => this._costCenter; }

        /// <summary>Backing field for <see cref="Date" /> property.</summary>
        private global::System.DateTime? _date;

        /// <summary>Date for the usage record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public global::System.DateTime? Date { get => this._date; }

        /// <summary>Backing field for <see cref="EffectivePrice" /> property.</summary>
        private decimal? _effectivePrice;

        /// <summary>Effective Price that's charged for the usage.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public decimal? EffectivePrice { get => this._effectivePrice; }

        /// <summary>Backing field for <see cref="Frequency" /> property.</summary>
        private string _frequency;

        /// <summary>
        /// Indicates how frequently this charge will occur. OneTime for purchases which only happen once, Monthly for fees which
        /// recur every month, and UsageBased for charges based on how much a service is used.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string Frequency { get => this._frequency; }

        /// <summary>Backing field for <see cref="InvoiceSection" /> property.</summary>
        private string _invoiceSection;

        /// <summary>Invoice Section Name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string InvoiceSection { get => this._invoiceSection; }

        /// <summary>Backing field for <see cref="IsAzureCreditEligible" /> property.</summary>
        private bool? _isAzureCreditEligible;

        /// <summary>Is Azure Credit Eligible.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public bool? IsAzureCreditEligible { get => this._isAzureCreditEligible; }

        /// <summary>Backing field for <see cref="MeterDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsResponse _meterDetail;

        /// <summary>
        /// The details about the meter. By default this is not populated, unless it's specified in $expand.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsResponse MeterDetail { get => (this._meterDetail = this._meterDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.MeterDetailsResponse()); }

        /// <summary>The category of the meter, for example, 'Cloud services', 'Networking', etc..</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string MeterDetailMeterCategory { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsResponseInternal)MeterDetail).MeterCategory; }

        /// <summary>The name of the meter, within the given meter category</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string MeterDetailMeterName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsResponseInternal)MeterDetail).MeterName; }

        /// <summary>
        /// The subcategory of the meter, for example, 'A6 Cloud services', 'ExpressRoute (IXP)', etc..
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string MeterDetailMeterSubCategory { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsResponseInternal)MeterDetail).MeterSubCategory; }

        /// <summary>The service family.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string MeterDetailServiceFamily { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsResponseInternal)MeterDetail).ServiceFamily; }

        /// <summary>
        /// The unit in which the meter consumption is charged, for example, 'Hours', 'GB', etc.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string MeterDetailUnitOfMeasure { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsResponseInternal)MeterDetail).UnitOfMeasure; }

        /// <summary>Backing field for <see cref="MeterId" /> property.</summary>
        private string _meterId;

        /// <summary>
        /// The meter id (GUID). Not available for marketplace. For reserved instance this represents the primary meter for which
        /// the reservation was purchased. For the actual VM Size for which the reservation is purchased see productOrderName.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string MeterId { get => this._meterId; }

        /// <summary>Internal Acessors for AccountName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal.AccountName { get => this._accountName; set { {_accountName = value;} } }

        /// <summary>Internal Acessors for AccountOwnerId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal.AccountOwnerId { get => this._accountOwnerId; set { {_accountOwnerId = value;} } }

        /// <summary>Internal Acessors for AdditionalInfo</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal.AdditionalInfo { get => this._additionalInfo; set { {_additionalInfo = value;} } }

        /// <summary>Internal Acessors for BenefitId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal.BenefitId { get => this._benefitId; set { {_benefitId = value;} } }

        /// <summary>Internal Acessors for BenefitName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal.BenefitName { get => this._benefitName; set { {_benefitName = value;} } }

        /// <summary>Internal Acessors for BillingAccountId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal.BillingAccountId { get => this._billingAccountId; set { {_billingAccountId = value;} } }

        /// <summary>Internal Acessors for BillingAccountName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal.BillingAccountName { get => this._billingAccountName; set { {_billingAccountName = value;} } }

        /// <summary>Internal Acessors for BillingCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal.BillingCurrency { get => this._billingCurrency; set { {_billingCurrency = value;} } }

        /// <summary>Internal Acessors for BillingPeriodEndDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal.BillingPeriodEndDate { get => this._billingPeriodEndDate; set { {_billingPeriodEndDate = value;} } }

        /// <summary>Internal Acessors for BillingPeriodStartDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal.BillingPeriodStartDate { get => this._billingPeriodStartDate; set { {_billingPeriodStartDate = value;} } }

        /// <summary>Internal Acessors for BillingProfileId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal.BillingProfileId { get => this._billingProfileId; set { {_billingProfileId = value;} } }

        /// <summary>Internal Acessors for BillingProfileName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal.BillingProfileName { get => this._billingProfileName; set { {_billingProfileName = value;} } }

        /// <summary>Internal Acessors for ChargeType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal.ChargeType { get => this._chargeType; set { {_chargeType = value;} } }

        /// <summary>Internal Acessors for ConsumedService</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal.ConsumedService { get => this._consumedService; set { {_consumedService = value;} } }

        /// <summary>Internal Acessors for Cost</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal.Cost { get => this._cost; set { {_cost = value;} } }

        /// <summary>Internal Acessors for CostCenter</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal.CostCenter { get => this._costCenter; set { {_costCenter = value;} } }

        /// <summary>Internal Acessors for Date</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal.Date { get => this._date; set { {_date = value;} } }

        /// <summary>Internal Acessors for EffectivePrice</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal.EffectivePrice { get => this._effectivePrice; set { {_effectivePrice = value;} } }

        /// <summary>Internal Acessors for Frequency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal.Frequency { get => this._frequency; set { {_frequency = value;} } }

        /// <summary>Internal Acessors for InvoiceSection</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal.InvoiceSection { get => this._invoiceSection; set { {_invoiceSection = value;} } }

        /// <summary>Internal Acessors for IsAzureCreditEligible</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal.IsAzureCreditEligible { get => this._isAzureCreditEligible; set { {_isAzureCreditEligible = value;} } }

        /// <summary>Internal Acessors for MeterDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsResponse Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal.MeterDetail { get => (this._meterDetail = this._meterDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.MeterDetailsResponse()); set { {_meterDetail = value;} } }

        /// <summary>Internal Acessors for MeterDetailMeterCategory</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal.MeterDetailMeterCategory { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsResponseInternal)MeterDetail).MeterCategory; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsResponseInternal)MeterDetail).MeterCategory = value; }

        /// <summary>Internal Acessors for MeterDetailMeterName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal.MeterDetailMeterName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsResponseInternal)MeterDetail).MeterName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsResponseInternal)MeterDetail).MeterName = value; }

        /// <summary>Internal Acessors for MeterDetailMeterSubCategory</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal.MeterDetailMeterSubCategory { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsResponseInternal)MeterDetail).MeterSubCategory; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsResponseInternal)MeterDetail).MeterSubCategory = value; }

        /// <summary>Internal Acessors for MeterDetailServiceFamily</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal.MeterDetailServiceFamily { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsResponseInternal)MeterDetail).ServiceFamily; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsResponseInternal)MeterDetail).ServiceFamily = value; }

        /// <summary>Internal Acessors for MeterDetailUnitOfMeasure</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal.MeterDetailUnitOfMeasure { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsResponseInternal)MeterDetail).UnitOfMeasure; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsResponseInternal)MeterDetail).UnitOfMeasure = value; }

        /// <summary>Internal Acessors for MeterId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal.MeterId { get => this._meterId; set { {_meterId = value;} } }

        /// <summary>Internal Acessors for OfferId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal.OfferId { get => this._offerId; set { {_offerId = value;} } }

        /// <summary>Internal Acessors for PartNumber</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal.PartNumber { get => this._partNumber; set { {_partNumber = value;} } }

        /// <summary>Internal Acessors for PayGPrice</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal.PayGPrice { get => this._payGPrice; set { {_payGPrice = value;} } }

        /// <summary>Internal Acessors for PlanName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal.PlanName { get => this._planName; set { {_planName = value;} } }

        /// <summary>Internal Acessors for PricingModel</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.PricingModelType? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal.PricingModel { get => this._pricingModel; set { {_pricingModel = value;} } }

        /// <summary>Internal Acessors for Product</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal.Product { get => this._product; set { {_product = value;} } }

        /// <summary>Internal Acessors for ProductOrderId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal.ProductOrderId { get => this._productOrderId; set { {_productOrderId = value;} } }

        /// <summary>Internal Acessors for ProductOrderName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal.ProductOrderName { get => this._productOrderName; set { {_productOrderName = value;} } }

        /// <summary>Internal Acessors for PublisherName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal.PublisherName { get => this._publisherName; set { {_publisherName = value;} } }

        /// <summary>Internal Acessors for PublisherType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal.PublisherType { get => this._publisherType; set { {_publisherType = value;} } }

        /// <summary>Internal Acessors for Quantity</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal.Quantity { get => this._quantity; set { {_quantity = value;} } }

        /// <summary>Internal Acessors for ReservationId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal.ReservationId { get => this._reservationId; set { {_reservationId = value;} } }

        /// <summary>Internal Acessors for ReservationName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal.ReservationName { get => this._reservationName; set { {_reservationName = value;} } }

        /// <summary>Internal Acessors for ResourceGroup</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal.ResourceGroup { get => this._resourceGroup; set { {_resourceGroup = value;} } }

        /// <summary>Internal Acessors for ResourceId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal.ResourceId { get => this._resourceId; set { {_resourceId = value;} } }

        /// <summary>Internal Acessors for ResourceLocation</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal.ResourceLocation { get => this._resourceLocation; set { {_resourceLocation = value;} } }

        /// <summary>Internal Acessors for ResourceName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal.ResourceName { get => this._resourceName; set { {_resourceName = value;} } }

        /// <summary>Internal Acessors for ServiceInfo1</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal.ServiceInfo1 { get => this._serviceInfo1; set { {_serviceInfo1 = value;} } }

        /// <summary>Internal Acessors for ServiceInfo2</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal.ServiceInfo2 { get => this._serviceInfo2; set { {_serviceInfo2 = value;} } }

        /// <summary>Internal Acessors for SubscriptionId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal.SubscriptionId { get => this._subscriptionId; set { {_subscriptionId = value;} } }

        /// <summary>Internal Acessors for SubscriptionName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal.SubscriptionName { get => this._subscriptionName; set { {_subscriptionName = value;} } }

        /// <summary>Internal Acessors for Term</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal.Term { get => this._term; set { {_term = value;} } }

        /// <summary>Internal Acessors for UnitPrice</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILegacyUsageDetailPropertiesInternal.UnitPrice { get => this._unitPrice; set { {_unitPrice = value;} } }

        /// <summary>Backing field for <see cref="OfferId" /> property.</summary>
        private string _offerId;

        /// <summary>Offer Id. Ex: MS-AZR-0017P, MS-AZR-0148P.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string OfferId { get => this._offerId; }

        /// <summary>Backing field for <see cref="PartNumber" /> property.</summary>
        private string _partNumber;

        /// <summary>
        /// Part Number of the service used. Can be used to join with the price sheet. Not available for marketplace.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string PartNumber { get => this._partNumber; }

        /// <summary>Backing field for <see cref="PayGPrice" /> property.</summary>
        private decimal? _payGPrice;

        /// <summary>Retail price for the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public decimal? PayGPrice { get => this._payGPrice; }

        /// <summary>Backing field for <see cref="PlanName" /> property.</summary>
        private string _planName;

        /// <summary>Plan Name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string PlanName { get => this._planName; }

        /// <summary>Backing field for <see cref="PricingModel" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.PricingModelType? _pricingModel;

        /// <summary>Identifier that indicates how the meter is priced.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.PricingModelType? PricingModel { get => this._pricingModel; }

        /// <summary>Backing field for <see cref="Product" /> property.</summary>
        private string _product;

        /// <summary>
        /// Product name for the consumed service or purchase. Not available for Marketplace.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string Product { get => this._product; }

        /// <summary>Backing field for <see cref="ProductOrderId" /> property.</summary>
        private string _productOrderId;

        /// <summary>Product Order Id. For reservations this is the Reservation Order ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string ProductOrderId { get => this._productOrderId; }

        /// <summary>Backing field for <see cref="ProductOrderName" /> property.</summary>
        private string _productOrderName;

        /// <summary>Product Order Name. For reservations this is the SKU that was purchased.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string ProductOrderName { get => this._productOrderName; }

        /// <summary>Backing field for <see cref="PublisherName" /> property.</summary>
        private string _publisherName;

        /// <summary>Publisher Name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string PublisherName { get => this._publisherName; }

        /// <summary>Backing field for <see cref="PublisherType" /> property.</summary>
        private string _publisherType;

        /// <summary>Publisher Type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string PublisherType { get => this._publisherType; }

        /// <summary>Backing field for <see cref="Quantity" /> property.</summary>
        private decimal? _quantity;

        /// <summary>The usage quantity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public decimal? Quantity { get => this._quantity; }

        /// <summary>Backing field for <see cref="ReservationId" /> property.</summary>
        private string _reservationId;

        /// <summary>
        /// ARM resource id of the reservation. Only applies to records relevant to reservations.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string ReservationId { get => this._reservationId; }

        /// <summary>Backing field for <see cref="ReservationName" /> property.</summary>
        private string _reservationName;

        /// <summary>
        /// User provided display name of the reservation. Last known name for a particular day is populated in the daily data. Only
        /// applies to records relevant to reservations.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string ReservationName { get => this._reservationName; }

        /// <summary>Backing field for <see cref="ResourceGroup" /> property.</summary>
        private string _resourceGroup;

        /// <summary>Resource Group Name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string ResourceGroup { get => this._resourceGroup; }

        /// <summary>Backing field for <see cref="ResourceId" /> property.</summary>
        private string _resourceId;

        /// <summary>Unique identifier of the Azure Resource Manager usage detail resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string ResourceId { get => this._resourceId; }

        /// <summary>Backing field for <see cref="ResourceLocation" /> property.</summary>
        private string _resourceLocation;

        /// <summary>Resource Location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string ResourceLocation { get => this._resourceLocation; }

        /// <summary>Backing field for <see cref="ResourceName" /> property.</summary>
        private string _resourceName;

        /// <summary>Resource Name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string ResourceName { get => this._resourceName; }

        /// <summary>Backing field for <see cref="ServiceInfo1" /> property.</summary>
        private string _serviceInfo1;

        /// <summary>Service-specific metadata.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string ServiceInfo1 { get => this._serviceInfo1; }

        /// <summary>Backing field for <see cref="ServiceInfo2" /> property.</summary>
        private string _serviceInfo2;

        /// <summary>Legacy field with optional service-specific metadata.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string ServiceInfo2 { get => this._serviceInfo2; }

        /// <summary>Backing field for <see cref="SubscriptionId" /> property.</summary>
        private string _subscriptionId;

        /// <summary>Subscription guid.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string SubscriptionId { get => this._subscriptionId; }

        /// <summary>Backing field for <see cref="SubscriptionName" /> property.</summary>
        private string _subscriptionName;

        /// <summary>Subscription name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string SubscriptionName { get => this._subscriptionName; }

        /// <summary>Backing field for <see cref="Term" /> property.</summary>
        private string _term;

        /// <summary>
        /// Term (in months). 1 month for monthly recurring purchase. 12 months for a 1 year reservation. 36 months for a 3 year reservation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string Term { get => this._term; }

        /// <summary>Backing field for <see cref="UnitPrice" /> property.</summary>
        private decimal? _unitPrice;

        /// <summary>Unit Price is the price applicable to you. (your EA or other contract price).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public decimal? UnitPrice { get => this._unitPrice; }

        /// <summary>Creates an new <see cref="LegacyUsageDetailProperties" /> instance.</summary>
        public LegacyUsageDetailProperties()
        {

        }
    }
    /// The properties of the legacy usage detail.
    public partial interface ILegacyUsageDetailProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.IJsonSerializable
    {
        /// <summary>Account Name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Account Name.",
        SerializedName = @"accountName",
        PossibleTypes = new [] { typeof(string) })]
        string AccountName { get;  }
        /// <summary>Account Owner Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Account Owner Id.",
        SerializedName = @"accountOwnerId",
        PossibleTypes = new [] { typeof(string) })]
        string AccountOwnerId { get;  }
        /// <summary>
        /// Additional details of this usage item. By default this is not populated, unless it's specified in $expand. Use this field
        /// to get usage line item specific details such as the actual VM Size (ServiceType) or the ratio in which the reservation
        /// discount is applied.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Additional details of this usage item. By default this is not populated, unless it's specified in $expand. Use this field to get usage line item specific details such as the actual VM Size (ServiceType) or the ratio in which the reservation discount is applied.",
        SerializedName = @"additionalInfo",
        PossibleTypes = new [] { typeof(string) })]
        string AdditionalInfo { get;  }
        /// <summary>Unique identifier for the applicable benefit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Unique identifier for the applicable benefit.",
        SerializedName = @"benefitId",
        PossibleTypes = new [] { typeof(string) })]
        string BenefitId { get;  }
        /// <summary>Name of the applicable benefit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Name of the applicable benefit.",
        SerializedName = @"benefitName",
        PossibleTypes = new [] { typeof(string) })]
        string BenefitName { get;  }
        /// <summary>Billing Account identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Billing Account identifier.",
        SerializedName = @"billingAccountId",
        PossibleTypes = new [] { typeof(string) })]
        string BillingAccountId { get;  }
        /// <summary>Billing Account Name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Billing Account Name.",
        SerializedName = @"billingAccountName",
        PossibleTypes = new [] { typeof(string) })]
        string BillingAccountName { get;  }
        /// <summary>Billing Currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Billing Currency.",
        SerializedName = @"billingCurrency",
        PossibleTypes = new [] { typeof(string) })]
        string BillingCurrency { get;  }
        /// <summary>The billing period end date.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The billing period end date.",
        SerializedName = @"billingPeriodEndDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? BillingPeriodEndDate { get;  }
        /// <summary>The billing period start date.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The billing period start date.",
        SerializedName = @"billingPeriodStartDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? BillingPeriodStartDate { get;  }
        /// <summary>Billing Profile identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Billing Profile identifier.",
        SerializedName = @"billingProfileId",
        PossibleTypes = new [] { typeof(string) })]
        string BillingProfileId { get;  }
        /// <summary>Billing Profile Name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Billing Profile Name.",
        SerializedName = @"billingProfileName",
        PossibleTypes = new [] { typeof(string) })]
        string BillingProfileName { get;  }
        /// <summary>
        /// Indicates a charge represents credits, usage, a Marketplace purchase, a reservation fee, or a refund.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Indicates a charge represents credits, usage, a Marketplace purchase, a reservation fee, or a refund.",
        SerializedName = @"chargeType",
        PossibleTypes = new [] { typeof(string) })]
        string ChargeType { get;  }
        /// <summary>
        /// Consumed service name. Name of the azure resource provider that emits the usage or was purchased. This value is not provided
        /// for marketplace usage.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Consumed service name. Name of the azure resource provider that emits the usage or was purchased. This value is not provided for marketplace usage.",
        SerializedName = @"consumedService",
        PossibleTypes = new [] { typeof(string) })]
        string ConsumedService { get;  }
        /// <summary>The amount of cost before tax.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The amount of cost before tax.",
        SerializedName = @"cost",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? Cost { get;  }
        /// <summary>
        /// The cost center of this department if it is a department and a cost center is provided.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The cost center of this department if it is a department and a cost center is provided.",
        SerializedName = @"costCenter",
        PossibleTypes = new [] { typeof(string) })]
        string CostCenter { get;  }
        /// <summary>Date for the usage record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Date for the usage record.",
        SerializedName = @"date",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? Date { get;  }
        /// <summary>Effective Price that's charged for the usage.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Effective Price that's charged for the usage.",
        SerializedName = @"effectivePrice",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? EffectivePrice { get;  }
        /// <summary>
        /// Indicates how frequently this charge will occur. OneTime for purchases which only happen once, Monthly for fees which
        /// recur every month, and UsageBased for charges based on how much a service is used.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Indicates how frequently this charge will occur. OneTime for purchases which only happen once, Monthly for fees which recur every month, and UsageBased for charges based on how much a service is used.",
        SerializedName = @"frequency",
        PossibleTypes = new [] { typeof(string) })]
        string Frequency { get;  }
        /// <summary>Invoice Section Name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Invoice Section Name.",
        SerializedName = @"invoiceSection",
        PossibleTypes = new [] { typeof(string) })]
        string InvoiceSection { get;  }
        /// <summary>Is Azure Credit Eligible.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Is Azure Credit Eligible.",
        SerializedName = @"isAzureCreditEligible",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsAzureCreditEligible { get;  }
        /// <summary>The category of the meter, for example, 'Cloud services', 'Networking', etc..</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The category of the meter, for example, 'Cloud services', 'Networking', etc..",
        SerializedName = @"meterCategory",
        PossibleTypes = new [] { typeof(string) })]
        string MeterDetailMeterCategory { get;  }
        /// <summary>The name of the meter, within the given meter category</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of the meter, within the given meter category",
        SerializedName = @"meterName",
        PossibleTypes = new [] { typeof(string) })]
        string MeterDetailMeterName { get;  }
        /// <summary>
        /// The subcategory of the meter, for example, 'A6 Cloud services', 'ExpressRoute (IXP)', etc..
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The subcategory of the meter, for example, 'A6 Cloud services', 'ExpressRoute (IXP)', etc..",
        SerializedName = @"meterSubCategory",
        PossibleTypes = new [] { typeof(string) })]
        string MeterDetailMeterSubCategory { get;  }
        /// <summary>The service family.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The service family.",
        SerializedName = @"serviceFamily",
        PossibleTypes = new [] { typeof(string) })]
        string MeterDetailServiceFamily { get;  }
        /// <summary>
        /// The unit in which the meter consumption is charged, for example, 'Hours', 'GB', etc.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The unit in which the meter consumption is charged, for example, 'Hours', 'GB', etc.",
        SerializedName = @"unitOfMeasure",
        PossibleTypes = new [] { typeof(string) })]
        string MeterDetailUnitOfMeasure { get;  }
        /// <summary>
        /// The meter id (GUID). Not available for marketplace. For reserved instance this represents the primary meter for which
        /// the reservation was purchased. For the actual VM Size for which the reservation is purchased see productOrderName.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The meter id (GUID). Not available for marketplace. For reserved instance this represents the primary meter for which the reservation was purchased. For the actual VM Size for which the reservation is purchased see productOrderName.",
        SerializedName = @"meterId",
        PossibleTypes = new [] { typeof(string) })]
        string MeterId { get;  }
        /// <summary>Offer Id. Ex: MS-AZR-0017P, MS-AZR-0148P.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Offer Id. Ex: MS-AZR-0017P, MS-AZR-0148P.",
        SerializedName = @"offerId",
        PossibleTypes = new [] { typeof(string) })]
        string OfferId { get;  }
        /// <summary>
        /// Part Number of the service used. Can be used to join with the price sheet. Not available for marketplace.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Part Number of the service used. Can be used to join with the price sheet. Not available for marketplace.",
        SerializedName = @"partNumber",
        PossibleTypes = new [] { typeof(string) })]
        string PartNumber { get;  }
        /// <summary>Retail price for the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Retail price for the resource.",
        SerializedName = @"payGPrice",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? PayGPrice { get;  }
        /// <summary>Plan Name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Plan Name.",
        SerializedName = @"planName",
        PossibleTypes = new [] { typeof(string) })]
        string PlanName { get;  }
        /// <summary>Identifier that indicates how the meter is priced.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Identifier that indicates how the meter is priced.",
        SerializedName = @"pricingModel",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.PricingModelType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.PricingModelType? PricingModel { get;  }
        /// <summary>
        /// Product name for the consumed service or purchase. Not available for Marketplace.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Product name for the consumed service or purchase. Not available for Marketplace.",
        SerializedName = @"product",
        PossibleTypes = new [] { typeof(string) })]
        string Product { get;  }
        /// <summary>Product Order Id. For reservations this is the Reservation Order ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Product Order Id. For reservations this is the Reservation Order ID.",
        SerializedName = @"productOrderId",
        PossibleTypes = new [] { typeof(string) })]
        string ProductOrderId { get;  }
        /// <summary>Product Order Name. For reservations this is the SKU that was purchased.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Product Order Name. For reservations this is the SKU that was purchased.",
        SerializedName = @"productOrderName",
        PossibleTypes = new [] { typeof(string) })]
        string ProductOrderName { get;  }
        /// <summary>Publisher Name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Publisher Name.",
        SerializedName = @"publisherName",
        PossibleTypes = new [] { typeof(string) })]
        string PublisherName { get;  }
        /// <summary>Publisher Type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Publisher Type.",
        SerializedName = @"publisherType",
        PossibleTypes = new [] { typeof(string) })]
        string PublisherType { get;  }
        /// <summary>The usage quantity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The usage quantity.",
        SerializedName = @"quantity",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? Quantity { get;  }
        /// <summary>
        /// ARM resource id of the reservation. Only applies to records relevant to reservations.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"ARM resource id of the reservation. Only applies to records relevant to reservations.",
        SerializedName = @"reservationId",
        PossibleTypes = new [] { typeof(string) })]
        string ReservationId { get;  }
        /// <summary>
        /// User provided display name of the reservation. Last known name for a particular day is populated in the daily data. Only
        /// applies to records relevant to reservations.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"User provided display name of the reservation. Last known name for a particular day is populated in the daily data. Only applies to records relevant to reservations.",
        SerializedName = @"reservationName",
        PossibleTypes = new [] { typeof(string) })]
        string ReservationName { get;  }
        /// <summary>Resource Group Name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Resource Group Name.",
        SerializedName = @"resourceGroup",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceGroup { get;  }
        /// <summary>Unique identifier of the Azure Resource Manager usage detail resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Unique identifier of the Azure Resource Manager usage detail resource.",
        SerializedName = @"resourceId",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceId { get;  }
        /// <summary>Resource Location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Resource Location.",
        SerializedName = @"resourceLocation",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceLocation { get;  }
        /// <summary>Resource Name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Resource Name.",
        SerializedName = @"resourceName",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceName { get;  }
        /// <summary>Service-specific metadata.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Service-specific metadata.",
        SerializedName = @"serviceInfo1",
        PossibleTypes = new [] { typeof(string) })]
        string ServiceInfo1 { get;  }
        /// <summary>Legacy field with optional service-specific metadata.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Legacy field with optional service-specific metadata.",
        SerializedName = @"serviceInfo2",
        PossibleTypes = new [] { typeof(string) })]
        string ServiceInfo2 { get;  }
        /// <summary>Subscription guid.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Subscription guid.",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionId { get;  }
        /// <summary>Subscription name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Subscription name.",
        SerializedName = @"subscriptionName",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionName { get;  }
        /// <summary>
        /// Term (in months). 1 month for monthly recurring purchase. 12 months for a 1 year reservation. 36 months for a 3 year reservation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Term (in months). 1 month for monthly recurring purchase. 12 months for a 1 year reservation. 36 months for a 3 year reservation.",
        SerializedName = @"term",
        PossibleTypes = new [] { typeof(string) })]
        string Term { get;  }
        /// <summary>Unit Price is the price applicable to you. (your EA or other contract price).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Unit Price is the price applicable to you. (your EA or other contract price).",
        SerializedName = @"unitPrice",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? UnitPrice { get;  }

    }
    /// The properties of the legacy usage detail.
    internal partial interface ILegacyUsageDetailPropertiesInternal

    {
        /// <summary>Account Name.</summary>
        string AccountName { get; set; }
        /// <summary>Account Owner Id.</summary>
        string AccountOwnerId { get; set; }
        /// <summary>
        /// Additional details of this usage item. By default this is not populated, unless it's specified in $expand. Use this field
        /// to get usage line item specific details such as the actual VM Size (ServiceType) or the ratio in which the reservation
        /// discount is applied.
        /// </summary>
        string AdditionalInfo { get; set; }
        /// <summary>Unique identifier for the applicable benefit.</summary>
        string BenefitId { get; set; }
        /// <summary>Name of the applicable benefit.</summary>
        string BenefitName { get; set; }
        /// <summary>Billing Account identifier.</summary>
        string BillingAccountId { get; set; }
        /// <summary>Billing Account Name.</summary>
        string BillingAccountName { get; set; }
        /// <summary>Billing Currency.</summary>
        string BillingCurrency { get; set; }
        /// <summary>The billing period end date.</summary>
        global::System.DateTime? BillingPeriodEndDate { get; set; }
        /// <summary>The billing period start date.</summary>
        global::System.DateTime? BillingPeriodStartDate { get; set; }
        /// <summary>Billing Profile identifier.</summary>
        string BillingProfileId { get; set; }
        /// <summary>Billing Profile Name.</summary>
        string BillingProfileName { get; set; }
        /// <summary>
        /// Indicates a charge represents credits, usage, a Marketplace purchase, a reservation fee, or a refund.
        /// </summary>
        string ChargeType { get; set; }
        /// <summary>
        /// Consumed service name. Name of the azure resource provider that emits the usage or was purchased. This value is not provided
        /// for marketplace usage.
        /// </summary>
        string ConsumedService { get; set; }
        /// <summary>The amount of cost before tax.</summary>
        decimal? Cost { get; set; }
        /// <summary>
        /// The cost center of this department if it is a department and a cost center is provided.
        /// </summary>
        string CostCenter { get; set; }
        /// <summary>Date for the usage record.</summary>
        global::System.DateTime? Date { get; set; }
        /// <summary>Effective Price that's charged for the usage.</summary>
        decimal? EffectivePrice { get; set; }
        /// <summary>
        /// Indicates how frequently this charge will occur. OneTime for purchases which only happen once, Monthly for fees which
        /// recur every month, and UsageBased for charges based on how much a service is used.
        /// </summary>
        string Frequency { get; set; }
        /// <summary>Invoice Section Name.</summary>
        string InvoiceSection { get; set; }
        /// <summary>Is Azure Credit Eligible.</summary>
        bool? IsAzureCreditEligible { get; set; }
        /// <summary>
        /// The details about the meter. By default this is not populated, unless it's specified in $expand.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsResponse MeterDetail { get; set; }
        /// <summary>The category of the meter, for example, 'Cloud services', 'Networking', etc..</summary>
        string MeterDetailMeterCategory { get; set; }
        /// <summary>The name of the meter, within the given meter category</summary>
        string MeterDetailMeterName { get; set; }
        /// <summary>
        /// The subcategory of the meter, for example, 'A6 Cloud services', 'ExpressRoute (IXP)', etc..
        /// </summary>
        string MeterDetailMeterSubCategory { get; set; }
        /// <summary>The service family.</summary>
        string MeterDetailServiceFamily { get; set; }
        /// <summary>
        /// The unit in which the meter consumption is charged, for example, 'Hours', 'GB', etc.
        /// </summary>
        string MeterDetailUnitOfMeasure { get; set; }
        /// <summary>
        /// The meter id (GUID). Not available for marketplace. For reserved instance this represents the primary meter for which
        /// the reservation was purchased. For the actual VM Size for which the reservation is purchased see productOrderName.
        /// </summary>
        string MeterId { get; set; }
        /// <summary>Offer Id. Ex: MS-AZR-0017P, MS-AZR-0148P.</summary>
        string OfferId { get; set; }
        /// <summary>
        /// Part Number of the service used. Can be used to join with the price sheet. Not available for marketplace.
        /// </summary>
        string PartNumber { get; set; }
        /// <summary>Retail price for the resource.</summary>
        decimal? PayGPrice { get; set; }
        /// <summary>Plan Name.</summary>
        string PlanName { get; set; }
        /// <summary>Identifier that indicates how the meter is priced.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.PricingModelType? PricingModel { get; set; }
        /// <summary>
        /// Product name for the consumed service or purchase. Not available for Marketplace.
        /// </summary>
        string Product { get; set; }
        /// <summary>Product Order Id. For reservations this is the Reservation Order ID.</summary>
        string ProductOrderId { get; set; }
        /// <summary>Product Order Name. For reservations this is the SKU that was purchased.</summary>
        string ProductOrderName { get; set; }
        /// <summary>Publisher Name.</summary>
        string PublisherName { get; set; }
        /// <summary>Publisher Type.</summary>
        string PublisherType { get; set; }
        /// <summary>The usage quantity.</summary>
        decimal? Quantity { get; set; }
        /// <summary>
        /// ARM resource id of the reservation. Only applies to records relevant to reservations.
        /// </summary>
        string ReservationId { get; set; }
        /// <summary>
        /// User provided display name of the reservation. Last known name for a particular day is populated in the daily data. Only
        /// applies to records relevant to reservations.
        /// </summary>
        string ReservationName { get; set; }
        /// <summary>Resource Group Name.</summary>
        string ResourceGroup { get; set; }
        /// <summary>Unique identifier of the Azure Resource Manager usage detail resource.</summary>
        string ResourceId { get; set; }
        /// <summary>Resource Location.</summary>
        string ResourceLocation { get; set; }
        /// <summary>Resource Name.</summary>
        string ResourceName { get; set; }
        /// <summary>Service-specific metadata.</summary>
        string ServiceInfo1 { get; set; }
        /// <summary>Legacy field with optional service-specific metadata.</summary>
        string ServiceInfo2 { get; set; }
        /// <summary>Subscription guid.</summary>
        string SubscriptionId { get; set; }
        /// <summary>Subscription name.</summary>
        string SubscriptionName { get; set; }
        /// <summary>
        /// Term (in months). 1 month for monthly recurring purchase. 12 months for a 1 year reservation. 36 months for a 3 year reservation.
        /// </summary>
        string Term { get; set; }
        /// <summary>Unit Price is the price applicable to you. (your EA or other contract price).</summary>
        decimal? UnitPrice { get; set; }

    }
}