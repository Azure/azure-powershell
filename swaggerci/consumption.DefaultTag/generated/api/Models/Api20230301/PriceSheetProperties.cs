// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Extensions;

    /// <summary>The properties of the price sheet.</summary>
    public partial class PriceSheetProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal
    {

        /// <summary>Backing field for <see cref="BillingPeriodId" /> property.</summary>
        private string _billingPeriodId;

        /// <summary>The id of the billing period resource that the usage belongs to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string BillingPeriodId { get => this._billingPeriodId; }

        /// <summary>Backing field for <see cref="CurrencyCode" /> property.</summary>
        private string _currencyCode;

        /// <summary>Currency Code</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string CurrencyCode { get => this._currencyCode; }

        /// <summary>Backing field for <see cref="IncludedQuantity" /> property.</summary>
        private decimal? _includedQuantity;

        /// <summary>Included quality for an offer</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public decimal? IncludedQuantity { get => this._includedQuantity; }

        /// <summary>Backing field for <see cref="MeterDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetails _meterDetail;

        /// <summary>
        /// The details about the meter. By default this is not populated, unless it's specified in $expand.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetails MeterDetail { get => (this._meterDetail = this._meterDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.MeterDetails()); }

        /// <summary>The category of the meter, for example, 'Cloud services', 'Networking', etc..</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string MeterDetailMeterCategory { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)MeterDetail).MeterCategory; }

        /// <summary>The location in which the Azure service is available.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string MeterDetailMeterLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)MeterDetail).MeterLocation; }

        /// <summary>The name of the meter, within the given meter category</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string MeterDetailMeterName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)MeterDetail).MeterName; }

        /// <summary>
        /// The subcategory of the meter, for example, 'A6 Cloud services', 'ExpressRoute (IXP)', etc..
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string MeterDetailMeterSubCategory { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)MeterDetail).MeterSubCategory; }

        /// <summary>The pretax listing price.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? MeterDetailPretaxStandardRate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)MeterDetail).PretaxStandardRate; }

        /// <summary>The name of the service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string MeterDetailServiceName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)MeterDetail).ServiceName; }

        /// <summary>The service tier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string MeterDetailServiceTier { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)MeterDetail).ServiceTier; }

        /// <summary>The total included quantity associated with the offer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? MeterDetailTotalIncludedQuantity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)MeterDetail).TotalIncludedQuantity; }

        /// <summary>
        /// The unit in which the meter consumption is charged, for example, 'Hours', 'GB', etc.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string MeterDetailUnit { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)MeterDetail).Unit; }

        /// <summary>Backing field for <see cref="MeterId" /> property.</summary>
        private string _meterId;

        /// <summary>The meter id (GUID)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string MeterId { get => this._meterId; }

        /// <summary>Internal Acessors for BillingPeriodId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal.BillingPeriodId { get => this._billingPeriodId; set { {_billingPeriodId = value;} } }

        /// <summary>Internal Acessors for CurrencyCode</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal.CurrencyCode { get => this._currencyCode; set { {_currencyCode = value;} } }

        /// <summary>Internal Acessors for IncludedQuantity</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal.IncludedQuantity { get => this._includedQuantity; set { {_includedQuantity = value;} } }

        /// <summary>Internal Acessors for MeterDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetails Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal.MeterDetail { get => (this._meterDetail = this._meterDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.MeterDetails()); set { {_meterDetail = value;} } }

        /// <summary>Internal Acessors for MeterDetailMeterCategory</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal.MeterDetailMeterCategory { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)MeterDetail).MeterCategory; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)MeterDetail).MeterCategory = value; }

        /// <summary>Internal Acessors for MeterDetailMeterLocation</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal.MeterDetailMeterLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)MeterDetail).MeterLocation; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)MeterDetail).MeterLocation = value; }

        /// <summary>Internal Acessors for MeterDetailMeterName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal.MeterDetailMeterName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)MeterDetail).MeterName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)MeterDetail).MeterName = value; }

        /// <summary>Internal Acessors for MeterDetailMeterSubCategory</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal.MeterDetailMeterSubCategory { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)MeterDetail).MeterSubCategory; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)MeterDetail).MeterSubCategory = value; }

        /// <summary>Internal Acessors for MeterDetailPretaxStandardRate</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal.MeterDetailPretaxStandardRate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)MeterDetail).PretaxStandardRate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)MeterDetail).PretaxStandardRate = value; }

        /// <summary>Internal Acessors for MeterDetailServiceName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal.MeterDetailServiceName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)MeterDetail).ServiceName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)MeterDetail).ServiceName = value; }

        /// <summary>Internal Acessors for MeterDetailServiceTier</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal.MeterDetailServiceTier { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)MeterDetail).ServiceTier; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)MeterDetail).ServiceTier = value; }

        /// <summary>Internal Acessors for MeterDetailTotalIncludedQuantity</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal.MeterDetailTotalIncludedQuantity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)MeterDetail).TotalIncludedQuantity; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)MeterDetail).TotalIncludedQuantity = value; }

        /// <summary>Internal Acessors for MeterDetailUnit</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal.MeterDetailUnit { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)MeterDetail).Unit; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)MeterDetail).Unit = value; }

        /// <summary>Internal Acessors for MeterId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal.MeterId { get => this._meterId; set { {_meterId = value;} } }

        /// <summary>Internal Acessors for OfferId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal.OfferId { get => this._offerId; set { {_offerId = value;} } }

        /// <summary>Internal Acessors for PartNumber</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal.PartNumber { get => this._partNumber; set { {_partNumber = value;} } }

        /// <summary>Internal Acessors for UnitOfMeasure</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal.UnitOfMeasure { get => this._unitOfMeasure; set { {_unitOfMeasure = value;} } }

        /// <summary>Internal Acessors for UnitPrice</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal.UnitPrice { get => this._unitPrice; set { {_unitPrice = value;} } }

        /// <summary>Backing field for <see cref="OfferId" /> property.</summary>
        private string _offerId;

        /// <summary>Offer Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string OfferId { get => this._offerId; }

        /// <summary>Backing field for <see cref="PartNumber" /> property.</summary>
        private string _partNumber;

        /// <summary>Part Number</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string PartNumber { get => this._partNumber; }

        /// <summary>Backing field for <see cref="UnitOfMeasure" /> property.</summary>
        private string _unitOfMeasure;

        /// <summary>Unit of measure</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string UnitOfMeasure { get => this._unitOfMeasure; }

        /// <summary>Backing field for <see cref="UnitPrice" /> property.</summary>
        private decimal? _unitPrice;

        /// <summary>Unit Price</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public decimal? UnitPrice { get => this._unitPrice; }

        /// <summary>Creates an new <see cref="PriceSheetProperties" /> instance.</summary>
        public PriceSheetProperties()
        {

        }
    }
    /// The properties of the price sheet.
    public partial interface IPriceSheetProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.IJsonSerializable
    {
        /// <summary>The id of the billing period resource that the usage belongs to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The id of the billing period resource that the usage belongs to.",
        SerializedName = @"billingPeriodId",
        PossibleTypes = new [] { typeof(string) })]
        string BillingPeriodId { get;  }
        /// <summary>Currency Code</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Currency Code",
        SerializedName = @"currencyCode",
        PossibleTypes = new [] { typeof(string) })]
        string CurrencyCode { get;  }
        /// <summary>Included quality for an offer</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Included quality for an offer",
        SerializedName = @"includedQuantity",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? IncludedQuantity { get;  }
        /// <summary>The category of the meter, for example, 'Cloud services', 'Networking', etc..</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The category of the meter, for example, 'Cloud services', 'Networking', etc..",
        SerializedName = @"meterCategory",
        PossibleTypes = new [] { typeof(string) })]
        string MeterDetailMeterCategory { get;  }
        /// <summary>The location in which the Azure service is available.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The location in which the Azure service is available.",
        SerializedName = @"meterLocation",
        PossibleTypes = new [] { typeof(string) })]
        string MeterDetailMeterLocation { get;  }
        /// <summary>The name of the meter, within the given meter category</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of the meter, within the given meter category",
        SerializedName = @"meterName",
        PossibleTypes = new [] { typeof(string) })]
        string MeterDetailMeterName { get;  }
        /// <summary>
        /// The subcategory of the meter, for example, 'A6 Cloud services', 'ExpressRoute (IXP)', etc..
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The subcategory of the meter, for example, 'A6 Cloud services', 'ExpressRoute (IXP)', etc..",
        SerializedName = @"meterSubCategory",
        PossibleTypes = new [] { typeof(string) })]
        string MeterDetailMeterSubCategory { get;  }
        /// <summary>The pretax listing price.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The pretax listing price.",
        SerializedName = @"pretaxStandardRate",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? MeterDetailPretaxStandardRate { get;  }
        /// <summary>The name of the service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of the service.",
        SerializedName = @"serviceName",
        PossibleTypes = new [] { typeof(string) })]
        string MeterDetailServiceName { get;  }
        /// <summary>The service tier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The service tier.",
        SerializedName = @"serviceTier",
        PossibleTypes = new [] { typeof(string) })]
        string MeterDetailServiceTier { get;  }
        /// <summary>The total included quantity associated with the offer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The total included quantity associated with the offer.",
        SerializedName = @"totalIncludedQuantity",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? MeterDetailTotalIncludedQuantity { get;  }
        /// <summary>
        /// The unit in which the meter consumption is charged, for example, 'Hours', 'GB', etc.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The unit in which the meter consumption is charged, for example, 'Hours', 'GB', etc.",
        SerializedName = @"unit",
        PossibleTypes = new [] { typeof(string) })]
        string MeterDetailUnit { get;  }
        /// <summary>The meter id (GUID)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The meter id (GUID)",
        SerializedName = @"meterId",
        PossibleTypes = new [] { typeof(string) })]
        string MeterId { get;  }
        /// <summary>Offer Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Offer Id",
        SerializedName = @"offerId",
        PossibleTypes = new [] { typeof(string) })]
        string OfferId { get;  }
        /// <summary>Part Number</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Part Number",
        SerializedName = @"partNumber",
        PossibleTypes = new [] { typeof(string) })]
        string PartNumber { get;  }
        /// <summary>Unit of measure</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Unit of measure",
        SerializedName = @"unitOfMeasure",
        PossibleTypes = new [] { typeof(string) })]
        string UnitOfMeasure { get;  }
        /// <summary>Unit Price</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Unit Price",
        SerializedName = @"unitPrice",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? UnitPrice { get;  }

    }
    /// The properties of the price sheet.
    internal partial interface IPriceSheetPropertiesInternal

    {
        /// <summary>The id of the billing period resource that the usage belongs to.</summary>
        string BillingPeriodId { get; set; }
        /// <summary>Currency Code</summary>
        string CurrencyCode { get; set; }
        /// <summary>Included quality for an offer</summary>
        decimal? IncludedQuantity { get; set; }
        /// <summary>
        /// The details about the meter. By default this is not populated, unless it's specified in $expand.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetails MeterDetail { get; set; }
        /// <summary>The category of the meter, for example, 'Cloud services', 'Networking', etc..</summary>
        string MeterDetailMeterCategory { get; set; }
        /// <summary>The location in which the Azure service is available.</summary>
        string MeterDetailMeterLocation { get; set; }
        /// <summary>The name of the meter, within the given meter category</summary>
        string MeterDetailMeterName { get; set; }
        /// <summary>
        /// The subcategory of the meter, for example, 'A6 Cloud services', 'ExpressRoute (IXP)', etc..
        /// </summary>
        string MeterDetailMeterSubCategory { get; set; }
        /// <summary>The pretax listing price.</summary>
        decimal? MeterDetailPretaxStandardRate { get; set; }
        /// <summary>The name of the service.</summary>
        string MeterDetailServiceName { get; set; }
        /// <summary>The service tier.</summary>
        string MeterDetailServiceTier { get; set; }
        /// <summary>The total included quantity associated with the offer.</summary>
        decimal? MeterDetailTotalIncludedQuantity { get; set; }
        /// <summary>
        /// The unit in which the meter consumption is charged, for example, 'Hours', 'GB', etc.
        /// </summary>
        string MeterDetailUnit { get; set; }
        /// <summary>The meter id (GUID)</summary>
        string MeterId { get; set; }
        /// <summary>Offer Id</summary>
        string OfferId { get; set; }
        /// <summary>Part Number</summary>
        string PartNumber { get; set; }
        /// <summary>Unit of measure</summary>
        string UnitOfMeasure { get; set; }
        /// <summary>Unit Price</summary>
        decimal? UnitPrice { get; set; }

    }
}