// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Extensions;

    /// <summary>A balance resource.</summary>
    public partial class Balance :
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalance,
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalanceInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.Resource();

        /// <summary>Total adjustment amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? Adjustment { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesInternal)Property).Adjustment; }

        /// <summary>List of Adjustments (Promo credit, SIE credit etc.).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesAdjustmentDetailsItem[] AdjustmentDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesInternal)Property).AdjustmentDetail; }

        /// <summary>Total charges for Azure Marketplace.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? AzureMarketplaceServiceCharge { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesInternal)Property).AzureMarketplaceServiceCharge; }

        /// <summary>The beginning balance for the billing period.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? BeginningBalance { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesInternal)Property).BeginningBalance; }

        /// <summary>The billing frequency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.BillingFrequency? BillingFrequency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesInternal)Property).BillingFrequency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesInternal)Property).BillingFrequency = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.BillingFrequency)""); }

        /// <summary>Charges Billed separately.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? ChargesBilledSeparately { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesInternal)Property).ChargesBilledSeparately; }

        /// <summary>The ISO currency in which the meter is charged, for example, USD.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string Currency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesInternal)Property).Currency; }

        /// <summary>
        /// The ending balance for the billing period (for open periods this will be updated daily).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? EndingBalance { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesInternal)Property).EndingBalance; }

        /// <summary>The etag for the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inherited)]
        public string Etag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IResourceInternal)__resource).Etag; }

        /// <summary>The full qualified ARM ID of an event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IResourceInternal)__resource).Id; }

        /// <summary>Internal Acessors for Adjustment</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalanceInternal.Adjustment { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesInternal)Property).Adjustment; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesInternal)Property).Adjustment = value; }

        /// <summary>Internal Acessors for AdjustmentDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesAdjustmentDetailsItem[] Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalanceInternal.AdjustmentDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesInternal)Property).AdjustmentDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesInternal)Property).AdjustmentDetail = value; }

        /// <summary>Internal Acessors for AzureMarketplaceServiceCharge</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalanceInternal.AzureMarketplaceServiceCharge { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesInternal)Property).AzureMarketplaceServiceCharge; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesInternal)Property).AzureMarketplaceServiceCharge = value; }

        /// <summary>Internal Acessors for BeginningBalance</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalanceInternal.BeginningBalance { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesInternal)Property).BeginningBalance; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesInternal)Property).BeginningBalance = value; }

        /// <summary>Internal Acessors for ChargesBilledSeparately</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalanceInternal.ChargesBilledSeparately { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesInternal)Property).ChargesBilledSeparately; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesInternal)Property).ChargesBilledSeparately = value; }

        /// <summary>Internal Acessors for Currency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalanceInternal.Currency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesInternal)Property).Currency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesInternal)Property).Currency = value; }

        /// <summary>Internal Acessors for EndingBalance</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalanceInternal.EndingBalance { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesInternal)Property).EndingBalance; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesInternal)Property).EndingBalance = value; }

        /// <summary>Internal Acessors for NewPurchase</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalanceInternal.NewPurchase { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesInternal)Property).NewPurchase; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesInternal)Property).NewPurchase = value; }

        /// <summary>Internal Acessors for NewPurchasesDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesNewPurchasesDetailsItem[] Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalanceInternal.NewPurchasesDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesInternal)Property).NewPurchasesDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesInternal)Property).NewPurchasesDetail = value; }

        /// <summary>Internal Acessors for OverageRefund</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalanceInternal.OverageRefund { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesInternal)Property).OverageRefund; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesInternal)Property).OverageRefund = value; }

        /// <summary>Internal Acessors for PriceHidden</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalanceInternal.PriceHidden { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesInternal)Property).PriceHidden; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesInternal)Property).PriceHidden = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalanceProperties Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalanceInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.BalanceProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ServiceOverage</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalanceInternal.ServiceOverage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesInternal)Property).ServiceOverage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesInternal)Property).ServiceOverage = value; }

        /// <summary>Internal Acessors for TotalOverage</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalanceInternal.TotalOverage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesInternal)Property).TotalOverage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesInternal)Property).TotalOverage = value; }

        /// <summary>Internal Acessors for TotalUsage</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalanceInternal.TotalUsage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesInternal)Property).TotalUsage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesInternal)Property).TotalUsage = value; }

        /// <summary>Internal Acessors for Utilized</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalanceInternal.Utilized { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesInternal)Property).Utilized; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesInternal)Property).Utilized = value; }

        /// <summary>Internal Acessors for Etag</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IResourceInternal.Etag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IResourceInternal)__resource).Etag; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IResourceInternal)__resource).Etag = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for Tag</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IResourceTags Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IResourceInternal.Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IResourceInternal)__resource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IResourceInternal)__resource).Tag = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IResourceInternal)__resource).Type = value; }

        /// <summary>The ID that uniquely identifies an event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IResourceInternal)__resource).Name; }

        /// <summary>Total new purchase amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? NewPurchase { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesInternal)Property).NewPurchase; }

        /// <summary>List of new purchases.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesNewPurchasesDetailsItem[] NewPurchasesDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesInternal)Property).NewPurchasesDetail; }

        /// <summary>Overage Refunds</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? OverageRefund { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesInternal)Property).OverageRefund; }

        /// <summary>Price is hidden or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public bool? PriceHidden { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesInternal)Property).PriceHidden; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalanceProperties _property;

        /// <summary>The properties of the balance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalanceProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.BalanceProperties()); set => this._property = value; }

        /// <summary>Overage for Azure services.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? ServiceOverage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesInternal)Property).ServiceOverage; }

        /// <summary>Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IResourceInternal)__resource).Tag; }

        /// <summary>serviceOverage + chargesBilledSeparately.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? TotalOverage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesInternal)Property).TotalOverage; }

        /// <summary>Azure service commitment + total Overage.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? TotalUsage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesInternal)Property).TotalUsage; }

        /// <summary>Resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IResourceInternal)__resource).Type; }

        /// <summary>Total Commitment usage.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? Utilized { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesInternal)Property).Utilized; }

        /// <summary>Creates an new <see cref="Balance" /> instance.</summary>
        public Balance()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// A balance resource.
    public partial interface IBalance :
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IResource
    {
        /// <summary>Total adjustment amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Total adjustment amount.",
        SerializedName = @"adjustments",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? Adjustment { get;  }
        /// <summary>List of Adjustments (Promo credit, SIE credit etc.).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of Adjustments (Promo credit, SIE credit etc.).",
        SerializedName = @"adjustmentDetails",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesAdjustmentDetailsItem) })]
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesAdjustmentDetailsItem[] AdjustmentDetail { get;  }
        /// <summary>Total charges for Azure Marketplace.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Total charges for Azure Marketplace.",
        SerializedName = @"azureMarketplaceServiceCharges",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? AzureMarketplaceServiceCharge { get;  }
        /// <summary>The beginning balance for the billing period.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The beginning balance for the billing period.",
        SerializedName = @"beginningBalance",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? BeginningBalance { get;  }
        /// <summary>The billing frequency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The billing frequency.",
        SerializedName = @"billingFrequency",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.BillingFrequency) })]
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.BillingFrequency? BillingFrequency { get; set; }
        /// <summary>Charges Billed separately.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Charges Billed separately.",
        SerializedName = @"chargesBilledSeparately",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? ChargesBilledSeparately { get;  }
        /// <summary>The ISO currency in which the meter is charged, for example, USD.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The ISO currency in which the meter is charged, for example, USD.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string Currency { get;  }
        /// <summary>
        /// The ending balance for the billing period (for open periods this will be updated daily).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The ending balance for the billing period (for open periods this will be updated daily).",
        SerializedName = @"endingBalance",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? EndingBalance { get;  }
        /// <summary>Total new purchase amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Total new purchase amount.",
        SerializedName = @"newPurchases",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? NewPurchase { get;  }
        /// <summary>List of new purchases.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of new purchases.",
        SerializedName = @"newPurchasesDetails",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesNewPurchasesDetailsItem) })]
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesNewPurchasesDetailsItem[] NewPurchasesDetail { get;  }
        /// <summary>Overage Refunds</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Overage Refunds",
        SerializedName = @"overageRefund",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? OverageRefund { get;  }
        /// <summary>Price is hidden or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Price is hidden or not.",
        SerializedName = @"priceHidden",
        PossibleTypes = new [] { typeof(bool) })]
        bool? PriceHidden { get;  }
        /// <summary>Overage for Azure services.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Overage for Azure services.",
        SerializedName = @"serviceOverage",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? ServiceOverage { get;  }
        /// <summary>serviceOverage + chargesBilledSeparately.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"serviceOverage + chargesBilledSeparately.",
        SerializedName = @"totalOverage",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? TotalOverage { get;  }
        /// <summary>Azure service commitment + total Overage.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Azure service commitment + total Overage.",
        SerializedName = @"totalUsage",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? TotalUsage { get;  }
        /// <summary>Total Commitment usage.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Total Commitment usage.",
        SerializedName = @"utilized",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? Utilized { get;  }

    }
    /// A balance resource.
    internal partial interface IBalanceInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IResourceInternal
    {
        /// <summary>Total adjustment amount.</summary>
        decimal? Adjustment { get; set; }
        /// <summary>List of Adjustments (Promo credit, SIE credit etc.).</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesAdjustmentDetailsItem[] AdjustmentDetail { get; set; }
        /// <summary>Total charges for Azure Marketplace.</summary>
        decimal? AzureMarketplaceServiceCharge { get; set; }
        /// <summary>The beginning balance for the billing period.</summary>
        decimal? BeginningBalance { get; set; }
        /// <summary>The billing frequency.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.BillingFrequency? BillingFrequency { get; set; }
        /// <summary>Charges Billed separately.</summary>
        decimal? ChargesBilledSeparately { get; set; }
        /// <summary>The ISO currency in which the meter is charged, for example, USD.</summary>
        string Currency { get; set; }
        /// <summary>
        /// The ending balance for the billing period (for open periods this will be updated daily).
        /// </summary>
        decimal? EndingBalance { get; set; }
        /// <summary>Total new purchase amount.</summary>
        decimal? NewPurchase { get; set; }
        /// <summary>List of new purchases.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalancePropertiesNewPurchasesDetailsItem[] NewPurchasesDetail { get; set; }
        /// <summary>Overage Refunds</summary>
        decimal? OverageRefund { get; set; }
        /// <summary>Price is hidden or not.</summary>
        bool? PriceHidden { get; set; }
        /// <summary>The properties of the balance.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBalanceProperties Property { get; set; }
        /// <summary>Overage for Azure services.</summary>
        decimal? ServiceOverage { get; set; }
        /// <summary>serviceOverage + chargesBilledSeparately.</summary>
        decimal? TotalOverage { get; set; }
        /// <summary>Azure service commitment + total Overage.</summary>
        decimal? TotalUsage { get; set; }
        /// <summary>Total Commitment usage.</summary>
        decimal? Utilized { get; set; }

    }
}