// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Extensions;

    /// <summary>A lot summary resource.</summary>
    public partial class LotSummary :
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotSummary,
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotSummaryInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResource __proxyResource = new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ProxyResource();

        /// <summary>The billing currency of the lot.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string BillingCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).BillingCurrency; }

        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string ClosedBalanceCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).ClosedBalanceCurrency; }

        /// <summary>The exchange rate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? ClosedBalanceInBillingCurrencyExchangeRate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).ClosedBalanceInBillingCurrencyExchangeRate; }

        /// <summary>The exchange rate month.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public int? ClosedBalanceInBillingCurrencyExchangeRateMonth { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).ClosedBalanceInBillingCurrencyExchangeRateMonth; }

        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? ClosedBalanceInBillingCurrencyValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).ClosedBalanceInBillingCurrencyValue; }

        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? ClosedBalanceValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).ClosedBalanceValue; }

        /// <summary>The currency of the lot.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string CreditCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).CreditCurrency; }

        /// <summary>
        /// eTag of the resource. To handle concurrent update scenario, this field will be used to determine whether the user is updating
        /// the latest version or not.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inherited)]
        public string ETag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResourceInternal)__proxyResource).ETag; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResourceInternal)__proxyResource).ETag = value ?? null; }

        /// <summary>The expiration date of a lot.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public global::System.DateTime? ExpirationDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).ExpirationDate; }

        /// <summary>Resource Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResourceInternal)__proxyResource).Id; }

        /// <summary>
        /// If true, the listed details are based on an estimation and it will be subjected to change.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public bool? IsEstimatedBalance { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).IsEstimatedBalance; }

        /// <summary>Internal Acessors for BillingCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotSummaryInternal.BillingCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).BillingCurrency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).BillingCurrency = value; }

        /// <summary>Internal Acessors for ClosedBalance</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmount Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotSummaryInternal.ClosedBalance { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).ClosedBalance; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).ClosedBalance = value; }

        /// <summary>Internal Acessors for ClosedBalanceCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotSummaryInternal.ClosedBalanceCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).ClosedBalanceCurrency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).ClosedBalanceCurrency = value; }

        /// <summary>Internal Acessors for ClosedBalanceInBillingCurrencyExchangeRate</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotSummaryInternal.ClosedBalanceInBillingCurrencyExchangeRate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).ClosedBalanceInBillingCurrencyExchangeRate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).ClosedBalanceInBillingCurrencyExchangeRate = value; }

        /// <summary>Internal Acessors for ClosedBalanceInBillingCurrencyExchangeRateMonth</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotSummaryInternal.ClosedBalanceInBillingCurrencyExchangeRateMonth { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).ClosedBalanceInBillingCurrencyExchangeRateMonth; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).ClosedBalanceInBillingCurrencyExchangeRateMonth = value; }

        /// <summary>Internal Acessors for ClosedBalanceInBillingCurrencyValue</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotSummaryInternal.ClosedBalanceInBillingCurrencyValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).ClosedBalanceInBillingCurrencyValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).ClosedBalanceInBillingCurrencyValue = value; }

        /// <summary>Internal Acessors for ClosedBalanceValue</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotSummaryInternal.ClosedBalanceValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).ClosedBalanceValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).ClosedBalanceValue = value; }

        /// <summary>Internal Acessors for CreditCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotSummaryInternal.CreditCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).CreditCurrency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).CreditCurrency = value; }

        /// <summary>Internal Acessors for ExpirationDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotSummaryInternal.ExpirationDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).ExpirationDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).ExpirationDate = value; }

        /// <summary>Internal Acessors for IsEstimatedBalance</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotSummaryInternal.IsEstimatedBalance { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).IsEstimatedBalance; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).IsEstimatedBalance = value; }

        /// <summary>Internal Acessors for OriginalAmount</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmount Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotSummaryInternal.OriginalAmount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).OriginalAmount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).OriginalAmount = value; }

        /// <summary>Internal Acessors for OriginalAmountCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotSummaryInternal.OriginalAmountCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).OriginalAmountCurrency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).OriginalAmountCurrency = value; }

        /// <summary>Internal Acessors for OriginalAmountInBillingCurrencyExchangeRate</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotSummaryInternal.OriginalAmountInBillingCurrencyExchangeRate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).OriginalAmountInBillingCurrencyExchangeRate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).OriginalAmountInBillingCurrencyExchangeRate = value; }

        /// <summary>Internal Acessors for OriginalAmountInBillingCurrencyExchangeRateMonth</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotSummaryInternal.OriginalAmountInBillingCurrencyExchangeRateMonth { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).OriginalAmountInBillingCurrencyExchangeRateMonth; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).OriginalAmountInBillingCurrencyExchangeRateMonth = value; }

        /// <summary>Internal Acessors for OriginalAmountInBillingCurrencyValue</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotSummaryInternal.OriginalAmountInBillingCurrencyValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).OriginalAmountInBillingCurrencyValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).OriginalAmountInBillingCurrencyValue = value; }

        /// <summary>Internal Acessors for OriginalAmountValue</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotSummaryInternal.OriginalAmountValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).OriginalAmountValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).OriginalAmountValue = value; }

        /// <summary>Internal Acessors for PoNumber</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotSummaryInternal.PoNumber { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).PoNumber; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).PoNumber = value; }

        /// <summary>Internal Acessors for PropertiesClosedBalanceInBillingCurrency</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmountWithExchangeRate Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotSummaryInternal.PropertiesClosedBalanceInBillingCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).ClosedBalanceInBillingCurrency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).ClosedBalanceInBillingCurrency = value; }

        /// <summary>Internal Acessors for PropertiesClosedBalanceInBillingCurrencyCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotSummaryInternal.PropertiesClosedBalanceInBillingCurrencyCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).ClosedBalanceInBillingCurrencyCurrency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).ClosedBalanceInBillingCurrencyCurrency = value; }

        /// <summary>Internal Acessors for PropertiesETag</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotSummaryInternal.PropertiesETag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).ETag; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).ETag = value; }

        /// <summary>Internal Acessors for PropertiesOriginalAmountInBillingCurrency</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmountWithExchangeRate Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotSummaryInternal.PropertiesOriginalAmountInBillingCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).OriginalAmountInBillingCurrency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).OriginalAmountInBillingCurrency = value; }

        /// <summary>Internal Acessors for PropertiesOriginalAmountInBillingCurrencyCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotSummaryInternal.PropertiesOriginalAmountInBillingCurrencyCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).OriginalAmountInBillingCurrencyCurrency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).OriginalAmountInBillingCurrencyCurrency = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotProperties Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotSummaryInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.LotProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for PurchasedDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotSummaryInternal.PurchasedDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).PurchasedDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).PurchasedDate = value; }

        /// <summary>Internal Acessors for Reseller</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IReseller Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotSummaryInternal.Reseller { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).Reseller; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).Reseller = value; }

        /// <summary>Internal Acessors for ResellerDescription</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotSummaryInternal.ResellerDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).ResellerDescription; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).ResellerDescription = value; }

        /// <summary>Internal Acessors for ResellerId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotSummaryInternal.ResellerId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).ResellerId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).ResellerId = value; }

        /// <summary>Internal Acessors for Source</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.LotSource? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotSummaryInternal.Source { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).Source; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).Source = value; }

        /// <summary>Internal Acessors for StartDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotSummaryInternal.StartDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).StartDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).StartDate = value; }

        /// <summary>Internal Acessors for Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.Status? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotSummaryInternal.Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).Status = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResourceInternal)__proxyResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResourceInternal)__proxyResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResourceInternal)__proxyResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResourceInternal)__proxyResource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResourceInternal)__proxyResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResourceInternal)__proxyResource).Type = value; }

        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResourceInternal)__proxyResource).Name; }

        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string OriginalAmountCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).OriginalAmountCurrency; }

        /// <summary>The exchange rate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? OriginalAmountInBillingCurrencyExchangeRate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).OriginalAmountInBillingCurrencyExchangeRate; }

        /// <summary>The exchange rate month.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public int? OriginalAmountInBillingCurrencyExchangeRateMonth { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).OriginalAmountInBillingCurrencyExchangeRateMonth; }

        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? OriginalAmountInBillingCurrencyValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).OriginalAmountInBillingCurrencyValue; }

        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? OriginalAmountValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).OriginalAmountValue; }

        /// <summary>
        /// The po number of the invoice on which the lot was added. This property is not available for ConsumptionCommitment lots.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string PoNumber { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).PoNumber; }

        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string PropertiesClosedBalanceInBillingCurrencyCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).ClosedBalanceInBillingCurrencyCurrency; }

        /// <summary>The eTag for the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string PropertiesETag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).ETag; }

        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string PropertiesOriginalAmountInBillingCurrencyCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).OriginalAmountInBillingCurrencyCurrency; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotProperties _property;

        /// <summary>The lot properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.LotProperties()); set => this._property = value; }

        /// <summary>The date when the lot was added.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public global::System.DateTime? PurchasedDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).PurchasedDate; }

        /// <summary>The reseller property description.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string ResellerDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).ResellerDescription; }

        /// <summary>The reseller property ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string ResellerId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).ResellerId; }

        /// <summary>The source of the lot.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.LotSource? Source { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).Source; }

        /// <summary>The date when the lot became effective.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public global::System.DateTime? StartDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).StartDate; }

        /// <summary>The status of the lot.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.Status? Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)Property).Status; }

        /// <summary>Resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResourceInternal)__proxyResource).Type; }

        /// <summary>Creates an new <see cref="LotSummary" /> instance.</summary>
        public LotSummary()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__proxyResource), __proxyResource);
            await eventListener.AssertObjectIsValid(nameof(__proxyResource), __proxyResource);
        }
    }
    /// A lot summary resource.
    public partial interface ILotSummary :
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResource
    {
        /// <summary>The billing currency of the lot.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The billing currency of the lot.",
        SerializedName = @"billingCurrency",
        PossibleTypes = new [] { typeof(string) })]
        string BillingCurrency { get;  }
        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount currency.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string ClosedBalanceCurrency { get;  }
        /// <summary>The exchange rate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The exchange rate.",
        SerializedName = @"exchangeRate",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? ClosedBalanceInBillingCurrencyExchangeRate { get;  }
        /// <summary>The exchange rate month.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The exchange rate month.",
        SerializedName = @"exchangeRateMonth",
        PossibleTypes = new [] { typeof(int) })]
        int? ClosedBalanceInBillingCurrencyExchangeRateMonth { get;  }
        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? ClosedBalanceInBillingCurrencyValue { get;  }
        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? ClosedBalanceValue { get;  }
        /// <summary>The currency of the lot.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The currency of the lot.",
        SerializedName = @"creditCurrency",
        PossibleTypes = new [] { typeof(string) })]
        string CreditCurrency { get;  }
        /// <summary>The expiration date of a lot.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The expiration date of a lot.",
        SerializedName = @"expirationDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ExpirationDate { get;  }
        /// <summary>
        /// If true, the listed details are based on an estimation and it will be subjected to change.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"If true, the listed details are based on an estimation and it will be subjected to change.",
        SerializedName = @"isEstimatedBalance",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsEstimatedBalance { get;  }
        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount currency.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string OriginalAmountCurrency { get;  }
        /// <summary>The exchange rate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The exchange rate.",
        SerializedName = @"exchangeRate",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? OriginalAmountInBillingCurrencyExchangeRate { get;  }
        /// <summary>The exchange rate month.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The exchange rate month.",
        SerializedName = @"exchangeRateMonth",
        PossibleTypes = new [] { typeof(int) })]
        int? OriginalAmountInBillingCurrencyExchangeRateMonth { get;  }
        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? OriginalAmountInBillingCurrencyValue { get;  }
        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? OriginalAmountValue { get;  }
        /// <summary>
        /// The po number of the invoice on which the lot was added. This property is not available for ConsumptionCommitment lots.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The po number of the invoice on which the lot was added. This property is not available for ConsumptionCommitment lots.",
        SerializedName = @"poNumber",
        PossibleTypes = new [] { typeof(string) })]
        string PoNumber { get;  }
        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount currency.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string PropertiesClosedBalanceInBillingCurrencyCurrency { get;  }
        /// <summary>The eTag for the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The eTag for the resource.",
        SerializedName = @"eTag",
        PossibleTypes = new [] { typeof(string) })]
        string PropertiesETag { get;  }
        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount currency.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string PropertiesOriginalAmountInBillingCurrencyCurrency { get;  }
        /// <summary>The date when the lot was added.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The date when the lot was added.",
        SerializedName = @"purchasedDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? PurchasedDate { get;  }
        /// <summary>The reseller property description.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The reseller property description.",
        SerializedName = @"resellerDescription",
        PossibleTypes = new [] { typeof(string) })]
        string ResellerDescription { get;  }
        /// <summary>The reseller property ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The reseller property ID.",
        SerializedName = @"resellerId",
        PossibleTypes = new [] { typeof(string) })]
        string ResellerId { get;  }
        /// <summary>The source of the lot.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The source of the lot.",
        SerializedName = @"source",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.LotSource) })]
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.LotSource? Source { get;  }
        /// <summary>The date when the lot became effective.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The date when the lot became effective.",
        SerializedName = @"startDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? StartDate { get;  }
        /// <summary>The status of the lot.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The status of the lot.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.Status) })]
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.Status? Status { get;  }

    }
    /// A lot summary resource.
    internal partial interface ILotSummaryInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResourceInternal
    {
        /// <summary>The billing currency of the lot.</summary>
        string BillingCurrency { get; set; }
        /// <summary>The balance as of the last invoice.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmount ClosedBalance { get; set; }
        /// <summary>Amount currency.</summary>
        string ClosedBalanceCurrency { get; set; }
        /// <summary>The exchange rate.</summary>
        decimal? ClosedBalanceInBillingCurrencyExchangeRate { get; set; }
        /// <summary>The exchange rate month.</summary>
        int? ClosedBalanceInBillingCurrencyExchangeRateMonth { get; set; }
        /// <summary>Amount.</summary>
        decimal? ClosedBalanceInBillingCurrencyValue { get; set; }
        /// <summary>Amount.</summary>
        decimal? ClosedBalanceValue { get; set; }
        /// <summary>The currency of the lot.</summary>
        string CreditCurrency { get; set; }
        /// <summary>The expiration date of a lot.</summary>
        global::System.DateTime? ExpirationDate { get; set; }
        /// <summary>
        /// If true, the listed details are based on an estimation and it will be subjected to change.
        /// </summary>
        bool? IsEstimatedBalance { get; set; }
        /// <summary>The original amount of a lot.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmount OriginalAmount { get; set; }
        /// <summary>Amount currency.</summary>
        string OriginalAmountCurrency { get; set; }
        /// <summary>The exchange rate.</summary>
        decimal? OriginalAmountInBillingCurrencyExchangeRate { get; set; }
        /// <summary>The exchange rate month.</summary>
        int? OriginalAmountInBillingCurrencyExchangeRateMonth { get; set; }
        /// <summary>Amount.</summary>
        decimal? OriginalAmountInBillingCurrencyValue { get; set; }
        /// <summary>Amount.</summary>
        decimal? OriginalAmountValue { get; set; }
        /// <summary>
        /// The po number of the invoice on which the lot was added. This property is not available for ConsumptionCommitment lots.
        /// </summary>
        string PoNumber { get; set; }
        /// <summary>The balance as of the last invoice in billing currency.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmountWithExchangeRate PropertiesClosedBalanceInBillingCurrency { get; set; }
        /// <summary>Amount currency.</summary>
        string PropertiesClosedBalanceInBillingCurrencyCurrency { get; set; }
        /// <summary>The eTag for the resource.</summary>
        string PropertiesETag { get; set; }
        /// <summary>The original amount of a lot in billing currency.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmountWithExchangeRate PropertiesOriginalAmountInBillingCurrency { get; set; }
        /// <summary>Amount currency.</summary>
        string PropertiesOriginalAmountInBillingCurrencyCurrency { get; set; }
        /// <summary>The lot properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotProperties Property { get; set; }
        /// <summary>The date when the lot was added.</summary>
        global::System.DateTime? PurchasedDate { get; set; }
        /// <summary>The reseller of the lot.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IReseller Reseller { get; set; }
        /// <summary>The reseller property description.</summary>
        string ResellerDescription { get; set; }
        /// <summary>The reseller property ID.</summary>
        string ResellerId { get; set; }
        /// <summary>The source of the lot.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.LotSource? Source { get; set; }
        /// <summary>The date when the lot became effective.</summary>
        global::System.DateTime? StartDate { get; set; }
        /// <summary>The status of the lot.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.Status? Status { get; set; }

    }
}