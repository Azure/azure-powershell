// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Extensions;

    /// <summary>An event summary resource.</summary>
    public partial class EventSummary :
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummary,
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResource __proxyResource = new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ProxyResource();

        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string AdjustmentCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).AdjustmentCurrency; }

        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string AdjustmentInBillingCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).AdjustmentInBillingCurrency; }

        /// <summary>The exchange rate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? AdjustmentInBillingCurrencyExchangeRate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).AdjustmentInBillingCurrencyExchangeRate; }

        /// <summary>The exchange rate month.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public int? AdjustmentInBillingCurrencyExchangeRateMonth { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).AdjustmentInBillingCurrencyExchangeRateMonth; }

        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? AdjustmentInBillingCurrencyValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).AdjustmentInBillingCurrencyValue; }

        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? AdjustmentValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).AdjustmentValue; }

        /// <summary>The billing currency of the event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string BillingCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).BillingCurrency; }

        /// <summary>
        /// The display name of the billing profile for which the event happened. The property is only available for billing account
        /// of type MicrosoftCustomerAgreement.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string BillingProfileDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).BillingProfileDisplayName; }

        /// <summary>
        /// The ID that uniquely identifies the billing profile for which the event happened. The property is only available for billing
        /// account of type MicrosoftCustomerAgreement.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string BillingProfileId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).BillingProfileId; }

        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string CanceledCreditCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).CanceledCreditCurrency; }

        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? CanceledCreditValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).CanceledCreditValue; }

        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string ChargeCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).ChargeCurrency; }

        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string ChargeInBillingCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).ChargeInBillingCurrency; }

        /// <summary>The exchange rate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? ChargeInBillingCurrencyExchangeRate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).ChargeInBillingCurrencyExchangeRate; }

        /// <summary>The exchange rate month.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public int? ChargeInBillingCurrencyExchangeRateMonth { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).ChargeInBillingCurrencyExchangeRateMonth; }

        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? ChargeInBillingCurrencyValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).ChargeInBillingCurrencyValue; }

        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? ChargeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).ChargeValue; }

        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string ClosedBalanceCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).ClosedBalanceCurrency; }

        /// <summary>The exchange rate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? ClosedBalanceInBillingCurrencyExchangeRate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).ClosedBalanceInBillingCurrencyExchangeRate; }

        /// <summary>The exchange rate month.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public int? ClosedBalanceInBillingCurrencyExchangeRateMonth { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).ClosedBalanceInBillingCurrencyExchangeRateMonth; }

        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? ClosedBalanceInBillingCurrencyValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).ClosedBalanceInBillingCurrencyValue; }

        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? ClosedBalanceValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).ClosedBalanceValue; }

        /// <summary>The credit currency of the event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string CreditCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).CreditCurrency; }

        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string CreditExpiredCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).CreditExpiredCurrency; }

        /// <summary>The exchange rate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? CreditExpiredInBillingCurrencyExchangeRate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).CreditExpiredInBillingCurrencyExchangeRate; }

        /// <summary>The exchange rate month.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public int? CreditExpiredInBillingCurrencyExchangeRateMonth { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).CreditExpiredInBillingCurrencyExchangeRateMonth; }

        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? CreditExpiredInBillingCurrencyValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).CreditExpiredInBillingCurrencyValue; }

        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? CreditExpiredValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).CreditExpiredValue; }

        /// <summary>The description of the event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string Description { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).Description; }

        /// <summary>
        /// eTag of the resource. To handle concurrent update scenario, this field will be used to determine whether the user is updating
        /// the latest version or not.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inherited)]
        public string ETag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResourceInternal)__proxyResource).ETag; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResourceInternal)__proxyResource).ETag = value ?? null; }

        /// <summary>Identifies the type of the event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.EventType? EventType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).EventType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).EventType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.EventType)""); }

        /// <summary>Resource Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResourceInternal)__proxyResource).Id; }

        /// <summary>
        /// The number which uniquely identifies the invoice on which the event was billed. This will be empty for unbilled events.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string InvoiceNumber { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).InvoiceNumber; }

        /// <summary>
        /// If true, the listed details are based on an estimation and it will be subjected to change.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public bool? IsEstimatedBalance { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).IsEstimatedBalance; }

        /// <summary>The ID that uniquely identifies the lot for which the event happened.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string LotId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).LotId; }

        /// <summary>Identifies the source of the lot for which the event happened.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string LotSource { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).LotSource; }

        /// <summary>Internal Acessors for Adjustment</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmount Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.Adjustment { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).Adjustment; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).Adjustment = value; }

        /// <summary>Internal Acessors for AdjustmentCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.AdjustmentCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).AdjustmentCurrency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).AdjustmentCurrency = value; }

        /// <summary>Internal Acessors for AdjustmentInBillingCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.AdjustmentInBillingCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).AdjustmentInBillingCurrency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).AdjustmentInBillingCurrency = value; }

        /// <summary>Internal Acessors for AdjustmentInBillingCurrencyExchangeRate</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.AdjustmentInBillingCurrencyExchangeRate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).AdjustmentInBillingCurrencyExchangeRate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).AdjustmentInBillingCurrencyExchangeRate = value; }

        /// <summary>Internal Acessors for AdjustmentInBillingCurrencyExchangeRateMonth</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.AdjustmentInBillingCurrencyExchangeRateMonth { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).AdjustmentInBillingCurrencyExchangeRateMonth; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).AdjustmentInBillingCurrencyExchangeRateMonth = value; }

        /// <summary>Internal Acessors for AdjustmentInBillingCurrencyValue</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.AdjustmentInBillingCurrencyValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).AdjustmentInBillingCurrencyValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).AdjustmentInBillingCurrencyValue = value; }

        /// <summary>Internal Acessors for AdjustmentValue</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.AdjustmentValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).AdjustmentValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).AdjustmentValue = value; }

        /// <summary>Internal Acessors for AdjustmentsInBillingCurrency</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmountWithExchangeRate Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.AdjustmentsInBillingCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).AdjustmentsInBillingCurrency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).AdjustmentsInBillingCurrency = value; }

        /// <summary>Internal Acessors for BillingCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.BillingCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).BillingCurrency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).BillingCurrency = value; }

        /// <summary>Internal Acessors for BillingProfileDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.BillingProfileDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).BillingProfileDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).BillingProfileDisplayName = value; }

        /// <summary>Internal Acessors for BillingProfileId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.BillingProfileId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).BillingProfileId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).BillingProfileId = value; }

        /// <summary>Internal Acessors for CanceledCredit</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmount Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.CanceledCredit { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).CanceledCredit; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).CanceledCredit = value; }

        /// <summary>Internal Acessors for CanceledCreditCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.CanceledCreditCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).CanceledCreditCurrency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).CanceledCreditCurrency = value; }

        /// <summary>Internal Acessors for CanceledCreditValue</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.CanceledCreditValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).CanceledCreditValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).CanceledCreditValue = value; }

        /// <summary>Internal Acessors for Charge</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmount Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.Charge { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).Charge; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).Charge = value; }

        /// <summary>Internal Acessors for ChargeCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.ChargeCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).ChargeCurrency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).ChargeCurrency = value; }

        /// <summary>Internal Acessors for ChargeInBillingCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.ChargeInBillingCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).ChargeInBillingCurrency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).ChargeInBillingCurrency = value; }

        /// <summary>Internal Acessors for ChargeInBillingCurrencyExchangeRate</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.ChargeInBillingCurrencyExchangeRate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).ChargeInBillingCurrencyExchangeRate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).ChargeInBillingCurrencyExchangeRate = value; }

        /// <summary>Internal Acessors for ChargeInBillingCurrencyExchangeRateMonth</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.ChargeInBillingCurrencyExchangeRateMonth { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).ChargeInBillingCurrencyExchangeRateMonth; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).ChargeInBillingCurrencyExchangeRateMonth = value; }

        /// <summary>Internal Acessors for ChargeInBillingCurrencyValue</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.ChargeInBillingCurrencyValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).ChargeInBillingCurrencyValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).ChargeInBillingCurrencyValue = value; }

        /// <summary>Internal Acessors for ChargeValue</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.ChargeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).ChargeValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).ChargeValue = value; }

        /// <summary>Internal Acessors for ChargesInBillingCurrency</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmountWithExchangeRate Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.ChargesInBillingCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).ChargesInBillingCurrency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).ChargesInBillingCurrency = value; }

        /// <summary>Internal Acessors for ClosedBalance</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmount Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.ClosedBalance { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).ClosedBalance; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).ClosedBalance = value; }

        /// <summary>Internal Acessors for ClosedBalanceCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.ClosedBalanceCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).ClosedBalanceCurrency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).ClosedBalanceCurrency = value; }

        /// <summary>Internal Acessors for ClosedBalanceInBillingCurrencyExchangeRate</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.ClosedBalanceInBillingCurrencyExchangeRate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).ClosedBalanceInBillingCurrencyExchangeRate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).ClosedBalanceInBillingCurrencyExchangeRate = value; }

        /// <summary>Internal Acessors for ClosedBalanceInBillingCurrencyExchangeRateMonth</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.ClosedBalanceInBillingCurrencyExchangeRateMonth { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).ClosedBalanceInBillingCurrencyExchangeRateMonth; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).ClosedBalanceInBillingCurrencyExchangeRateMonth = value; }

        /// <summary>Internal Acessors for ClosedBalanceInBillingCurrencyValue</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.ClosedBalanceInBillingCurrencyValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).ClosedBalanceInBillingCurrencyValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).ClosedBalanceInBillingCurrencyValue = value; }

        /// <summary>Internal Acessors for ClosedBalanceValue</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.ClosedBalanceValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).ClosedBalanceValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).ClosedBalanceValue = value; }

        /// <summary>Internal Acessors for CreditCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.CreditCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).CreditCurrency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).CreditCurrency = value; }

        /// <summary>Internal Acessors for CreditExpired</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmount Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.CreditExpired { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).CreditExpired; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).CreditExpired = value; }

        /// <summary>Internal Acessors for CreditExpiredCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.CreditExpiredCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).CreditExpiredCurrency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).CreditExpiredCurrency = value; }

        /// <summary>Internal Acessors for CreditExpiredInBillingCurrencyExchangeRate</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.CreditExpiredInBillingCurrencyExchangeRate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).CreditExpiredInBillingCurrencyExchangeRate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).CreditExpiredInBillingCurrencyExchangeRate = value; }

        /// <summary>Internal Acessors for CreditExpiredInBillingCurrencyExchangeRateMonth</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.CreditExpiredInBillingCurrencyExchangeRateMonth { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).CreditExpiredInBillingCurrencyExchangeRateMonth; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).CreditExpiredInBillingCurrencyExchangeRateMonth = value; }

        /// <summary>Internal Acessors for CreditExpiredInBillingCurrencyValue</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.CreditExpiredInBillingCurrencyValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).CreditExpiredInBillingCurrencyValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).CreditExpiredInBillingCurrencyValue = value; }

        /// <summary>Internal Acessors for CreditExpiredValue</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.CreditExpiredValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).CreditExpiredValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).CreditExpiredValue = value; }

        /// <summary>Internal Acessors for Description</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.Description { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).Description = value; }

        /// <summary>Internal Acessors for InvoiceNumber</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.InvoiceNumber { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).InvoiceNumber; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).InvoiceNumber = value; }

        /// <summary>Internal Acessors for IsEstimatedBalance</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.IsEstimatedBalance { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).IsEstimatedBalance; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).IsEstimatedBalance = value; }

        /// <summary>Internal Acessors for LotId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.LotId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).LotId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).LotId = value; }

        /// <summary>Internal Acessors for LotSource</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.LotSource { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).LotSource; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).LotSource = value; }

        /// <summary>Internal Acessors for NewCredit</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmount Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.NewCredit { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).NewCredit; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).NewCredit = value; }

        /// <summary>Internal Acessors for NewCreditCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.NewCreditCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).NewCreditCurrency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).NewCreditCurrency = value; }

        /// <summary>Internal Acessors for NewCreditInBillingCurrencyExchangeRate</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.NewCreditInBillingCurrencyExchangeRate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).NewCreditInBillingCurrencyExchangeRate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).NewCreditInBillingCurrencyExchangeRate = value; }

        /// <summary>Internal Acessors for NewCreditInBillingCurrencyExchangeRateMonth</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.NewCreditInBillingCurrencyExchangeRateMonth { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).NewCreditInBillingCurrencyExchangeRateMonth; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).NewCreditInBillingCurrencyExchangeRateMonth = value; }

        /// <summary>Internal Acessors for NewCreditInBillingCurrencyValue</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.NewCreditInBillingCurrencyValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).NewCreditInBillingCurrencyValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).NewCreditInBillingCurrencyValue = value; }

        /// <summary>Internal Acessors for NewCreditValue</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.NewCreditValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).NewCreditValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).NewCreditValue = value; }

        /// <summary>Internal Acessors for PropertiesClosedBalanceInBillingCurrency</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmountWithExchangeRate Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.PropertiesClosedBalanceInBillingCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).ClosedBalanceInBillingCurrency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).ClosedBalanceInBillingCurrency = value; }

        /// <summary>Internal Acessors for PropertiesClosedBalanceInBillingCurrencyCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.PropertiesClosedBalanceInBillingCurrencyCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).ClosedBalanceInBillingCurrencyCurrency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).ClosedBalanceInBillingCurrencyCurrency = value; }

        /// <summary>Internal Acessors for PropertiesCreditExpiredInBillingCurrency</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmountWithExchangeRate Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.PropertiesCreditExpiredInBillingCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).CreditExpiredInBillingCurrency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).CreditExpiredInBillingCurrency = value; }

        /// <summary>Internal Acessors for PropertiesCreditExpiredInBillingCurrencyCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.PropertiesCreditExpiredInBillingCurrencyCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).CreditExpiredInBillingCurrencyCurrency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).CreditExpiredInBillingCurrencyCurrency = value; }

        /// <summary>Internal Acessors for PropertiesETag</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.PropertiesETag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).ETag; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).ETag = value; }

        /// <summary>Internal Acessors for PropertiesNewCreditInBillingCurrency</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmountWithExchangeRate Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.PropertiesNewCreditInBillingCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).NewCreditInBillingCurrency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).NewCreditInBillingCurrency = value; }

        /// <summary>Internal Acessors for PropertiesNewCreditInBillingCurrencyCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.PropertiesNewCreditInBillingCurrencyCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).NewCreditInBillingCurrencyCurrency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).NewCreditInBillingCurrencyCurrency = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventProperties Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.EventProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for Reseller</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IReseller Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.Reseller { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).Reseller; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).Reseller = value; }

        /// <summary>Internal Acessors for ResellerDescription</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.ResellerDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).ResellerDescription; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).ResellerDescription = value; }

        /// <summary>Internal Acessors for ResellerId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.ResellerId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).ResellerId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).ResellerId = value; }

        /// <summary>Internal Acessors for TransactionDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventSummaryInternal.TransactionDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).TransactionDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).TransactionDate = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResourceInternal)__proxyResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResourceInternal)__proxyResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResourceInternal)__proxyResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResourceInternal)__proxyResource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResourceInternal)__proxyResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResourceInternal)__proxyResource).Type = value; }

        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResourceInternal)__proxyResource).Name; }

        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string NewCreditCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).NewCreditCurrency; }

        /// <summary>The exchange rate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? NewCreditInBillingCurrencyExchangeRate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).NewCreditInBillingCurrencyExchangeRate; }

        /// <summary>The exchange rate month.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public int? NewCreditInBillingCurrencyExchangeRateMonth { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).NewCreditInBillingCurrencyExchangeRateMonth; }

        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? NewCreditInBillingCurrencyValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).NewCreditInBillingCurrencyValue; }

        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? NewCreditValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).NewCreditValue; }

        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string PropertiesClosedBalanceInBillingCurrencyCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).ClosedBalanceInBillingCurrencyCurrency; }

        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string PropertiesCreditExpiredInBillingCurrencyCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).CreditExpiredInBillingCurrencyCurrency; }

        /// <summary>The eTag for the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string PropertiesETag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).ETag; }

        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string PropertiesNewCreditInBillingCurrencyCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).NewCreditInBillingCurrencyCurrency; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventProperties _property;

        /// <summary>The event properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.EventProperties()); set => this._property = value; }

        /// <summary>The reseller property description.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string ResellerDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).ResellerDescription; }

        /// <summary>The reseller property ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string ResellerId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).ResellerId; }

        /// <summary>The date of the event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public global::System.DateTime? TransactionDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventPropertiesInternal)Property).TransactionDate; }

        /// <summary>Resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResourceInternal)__proxyResource).Type; }

        /// <summary>Creates an new <see cref="EventSummary" /> instance.</summary>
        public EventSummary()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__proxyResource), __proxyResource);
            await eventListener.AssertObjectIsValid(nameof(__proxyResource), __proxyResource);
        }
    }
    /// An event summary resource.
    public partial interface IEventSummary :
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResource
    {
        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount currency.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string AdjustmentCurrency { get;  }
        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount currency.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string AdjustmentInBillingCurrency { get;  }
        /// <summary>The exchange rate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The exchange rate.",
        SerializedName = @"exchangeRate",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? AdjustmentInBillingCurrencyExchangeRate { get;  }
        /// <summary>The exchange rate month.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The exchange rate month.",
        SerializedName = @"exchangeRateMonth",
        PossibleTypes = new [] { typeof(int) })]
        int? AdjustmentInBillingCurrencyExchangeRateMonth { get;  }
        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? AdjustmentInBillingCurrencyValue { get;  }
        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? AdjustmentValue { get;  }
        /// <summary>The billing currency of the event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The billing currency of the event.",
        SerializedName = @"billingCurrency",
        PossibleTypes = new [] { typeof(string) })]
        string BillingCurrency { get;  }
        /// <summary>
        /// The display name of the billing profile for which the event happened. The property is only available for billing account
        /// of type MicrosoftCustomerAgreement.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The display name of the billing profile for which the event happened. The property is only available for billing account of type MicrosoftCustomerAgreement.",
        SerializedName = @"billingProfileDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string BillingProfileDisplayName { get;  }
        /// <summary>
        /// The ID that uniquely identifies the billing profile for which the event happened. The property is only available for billing
        /// account of type MicrosoftCustomerAgreement.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The ID that uniquely identifies the billing profile for which the event happened. The property is only available for billing account of type MicrosoftCustomerAgreement. ",
        SerializedName = @"billingProfileId",
        PossibleTypes = new [] { typeof(string) })]
        string BillingProfileId { get;  }
        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount currency.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string CanceledCreditCurrency { get;  }
        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? CanceledCreditValue { get;  }
        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount currency.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string ChargeCurrency { get;  }
        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount currency.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string ChargeInBillingCurrency { get;  }
        /// <summary>The exchange rate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The exchange rate.",
        SerializedName = @"exchangeRate",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? ChargeInBillingCurrencyExchangeRate { get;  }
        /// <summary>The exchange rate month.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The exchange rate month.",
        SerializedName = @"exchangeRateMonth",
        PossibleTypes = new [] { typeof(int) })]
        int? ChargeInBillingCurrencyExchangeRateMonth { get;  }
        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? ChargeInBillingCurrencyValue { get;  }
        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? ChargeValue { get;  }
        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount currency.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string ClosedBalanceCurrency { get;  }
        /// <summary>The exchange rate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The exchange rate.",
        SerializedName = @"exchangeRate",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? ClosedBalanceInBillingCurrencyExchangeRate { get;  }
        /// <summary>The exchange rate month.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The exchange rate month.",
        SerializedName = @"exchangeRateMonth",
        PossibleTypes = new [] { typeof(int) })]
        int? ClosedBalanceInBillingCurrencyExchangeRateMonth { get;  }
        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? ClosedBalanceInBillingCurrencyValue { get;  }
        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? ClosedBalanceValue { get;  }
        /// <summary>The credit currency of the event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The credit currency of the event.",
        SerializedName = @"creditCurrency",
        PossibleTypes = new [] { typeof(string) })]
        string CreditCurrency { get;  }
        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount currency.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string CreditExpiredCurrency { get;  }
        /// <summary>The exchange rate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The exchange rate.",
        SerializedName = @"exchangeRate",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? CreditExpiredInBillingCurrencyExchangeRate { get;  }
        /// <summary>The exchange rate month.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The exchange rate month.",
        SerializedName = @"exchangeRateMonth",
        PossibleTypes = new [] { typeof(int) })]
        int? CreditExpiredInBillingCurrencyExchangeRateMonth { get;  }
        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? CreditExpiredInBillingCurrencyValue { get;  }
        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? CreditExpiredValue { get;  }
        /// <summary>The description of the event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The description of the event.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get;  }
        /// <summary>Identifies the type of the event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Identifies the type of the event.",
        SerializedName = @"eventType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.EventType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.EventType? EventType { get; set; }
        /// <summary>
        /// The number which uniquely identifies the invoice on which the event was billed. This will be empty for unbilled events.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number which uniquely identifies the invoice on which the event was billed. This will be empty for unbilled events.",
        SerializedName = @"invoiceNumber",
        PossibleTypes = new [] { typeof(string) })]
        string InvoiceNumber { get;  }
        /// <summary>
        /// If true, the listed details are based on an estimation and it will be subjected to change.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"If true, the listed details are based on an estimation and it will be subjected to change.",
        SerializedName = @"isEstimatedBalance",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsEstimatedBalance { get;  }
        /// <summary>The ID that uniquely identifies the lot for which the event happened.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The ID that uniquely identifies the lot for which the event happened.",
        SerializedName = @"lotId",
        PossibleTypes = new [] { typeof(string) })]
        string LotId { get;  }
        /// <summary>Identifies the source of the lot for which the event happened.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Identifies the source of the lot for which the event happened. ",
        SerializedName = @"lotSource",
        PossibleTypes = new [] { typeof(string) })]
        string LotSource { get;  }
        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount currency.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string NewCreditCurrency { get;  }
        /// <summary>The exchange rate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The exchange rate.",
        SerializedName = @"exchangeRate",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? NewCreditInBillingCurrencyExchangeRate { get;  }
        /// <summary>The exchange rate month.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The exchange rate month.",
        SerializedName = @"exchangeRateMonth",
        PossibleTypes = new [] { typeof(int) })]
        int? NewCreditInBillingCurrencyExchangeRateMonth { get;  }
        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? NewCreditInBillingCurrencyValue { get;  }
        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? NewCreditValue { get;  }
        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount currency.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string PropertiesClosedBalanceInBillingCurrencyCurrency { get;  }
        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount currency.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string PropertiesCreditExpiredInBillingCurrencyCurrency { get;  }
        /// <summary>The eTag for the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The eTag for the resource.",
        SerializedName = @"eTag",
        PossibleTypes = new [] { typeof(string) })]
        string PropertiesETag { get;  }
        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount currency.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string PropertiesNewCreditInBillingCurrencyCurrency { get;  }
        /// <summary>The reseller property description.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The reseller property description.",
        SerializedName = @"resellerDescription",
        PossibleTypes = new [] { typeof(string) })]
        string ResellerDescription { get;  }
        /// <summary>The reseller property ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The reseller property ID.",
        SerializedName = @"resellerId",
        PossibleTypes = new [] { typeof(string) })]
        string ResellerId { get;  }
        /// <summary>The date of the event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The date of the event.",
        SerializedName = @"transactionDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? TransactionDate { get;  }

    }
    /// An event summary resource.
    internal partial interface IEventSummaryInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResourceInternal
    {
        /// <summary>
        /// The amount of balance adjustment. The property is not available for ConsumptionCommitment lots.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmount Adjustment { get; set; }
        /// <summary>Amount currency.</summary>
        string AdjustmentCurrency { get; set; }
        /// <summary>Amount currency.</summary>
        string AdjustmentInBillingCurrency { get; set; }
        /// <summary>The exchange rate.</summary>
        decimal? AdjustmentInBillingCurrencyExchangeRate { get; set; }
        /// <summary>The exchange rate month.</summary>
        int? AdjustmentInBillingCurrencyExchangeRateMonth { get; set; }
        /// <summary>Amount.</summary>
        decimal? AdjustmentInBillingCurrencyValue { get; set; }
        /// <summary>Amount.</summary>
        decimal? AdjustmentValue { get; set; }
        /// <summary>The amount of balance adjustment in billing currency.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmountWithExchangeRate AdjustmentsInBillingCurrency { get; set; }
        /// <summary>The billing currency of the event.</summary>
        string BillingCurrency { get; set; }
        /// <summary>
        /// The display name of the billing profile for which the event happened. The property is only available for billing account
        /// of type MicrosoftCustomerAgreement.
        /// </summary>
        string BillingProfileDisplayName { get; set; }
        /// <summary>
        /// The ID that uniquely identifies the billing profile for which the event happened. The property is only available for billing
        /// account of type MicrosoftCustomerAgreement.
        /// </summary>
        string BillingProfileId { get; set; }
        /// <summary>Amount of canceled credit.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmount CanceledCredit { get; set; }
        /// <summary>Amount currency.</summary>
        string CanceledCreditCurrency { get; set; }
        /// <summary>Amount.</summary>
        decimal? CanceledCreditValue { get; set; }
        /// <summary>
        /// The amount of charges for events of type SettleCharges and PendingEligibleCharges.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmount Charge { get; set; }
        /// <summary>Amount currency.</summary>
        string ChargeCurrency { get; set; }
        /// <summary>Amount currency.</summary>
        string ChargeInBillingCurrency { get; set; }
        /// <summary>The exchange rate.</summary>
        decimal? ChargeInBillingCurrencyExchangeRate { get; set; }
        /// <summary>The exchange rate month.</summary>
        int? ChargeInBillingCurrencyExchangeRateMonth { get; set; }
        /// <summary>Amount.</summary>
        decimal? ChargeInBillingCurrencyValue { get; set; }
        /// <summary>Amount.</summary>
        decimal? ChargeValue { get; set; }
        /// <summary>
        /// The amount of charges for events of type SettleCharges and PendingEligibleCharges in billing currency.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmountWithExchangeRate ChargesInBillingCurrency { get; set; }
        /// <summary>The balance after the event.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmount ClosedBalance { get; set; }
        /// <summary>Amount currency.</summary>
        string ClosedBalanceCurrency { get; set; }
        /// <summary>The exchange rate.</summary>
        decimal? ClosedBalanceInBillingCurrencyExchangeRate { get; set; }
        /// <summary>The exchange rate month.</summary>
        int? ClosedBalanceInBillingCurrencyExchangeRateMonth { get; set; }
        /// <summary>Amount.</summary>
        decimal? ClosedBalanceInBillingCurrencyValue { get; set; }
        /// <summary>Amount.</summary>
        decimal? ClosedBalanceValue { get; set; }
        /// <summary>The credit currency of the event.</summary>
        string CreditCurrency { get; set; }
        /// <summary>
        /// The amount of expired credit or commitment for NewCredit or SettleCharges event.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmount CreditExpired { get; set; }
        /// <summary>Amount currency.</summary>
        string CreditExpiredCurrency { get; set; }
        /// <summary>The exchange rate.</summary>
        decimal? CreditExpiredInBillingCurrencyExchangeRate { get; set; }
        /// <summary>The exchange rate month.</summary>
        int? CreditExpiredInBillingCurrencyExchangeRateMonth { get; set; }
        /// <summary>Amount.</summary>
        decimal? CreditExpiredInBillingCurrencyValue { get; set; }
        /// <summary>Amount.</summary>
        decimal? CreditExpiredValue { get; set; }
        /// <summary>The description of the event.</summary>
        string Description { get; set; }
        /// <summary>Identifies the type of the event.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.EventType? EventType { get; set; }
        /// <summary>
        /// The number which uniquely identifies the invoice on which the event was billed. This will be empty for unbilled events.
        /// </summary>
        string InvoiceNumber { get; set; }
        /// <summary>
        /// If true, the listed details are based on an estimation and it will be subjected to change.
        /// </summary>
        bool? IsEstimatedBalance { get; set; }
        /// <summary>The ID that uniquely identifies the lot for which the event happened.</summary>
        string LotId { get; set; }
        /// <summary>Identifies the source of the lot for which the event happened.</summary>
        string LotSource { get; set; }
        /// <summary>The amount of new credit or commitment for NewCredit or SettleCharges event.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmount NewCredit { get; set; }
        /// <summary>Amount currency.</summary>
        string NewCreditCurrency { get; set; }
        /// <summary>The exchange rate.</summary>
        decimal? NewCreditInBillingCurrencyExchangeRate { get; set; }
        /// <summary>The exchange rate month.</summary>
        int? NewCreditInBillingCurrencyExchangeRateMonth { get; set; }
        /// <summary>Amount.</summary>
        decimal? NewCreditInBillingCurrencyValue { get; set; }
        /// <summary>Amount.</summary>
        decimal? NewCreditValue { get; set; }
        /// <summary>The balance in billing currency after the event.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmountWithExchangeRate PropertiesClosedBalanceInBillingCurrency { get; set; }
        /// <summary>Amount currency.</summary>
        string PropertiesClosedBalanceInBillingCurrencyCurrency { get; set; }
        /// <summary>
        /// The amount of expired credit or commitment for NewCredit or SettleCharges event in billing currency.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmountWithExchangeRate PropertiesCreditExpiredInBillingCurrency { get; set; }
        /// <summary>Amount currency.</summary>
        string PropertiesCreditExpiredInBillingCurrencyCurrency { get; set; }
        /// <summary>The eTag for the resource.</summary>
        string PropertiesETag { get; set; }
        /// <summary>
        /// The amount of new credit or commitment for NewCredit or SettleCharges event in billing currency.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmountWithExchangeRate PropertiesNewCreditInBillingCurrency { get; set; }
        /// <summary>Amount currency.</summary>
        string PropertiesNewCreditInBillingCurrencyCurrency { get; set; }
        /// <summary>The event properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IEventProperties Property { get; set; }
        /// <summary>The reseller of the event.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IReseller Reseller { get; set; }
        /// <summary>The reseller property description.</summary>
        string ResellerDescription { get; set; }
        /// <summary>The reseller property ID.</summary>
        string ResellerId { get; set; }
        /// <summary>The date of the event.</summary>
        global::System.DateTime? TransactionDate { get; set; }

    }
}