// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Extensions;

    /// <summary>The amount with exchange rate.</summary>
    public partial class AmountWithExchangeRate :
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmountWithExchangeRate,
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmountWithExchangeRateInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmount"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmount __amount = new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.Amount();

        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inherited)]
        public string Currency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmountInternal)__amount).Currency; }

        /// <summary>Backing field for <see cref="ExchangeRate" /> property.</summary>
        private decimal? _exchangeRate;

        /// <summary>The exchange rate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public decimal? ExchangeRate { get => this._exchangeRate; }

        /// <summary>Backing field for <see cref="ExchangeRateMonth" /> property.</summary>
        private int? _exchangeRateMonth;

        /// <summary>The exchange rate month.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public int? ExchangeRateMonth { get => this._exchangeRateMonth; }

        /// <summary>Internal Acessors for Currency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmountInternal.Currency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmountInternal)__amount).Currency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmountInternal)__amount).Currency = value; }

        /// <summary>Internal Acessors for Value</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmountInternal.Value { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmountInternal)__amount).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmountInternal)__amount).Value = value; }

        /// <summary>Internal Acessors for ExchangeRate</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmountWithExchangeRateInternal.ExchangeRate { get => this._exchangeRate; set { {_exchangeRate = value;} } }

        /// <summary>Internal Acessors for ExchangeRateMonth</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmountWithExchangeRateInternal.ExchangeRateMonth { get => this._exchangeRateMonth; set { {_exchangeRateMonth = value;} } }

        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inherited)]
        public decimal? Value { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmountInternal)__amount).Value; }

        /// <summary>Creates an new <see cref="AmountWithExchangeRate" /> instance.</summary>
        public AmountWithExchangeRate()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__amount), __amount);
            await eventListener.AssertObjectIsValid(nameof(__amount), __amount);
        }
    }
    /// The amount with exchange rate.
    public partial interface IAmountWithExchangeRate :
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmount
    {
        /// <summary>The exchange rate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The exchange rate.",
        SerializedName = @"exchangeRate",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? ExchangeRate { get;  }
        /// <summary>The exchange rate month.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The exchange rate month.",
        SerializedName = @"exchangeRateMonth",
        PossibleTypes = new [] { typeof(int) })]
        int? ExchangeRateMonth { get;  }

    }
    /// The amount with exchange rate.
    internal partial interface IAmountWithExchangeRateInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmountInternal
    {
        /// <summary>The exchange rate.</summary>
        decimal? ExchangeRate { get; set; }
        /// <summary>The exchange rate month.</summary>
        int? ExchangeRateMonth { get; set; }

    }
}