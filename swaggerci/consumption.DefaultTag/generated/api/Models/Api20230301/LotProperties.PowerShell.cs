// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301
{
    using Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.PowerShell;

    /// <summary>The lot properties.</summary>
    [System.ComponentModel.TypeConverter(typeof(LotPropertiesTypeConverter))]
    public partial class LotProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.LotProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotProperties" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new LotProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.LotProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotProperties" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new LotProperties(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="LotProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="LotProperties" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.LotProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal LotProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("OriginalAmount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).OriginalAmount = (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmount) content.GetValueForProperty("OriginalAmount",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).OriginalAmount, Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.AmountTypeConverter.ConvertFrom);
            }
            if (content.Contains("ClosedBalance"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).ClosedBalance = (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmount) content.GetValueForProperty("ClosedBalance",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).ClosedBalance, Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.AmountTypeConverter.ConvertFrom);
            }
            if (content.Contains("OriginalAmountInBillingCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).OriginalAmountInBillingCurrency = (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmountWithExchangeRate) content.GetValueForProperty("OriginalAmountInBillingCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).OriginalAmountInBillingCurrency, Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.AmountWithExchangeRateTypeConverter.ConvertFrom);
            }
            if (content.Contains("ClosedBalanceInBillingCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).ClosedBalanceInBillingCurrency = (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmountWithExchangeRate) content.GetValueForProperty("ClosedBalanceInBillingCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).ClosedBalanceInBillingCurrency, Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.AmountWithExchangeRateTypeConverter.ConvertFrom);
            }
            if (content.Contains("Reseller"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).Reseller = (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IReseller) content.GetValueForProperty("Reseller",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).Reseller, Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ResellerTypeConverter.ConvertFrom);
            }
            if (content.Contains("Source"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).Source = (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.LotSource?) content.GetValueForProperty("Source",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).Source, Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.LotSource.CreateFrom);
            }
            if (content.Contains("StartDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).StartDate = (global::System.DateTime?) content.GetValueForProperty("StartDate",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).StartDate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ExpirationDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).ExpirationDate = (global::System.DateTime?) content.GetValueForProperty("ExpirationDate",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).ExpirationDate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("PoNumber"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).PoNumber = (string) content.GetValueForProperty("PoNumber",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).PoNumber, global::System.Convert.ToString);
            }
            if (content.Contains("PurchasedDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).PurchasedDate = (global::System.DateTime?) content.GetValueForProperty("PurchasedDate",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).PurchasedDate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("Status"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).Status = (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.Status?) content.GetValueForProperty("Status",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).Status, Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.Status.CreateFrom);
            }
            if (content.Contains("CreditCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).CreditCurrency = (string) content.GetValueForProperty("CreditCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).CreditCurrency, global::System.Convert.ToString);
            }
            if (content.Contains("BillingCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).BillingCurrency = (string) content.GetValueForProperty("BillingCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).BillingCurrency, global::System.Convert.ToString);
            }
            if (content.Contains("IsEstimatedBalance"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).IsEstimatedBalance = (bool?) content.GetValueForProperty("IsEstimatedBalance",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).IsEstimatedBalance, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ETag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).ETag = (string) content.GetValueForProperty("ETag",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).ETag, global::System.Convert.ToString);
            }
            if (content.Contains("ResellerId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).ResellerId = (string) content.GetValueForProperty("ResellerId",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).ResellerId, global::System.Convert.ToString);
            }
            if (content.Contains("ResellerDescription"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).ResellerDescription = (string) content.GetValueForProperty("ResellerDescription",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).ResellerDescription, global::System.Convert.ToString);
            }
            if (content.Contains("OriginalAmountCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).OriginalAmountCurrency = (string) content.GetValueForProperty("OriginalAmountCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).OriginalAmountCurrency, global::System.Convert.ToString);
            }
            if (content.Contains("OriginalAmountValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).OriginalAmountValue = (decimal?) content.GetValueForProperty("OriginalAmountValue",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).OriginalAmountValue, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("ClosedBalanceCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).ClosedBalanceCurrency = (string) content.GetValueForProperty("ClosedBalanceCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).ClosedBalanceCurrency, global::System.Convert.ToString);
            }
            if (content.Contains("ClosedBalanceValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).ClosedBalanceValue = (decimal?) content.GetValueForProperty("ClosedBalanceValue",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).ClosedBalanceValue, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("OriginalAmountInBillingCurrencyCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).OriginalAmountInBillingCurrencyCurrency = (string) content.GetValueForProperty("OriginalAmountInBillingCurrencyCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).OriginalAmountInBillingCurrencyCurrency, global::System.Convert.ToString);
            }
            if (content.Contains("OriginalAmountInBillingCurrencyValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).OriginalAmountInBillingCurrencyValue = (decimal?) content.GetValueForProperty("OriginalAmountInBillingCurrencyValue",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).OriginalAmountInBillingCurrencyValue, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("OriginalAmountInBillingCurrencyExchangeRate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).OriginalAmountInBillingCurrencyExchangeRate = (decimal?) content.GetValueForProperty("OriginalAmountInBillingCurrencyExchangeRate",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).OriginalAmountInBillingCurrencyExchangeRate, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("OriginalAmountInBillingCurrencyExchangeRateMonth"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).OriginalAmountInBillingCurrencyExchangeRateMonth = (int?) content.GetValueForProperty("OriginalAmountInBillingCurrencyExchangeRateMonth",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).OriginalAmountInBillingCurrencyExchangeRateMonth, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ClosedBalanceInBillingCurrencyCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).ClosedBalanceInBillingCurrencyCurrency = (string) content.GetValueForProperty("ClosedBalanceInBillingCurrencyCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).ClosedBalanceInBillingCurrencyCurrency, global::System.Convert.ToString);
            }
            if (content.Contains("ClosedBalanceInBillingCurrencyValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).ClosedBalanceInBillingCurrencyValue = (decimal?) content.GetValueForProperty("ClosedBalanceInBillingCurrencyValue",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).ClosedBalanceInBillingCurrencyValue, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("ClosedBalanceInBillingCurrencyExchangeRate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).ClosedBalanceInBillingCurrencyExchangeRate = (decimal?) content.GetValueForProperty("ClosedBalanceInBillingCurrencyExchangeRate",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).ClosedBalanceInBillingCurrencyExchangeRate, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("ClosedBalanceInBillingCurrencyExchangeRateMonth"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).ClosedBalanceInBillingCurrencyExchangeRateMonth = (int?) content.GetValueForProperty("ClosedBalanceInBillingCurrencyExchangeRateMonth",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).ClosedBalanceInBillingCurrencyExchangeRateMonth, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.LotProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal LotProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("OriginalAmount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).OriginalAmount = (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmount) content.GetValueForProperty("OriginalAmount",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).OriginalAmount, Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.AmountTypeConverter.ConvertFrom);
            }
            if (content.Contains("ClosedBalance"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).ClosedBalance = (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmount) content.GetValueForProperty("ClosedBalance",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).ClosedBalance, Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.AmountTypeConverter.ConvertFrom);
            }
            if (content.Contains("OriginalAmountInBillingCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).OriginalAmountInBillingCurrency = (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmountWithExchangeRate) content.GetValueForProperty("OriginalAmountInBillingCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).OriginalAmountInBillingCurrency, Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.AmountWithExchangeRateTypeConverter.ConvertFrom);
            }
            if (content.Contains("ClosedBalanceInBillingCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).ClosedBalanceInBillingCurrency = (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmountWithExchangeRate) content.GetValueForProperty("ClosedBalanceInBillingCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).ClosedBalanceInBillingCurrency, Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.AmountWithExchangeRateTypeConverter.ConvertFrom);
            }
            if (content.Contains("Reseller"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).Reseller = (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IReseller) content.GetValueForProperty("Reseller",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).Reseller, Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ResellerTypeConverter.ConvertFrom);
            }
            if (content.Contains("Source"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).Source = (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.LotSource?) content.GetValueForProperty("Source",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).Source, Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.LotSource.CreateFrom);
            }
            if (content.Contains("StartDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).StartDate = (global::System.DateTime?) content.GetValueForProperty("StartDate",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).StartDate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ExpirationDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).ExpirationDate = (global::System.DateTime?) content.GetValueForProperty("ExpirationDate",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).ExpirationDate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("PoNumber"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).PoNumber = (string) content.GetValueForProperty("PoNumber",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).PoNumber, global::System.Convert.ToString);
            }
            if (content.Contains("PurchasedDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).PurchasedDate = (global::System.DateTime?) content.GetValueForProperty("PurchasedDate",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).PurchasedDate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("Status"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).Status = (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.Status?) content.GetValueForProperty("Status",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).Status, Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.Status.CreateFrom);
            }
            if (content.Contains("CreditCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).CreditCurrency = (string) content.GetValueForProperty("CreditCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).CreditCurrency, global::System.Convert.ToString);
            }
            if (content.Contains("BillingCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).BillingCurrency = (string) content.GetValueForProperty("BillingCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).BillingCurrency, global::System.Convert.ToString);
            }
            if (content.Contains("IsEstimatedBalance"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).IsEstimatedBalance = (bool?) content.GetValueForProperty("IsEstimatedBalance",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).IsEstimatedBalance, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ETag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).ETag = (string) content.GetValueForProperty("ETag",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).ETag, global::System.Convert.ToString);
            }
            if (content.Contains("ResellerId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).ResellerId = (string) content.GetValueForProperty("ResellerId",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).ResellerId, global::System.Convert.ToString);
            }
            if (content.Contains("ResellerDescription"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).ResellerDescription = (string) content.GetValueForProperty("ResellerDescription",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).ResellerDescription, global::System.Convert.ToString);
            }
            if (content.Contains("OriginalAmountCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).OriginalAmountCurrency = (string) content.GetValueForProperty("OriginalAmountCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).OriginalAmountCurrency, global::System.Convert.ToString);
            }
            if (content.Contains("OriginalAmountValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).OriginalAmountValue = (decimal?) content.GetValueForProperty("OriginalAmountValue",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).OriginalAmountValue, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("ClosedBalanceCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).ClosedBalanceCurrency = (string) content.GetValueForProperty("ClosedBalanceCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).ClosedBalanceCurrency, global::System.Convert.ToString);
            }
            if (content.Contains("ClosedBalanceValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).ClosedBalanceValue = (decimal?) content.GetValueForProperty("ClosedBalanceValue",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).ClosedBalanceValue, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("OriginalAmountInBillingCurrencyCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).OriginalAmountInBillingCurrencyCurrency = (string) content.GetValueForProperty("OriginalAmountInBillingCurrencyCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).OriginalAmountInBillingCurrencyCurrency, global::System.Convert.ToString);
            }
            if (content.Contains("OriginalAmountInBillingCurrencyValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).OriginalAmountInBillingCurrencyValue = (decimal?) content.GetValueForProperty("OriginalAmountInBillingCurrencyValue",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).OriginalAmountInBillingCurrencyValue, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("OriginalAmountInBillingCurrencyExchangeRate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).OriginalAmountInBillingCurrencyExchangeRate = (decimal?) content.GetValueForProperty("OriginalAmountInBillingCurrencyExchangeRate",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).OriginalAmountInBillingCurrencyExchangeRate, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("OriginalAmountInBillingCurrencyExchangeRateMonth"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).OriginalAmountInBillingCurrencyExchangeRateMonth = (int?) content.GetValueForProperty("OriginalAmountInBillingCurrencyExchangeRateMonth",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).OriginalAmountInBillingCurrencyExchangeRateMonth, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ClosedBalanceInBillingCurrencyCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).ClosedBalanceInBillingCurrencyCurrency = (string) content.GetValueForProperty("ClosedBalanceInBillingCurrencyCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).ClosedBalanceInBillingCurrencyCurrency, global::System.Convert.ToString);
            }
            if (content.Contains("ClosedBalanceInBillingCurrencyValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).ClosedBalanceInBillingCurrencyValue = (decimal?) content.GetValueForProperty("ClosedBalanceInBillingCurrencyValue",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).ClosedBalanceInBillingCurrencyValue, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("ClosedBalanceInBillingCurrencyExchangeRate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).ClosedBalanceInBillingCurrencyExchangeRate = (decimal?) content.GetValueForProperty("ClosedBalanceInBillingCurrencyExchangeRate",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).ClosedBalanceInBillingCurrencyExchangeRate, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("ClosedBalanceInBillingCurrencyExchangeRateMonth"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).ClosedBalanceInBillingCurrencyExchangeRateMonth = (int?) content.GetValueForProperty("ClosedBalanceInBillingCurrencyExchangeRateMonth",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ILotPropertiesInternal)this).ClosedBalanceInBillingCurrencyExchangeRateMonth, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// The lot properties.
    [System.ComponentModel.TypeConverter(typeof(LotPropertiesTypeConverter))]
    public partial interface ILotProperties

    {

    }
}