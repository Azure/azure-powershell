// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301
{
    using Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.PowerShell;

    /// <summary>A credit summary resource.</summary>
    [System.ComponentModel.TypeConverter(typeof(CreditSummaryTypeConverter))]
    public partial class CreditSummary
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.CreditSummary"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal CreditSummary(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.CreditSummaryPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("ETag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResourceInternal)this).ETag = (string) content.GetValueForProperty("ETag",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResourceInternal)this).ETag, global::System.Convert.ToString);
            }
            if (content.Contains("Reseller"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).Reseller = (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IReseller) content.GetValueForProperty("Reseller",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).Reseller, Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ResellerTypeConverter.ConvertFrom);
            }
            if (content.Contains("BalanceSummary"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).BalanceSummary = (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditBalanceSummary) content.GetValueForProperty("BalanceSummary",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).BalanceSummary, Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.CreditBalanceSummaryTypeConverter.ConvertFrom);
            }
            if (content.Contains("PendingCreditAdjustment"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).PendingCreditAdjustment = (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmount) content.GetValueForProperty("PendingCreditAdjustment",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).PendingCreditAdjustment, Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.AmountTypeConverter.ConvertFrom);
            }
            if (content.Contains("ExpiredCredit"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).ExpiredCredit = (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmount) content.GetValueForProperty("ExpiredCredit",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).ExpiredCredit, Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.AmountTypeConverter.ConvertFrom);
            }
            if (content.Contains("PendingEligibleCharge"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).PendingEligibleCharge = (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmount) content.GetValueForProperty("PendingEligibleCharge",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).PendingEligibleCharge, Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.AmountTypeConverter.ConvertFrom);
            }
            if (content.Contains("CreditCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).CreditCurrency = (string) content.GetValueForProperty("CreditCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).CreditCurrency, global::System.Convert.ToString);
            }
            if (content.Contains("BillingCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).BillingCurrency = (string) content.GetValueForProperty("BillingCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).BillingCurrency, global::System.Convert.ToString);
            }
            if (content.Contains("IsEstimatedBalance"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).IsEstimatedBalance = (bool?) content.GetValueForProperty("IsEstimatedBalance",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).IsEstimatedBalance, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("PropertiesETag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).PropertiesETag = (string) content.GetValueForProperty("PropertiesETag",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).PropertiesETag, global::System.Convert.ToString);
            }
            if (content.Contains("ResellerId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).ResellerId = (string) content.GetValueForProperty("ResellerId",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).ResellerId, global::System.Convert.ToString);
            }
            if (content.Contains("ResellerDescription"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).ResellerDescription = (string) content.GetValueForProperty("ResellerDescription",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).ResellerDescription, global::System.Convert.ToString);
            }
            if (content.Contains("BalanceSummaryEstimatedBalance"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).BalanceSummaryEstimatedBalance = (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmount) content.GetValueForProperty("BalanceSummaryEstimatedBalance",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).BalanceSummaryEstimatedBalance, Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.AmountTypeConverter.ConvertFrom);
            }
            if (content.Contains("BalanceSummaryCurrentBalance"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).BalanceSummaryCurrentBalance = (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmount) content.GetValueForProperty("BalanceSummaryCurrentBalance",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).BalanceSummaryCurrentBalance, Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.AmountTypeConverter.ConvertFrom);
            }
            if (content.Contains("BalanceSummaryEstimatedBalanceInBillingCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).BalanceSummaryEstimatedBalanceInBillingCurrency = (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmountWithExchangeRate) content.GetValueForProperty("BalanceSummaryEstimatedBalanceInBillingCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).BalanceSummaryEstimatedBalanceInBillingCurrency, Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.AmountWithExchangeRateTypeConverter.ConvertFrom);
            }
            if (content.Contains("PendingCreditAdjustmentCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).PendingCreditAdjustmentCurrency = (string) content.GetValueForProperty("PendingCreditAdjustmentCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).PendingCreditAdjustmentCurrency, global::System.Convert.ToString);
            }
            if (content.Contains("PendingCreditAdjustmentValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).PendingCreditAdjustmentValue = (decimal?) content.GetValueForProperty("PendingCreditAdjustmentValue",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).PendingCreditAdjustmentValue, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("ExpiredCreditCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).ExpiredCreditCurrency = (string) content.GetValueForProperty("ExpiredCreditCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).ExpiredCreditCurrency, global::System.Convert.ToString);
            }
            if (content.Contains("ExpiredCreditValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).ExpiredCreditValue = (decimal?) content.GetValueForProperty("ExpiredCreditValue",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).ExpiredCreditValue, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("PendingEligibleChargeCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).PendingEligibleChargeCurrency = (string) content.GetValueForProperty("PendingEligibleChargeCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).PendingEligibleChargeCurrency, global::System.Convert.ToString);
            }
            if (content.Contains("PendingEligibleChargeValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).PendingEligibleChargeValue = (decimal?) content.GetValueForProperty("PendingEligibleChargeValue",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).PendingEligibleChargeValue, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("EstimatedBalanceCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).EstimatedBalanceCurrency = (string) content.GetValueForProperty("EstimatedBalanceCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).EstimatedBalanceCurrency, global::System.Convert.ToString);
            }
            if (content.Contains("EstimatedBalanceValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).EstimatedBalanceValue = (decimal?) content.GetValueForProperty("EstimatedBalanceValue",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).EstimatedBalanceValue, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("CurrentBalanceCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).CurrentBalanceCurrency = (string) content.GetValueForProperty("CurrentBalanceCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).CurrentBalanceCurrency, global::System.Convert.ToString);
            }
            if (content.Contains("CurrentBalanceValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).CurrentBalanceValue = (decimal?) content.GetValueForProperty("CurrentBalanceValue",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).CurrentBalanceValue, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("EstimatedBalanceInBillingCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).EstimatedBalanceInBillingCurrency = (string) content.GetValueForProperty("EstimatedBalanceInBillingCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).EstimatedBalanceInBillingCurrency, global::System.Convert.ToString);
            }
            if (content.Contains("EstimatedBalanceInBillingCurrencyValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).EstimatedBalanceInBillingCurrencyValue = (decimal?) content.GetValueForProperty("EstimatedBalanceInBillingCurrencyValue",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).EstimatedBalanceInBillingCurrencyValue, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("EstimatedBalanceInBillingCurrencyExchangeRate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).EstimatedBalanceInBillingCurrencyExchangeRate = (decimal?) content.GetValueForProperty("EstimatedBalanceInBillingCurrencyExchangeRate",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).EstimatedBalanceInBillingCurrencyExchangeRate, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("EstimatedBalanceInBillingCurrencyExchangeRateMonth"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).EstimatedBalanceInBillingCurrencyExchangeRateMonth = (int?) content.GetValueForProperty("EstimatedBalanceInBillingCurrencyExchangeRateMonth",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).EstimatedBalanceInBillingCurrencyExchangeRateMonth, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.CreditSummary"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal CreditSummary(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.CreditSummaryPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("ETag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResourceInternal)this).ETag = (string) content.GetValueForProperty("ETag",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IProxyResourceInternal)this).ETag, global::System.Convert.ToString);
            }
            if (content.Contains("Reseller"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).Reseller = (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IReseller) content.GetValueForProperty("Reseller",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).Reseller, Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ResellerTypeConverter.ConvertFrom);
            }
            if (content.Contains("BalanceSummary"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).BalanceSummary = (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditBalanceSummary) content.GetValueForProperty("BalanceSummary",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).BalanceSummary, Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.CreditBalanceSummaryTypeConverter.ConvertFrom);
            }
            if (content.Contains("PendingCreditAdjustment"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).PendingCreditAdjustment = (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmount) content.GetValueForProperty("PendingCreditAdjustment",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).PendingCreditAdjustment, Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.AmountTypeConverter.ConvertFrom);
            }
            if (content.Contains("ExpiredCredit"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).ExpiredCredit = (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmount) content.GetValueForProperty("ExpiredCredit",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).ExpiredCredit, Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.AmountTypeConverter.ConvertFrom);
            }
            if (content.Contains("PendingEligibleCharge"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).PendingEligibleCharge = (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmount) content.GetValueForProperty("PendingEligibleCharge",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).PendingEligibleCharge, Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.AmountTypeConverter.ConvertFrom);
            }
            if (content.Contains("CreditCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).CreditCurrency = (string) content.GetValueForProperty("CreditCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).CreditCurrency, global::System.Convert.ToString);
            }
            if (content.Contains("BillingCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).BillingCurrency = (string) content.GetValueForProperty("BillingCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).BillingCurrency, global::System.Convert.ToString);
            }
            if (content.Contains("IsEstimatedBalance"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).IsEstimatedBalance = (bool?) content.GetValueForProperty("IsEstimatedBalance",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).IsEstimatedBalance, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("PropertiesETag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).PropertiesETag = (string) content.GetValueForProperty("PropertiesETag",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).PropertiesETag, global::System.Convert.ToString);
            }
            if (content.Contains("ResellerId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).ResellerId = (string) content.GetValueForProperty("ResellerId",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).ResellerId, global::System.Convert.ToString);
            }
            if (content.Contains("ResellerDescription"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).ResellerDescription = (string) content.GetValueForProperty("ResellerDescription",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).ResellerDescription, global::System.Convert.ToString);
            }
            if (content.Contains("BalanceSummaryEstimatedBalance"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).BalanceSummaryEstimatedBalance = (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmount) content.GetValueForProperty("BalanceSummaryEstimatedBalance",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).BalanceSummaryEstimatedBalance, Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.AmountTypeConverter.ConvertFrom);
            }
            if (content.Contains("BalanceSummaryCurrentBalance"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).BalanceSummaryCurrentBalance = (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmount) content.GetValueForProperty("BalanceSummaryCurrentBalance",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).BalanceSummaryCurrentBalance, Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.AmountTypeConverter.ConvertFrom);
            }
            if (content.Contains("BalanceSummaryEstimatedBalanceInBillingCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).BalanceSummaryEstimatedBalanceInBillingCurrency = (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IAmountWithExchangeRate) content.GetValueForProperty("BalanceSummaryEstimatedBalanceInBillingCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).BalanceSummaryEstimatedBalanceInBillingCurrency, Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.AmountWithExchangeRateTypeConverter.ConvertFrom);
            }
            if (content.Contains("PendingCreditAdjustmentCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).PendingCreditAdjustmentCurrency = (string) content.GetValueForProperty("PendingCreditAdjustmentCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).PendingCreditAdjustmentCurrency, global::System.Convert.ToString);
            }
            if (content.Contains("PendingCreditAdjustmentValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).PendingCreditAdjustmentValue = (decimal?) content.GetValueForProperty("PendingCreditAdjustmentValue",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).PendingCreditAdjustmentValue, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("ExpiredCreditCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).ExpiredCreditCurrency = (string) content.GetValueForProperty("ExpiredCreditCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).ExpiredCreditCurrency, global::System.Convert.ToString);
            }
            if (content.Contains("ExpiredCreditValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).ExpiredCreditValue = (decimal?) content.GetValueForProperty("ExpiredCreditValue",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).ExpiredCreditValue, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("PendingEligibleChargeCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).PendingEligibleChargeCurrency = (string) content.GetValueForProperty("PendingEligibleChargeCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).PendingEligibleChargeCurrency, global::System.Convert.ToString);
            }
            if (content.Contains("PendingEligibleChargeValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).PendingEligibleChargeValue = (decimal?) content.GetValueForProperty("PendingEligibleChargeValue",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).PendingEligibleChargeValue, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("EstimatedBalanceCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).EstimatedBalanceCurrency = (string) content.GetValueForProperty("EstimatedBalanceCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).EstimatedBalanceCurrency, global::System.Convert.ToString);
            }
            if (content.Contains("EstimatedBalanceValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).EstimatedBalanceValue = (decimal?) content.GetValueForProperty("EstimatedBalanceValue",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).EstimatedBalanceValue, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("CurrentBalanceCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).CurrentBalanceCurrency = (string) content.GetValueForProperty("CurrentBalanceCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).CurrentBalanceCurrency, global::System.Convert.ToString);
            }
            if (content.Contains("CurrentBalanceValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).CurrentBalanceValue = (decimal?) content.GetValueForProperty("CurrentBalanceValue",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).CurrentBalanceValue, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("EstimatedBalanceInBillingCurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).EstimatedBalanceInBillingCurrency = (string) content.GetValueForProperty("EstimatedBalanceInBillingCurrency",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).EstimatedBalanceInBillingCurrency, global::System.Convert.ToString);
            }
            if (content.Contains("EstimatedBalanceInBillingCurrencyValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).EstimatedBalanceInBillingCurrencyValue = (decimal?) content.GetValueForProperty("EstimatedBalanceInBillingCurrencyValue",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).EstimatedBalanceInBillingCurrencyValue, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("EstimatedBalanceInBillingCurrencyExchangeRate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).EstimatedBalanceInBillingCurrencyExchangeRate = (decimal?) content.GetValueForProperty("EstimatedBalanceInBillingCurrencyExchangeRate",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).EstimatedBalanceInBillingCurrencyExchangeRate, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("EstimatedBalanceInBillingCurrencyExchangeRateMonth"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).EstimatedBalanceInBillingCurrencyExchangeRateMonth = (int?) content.GetValueForProperty("EstimatedBalanceInBillingCurrencyExchangeRateMonth",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummaryInternal)this).EstimatedBalanceInBillingCurrencyExchangeRateMonth, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.CreditSummary"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummary" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummary DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new CreditSummary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.CreditSummary"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummary" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummary DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new CreditSummary(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="CreditSummary" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="CreditSummary" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.ICreditSummary FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// A credit summary resource.
    [System.ComponentModel.TypeConverter(typeof(CreditSummaryTypeConverter))]
    public partial interface ICreditSummary

    {

    }
}