// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Extensions;

    /// <summary>May be used to filter budgets by resource group, resource, or meter.</summary>
    public partial class BudgetFilter :
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBudgetFilter,
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBudgetFilterInternal
    {

        /// <summary>Backing field for <see cref="And" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBudgetFilterProperties[] _and;

        /// <summary>The logical "AND" expression. Must have at least 2 items.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBudgetFilterProperties[] And { get => this._and; set => this._and = value; }

        /// <summary>Backing field for <see cref="Dimension" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBudgetComparisonExpression _dimension;

        /// <summary>Has comparison expression for a dimension</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBudgetComparisonExpression Dimension { get => (this._dimension = this._dimension ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.BudgetComparisonExpression()); set => this._dimension = value; }

        /// <summary>The name of the column to use in comparison.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string DimensionName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBudgetComparisonExpressionInternal)Dimension).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBudgetComparisonExpressionInternal)Dimension).Name = value ?? null; }

        /// <summary>The operator to use for comparison.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string DimensionOperator { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBudgetComparisonExpressionInternal)Dimension).Operator; }

        /// <summary>Array of values to use for comparison</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string[] DimensionValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBudgetComparisonExpressionInternal)Dimension).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBudgetComparisonExpressionInternal)Dimension).Value = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for Dimension</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBudgetComparisonExpression Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBudgetFilterInternal.Dimension { get => (this._dimension = this._dimension ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.BudgetComparisonExpression()); set { {_dimension = value;} } }

        /// <summary>Internal Acessors for DimensionOperator</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBudgetFilterInternal.DimensionOperator { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBudgetComparisonExpressionInternal)Dimension).Operator; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBudgetComparisonExpressionInternal)Dimension).Operator = value; }

        /// <summary>Internal Acessors for Tag</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBudgetComparisonExpression Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBudgetFilterInternal.Tag { get => (this._tag = this._tag ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.BudgetComparisonExpression()); set { {_tag = value;} } }

        /// <summary>Internal Acessors for TagOperator</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBudgetFilterInternal.TagOperator { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBudgetComparisonExpressionInternal)Tag).Operator; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBudgetComparisonExpressionInternal)Tag).Operator = value; }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBudgetComparisonExpression _tag;

        /// <summary>Has comparison expression for a tag</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBudgetComparisonExpression Tag { get => (this._tag = this._tag ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.BudgetComparisonExpression()); set => this._tag = value; }

        /// <summary>The name of the column to use in comparison.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string TagName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBudgetComparisonExpressionInternal)Tag).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBudgetComparisonExpressionInternal)Tag).Name = value ?? null; }

        /// <summary>The operator to use for comparison.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string TagOperator { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBudgetComparisonExpressionInternal)Tag).Operator; }

        /// <summary>Array of values to use for comparison</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string[] TagValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBudgetComparisonExpressionInternal)Tag).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBudgetComparisonExpressionInternal)Tag).Value = value ?? null /* arrayOf */; }

        /// <summary>Creates an new <see cref="BudgetFilter" /> instance.</summary>
        public BudgetFilter()
        {

        }
    }
    /// May be used to filter budgets by resource group, resource, or meter.
    public partial interface IBudgetFilter :
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.IJsonSerializable
    {
        /// <summary>The logical "AND" expression. Must have at least 2 items.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The logical ""AND"" expression. Must have at least 2 items.",
        SerializedName = @"and",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBudgetFilterProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBudgetFilterProperties[] And { get; set; }
        /// <summary>The name of the column to use in comparison.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the column to use in comparison.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string DimensionName { get; set; }
        /// <summary>The operator to use for comparison.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The operator to use for comparison.",
        SerializedName = @"operator",
        PossibleTypes = new [] { typeof(string) })]
        string DimensionOperator { get;  }
        /// <summary>Array of values to use for comparison</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Array of values to use for comparison",
        SerializedName = @"values",
        PossibleTypes = new [] { typeof(string) })]
        string[] DimensionValue { get; set; }
        /// <summary>The name of the column to use in comparison.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the column to use in comparison.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string TagName { get; set; }
        /// <summary>The operator to use for comparison.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The operator to use for comparison.",
        SerializedName = @"operator",
        PossibleTypes = new [] { typeof(string) })]
        string TagOperator { get;  }
        /// <summary>Array of values to use for comparison</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Array of values to use for comparison",
        SerializedName = @"values",
        PossibleTypes = new [] { typeof(string) })]
        string[] TagValue { get; set; }

    }
    /// May be used to filter budgets by resource group, resource, or meter.
    internal partial interface IBudgetFilterInternal

    {
        /// <summary>The logical "AND" expression. Must have at least 2 items.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBudgetFilterProperties[] And { get; set; }
        /// <summary>Has comparison expression for a dimension</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBudgetComparisonExpression Dimension { get; set; }
        /// <summary>The name of the column to use in comparison.</summary>
        string DimensionName { get; set; }
        /// <summary>The operator to use for comparison.</summary>
        string DimensionOperator { get; set; }
        /// <summary>Array of values to use for comparison</summary>
        string[] DimensionValue { get; set; }
        /// <summary>Has comparison expression for a tag</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IBudgetComparisonExpression Tag { get; set; }
        /// <summary>The name of the column to use in comparison.</summary>
        string TagName { get; set; }
        /// <summary>The operator to use for comparison.</summary>
        string TagOperator { get; set; }
        /// <summary>Array of values to use for comparison</summary>
        string[] TagValue { get; set; }

    }
}