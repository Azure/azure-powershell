// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Extensions;

    /// <summary>The properties of the price sheet.</summary>
    public partial class PriceSheetProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject json ? new PriceSheetProperties(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject into a new instance of <see cref="PriceSheetProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal PriceSheetProperties(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_meterDetail = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject>("meterDetails"), out var __jsonMeterDetails) ? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.MeterDetails.FromJson(__jsonMeterDetails) : MeterDetail;}
            {_billingPeriodId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("billingPeriodId"), out var __jsonBillingPeriodId) ? (string)__jsonBillingPeriodId : (string)BillingPeriodId;}
            {_meterId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("meterId"), out var __jsonMeterId) ? (string)__jsonMeterId : (string)MeterId;}
            {_unitOfMeasure = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("unitOfMeasure"), out var __jsonUnitOfMeasure) ? (string)__jsonUnitOfMeasure : (string)UnitOfMeasure;}
            {_includedQuantity = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNumber>("includedQuantity"), out var __jsonIncludedQuantity) ? (decimal?)__jsonIncludedQuantity : IncludedQuantity;}
            {_partNumber = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("partNumber"), out var __jsonPartNumber) ? (string)__jsonPartNumber : (string)PartNumber;}
            {_unitPrice = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNumber>("unitPrice"), out var __jsonUnitPrice) ? (decimal?)__jsonUnitPrice : UnitPrice;}
            {_currencyCode = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("currencyCode"), out var __jsonCurrencyCode) ? (string)__jsonCurrencyCode : (string)CurrencyCode;}
            {_offerId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("offerId"), out var __jsonOfferId) ? (string)__jsonOfferId : (string)OfferId;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="PriceSheetProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="PriceSheetProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._meterDetail ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) this._meterDetail.ToJson(null,serializationMode) : null, "meterDetails" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._billingPeriodId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._billingPeriodId.ToString()) : null, "billingPeriodId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._meterId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._meterId.ToString()) : null, "meterId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._unitOfMeasure)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._unitOfMeasure.ToString()) : null, "unitOfMeasure" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._includedQuantity ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNumber((decimal)this._includedQuantity) : null, "includedQuantity" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._partNumber)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._partNumber.ToString()) : null, "partNumber" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._unitPrice ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNumber((decimal)this._unitPrice) : null, "unitPrice" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._currencyCode)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._currencyCode.ToString()) : null, "currencyCode" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._offerId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._offerId.ToString()) : null, "offerId" ,container.Add );
            }
            AfterToJson(ref container);
            return container;
        }
    }
}