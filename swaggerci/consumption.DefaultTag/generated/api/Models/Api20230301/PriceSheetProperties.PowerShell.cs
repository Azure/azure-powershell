// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301
{
    using Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.PowerShell;

    /// <summary>The properties of the price sheet.</summary>
    [System.ComponentModel.TypeConverter(typeof(PriceSheetPropertiesTypeConverter))]
    public partial class PriceSheetProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.PriceSheetProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetProperties" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new PriceSheetProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.PriceSheetProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetProperties" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new PriceSheetProperties(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="PriceSheetProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="PriceSheetProperties" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.PriceSheetProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal PriceSheetProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("MeterDetail"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).MeterDetail = (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetails) content.GetValueForProperty("MeterDetail",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).MeterDetail, Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.MeterDetailsTypeConverter.ConvertFrom);
            }
            if (content.Contains("BillingPeriodId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).BillingPeriodId = (string) content.GetValueForProperty("BillingPeriodId",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).BillingPeriodId, global::System.Convert.ToString);
            }
            if (content.Contains("MeterId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).MeterId = (string) content.GetValueForProperty("MeterId",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).MeterId, global::System.Convert.ToString);
            }
            if (content.Contains("UnitOfMeasure"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).UnitOfMeasure = (string) content.GetValueForProperty("UnitOfMeasure",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).UnitOfMeasure, global::System.Convert.ToString);
            }
            if (content.Contains("IncludedQuantity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).IncludedQuantity = (decimal?) content.GetValueForProperty("IncludedQuantity",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).IncludedQuantity, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("PartNumber"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).PartNumber = (string) content.GetValueForProperty("PartNumber",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).PartNumber, global::System.Convert.ToString);
            }
            if (content.Contains("UnitPrice"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).UnitPrice = (decimal?) content.GetValueForProperty("UnitPrice",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).UnitPrice, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("CurrencyCode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).CurrencyCode = (string) content.GetValueForProperty("CurrencyCode",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).CurrencyCode, global::System.Convert.ToString);
            }
            if (content.Contains("OfferId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).OfferId = (string) content.GetValueForProperty("OfferId",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).OfferId, global::System.Convert.ToString);
            }
            if (content.Contains("MeterDetailMeterName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).MeterDetailMeterName = (string) content.GetValueForProperty("MeterDetailMeterName",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).MeterDetailMeterName, global::System.Convert.ToString);
            }
            if (content.Contains("MeterDetailMeterCategory"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).MeterDetailMeterCategory = (string) content.GetValueForProperty("MeterDetailMeterCategory",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).MeterDetailMeterCategory, global::System.Convert.ToString);
            }
            if (content.Contains("MeterDetailUnit"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).MeterDetailUnit = (string) content.GetValueForProperty("MeterDetailUnit",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).MeterDetailUnit, global::System.Convert.ToString);
            }
            if (content.Contains("MeterDetailMeterLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).MeterDetailMeterLocation = (string) content.GetValueForProperty("MeterDetailMeterLocation",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).MeterDetailMeterLocation, global::System.Convert.ToString);
            }
            if (content.Contains("MeterDetailServiceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).MeterDetailServiceName = (string) content.GetValueForProperty("MeterDetailServiceName",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).MeterDetailServiceName, global::System.Convert.ToString);
            }
            if (content.Contains("MeterDetailServiceTier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).MeterDetailServiceTier = (string) content.GetValueForProperty("MeterDetailServiceTier",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).MeterDetailServiceTier, global::System.Convert.ToString);
            }
            if (content.Contains("MeterDetailMeterSubCategory"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).MeterDetailMeterSubCategory = (string) content.GetValueForProperty("MeterDetailMeterSubCategory",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).MeterDetailMeterSubCategory, global::System.Convert.ToString);
            }
            if (content.Contains("MeterDetailTotalIncludedQuantity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).MeterDetailTotalIncludedQuantity = (decimal?) content.GetValueForProperty("MeterDetailTotalIncludedQuantity",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).MeterDetailTotalIncludedQuantity, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("MeterDetailPretaxStandardRate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).MeterDetailPretaxStandardRate = (decimal?) content.GetValueForProperty("MeterDetailPretaxStandardRate",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).MeterDetailPretaxStandardRate, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.PriceSheetProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal PriceSheetProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("MeterDetail"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).MeterDetail = (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetails) content.GetValueForProperty("MeterDetail",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).MeterDetail, Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.MeterDetailsTypeConverter.ConvertFrom);
            }
            if (content.Contains("BillingPeriodId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).BillingPeriodId = (string) content.GetValueForProperty("BillingPeriodId",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).BillingPeriodId, global::System.Convert.ToString);
            }
            if (content.Contains("MeterId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).MeterId = (string) content.GetValueForProperty("MeterId",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).MeterId, global::System.Convert.ToString);
            }
            if (content.Contains("UnitOfMeasure"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).UnitOfMeasure = (string) content.GetValueForProperty("UnitOfMeasure",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).UnitOfMeasure, global::System.Convert.ToString);
            }
            if (content.Contains("IncludedQuantity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).IncludedQuantity = (decimal?) content.GetValueForProperty("IncludedQuantity",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).IncludedQuantity, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("PartNumber"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).PartNumber = (string) content.GetValueForProperty("PartNumber",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).PartNumber, global::System.Convert.ToString);
            }
            if (content.Contains("UnitPrice"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).UnitPrice = (decimal?) content.GetValueForProperty("UnitPrice",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).UnitPrice, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("CurrencyCode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).CurrencyCode = (string) content.GetValueForProperty("CurrencyCode",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).CurrencyCode, global::System.Convert.ToString);
            }
            if (content.Contains("OfferId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).OfferId = (string) content.GetValueForProperty("OfferId",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).OfferId, global::System.Convert.ToString);
            }
            if (content.Contains("MeterDetailMeterName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).MeterDetailMeterName = (string) content.GetValueForProperty("MeterDetailMeterName",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).MeterDetailMeterName, global::System.Convert.ToString);
            }
            if (content.Contains("MeterDetailMeterCategory"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).MeterDetailMeterCategory = (string) content.GetValueForProperty("MeterDetailMeterCategory",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).MeterDetailMeterCategory, global::System.Convert.ToString);
            }
            if (content.Contains("MeterDetailUnit"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).MeterDetailUnit = (string) content.GetValueForProperty("MeterDetailUnit",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).MeterDetailUnit, global::System.Convert.ToString);
            }
            if (content.Contains("MeterDetailMeterLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).MeterDetailMeterLocation = (string) content.GetValueForProperty("MeterDetailMeterLocation",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).MeterDetailMeterLocation, global::System.Convert.ToString);
            }
            if (content.Contains("MeterDetailServiceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).MeterDetailServiceName = (string) content.GetValueForProperty("MeterDetailServiceName",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).MeterDetailServiceName, global::System.Convert.ToString);
            }
            if (content.Contains("MeterDetailServiceTier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).MeterDetailServiceTier = (string) content.GetValueForProperty("MeterDetailServiceTier",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).MeterDetailServiceTier, global::System.Convert.ToString);
            }
            if (content.Contains("MeterDetailMeterSubCategory"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).MeterDetailMeterSubCategory = (string) content.GetValueForProperty("MeterDetailMeterSubCategory",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).MeterDetailMeterSubCategory, global::System.Convert.ToString);
            }
            if (content.Contains("MeterDetailTotalIncludedQuantity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).MeterDetailTotalIncludedQuantity = (decimal?) content.GetValueForProperty("MeterDetailTotalIncludedQuantity",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).MeterDetailTotalIncludedQuantity, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("MeterDetailPretaxStandardRate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).MeterDetailPretaxStandardRate = (decimal?) content.GetValueForProperty("MeterDetailPretaxStandardRate",((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetPropertiesInternal)this).MeterDetailPretaxStandardRate, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// The properties of the price sheet.
    [System.ComponentModel.TypeConverter(typeof(PriceSheetPropertiesTypeConverter))]
    public partial interface IPriceSheetProperties

    {

    }
}