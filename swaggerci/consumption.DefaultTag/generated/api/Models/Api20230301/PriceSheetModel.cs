// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Extensions;

    /// <summary>price sheet result. It contains the pricesheet associated with billing period</summary>
    public partial class PriceSheetModel :
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetModel,
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetModelInternal
    {

        /// <summary>Backing field for <see cref="Download" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetails _download;

        /// <summary>Pricesheet download details.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetails Download { get => (this._download = this._download ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.MeterDetails()); }

        /// <summary>The category of the meter, for example, 'Cloud services', 'Networking', etc..</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string DownloadMeterCategory { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)Download).MeterCategory; }

        /// <summary>The location in which the Azure service is available.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string DownloadMeterLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)Download).MeterLocation; }

        /// <summary>The name of the meter, within the given meter category</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string DownloadMeterName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)Download).MeterName; }

        /// <summary>
        /// The subcategory of the meter, for example, 'A6 Cloud services', 'ExpressRoute (IXP)', etc..
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string DownloadMeterSubCategory { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)Download).MeterSubCategory; }

        /// <summary>The pretax listing price.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? DownloadPretaxStandardRate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)Download).PretaxStandardRate; }

        /// <summary>The name of the service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string DownloadServiceName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)Download).ServiceName; }

        /// <summary>The service tier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string DownloadServiceTier { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)Download).ServiceTier; }

        /// <summary>The total included quantity associated with the offer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? DownloadTotalIncludedQuantity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)Download).TotalIncludedQuantity; }

        /// <summary>
        /// The unit in which the meter consumption is charged, for example, 'Hours', 'GB', etc.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string DownloadUnit { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)Download).Unit; }

        /// <summary>Internal Acessors for Download</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetails Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetModelInternal.Download { get => (this._download = this._download ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.MeterDetails()); set { {_download = value;} } }

        /// <summary>Internal Acessors for DownloadMeterCategory</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetModelInternal.DownloadMeterCategory { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)Download).MeterCategory; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)Download).MeterCategory = value; }

        /// <summary>Internal Acessors for DownloadMeterLocation</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetModelInternal.DownloadMeterLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)Download).MeterLocation; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)Download).MeterLocation = value; }

        /// <summary>Internal Acessors for DownloadMeterName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetModelInternal.DownloadMeterName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)Download).MeterName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)Download).MeterName = value; }

        /// <summary>Internal Acessors for DownloadMeterSubCategory</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetModelInternal.DownloadMeterSubCategory { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)Download).MeterSubCategory; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)Download).MeterSubCategory = value; }

        /// <summary>Internal Acessors for DownloadPretaxStandardRate</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetModelInternal.DownloadPretaxStandardRate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)Download).PretaxStandardRate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)Download).PretaxStandardRate = value; }

        /// <summary>Internal Acessors for DownloadServiceName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetModelInternal.DownloadServiceName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)Download).ServiceName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)Download).ServiceName = value; }

        /// <summary>Internal Acessors for DownloadServiceTier</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetModelInternal.DownloadServiceTier { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)Download).ServiceTier; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)Download).ServiceTier = value; }

        /// <summary>Internal Acessors for DownloadTotalIncludedQuantity</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetModelInternal.DownloadTotalIncludedQuantity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)Download).TotalIncludedQuantity; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)Download).TotalIncludedQuantity = value; }

        /// <summary>Internal Acessors for DownloadUnit</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetModelInternal.DownloadUnit { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)Download).Unit; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetailsInternal)Download).Unit = value; }

        /// <summary>Internal Acessors for NextLink</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetModelInternal.NextLink { get => this._nextLink; set { {_nextLink = value;} } }

        /// <summary>Internal Acessors for Pricesheet</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetProperties[] Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetModelInternal.Pricesheet { get => this._pricesheet; set { {_pricesheet = value;} } }

        /// <summary>Backing field for <see cref="NextLink" /> property.</summary>
        private string _nextLink;

        /// <summary>The link (url) to the next page of results.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string NextLink { get => this._nextLink; }

        /// <summary>Backing field for <see cref="Pricesheet" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetProperties[] _pricesheet;

        /// <summary>Price sheet</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetProperties[] Pricesheet { get => this._pricesheet; }

        /// <summary>Creates an new <see cref="PriceSheetModel" /> instance.</summary>
        public PriceSheetModel()
        {

        }
    }
    /// price sheet result. It contains the pricesheet associated with billing period
    public partial interface IPriceSheetModel :
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.IJsonSerializable
    {
        /// <summary>The category of the meter, for example, 'Cloud services', 'Networking', etc..</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The category of the meter, for example, 'Cloud services', 'Networking', etc..",
        SerializedName = @"meterCategory",
        PossibleTypes = new [] { typeof(string) })]
        string DownloadMeterCategory { get;  }
        /// <summary>The location in which the Azure service is available.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The location in which the Azure service is available.",
        SerializedName = @"meterLocation",
        PossibleTypes = new [] { typeof(string) })]
        string DownloadMeterLocation { get;  }
        /// <summary>The name of the meter, within the given meter category</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of the meter, within the given meter category",
        SerializedName = @"meterName",
        PossibleTypes = new [] { typeof(string) })]
        string DownloadMeterName { get;  }
        /// <summary>
        /// The subcategory of the meter, for example, 'A6 Cloud services', 'ExpressRoute (IXP)', etc..
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The subcategory of the meter, for example, 'A6 Cloud services', 'ExpressRoute (IXP)', etc..",
        SerializedName = @"meterSubCategory",
        PossibleTypes = new [] { typeof(string) })]
        string DownloadMeterSubCategory { get;  }
        /// <summary>The pretax listing price.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The pretax listing price.",
        SerializedName = @"pretaxStandardRate",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? DownloadPretaxStandardRate { get;  }
        /// <summary>The name of the service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of the service.",
        SerializedName = @"serviceName",
        PossibleTypes = new [] { typeof(string) })]
        string DownloadServiceName { get;  }
        /// <summary>The service tier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The service tier.",
        SerializedName = @"serviceTier",
        PossibleTypes = new [] { typeof(string) })]
        string DownloadServiceTier { get;  }
        /// <summary>The total included quantity associated with the offer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The total included quantity associated with the offer.",
        SerializedName = @"totalIncludedQuantity",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? DownloadTotalIncludedQuantity { get;  }
        /// <summary>
        /// The unit in which the meter consumption is charged, for example, 'Hours', 'GB', etc.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The unit in which the meter consumption is charged, for example, 'Hours', 'GB', etc.",
        SerializedName = @"unit",
        PossibleTypes = new [] { typeof(string) })]
        string DownloadUnit { get;  }
        /// <summary>The link (url) to the next page of results.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The link (url) to the next page of results.",
        SerializedName = @"nextLink",
        PossibleTypes = new [] { typeof(string) })]
        string NextLink { get;  }
        /// <summary>Price sheet</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Price sheet",
        SerializedName = @"pricesheets",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetProperties[] Pricesheet { get;  }

    }
    /// price sheet result. It contains the pricesheet associated with billing period
    internal partial interface IPriceSheetModelInternal

    {
        /// <summary>Pricesheet download details.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IMeterDetails Download { get; set; }
        /// <summary>The category of the meter, for example, 'Cloud services', 'Networking', etc..</summary>
        string DownloadMeterCategory { get; set; }
        /// <summary>The location in which the Azure service is available.</summary>
        string DownloadMeterLocation { get; set; }
        /// <summary>The name of the meter, within the given meter category</summary>
        string DownloadMeterName { get; set; }
        /// <summary>
        /// The subcategory of the meter, for example, 'A6 Cloud services', 'ExpressRoute (IXP)', etc..
        /// </summary>
        string DownloadMeterSubCategory { get; set; }
        /// <summary>The pretax listing price.</summary>
        decimal? DownloadPretaxStandardRate { get; set; }
        /// <summary>The name of the service.</summary>
        string DownloadServiceName { get; set; }
        /// <summary>The service tier.</summary>
        string DownloadServiceTier { get; set; }
        /// <summary>The total included quantity associated with the offer.</summary>
        decimal? DownloadTotalIncludedQuantity { get; set; }
        /// <summary>
        /// The unit in which the meter consumption is charged, for example, 'Hours', 'GB', etc.
        /// </summary>
        string DownloadUnit { get; set; }
        /// <summary>The link (url) to the next page of results.</summary>
        string NextLink { get; set; }
        /// <summary>Price sheet</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20230301.IPriceSheetProperties[] Pricesheet { get; set; }

    }
}