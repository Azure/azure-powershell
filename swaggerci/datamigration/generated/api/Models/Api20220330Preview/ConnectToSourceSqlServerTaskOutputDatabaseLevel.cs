// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Extensions;

    /// <summary>
    /// Database level output for the task that validates connection to SQL Server and also validates source server requirements
    /// </summary>
    public partial class ConnectToSourceSqlServerTaskOutputDatabaseLevel :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskOutputDatabaseLevel,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskOutputDatabaseLevelInternal,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskOutput"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskOutput __connectToSourceSqlServerTaskOutput = new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ConnectToSourceSqlServerTaskOutput();

        /// <summary>Backing field for <see cref="CompatibilityLevel" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.DatabaseCompatLevel? _compatibilityLevel;

        /// <summary>SQL Server compatibility level of database</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.DatabaseCompatLevel? CompatibilityLevel { get => this._compatibilityLevel; }

        /// <summary>Backing field for <see cref="DatabaseFile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseFileInfo[] _databaseFile;

        /// <summary>The list of database files</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseFileInfo[] DatabaseFile { get => this._databaseFile; }

        /// <summary>Backing field for <see cref="DatabaseState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.DatabaseState? _databaseState;

        /// <summary>State of the database</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.DatabaseState? DatabaseState { get => this._databaseState; }

        /// <summary>Result identifier</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskOutputInternal)__connectToSourceSqlServerTaskOutput).Id; }

        /// <summary>Internal Acessors for CompatibilityLevel</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.DatabaseCompatLevel? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskOutputDatabaseLevelInternal.CompatibilityLevel { get => this._compatibilityLevel; set { {_compatibilityLevel = value;} } }

        /// <summary>Internal Acessors for DatabaseFile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseFileInfo[] Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskOutputDatabaseLevelInternal.DatabaseFile { get => this._databaseFile; set { {_databaseFile = value;} } }

        /// <summary>Internal Acessors for DatabaseState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.DatabaseState? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskOutputDatabaseLevelInternal.DatabaseState { get => this._databaseState; set { {_databaseState = value;} } }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskOutputDatabaseLevelInternal.Name { get => this._name; set { {_name = value;} } }

        /// <summary>Internal Acessors for SizeMb</summary>
        double? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskOutputDatabaseLevelInternal.SizeMb { get => this._sizeMb; set { {_sizeMb = value;} } }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskOutputInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskOutputInternal)__connectToSourceSqlServerTaskOutput).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskOutputInternal)__connectToSourceSqlServerTaskOutput).Id = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Database name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string Name { get => this._name; }

        /// <summary>Type of result - database level or task level</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public string ResultType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskOutputInternal)__connectToSourceSqlServerTaskOutput).ResultType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskOutputInternal)__connectToSourceSqlServerTaskOutput).ResultType = value ; }

        /// <summary>Backing field for <see cref="SizeMb" /> property.</summary>
        private double? _sizeMb;

        /// <summary>Size of the file in megabytes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public double? SizeMb { get => this._sizeMb; }

        /// <summary>
        /// Creates an new <see cref="ConnectToSourceSqlServerTaskOutputDatabaseLevel" /> instance.
        /// </summary>
        public ConnectToSourceSqlServerTaskOutputDatabaseLevel()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__connectToSourceSqlServerTaskOutput), __connectToSourceSqlServerTaskOutput);
            await eventListener.AssertObjectIsValid(nameof(__connectToSourceSqlServerTaskOutput), __connectToSourceSqlServerTaskOutput);
        }
    }
    /// Database level output for the task that validates connection to SQL Server and also validates source server requirements
    public partial interface IConnectToSourceSqlServerTaskOutputDatabaseLevel :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskOutput
    {
        /// <summary>SQL Server compatibility level of database</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"SQL Server compatibility level of database",
        SerializedName = @"compatibilityLevel",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.DatabaseCompatLevel) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.DatabaseCompatLevel? CompatibilityLevel { get;  }
        /// <summary>The list of database files</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of database files",
        SerializedName = @"databaseFiles",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseFileInfo) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseFileInfo[] DatabaseFile { get;  }
        /// <summary>State of the database</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"State of the database",
        SerializedName = @"databaseState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.DatabaseState) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.DatabaseState? DatabaseState { get;  }
        /// <summary>Database name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Database name",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get;  }
        /// <summary>Size of the file in megabytes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Size of the file in megabytes",
        SerializedName = @"sizeMB",
        PossibleTypes = new [] { typeof(double) })]
        double? SizeMb { get;  }

    }
    /// Database level output for the task that validates connection to SQL Server and also validates source server requirements
    internal partial interface IConnectToSourceSqlServerTaskOutputDatabaseLevelInternal :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskOutputInternal
    {
        /// <summary>SQL Server compatibility level of database</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.DatabaseCompatLevel? CompatibilityLevel { get; set; }
        /// <summary>The list of database files</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseFileInfo[] DatabaseFile { get; set; }
        /// <summary>State of the database</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.DatabaseState? DatabaseState { get; set; }
        /// <summary>Database name</summary>
        string Name { get; set; }
        /// <summary>Size of the file in megabytes</summary>
        double? SizeMb { get; set; }

    }
}