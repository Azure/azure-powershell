// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Extensions;

    /// <summary>Describes a MongoDB data source</summary>
    public partial class MongoDbClusterInfo :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMongoDbClusterInfo,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMongoDbClusterInfoInternal
    {

        /// <summary>Backing field for <see cref="Database" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMongoDbDatabaseInfo[] _database;

        /// <summary>A list of non-system databases in the cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMongoDbDatabaseInfo[] Database { get => this._database; set => this._database = value; }

        /// <summary>Backing field for <see cref="SupportsSharding" /> property.</summary>
        private bool _supportsSharding;

        /// <summary>Whether the cluster supports sharded collections</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public bool SupportsSharding { get => this._supportsSharding; set => this._supportsSharding = value; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.MongoDbClusterType _type;

        /// <summary>The type of data source</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.MongoDbClusterType Type { get => this._type; set => this._type = value; }

        /// <summary>Backing field for <see cref="Version" /> property.</summary>
        private string _version;

        /// <summary>
        /// The version of the data source in the form x.y.z (e.g. 3.6.7). Not used if Type is BlobContainer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string Version { get => this._version; set => this._version = value; }

        /// <summary>Creates an new <see cref="MongoDbClusterInfo" /> instance.</summary>
        public MongoDbClusterInfo()
        {

        }
    }
    /// Describes a MongoDB data source
    public partial interface IMongoDbClusterInfo :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IJsonSerializable
    {
        /// <summary>A list of non-system databases in the cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"A list of non-system databases in the cluster",
        SerializedName = @"databases",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMongoDbDatabaseInfo) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMongoDbDatabaseInfo[] Database { get; set; }
        /// <summary>Whether the cluster supports sharded collections</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Whether the cluster supports sharded collections",
        SerializedName = @"supportsSharding",
        PossibleTypes = new [] { typeof(bool) })]
        bool SupportsSharding { get; set; }
        /// <summary>The type of data source</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The type of data source",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.MongoDbClusterType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.MongoDbClusterType Type { get; set; }
        /// <summary>
        /// The version of the data source in the form x.y.z (e.g. 3.6.7). Not used if Type is BlobContainer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The version of the data source in the form x.y.z (e.g. 3.6.7). Not used if Type is BlobContainer.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string Version { get; set; }

    }
    /// Describes a MongoDB data source
    internal partial interface IMongoDbClusterInfoInternal

    {
        /// <summary>A list of non-system databases in the cluster</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMongoDbDatabaseInfo[] Database { get; set; }
        /// <summary>Whether the cluster supports sharded collections</summary>
        bool SupportsSharding { get; set; }
        /// <summary>The type of data source</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.MongoDbClusterType Type { get; set; }
        /// <summary>
        /// The version of the data source in the form x.y.z (e.g. 3.6.7). Not used if Type is BlobContainer.
        /// </summary>
        string Version { get; set; }

    }
}