// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Extensions;

    /// <summary>Properties for the task that gets TDE certificates in Base64 encoded format.</summary>
    public partial class GetTdeCertificatesSqlTaskProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskProperties,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskPropertiesInternal,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IProjectTaskProperties"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IProjectTaskProperties __projectTaskProperties = new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ProjectTaskProperties();

        /// <summary>Password credential used to connect to the share location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string BackupFileSharePassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskInputInternal)Input).BackupFileSharePassword; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskInputInternal)Input).BackupFileSharePassword = value ?? null; }

        /// <summary>The folder path for this share.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string BackupFileSharePath { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskInputInternal)Input).BackupFileSharePath; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskInputInternal)Input).BackupFileSharePath = value ?? null; }

        /// <summary>User name credential to connect to the share location</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string BackupFileShareUserName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskInputInternal)Input).BackupFileShareUserName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskInputInternal)Input).BackupFileShareUserName = value ?? null; }

        /// <summary>Key value pairs of client data to attach meta data information to task</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IProjectTaskPropertiesClientData ClientData { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IProjectTaskPropertiesInternal)__projectTaskProperties).ClientData; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IProjectTaskPropertiesInternal)__projectTaskProperties).ClientData = value ?? null /* model class */; }

        /// <summary>Array of command properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ICommandProperties[] Command { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IProjectTaskPropertiesInternal)__projectTaskProperties).Command; }

        /// <summary>Additional connection settings</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string ConnectionInfoAdditionalSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskInputInternal)Input).ConnectionInfoAdditionalSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskInputInternal)Input).ConnectionInfoAdditionalSetting = value ?? null; }

        /// <summary>Authentication type to use for connection</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.AuthenticationType? ConnectionInfoAuthentication { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskInputInternal)Input).ConnectionInfoAuthentication; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskInputInternal)Input).ConnectionInfoAuthentication = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.AuthenticationType)""); }

        /// <summary>Data source in the format Protocol:MachineName\SQLServerInstanceName,PortNumber</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string ConnectionInfoDataSource { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskInputInternal)Input).ConnectionInfoDataSource; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskInputInternal)Input).ConnectionInfoDataSource = value ?? null; }

        /// <summary>Whether to encrypt the connection</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public bool? ConnectionInfoEncryptConnection { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskInputInternal)Input).ConnectionInfoEncryptConnection; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskInputInternal)Input).ConnectionInfoEncryptConnection = value ?? default(bool); }

        /// <summary>Password credential.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string ConnectionInfoPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskInputInternal)Input).ConnectionInfoPassword; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskInputInternal)Input).ConnectionInfoPassword = value ?? null; }

        /// <summary>Server platform type for connection</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.SqlSourcePlatform? ConnectionInfoPlatform { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskInputInternal)Input).ConnectionInfoPlatform; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskInputInternal)Input).ConnectionInfoPlatform = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.SqlSourcePlatform)""); }

        /// <summary>Port for Server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public int? ConnectionInfoPort { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskInputInternal)Input).ConnectionInfoPort; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskInputInternal)Input).ConnectionInfoPort = value ?? default(int); }

        /// <summary>
        /// Represents the ID of an HTTP resource represented by an Azure resource provider.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string ConnectionInfoResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskInputInternal)Input).ConnectionInfoResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskInputInternal)Input).ConnectionInfoResourceId = value ?? null; }

        /// <summary>server brand version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string ConnectionInfoServerBrandVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskInputInternal)Input).ConnectionInfoServerBrandVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskInputInternal)Input).ConnectionInfoServerBrandVersion = value ?? null; }

        /// <summary>name of the server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string ConnectionInfoServerName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskInputInternal)Input).ConnectionInfoServerName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskInputInternal)Input).ConnectionInfoServerName = value ?? null; }

        /// <summary>server version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string ConnectionInfoServerVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskInputInternal)Input).ConnectionInfoServerVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskInputInternal)Input).ConnectionInfoServerVersion = value ?? null; }

        /// <summary>Whether to trust the server certificate</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public bool? ConnectionInfoTrustServerCertificate { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskInputInternal)Input).ConnectionInfoTrustServerCertificate; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskInputInternal)Input).ConnectionInfoTrustServerCertificate = value ?? default(bool); }

        /// <summary>Type of connection info</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string ConnectionInfoType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskInputInternal)Input).ConnectionInfoType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskInputInternal)Input).ConnectionInfoType = value ?? null; }

        /// <summary>User name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string ConnectionInfoUserName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskInputInternal)Input).ConnectionInfoUserName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskInputInternal)Input).ConnectionInfoUserName = value ?? null; }

        /// <summary>Array of errors. This is ignored if submitted.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IODataError[] Error { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IProjectTaskPropertiesInternal)__projectTaskProperties).Error; }

        /// <summary>Backing field for <see cref="Input" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskInput _input;

        /// <summary>Task input</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskInput Input { get => (this._input = this._input ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.GetTdeCertificatesSqlTaskInput()); set => this._input = value; }

        /// <summary>
        /// List containing certificate names and corresponding password to use for encrypting the exported certificate.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISelectedCertificateInput[] InputSelectedCertificate { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskInputInternal)Input).SelectedCertificate; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskInputInternal)Input).SelectedCertificate = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for Input</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskInput Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskPropertiesInternal.Input { get => (this._input = this._input ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.GetTdeCertificatesSqlTaskInput()); set { {_input = value;} } }

        /// <summary>Internal Acessors for InputBackupFileShare</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IFileShare Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskPropertiesInternal.InputBackupFileShare { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskInputInternal)Input).BackupFileShare; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskInputInternal)Input).BackupFileShare = value; }

        /// <summary>Internal Acessors for InputConnectionInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlConnectionInfo Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskPropertiesInternal.InputConnectionInfo { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskInputInternal)Input).ConnectionInfo; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskInputInternal)Input).ConnectionInfo = value; }

        /// <summary>Internal Acessors for Output</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskOutput[] Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskPropertiesInternal.Output { get => this._output; set { {_output = value;} } }

        /// <summary>Internal Acessors for Command</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ICommandProperties[] Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IProjectTaskPropertiesInternal.Command { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IProjectTaskPropertiesInternal)__projectTaskProperties).Command; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IProjectTaskPropertiesInternal)__projectTaskProperties).Command = value; }

        /// <summary>Internal Acessors for Error</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IODataError[] Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IProjectTaskPropertiesInternal.Error { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IProjectTaskPropertiesInternal)__projectTaskProperties).Error; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IProjectTaskPropertiesInternal)__projectTaskProperties).Error = value; }

        /// <summary>Internal Acessors for State</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.TaskState? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IProjectTaskPropertiesInternal.State { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IProjectTaskPropertiesInternal)__projectTaskProperties).State; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IProjectTaskPropertiesInternal)__projectTaskProperties).State = value; }

        /// <summary>Backing field for <see cref="Output" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskOutput[] _output;

        /// <summary>Task output. This is ignored if submitted.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskOutput[] Output { get => this._output; }

        /// <summary>The state of the task. This is ignored if submitted.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.TaskState? State { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IProjectTaskPropertiesInternal)__projectTaskProperties).State; }

        /// <summary>Task type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.TaskType TaskType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IProjectTaskPropertiesInternal)__projectTaskProperties).TaskType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IProjectTaskPropertiesInternal)__projectTaskProperties).TaskType = value ; }

        /// <summary>Creates an new <see cref="GetTdeCertificatesSqlTaskProperties" /> instance.</summary>
        public GetTdeCertificatesSqlTaskProperties()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__projectTaskProperties), __projectTaskProperties);
            await eventListener.AssertObjectIsValid(nameof(__projectTaskProperties), __projectTaskProperties);
        }
    }
    /// Properties for the task that gets TDE certificates in Base64 encoded format.
    public partial interface IGetTdeCertificatesSqlTaskProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IProjectTaskProperties
    {
        /// <summary>Password credential used to connect to the share location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Password credential used to connect to the share location.",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(string) })]
        string BackupFileSharePassword { get; set; }
        /// <summary>The folder path for this share.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The folder path for this share.",
        SerializedName = @"path",
        PossibleTypes = new [] { typeof(string) })]
        string BackupFileSharePath { get; set; }
        /// <summary>User name credential to connect to the share location</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"User name credential to connect to the share location",
        SerializedName = @"userName",
        PossibleTypes = new [] { typeof(string) })]
        string BackupFileShareUserName { get; set; }
        /// <summary>Additional connection settings</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Additional connection settings",
        SerializedName = @"additionalSettings",
        PossibleTypes = new [] { typeof(string) })]
        string ConnectionInfoAdditionalSetting { get; set; }
        /// <summary>Authentication type to use for connection</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Authentication type to use for connection",
        SerializedName = @"authentication",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.AuthenticationType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.AuthenticationType? ConnectionInfoAuthentication { get; set; }
        /// <summary>Data source in the format Protocol:MachineName\SQLServerInstanceName,PortNumber</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Data source in the format Protocol:MachineName\SQLServerInstanceName,PortNumber",
        SerializedName = @"dataSource",
        PossibleTypes = new [] { typeof(string) })]
        string ConnectionInfoDataSource { get; set; }
        /// <summary>Whether to encrypt the connection</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to encrypt the connection",
        SerializedName = @"encryptConnection",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ConnectionInfoEncryptConnection { get; set; }
        /// <summary>Password credential.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Password credential.",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(string) })]
        string ConnectionInfoPassword { get; set; }
        /// <summary>Server platform type for connection</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Server platform type for connection",
        SerializedName = @"platform",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.SqlSourcePlatform) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.SqlSourcePlatform? ConnectionInfoPlatform { get; set; }
        /// <summary>Port for Server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Port for Server",
        SerializedName = @"port",
        PossibleTypes = new [] { typeof(int) })]
        int? ConnectionInfoPort { get; set; }
        /// <summary>
        /// Represents the ID of an HTTP resource represented by an Azure resource provider.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents the ID of an HTTP resource represented by an Azure resource provider.",
        SerializedName = @"resourceId",
        PossibleTypes = new [] { typeof(string) })]
        string ConnectionInfoResourceId { get; set; }
        /// <summary>server brand version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"server brand version",
        SerializedName = @"serverBrandVersion",
        PossibleTypes = new [] { typeof(string) })]
        string ConnectionInfoServerBrandVersion { get; set; }
        /// <summary>name of the server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"name of the server",
        SerializedName = @"serverName",
        PossibleTypes = new [] { typeof(string) })]
        string ConnectionInfoServerName { get; set; }
        /// <summary>server version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"server version",
        SerializedName = @"serverVersion",
        PossibleTypes = new [] { typeof(string) })]
        string ConnectionInfoServerVersion { get; set; }
        /// <summary>Whether to trust the server certificate</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to trust the server certificate",
        SerializedName = @"trustServerCertificate",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ConnectionInfoTrustServerCertificate { get; set; }
        /// <summary>Type of connection info</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of connection info",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string ConnectionInfoType { get; set; }
        /// <summary>User name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"User name",
        SerializedName = @"userName",
        PossibleTypes = new [] { typeof(string) })]
        string ConnectionInfoUserName { get; set; }
        /// <summary>
        /// List containing certificate names and corresponding password to use for encrypting the exported certificate.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List containing certificate names and corresponding password to use for encrypting the exported certificate.",
        SerializedName = @"selectedCertificates",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISelectedCertificateInput) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISelectedCertificateInput[] InputSelectedCertificate { get; set; }
        /// <summary>Task output. This is ignored if submitted.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Task output. This is ignored if submitted.",
        SerializedName = @"output",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskOutput) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskOutput[] Output { get;  }

    }
    /// Properties for the task that gets TDE certificates in Base64 encoded format.
    internal partial interface IGetTdeCertificatesSqlTaskPropertiesInternal :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IProjectTaskPropertiesInternal
    {
        /// <summary>Password credential used to connect to the share location.</summary>
        string BackupFileSharePassword { get; set; }
        /// <summary>The folder path for this share.</summary>
        string BackupFileSharePath { get; set; }
        /// <summary>User name credential to connect to the share location</summary>
        string BackupFileShareUserName { get; set; }
        /// <summary>Additional connection settings</summary>
        string ConnectionInfoAdditionalSetting { get; set; }
        /// <summary>Authentication type to use for connection</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.AuthenticationType? ConnectionInfoAuthentication { get; set; }
        /// <summary>Data source in the format Protocol:MachineName\SQLServerInstanceName,PortNumber</summary>
        string ConnectionInfoDataSource { get; set; }
        /// <summary>Whether to encrypt the connection</summary>
        bool? ConnectionInfoEncryptConnection { get; set; }
        /// <summary>Password credential.</summary>
        string ConnectionInfoPassword { get; set; }
        /// <summary>Server platform type for connection</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.SqlSourcePlatform? ConnectionInfoPlatform { get; set; }
        /// <summary>Port for Server</summary>
        int? ConnectionInfoPort { get; set; }
        /// <summary>
        /// Represents the ID of an HTTP resource represented by an Azure resource provider.
        /// </summary>
        string ConnectionInfoResourceId { get; set; }
        /// <summary>server brand version</summary>
        string ConnectionInfoServerBrandVersion { get; set; }
        /// <summary>name of the server</summary>
        string ConnectionInfoServerName { get; set; }
        /// <summary>server version</summary>
        string ConnectionInfoServerVersion { get; set; }
        /// <summary>Whether to trust the server certificate</summary>
        bool? ConnectionInfoTrustServerCertificate { get; set; }
        /// <summary>Type of connection info</summary>
        string ConnectionInfoType { get; set; }
        /// <summary>User name</summary>
        string ConnectionInfoUserName { get; set; }
        /// <summary>Task input</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskInput Input { get; set; }
        /// <summary>
        /// Backup file share information for file share to be used for temporarily storing files.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IFileShare InputBackupFileShare { get; set; }
        /// <summary>Connection information for SQL Server</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlConnectionInfo InputConnectionInfo { get; set; }
        /// <summary>
        /// List containing certificate names and corresponding password to use for encrypting the exported certificate.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISelectedCertificateInput[] InputSelectedCertificate { get; set; }
        /// <summary>Task output. This is ignored if submitted.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskOutput[] Output { get; set; }

    }
}