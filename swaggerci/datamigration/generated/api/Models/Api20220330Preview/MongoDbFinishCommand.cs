// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Extensions;

    /// <summary>Properties for the command that finishes a migration in whole or in part</summary>
    public partial class MongoDbFinishCommand :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMongoDbFinishCommand,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMongoDbFinishCommandInternal,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ICommandProperties"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ICommandProperties __commandProperties = new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.CommandProperties();

        /// <summary>Command type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.CommandType CommandType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ICommandPropertiesInternal)__commandProperties).CommandType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ICommandPropertiesInternal)__commandProperties).CommandType = value ; }

        /// <summary>Array of errors. This is ignored if submitted.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IODataError[] Error { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ICommandPropertiesInternal)__commandProperties).Error; }

        /// <summary>Backing field for <see cref="Input" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMongoDbFinishCommandInput _input;

        /// <summary>Command input</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMongoDbFinishCommandInput Input { get => (this._input = this._input ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.MongoDbFinishCommandInput()); set => this._input = value; }

        /// <summary>
        /// If true, replication for the affected objects will be stopped immediately. If false, the migrator will finish replaying
        /// queued events before finishing the replication.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public bool? InputImmediate { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMongoDbFinishCommandInputInternal)Input).Immediate; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMongoDbFinishCommandInputInternal)Input).Immediate = value ?? default(bool); }

        /// <summary>
        /// The qualified name of a database or collection to act upon, or null to act upon the entire migration
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string InputObjectName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMongoDbCommandInputInternal)Input).ObjectName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMongoDbCommandInputInternal)Input).ObjectName = value ?? null; }

        /// <summary>Internal Acessors for Error</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IODataError[] Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ICommandPropertiesInternal.Error { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ICommandPropertiesInternal)__commandProperties).Error; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ICommandPropertiesInternal)__commandProperties).Error = value; }

        /// <summary>Internal Acessors for State</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.CommandState? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ICommandPropertiesInternal.State { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ICommandPropertiesInternal)__commandProperties).State; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ICommandPropertiesInternal)__commandProperties).State = value; }

        /// <summary>Internal Acessors for Input</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMongoDbFinishCommandInput Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMongoDbFinishCommandInternal.Input { get => (this._input = this._input ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.MongoDbFinishCommandInput()); set { {_input = value;} } }

        /// <summary>The state of the command. This is ignored if submitted.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.CommandState? State { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ICommandPropertiesInternal)__commandProperties).State; }

        /// <summary>Creates an new <see cref="MongoDbFinishCommand" /> instance.</summary>
        public MongoDbFinishCommand()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__commandProperties), __commandProperties);
            await eventListener.AssertObjectIsValid(nameof(__commandProperties), __commandProperties);
        }
    }
    /// Properties for the command that finishes a migration in whole or in part
    public partial interface IMongoDbFinishCommand :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ICommandProperties
    {
        /// <summary>
        /// If true, replication for the affected objects will be stopped immediately. If false, the migrator will finish replaying
        /// queued events before finishing the replication.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If true, replication for the affected objects will be stopped immediately. If false, the migrator will finish replaying queued events before finishing the replication.",
        SerializedName = @"immediate",
        PossibleTypes = new [] { typeof(bool) })]
        bool? InputImmediate { get; set; }
        /// <summary>
        /// The qualified name of a database or collection to act upon, or null to act upon the entire migration
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The qualified name of a database or collection to act upon, or null to act upon the entire migration",
        SerializedName = @"objectName",
        PossibleTypes = new [] { typeof(string) })]
        string InputObjectName { get; set; }

    }
    /// Properties for the command that finishes a migration in whole or in part
    internal partial interface IMongoDbFinishCommandInternal :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ICommandPropertiesInternal
    {
        /// <summary>Command input</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMongoDbFinishCommandInput Input { get; set; }
        /// <summary>
        /// If true, replication for the affected objects will be stopped immediately. If false, the migrator will finish replaying
        /// queued events before finishing the replication.
        /// </summary>
        bool? InputImmediate { get; set; }
        /// <summary>
        /// The qualified name of a database or collection to act upon, or null to act upon the entire migration
        /// </summary>
        string InputObjectName { get; set; }

    }
}