// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Extensions;

    /// <summary>
    /// Output for the task that validates connection to SQL DB and target server requirements
    /// </summary>
    public partial class ConnectToTargetSqlDbTaskOutput :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToTargetSqlDbTaskOutput,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToTargetSqlDbTaskOutputInternal
    {

        /// <summary>Backing field for <see cref="Database" /> property.</summary>
        private string _database;

        /// <summary>Source databases as a map from database name to database id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string Database { get => this._database; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>Result identifier</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string Id { get => this._id; }

        /// <summary>Internal Acessors for Database</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToTargetSqlDbTaskOutputInternal.Database { get => this._database; set { {_database = value;} } }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToTargetSqlDbTaskOutputInternal.Id { get => this._id; set { {_id = value;} } }

        /// <summary>Internal Acessors for TargetServerBrandVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToTargetSqlDbTaskOutputInternal.TargetServerBrandVersion { get => this._targetServerBrandVersion; set { {_targetServerBrandVersion = value;} } }

        /// <summary>Internal Acessors for TargetServerVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToTargetSqlDbTaskOutputInternal.TargetServerVersion { get => this._targetServerVersion; set { {_targetServerVersion = value;} } }

        /// <summary>Backing field for <see cref="TargetServerBrandVersion" /> property.</summary>
        private string _targetServerBrandVersion;

        /// <summary>Target server brand version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string TargetServerBrandVersion { get => this._targetServerBrandVersion; }

        /// <summary>Backing field for <see cref="TargetServerVersion" /> property.</summary>
        private string _targetServerVersion;

        /// <summary>Version of the target server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string TargetServerVersion { get => this._targetServerVersion; }

        /// <summary>Creates an new <see cref="ConnectToTargetSqlDbTaskOutput" /> instance.</summary>
        public ConnectToTargetSqlDbTaskOutput()
        {

        }
    }
    /// Output for the task that validates connection to SQL DB and target server requirements
    public partial interface IConnectToTargetSqlDbTaskOutput :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IJsonSerializable
    {
        /// <summary>Source databases as a map from database name to database id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Source databases as a map from database name to database id",
        SerializedName = @"databases",
        PossibleTypes = new [] { typeof(string) })]
        string Database { get;  }
        /// <summary>Result identifier</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Result identifier",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get;  }
        /// <summary>Target server brand version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Target server brand version",
        SerializedName = @"targetServerBrandVersion",
        PossibleTypes = new [] { typeof(string) })]
        string TargetServerBrandVersion { get;  }
        /// <summary>Version of the target server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Version of the target server",
        SerializedName = @"targetServerVersion",
        PossibleTypes = new [] { typeof(string) })]
        string TargetServerVersion { get;  }

    }
    /// Output for the task that validates connection to SQL DB and target server requirements
    internal partial interface IConnectToTargetSqlDbTaskOutputInternal

    {
        /// <summary>Source databases as a map from database name to database id</summary>
        string Database { get; set; }
        /// <summary>Result identifier</summary>
        string Id { get; set; }
        /// <summary>Target server brand version</summary>
        string TargetServerBrandVersion { get; set; }
        /// <summary>Version of the target server</summary>
        string TargetServerVersion { get; set; }

    }
}