// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Extensions;

    /// <summary>Input for the service task to check for OCI drivers.</summary>
    public partial class CheckOciDriverTaskInput :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ICheckOciDriverTaskInput,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ICheckOciDriverTaskInputInternal
    {

        /// <summary>Backing field for <see cref="ServerVersion" /> property.</summary>
        private string _serverVersion;

        /// <summary>Version of the source server to check against. Optional.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string ServerVersion { get => this._serverVersion; set => this._serverVersion = value; }

        /// <summary>Creates an new <see cref="CheckOciDriverTaskInput" /> instance.</summary>
        public CheckOciDriverTaskInput()
        {

        }
    }
    /// Input for the service task to check for OCI drivers.
    public partial interface ICheckOciDriverTaskInput :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IJsonSerializable
    {
        /// <summary>Version of the source server to check against. Optional.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Version of the source server to check against.  Optional.",
        SerializedName = @"serverVersion",
        PossibleTypes = new [] { typeof(string) })]
        string ServerVersion { get; set; }

    }
    /// Input for the service task to check for OCI drivers.
    internal partial interface ICheckOciDriverTaskInputInternal

    {
        /// <summary>Version of the source server to check against. Optional.</summary>
        string ServerVersion { get; set; }

    }
}