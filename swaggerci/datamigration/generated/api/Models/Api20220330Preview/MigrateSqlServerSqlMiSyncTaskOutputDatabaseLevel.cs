// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Extensions;

    public partial class MigrateSqlServerSqlMiSyncTaskOutputDatabaseLevel :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlMiSyncTaskOutputDatabaseLevel,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlMiSyncTaskOutputDatabaseLevelInternal,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlMiSyncTaskOutput"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlMiSyncTaskOutput __migrateSqlServerSqlMiSyncTaskOutput = new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.MigrateSqlServerSqlMiSyncTaskOutput();

        /// <summary>Backing field for <see cref="ActiveBackupSet" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfo[] _activeBackupSet;

        /// <summary>
        /// Backup sets that are currently active (Either being uploaded or getting restored)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfo[] ActiveBackupSet { get => this._activeBackupSet; }

        /// <summary>Backing field for <see cref="ContainerName" /> property.</summary>
        private string _containerName;

        /// <summary>
        /// Name of container created in the Azure Storage account where backups are copied to
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string ContainerName { get => this._containerName; }

        /// <summary>Backing field for <see cref="EndedOn" /> property.</summary>
        private global::System.DateTime? _endedOn;

        /// <summary>Database migration end time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public global::System.DateTime? EndedOn { get => this._endedOn; }

        /// <summary>Backing field for <see cref="ErrorPrefix" /> property.</summary>
        private string _errorPrefix;

        /// <summary>prefix string to use for querying errors for this database</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string ErrorPrefix { get => this._errorPrefix; }

        /// <summary>Backing field for <see cref="ExceptionsAndWarning" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException[] _exceptionsAndWarning;

        /// <summary>Migration exceptions and warnings</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException[] ExceptionsAndWarning { get => this._exceptionsAndWarning; }

        /// <summary>Backing field for <see cref="FullBackupSetInfo" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfo _fullBackupSetInfo;

        /// <summary>Details of full backup set</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfo FullBackupSetInfo { get => (this._fullBackupSetInfo = this._fullBackupSetInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.BackupSetInfo()); }

        /// <summary>Date and time that the backup operation finished</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public global::System.DateTime? FullBackupSetInfoBackupFinishedDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfoInternal)FullBackupSetInfo).BackupFinishedDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfoInternal)FullBackupSetInfo).BackupFinishedDate = value ?? default(global::System.DateTime); }

        /// <summary>Id for the set of backup files</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string FullBackupSetInfoBackupSetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfoInternal)FullBackupSetInfo).BackupSetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfoInternal)FullBackupSetInfo).BackupSetId = value ?? null; }

        /// <summary>Date and time that the backup operation began</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public global::System.DateTime? FullBackupSetInfoBackupStartDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfoInternal)FullBackupSetInfo).BackupStartDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfoInternal)FullBackupSetInfo).BackupStartDate = value ?? default(global::System.DateTime); }

        /// <summary>Enum of the different backup types</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.BackupType? FullBackupSetInfoBackupType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfoInternal)FullBackupSetInfo).BackupType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfoInternal)FullBackupSetInfo).BackupType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.BackupType)""); }

        /// <summary>Name of the database to which the backup set belongs</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string FullBackupSetInfoDatabaseName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfoInternal)FullBackupSetInfo).DatabaseName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfoInternal)FullBackupSetInfo).DatabaseName = value ?? null; }

        /// <summary>First log sequence number of the backup file</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string FullBackupSetInfoFirstLsn { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfoInternal)FullBackupSetInfo).FirstLsn; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfoInternal)FullBackupSetInfo).FirstLsn = value ?? null; }

        /// <summary>Whether the backup set is restored or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public bool? FullBackupSetInfoIsBackupRestored { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfoInternal)FullBackupSetInfo).IsBackupRestored; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfoInternal)FullBackupSetInfo).IsBackupRestored = value ?? default(bool); }

        /// <summary>Last log sequence number of the backup file</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string FullBackupSetInfoLastLsn { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfoInternal)FullBackupSetInfo).LastLsn; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfoInternal)FullBackupSetInfo).LastLsn = value ?? null; }

        /// <summary>Last modified time of the backup file in share location</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public global::System.DateTime? FullBackupSetInfoLastModifiedTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfoInternal)FullBackupSetInfo).LastModifiedTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfoInternal)FullBackupSetInfo).LastModifiedTime = value ?? default(global::System.DateTime); }

        /// <summary>List of files in the backup set</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupFileInfo[] FullBackupSetInfoListOfBackupFile { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfoInternal)FullBackupSetInfo).ListOfBackupFile; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfoInternal)FullBackupSetInfo).ListOfBackupFile = value ?? null /* arrayOf */; }

        /// <summary>Result identifier</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlMiSyncTaskOutputInternal)__migrateSqlServerSqlMiSyncTaskOutput).Id; }

        /// <summary>Backing field for <see cref="IsFullBackupRestored" /> property.</summary>
        private bool? _isFullBackupRestored;

        /// <summary>Whether full backup has been applied to the target database or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public bool? IsFullBackupRestored { get => this._isFullBackupRestored; }

        /// <summary>Backing field for <see cref="LastRestoredBackupSetInfo" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfo _lastRestoredBackupSetInfo;

        /// <summary>Last applied backup set information</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfo LastRestoredBackupSetInfo { get => (this._lastRestoredBackupSetInfo = this._lastRestoredBackupSetInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.BackupSetInfo()); }

        /// <summary>Date and time that the backup operation finished</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public global::System.DateTime? LastRestoredBackupSetInfoBackupFinishedDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfoInternal)LastRestoredBackupSetInfo).BackupFinishedDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfoInternal)LastRestoredBackupSetInfo).BackupFinishedDate = value ?? default(global::System.DateTime); }

        /// <summary>Id for the set of backup files</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string LastRestoredBackupSetInfoBackupSetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfoInternal)LastRestoredBackupSetInfo).BackupSetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfoInternal)LastRestoredBackupSetInfo).BackupSetId = value ?? null; }

        /// <summary>Date and time that the backup operation began</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public global::System.DateTime? LastRestoredBackupSetInfoBackupStartDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfoInternal)LastRestoredBackupSetInfo).BackupStartDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfoInternal)LastRestoredBackupSetInfo).BackupStartDate = value ?? default(global::System.DateTime); }

        /// <summary>Enum of the different backup types</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.BackupType? LastRestoredBackupSetInfoBackupType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfoInternal)LastRestoredBackupSetInfo).BackupType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfoInternal)LastRestoredBackupSetInfo).BackupType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.BackupType)""); }

        /// <summary>Name of the database to which the backup set belongs</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string LastRestoredBackupSetInfoDatabaseName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfoInternal)LastRestoredBackupSetInfo).DatabaseName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfoInternal)LastRestoredBackupSetInfo).DatabaseName = value ?? null; }

        /// <summary>First log sequence number of the backup file</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string LastRestoredBackupSetInfoFirstLsn { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfoInternal)LastRestoredBackupSetInfo).FirstLsn; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfoInternal)LastRestoredBackupSetInfo).FirstLsn = value ?? null; }

        /// <summary>Whether the backup set is restored or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public bool? LastRestoredBackupSetInfoIsBackupRestored { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfoInternal)LastRestoredBackupSetInfo).IsBackupRestored; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfoInternal)LastRestoredBackupSetInfo).IsBackupRestored = value ?? default(bool); }

        /// <summary>Last log sequence number of the backup file</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string LastRestoredBackupSetInfoLastLsn { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfoInternal)LastRestoredBackupSetInfo).LastLsn; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfoInternal)LastRestoredBackupSetInfo).LastLsn = value ?? null; }

        /// <summary>Last modified time of the backup file in share location</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public global::System.DateTime? LastRestoredBackupSetInfoLastModifiedTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfoInternal)LastRestoredBackupSetInfo).LastModifiedTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfoInternal)LastRestoredBackupSetInfo).LastModifiedTime = value ?? default(global::System.DateTime); }

        /// <summary>List of files in the backup set</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupFileInfo[] LastRestoredBackupSetInfoListOfBackupFile { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfoInternal)LastRestoredBackupSetInfo).ListOfBackupFile; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfoInternal)LastRestoredBackupSetInfo).ListOfBackupFile = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for ActiveBackupSet</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfo[] Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlMiSyncTaskOutputDatabaseLevelInternal.ActiveBackupSet { get => this._activeBackupSet; set { {_activeBackupSet = value;} } }

        /// <summary>Internal Acessors for ContainerName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlMiSyncTaskOutputDatabaseLevelInternal.ContainerName { get => this._containerName; set { {_containerName = value;} } }

        /// <summary>Internal Acessors for EndedOn</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlMiSyncTaskOutputDatabaseLevelInternal.EndedOn { get => this._endedOn; set { {_endedOn = value;} } }

        /// <summary>Internal Acessors for ErrorPrefix</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlMiSyncTaskOutputDatabaseLevelInternal.ErrorPrefix { get => this._errorPrefix; set { {_errorPrefix = value;} } }

        /// <summary>Internal Acessors for ExceptionsAndWarning</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException[] Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlMiSyncTaskOutputDatabaseLevelInternal.ExceptionsAndWarning { get => this._exceptionsAndWarning; set { {_exceptionsAndWarning = value;} } }

        /// <summary>Internal Acessors for FullBackupSetInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfo Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlMiSyncTaskOutputDatabaseLevelInternal.FullBackupSetInfo { get => (this._fullBackupSetInfo = this._fullBackupSetInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.BackupSetInfo()); set { {_fullBackupSetInfo = value;} } }

        /// <summary>Internal Acessors for IsFullBackupRestored</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlMiSyncTaskOutputDatabaseLevelInternal.IsFullBackupRestored { get => this._isFullBackupRestored; set { {_isFullBackupRestored = value;} } }

        /// <summary>Internal Acessors for LastRestoredBackupSetInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfo Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlMiSyncTaskOutputDatabaseLevelInternal.LastRestoredBackupSetInfo { get => (this._lastRestoredBackupSetInfo = this._lastRestoredBackupSetInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.BackupSetInfo()); set { {_lastRestoredBackupSetInfo = value;} } }

        /// <summary>Internal Acessors for MigrationState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.DatabaseMigrationState? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlMiSyncTaskOutputDatabaseLevelInternal.MigrationState { get => this._migrationState; set { {_migrationState = value;} } }

        /// <summary>Internal Acessors for SourceDatabaseName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlMiSyncTaskOutputDatabaseLevelInternal.SourceDatabaseName { get => this._sourceDatabaseName; set { {_sourceDatabaseName = value;} } }

        /// <summary>Internal Acessors for StartedOn</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlMiSyncTaskOutputDatabaseLevelInternal.StartedOn { get => this._startedOn; set { {_startedOn = value;} } }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlMiSyncTaskOutputInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlMiSyncTaskOutputInternal)__migrateSqlServerSqlMiSyncTaskOutput).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlMiSyncTaskOutputInternal)__migrateSqlServerSqlMiSyncTaskOutput).Id = value; }

        /// <summary>Backing field for <see cref="MigrationState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.DatabaseMigrationState? _migrationState;

        /// <summary>Current state of database</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.DatabaseMigrationState? MigrationState { get => this._migrationState; }

        /// <summary>Result type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public string ResultType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlMiSyncTaskOutputInternal)__migrateSqlServerSqlMiSyncTaskOutput).ResultType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlMiSyncTaskOutputInternal)__migrateSqlServerSqlMiSyncTaskOutput).ResultType = value ; }

        /// <summary>Backing field for <see cref="SourceDatabaseName" /> property.</summary>
        private string _sourceDatabaseName;

        /// <summary>Name of the database</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string SourceDatabaseName { get => this._sourceDatabaseName; }

        /// <summary>Backing field for <see cref="StartedOn" /> property.</summary>
        private global::System.DateTime? _startedOn;

        /// <summary>Database migration start time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public global::System.DateTime? StartedOn { get => this._startedOn; }

        /// <summary>
        /// Creates an new <see cref="MigrateSqlServerSqlMiSyncTaskOutputDatabaseLevel" /> instance.
        /// </summary>
        public MigrateSqlServerSqlMiSyncTaskOutputDatabaseLevel()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__migrateSqlServerSqlMiSyncTaskOutput), __migrateSqlServerSqlMiSyncTaskOutput);
            await eventListener.AssertObjectIsValid(nameof(__migrateSqlServerSqlMiSyncTaskOutput), __migrateSqlServerSqlMiSyncTaskOutput);
        }
    }
    public partial interface IMigrateSqlServerSqlMiSyncTaskOutputDatabaseLevel :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlMiSyncTaskOutput
    {
        /// <summary>
        /// Backup sets that are currently active (Either being uploaded or getting restored)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Backup sets that are currently active (Either being uploaded or getting restored)",
        SerializedName = @"activeBackupSets",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfo) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfo[] ActiveBackupSet { get;  }
        /// <summary>
        /// Name of container created in the Azure Storage account where backups are copied to
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Name of container created in the Azure Storage account where backups are copied to",
        SerializedName = @"containerName",
        PossibleTypes = new [] { typeof(string) })]
        string ContainerName { get;  }
        /// <summary>Database migration end time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Database migration end time",
        SerializedName = @"endedOn",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? EndedOn { get;  }
        /// <summary>prefix string to use for querying errors for this database</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"prefix string to use for querying errors for this database",
        SerializedName = @"errorPrefix",
        PossibleTypes = new [] { typeof(string) })]
        string ErrorPrefix { get;  }
        /// <summary>Migration exceptions and warnings</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Migration exceptions and warnings",
        SerializedName = @"exceptionsAndWarnings",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException[] ExceptionsAndWarning { get;  }
        /// <summary>Date and time that the backup operation finished</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Date and time that the backup operation finished",
        SerializedName = @"backupFinishedDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? FullBackupSetInfoBackupFinishedDate { get; set; }
        /// <summary>Id for the set of backup files</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Id for the set of backup files",
        SerializedName = @"backupSetId",
        PossibleTypes = new [] { typeof(string) })]
        string FullBackupSetInfoBackupSetId { get; set; }
        /// <summary>Date and time that the backup operation began</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Date and time that the backup operation began",
        SerializedName = @"backupStartDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? FullBackupSetInfoBackupStartDate { get; set; }
        /// <summary>Enum of the different backup types</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enum of the different backup types",
        SerializedName = @"backupType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.BackupType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.BackupType? FullBackupSetInfoBackupType { get; set; }
        /// <summary>Name of the database to which the backup set belongs</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the database to which the backup set belongs",
        SerializedName = @"databaseName",
        PossibleTypes = new [] { typeof(string) })]
        string FullBackupSetInfoDatabaseName { get; set; }
        /// <summary>First log sequence number of the backup file</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"First log sequence number of the backup file",
        SerializedName = @"firstLsn",
        PossibleTypes = new [] { typeof(string) })]
        string FullBackupSetInfoFirstLsn { get; set; }
        /// <summary>Whether the backup set is restored or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether the backup set is restored or not",
        SerializedName = @"isBackupRestored",
        PossibleTypes = new [] { typeof(bool) })]
        bool? FullBackupSetInfoIsBackupRestored { get; set; }
        /// <summary>Last log sequence number of the backup file</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Last log sequence number of the backup file",
        SerializedName = @"lastLsn",
        PossibleTypes = new [] { typeof(string) })]
        string FullBackupSetInfoLastLsn { get; set; }
        /// <summary>Last modified time of the backup file in share location</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Last modified time of the backup file in share location",
        SerializedName = @"lastModifiedTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? FullBackupSetInfoLastModifiedTime { get; set; }
        /// <summary>List of files in the backup set</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of files in the backup set",
        SerializedName = @"listOfBackupFiles",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupFileInfo) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupFileInfo[] FullBackupSetInfoListOfBackupFile { get; set; }
        /// <summary>Whether full backup has been applied to the target database or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Whether full backup has been applied to the target database or not",
        SerializedName = @"isFullBackupRestored",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsFullBackupRestored { get;  }
        /// <summary>Date and time that the backup operation finished</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Date and time that the backup operation finished",
        SerializedName = @"backupFinishedDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastRestoredBackupSetInfoBackupFinishedDate { get; set; }
        /// <summary>Id for the set of backup files</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Id for the set of backup files",
        SerializedName = @"backupSetId",
        PossibleTypes = new [] { typeof(string) })]
        string LastRestoredBackupSetInfoBackupSetId { get; set; }
        /// <summary>Date and time that the backup operation began</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Date and time that the backup operation began",
        SerializedName = @"backupStartDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastRestoredBackupSetInfoBackupStartDate { get; set; }
        /// <summary>Enum of the different backup types</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enum of the different backup types",
        SerializedName = @"backupType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.BackupType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.BackupType? LastRestoredBackupSetInfoBackupType { get; set; }
        /// <summary>Name of the database to which the backup set belongs</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the database to which the backup set belongs",
        SerializedName = @"databaseName",
        PossibleTypes = new [] { typeof(string) })]
        string LastRestoredBackupSetInfoDatabaseName { get; set; }
        /// <summary>First log sequence number of the backup file</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"First log sequence number of the backup file",
        SerializedName = @"firstLsn",
        PossibleTypes = new [] { typeof(string) })]
        string LastRestoredBackupSetInfoFirstLsn { get; set; }
        /// <summary>Whether the backup set is restored or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether the backup set is restored or not",
        SerializedName = @"isBackupRestored",
        PossibleTypes = new [] { typeof(bool) })]
        bool? LastRestoredBackupSetInfoIsBackupRestored { get; set; }
        /// <summary>Last log sequence number of the backup file</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Last log sequence number of the backup file",
        SerializedName = @"lastLsn",
        PossibleTypes = new [] { typeof(string) })]
        string LastRestoredBackupSetInfoLastLsn { get; set; }
        /// <summary>Last modified time of the backup file in share location</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Last modified time of the backup file in share location",
        SerializedName = @"lastModifiedTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastRestoredBackupSetInfoLastModifiedTime { get; set; }
        /// <summary>List of files in the backup set</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of files in the backup set",
        SerializedName = @"listOfBackupFiles",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupFileInfo) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupFileInfo[] LastRestoredBackupSetInfoListOfBackupFile { get; set; }
        /// <summary>Current state of database</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Current state of database",
        SerializedName = @"migrationState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.DatabaseMigrationState) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.DatabaseMigrationState? MigrationState { get;  }
        /// <summary>Name of the database</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Name of the database",
        SerializedName = @"sourceDatabaseName",
        PossibleTypes = new [] { typeof(string) })]
        string SourceDatabaseName { get;  }
        /// <summary>Database migration start time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Database migration start time",
        SerializedName = @"startedOn",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? StartedOn { get;  }

    }
    internal partial interface IMigrateSqlServerSqlMiSyncTaskOutputDatabaseLevelInternal :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlMiSyncTaskOutputInternal
    {
        /// <summary>
        /// Backup sets that are currently active (Either being uploaded or getting restored)
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfo[] ActiveBackupSet { get; set; }
        /// <summary>
        /// Name of container created in the Azure Storage account where backups are copied to
        /// </summary>
        string ContainerName { get; set; }
        /// <summary>Database migration end time</summary>
        global::System.DateTime? EndedOn { get; set; }
        /// <summary>prefix string to use for querying errors for this database</summary>
        string ErrorPrefix { get; set; }
        /// <summary>Migration exceptions and warnings</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException[] ExceptionsAndWarning { get; set; }
        /// <summary>Details of full backup set</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfo FullBackupSetInfo { get; set; }
        /// <summary>Date and time that the backup operation finished</summary>
        global::System.DateTime? FullBackupSetInfoBackupFinishedDate { get; set; }
        /// <summary>Id for the set of backup files</summary>
        string FullBackupSetInfoBackupSetId { get; set; }
        /// <summary>Date and time that the backup operation began</summary>
        global::System.DateTime? FullBackupSetInfoBackupStartDate { get; set; }
        /// <summary>Enum of the different backup types</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.BackupType? FullBackupSetInfoBackupType { get; set; }
        /// <summary>Name of the database to which the backup set belongs</summary>
        string FullBackupSetInfoDatabaseName { get; set; }
        /// <summary>First log sequence number of the backup file</summary>
        string FullBackupSetInfoFirstLsn { get; set; }
        /// <summary>Whether the backup set is restored or not</summary>
        bool? FullBackupSetInfoIsBackupRestored { get; set; }
        /// <summary>Last log sequence number of the backup file</summary>
        string FullBackupSetInfoLastLsn { get; set; }
        /// <summary>Last modified time of the backup file in share location</summary>
        global::System.DateTime? FullBackupSetInfoLastModifiedTime { get; set; }
        /// <summary>List of files in the backup set</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupFileInfo[] FullBackupSetInfoListOfBackupFile { get; set; }
        /// <summary>Whether full backup has been applied to the target database or not</summary>
        bool? IsFullBackupRestored { get; set; }
        /// <summary>Last applied backup set information</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupSetInfo LastRestoredBackupSetInfo { get; set; }
        /// <summary>Date and time that the backup operation finished</summary>
        global::System.DateTime? LastRestoredBackupSetInfoBackupFinishedDate { get; set; }
        /// <summary>Id for the set of backup files</summary>
        string LastRestoredBackupSetInfoBackupSetId { get; set; }
        /// <summary>Date and time that the backup operation began</summary>
        global::System.DateTime? LastRestoredBackupSetInfoBackupStartDate { get; set; }
        /// <summary>Enum of the different backup types</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.BackupType? LastRestoredBackupSetInfoBackupType { get; set; }
        /// <summary>Name of the database to which the backup set belongs</summary>
        string LastRestoredBackupSetInfoDatabaseName { get; set; }
        /// <summary>First log sequence number of the backup file</summary>
        string LastRestoredBackupSetInfoFirstLsn { get; set; }
        /// <summary>Whether the backup set is restored or not</summary>
        bool? LastRestoredBackupSetInfoIsBackupRestored { get; set; }
        /// <summary>Last log sequence number of the backup file</summary>
        string LastRestoredBackupSetInfoLastLsn { get; set; }
        /// <summary>Last modified time of the backup file in share location</summary>
        global::System.DateTime? LastRestoredBackupSetInfoLastModifiedTime { get; set; }
        /// <summary>List of files in the backup set</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IBackupFileInfo[] LastRestoredBackupSetInfoListOfBackupFile { get; set; }
        /// <summary>Current state of database</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.DatabaseMigrationState? MigrationState { get; set; }
        /// <summary>Name of the database</summary>
        string SourceDatabaseName { get; set; }
        /// <summary>Database migration start time</summary>
        global::System.DateTime? StartedOn { get; set; }

    }
}