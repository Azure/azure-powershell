// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Extensions;

    public partial class MigrateSqlServerSqlDbSyncTaskOutputTableLevel :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncTaskOutputTableLevel,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncTaskOutputTableLevelInternal,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncTaskOutput"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncTaskOutput __migrateSqlServerSqlDbSyncTaskOutput = new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.MigrateSqlServerSqlDbSyncTaskOutput();

        /// <summary>Backing field for <see cref="CdcDeleteCounter" /> property.</summary>
        private long? _cdcDeleteCounter;

        /// <summary>Number of applied deletes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public long? CdcDeleteCounter { get => this._cdcDeleteCounter; }

        /// <summary>Backing field for <see cref="CdcInsertCounter" /> property.</summary>
        private long? _cdcInsertCounter;

        /// <summary>Number of applied inserts</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public long? CdcInsertCounter { get => this._cdcInsertCounter; }

        /// <summary>Backing field for <see cref="CdcUpdateCounter" /> property.</summary>
        private long? _cdcUpdateCounter;

        /// <summary>Number of applied updates</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public long? CdcUpdateCounter { get => this._cdcUpdateCounter; }

        /// <summary>Backing field for <see cref="DataErrorsCounter" /> property.</summary>
        private long? _dataErrorsCounter;

        /// <summary>Number of data errors occurred</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public long? DataErrorsCounter { get => this._dataErrorsCounter; }

        /// <summary>Backing field for <see cref="DatabaseName" /> property.</summary>
        private string _databaseName;

        /// <summary>Name of the database</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string DatabaseName { get => this._databaseName; }

        /// <summary>Backing field for <see cref="FullLoadEndedOn" /> property.</summary>
        private global::System.DateTime? _fullLoadEndedOn;

        /// <summary>Full load end time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public global::System.DateTime? FullLoadEndedOn { get => this._fullLoadEndedOn; }

        /// <summary>Backing field for <see cref="FullLoadEstFinishTime" /> property.</summary>
        private global::System.DateTime? _fullLoadEstFinishTime;

        /// <summary>Estimate to finish full load</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public global::System.DateTime? FullLoadEstFinishTime { get => this._fullLoadEstFinishTime; }

        /// <summary>Backing field for <see cref="FullLoadStartedOn" /> property.</summary>
        private global::System.DateTime? _fullLoadStartedOn;

        /// <summary>Full load start time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public global::System.DateTime? FullLoadStartedOn { get => this._fullLoadStartedOn; }

        /// <summary>Backing field for <see cref="FullLoadTotalRow" /> property.</summary>
        private long? _fullLoadTotalRow;

        /// <summary>Number of rows applied in full load</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public long? FullLoadTotalRow { get => this._fullLoadTotalRow; }

        /// <summary>Result identifier</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncTaskOutputInternal)__migrateSqlServerSqlDbSyncTaskOutput).Id; }

        /// <summary>Backing field for <see cref="LastModifiedTime" /> property.</summary>
        private global::System.DateTime? _lastModifiedTime;

        /// <summary>Last modified time on target</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public global::System.DateTime? LastModifiedTime { get => this._lastModifiedTime; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncTaskOutputInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncTaskOutputInternal)__migrateSqlServerSqlDbSyncTaskOutput).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncTaskOutputInternal)__migrateSqlServerSqlDbSyncTaskOutput).Id = value; }

        /// <summary>Internal Acessors for CdcDeleteCounter</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncTaskOutputTableLevelInternal.CdcDeleteCounter { get => this._cdcDeleteCounter; set { {_cdcDeleteCounter = value;} } }

        /// <summary>Internal Acessors for CdcInsertCounter</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncTaskOutputTableLevelInternal.CdcInsertCounter { get => this._cdcInsertCounter; set { {_cdcInsertCounter = value;} } }

        /// <summary>Internal Acessors for CdcUpdateCounter</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncTaskOutputTableLevelInternal.CdcUpdateCounter { get => this._cdcUpdateCounter; set { {_cdcUpdateCounter = value;} } }

        /// <summary>Internal Acessors for DataErrorsCounter</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncTaskOutputTableLevelInternal.DataErrorsCounter { get => this._dataErrorsCounter; set { {_dataErrorsCounter = value;} } }

        /// <summary>Internal Acessors for DatabaseName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncTaskOutputTableLevelInternal.DatabaseName { get => this._databaseName; set { {_databaseName = value;} } }

        /// <summary>Internal Acessors for FullLoadEndedOn</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncTaskOutputTableLevelInternal.FullLoadEndedOn { get => this._fullLoadEndedOn; set { {_fullLoadEndedOn = value;} } }

        /// <summary>Internal Acessors for FullLoadEstFinishTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncTaskOutputTableLevelInternal.FullLoadEstFinishTime { get => this._fullLoadEstFinishTime; set { {_fullLoadEstFinishTime = value;} } }

        /// <summary>Internal Acessors for FullLoadStartedOn</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncTaskOutputTableLevelInternal.FullLoadStartedOn { get => this._fullLoadStartedOn; set { {_fullLoadStartedOn = value;} } }

        /// <summary>Internal Acessors for FullLoadTotalRow</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncTaskOutputTableLevelInternal.FullLoadTotalRow { get => this._fullLoadTotalRow; set { {_fullLoadTotalRow = value;} } }

        /// <summary>Internal Acessors for LastModifiedTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncTaskOutputTableLevelInternal.LastModifiedTime { get => this._lastModifiedTime; set { {_lastModifiedTime = value;} } }

        /// <summary>Internal Acessors for State</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.SyncTableMigrationState? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncTaskOutputTableLevelInternal.State { get => this._state; set { {_state = value;} } }

        /// <summary>Internal Acessors for TableName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncTaskOutputTableLevelInternal.TableName { get => this._tableName; set { {_tableName = value;} } }

        /// <summary>Internal Acessors for TotalChangesApplied</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncTaskOutputTableLevelInternal.TotalChangesApplied { get => this._totalChangesApplied; set { {_totalChangesApplied = value;} } }

        /// <summary>Result type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public string ResultType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncTaskOutputInternal)__migrateSqlServerSqlDbSyncTaskOutput).ResultType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncTaskOutputInternal)__migrateSqlServerSqlDbSyncTaskOutput).ResultType = value ; }

        /// <summary>Backing field for <see cref="State" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.SyncTableMigrationState? _state;

        /// <summary>Current state of the table migration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.SyncTableMigrationState? State { get => this._state; }

        /// <summary>Backing field for <see cref="TableName" /> property.</summary>
        private string _tableName;

        /// <summary>Name of the table</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string TableName { get => this._tableName; }

        /// <summary>Backing field for <see cref="TotalChangesApplied" /> property.</summary>
        private long? _totalChangesApplied;

        /// <summary>Total number of applied changes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public long? TotalChangesApplied { get => this._totalChangesApplied; }

        /// <summary>
        /// Creates an new <see cref="MigrateSqlServerSqlDbSyncTaskOutputTableLevel" /> instance.
        /// </summary>
        public MigrateSqlServerSqlDbSyncTaskOutputTableLevel()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__migrateSqlServerSqlDbSyncTaskOutput), __migrateSqlServerSqlDbSyncTaskOutput);
            await eventListener.AssertObjectIsValid(nameof(__migrateSqlServerSqlDbSyncTaskOutput), __migrateSqlServerSqlDbSyncTaskOutput);
        }
    }
    public partial interface IMigrateSqlServerSqlDbSyncTaskOutputTableLevel :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncTaskOutput
    {
        /// <summary>Number of applied deletes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Number of applied deletes",
        SerializedName = @"cdcDeleteCounter",
        PossibleTypes = new [] { typeof(long) })]
        long? CdcDeleteCounter { get;  }
        /// <summary>Number of applied inserts</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Number of applied inserts",
        SerializedName = @"cdcInsertCounter",
        PossibleTypes = new [] { typeof(long) })]
        long? CdcInsertCounter { get;  }
        /// <summary>Number of applied updates</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Number of applied updates",
        SerializedName = @"cdcUpdateCounter",
        PossibleTypes = new [] { typeof(long) })]
        long? CdcUpdateCounter { get;  }
        /// <summary>Number of data errors occurred</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Number of data errors occurred",
        SerializedName = @"dataErrorsCounter",
        PossibleTypes = new [] { typeof(long) })]
        long? DataErrorsCounter { get;  }
        /// <summary>Name of the database</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Name of the database",
        SerializedName = @"databaseName",
        PossibleTypes = new [] { typeof(string) })]
        string DatabaseName { get;  }
        /// <summary>Full load end time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Full load end time",
        SerializedName = @"fullLoadEndedOn",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? FullLoadEndedOn { get;  }
        /// <summary>Estimate to finish full load</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Estimate to finish full load",
        SerializedName = @"fullLoadEstFinishTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? FullLoadEstFinishTime { get;  }
        /// <summary>Full load start time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Full load start time",
        SerializedName = @"fullLoadStartedOn",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? FullLoadStartedOn { get;  }
        /// <summary>Number of rows applied in full load</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Number of rows applied in full load",
        SerializedName = @"fullLoadTotalRows",
        PossibleTypes = new [] { typeof(long) })]
        long? FullLoadTotalRow { get;  }
        /// <summary>Last modified time on target</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Last modified time on target",
        SerializedName = @"lastModifiedTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastModifiedTime { get;  }
        /// <summary>Current state of the table migration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Current state of the table migration",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.SyncTableMigrationState) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.SyncTableMigrationState? State { get;  }
        /// <summary>Name of the table</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Name of the table",
        SerializedName = @"tableName",
        PossibleTypes = new [] { typeof(string) })]
        string TableName { get;  }
        /// <summary>Total number of applied changes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Total number of applied changes",
        SerializedName = @"totalChangesApplied",
        PossibleTypes = new [] { typeof(long) })]
        long? TotalChangesApplied { get;  }

    }
    internal partial interface IMigrateSqlServerSqlDbSyncTaskOutputTableLevelInternal :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncTaskOutputInternal
    {
        /// <summary>Number of applied deletes</summary>
        long? CdcDeleteCounter { get; set; }
        /// <summary>Number of applied inserts</summary>
        long? CdcInsertCounter { get; set; }
        /// <summary>Number of applied updates</summary>
        long? CdcUpdateCounter { get; set; }
        /// <summary>Number of data errors occurred</summary>
        long? DataErrorsCounter { get; set; }
        /// <summary>Name of the database</summary>
        string DatabaseName { get; set; }
        /// <summary>Full load end time</summary>
        global::System.DateTime? FullLoadEndedOn { get; set; }
        /// <summary>Estimate to finish full load</summary>
        global::System.DateTime? FullLoadEstFinishTime { get; set; }
        /// <summary>Full load start time</summary>
        global::System.DateTime? FullLoadStartedOn { get; set; }
        /// <summary>Number of rows applied in full load</summary>
        long? FullLoadTotalRow { get; set; }
        /// <summary>Last modified time on target</summary>
        global::System.DateTime? LastModifiedTime { get; set; }
        /// <summary>Current state of the table migration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.SyncTableMigrationState? State { get; set; }
        /// <summary>Name of the table</summary>
        string TableName { get; set; }
        /// <summary>Total number of applied changes</summary>
        long? TotalChangesApplied { get; set; }

    }
}