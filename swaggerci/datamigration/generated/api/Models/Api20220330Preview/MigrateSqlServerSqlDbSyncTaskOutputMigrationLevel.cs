// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Extensions;

    public partial class MigrateSqlServerSqlDbSyncTaskOutputMigrationLevel :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncTaskOutputMigrationLevel,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInternal,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncTaskOutput"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncTaskOutput __migrateSqlServerSqlDbSyncTaskOutput = new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.MigrateSqlServerSqlDbSyncTaskOutput();

        /// <summary>Backing field for <see cref="DatabaseCount" /> property.</summary>
        private int? _databaseCount;

        /// <summary>Count of databases</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public int? DatabaseCount { get => this._databaseCount; }

        /// <summary>Backing field for <see cref="EndedOn" /> property.</summary>
        private global::System.DateTime? _endedOn;

        /// <summary>Migration end time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public global::System.DateTime? EndedOn { get => this._endedOn; }

        /// <summary>Result identifier</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncTaskOutputInternal)__migrateSqlServerSqlDbSyncTaskOutput).Id; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncTaskOutputInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncTaskOutputInternal)__migrateSqlServerSqlDbSyncTaskOutput).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncTaskOutputInternal)__migrateSqlServerSqlDbSyncTaskOutput).Id = value; }

        /// <summary>Internal Acessors for DatabaseCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInternal.DatabaseCount { get => this._databaseCount; set { {_databaseCount = value;} } }

        /// <summary>Internal Acessors for EndedOn</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInternal.EndedOn { get => this._endedOn; set { {_endedOn = value;} } }

        /// <summary>Internal Acessors for SourceServer</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInternal.SourceServer { get => this._sourceServer; set { {_sourceServer = value;} } }

        /// <summary>Internal Acessors for SourceServerVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInternal.SourceServerVersion { get => this._sourceServerVersion; set { {_sourceServerVersion = value;} } }

        /// <summary>Internal Acessors for StartedOn</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInternal.StartedOn { get => this._startedOn; set { {_startedOn = value;} } }

        /// <summary>Internal Acessors for TargetServer</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInternal.TargetServer { get => this._targetServer; set { {_targetServer = value;} } }

        /// <summary>Internal Acessors for TargetServerVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInternal.TargetServerVersion { get => this._targetServerVersion; set { {_targetServerVersion = value;} } }

        /// <summary>Result type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public string ResultType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncTaskOutputInternal)__migrateSqlServerSqlDbSyncTaskOutput).ResultType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncTaskOutputInternal)__migrateSqlServerSqlDbSyncTaskOutput).ResultType = value ; }

        /// <summary>Backing field for <see cref="SourceServer" /> property.</summary>
        private string _sourceServer;

        /// <summary>Source server name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string SourceServer { get => this._sourceServer; }

        /// <summary>Backing field for <see cref="SourceServerVersion" /> property.</summary>
        private string _sourceServerVersion;

        /// <summary>Source server version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string SourceServerVersion { get => this._sourceServerVersion; }

        /// <summary>Backing field for <see cref="StartedOn" /> property.</summary>
        private global::System.DateTime? _startedOn;

        /// <summary>Migration start time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public global::System.DateTime? StartedOn { get => this._startedOn; }

        /// <summary>Backing field for <see cref="TargetServer" /> property.</summary>
        private string _targetServer;

        /// <summary>Target server name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string TargetServer { get => this._targetServer; }

        /// <summary>Backing field for <see cref="TargetServerVersion" /> property.</summary>
        private string _targetServerVersion;

        /// <summary>Target server version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string TargetServerVersion { get => this._targetServerVersion; }

        /// <summary>
        /// Creates an new <see cref="MigrateSqlServerSqlDbSyncTaskOutputMigrationLevel" /> instance.
        /// </summary>
        public MigrateSqlServerSqlDbSyncTaskOutputMigrationLevel()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__migrateSqlServerSqlDbSyncTaskOutput), __migrateSqlServerSqlDbSyncTaskOutput);
            await eventListener.AssertObjectIsValid(nameof(__migrateSqlServerSqlDbSyncTaskOutput), __migrateSqlServerSqlDbSyncTaskOutput);
        }
    }
    public partial interface IMigrateSqlServerSqlDbSyncTaskOutputMigrationLevel :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncTaskOutput
    {
        /// <summary>Count of databases</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Count of databases",
        SerializedName = @"databaseCount",
        PossibleTypes = new [] { typeof(int) })]
        int? DatabaseCount { get;  }
        /// <summary>Migration end time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Migration end time",
        SerializedName = @"endedOn",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? EndedOn { get;  }
        /// <summary>Source server name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Source server name",
        SerializedName = @"sourceServer",
        PossibleTypes = new [] { typeof(string) })]
        string SourceServer { get;  }
        /// <summary>Source server version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Source server version",
        SerializedName = @"sourceServerVersion",
        PossibleTypes = new [] { typeof(string) })]
        string SourceServerVersion { get;  }
        /// <summary>Migration start time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Migration start time",
        SerializedName = @"startedOn",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? StartedOn { get;  }
        /// <summary>Target server name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Target server name",
        SerializedName = @"targetServer",
        PossibleTypes = new [] { typeof(string) })]
        string TargetServer { get;  }
        /// <summary>Target server version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Target server version",
        SerializedName = @"targetServerVersion",
        PossibleTypes = new [] { typeof(string) })]
        string TargetServerVersion { get;  }

    }
    internal partial interface IMigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInternal :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncTaskOutputInternal
    {
        /// <summary>Count of databases</summary>
        int? DatabaseCount { get; set; }
        /// <summary>Migration end time</summary>
        global::System.DateTime? EndedOn { get; set; }
        /// <summary>Source server name</summary>
        string SourceServer { get; set; }
        /// <summary>Source server version</summary>
        string SourceServerVersion { get; set; }
        /// <summary>Migration start time</summary>
        global::System.DateTime? StartedOn { get; set; }
        /// <summary>Target server name</summary>
        string TargetServer { get; set; }
        /// <summary>Target server version</summary>
        string TargetServerVersion { get; set; }

    }
}