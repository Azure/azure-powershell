// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Extensions;

    /// <summary>Output of the task that collects user tables for the given list of databases</summary>
    public partial class GetUserTablesSqlTaskOutput :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetUserTablesSqlTaskOutput,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetUserTablesSqlTaskOutputInternal
    {

        /// <summary>Backing field for <see cref="DatabasesToTable" /> property.</summary>
        private string _databasesToTable;

        /// <summary>Mapping from database name to list of tables</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string DatabasesToTable { get => this._databasesToTable; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>Result identifier</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string Id { get => this._id; }

        /// <summary>Internal Acessors for DatabasesToTable</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetUserTablesSqlTaskOutputInternal.DatabasesToTable { get => this._databasesToTable; set { {_databasesToTable = value;} } }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetUserTablesSqlTaskOutputInternal.Id { get => this._id; set { {_id = value;} } }

        /// <summary>Internal Acessors for ValidationError</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException[] Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetUserTablesSqlTaskOutputInternal.ValidationError { get => this._validationError; set { {_validationError = value;} } }

        /// <summary>Backing field for <see cref="ValidationError" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException[] _validationError;

        /// <summary>Validation errors</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException[] ValidationError { get => this._validationError; }

        /// <summary>Creates an new <see cref="GetUserTablesSqlTaskOutput" /> instance.</summary>
        public GetUserTablesSqlTaskOutput()
        {

        }
    }
    /// Output of the task that collects user tables for the given list of databases
    public partial interface IGetUserTablesSqlTaskOutput :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IJsonSerializable
    {
        /// <summary>Mapping from database name to list of tables</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Mapping from database name to list of tables",
        SerializedName = @"databasesToTables",
        PossibleTypes = new [] { typeof(string) })]
        string DatabasesToTable { get;  }
        /// <summary>Result identifier</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Result identifier",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get;  }
        /// <summary>Validation errors</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Validation errors",
        SerializedName = @"validationErrors",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException[] ValidationError { get;  }

    }
    /// Output of the task that collects user tables for the given list of databases
    internal partial interface IGetUserTablesSqlTaskOutputInternal

    {
        /// <summary>Mapping from database name to list of tables</summary>
        string DatabasesToTable { get; set; }
        /// <summary>Result identifier</summary>
        string Id { get; set; }
        /// <summary>Validation errors</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException[] ValidationError { get; set; }

    }
}