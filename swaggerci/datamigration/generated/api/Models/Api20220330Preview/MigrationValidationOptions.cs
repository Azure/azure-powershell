// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Extensions;

    /// <summary>Types of validations to run after the migration</summary>
    public partial class MigrationValidationOptions :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrationValidationOptions,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrationValidationOptionsInternal
    {

        /// <summary>Backing field for <see cref="EnableDataIntegrityValidation" /> property.</summary>
        private bool? _enableDataIntegrityValidation;

        /// <summary>
        /// Allows to perform a checksum based data integrity validation between source and target for the selected database / tables
        /// .
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public bool? EnableDataIntegrityValidation { get => this._enableDataIntegrityValidation; set => this._enableDataIntegrityValidation = value; }

        /// <summary>Backing field for <see cref="EnableQueryAnalysisValidation" /> property.</summary>
        private bool? _enableQueryAnalysisValidation;

        /// <summary>
        /// Allows to perform a quick and intelligent query analysis by retrieving queries from the source database and executes them
        /// in the target. The result will have execution statistics for executions in source and target databases for the extracted
        /// queries.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public bool? EnableQueryAnalysisValidation { get => this._enableQueryAnalysisValidation; set => this._enableQueryAnalysisValidation = value; }

        /// <summary>Backing field for <see cref="EnableSchemaValidation" /> property.</summary>
        private bool? _enableSchemaValidation;

        /// <summary>Allows to compare the schema information between source and target.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public bool? EnableSchemaValidation { get => this._enableSchemaValidation; set => this._enableSchemaValidation = value; }

        /// <summary>Creates an new <see cref="MigrationValidationOptions" /> instance.</summary>
        public MigrationValidationOptions()
        {

        }
    }
    /// Types of validations to run after the migration
    public partial interface IMigrationValidationOptions :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Allows to perform a checksum based data integrity validation between source and target for the selected database / tables
        /// .
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Allows to perform a checksum based data integrity validation between source and target for the selected database / tables .",
        SerializedName = @"enableDataIntegrityValidation",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableDataIntegrityValidation { get; set; }
        /// <summary>
        /// Allows to perform a quick and intelligent query analysis by retrieving queries from the source database and executes them
        /// in the target. The result will have execution statistics for executions in source and target databases for the extracted
        /// queries.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Allows to perform a quick and intelligent query analysis by retrieving queries from the source database and executes them in the target. The result will have execution statistics for executions in source and target databases for the extracted queries.",
        SerializedName = @"enableQueryAnalysisValidation",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableQueryAnalysisValidation { get; set; }
        /// <summary>Allows to compare the schema information between source and target.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Allows to compare the schema information between source and target.",
        SerializedName = @"enableSchemaValidation",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableSchemaValidation { get; set; }

    }
    /// Types of validations to run after the migration
    internal partial interface IMigrationValidationOptionsInternal

    {
        /// <summary>
        /// Allows to perform a checksum based data integrity validation between source and target for the selected database / tables
        /// .
        /// </summary>
        bool? EnableDataIntegrityValidation { get; set; }
        /// <summary>
        /// Allows to perform a quick and intelligent query analysis by retrieving queries from the source database and executes them
        /// in the target. The result will have execution statistics for executions in source and target databases for the extracted
        /// queries.
        /// </summary>
        bool? EnableQueryAnalysisValidation { get; set; }
        /// <summary>Allows to compare the schema information between source and target.</summary>
        bool? EnableSchemaValidation { get; set; }

    }
}