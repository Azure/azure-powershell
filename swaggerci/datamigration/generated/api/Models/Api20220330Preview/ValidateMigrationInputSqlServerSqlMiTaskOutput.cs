// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Extensions;

    /// <summary>
    /// Output for task that validates migration input for SQL to Azure SQL Managed Instance migrations
    /// </summary>
    public partial class ValidateMigrationInputSqlServerSqlMiTaskOutput :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IValidateMigrationInputSqlServerSqlMiTaskOutput,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IValidateMigrationInputSqlServerSqlMiTaskOutputInternal
    {

        /// <summary>Backing field for <see cref="BackupFolderError" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException[] _backupFolderError;

        /// <summary>Errors associated with the BackupFolder path</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException[] BackupFolderError { get => this._backupFolderError; }

        /// <summary>Backing field for <see cref="BackupShareCredentialsError" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException[] _backupShareCredentialsError;

        /// <summary>Errors associated with backup share user name and password credentials</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException[] BackupShareCredentialsError { get => this._backupShareCredentialsError; }

        /// <summary>Backing field for <see cref="BackupStorageAccountError" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException[] _backupStorageAccountError;

        /// <summary>Errors associated with the storage account provided.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException[] BackupStorageAccountError { get => this._backupStorageAccountError; }

        /// <summary>Backing field for <see cref="DatabaseBackupInfo" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseBackupInfo _databaseBackupInfo;

        /// <summary>Information about backup files when existing backup mode is used.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseBackupInfo DatabaseBackupInfo { get => (this._databaseBackupInfo = this._databaseBackupInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.DatabaseBackupInfo()); set => this._databaseBackupInfo = value; }

        /// <summary>The list of backup files for the current database.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string[] DatabaseBackupInfoBackupFile { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseBackupInfoInternal)DatabaseBackupInfo).BackupFile; }

        /// <summary>Date and time when the backup operation finished.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public global::System.DateTime? DatabaseBackupInfoBackupFinishDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseBackupInfoInternal)DatabaseBackupInfo).BackupFinishDate; }

        /// <summary>Backup Type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.BackupType? DatabaseBackupInfoBackupType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseBackupInfoInternal)DatabaseBackupInfo).BackupType; }

        /// <summary>Database name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string DatabaseBackupInfoDatabaseName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseBackupInfoInternal)DatabaseBackupInfo).DatabaseName; }

        /// <summary>Number of files in the backup set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public int? DatabaseBackupInfoFamilyCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseBackupInfoInternal)DatabaseBackupInfo).FamilyCount; }

        /// <summary>Whether the backup set is compressed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public bool? DatabaseBackupInfoIsCompressed { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseBackupInfoInternal)DatabaseBackupInfo).IsCompressed; }

        /// <summary>
        /// Database was damaged when backed up, but the backup operation was requested to continue despite errors.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public bool? DatabaseBackupInfoIsDamaged { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseBackupInfoInternal)DatabaseBackupInfo).IsDamaged; }

        /// <summary>Position of current database backup in the file.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public int? DatabaseBackupInfoPosition { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseBackupInfoInternal)DatabaseBackupInfo).Position; }

        /// <summary>Backing field for <see cref="ExistingBackupError" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException[] _existingBackupError;

        /// <summary>Errors associated with existing backup files.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException[] ExistingBackupError { get => this._existingBackupError; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>Result identifier</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string Id { get => this._id; }

        /// <summary>Internal Acessors for BackupFolderError</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException[] Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IValidateMigrationInputSqlServerSqlMiTaskOutputInternal.BackupFolderError { get => this._backupFolderError; set { {_backupFolderError = value;} } }

        /// <summary>Internal Acessors for BackupShareCredentialsError</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException[] Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IValidateMigrationInputSqlServerSqlMiTaskOutputInternal.BackupShareCredentialsError { get => this._backupShareCredentialsError; set { {_backupShareCredentialsError = value;} } }

        /// <summary>Internal Acessors for BackupStorageAccountError</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException[] Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IValidateMigrationInputSqlServerSqlMiTaskOutputInternal.BackupStorageAccountError { get => this._backupStorageAccountError; set { {_backupStorageAccountError = value;} } }

        /// <summary>Internal Acessors for DatabaseBackupInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseBackupInfo Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IValidateMigrationInputSqlServerSqlMiTaskOutputInternal.DatabaseBackupInfo { get => (this._databaseBackupInfo = this._databaseBackupInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.DatabaseBackupInfo()); set { {_databaseBackupInfo = value;} } }

        /// <summary>Internal Acessors for DatabaseBackupInfoBackupFile</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IValidateMigrationInputSqlServerSqlMiTaskOutputInternal.DatabaseBackupInfoBackupFile { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseBackupInfoInternal)DatabaseBackupInfo).BackupFile; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseBackupInfoInternal)DatabaseBackupInfo).BackupFile = value; }

        /// <summary>Internal Acessors for DatabaseBackupInfoBackupFinishDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IValidateMigrationInputSqlServerSqlMiTaskOutputInternal.DatabaseBackupInfoBackupFinishDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseBackupInfoInternal)DatabaseBackupInfo).BackupFinishDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseBackupInfoInternal)DatabaseBackupInfo).BackupFinishDate = value; }

        /// <summary>Internal Acessors for DatabaseBackupInfoBackupType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.BackupType? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IValidateMigrationInputSqlServerSqlMiTaskOutputInternal.DatabaseBackupInfoBackupType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseBackupInfoInternal)DatabaseBackupInfo).BackupType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseBackupInfoInternal)DatabaseBackupInfo).BackupType = value; }

        /// <summary>Internal Acessors for DatabaseBackupInfoDatabaseName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IValidateMigrationInputSqlServerSqlMiTaskOutputInternal.DatabaseBackupInfoDatabaseName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseBackupInfoInternal)DatabaseBackupInfo).DatabaseName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseBackupInfoInternal)DatabaseBackupInfo).DatabaseName = value; }

        /// <summary>Internal Acessors for DatabaseBackupInfoFamilyCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IValidateMigrationInputSqlServerSqlMiTaskOutputInternal.DatabaseBackupInfoFamilyCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseBackupInfoInternal)DatabaseBackupInfo).FamilyCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseBackupInfoInternal)DatabaseBackupInfo).FamilyCount = value; }

        /// <summary>Internal Acessors for DatabaseBackupInfoIsCompressed</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IValidateMigrationInputSqlServerSqlMiTaskOutputInternal.DatabaseBackupInfoIsCompressed { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseBackupInfoInternal)DatabaseBackupInfo).IsCompressed; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseBackupInfoInternal)DatabaseBackupInfo).IsCompressed = value; }

        /// <summary>Internal Acessors for DatabaseBackupInfoIsDamaged</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IValidateMigrationInputSqlServerSqlMiTaskOutputInternal.DatabaseBackupInfoIsDamaged { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseBackupInfoInternal)DatabaseBackupInfo).IsDamaged; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseBackupInfoInternal)DatabaseBackupInfo).IsDamaged = value; }

        /// <summary>Internal Acessors for DatabaseBackupInfoPosition</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IValidateMigrationInputSqlServerSqlMiTaskOutputInternal.DatabaseBackupInfoPosition { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseBackupInfoInternal)DatabaseBackupInfo).Position; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseBackupInfoInternal)DatabaseBackupInfo).Position = value; }

        /// <summary>Internal Acessors for ExistingBackupError</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException[] Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IValidateMigrationInputSqlServerSqlMiTaskOutputInternal.ExistingBackupError { get => this._existingBackupError; set { {_existingBackupError = value;} } }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IValidateMigrationInputSqlServerSqlMiTaskOutputInternal.Id { get => this._id; set { {_id = value;} } }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IValidateMigrationInputSqlServerSqlMiTaskOutputInternal.Name { get => this._name; set { {_name = value;} } }

        /// <summary>Internal Acessors for RestoreDatabaseNameError</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException[] Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IValidateMigrationInputSqlServerSqlMiTaskOutputInternal.RestoreDatabaseNameError { get => this._restoreDatabaseNameError; set { {_restoreDatabaseNameError = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Name of database</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string Name { get => this._name; }

        /// <summary>Backing field for <see cref="RestoreDatabaseNameError" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException[] _restoreDatabaseNameError;

        /// <summary>Errors associated with the RestoreDatabaseName</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException[] RestoreDatabaseNameError { get => this._restoreDatabaseNameError; }

        /// <summary>
        /// Creates an new <see cref="ValidateMigrationInputSqlServerSqlMiTaskOutput" /> instance.
        /// </summary>
        public ValidateMigrationInputSqlServerSqlMiTaskOutput()
        {

        }
    }
    /// Output for task that validates migration input for SQL to Azure SQL Managed Instance migrations
    public partial interface IValidateMigrationInputSqlServerSqlMiTaskOutput :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IJsonSerializable
    {
        /// <summary>Errors associated with the BackupFolder path</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Errors associated with the BackupFolder path",
        SerializedName = @"backupFolderErrors",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException[] BackupFolderError { get;  }
        /// <summary>Errors associated with backup share user name and password credentials</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Errors associated with backup share user name and password credentials",
        SerializedName = @"backupShareCredentialsErrors",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException[] BackupShareCredentialsError { get;  }
        /// <summary>Errors associated with the storage account provided.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Errors associated with the storage account provided.",
        SerializedName = @"backupStorageAccountErrors",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException[] BackupStorageAccountError { get;  }
        /// <summary>The list of backup files for the current database.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of backup files for the current database.",
        SerializedName = @"backupFiles",
        PossibleTypes = new [] { typeof(string) })]
        string[] DatabaseBackupInfoBackupFile { get;  }
        /// <summary>Date and time when the backup operation finished.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Date and time when the backup operation finished.",
        SerializedName = @"backupFinishDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? DatabaseBackupInfoBackupFinishDate { get;  }
        /// <summary>Backup Type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Backup Type.",
        SerializedName = @"backupType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.BackupType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.BackupType? DatabaseBackupInfoBackupType { get;  }
        /// <summary>Database name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Database name.",
        SerializedName = @"databaseName",
        PossibleTypes = new [] { typeof(string) })]
        string DatabaseBackupInfoDatabaseName { get;  }
        /// <summary>Number of files in the backup set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Number of files in the backup set.",
        SerializedName = @"familyCount",
        PossibleTypes = new [] { typeof(int) })]
        int? DatabaseBackupInfoFamilyCount { get;  }
        /// <summary>Whether the backup set is compressed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Whether the backup set is compressed",
        SerializedName = @"isCompressed",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DatabaseBackupInfoIsCompressed { get;  }
        /// <summary>
        /// Database was damaged when backed up, but the backup operation was requested to continue despite errors.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Database was damaged when backed up, but the backup operation was requested to continue despite errors.",
        SerializedName = @"isDamaged",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DatabaseBackupInfoIsDamaged { get;  }
        /// <summary>Position of current database backup in the file.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Position of current database backup in the file.",
        SerializedName = @"position",
        PossibleTypes = new [] { typeof(int) })]
        int? DatabaseBackupInfoPosition { get;  }
        /// <summary>Errors associated with existing backup files.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Errors associated with existing backup files.",
        SerializedName = @"existingBackupErrors",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException[] ExistingBackupError { get;  }
        /// <summary>Result identifier</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Result identifier",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get;  }
        /// <summary>Name of database</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Name of database",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get;  }
        /// <summary>Errors associated with the RestoreDatabaseName</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Errors associated with the RestoreDatabaseName",
        SerializedName = @"restoreDatabaseNameErrors",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException[] RestoreDatabaseNameError { get;  }

    }
    /// Output for task that validates migration input for SQL to Azure SQL Managed Instance migrations
    internal partial interface IValidateMigrationInputSqlServerSqlMiTaskOutputInternal

    {
        /// <summary>Errors associated with the BackupFolder path</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException[] BackupFolderError { get; set; }
        /// <summary>Errors associated with backup share user name and password credentials</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException[] BackupShareCredentialsError { get; set; }
        /// <summary>Errors associated with the storage account provided.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException[] BackupStorageAccountError { get; set; }
        /// <summary>Information about backup files when existing backup mode is used.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseBackupInfo DatabaseBackupInfo { get; set; }
        /// <summary>The list of backup files for the current database.</summary>
        string[] DatabaseBackupInfoBackupFile { get; set; }
        /// <summary>Date and time when the backup operation finished.</summary>
        global::System.DateTime? DatabaseBackupInfoBackupFinishDate { get; set; }
        /// <summary>Backup Type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.BackupType? DatabaseBackupInfoBackupType { get; set; }
        /// <summary>Database name.</summary>
        string DatabaseBackupInfoDatabaseName { get; set; }
        /// <summary>Number of files in the backup set.</summary>
        int? DatabaseBackupInfoFamilyCount { get; set; }
        /// <summary>Whether the backup set is compressed</summary>
        bool? DatabaseBackupInfoIsCompressed { get; set; }
        /// <summary>
        /// Database was damaged when backed up, but the backup operation was requested to continue despite errors.
        /// </summary>
        bool? DatabaseBackupInfoIsDamaged { get; set; }
        /// <summary>Position of current database backup in the file.</summary>
        int? DatabaseBackupInfoPosition { get; set; }
        /// <summary>Errors associated with existing backup files.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException[] ExistingBackupError { get; set; }
        /// <summary>Result identifier</summary>
        string Id { get; set; }
        /// <summary>Name of database</summary>
        string Name { get; set; }
        /// <summary>Errors associated with the RestoreDatabaseName</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException[] RestoreDatabaseNameError { get; set; }

    }
}