// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Extensions;

    /// <summary>Database input for migrate schema Sql Server to Azure SQL Server scenario</summary>
    public partial class MigrateSchemaSqlServerSqlDbDatabaseInput :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSchemaSqlServerSqlDbDatabaseInput,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSchemaSqlServerSqlDbDatabaseInputInternal
    {

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>Id of the source database</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string Id { get => this._id; set => this._id = value; }

        /// <summary>Internal Acessors for SchemaSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISchemaMigrationSetting Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSchemaSqlServerSqlDbDatabaseInputInternal.SchemaSetting { get => (this._schemaSetting = this._schemaSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.SchemaMigrationSetting()); set { {_schemaSetting = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Name of source database</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="SchemaSetting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISchemaMigrationSetting _schemaSetting;

        /// <summary>Database schema migration settings</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISchemaMigrationSetting SchemaSetting { get => (this._schemaSetting = this._schemaSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.SchemaMigrationSetting()); set => this._schemaSetting = value; }

        /// <summary>Resource Identifier of a file resource containing the uploaded schema file</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string SchemaSettingFileId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISchemaMigrationSettingInternal)SchemaSetting).FileId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISchemaMigrationSettingInternal)SchemaSetting).FileId = value ?? null; }

        /// <summary>Name of the file resource containing the uploaded schema file</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string SchemaSettingFileName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISchemaMigrationSettingInternal)SchemaSetting).FileName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISchemaMigrationSettingInternal)SchemaSetting).FileName = value ?? null; }

        /// <summary>Option on how to migrate the schema</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.SchemaMigrationOption? SchemaSettingSchemaOption { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISchemaMigrationSettingInternal)SchemaSetting).SchemaOption; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISchemaMigrationSettingInternal)SchemaSetting).SchemaOption = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.SchemaMigrationOption)""); }

        /// <summary>Backing field for <see cref="TargetDatabaseName" /> property.</summary>
        private string _targetDatabaseName;

        /// <summary>Name of target database</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string TargetDatabaseName { get => this._targetDatabaseName; set => this._targetDatabaseName = value; }

        /// <summary>
        /// Creates an new <see cref="MigrateSchemaSqlServerSqlDbDatabaseInput" /> instance.
        /// </summary>
        public MigrateSchemaSqlServerSqlDbDatabaseInput()
        {

        }
    }
    /// Database input for migrate schema Sql Server to Azure SQL Server scenario
    public partial interface IMigrateSchemaSqlServerSqlDbDatabaseInput :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IJsonSerializable
    {
        /// <summary>Id of the source database</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Id of the source database",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get; set; }
        /// <summary>Name of source database</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of source database",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>Resource Identifier of a file resource containing the uploaded schema file</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource Identifier of a file resource containing the uploaded schema file",
        SerializedName = @"fileId",
        PossibleTypes = new [] { typeof(string) })]
        string SchemaSettingFileId { get; set; }
        /// <summary>Name of the file resource containing the uploaded schema file</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the file resource containing the uploaded schema file",
        SerializedName = @"fileName",
        PossibleTypes = new [] { typeof(string) })]
        string SchemaSettingFileName { get; set; }
        /// <summary>Option on how to migrate the schema</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Option on how to migrate the schema",
        SerializedName = @"schemaOption",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.SchemaMigrationOption) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.SchemaMigrationOption? SchemaSettingSchemaOption { get; set; }
        /// <summary>Name of target database</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of target database",
        SerializedName = @"targetDatabaseName",
        PossibleTypes = new [] { typeof(string) })]
        string TargetDatabaseName { get; set; }

    }
    /// Database input for migrate schema Sql Server to Azure SQL Server scenario
    internal partial interface IMigrateSchemaSqlServerSqlDbDatabaseInputInternal

    {
        /// <summary>Id of the source database</summary>
        string Id { get; set; }
        /// <summary>Name of source database</summary>
        string Name { get; set; }
        /// <summary>Database schema migration settings</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISchemaMigrationSetting SchemaSetting { get; set; }
        /// <summary>Resource Identifier of a file resource containing the uploaded schema file</summary>
        string SchemaSettingFileId { get; set; }
        /// <summary>Name of the file resource containing the uploaded schema file</summary>
        string SchemaSettingFileName { get; set; }
        /// <summary>Option on how to migrate the schema</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.SchemaMigrationOption? SchemaSettingSchemaOption { get; set; }
        /// <summary>Name of target database</summary>
        string TargetDatabaseName { get; set; }

    }
}