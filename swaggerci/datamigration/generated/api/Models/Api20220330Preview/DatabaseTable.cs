// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Extensions;

    /// <summary>Table properties</summary>
    public partial class DatabaseTable :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseTable,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseTableInternal
    {

        /// <summary>Backing field for <see cref="HasRow" /> property.</summary>
        private bool? _hasRow;

        /// <summary>Indicates whether table is empty or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public bool? HasRow { get => this._hasRow; }

        /// <summary>Internal Acessors for HasRow</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseTableInternal.HasRow { get => this._hasRow; set { {_hasRow = value;} } }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseTableInternal.Name { get => this._name; set { {_name = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Schema-qualified name of the table</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string Name { get => this._name; }

        /// <summary>Creates an new <see cref="DatabaseTable" /> instance.</summary>
        public DatabaseTable()
        {

        }
    }
    /// Table properties
    public partial interface IDatabaseTable :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IJsonSerializable
    {
        /// <summary>Indicates whether table is empty or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Indicates whether table is empty or not",
        SerializedName = @"hasRows",
        PossibleTypes = new [] { typeof(bool) })]
        bool? HasRow { get;  }
        /// <summary>Schema-qualified name of the table</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Schema-qualified name of the table",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get;  }

    }
    /// Table properties
    internal partial interface IDatabaseTableInternal

    {
        /// <summary>Indicates whether table is empty or not</summary>
        bool? HasRow { get; set; }
        /// <summary>Schema-qualified name of the table</summary>
        string Name { get; set; }

    }
}