// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Extensions;

    /// <summary>Output of the task that gets TDE certificates in Base64 encoded format.</summary>
    public partial class GetTdeCertificatesSqlTaskOutput :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskOutput,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskOutputInternal
    {

        /// <summary>Backing field for <see cref="Base64EncodedCertificate" /> property.</summary>
        private string _base64EncodedCertificate;

        /// <summary>Mapping from certificate name to base 64 encoded format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string Base64EncodedCertificate { get => this._base64EncodedCertificate; }

        /// <summary>Internal Acessors for Base64EncodedCertificate</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskOutputInternal.Base64EncodedCertificate { get => this._base64EncodedCertificate; set { {_base64EncodedCertificate = value;} } }

        /// <summary>Internal Acessors for ValidationError</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException[] Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IGetTdeCertificatesSqlTaskOutputInternal.ValidationError { get => this._validationError; set { {_validationError = value;} } }

        /// <summary>Backing field for <see cref="ValidationError" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException[] _validationError;

        /// <summary>Validation errors</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException[] ValidationError { get => this._validationError; }

        /// <summary>Creates an new <see cref="GetTdeCertificatesSqlTaskOutput" /> instance.</summary>
        public GetTdeCertificatesSqlTaskOutput()
        {

        }
    }
    /// Output of the task that gets TDE certificates in Base64 encoded format.
    public partial interface IGetTdeCertificatesSqlTaskOutput :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IJsonSerializable
    {
        /// <summary>Mapping from certificate name to base 64 encoded format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Mapping from certificate name to base 64 encoded format.",
        SerializedName = @"base64EncodedCertificates",
        PossibleTypes = new [] { typeof(string) })]
        string Base64EncodedCertificate { get;  }
        /// <summary>Validation errors</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Validation errors",
        SerializedName = @"validationErrors",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException[] ValidationError { get;  }

    }
    /// Output of the task that gets TDE certificates in Base64 encoded format.
    internal partial interface IGetTdeCertificatesSqlTaskOutputInternal

    {
        /// <summary>Mapping from certificate name to base 64 encoded format.</summary>
        string Base64EncodedCertificate { get; set; }
        /// <summary>Validation errors</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException[] ValidationError { get; set; }

    }
}