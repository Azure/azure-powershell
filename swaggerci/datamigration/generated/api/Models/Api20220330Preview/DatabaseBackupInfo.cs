// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Extensions;

    /// <summary>Information about backup files when existing backup mode is used.</summary>
    public partial class DatabaseBackupInfo :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseBackupInfo,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseBackupInfoInternal
    {

        /// <summary>Backing field for <see cref="BackupFile" /> property.</summary>
        private string[] _backupFile;

        /// <summary>The list of backup files for the current database.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string[] BackupFile { get => this._backupFile; }

        /// <summary>Backing field for <see cref="BackupFinishDate" /> property.</summary>
        private global::System.DateTime? _backupFinishDate;

        /// <summary>Date and time when the backup operation finished.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public global::System.DateTime? BackupFinishDate { get => this._backupFinishDate; }

        /// <summary>Backing field for <see cref="BackupType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.BackupType? _backupType;

        /// <summary>Backup Type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.BackupType? BackupType { get => this._backupType; }

        /// <summary>Backing field for <see cref="DatabaseName" /> property.</summary>
        private string _databaseName;

        /// <summary>Database name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string DatabaseName { get => this._databaseName; }

        /// <summary>Backing field for <see cref="FamilyCount" /> property.</summary>
        private int? _familyCount;

        /// <summary>Number of files in the backup set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public int? FamilyCount { get => this._familyCount; }

        /// <summary>Backing field for <see cref="IsCompressed" /> property.</summary>
        private bool? _isCompressed;

        /// <summary>Whether the backup set is compressed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public bool? IsCompressed { get => this._isCompressed; }

        /// <summary>Backing field for <see cref="IsDamaged" /> property.</summary>
        private bool? _isDamaged;

        /// <summary>
        /// Database was damaged when backed up, but the backup operation was requested to continue despite errors.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public bool? IsDamaged { get => this._isDamaged; }

        /// <summary>Internal Acessors for BackupFile</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseBackupInfoInternal.BackupFile { get => this._backupFile; set { {_backupFile = value;} } }

        /// <summary>Internal Acessors for BackupFinishDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseBackupInfoInternal.BackupFinishDate { get => this._backupFinishDate; set { {_backupFinishDate = value;} } }

        /// <summary>Internal Acessors for BackupType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.BackupType? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseBackupInfoInternal.BackupType { get => this._backupType; set { {_backupType = value;} } }

        /// <summary>Internal Acessors for DatabaseName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseBackupInfoInternal.DatabaseName { get => this._databaseName; set { {_databaseName = value;} } }

        /// <summary>Internal Acessors for FamilyCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseBackupInfoInternal.FamilyCount { get => this._familyCount; set { {_familyCount = value;} } }

        /// <summary>Internal Acessors for IsCompressed</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseBackupInfoInternal.IsCompressed { get => this._isCompressed; set { {_isCompressed = value;} } }

        /// <summary>Internal Acessors for IsDamaged</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseBackupInfoInternal.IsDamaged { get => this._isDamaged; set { {_isDamaged = value;} } }

        /// <summary>Internal Acessors for Position</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseBackupInfoInternal.Position { get => this._position; set { {_position = value;} } }

        /// <summary>Backing field for <see cref="Position" /> property.</summary>
        private int? _position;

        /// <summary>Position of current database backup in the file.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public int? Position { get => this._position; }

        /// <summary>Creates an new <see cref="DatabaseBackupInfo" /> instance.</summary>
        public DatabaseBackupInfo()
        {

        }
    }
    /// Information about backup files when existing backup mode is used.
    public partial interface IDatabaseBackupInfo :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IJsonSerializable
    {
        /// <summary>The list of backup files for the current database.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of backup files for the current database.",
        SerializedName = @"backupFiles",
        PossibleTypes = new [] { typeof(string) })]
        string[] BackupFile { get;  }
        /// <summary>Date and time when the backup operation finished.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Date and time when the backup operation finished.",
        SerializedName = @"backupFinishDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? BackupFinishDate { get;  }
        /// <summary>Backup Type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Backup Type.",
        SerializedName = @"backupType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.BackupType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.BackupType? BackupType { get;  }
        /// <summary>Database name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Database name.",
        SerializedName = @"databaseName",
        PossibleTypes = new [] { typeof(string) })]
        string DatabaseName { get;  }
        /// <summary>Number of files in the backup set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Number of files in the backup set.",
        SerializedName = @"familyCount",
        PossibleTypes = new [] { typeof(int) })]
        int? FamilyCount { get;  }
        /// <summary>Whether the backup set is compressed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Whether the backup set is compressed",
        SerializedName = @"isCompressed",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsCompressed { get;  }
        /// <summary>
        /// Database was damaged when backed up, but the backup operation was requested to continue despite errors.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Database was damaged when backed up, but the backup operation was requested to continue despite errors.",
        SerializedName = @"isDamaged",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsDamaged { get;  }
        /// <summary>Position of current database backup in the file.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Position of current database backup in the file.",
        SerializedName = @"position",
        PossibleTypes = new [] { typeof(int) })]
        int? Position { get;  }

    }
    /// Information about backup files when existing backup mode is used.
    internal partial interface IDatabaseBackupInfoInternal

    {
        /// <summary>The list of backup files for the current database.</summary>
        string[] BackupFile { get; set; }
        /// <summary>Date and time when the backup operation finished.</summary>
        global::System.DateTime? BackupFinishDate { get; set; }
        /// <summary>Backup Type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.BackupType? BackupType { get; set; }
        /// <summary>Database name.</summary>
        string DatabaseName { get; set; }
        /// <summary>Number of files in the backup set.</summary>
        int? FamilyCount { get; set; }
        /// <summary>Whether the backup set is compressed</summary>
        bool? IsCompressed { get; set; }
        /// <summary>
        /// Database was damaged when backed up, but the backup operation was requested to continue despite errors.
        /// </summary>
        bool? IsDamaged { get; set; }
        /// <summary>Position of current database backup in the file.</summary>
        int? Position { get; set; }

    }
}