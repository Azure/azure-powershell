// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Extensions;

    /// <summary>
    /// Base class for all types of DMS task properties. If task is not supported by current client, this object is returned.
    /// </summary>
    public partial class ProjectTaskProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json erialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IProjectTaskProperties.
        /// Note: the Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IProjectTaskProperties interface
        /// is polymorphic, and the precise model class that will get deserialized is determined at runtime based on the payload.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IProjectTaskProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IProjectTaskProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonNode node)
        {
            if (!(node is Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonObject json))
            {
                return null;
            }
            // Polymorphic type -- select the appropriate constructor using the discriminator

            switch ( json.StringProperty("taskType") )
            {
                case "MigrateSchemaSqlServerSqlDb":
                {
                    return new MigrateSchemaSqlServerSqlDbTaskProperties(json);
                }
                case "Service.Check.OCI":
                {
                    return new CheckOciDriverTaskProperties(json);
                }
                case "Service.Upload.OCI":
                {
                    return new UploadOciDriverTaskProperties(json);
                }
                case "Service.Install.OCI":
                {
                    return new InstallOciDriverTaskProperties(json);
                }
                case "Connect.MongoDb":
                {
                    return new ConnectToMongoDbTaskProperties(json);
                }
                case "ConnectToSource.SqlServer":
                {
                    return new ConnectToSourceSqlServerTaskProperties(json);
                }
                case "ConnectToSource.SqlServer.Sync":
                {
                    return new ConnectToSourceSqlServerSyncTaskProperties(json);
                }
                case "ConnectToSource.PostgreSql.Sync":
                {
                    return new ConnectToSourcePostgreSqlSyncTaskProperties(json);
                }
                case "ConnectToSource.MySql":
                {
                    return new ConnectToSourceMySqlTaskProperties(json);
                }
                case "ConnectToSource.Oracle.Sync":
                {
                    return new ConnectToSourceOracleSyncTaskProperties(json);
                }
                case "ConnectToTarget.SqlDb":
                {
                    return new ConnectToTargetSqlDbTaskProperties(json);
                }
                case "ConnectToTarget.SqlDb.Sync":
                {
                    return new ConnectToTargetSqlDbSyncTaskProperties(json);
                }
                case "ConnectToTarget.AzureDbForPostgreSql.Sync":
                {
                    return new ConnectToTargetAzureDbForPostgreSqlSyncTaskProperties(json);
                }
                case "ConnectToTarget.Oracle.AzureDbForPostgreSql.Sync":
                {
                    return new ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskProperties(json);
                }
                case "GetUserTables.Sql":
                {
                    return new GetUserTablesSqlTaskProperties(json);
                }
                case "GetUserTables.AzureSqlDb.Sync":
                {
                    return new GetUserTablesSqlSyncTaskProperties(json);
                }
                case "GetUserTablesOracle":
                {
                    return new GetUserTablesOracleTaskProperties(json);
                }
                case "GetUserTablesPostgreSql":
                {
                    return new GetUserTablesPostgreSqlTaskProperties(json);
                }
                case "GetUserTablesMySql":
                {
                    return new GetUserTablesMySqlTaskProperties(json);
                }
                case "ConnectToTarget.AzureSqlDbMI":
                {
                    return new ConnectToTargetSqlMiTaskProperties(json);
                }
                case "ConnectToTarget.AzureSqlDbMI.Sync.LRS":
                {
                    return new ConnectToTargetSqlMiSyncTaskProperties(json);
                }
                case "ConnectToTarget.AzureDbForMySql":
                {
                    return new ConnectToTargetAzureDbForMySqlTaskProperties(json);
                }
                case "Migrate.MongoDb":
                {
                    return new MigrateMongoDbTaskProperties(json);
                }
                case "Migrate.SqlServer.AzureSqlDbMI":
                {
                    return new MigrateSqlServerSqlMiTaskProperties(json);
                }
                case "Migrate.SqlServer.AzureSqlDbMI.Sync.LRS":
                {
                    return new MigrateSqlServerSqlMiSyncTaskProperties(json);
                }
                case "Migrate.SqlServer.SqlDb":
                {
                    return new MigrateSqlServerSqlDbTaskProperties(json);
                }
                case "Migrate.SqlServer.AzureSqlDb.Sync":
                {
                    return new MigrateSqlServerSqlDbSyncTaskProperties(json);
                }
                case "Migrate.MySql.AzureDbForMySql.Sync":
                {
                    return new MigrateMySqlAzureDbForMySqlSyncTaskProperties(json);
                }
                case "Migrate.MySql.AzureDbForMySql":
                {
                    return new MigrateMySqlAzureDbForMySqlOfflineTaskProperties(json);
                }
                case "Migrate.PostgreSql.AzureDbForPostgreSql.SyncV2":
                {
                    return new MigratePostgreSqlAzureDbForPostgreSqlSyncTaskProperties(json);
                }
                case "Migrate.Oracle.AzureDbForPostgreSql.Sync":
                {
                    return new MigrateOracleAzureDbForPostgreSqlSyncTaskProperties(json);
                }
                case "ValidateMigrationInput.SqlServer.SqlDb.Sync":
                {
                    return new ValidateMigrationInputSqlServerSqlDbSyncTaskProperties(json);
                }
                case "ValidateMigrationInput.SqlServer.AzureSqlDbMI":
                {
                    return new ValidateMigrationInputSqlServerSqlMiTaskProperties(json);
                }
                case "ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS":
                {
                    return new ValidateMigrationInputSqlServerSqlMiSyncTaskProperties(json);
                }
                case "Validate.MongoDb":
                {
                    return new ValidateMongoDbTaskProperties(json);
                }
                case "Validate.Oracle.AzureDbPostgreSql.Sync":
                {
                    return new ValidateOracleAzureDbForPostgreSqlSyncTaskProperties(json);
                }
                case "GetTDECertificates.Sql":
                {
                    return new GetTdeCertificatesSqlTaskProperties(json);
                }
                case "Migrate.Ssis":
                {
                    return new MigrateSsisTaskProperties(json);
                }
            }
            return new ProjectTaskProperties(json);
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonObject into a new instance of <see cref="ProjectTaskProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal ProjectTaskProperties(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_taskType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonString>("taskType"), out var __jsonTaskType) ? (string)__jsonTaskType : (string)TaskType;}
            {_error = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonArray>("errors"), out var __jsonErrors) ? If( __jsonErrors as Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IODataError[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IODataError) (Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ODataError.FromJson(__u) )) ))() : null : Error;}
            {_state = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonString>("state"), out var __jsonState) ? (string)__jsonState : (string)State;}
            {_command = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonArray>("commands"), out var __jsonCommands) ? If( __jsonCommands as Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonArray, out var __q) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ICommandProperties[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__q, (__p)=>(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ICommandProperties) (Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.CommandProperties.FromJson(__p) )) ))() : null : Command;}
            {_clientData = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonObject>("clientData"), out var __jsonClientData) ? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ProjectTaskPropertiesClientData.FromJson(__jsonClientData) : ClientData;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="ProjectTaskProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="ProjectTaskProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != (((object)this._taskType)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonString(this._taskType.ToString()) : null, "taskType" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.SerializationMode.IncludeReadOnly))
            {
                if (null != this._error)
                {
                    var __w = new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.XNodeArray();
                    foreach( var __x in this._error )
                    {
                        AddIf(__x?.ToJson(null, serializationMode) ,__w.Add);
                    }
                    container.Add("errors",__w);
                }
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._state)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonString(this._state.ToString()) : null, "state" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.SerializationMode.IncludeReadOnly))
            {
                if (null != this._command)
                {
                    var __r = new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.XNodeArray();
                    foreach( var __s in this._command )
                    {
                        AddIf(__s?.ToJson(null, serializationMode) ,__r.Add);
                    }
                    container.Add("commands",__r);
                }
            }
            AddIf( null != this._clientData ? (Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonNode) this._clientData.ToJson(null,serializationMode) : null, "clientData" ,container.Add );
            AfterToJson(ref container);
            return container;
        }
    }
}