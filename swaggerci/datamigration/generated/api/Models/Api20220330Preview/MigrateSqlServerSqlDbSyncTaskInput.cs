// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Extensions;

    /// <summary>
    /// Input for the task that migrates on-prem SQL Server databases to Azure SQL Database for online migrations
    /// </summary>
    public partial class MigrateSqlServerSqlDbSyncTaskInput :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncTaskInput,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncTaskInputInternal,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInput"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInput __sqlMigrationTaskInput = new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.SqlMigrationTaskInput();

        /// <summary>Internal Acessors for ValidationOption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrationValidationOptions Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncTaskInputInternal.ValidationOption { get => (this._validationOption = this._validationOption ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.MigrationValidationOptions()); set { {_validationOption = value;} } }

        /// <summary>Backing field for <see cref="SelectedDatabase" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncDatabaseInput[] _selectedDatabase;

        /// <summary>Databases to migrate</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncDatabaseInput[] SelectedDatabase { get => this._selectedDatabase; set => this._selectedDatabase = value; }

        /// <summary>Information for connecting to source</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlConnectionInfo SourceConnectionInfo { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).SourceConnectionInfo; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).SourceConnectionInfo = value ; }

        /// <summary>Additional connection settings</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public string SourceConnectionInfoAdditionalSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).SourceConnectionInfoAdditionalSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).SourceConnectionInfoAdditionalSetting = value ?? null; }

        /// <summary>Authentication type to use for connection</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.AuthenticationType? SourceConnectionInfoAuthentication { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).SourceConnectionInfoAuthentication; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).SourceConnectionInfoAuthentication = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.AuthenticationType)""); }

        /// <summary>Data source in the format Protocol:MachineName\SQLServerInstanceName,PortNumber</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public string SourceConnectionInfoDataSource { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).SourceConnectionInfoDataSource; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).SourceConnectionInfoDataSource = value ; }

        /// <summary>Whether to encrypt the connection</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public bool? SourceConnectionInfoEncryptConnection { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).SourceConnectionInfoEncryptConnection; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).SourceConnectionInfoEncryptConnection = value ?? default(bool); }

        /// <summary>Password credential.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public string SourceConnectionInfoPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).SourceConnectionInfoPassword; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).SourceConnectionInfoPassword = value ?? null; }

        /// <summary>Server platform type for connection</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.SqlSourcePlatform? SourceConnectionInfoPlatform { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).SourceConnectionInfoPlatform; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).SourceConnectionInfoPlatform = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.SqlSourcePlatform)""); }

        /// <summary>Port for Server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public int? SourceConnectionInfoPort { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).SourceConnectionInfoPort; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).SourceConnectionInfoPort = value ?? default(int); }

        /// <summary>
        /// Represents the ID of an HTTP resource represented by an Azure resource provider.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public string SourceConnectionInfoResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).SourceConnectionInfoResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).SourceConnectionInfoResourceId = value ?? null; }

        /// <summary>server brand version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public string SourceConnectionInfoServerBrandVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).SourceConnectionInfoServerBrandVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).SourceConnectionInfoServerBrandVersion = value ?? null; }

        /// <summary>name of the server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public string SourceConnectionInfoServerName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).SourceConnectionInfoServerName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).SourceConnectionInfoServerName = value ?? null; }

        /// <summary>server version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public string SourceConnectionInfoServerVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).SourceConnectionInfoServerVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).SourceConnectionInfoServerVersion = value ?? null; }

        /// <summary>Whether to trust the server certificate</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public bool? SourceConnectionInfoTrustServerCertificate { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).SourceConnectionInfoTrustServerCertificate; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).SourceConnectionInfoTrustServerCertificate = value ?? default(bool); }

        /// <summary>Type of connection info</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public string SourceConnectionInfoType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).SourceConnectionInfoType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).SourceConnectionInfoType = value ; }

        /// <summary>User name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public string SourceConnectionInfoUserName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).SourceConnectionInfoUserName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).SourceConnectionInfoUserName = value ?? null; }

        /// <summary>Information for connecting to target</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlConnectionInfo TargetConnectionInfo { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).TargetConnectionInfo; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).TargetConnectionInfo = value ; }

        /// <summary>Additional connection settings</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public string TargetConnectionInfoAdditionalSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).TargetConnectionInfoAdditionalSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).TargetConnectionInfoAdditionalSetting = value ?? null; }

        /// <summary>Authentication type to use for connection</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.AuthenticationType? TargetConnectionInfoAuthentication { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).TargetConnectionInfoAuthentication; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).TargetConnectionInfoAuthentication = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.AuthenticationType)""); }

        /// <summary>Data source in the format Protocol:MachineName\SQLServerInstanceName,PortNumber</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public string TargetConnectionInfoDataSource { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).TargetConnectionInfoDataSource; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).TargetConnectionInfoDataSource = value ; }

        /// <summary>Whether to encrypt the connection</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public bool? TargetConnectionInfoEncryptConnection { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).TargetConnectionInfoEncryptConnection; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).TargetConnectionInfoEncryptConnection = value ?? default(bool); }

        /// <summary>Password credential.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public string TargetConnectionInfoPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).TargetConnectionInfoPassword; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).TargetConnectionInfoPassword = value ?? null; }

        /// <summary>Server platform type for connection</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.SqlSourcePlatform? TargetConnectionInfoPlatform { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).TargetConnectionInfoPlatform; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).TargetConnectionInfoPlatform = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.SqlSourcePlatform)""); }

        /// <summary>Port for Server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public int? TargetConnectionInfoPort { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).TargetConnectionInfoPort; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).TargetConnectionInfoPort = value ?? default(int); }

        /// <summary>
        /// Represents the ID of an HTTP resource represented by an Azure resource provider.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public string TargetConnectionInfoResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).TargetConnectionInfoResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).TargetConnectionInfoResourceId = value ?? null; }

        /// <summary>server brand version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public string TargetConnectionInfoServerBrandVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).TargetConnectionInfoServerBrandVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).TargetConnectionInfoServerBrandVersion = value ?? null; }

        /// <summary>name of the server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public string TargetConnectionInfoServerName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).TargetConnectionInfoServerName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).TargetConnectionInfoServerName = value ?? null; }

        /// <summary>server version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public string TargetConnectionInfoServerVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).TargetConnectionInfoServerVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).TargetConnectionInfoServerVersion = value ?? null; }

        /// <summary>Whether to trust the server certificate</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public bool? TargetConnectionInfoTrustServerCertificate { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).TargetConnectionInfoTrustServerCertificate; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).TargetConnectionInfoTrustServerCertificate = value ?? default(bool); }

        /// <summary>Type of connection info</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public string TargetConnectionInfoType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).TargetConnectionInfoType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).TargetConnectionInfoType = value ; }

        /// <summary>User name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public string TargetConnectionInfoUserName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).TargetConnectionInfoUserName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal)__sqlMigrationTaskInput).TargetConnectionInfoUserName = value ?? null; }

        /// <summary>Backing field for <see cref="ValidationOption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrationValidationOptions _validationOption;

        /// <summary>Validation options</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrationValidationOptions ValidationOption { get => (this._validationOption = this._validationOption ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.MigrationValidationOptions()); set => this._validationOption = value; }

        /// <summary>
        /// Allows to perform a checksum based data integrity validation between source and target for the selected database / tables
        /// .
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public bool? ValidationOptionEnableDataIntegrityValidation { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrationValidationOptionsInternal)ValidationOption).EnableDataIntegrityValidation; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrationValidationOptionsInternal)ValidationOption).EnableDataIntegrityValidation = value ?? default(bool); }

        /// <summary>
        /// Allows to perform a quick and intelligent query analysis by retrieving queries from the source database and executes them
        /// in the target. The result will have execution statistics for executions in source and target databases for the extracted
        /// queries.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public bool? ValidationOptionEnableQueryAnalysisValidation { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrationValidationOptionsInternal)ValidationOption).EnableQueryAnalysisValidation; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrationValidationOptionsInternal)ValidationOption).EnableQueryAnalysisValidation = value ?? default(bool); }

        /// <summary>Allows to compare the schema information between source and target.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public bool? ValidationOptionEnableSchemaValidation { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrationValidationOptionsInternal)ValidationOption).EnableSchemaValidation; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrationValidationOptionsInternal)ValidationOption).EnableSchemaValidation = value ?? default(bool); }

        /// <summary>Creates an new <see cref="MigrateSqlServerSqlDbSyncTaskInput" /> instance.</summary>
        public MigrateSqlServerSqlDbSyncTaskInput()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__sqlMigrationTaskInput), __sqlMigrationTaskInput);
            await eventListener.AssertObjectIsValid(nameof(__sqlMigrationTaskInput), __sqlMigrationTaskInput);
        }
    }
    /// Input for the task that migrates on-prem SQL Server databases to Azure SQL Database for online migrations
    public partial interface IMigrateSqlServerSqlDbSyncTaskInput :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInput
    {
        /// <summary>Databases to migrate</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Databases to migrate",
        SerializedName = @"selectedDatabases",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncDatabaseInput) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncDatabaseInput[] SelectedDatabase { get; set; }
        /// <summary>
        /// Allows to perform a checksum based data integrity validation between source and target for the selected database / tables
        /// .
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Allows to perform a checksum based data integrity validation between source and target for the selected database / tables .",
        SerializedName = @"enableDataIntegrityValidation",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ValidationOptionEnableDataIntegrityValidation { get; set; }
        /// <summary>
        /// Allows to perform a quick and intelligent query analysis by retrieving queries from the source database and executes them
        /// in the target. The result will have execution statistics for executions in source and target databases for the extracted
        /// queries.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Allows to perform a quick and intelligent query analysis by retrieving queries from the source database and executes them in the target. The result will have execution statistics for executions in source and target databases for the extracted queries.",
        SerializedName = @"enableQueryAnalysisValidation",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ValidationOptionEnableQueryAnalysisValidation { get; set; }
        /// <summary>Allows to compare the schema information between source and target.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Allows to compare the schema information between source and target.",
        SerializedName = @"enableSchemaValidation",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ValidationOptionEnableSchemaValidation { get; set; }

    }
    /// Input for the task that migrates on-prem SQL Server databases to Azure SQL Database for online migrations
    internal partial interface IMigrateSqlServerSqlDbSyncTaskInputInternal :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlMigrationTaskInputInternal
    {
        /// <summary>Databases to migrate</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbSyncDatabaseInput[] SelectedDatabase { get; set; }
        /// <summary>Validation options</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrationValidationOptions ValidationOption { get; set; }
        /// <summary>
        /// Allows to perform a checksum based data integrity validation between source and target for the selected database / tables
        /// .
        /// </summary>
        bool? ValidationOptionEnableDataIntegrityValidation { get; set; }
        /// <summary>
        /// Allows to perform a quick and intelligent query analysis by retrieving queries from the source database and executes them
        /// in the target. The result will have execution statistics for executions in source and target databases for the extracted
        /// queries.
        /// </summary>
        bool? ValidationOptionEnableQueryAnalysisValidation { get; set; }
        /// <summary>Allows to compare the schema information between source and target.</summary>
        bool? ValidationOptionEnableSchemaValidation { get; set; }

    }
}