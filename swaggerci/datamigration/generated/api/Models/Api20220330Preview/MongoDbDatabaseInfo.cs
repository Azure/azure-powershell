// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Extensions;

    /// <summary>Describes a database within a MongoDB data source</summary>
    public partial class MongoDbDatabaseInfo :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMongoDbDatabaseInfo,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMongoDbDatabaseInfoInternal,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMongoDbObjectInfo"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMongoDbObjectInfo __mongoDbObjectInfo = new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.MongoDbObjectInfo();

        /// <summary>The average document size, or -1 if the average size is unknown</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public long AverageDocumentSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMongoDbObjectInfoInternal)__mongoDbObjectInfo).AverageDocumentSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMongoDbObjectInfoInternal)__mongoDbObjectInfo).AverageDocumentSize = value ; }

        /// <summary>Backing field for <see cref="Collection" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMongoDbCollectionInfo[] _collection;

        /// <summary>A list of supported collections in a MongoDB database</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMongoDbCollectionInfo[] Collection { get => this._collection; set => this._collection = value; }

        /// <summary>The estimated total data size, in bytes, or -1 if the size is unknown.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public long DataSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMongoDbObjectInfoInternal)__mongoDbObjectInfo).DataSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMongoDbObjectInfoInternal)__mongoDbObjectInfo).DataSize = value ; }

        /// <summary>The estimated total number of documents, or -1 if the document count is unknown</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public long DocumentCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMongoDbObjectInfoInternal)__mongoDbObjectInfo).DocumentCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMongoDbObjectInfoInternal)__mongoDbObjectInfo).DocumentCount = value ; }

        /// <summary>The unqualified name of the database or collection</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMongoDbObjectInfoInternal)__mongoDbObjectInfo).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMongoDbObjectInfoInternal)__mongoDbObjectInfo).Name = value ; }

        /// <summary>
        /// The qualified name of the database or collection. For a collection, this is the database-qualified name.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public string QualifiedName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMongoDbObjectInfoInternal)__mongoDbObjectInfo).QualifiedName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMongoDbObjectInfoInternal)__mongoDbObjectInfo).QualifiedName = value ; }

        /// <summary>Backing field for <see cref="SupportsSharding" /> property.</summary>
        private bool _supportsSharding;

        /// <summary>
        /// Whether the database has sharding enabled. Note that the migration task will enable sharding on the target if necessary.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public bool SupportsSharding { get => this._supportsSharding; set => this._supportsSharding = value; }

        /// <summary>Creates an new <see cref="MongoDbDatabaseInfo" /> instance.</summary>
        public MongoDbDatabaseInfo()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__mongoDbObjectInfo), __mongoDbObjectInfo);
            await eventListener.AssertObjectIsValid(nameof(__mongoDbObjectInfo), __mongoDbObjectInfo);
        }
    }
    /// Describes a database within a MongoDB data source
    public partial interface IMongoDbDatabaseInfo :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMongoDbObjectInfo
    {
        /// <summary>A list of supported collections in a MongoDB database</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"A list of supported collections in a MongoDB database",
        SerializedName = @"collections",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMongoDbCollectionInfo) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMongoDbCollectionInfo[] Collection { get; set; }
        /// <summary>
        /// Whether the database has sharding enabled. Note that the migration task will enable sharding on the target if necessary.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Whether the database has sharding enabled. Note that the migration task will enable sharding on the target if necessary.",
        SerializedName = @"supportsSharding",
        PossibleTypes = new [] { typeof(bool) })]
        bool SupportsSharding { get; set; }

    }
    /// Describes a database within a MongoDB data source
    internal partial interface IMongoDbDatabaseInfoInternal :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMongoDbObjectInfoInternal
    {
        /// <summary>A list of supported collections in a MongoDB database</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMongoDbCollectionInfo[] Collection { get; set; }
        /// <summary>
        /// Whether the database has sharding enabled. Note that the migration task will enable sharding on the target if necessary.
        /// </summary>
        bool SupportsSharding { get; set; }

    }
}