// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Extensions;

    /// <summary>Describes a database or collection within a MongoDB data source</summary>
    public partial class MongoDbObjectInfo :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMongoDbObjectInfo,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMongoDbObjectInfoInternal
    {

        /// <summary>Backing field for <see cref="AverageDocumentSize" /> property.</summary>
        private long _averageDocumentSize;

        /// <summary>The average document size, or -1 if the average size is unknown</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public long AverageDocumentSize { get => this._averageDocumentSize; set => this._averageDocumentSize = value; }

        /// <summary>Backing field for <see cref="DataSize" /> property.</summary>
        private long _dataSize;

        /// <summary>The estimated total data size, in bytes, or -1 if the size is unknown.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public long DataSize { get => this._dataSize; set => this._dataSize = value; }

        /// <summary>Backing field for <see cref="DocumentCount" /> property.</summary>
        private long _documentCount;

        /// <summary>The estimated total number of documents, or -1 if the document count is unknown</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public long DocumentCount { get => this._documentCount; set => this._documentCount = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>The unqualified name of the database or collection</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="QualifiedName" /> property.</summary>
        private string _qualifiedName;

        /// <summary>
        /// The qualified name of the database or collection. For a collection, this is the database-qualified name.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string QualifiedName { get => this._qualifiedName; set => this._qualifiedName = value; }

        /// <summary>Creates an new <see cref="MongoDbObjectInfo" /> instance.</summary>
        public MongoDbObjectInfo()
        {

        }
    }
    /// Describes a database or collection within a MongoDB data source
    public partial interface IMongoDbObjectInfo :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IJsonSerializable
    {
        /// <summary>The average document size, or -1 if the average size is unknown</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The average document size, or -1 if the average size is unknown",
        SerializedName = @"averageDocumentSize",
        PossibleTypes = new [] { typeof(long) })]
        long AverageDocumentSize { get; set; }
        /// <summary>The estimated total data size, in bytes, or -1 if the size is unknown.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The estimated total data size, in bytes, or -1 if the size is unknown.",
        SerializedName = @"dataSize",
        PossibleTypes = new [] { typeof(long) })]
        long DataSize { get; set; }
        /// <summary>The estimated total number of documents, or -1 if the document count is unknown</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The estimated total number of documents, or -1 if the document count is unknown",
        SerializedName = @"documentCount",
        PossibleTypes = new [] { typeof(long) })]
        long DocumentCount { get; set; }
        /// <summary>The unqualified name of the database or collection</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The unqualified name of the database or collection",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>
        /// The qualified name of the database or collection. For a collection, this is the database-qualified name.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The qualified name of the database or collection. For a collection, this is the database-qualified name.",
        SerializedName = @"qualifiedName",
        PossibleTypes = new [] { typeof(string) })]
        string QualifiedName { get; set; }

    }
    /// Describes a database or collection within a MongoDB data source
    internal partial interface IMongoDbObjectInfoInternal

    {
        /// <summary>The average document size, or -1 if the average size is unknown</summary>
        long AverageDocumentSize { get; set; }
        /// <summary>The estimated total data size, in bytes, or -1 if the size is unknown.</summary>
        long DataSize { get; set; }
        /// <summary>The estimated total number of documents, or -1 if the document count is unknown</summary>
        long DocumentCount { get; set; }
        /// <summary>The unqualified name of the database or collection</summary>
        string Name { get; set; }
        /// <summary>
        /// The qualified name of the database or collection. For a collection, this is the database-qualified name.
        /// </summary>
        string QualifiedName { get; set; }

    }
}