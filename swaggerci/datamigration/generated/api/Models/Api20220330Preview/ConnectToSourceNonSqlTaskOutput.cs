// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Extensions;

    /// <summary>Output for connect to MySQL type source</summary>
    public partial class ConnectToSourceNonSqlTaskOutput :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceNonSqlTaskOutput,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceNonSqlTaskOutputInternal
    {

        /// <summary>Backing field for <see cref="Database" /> property.</summary>
        private string[] _database;

        /// <summary>List of databases on the server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string[] Database { get => this._database; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>Result identifier</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string Id { get => this._id; }

        /// <summary>Internal Acessors for Database</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceNonSqlTaskOutputInternal.Database { get => this._database; set { {_database = value;} } }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceNonSqlTaskOutputInternal.Id { get => this._id; set { {_id = value;} } }

        /// <summary>Internal Acessors for ServerProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IServerProperties Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceNonSqlTaskOutputInternal.ServerProperty { get => (this._serverProperty = this._serverProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ServerProperties()); set { {_serverProperty = value;} } }

        /// <summary>Internal Acessors for ServerPropertyServerDatabaseCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceNonSqlTaskOutputInternal.ServerPropertyServerDatabaseCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IServerPropertiesInternal)ServerProperty).ServerDatabaseCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IServerPropertiesInternal)ServerProperty).ServerDatabaseCount = value; }

        /// <summary>Internal Acessors for ServerPropertyServerEdition</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceNonSqlTaskOutputInternal.ServerPropertyServerEdition { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IServerPropertiesInternal)ServerProperty).ServerEdition; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IServerPropertiesInternal)ServerProperty).ServerEdition = value; }

        /// <summary>Internal Acessors for ServerPropertyServerName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceNonSqlTaskOutputInternal.ServerPropertyServerName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IServerPropertiesInternal)ServerProperty).ServerName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IServerPropertiesInternal)ServerProperty).ServerName = value; }

        /// <summary>Internal Acessors for ServerPropertyServerOperatingSystemVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceNonSqlTaskOutputInternal.ServerPropertyServerOperatingSystemVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IServerPropertiesInternal)ServerProperty).ServerOperatingSystemVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IServerPropertiesInternal)ServerProperty).ServerOperatingSystemVersion = value; }

        /// <summary>Internal Acessors for ServerPropertyServerPlatform</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceNonSqlTaskOutputInternal.ServerPropertyServerPlatform { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IServerPropertiesInternal)ServerProperty).ServerPlatform; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IServerPropertiesInternal)ServerProperty).ServerPlatform = value; }

        /// <summary>Internal Acessors for ServerPropertyServerVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceNonSqlTaskOutputInternal.ServerPropertyServerVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IServerPropertiesInternal)ServerProperty).ServerVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IServerPropertiesInternal)ServerProperty).ServerVersion = value; }

        /// <summary>Internal Acessors for SourceServerBrandVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceNonSqlTaskOutputInternal.SourceServerBrandVersion { get => this._sourceServerBrandVersion; set { {_sourceServerBrandVersion = value;} } }

        /// <summary>Internal Acessors for ValidationError</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException[] Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceNonSqlTaskOutputInternal.ValidationError { get => this._validationError; set { {_validationError = value;} } }

        /// <summary>Backing field for <see cref="ServerProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IServerProperties _serverProperty;

        /// <summary>Server properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IServerProperties ServerProperty { get => (this._serverProperty = this._serverProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ServerProperties()); }

        /// <summary>Number of databases in the server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public int? ServerPropertyServerDatabaseCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IServerPropertiesInternal)ServerProperty).ServerDatabaseCount; }

        /// <summary>Edition of the database server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string ServerPropertyServerEdition { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IServerPropertiesInternal)ServerProperty).ServerEdition; }

        /// <summary>Name of the server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string ServerPropertyServerName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IServerPropertiesInternal)ServerProperty).ServerName; }

        /// <summary>Version of the operating system</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string ServerPropertyServerOperatingSystemVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IServerPropertiesInternal)ServerProperty).ServerOperatingSystemVersion; }

        /// <summary>Name of the server platform</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string ServerPropertyServerPlatform { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IServerPropertiesInternal)ServerProperty).ServerPlatform; }

        /// <summary>Version of the database server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string ServerPropertyServerVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IServerPropertiesInternal)ServerProperty).ServerVersion; }

        /// <summary>Backing field for <see cref="SourceServerBrandVersion" /> property.</summary>
        private string _sourceServerBrandVersion;

        /// <summary>Server brand version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string SourceServerBrandVersion { get => this._sourceServerBrandVersion; }

        /// <summary>Backing field for <see cref="ValidationError" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException[] _validationError;

        /// <summary>Validation errors associated with the task</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException[] ValidationError { get => this._validationError; }

        /// <summary>Creates an new <see cref="ConnectToSourceNonSqlTaskOutput" /> instance.</summary>
        public ConnectToSourceNonSqlTaskOutput()
        {

        }
    }
    /// Output for connect to MySQL type source
    public partial interface IConnectToSourceNonSqlTaskOutput :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IJsonSerializable
    {
        /// <summary>List of databases on the server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of databases on the server",
        SerializedName = @"databases",
        PossibleTypes = new [] { typeof(string) })]
        string[] Database { get;  }
        /// <summary>Result identifier</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Result identifier",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get;  }
        /// <summary>Number of databases in the server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Number of databases in the server",
        SerializedName = @"serverDatabaseCount",
        PossibleTypes = new [] { typeof(int) })]
        int? ServerPropertyServerDatabaseCount { get;  }
        /// <summary>Edition of the database server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Edition of the database server",
        SerializedName = @"serverEdition",
        PossibleTypes = new [] { typeof(string) })]
        string ServerPropertyServerEdition { get;  }
        /// <summary>Name of the server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Name of the server",
        SerializedName = @"serverName",
        PossibleTypes = new [] { typeof(string) })]
        string ServerPropertyServerName { get;  }
        /// <summary>Version of the operating system</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Version of the operating system",
        SerializedName = @"serverOperatingSystemVersion",
        PossibleTypes = new [] { typeof(string) })]
        string ServerPropertyServerOperatingSystemVersion { get;  }
        /// <summary>Name of the server platform</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Name of the server platform",
        SerializedName = @"serverPlatform",
        PossibleTypes = new [] { typeof(string) })]
        string ServerPropertyServerPlatform { get;  }
        /// <summary>Version of the database server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Version of the database server",
        SerializedName = @"serverVersion",
        PossibleTypes = new [] { typeof(string) })]
        string ServerPropertyServerVersion { get;  }
        /// <summary>Server brand version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Server brand version",
        SerializedName = @"sourceServerBrandVersion",
        PossibleTypes = new [] { typeof(string) })]
        string SourceServerBrandVersion { get;  }
        /// <summary>Validation errors associated with the task</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Validation errors associated with the task",
        SerializedName = @"validationErrors",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException[] ValidationError { get;  }

    }
    /// Output for connect to MySQL type source
    internal partial interface IConnectToSourceNonSqlTaskOutputInternal

    {
        /// <summary>List of databases on the server</summary>
        string[] Database { get; set; }
        /// <summary>Result identifier</summary>
        string Id { get; set; }
        /// <summary>Server properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IServerProperties ServerProperty { get; set; }
        /// <summary>Number of databases in the server</summary>
        int? ServerPropertyServerDatabaseCount { get; set; }
        /// <summary>Edition of the database server</summary>
        string ServerPropertyServerEdition { get; set; }
        /// <summary>Name of the server</summary>
        string ServerPropertyServerName { get; set; }
        /// <summary>Version of the operating system</summary>
        string ServerPropertyServerOperatingSystemVersion { get; set; }
        /// <summary>Name of the server platform</summary>
        string ServerPropertyServerPlatform { get; set; }
        /// <summary>Version of the database server</summary>
        string ServerPropertyServerVersion { get; set; }
        /// <summary>Server brand version</summary>
        string SourceServerBrandVersion { get; set; }
        /// <summary>Validation errors associated with the task</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IReportableException[] ValidationError { get; set; }

    }
}