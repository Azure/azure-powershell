// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Extensions;

    /// <summary>
    /// Input for task that migrates SQL Server databases to Azure SQL Database Managed Instance online scenario.
    /// </summary>
    public partial class SqlServerSqlMiSyncTaskInput :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlServerSqlMiSyncTaskInput,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlServerSqlMiSyncTaskInputInternal
    {

        /// <summary>Backing field for <see cref="AzureApp" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IAzureActiveDirectoryApp _azureApp;

        /// <summary>
        /// Azure Active Directory Application the DMS instance will use to connect to the target instance of Azure SQL Database Managed
        /// Instance and the Azure Storage Account
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IAzureActiveDirectoryApp AzureApp { get => (this._azureApp = this._azureApp ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.AzureActiveDirectoryApp()); set => this._azureApp = value; }

        /// <summary>Application ID of the Azure Active Directory Application</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string AzureAppApplicationId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IAzureActiveDirectoryAppInternal)AzureApp).ApplicationId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IAzureActiveDirectoryAppInternal)AzureApp).ApplicationId = value ?? null; }

        /// <summary>Ignore checking azure permissions on the AAD app</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public bool? AzureAppIgnoreAzurePermission { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IAzureActiveDirectoryAppInternal)AzureApp).IgnoreAzurePermission; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IAzureActiveDirectoryAppInternal)AzureApp).IgnoreAzurePermission = value ?? default(bool); }

        /// <summary>Key used to authenticate to the Azure Active Directory Application</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string AzureAppKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IAzureActiveDirectoryAppInternal)AzureApp).AppKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IAzureActiveDirectoryAppInternal)AzureApp).AppKey = value ?? null; }

        /// <summary>Tenant id of the customer</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string AzureAppTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IAzureActiveDirectoryAppInternal)AzureApp).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IAzureActiveDirectoryAppInternal)AzureApp).TenantId = value ?? null; }

        /// <summary>Backing field for <see cref="BackupFileShare" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IFileShare _backupFileShare;

        /// <summary>Backup file share information for all selected databases.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IFileShare BackupFileShare { get => (this._backupFileShare = this._backupFileShare ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.FileShare()); set => this._backupFileShare = value; }

        /// <summary>Password credential used to connect to the share location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string BackupFileSharePassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IFileShareInternal)BackupFileShare).Password; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IFileShareInternal)BackupFileShare).Password = value ?? null; }

        /// <summary>The folder path for this share.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string BackupFileSharePath { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IFileShareInternal)BackupFileShare).Path; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IFileShareInternal)BackupFileShare).Path = value ?? null; }

        /// <summary>User name credential to connect to the share location</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string BackupFileShareUserName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IFileShareInternal)BackupFileShare).UserName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IFileShareInternal)BackupFileShare).UserName = value ?? null; }

        /// <summary>Internal Acessors for AzureApp</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IAzureActiveDirectoryApp Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlServerSqlMiSyncTaskInputInternal.AzureApp { get => (this._azureApp = this._azureApp ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.AzureActiveDirectoryApp()); set { {_azureApp = value;} } }

        /// <summary>Internal Acessors for BackupFileShare</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IFileShare Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlServerSqlMiSyncTaskInputInternal.BackupFileShare { get => (this._backupFileShare = this._backupFileShare ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.FileShare()); set { {_backupFileShare = value;} } }

        /// <summary>Internal Acessors for SourceConnectionInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlConnectionInfo Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlServerSqlMiSyncTaskInputInternal.SourceConnectionInfo { get => (this._sourceConnectionInfo = this._sourceConnectionInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.SqlConnectionInfo()); set { {_sourceConnectionInfo = value;} } }

        /// <summary>Internal Acessors for TargetConnectionInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMiSqlConnectionInfo Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlServerSqlMiSyncTaskInputInternal.TargetConnectionInfo { get => (this._targetConnectionInfo = this._targetConnectionInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.MiSqlConnectionInfo()); set { {_targetConnectionInfo = value;} } }

        /// <summary>Backing field for <see cref="SelectedDatabase" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlMiDatabaseInput[] _selectedDatabase;

        /// <summary>Databases to migrate</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlMiDatabaseInput[] SelectedDatabase { get => this._selectedDatabase; set => this._selectedDatabase = value; }

        /// <summary>Backing field for <see cref="SourceConnectionInfo" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlConnectionInfo _sourceConnectionInfo;

        /// <summary>Connection information for source SQL Server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlConnectionInfo SourceConnectionInfo { get => (this._sourceConnectionInfo = this._sourceConnectionInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.SqlConnectionInfo()); set => this._sourceConnectionInfo = value; }

        /// <summary>Additional connection settings</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string SourceConnectionInfoAdditionalSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlConnectionInfoInternal)SourceConnectionInfo).AdditionalSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlConnectionInfoInternal)SourceConnectionInfo).AdditionalSetting = value ?? null; }

        /// <summary>Authentication type to use for connection</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.AuthenticationType? SourceConnectionInfoAuthentication { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlConnectionInfoInternal)SourceConnectionInfo).Authentication; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlConnectionInfoInternal)SourceConnectionInfo).Authentication = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.AuthenticationType)""); }

        /// <summary>Data source in the format Protocol:MachineName\SQLServerInstanceName,PortNumber</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string SourceConnectionInfoDataSource { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlConnectionInfoInternal)SourceConnectionInfo).DataSource; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlConnectionInfoInternal)SourceConnectionInfo).DataSource = value ; }

        /// <summary>Whether to encrypt the connection</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public bool? SourceConnectionInfoEncryptConnection { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlConnectionInfoInternal)SourceConnectionInfo).EncryptConnection; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlConnectionInfoInternal)SourceConnectionInfo).EncryptConnection = value ?? default(bool); }

        /// <summary>Password credential.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string SourceConnectionInfoPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectionInfoInternal)SourceConnectionInfo).Password; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectionInfoInternal)SourceConnectionInfo).Password = value ?? null; }

        /// <summary>Server platform type for connection</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.SqlSourcePlatform? SourceConnectionInfoPlatform { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlConnectionInfoInternal)SourceConnectionInfo).Platform; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlConnectionInfoInternal)SourceConnectionInfo).Platform = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.SqlSourcePlatform)""); }

        /// <summary>Port for Server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public int? SourceConnectionInfoPort { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlConnectionInfoInternal)SourceConnectionInfo).Port; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlConnectionInfoInternal)SourceConnectionInfo).Port = value ?? default(int); }

        /// <summary>
        /// Represents the ID of an HTTP resource represented by an Azure resource provider.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string SourceConnectionInfoResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlConnectionInfoInternal)SourceConnectionInfo).ResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlConnectionInfoInternal)SourceConnectionInfo).ResourceId = value ?? null; }

        /// <summary>server brand version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string SourceConnectionInfoServerBrandVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlConnectionInfoInternal)SourceConnectionInfo).ServerBrandVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlConnectionInfoInternal)SourceConnectionInfo).ServerBrandVersion = value ?? null; }

        /// <summary>name of the server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string SourceConnectionInfoServerName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlConnectionInfoInternal)SourceConnectionInfo).ServerName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlConnectionInfoInternal)SourceConnectionInfo).ServerName = value ?? null; }

        /// <summary>server version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string SourceConnectionInfoServerVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlConnectionInfoInternal)SourceConnectionInfo).ServerVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlConnectionInfoInternal)SourceConnectionInfo).ServerVersion = value ?? null; }

        /// <summary>Whether to trust the server certificate</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public bool? SourceConnectionInfoTrustServerCertificate { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlConnectionInfoInternal)SourceConnectionInfo).TrustServerCertificate; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlConnectionInfoInternal)SourceConnectionInfo).TrustServerCertificate = value ?? default(bool); }

        /// <summary>Type of connection info</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string SourceConnectionInfoType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectionInfoInternal)SourceConnectionInfo).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectionInfoInternal)SourceConnectionInfo).Type = value ; }

        /// <summary>User name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string SourceConnectionInfoUserName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectionInfoInternal)SourceConnectionInfo).UserName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectionInfoInternal)SourceConnectionInfo).UserName = value ?? null; }

        /// <summary>Backing field for <see cref="StorageResourceId" /> property.</summary>
        private string _storageResourceId;

        /// <summary>Fully qualified resourceId of storage</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string StorageResourceId { get => this._storageResourceId; set => this._storageResourceId = value; }

        /// <summary>Backing field for <see cref="TargetConnectionInfo" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMiSqlConnectionInfo _targetConnectionInfo;

        /// <summary>Connection information for Azure SQL Database Managed Instance</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMiSqlConnectionInfo TargetConnectionInfo { get => (this._targetConnectionInfo = this._targetConnectionInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.MiSqlConnectionInfo()); set => this._targetConnectionInfo = value; }

        /// <summary>Resource id for Azure SQL database Managed instance</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string TargetConnectionInfoManagedInstanceResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMiSqlConnectionInfoInternal)TargetConnectionInfo).ManagedInstanceResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMiSqlConnectionInfoInternal)TargetConnectionInfo).ManagedInstanceResourceId = value ; }

        /// <summary>Password credential.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string TargetConnectionInfoPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectionInfoInternal)TargetConnectionInfo).Password; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectionInfoInternal)TargetConnectionInfo).Password = value ?? null; }

        /// <summary>Type of connection info</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string TargetConnectionInfoType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectionInfoInternal)TargetConnectionInfo).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectionInfoInternal)TargetConnectionInfo).Type = value ; }

        /// <summary>User name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string TargetConnectionInfoUserName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectionInfoInternal)TargetConnectionInfo).UserName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectionInfoInternal)TargetConnectionInfo).UserName = value ?? null; }

        /// <summary>Creates an new <see cref="SqlServerSqlMiSyncTaskInput" /> instance.</summary>
        public SqlServerSqlMiSyncTaskInput()
        {

        }
    }
    /// Input for task that migrates SQL Server databases to Azure SQL Database Managed Instance online scenario.
    public partial interface ISqlServerSqlMiSyncTaskInput :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IJsonSerializable
    {
        /// <summary>Application ID of the Azure Active Directory Application</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Application ID of the Azure Active Directory Application",
        SerializedName = @"applicationId",
        PossibleTypes = new [] { typeof(string) })]
        string AzureAppApplicationId { get; set; }
        /// <summary>Ignore checking azure permissions on the AAD app</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Ignore checking azure permissions on the AAD app",
        SerializedName = @"ignoreAzurePermissions",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AzureAppIgnoreAzurePermission { get; set; }
        /// <summary>Key used to authenticate to the Azure Active Directory Application</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Key used to authenticate to the Azure Active Directory Application",
        SerializedName = @"appKey",
        PossibleTypes = new [] { typeof(string) })]
        string AzureAppKey { get; set; }
        /// <summary>Tenant id of the customer</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Tenant id of the customer",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string AzureAppTenantId { get; set; }
        /// <summary>Password credential used to connect to the share location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Password credential used to connect to the share location.",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(string) })]
        string BackupFileSharePassword { get; set; }
        /// <summary>The folder path for this share.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The folder path for this share.",
        SerializedName = @"path",
        PossibleTypes = new [] { typeof(string) })]
        string BackupFileSharePath { get; set; }
        /// <summary>User name credential to connect to the share location</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"User name credential to connect to the share location",
        SerializedName = @"userName",
        PossibleTypes = new [] { typeof(string) })]
        string BackupFileShareUserName { get; set; }
        /// <summary>Databases to migrate</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Databases to migrate",
        SerializedName = @"selectedDatabases",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlMiDatabaseInput) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlMiDatabaseInput[] SelectedDatabase { get; set; }
        /// <summary>Additional connection settings</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Additional connection settings",
        SerializedName = @"additionalSettings",
        PossibleTypes = new [] { typeof(string) })]
        string SourceConnectionInfoAdditionalSetting { get; set; }
        /// <summary>Authentication type to use for connection</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Authentication type to use for connection",
        SerializedName = @"authentication",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.AuthenticationType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.AuthenticationType? SourceConnectionInfoAuthentication { get; set; }
        /// <summary>Data source in the format Protocol:MachineName\SQLServerInstanceName,PortNumber</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Data source in the format Protocol:MachineName\SQLServerInstanceName,PortNumber",
        SerializedName = @"dataSource",
        PossibleTypes = new [] { typeof(string) })]
        string SourceConnectionInfoDataSource { get; set; }
        /// <summary>Whether to encrypt the connection</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to encrypt the connection",
        SerializedName = @"encryptConnection",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SourceConnectionInfoEncryptConnection { get; set; }
        /// <summary>Password credential.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Password credential.",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(string) })]
        string SourceConnectionInfoPassword { get; set; }
        /// <summary>Server platform type for connection</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Server platform type for connection",
        SerializedName = @"platform",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.SqlSourcePlatform) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.SqlSourcePlatform? SourceConnectionInfoPlatform { get; set; }
        /// <summary>Port for Server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Port for Server",
        SerializedName = @"port",
        PossibleTypes = new [] { typeof(int) })]
        int? SourceConnectionInfoPort { get; set; }
        /// <summary>
        /// Represents the ID of an HTTP resource represented by an Azure resource provider.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents the ID of an HTTP resource represented by an Azure resource provider.",
        SerializedName = @"resourceId",
        PossibleTypes = new [] { typeof(string) })]
        string SourceConnectionInfoResourceId { get; set; }
        /// <summary>server brand version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"server brand version",
        SerializedName = @"serverBrandVersion",
        PossibleTypes = new [] { typeof(string) })]
        string SourceConnectionInfoServerBrandVersion { get; set; }
        /// <summary>name of the server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"name of the server",
        SerializedName = @"serverName",
        PossibleTypes = new [] { typeof(string) })]
        string SourceConnectionInfoServerName { get; set; }
        /// <summary>server version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"server version",
        SerializedName = @"serverVersion",
        PossibleTypes = new [] { typeof(string) })]
        string SourceConnectionInfoServerVersion { get; set; }
        /// <summary>Whether to trust the server certificate</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to trust the server certificate",
        SerializedName = @"trustServerCertificate",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SourceConnectionInfoTrustServerCertificate { get; set; }
        /// <summary>Type of connection info</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Type of connection info",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string SourceConnectionInfoType { get; set; }
        /// <summary>User name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"User name",
        SerializedName = @"userName",
        PossibleTypes = new [] { typeof(string) })]
        string SourceConnectionInfoUserName { get; set; }
        /// <summary>Fully qualified resourceId of storage</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Fully qualified resourceId of storage",
        SerializedName = @"storageResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string StorageResourceId { get; set; }
        /// <summary>Resource id for Azure SQL database Managed instance</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Resource id for Azure SQL database Managed instance",
        SerializedName = @"managedInstanceResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string TargetConnectionInfoManagedInstanceResourceId { get; set; }
        /// <summary>Password credential.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Password credential.",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(string) })]
        string TargetConnectionInfoPassword { get; set; }
        /// <summary>Type of connection info</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Type of connection info",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string TargetConnectionInfoType { get; set; }
        /// <summary>User name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"User name",
        SerializedName = @"userName",
        PossibleTypes = new [] { typeof(string) })]
        string TargetConnectionInfoUserName { get; set; }

    }
    /// Input for task that migrates SQL Server databases to Azure SQL Database Managed Instance online scenario.
    internal partial interface ISqlServerSqlMiSyncTaskInputInternal

    {
        /// <summary>
        /// Azure Active Directory Application the DMS instance will use to connect to the target instance of Azure SQL Database Managed
        /// Instance and the Azure Storage Account
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IAzureActiveDirectoryApp AzureApp { get; set; }
        /// <summary>Application ID of the Azure Active Directory Application</summary>
        string AzureAppApplicationId { get; set; }
        /// <summary>Ignore checking azure permissions on the AAD app</summary>
        bool? AzureAppIgnoreAzurePermission { get; set; }
        /// <summary>Key used to authenticate to the Azure Active Directory Application</summary>
        string AzureAppKey { get; set; }
        /// <summary>Tenant id of the customer</summary>
        string AzureAppTenantId { get; set; }
        /// <summary>Backup file share information for all selected databases.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IFileShare BackupFileShare { get; set; }
        /// <summary>Password credential used to connect to the share location.</summary>
        string BackupFileSharePassword { get; set; }
        /// <summary>The folder path for this share.</summary>
        string BackupFileSharePath { get; set; }
        /// <summary>User name credential to connect to the share location</summary>
        string BackupFileShareUserName { get; set; }
        /// <summary>Databases to migrate</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlMiDatabaseInput[] SelectedDatabase { get; set; }
        /// <summary>Connection information for source SQL Server</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlConnectionInfo SourceConnectionInfo { get; set; }
        /// <summary>Additional connection settings</summary>
        string SourceConnectionInfoAdditionalSetting { get; set; }
        /// <summary>Authentication type to use for connection</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.AuthenticationType? SourceConnectionInfoAuthentication { get; set; }
        /// <summary>Data source in the format Protocol:MachineName\SQLServerInstanceName,PortNumber</summary>
        string SourceConnectionInfoDataSource { get; set; }
        /// <summary>Whether to encrypt the connection</summary>
        bool? SourceConnectionInfoEncryptConnection { get; set; }
        /// <summary>Password credential.</summary>
        string SourceConnectionInfoPassword { get; set; }
        /// <summary>Server platform type for connection</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.SqlSourcePlatform? SourceConnectionInfoPlatform { get; set; }
        /// <summary>Port for Server</summary>
        int? SourceConnectionInfoPort { get; set; }
        /// <summary>
        /// Represents the ID of an HTTP resource represented by an Azure resource provider.
        /// </summary>
        string SourceConnectionInfoResourceId { get; set; }
        /// <summary>server brand version</summary>
        string SourceConnectionInfoServerBrandVersion { get; set; }
        /// <summary>name of the server</summary>
        string SourceConnectionInfoServerName { get; set; }
        /// <summary>server version</summary>
        string SourceConnectionInfoServerVersion { get; set; }
        /// <summary>Whether to trust the server certificate</summary>
        bool? SourceConnectionInfoTrustServerCertificate { get; set; }
        /// <summary>Type of connection info</summary>
        string SourceConnectionInfoType { get; set; }
        /// <summary>User name</summary>
        string SourceConnectionInfoUserName { get; set; }
        /// <summary>Fully qualified resourceId of storage</summary>
        string StorageResourceId { get; set; }
        /// <summary>Connection information for Azure SQL Database Managed Instance</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMiSqlConnectionInfo TargetConnectionInfo { get; set; }
        /// <summary>Resource id for Azure SQL database Managed instance</summary>
        string TargetConnectionInfoManagedInstanceResourceId { get; set; }
        /// <summary>Password credential.</summary>
        string TargetConnectionInfoPassword { get; set; }
        /// <summary>Type of connection info</summary>
        string TargetConnectionInfoType { get; set; }
        /// <summary>User name</summary>
        string TargetConnectionInfoUserName { get; set; }

    }
}