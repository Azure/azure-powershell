// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Extensions;

    /// <summary>Base class for MongoDB migration outputs</summary>
    public partial class MongoDbProgress :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMongoDbProgress,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMongoDbProgressInternal
    {

        /// <summary>Backing field for <see cref="BytesCopied" /> property.</summary>
        private long _bytesCopied;

        /// <summary>The number of document bytes copied during the Copying stage</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public long BytesCopied { get => this._bytesCopied; set => this._bytesCopied = value; }

        /// <summary>Backing field for <see cref="DocumentsCopied" /> property.</summary>
        private long _documentsCopied;

        /// <summary>The number of documents copied during the Copying stage</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public long DocumentsCopied { get => this._documentsCopied; set => this._documentsCopied = value; }

        /// <summary>Backing field for <see cref="ElapsedTime" /> property.</summary>
        private string _elapsedTime;

        /// <summary>The elapsed time in the format [ddd.]hh:mm:ss[.fffffff] (i.e. TimeSpan format)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string ElapsedTime { get => this._elapsedTime; set => this._elapsedTime = value; }

        /// <summary>Backing field for <see cref="Error" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMongoDbProgressErrors _error;

        /// <summary>
        /// The errors and warnings that have occurred for the current object. The keys are the error codes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMongoDbProgressErrors Error { get => (this._error = this._error ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.MongoDbProgressErrors()); set => this._error = value; }

        /// <summary>Backing field for <see cref="EventsPending" /> property.</summary>
        private long _eventsPending;

        /// <summary>The number of oplog events awaiting replay</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public long EventsPending { get => this._eventsPending; set => this._eventsPending = value; }

        /// <summary>Backing field for <see cref="EventsReplayed" /> property.</summary>
        private long _eventsReplayed;

        /// <summary>The number of oplog events replayed so far</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public long EventsReplayed { get => this._eventsReplayed; set => this._eventsReplayed = value; }

        /// <summary>Backing field for <see cref="LastEventTime" /> property.</summary>
        private global::System.DateTime? _lastEventTime;

        /// <summary>
        /// The timestamp of the last oplog event received, or null if no oplog event has been received yet
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public global::System.DateTime? LastEventTime { get => this._lastEventTime; set => this._lastEventTime = value; }

        /// <summary>Backing field for <see cref="LastReplayTime" /> property.</summary>
        private global::System.DateTime? _lastReplayTime;

        /// <summary>
        /// The timestamp of the last oplog event replayed, or null if no oplog event has been replayed yet
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public global::System.DateTime? LastReplayTime { get => this._lastReplayTime; set => this._lastReplayTime = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>
        /// The name of the progress object. For a collection, this is the unqualified collection name. For a database, this is the
        /// database name. For the overall migration, this is null.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="QualifiedName" /> property.</summary>
        private string _qualifiedName;

        /// <summary>
        /// The qualified name of the progress object. For a collection, this is the database-qualified name. For a database, this
        /// is the database name. For the overall migration, this is null.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string QualifiedName { get => this._qualifiedName; set => this._qualifiedName = value; }

        /// <summary>Backing field for <see cref="ResultType" /> property.</summary>
        private string _resultType;

        /// <summary>The type of progress object</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string ResultType { get => this._resultType; set => this._resultType = value; }

        /// <summary>Backing field for <see cref="State" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.MongoDbMigrationState _state;

        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.MongoDbMigrationState State { get => this._state; set => this._state = value; }

        /// <summary>Backing field for <see cref="TotalByte" /> property.</summary>
        private long _totalByte;

        /// <summary>
        /// The total number of document bytes on the source at the beginning of the Copying stage, or -1 if the total size was unknown
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public long TotalByte { get => this._totalByte; set => this._totalByte = value; }

        /// <summary>Backing field for <see cref="TotalDocument" /> property.</summary>
        private long _totalDocument;

        /// <summary>
        /// The total number of documents on the source at the beginning of the Copying stage, or -1 if the total count was unknown
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public long TotalDocument { get => this._totalDocument; set => this._totalDocument = value; }

        /// <summary>Creates an new <see cref="MongoDbProgress" /> instance.</summary>
        public MongoDbProgress()
        {

        }
    }
    /// Base class for MongoDB migration outputs
    public partial interface IMongoDbProgress :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IJsonSerializable
    {
        /// <summary>The number of document bytes copied during the Copying stage</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The number of document bytes copied during the Copying stage",
        SerializedName = @"bytesCopied",
        PossibleTypes = new [] { typeof(long) })]
        long BytesCopied { get; set; }
        /// <summary>The number of documents copied during the Copying stage</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The number of documents copied during the Copying stage",
        SerializedName = @"documentsCopied",
        PossibleTypes = new [] { typeof(long) })]
        long DocumentsCopied { get; set; }
        /// <summary>The elapsed time in the format [ddd.]hh:mm:ss[.fffffff] (i.e. TimeSpan format)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The elapsed time in the format [ddd.]hh:mm:ss[.fffffff] (i.e. TimeSpan format)",
        SerializedName = @"elapsedTime",
        PossibleTypes = new [] { typeof(string) })]
        string ElapsedTime { get; set; }
        /// <summary>
        /// The errors and warnings that have occurred for the current object. The keys are the error codes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The errors and warnings that have occurred for the current object. The keys are the error codes.",
        SerializedName = @"errors",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMongoDbProgressErrors) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMongoDbProgressErrors Error { get; set; }
        /// <summary>The number of oplog events awaiting replay</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The number of oplog events awaiting replay",
        SerializedName = @"eventsPending",
        PossibleTypes = new [] { typeof(long) })]
        long EventsPending { get; set; }
        /// <summary>The number of oplog events replayed so far</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The number of oplog events replayed so far",
        SerializedName = @"eventsReplayed",
        PossibleTypes = new [] { typeof(long) })]
        long EventsReplayed { get; set; }
        /// <summary>
        /// The timestamp of the last oplog event received, or null if no oplog event has been received yet
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp of the last oplog event received, or null if no oplog event has been received yet",
        SerializedName = @"lastEventTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastEventTime { get; set; }
        /// <summary>
        /// The timestamp of the last oplog event replayed, or null if no oplog event has been replayed yet
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp of the last oplog event replayed, or null if no oplog event has been replayed yet",
        SerializedName = @"lastReplayTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastReplayTime { get; set; }
        /// <summary>
        /// The name of the progress object. For a collection, this is the unqualified collection name. For a database, this is the
        /// database name. For the overall migration, this is null.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the progress object. For a collection, this is the unqualified collection name. For a database, this is the database name. For the overall migration, this is null.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>
        /// The qualified name of the progress object. For a collection, this is the database-qualified name. For a database, this
        /// is the database name. For the overall migration, this is null.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The qualified name of the progress object. For a collection, this is the database-qualified name. For a database, this is the database name. For the overall migration, this is null.",
        SerializedName = @"qualifiedName",
        PossibleTypes = new [] { typeof(string) })]
        string QualifiedName { get; set; }
        /// <summary>The type of progress object</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The type of progress object",
        SerializedName = @"resultType",
        PossibleTypes = new [] { typeof(string) })]
        string ResultType { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.MongoDbMigrationState) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.MongoDbMigrationState State { get; set; }
        /// <summary>
        /// The total number of document bytes on the source at the beginning of the Copying stage, or -1 if the total size was unknown
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The total number of document bytes on the source at the beginning of the Copying stage, or -1 if the total size was unknown",
        SerializedName = @"totalBytes",
        PossibleTypes = new [] { typeof(long) })]
        long TotalByte { get; set; }
        /// <summary>
        /// The total number of documents on the source at the beginning of the Copying stage, or -1 if the total count was unknown
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The total number of documents on the source at the beginning of the Copying stage, or -1 if the total count was unknown",
        SerializedName = @"totalDocuments",
        PossibleTypes = new [] { typeof(long) })]
        long TotalDocument { get; set; }

    }
    /// Base class for MongoDB migration outputs
    internal partial interface IMongoDbProgressInternal

    {
        /// <summary>The number of document bytes copied during the Copying stage</summary>
        long BytesCopied { get; set; }
        /// <summary>The number of documents copied during the Copying stage</summary>
        long DocumentsCopied { get; set; }
        /// <summary>The elapsed time in the format [ddd.]hh:mm:ss[.fffffff] (i.e. TimeSpan format)</summary>
        string ElapsedTime { get; set; }
        /// <summary>
        /// The errors and warnings that have occurred for the current object. The keys are the error codes.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMongoDbProgressErrors Error { get; set; }
        /// <summary>The number of oplog events awaiting replay</summary>
        long EventsPending { get; set; }
        /// <summary>The number of oplog events replayed so far</summary>
        long EventsReplayed { get; set; }
        /// <summary>
        /// The timestamp of the last oplog event received, or null if no oplog event has been received yet
        /// </summary>
        global::System.DateTime? LastEventTime { get; set; }
        /// <summary>
        /// The timestamp of the last oplog event replayed, or null if no oplog event has been replayed yet
        /// </summary>
        global::System.DateTime? LastReplayTime { get; set; }
        /// <summary>
        /// The name of the progress object. For a collection, this is the unqualified collection name. For a database, this is the
        /// database name. For the overall migration, this is null.
        /// </summary>
        string Name { get; set; }
        /// <summary>
        /// The qualified name of the progress object. For a collection, this is the database-qualified name. For a database, this
        /// is the database name. For the overall migration, this is null.
        /// </summary>
        string QualifiedName { get; set; }
        /// <summary>The type of progress object</summary>
        string ResultType { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.MongoDbMigrationState State { get; set; }
        /// <summary>
        /// The total number of document bytes on the source at the beginning of the Copying stage, or -1 if the total size was unknown
        /// </summary>
        long TotalByte { get; set; }
        /// <summary>
        /// The total number of documents on the source at the beginning of the Copying stage, or -1 if the total count was unknown
        /// </summary>
        long TotalDocument { get; set; }

    }
}