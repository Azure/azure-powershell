// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Extensions;

    /// <summary>Database specific information for SQL to Azure SQL DB migration task inputs</summary>
    public partial class MigrateSqlServerSqlDbDatabaseInput :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbDatabaseInput,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbDatabaseInputInternal
    {

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>id of the database</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string Id { get => this._id; set => this._id = value; }

        /// <summary>Backing field for <see cref="MakeSourceDbReadOnly" /> property.</summary>
        private bool? _makeSourceDbReadOnly;

        /// <summary>Whether to set database read only before migration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public bool? MakeSourceDbReadOnly { get => this._makeSourceDbReadOnly; set => this._makeSourceDbReadOnly = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Name of the database</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="SchemaSetting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.IAny _schemaSetting;

        /// <summary>Settings selected for DB schema migration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.IAny SchemaSetting { get => (this._schemaSetting = this._schemaSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Any()); set => this._schemaSetting = value; }

        /// <summary>Backing field for <see cref="TableMap" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbDatabaseInputTableMap _tableMap;

        /// <summary>Mapping of source to target tables</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbDatabaseInputTableMap TableMap { get => (this._tableMap = this._tableMap ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.MigrateSqlServerSqlDbDatabaseInputTableMap()); set => this._tableMap = value; }

        /// <summary>Backing field for <see cref="TargetDatabaseName" /> property.</summary>
        private string _targetDatabaseName;

        /// <summary>
        /// Name of target database. Note: Target database will be truncated before starting migration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string TargetDatabaseName { get => this._targetDatabaseName; set => this._targetDatabaseName = value; }

        /// <summary>Creates an new <see cref="MigrateSqlServerSqlDbDatabaseInput" /> instance.</summary>
        public MigrateSqlServerSqlDbDatabaseInput()
        {

        }
    }
    /// Database specific information for SQL to Azure SQL DB migration task inputs
    public partial interface IMigrateSqlServerSqlDbDatabaseInput :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IJsonSerializable
    {
        /// <summary>id of the database</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"id of the database",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get; set; }
        /// <summary>Whether to set database read only before migration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to set database read only before migration",
        SerializedName = @"makeSourceDbReadOnly",
        PossibleTypes = new [] { typeof(bool) })]
        bool? MakeSourceDbReadOnly { get; set; }
        /// <summary>Name of the database</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the database",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>Settings selected for DB schema migration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Settings selected for DB schema migration.",
        SerializedName = @"schemaSetting",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.IAny SchemaSetting { get; set; }
        /// <summary>Mapping of source to target tables</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Mapping of source to target tables",
        SerializedName = @"tableMap",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbDatabaseInputTableMap) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbDatabaseInputTableMap TableMap { get; set; }
        /// <summary>
        /// Name of target database. Note: Target database will be truncated before starting migration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of target database. Note: Target database will be truncated before starting migration.",
        SerializedName = @"targetDatabaseName",
        PossibleTypes = new [] { typeof(string) })]
        string TargetDatabaseName { get; set; }

    }
    /// Database specific information for SQL to Azure SQL DB migration task inputs
    internal partial interface IMigrateSqlServerSqlDbDatabaseInputInternal

    {
        /// <summary>id of the database</summary>
        string Id { get; set; }
        /// <summary>Whether to set database read only before migration</summary>
        bool? MakeSourceDbReadOnly { get; set; }
        /// <summary>Name of the database</summary>
        string Name { get; set; }
        /// <summary>Settings selected for DB schema migration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.IAny SchemaSetting { get; set; }
        /// <summary>Mapping of source to target tables</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlDbDatabaseInputTableMap TableMap { get; set; }
        /// <summary>
        /// Name of target database. Note: Target database will be truncated before starting migration.
        /// </summary>
        string TargetDatabaseName { get; set; }

    }
}