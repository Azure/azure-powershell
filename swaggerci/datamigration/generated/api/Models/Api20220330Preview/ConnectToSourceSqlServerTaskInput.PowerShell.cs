// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview
{
    using Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.PowerShell;

    /// <summary>
    /// Input for the task that validates connection to SQL Server and also validates source server requirements
    /// </summary>
    [System.ComponentModel.TypeConverter(typeof(ConnectToSourceSqlServerTaskInputTypeConverter))]
    public partial class ConnectToSourceSqlServerTaskInput
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ConnectToSourceSqlServerTaskInput"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal ConnectToSourceSqlServerTaskInput(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("SourceConnectionInfo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfo = (Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlConnectionInfo) content.GetValueForProperty("SourceConnectionInfo",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfo, Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.SqlConnectionInfoTypeConverter.ConvertFrom);
            }
            if (content.Contains("CheckPermissionsGroup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).CheckPermissionsGroup = (Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.ServerLevelPermissionsGroup?) content.GetValueForProperty("CheckPermissionsGroup",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).CheckPermissionsGroup, Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.ServerLevelPermissionsGroup.CreateFrom);
            }
            if (content.Contains("CollectDatabase"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).CollectDatabase = (bool?) content.GetValueForProperty("CollectDatabase",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).CollectDatabase, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CollectLogin"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).CollectLogin = (bool?) content.GetValueForProperty("CollectLogin",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).CollectLogin, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CollectAgentJob"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).CollectAgentJob = (bool?) content.GetValueForProperty("CollectAgentJob",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).CollectAgentJob, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CollectTdeCertificateInfo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).CollectTdeCertificateInfo = (bool?) content.GetValueForProperty("CollectTdeCertificateInfo",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).CollectTdeCertificateInfo, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ValidateSsisCatalogOnly"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).ValidateSsisCatalogOnly = (bool?) content.GetValueForProperty("ValidateSsisCatalogOnly",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).ValidateSsisCatalogOnly, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EncryptedKeyForSecureField"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).EncryptedKeyForSecureField = (string) content.GetValueForProperty("EncryptedKeyForSecureField",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).EncryptedKeyForSecureField, global::System.Convert.ToString);
            }
            if (content.Contains("SourceConnectionInfoType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoType = (string) content.GetValueForProperty("SourceConnectionInfoType",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoType, global::System.Convert.ToString);
            }
            if (content.Contains("SourceConnectionInfoUserName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoUserName = (string) content.GetValueForProperty("SourceConnectionInfoUserName",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoUserName, global::System.Convert.ToString);
            }
            if (content.Contains("SourceConnectionInfoPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoPassword = (string) content.GetValueForProperty("SourceConnectionInfoPassword",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoPassword, global::System.Convert.ToString);
            }
            if (content.Contains("SourceConnectionInfoDataSource"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoDataSource = (string) content.GetValueForProperty("SourceConnectionInfoDataSource",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoDataSource, global::System.Convert.ToString);
            }
            if (content.Contains("SourceConnectionInfoServerName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoServerName = (string) content.GetValueForProperty("SourceConnectionInfoServerName",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoServerName, global::System.Convert.ToString);
            }
            if (content.Contains("SourceConnectionInfoPort"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoPort = (int?) content.GetValueForProperty("SourceConnectionInfoPort",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoPort, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SourceConnectionInfoServerVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoServerVersion = (string) content.GetValueForProperty("SourceConnectionInfoServerVersion",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoServerVersion, global::System.Convert.ToString);
            }
            if (content.Contains("SourceConnectionInfoServerBrandVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoServerBrandVersion = (string) content.GetValueForProperty("SourceConnectionInfoServerBrandVersion",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoServerBrandVersion, global::System.Convert.ToString);
            }
            if (content.Contains("SourceConnectionInfoResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoResourceId = (string) content.GetValueForProperty("SourceConnectionInfoResourceId",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("SourceConnectionInfoAuthentication"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoAuthentication = (Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.AuthenticationType?) content.GetValueForProperty("SourceConnectionInfoAuthentication",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoAuthentication, Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.AuthenticationType.CreateFrom);
            }
            if (content.Contains("SourceConnectionInfoEncryptConnection"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoEncryptConnection = (bool?) content.GetValueForProperty("SourceConnectionInfoEncryptConnection",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoEncryptConnection, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("SourceConnectionInfoAdditionalSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoAdditionalSetting = (string) content.GetValueForProperty("SourceConnectionInfoAdditionalSetting",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoAdditionalSetting, global::System.Convert.ToString);
            }
            if (content.Contains("SourceConnectionInfoTrustServerCertificate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoTrustServerCertificate = (bool?) content.GetValueForProperty("SourceConnectionInfoTrustServerCertificate",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoTrustServerCertificate, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("SourceConnectionInfoPlatform"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoPlatform = (Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.SqlSourcePlatform?) content.GetValueForProperty("SourceConnectionInfoPlatform",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoPlatform, Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.SqlSourcePlatform.CreateFrom);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ConnectToSourceSqlServerTaskInput"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal ConnectToSourceSqlServerTaskInput(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("SourceConnectionInfo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfo = (Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlConnectionInfo) content.GetValueForProperty("SourceConnectionInfo",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfo, Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.SqlConnectionInfoTypeConverter.ConvertFrom);
            }
            if (content.Contains("CheckPermissionsGroup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).CheckPermissionsGroup = (Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.ServerLevelPermissionsGroup?) content.GetValueForProperty("CheckPermissionsGroup",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).CheckPermissionsGroup, Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.ServerLevelPermissionsGroup.CreateFrom);
            }
            if (content.Contains("CollectDatabase"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).CollectDatabase = (bool?) content.GetValueForProperty("CollectDatabase",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).CollectDatabase, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CollectLogin"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).CollectLogin = (bool?) content.GetValueForProperty("CollectLogin",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).CollectLogin, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CollectAgentJob"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).CollectAgentJob = (bool?) content.GetValueForProperty("CollectAgentJob",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).CollectAgentJob, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CollectTdeCertificateInfo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).CollectTdeCertificateInfo = (bool?) content.GetValueForProperty("CollectTdeCertificateInfo",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).CollectTdeCertificateInfo, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ValidateSsisCatalogOnly"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).ValidateSsisCatalogOnly = (bool?) content.GetValueForProperty("ValidateSsisCatalogOnly",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).ValidateSsisCatalogOnly, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EncryptedKeyForSecureField"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).EncryptedKeyForSecureField = (string) content.GetValueForProperty("EncryptedKeyForSecureField",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).EncryptedKeyForSecureField, global::System.Convert.ToString);
            }
            if (content.Contains("SourceConnectionInfoType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoType = (string) content.GetValueForProperty("SourceConnectionInfoType",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoType, global::System.Convert.ToString);
            }
            if (content.Contains("SourceConnectionInfoUserName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoUserName = (string) content.GetValueForProperty("SourceConnectionInfoUserName",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoUserName, global::System.Convert.ToString);
            }
            if (content.Contains("SourceConnectionInfoPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoPassword = (string) content.GetValueForProperty("SourceConnectionInfoPassword",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoPassword, global::System.Convert.ToString);
            }
            if (content.Contains("SourceConnectionInfoDataSource"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoDataSource = (string) content.GetValueForProperty("SourceConnectionInfoDataSource",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoDataSource, global::System.Convert.ToString);
            }
            if (content.Contains("SourceConnectionInfoServerName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoServerName = (string) content.GetValueForProperty("SourceConnectionInfoServerName",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoServerName, global::System.Convert.ToString);
            }
            if (content.Contains("SourceConnectionInfoPort"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoPort = (int?) content.GetValueForProperty("SourceConnectionInfoPort",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoPort, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SourceConnectionInfoServerVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoServerVersion = (string) content.GetValueForProperty("SourceConnectionInfoServerVersion",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoServerVersion, global::System.Convert.ToString);
            }
            if (content.Contains("SourceConnectionInfoServerBrandVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoServerBrandVersion = (string) content.GetValueForProperty("SourceConnectionInfoServerBrandVersion",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoServerBrandVersion, global::System.Convert.ToString);
            }
            if (content.Contains("SourceConnectionInfoResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoResourceId = (string) content.GetValueForProperty("SourceConnectionInfoResourceId",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("SourceConnectionInfoAuthentication"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoAuthentication = (Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.AuthenticationType?) content.GetValueForProperty("SourceConnectionInfoAuthentication",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoAuthentication, Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.AuthenticationType.CreateFrom);
            }
            if (content.Contains("SourceConnectionInfoEncryptConnection"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoEncryptConnection = (bool?) content.GetValueForProperty("SourceConnectionInfoEncryptConnection",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoEncryptConnection, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("SourceConnectionInfoAdditionalSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoAdditionalSetting = (string) content.GetValueForProperty("SourceConnectionInfoAdditionalSetting",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoAdditionalSetting, global::System.Convert.ToString);
            }
            if (content.Contains("SourceConnectionInfoTrustServerCertificate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoTrustServerCertificate = (bool?) content.GetValueForProperty("SourceConnectionInfoTrustServerCertificate",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoTrustServerCertificate, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("SourceConnectionInfoPlatform"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoPlatform = (Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.SqlSourcePlatform?) content.GetValueForProperty("SourceConnectionInfoPlatform",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInputInternal)this).SourceConnectionInfoPlatform, Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.SqlSourcePlatform.CreateFrom);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ConnectToSourceSqlServerTaskInput"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInput"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInput DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new ConnectToSourceSqlServerTaskInput(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ConnectToSourceSqlServerTaskInput"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInput"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInput DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new ConnectToSourceSqlServerTaskInput(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="ConnectToSourceSqlServerTaskInput" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="className" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IConnectToSourceSqlServerTaskInput FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Input for the task that validates connection to SQL Server and also validates source server requirements
    [System.ComponentModel.TypeConverter(typeof(ConnectToSourceSqlServerTaskInputTypeConverter))]
    public partial interface IConnectToSourceSqlServerTaskInput

    {

    }
}