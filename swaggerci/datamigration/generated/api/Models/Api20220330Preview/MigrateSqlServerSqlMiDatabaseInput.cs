// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Extensions;

    /// <summary>
    /// Database specific information for SQL to Azure SQL DB Managed Instance migration task inputs
    /// </summary>
    public partial class MigrateSqlServerSqlMiDatabaseInput :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlMiDatabaseInput,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlMiDatabaseInputInternal
    {

        /// <summary>Backing field for <see cref="BackupFilePath" /> property.</summary>
        private string[] _backupFilePath;

        /// <summary>The list of backup files to be used in case of existing backups.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string[] BackupFilePath { get => this._backupFilePath; set => this._backupFilePath = value; }

        /// <summary>Backing field for <see cref="BackupFileShare" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IFileShare _backupFileShare;

        /// <summary>Backup file share information for backing up this database.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IFileShare BackupFileShare { get => (this._backupFileShare = this._backupFileShare ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.FileShare()); set => this._backupFileShare = value; }

        /// <summary>Password credential used to connect to the share location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string BackupFileSharePassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IFileShareInternal)BackupFileShare).Password; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IFileShareInternal)BackupFileShare).Password = value ?? null; }

        /// <summary>The folder path for this share.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string BackupFileSharePath { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IFileShareInternal)BackupFileShare).Path; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IFileShareInternal)BackupFileShare).Path = value ?? null; }

        /// <summary>User name credential to connect to the share location</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string BackupFileShareUserName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IFileShareInternal)BackupFileShare).UserName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IFileShareInternal)BackupFileShare).UserName = value ?? null; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>id of the database</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string Id { get => this._id; set => this._id = value; }

        /// <summary>Internal Acessors for BackupFileShare</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IFileShare Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IMigrateSqlServerSqlMiDatabaseInputInternal.BackupFileShare { get => (this._backupFileShare = this._backupFileShare ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.FileShare()); set { {_backupFileShare = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Name of the database</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="RestoreDatabaseName" /> property.</summary>
        private string _restoreDatabaseName;

        /// <summary>Name of the database at destination</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string RestoreDatabaseName { get => this._restoreDatabaseName; set => this._restoreDatabaseName = value; }

        /// <summary>Creates an new <see cref="MigrateSqlServerSqlMiDatabaseInput" /> instance.</summary>
        public MigrateSqlServerSqlMiDatabaseInput()
        {

        }
    }
    /// Database specific information for SQL to Azure SQL DB Managed Instance migration task inputs
    public partial interface IMigrateSqlServerSqlMiDatabaseInput :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IJsonSerializable
    {
        /// <summary>The list of backup files to be used in case of existing backups.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of backup files to be used in case of existing backups.",
        SerializedName = @"backupFilePaths",
        PossibleTypes = new [] { typeof(string) })]
        string[] BackupFilePath { get; set; }
        /// <summary>Password credential used to connect to the share location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Password credential used to connect to the share location.",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(string) })]
        string BackupFileSharePassword { get; set; }
        /// <summary>The folder path for this share.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The folder path for this share.",
        SerializedName = @"path",
        PossibleTypes = new [] { typeof(string) })]
        string BackupFileSharePath { get; set; }
        /// <summary>User name credential to connect to the share location</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"User name credential to connect to the share location",
        SerializedName = @"userName",
        PossibleTypes = new [] { typeof(string) })]
        string BackupFileShareUserName { get; set; }
        /// <summary>id of the database</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"id of the database",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get; set; }
        /// <summary>Name of the database</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Name of the database",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>Name of the database at destination</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Name of the database at destination",
        SerializedName = @"restoreDatabaseName",
        PossibleTypes = new [] { typeof(string) })]
        string RestoreDatabaseName { get; set; }

    }
    /// Database specific information for SQL to Azure SQL DB Managed Instance migration task inputs
    internal partial interface IMigrateSqlServerSqlMiDatabaseInputInternal

    {
        /// <summary>The list of backup files to be used in case of existing backups.</summary>
        string[] BackupFilePath { get; set; }
        /// <summary>Backup file share information for backing up this database.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IFileShare BackupFileShare { get; set; }
        /// <summary>Password credential used to connect to the share location.</summary>
        string BackupFileSharePassword { get; set; }
        /// <summary>The folder path for this share.</summary>
        string BackupFileSharePath { get; set; }
        /// <summary>User name credential to connect to the share location</summary>
        string BackupFileShareUserName { get; set; }
        /// <summary>id of the database</summary>
        string Id { get; set; }
        /// <summary>Name of the database</summary>
        string Name { get; set; }
        /// <summary>Name of the database at destination</summary>
        string RestoreDatabaseName { get; set; }

    }
}