// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Extensions;

    /// <summary>Describes a quota for or usage details about a resource</summary>
    public partial class Quota :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IQuota,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IQuotaInternal
    {

        /// <summary>Backing field for <see cref="CurrentValue" /> property.</summary>
        private double? _currentValue;

        /// <summary>
        /// The current value of the quota. If null or missing, the current value cannot be determined in the context of the request.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public double? CurrentValue { get => this._currentValue; set => this._currentValue = value; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>The resource ID of the quota object</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string Id { get => this._id; set => this._id = value; }

        /// <summary>Backing field for <see cref="Limit" /> property.</summary>
        private double? _limit;

        /// <summary>
        /// The maximum value of the quota. If null or missing, the quota has no maximum, in which case it merely tracks usage.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public double? Limit { get => this._limit; set => this._limit = value; }

        /// <summary>Internal Acessors for Name</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IQuotaName Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IQuotaInternal.Name { get => (this._name = this._name ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.QuotaName()); set { {_name = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IQuotaName _name;

        /// <summary>The name of the quota</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IQuotaName Name { get => (this._name = this._name ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.QuotaName()); set => this._name = value; }

        /// <summary>The localized name of the quota</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string NameLocalizedValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IQuotaNameInternal)Name).LocalizedValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IQuotaNameInternal)Name).LocalizedValue = value ?? null; }

        /// <summary>The unlocalized name (or ID) of the quota</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string NameValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IQuotaNameInternal)Name).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IQuotaNameInternal)Name).Value = value ?? null; }

        /// <summary>Backing field for <see cref="Unit" /> property.</summary>
        private string _unit;

        /// <summary>The unit for the quota, such as Count, Bytes, BytesPerSecond, etc.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string Unit { get => this._unit; set => this._unit = value; }

        /// <summary>Creates an new <see cref="Quota" /> instance.</summary>
        public Quota()
        {

        }
    }
    /// Describes a quota for or usage details about a resource
    public partial interface IQuota :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The current value of the quota. If null or missing, the current value cannot be determined in the context of the request.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The current value of the quota. If null or missing, the current value cannot be determined in the context of the request.",
        SerializedName = @"currentValue",
        PossibleTypes = new [] { typeof(double) })]
        double? CurrentValue { get; set; }
        /// <summary>The resource ID of the quota object</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource ID of the quota object",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get; set; }
        /// <summary>
        /// The maximum value of the quota. If null or missing, the quota has no maximum, in which case it merely tracks usage.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum value of the quota. If null or missing, the quota has no maximum, in which case it merely tracks usage.",
        SerializedName = @"limit",
        PossibleTypes = new [] { typeof(double) })]
        double? Limit { get; set; }
        /// <summary>The localized name of the quota</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The localized name of the quota",
        SerializedName = @"localizedValue",
        PossibleTypes = new [] { typeof(string) })]
        string NameLocalizedValue { get; set; }
        /// <summary>The unlocalized name (or ID) of the quota</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The unlocalized name (or ID) of the quota",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(string) })]
        string NameValue { get; set; }
        /// <summary>The unit for the quota, such as Count, Bytes, BytesPerSecond, etc.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The unit for the quota, such as Count, Bytes, BytesPerSecond, etc.",
        SerializedName = @"unit",
        PossibleTypes = new [] { typeof(string) })]
        string Unit { get; set; }

    }
    /// Describes a quota for or usage details about a resource
    internal partial interface IQuotaInternal

    {
        /// <summary>
        /// The current value of the quota. If null or missing, the current value cannot be determined in the context of the request.
        /// </summary>
        double? CurrentValue { get; set; }
        /// <summary>The resource ID of the quota object</summary>
        string Id { get; set; }
        /// <summary>
        /// The maximum value of the quota. If null or missing, the quota has no maximum, in which case it merely tracks usage.
        /// </summary>
        double? Limit { get; set; }
        /// <summary>The name of the quota</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IQuotaName Name { get; set; }
        /// <summary>The localized name of the quota</summary>
        string NameLocalizedValue { get; set; }
        /// <summary>The unlocalized name (or ID) of the quota</summary>
        string NameValue { get; set; }
        /// <summary>The unit for the quota, such as Count, Bytes, BytesPerSecond, etc.</summary>
        string Unit { get; set; }

    }
}