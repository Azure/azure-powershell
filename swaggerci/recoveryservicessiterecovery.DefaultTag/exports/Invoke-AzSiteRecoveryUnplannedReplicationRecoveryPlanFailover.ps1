
# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The operation to start the unplanned failover of a recovery plan.
.Description
The operation to start the unplanned failover of a recovery plan.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Models.Api20230201.IRecoveryPlanUnplannedFailoverInput
.Inputs
Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Models.ISiteRecoveryIdentity
.Outputs
Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Models.Api20230201.IRecoveryPlan
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUT <IRecoveryPlanUnplannedFailoverInput>: Recovery plan unplanned failover input.
  FailoverDirection <PossibleOperationsDirections>: The failover direction.
  SourceSiteOperation <SourceSiteOperations>: A value indicating whether source site operations are required.
  [ProviderSpecificDetail <IRecoveryPlanProviderSpecificFailoverInput[]>]: The provider specific properties.
    InstanceType <String>: The class type.

INPUTOBJECT <ISiteRecoveryIdentity>: Identity Parameter
  [AlertSettingName <String>]: The name of the email notification configuration.
  [EventName <String>]: The name of the Azure Site Recovery event.
  [FabricName <String>]: Fabric name.
  [Id <String>]: Resource identity path
  [IntentObjectName <String>]: Replication protection intent name.
  [JobName <String>]: Job identifier.
  [LogicalNetworkName <String>]: Logical network name.
  [MappingName <String>]: Protection Container mapping name.
  [MigrationItemName <String>]: Migration item name.
  [MigrationRecoveryPointName <String>]: The migration recovery point name.
  [NetworkMappingName <String>]: Network mapping name.
  [NetworkName <String>]: Primary network name.
  [PolicyName <String>]: Replication policy name.
  [ProtectableItemName <String>]: Protectable item name.
  [ProtectionContainerName <String>]: Protection container name.
  [ProviderName <String>]: Recovery services provider name.
  [RecoveryPlanName <String>]: Name of the recovery plan.
  [RecoveryPointName <String>]: The recovery point name.
  [ReplicatedProtectedItemName <String>]: Replication protected item name.
  [ResourceGroupName <String>]: The name of the resource group where the recovery services vault is present.
  [ResourceName <String>]: The name of the recovery services vault.
  [StorageClassificationMappingName <String>]: Storage classification mapping name.
  [StorageClassificationName <String>]: Storage classification name.
  [SubscriptionId <String>]: The subscription Id.
  [VaultSettingName <String>]: Vault setting name.
  [VcenterName <String>]: vcenter name.
  [VirtualMachineName <String>]: Virtual Machine name.

PROVIDERSPECIFICDETAIL <IRecoveryPlanProviderSpecificFailoverInput[]>: The provider specific properties.
  InstanceType <String>: The class type.
.Link
https://learn.microsoft.com/powershell/module/az.siterecovery/invoke-azsiterecoveryunplannedreplicationrecoveryplanfailover
#>
function Invoke-AzSiteRecoveryUnplannedReplicationRecoveryPlanFailover {
[OutputType([Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Models.Api20230201.IRecoveryPlan])]
[CmdletBinding(DefaultParameterSetName='UnplannedExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Unplanned', Mandatory)]
    [Parameter(ParameterSetName='UnplannedExpanded', Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Path')]
    [System.String]
    # Recovery plan name.
    ${RecoveryPlanName},

    [Parameter(ParameterSetName='Unplanned', Mandatory)]
    [Parameter(ParameterSetName='UnplannedExpanded', Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Path')]
    [System.String]
    # The name of the resource group where the recovery services vault is present.
    ${ResourceGroupName},

    [Parameter(ParameterSetName='Unplanned', Mandatory)]
    [Parameter(ParameterSetName='UnplannedExpanded', Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Path')]
    [System.String]
    # The name of the recovery services vault.
    ${ResourceName},

    [Parameter(ParameterSetName='Unplanned')]
    [Parameter(ParameterSetName='UnplannedExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Path')]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Runtime.DefaultInfo(Script='(Get-AzContext).Subscription.Id')]
    [System.String]
    # The subscription Id.
    ${SubscriptionId},

    [Parameter(ParameterSetName='UnplannedViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UnplannedViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Path')]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Models.ISiteRecoveryIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Unplanned', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UnplannedViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Models.Api20230201.IRecoveryPlanUnplannedFailoverInput]
    # Recovery plan unplanned failover input.
    # To construct, see NOTES section for INPUT properties and create a hash table.
    ${Input},

    [Parameter(ParameterSetName='UnplannedExpanded', Mandatory)]
    [Parameter(ParameterSetName='UnplannedViaIdentityExpanded', Mandatory)]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Support.PossibleOperationsDirections])]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Support.PossibleOperationsDirections]
    # The failover direction.
    ${FailoverDirection},

    [Parameter(ParameterSetName='UnplannedExpanded', Mandatory)]
    [Parameter(ParameterSetName='UnplannedViaIdentityExpanded', Mandatory)]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Support.SourceSiteOperations])]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Support.SourceSiteOperations]
    # A value indicating whether source site operations are required.
    ${SourceSiteOperation},

    [Parameter(ParameterSetName='UnplannedExpanded')]
    [Parameter(ParameterSetName='UnplannedViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Models.Api20230201.IRecoveryPlanProviderSpecificFailoverInput[]]
    # The provider specific properties.
    # To construct, see NOTES section for PROVIDERSPECIFICDETAIL properties and create a hash table.
    ${ProviderSpecificDetail},

    [Parameter()]
    [Alias('AzureRMContext', 'AzureCredential')]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Azure')]
    [System.Management.Automation.PSObject]
    # The DefaultProfile parameter is not functional.
    # Use the SubscriptionId parameter when available if executing the cmdlet against a different subscription.
    ${DefaultProfile},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Run the command as a job
    ${AsJob},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Runtime')]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Runtime')]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Run the command asynchronously
    ${NoWait},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        if ($null -eq [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PowerShellVersion) {
            [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PowerShellVersion = $PSVersionTable.PSVersion.ToString()
        }         
        $preTelemetryId = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId
        if ($preTelemetryId -eq '') {
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId =(New-Guid).ToString()
            [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.module]::Instance.Telemetry.Invoke('Create', $MyInvocation, $parameterSet, $PSCmdlet)
        } else {
            $internalCalledCmdlets = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets
            if ($internalCalledCmdlets -eq '') {
                [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets = $MyInvocation.MyCommand.Name
            } else {
                [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets += ',' + $MyInvocation.MyCommand.Name
            }
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = 'internal'
        }

        $mapping = @{
            Unplanned = 'Az.SiteRecovery.private\Invoke-AzSiteRecoveryUnplannedReplicationRecoveryPlanFailover_Unplanned';
            UnplannedExpanded = 'Az.SiteRecovery.private\Invoke-AzSiteRecoveryUnplannedReplicationRecoveryPlanFailover_UnplannedExpanded';
            UnplannedViaIdentity = 'Az.SiteRecovery.private\Invoke-AzSiteRecoveryUnplannedReplicationRecoveryPlanFailover_UnplannedViaIdentity';
            UnplannedViaIdentityExpanded = 'Az.SiteRecovery.private\Invoke-AzSiteRecoveryUnplannedReplicationRecoveryPlanFailover_UnplannedViaIdentityExpanded';
        }
        if (('Unplanned', 'UnplannedExpanded') -contains $parameterSet -and -not $PSBoundParameters.ContainsKey('SubscriptionId')) {
            $PSBoundParameters['SubscriptionId'] = (Get-AzContext).Subscription.Id
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }

    finally {
        $backupTelemetryId = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId
        $backupInternalCalledCmdlets = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
    }

}
end {
    try {
        $steppablePipeline.End()

        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = $backupTelemetryId
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets = $backupInternalCalledCmdlets
        if ($preTelemetryId -eq '') {
            [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.module]::Instance.Telemetry.Invoke('Send', $MyInvocation, $parameterSet, $PSCmdlet)
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        }
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = $preTelemetryId

    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }
} 
}
