// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Extensions;

    /// <summary>availabilityStatus of a resource.</summary>
    public partial class AvailabilityStatus :
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatus,
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusInternal
    {

        /// <summary>
        /// Availability status of the resource. When it is null, this availabilityStatus object represents an availability impacting
        /// event
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.AvailabilityStateValues? AvailabilityState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusPropertiesInternal)Property).AvailabilityState; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusPropertiesInternal)Property).AvailabilityState = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.AvailabilityStateValues)""); }

        /// <summary>
        /// When a context field is set to Platform, this field will reflect if the event was planned or unplanned. If the context
        /// field does not have a value of Platform, then this field will be ignored.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public string Category { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusPropertiesInternal)Property).Category; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusPropertiesInternal)Property).Category = value ?? null; }

        /// <summary>
        /// When an event is created, it can either be triggered by a customer or the platform of the resource and this field will
        /// illustrate that. This field is connected to the category field in this object.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public string Context { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusPropertiesInternal)Property).Context; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusPropertiesInternal)Property).Context = value ?? null; }

        /// <summary>Details of the availability status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public string DetailedStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusPropertiesInternal)Property).DetailedStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusPropertiesInternal)Property).DetailedStatus = value ?? null; }

        /// <summary>
        /// In case of an availability impacting event, it describes the category of a PlatformInitiated health impacting event. Examples
        /// are Planned, Unplanned etc.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public string HealthEventCategory { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusPropertiesInternal)Property).HealthEventCategory; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusPropertiesInternal)Property).HealthEventCategory = value ?? null; }

        /// <summary>
        /// In case of an availability impacting event, it describes where the health impacting event was originated. Examples are
        /// PlatformInitiated, UserInitiated etc.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public string HealthEventCause { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusPropertiesInternal)Property).HealthEventCause; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusPropertiesInternal)Property).HealthEventCause = value ?? null; }

        /// <summary>It is a unique Id that identifies the event</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public string HealthEventId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusPropertiesInternal)Property).HealthEventId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusPropertiesInternal)Property).HealthEventId = value ?? null; }

        /// <summary>
        /// In case of an availability impacting event, it describes when the health impacting event was originated. Examples are
        /// Lifecycle, Downtime, Fault Analysis etc.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public string HealthEventType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusPropertiesInternal)Property).HealthEventType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusPropertiesInternal)Property).HealthEventType = value ?? null; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>Azure Resource Manager Identity for the availabilityStatuses resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Owned)]
        public string Id { get => this._id; set => this._id = value; }

        /// <summary>Backing field for <see cref="Location" /> property.</summary>
        private string _location;

        /// <summary>Azure Resource Manager geo location of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Owned)]
        public string Location { get => this._location; set => this._location = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusProperties Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.AvailabilityStatusProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for RecentlyResolved</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusPropertiesRecentlyResolved Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusInternal.RecentlyResolved { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusPropertiesInternal)Property).RecentlyResolved; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusPropertiesInternal)Property).RecentlyResolved = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>current.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Timestamp for when last change in health status occurred.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public global::System.DateTime? OccuredTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusPropertiesInternal)Property).OccuredTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusPropertiesInternal)Property).OccuredTime = value ?? default(global::System.DateTime); }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusProperties _property;

        /// <summary>Properties of availability state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.AvailabilityStatusProperties()); set => this._property = value; }

        /// <summary>Chronicity of the availability transition.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.ReasonChronicityTypes? ReasonChronicity { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusPropertiesInternal)Property).ReasonChronicity; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusPropertiesInternal)Property).ReasonChronicity = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.ReasonChronicityTypes)""); }

        /// <summary>
        /// When the resource's availabilityState is Unavailable, it describes where the health impacting event was originated. Examples
        /// are planned, unplanned, user initiated or an outage etc.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public string ReasonType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusPropertiesInternal)Property).ReasonType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusPropertiesInternal)Property).ReasonType = value ?? null; }

        /// <summary>Timestamp when the availabilityState changes to Available.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public global::System.DateTime? RecentlyResolvedTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusPropertiesInternal)Property).RecentlyResolvedTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusPropertiesInternal)Property).RecentlyResolvedTime = value ?? default(global::System.DateTime); }

        /// <summary>Timestamp for when the availabilityState changed to Unavailable</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public global::System.DateTime? RecentlyResolvedUnavailableOccuredTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusPropertiesInternal)Property).RecentlyResolvedUnavailableOccuredTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusPropertiesInternal)Property).RecentlyResolvedUnavailableOccuredTime = value ?? default(global::System.DateTime); }

        /// <summary>Brief description of cause of the resource becoming unavailable.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public string RecentlyResolvedUnavailableSummary { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusPropertiesInternal)Property).RecentlyResolvedUnavailableSummary; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusPropertiesInternal)Property).RecentlyResolvedUnavailableSummary = value ?? null; }

        /// <summary>
        /// Lists actions the user can take based on the current availabilityState of the resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IRecommendedAction[] RecommendedAction { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusPropertiesInternal)Property).RecommendedAction; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusPropertiesInternal)Property).RecommendedAction = value ?? null /* arrayOf */; }

        /// <summary>Timestamp for when the health was last checked.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public global::System.DateTime? ReportedTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusPropertiesInternal)Property).ReportedTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusPropertiesInternal)Property).ReportedTime = value ?? default(global::System.DateTime); }

        /// <summary>
        /// When the resource's availabilityState is Unavailable and the reasonType is not User Initiated, it provides the date and
        /// time for when the issue is expected to be resolved.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public global::System.DateTime? ResolutionEta { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusPropertiesInternal)Property).ResolutionEta; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusPropertiesInternal)Property).ResolutionEta = value ?? default(global::System.DateTime); }

        /// <summary>
        /// When the resource's availabilityState is Unavailable, it provides the Timestamp for when the health impacting event was
        /// received.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public global::System.DateTime? RootCauseAttributionTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusPropertiesInternal)Property).RootCauseAttributionTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusPropertiesInternal)Property).RootCauseAttributionTime = value ?? default(global::System.DateTime); }

        /// <summary>
        /// Lists the service impacting events that may be affecting the health of the resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IServiceImpactingEvent[] ServiceImpactingEvent { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusPropertiesInternal)Property).ServiceImpactingEvent; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusPropertiesInternal)Property).ServiceImpactingEvent = value ?? null /* arrayOf */; }

        /// <summary>Summary description of the availability status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public string Summary { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusPropertiesInternal)Property).Summary; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusPropertiesInternal)Property).Summary = value ?? null; }

        /// <summary>Title description of the availability status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public string Title { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusPropertiesInternal)Property).Title; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusPropertiesInternal)Property).Title = value ?? null; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>Microsoft.ResourceHealth/AvailabilityStatuses.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Owned)]
        public string Type { get => this._type; set => this._type = value; }

        /// <summary>Creates an new <see cref="AvailabilityStatus" /> instance.</summary>
        public AvailabilityStatus()
        {

        }
    }
    /// availabilityStatus of a resource.
    public partial interface IAvailabilityStatus :
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Availability status of the resource. When it is null, this availabilityStatus object represents an availability impacting
        /// event
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Availability status of the resource. When it is null, this availabilityStatus object represents an availability impacting event",
        SerializedName = @"availabilityState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.AvailabilityStateValues) })]
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.AvailabilityStateValues? AvailabilityState { get; set; }
        /// <summary>
        /// When a context field is set to Platform, this field will reflect if the event was planned or unplanned. If the context
        /// field does not have a value of Platform, then this field will be ignored.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"When a context field is set to Platform, this field will reflect if the event was planned or unplanned. If the context field does not have a value of Platform, then this field will be ignored.",
        SerializedName = @"category",
        PossibleTypes = new [] { typeof(string) })]
        string Category { get; set; }
        /// <summary>
        /// When an event is created, it can either be triggered by a customer or the platform of the resource and this field will
        /// illustrate that. This field is connected to the category field in this object.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"When an event is created, it can either be triggered by a customer or the platform of the resource and this field will illustrate that. This field is connected to the category field in this object.",
        SerializedName = @"context",
        PossibleTypes = new [] { typeof(string) })]
        string Context { get; set; }
        /// <summary>Details of the availability status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Details of the availability status.",
        SerializedName = @"detailedStatus",
        PossibleTypes = new [] { typeof(string) })]
        string DetailedStatus { get; set; }
        /// <summary>
        /// In case of an availability impacting event, it describes the category of a PlatformInitiated health impacting event. Examples
        /// are Planned, Unplanned etc.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"In case of an availability impacting event, it describes the category of a PlatformInitiated health impacting event. Examples are Planned, Unplanned etc.",
        SerializedName = @"healthEventCategory",
        PossibleTypes = new [] { typeof(string) })]
        string HealthEventCategory { get; set; }
        /// <summary>
        /// In case of an availability impacting event, it describes where the health impacting event was originated. Examples are
        /// PlatformInitiated, UserInitiated etc.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"In case of an availability impacting event, it describes where the health impacting event was originated. Examples are PlatformInitiated, UserInitiated etc.",
        SerializedName = @"healthEventCause",
        PossibleTypes = new [] { typeof(string) })]
        string HealthEventCause { get; set; }
        /// <summary>It is a unique Id that identifies the event</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"It is a unique Id that identifies the event",
        SerializedName = @"healthEventId",
        PossibleTypes = new [] { typeof(string) })]
        string HealthEventId { get; set; }
        /// <summary>
        /// In case of an availability impacting event, it describes when the health impacting event was originated. Examples are
        /// Lifecycle, Downtime, Fault Analysis etc.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"In case of an availability impacting event, it describes when the health impacting event was originated. Examples are Lifecycle, Downtime, Fault Analysis etc.",
        SerializedName = @"healthEventType",
        PossibleTypes = new [] { typeof(string) })]
        string HealthEventType { get; set; }
        /// <summary>Azure Resource Manager Identity for the availabilityStatuses resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Azure Resource Manager Identity for the availabilityStatuses resource.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get; set; }
        /// <summary>Azure Resource Manager geo location of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Azure Resource Manager geo location of the resource.",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string Location { get; set; }
        /// <summary>current.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"current.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>Timestamp for when last change in health status occurred.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Timestamp for when last change in health status occurred.",
        SerializedName = @"occuredTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? OccuredTime { get; set; }
        /// <summary>Chronicity of the availability transition.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Chronicity of the availability transition.",
        SerializedName = @"reasonChronicity",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.ReasonChronicityTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.ReasonChronicityTypes? ReasonChronicity { get; set; }
        /// <summary>
        /// When the resource's availabilityState is Unavailable, it describes where the health impacting event was originated. Examples
        /// are planned, unplanned, user initiated or an outage etc.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"When the resource's availabilityState is Unavailable, it describes where the health impacting event was originated. Examples are planned, unplanned, user initiated or an outage etc.",
        SerializedName = @"reasonType",
        PossibleTypes = new [] { typeof(string) })]
        string ReasonType { get; set; }
        /// <summary>Timestamp when the availabilityState changes to Available.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Timestamp when the availabilityState changes to Available.",
        SerializedName = @"resolvedTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? RecentlyResolvedTime { get; set; }
        /// <summary>Timestamp for when the availabilityState changed to Unavailable</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Timestamp for when the availabilityState changed to Unavailable",
        SerializedName = @"unavailableOccuredTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? RecentlyResolvedUnavailableOccuredTime { get; set; }
        /// <summary>Brief description of cause of the resource becoming unavailable.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Brief description of cause of the resource becoming unavailable.",
        SerializedName = @"unavailableSummary",
        PossibleTypes = new [] { typeof(string) })]
        string RecentlyResolvedUnavailableSummary { get; set; }
        /// <summary>
        /// Lists actions the user can take based on the current availabilityState of the resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Lists actions the user can take based on the current availabilityState of the resource.",
        SerializedName = @"recommendedActions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IRecommendedAction) })]
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IRecommendedAction[] RecommendedAction { get; set; }
        /// <summary>Timestamp for when the health was last checked.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Timestamp for when the health was last checked. ",
        SerializedName = @"reportedTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ReportedTime { get; set; }
        /// <summary>
        /// When the resource's availabilityState is Unavailable and the reasonType is not User Initiated, it provides the date and
        /// time for when the issue is expected to be resolved.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"When the resource's availabilityState is Unavailable and the reasonType is not User Initiated, it provides the date and time for when the issue is expected to be resolved.",
        SerializedName = @"resolutionETA",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ResolutionEta { get; set; }
        /// <summary>
        /// When the resource's availabilityState is Unavailable, it provides the Timestamp for when the health impacting event was
        /// received.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"When the resource's availabilityState is Unavailable, it provides the Timestamp for when the health impacting event was received.",
        SerializedName = @"rootCauseAttributionTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? RootCauseAttributionTime { get; set; }
        /// <summary>
        /// Lists the service impacting events that may be affecting the health of the resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Lists the service impacting events that may be affecting the health of the resource.",
        SerializedName = @"serviceImpactingEvents",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IServiceImpactingEvent) })]
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IServiceImpactingEvent[] ServiceImpactingEvent { get; set; }
        /// <summary>Summary description of the availability status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Summary description of the availability status.",
        SerializedName = @"summary",
        PossibleTypes = new [] { typeof(string) })]
        string Summary { get; set; }
        /// <summary>Title description of the availability status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Title description of the availability status.",
        SerializedName = @"title",
        PossibleTypes = new [] { typeof(string) })]
        string Title { get; set; }
        /// <summary>Microsoft.ResourceHealth/AvailabilityStatuses.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Microsoft.ResourceHealth/AvailabilityStatuses.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get; set; }

    }
    /// availabilityStatus of a resource.
    internal partial interface IAvailabilityStatusInternal

    {
        /// <summary>
        /// Availability status of the resource. When it is null, this availabilityStatus object represents an availability impacting
        /// event
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.AvailabilityStateValues? AvailabilityState { get; set; }
        /// <summary>
        /// When a context field is set to Platform, this field will reflect if the event was planned or unplanned. If the context
        /// field does not have a value of Platform, then this field will be ignored.
        /// </summary>
        string Category { get; set; }
        /// <summary>
        /// When an event is created, it can either be triggered by a customer or the platform of the resource and this field will
        /// illustrate that. This field is connected to the category field in this object.
        /// </summary>
        string Context { get; set; }
        /// <summary>Details of the availability status.</summary>
        string DetailedStatus { get; set; }
        /// <summary>
        /// In case of an availability impacting event, it describes the category of a PlatformInitiated health impacting event. Examples
        /// are Planned, Unplanned etc.
        /// </summary>
        string HealthEventCategory { get; set; }
        /// <summary>
        /// In case of an availability impacting event, it describes where the health impacting event was originated. Examples are
        /// PlatformInitiated, UserInitiated etc.
        /// </summary>
        string HealthEventCause { get; set; }
        /// <summary>It is a unique Id that identifies the event</summary>
        string HealthEventId { get; set; }
        /// <summary>
        /// In case of an availability impacting event, it describes when the health impacting event was originated. Examples are
        /// Lifecycle, Downtime, Fault Analysis etc.
        /// </summary>
        string HealthEventType { get; set; }
        /// <summary>Azure Resource Manager Identity for the availabilityStatuses resource.</summary>
        string Id { get; set; }
        /// <summary>Azure Resource Manager geo location of the resource.</summary>
        string Location { get; set; }
        /// <summary>current.</summary>
        string Name { get; set; }
        /// <summary>Timestamp for when last change in health status occurred.</summary>
        global::System.DateTime? OccuredTime { get; set; }
        /// <summary>Properties of availability state.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusProperties Property { get; set; }
        /// <summary>Chronicity of the availability transition.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.ReasonChronicityTypes? ReasonChronicity { get; set; }
        /// <summary>
        /// When the resource's availabilityState is Unavailable, it describes where the health impacting event was originated. Examples
        /// are planned, unplanned, user initiated or an outage etc.
        /// </summary>
        string ReasonType { get; set; }
        /// <summary>
        /// An annotation describing a change in the availabilityState to Available from Unavailable with a reasonType of type Unplanned
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IAvailabilityStatusPropertiesRecentlyResolved RecentlyResolved { get; set; }
        /// <summary>Timestamp when the availabilityState changes to Available.</summary>
        global::System.DateTime? RecentlyResolvedTime { get; set; }
        /// <summary>Timestamp for when the availabilityState changed to Unavailable</summary>
        global::System.DateTime? RecentlyResolvedUnavailableOccuredTime { get; set; }
        /// <summary>Brief description of cause of the resource becoming unavailable.</summary>
        string RecentlyResolvedUnavailableSummary { get; set; }
        /// <summary>
        /// Lists actions the user can take based on the current availabilityState of the resource.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IRecommendedAction[] RecommendedAction { get; set; }
        /// <summary>Timestamp for when the health was last checked.</summary>
        global::System.DateTime? ReportedTime { get; set; }
        /// <summary>
        /// When the resource's availabilityState is Unavailable and the reasonType is not User Initiated, it provides the date and
        /// time for when the issue is expected to be resolved.
        /// </summary>
        global::System.DateTime? ResolutionEta { get; set; }
        /// <summary>
        /// When the resource's availabilityState is Unavailable, it provides the Timestamp for when the health impacting event was
        /// received.
        /// </summary>
        global::System.DateTime? RootCauseAttributionTime { get; set; }
        /// <summary>
        /// Lists the service impacting events that may be affecting the health of the resource.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IServiceImpactingEvent[] ServiceImpactingEvent { get; set; }
        /// <summary>Summary description of the availability status.</summary>
        string Summary { get; set; }
        /// <summary>Title description of the availability status.</summary>
        string Title { get; set; }
        /// <summary>Microsoft.ResourceHealth/AvailabilityStatuses.</summary>
        string Type { get; set; }

    }
}