// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Extensions;

    /// <summary>Service health event</summary>
    public partial class Event :
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEvent,
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventInternal,
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api30.IResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api30.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api30.Resource();

        /// <summary>Additional information Message</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public string AdditionalInformationMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).AdditionalInformationMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).AdditionalInformationMessage = value ?? null; }

        /// <summary>Article content of event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public string ArticleContent { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).ArticleContent; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).ArticleContent = value ?? null; }

        /// <summary>
        /// Contains the communication message for the event, that could include summary, root cause and other details.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public string Description { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).Description = value ?? null; }

        /// <summary>duration in seconds</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public int? Duration { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).Duration; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).Duration = value ?? default(int); }

        /// <summary>Tells if we want to enable or disable Microsoft Support for this event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public bool? EnableChatWithUs { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).EnableChatWithUs; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).EnableChatWithUs = value ?? default(bool); }

        /// <summary>Tells if we want to enable or disable Microsoft Support for this event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public bool? EnableMicrosoftSupport { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).EnableMicrosoftSupport; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).EnableMicrosoftSupport = value ?? default(bool); }

        /// <summary>Level of event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.EventLevelValues? EventLevel { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).EventLevel; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).EventLevel = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.EventLevelValues)""); }

        /// <summary>Type of event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.EventTypeValues? EventType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).EventType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).EventType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.EventTypeValues)""); }

        /// <summary>The id of the Incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public string ExternalIncidentId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).ExternalIncidentId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).ExternalIncidentId = value ?? null; }

        /// <summary>Frequently asked questions for the service health event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IFaq[] Faq { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).Faq; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).Faq = value ?? null /* arrayOf */; }

        /// <summary>Header text of event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public string Header { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).Header; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).Header = value ?? null; }

        /// <summary>Stage for HIR Document</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public string HirStage { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).HirStage; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).HirStage = value ?? null; }

        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api30.IResourceInternal)__resource).Id; }

        /// <summary>List services impacted by the service health event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IImpact[] Impact { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).Impact; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).Impact = value ?? null /* arrayOf */; }

        /// <summary>It provides the Timestamp for when the health impacting event resolved.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public global::System.DateTime? ImpactMitigationTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).ImpactMitigationTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).ImpactMitigationTime = value ?? default(global::System.DateTime); }

        /// <summary>It provides the Timestamp for when the health impacting event started.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public global::System.DateTime? ImpactStartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).ImpactStartTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).ImpactStartTime = value ?? default(global::System.DateTime); }

        /// <summary>The type of the impact</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public string ImpactType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).ImpactType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).ImpactType = value ?? null; }

        /// <summary>It provides information if the event is High incident rate event or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public bool? IsHir { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).IsHir; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).IsHir = value ?? default(bool); }

        /// <summary>It provides the Timestamp for when the health impacting event was last updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public global::System.DateTime? LastUpdateTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).LastUpdateTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).LastUpdateTime = value ?? default(global::System.DateTime); }

        /// <summary>Level of insight.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.LevelValues? Level { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).Level; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).Level = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.LevelValues)""); }

        /// <summary>Useful links of event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.ILink[] Link { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).Link; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).Link = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for AdditionalInformation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesAdditionalInformation Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventInternal.AdditionalInformation { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).AdditionalInformation; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).AdditionalInformation = value; }

        /// <summary>Internal Acessors for Article</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesArticle Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventInternal.Article { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).Article; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).Article = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventProperties Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.EventProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for RecommendedAction</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesRecommendedActions Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventInternal.RecommendedAction { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).RecommendedAction; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).RecommendedAction = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api30.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api30.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api30.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api30.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api30.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api30.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api30.ISystemData Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api30.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api30.IResourceInternal)__resource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api30.IResourceInternal)__resource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api30.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api30.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api30.IResourceInternal)__resource).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api30.IResourceInternal)__resource).Name; }

        /// <summary>Is true if the event is platform initiated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public bool? PlatformInitiated { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).PlatformInitiated; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).PlatformInitiated = value ?? default(bool); }

        /// <summary>
        /// Priority level of the event. Has value from 0 to 23. 0 is the highest priority. Service issue events have higher priority
        /// followed by planned maintenance and health advisory. Critical events have higher priority followed by error, warning and
        /// informational. Furthermore, active events have higher priority than resolved.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public int? Priority { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).Priority; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).Priority = value ?? default(int); }

        /// <summary>Recommended actions for the service health event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesRecommendedActionsItem[] PropertiesRecommendedActionsActions { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).RecommendedActionsActions; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).RecommendedActionsActions = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventProperties _property;

        /// <summary>Properties of event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.EventProperties()); set => this._property = value; }

        /// <summary>Recommended action locale for the service health event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public string RecommendedActionLocaleCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).RecommendedActionLocaleCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).RecommendedActionLocaleCode = value ?? null; }

        /// <summary>Recommended action title for the service health event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public string RecommendedActionMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).RecommendedActionMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).RecommendedActionMessage = value ?? null; }

        /// <summary>Source of event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.EventSourceValues? Source { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).EventSource; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).EventSource = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.EventSourceValues)""); }

        /// <summary>Current status of event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.EventStatusValues? Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).Status = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.EventStatusValues)""); }

        /// <summary>Summary text of event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public string Summary { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).Summary; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).Summary = value ?? null; }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api30.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api30.IResourceInternal)__resource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api30.IResourceInternal)__resource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api30.IResourceInternal)__resource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api30.IResourceInternal)__resource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api30.IResourceInternal)__resource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api30.IResourceInternal)__resource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api30.IResourceInternal)__resource).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.CreatedByType)""); }

        /// <summary>Title text of event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public string Title { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).Title; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesInternal)Property).Title = value ?? null; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api30.IResourceInternal)__resource).Type; }

        /// <summary>Creates an new <see cref="Event" /> instance.</summary>
        public Event()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// Service health event
    public partial interface IEvent :
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api30.IResource
    {
        /// <summary>Additional information Message</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Additional information Message",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string AdditionalInformationMessage { get; set; }
        /// <summary>Article content of event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Article content of event.",
        SerializedName = @"articleContent",
        PossibleTypes = new [] { typeof(string) })]
        string ArticleContent { get; set; }
        /// <summary>
        /// Contains the communication message for the event, that could include summary, root cause and other details.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Contains the communication message for the event, that could include summary, root cause and other details.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>duration in seconds</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"duration in seconds",
        SerializedName = @"duration",
        PossibleTypes = new [] { typeof(int) })]
        int? Duration { get; set; }
        /// <summary>Tells if we want to enable or disable Microsoft Support for this event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Tells if we want to enable or disable Microsoft Support for this event.",
        SerializedName = @"enableChatWithUs",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableChatWithUs { get; set; }
        /// <summary>Tells if we want to enable or disable Microsoft Support for this event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Tells if we want to enable or disable Microsoft Support for this event.",
        SerializedName = @"enableMicrosoftSupport",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableMicrosoftSupport { get; set; }
        /// <summary>Level of event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Level of event.",
        SerializedName = @"eventLevel",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.EventLevelValues) })]
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.EventLevelValues? EventLevel { get; set; }
        /// <summary>Type of event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of event.",
        SerializedName = @"eventType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.EventTypeValues) })]
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.EventTypeValues? EventType { get; set; }
        /// <summary>The id of the Incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The id of the Incident",
        SerializedName = @"externalIncidentId",
        PossibleTypes = new [] { typeof(string) })]
        string ExternalIncidentId { get; set; }
        /// <summary>Frequently asked questions for the service health event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Frequently asked questions for the service health event.",
        SerializedName = @"faqs",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IFaq) })]
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IFaq[] Faq { get; set; }
        /// <summary>Header text of event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Header text of event.",
        SerializedName = @"header",
        PossibleTypes = new [] { typeof(string) })]
        string Header { get; set; }
        /// <summary>Stage for HIR Document</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Stage for HIR Document",
        SerializedName = @"hirStage",
        PossibleTypes = new [] { typeof(string) })]
        string HirStage { get; set; }
        /// <summary>List services impacted by the service health event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List services impacted by the service health event.",
        SerializedName = @"impact",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IImpact) })]
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IImpact[] Impact { get; set; }
        /// <summary>It provides the Timestamp for when the health impacting event resolved.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"It provides the Timestamp for when the health impacting event resolved.",
        SerializedName = @"impactMitigationTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ImpactMitigationTime { get; set; }
        /// <summary>It provides the Timestamp for when the health impacting event started.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"It provides the Timestamp for when the health impacting event started.",
        SerializedName = @"impactStartTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ImpactStartTime { get; set; }
        /// <summary>The type of the impact</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of the impact",
        SerializedName = @"impactType",
        PossibleTypes = new [] { typeof(string) })]
        string ImpactType { get; set; }
        /// <summary>It provides information if the event is High incident rate event or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"It provides information if the event is High incident rate event or not.",
        SerializedName = @"isHIR",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsHir { get; set; }
        /// <summary>It provides the Timestamp for when the health impacting event was last updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"It provides the Timestamp for when the health impacting event was last updated.",
        SerializedName = @"lastUpdateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastUpdateTime { get; set; }
        /// <summary>Level of insight.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Level of insight.",
        SerializedName = @"level",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.LevelValues) })]
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.LevelValues? Level { get; set; }
        /// <summary>Useful links of event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Useful links of event.",
        SerializedName = @"links",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.ILink) })]
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.ILink[] Link { get; set; }
        /// <summary>Is true if the event is platform initiated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Is true if the event is platform initiated.",
        SerializedName = @"platformInitiated",
        PossibleTypes = new [] { typeof(bool) })]
        bool? PlatformInitiated { get; set; }
        /// <summary>
        /// Priority level of the event. Has value from 0 to 23. 0 is the highest priority. Service issue events have higher priority
        /// followed by planned maintenance and health advisory. Critical events have higher priority followed by error, warning and
        /// informational. Furthermore, active events have higher priority than resolved.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Priority level of the event. Has value from 0 to 23. 0 is the highest priority. Service issue events have higher priority followed by planned maintenance and health advisory. Critical events have higher priority followed by error, warning and informational. Furthermore, active events have higher priority than resolved.",
        SerializedName = @"priority",
        PossibleTypes = new [] { typeof(int) })]
        int? Priority { get; set; }
        /// <summary>Recommended actions for the service health event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Recommended actions for the service health event.",
        SerializedName = @"actions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesRecommendedActionsItem) })]
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesRecommendedActionsItem[] PropertiesRecommendedActionsActions { get; set; }
        /// <summary>Recommended action locale for the service health event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Recommended action locale for the service health event.",
        SerializedName = @"localeCode",
        PossibleTypes = new [] { typeof(string) })]
        string RecommendedActionLocaleCode { get; set; }
        /// <summary>Recommended action title for the service health event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Recommended action title for the service health event.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string RecommendedActionMessage { get; set; }
        /// <summary>Source of event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Source of event.",
        SerializedName = @"eventSource",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.EventSourceValues) })]
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.EventSourceValues? Source { get; set; }
        /// <summary>Current status of event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Current status of event.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.EventStatusValues) })]
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.EventStatusValues? Status { get; set; }
        /// <summary>Summary text of event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Summary text of event.",
        SerializedName = @"summary",
        PossibleTypes = new [] { typeof(string) })]
        string Summary { get; set; }
        /// <summary>Title text of event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Title text of event.",
        SerializedName = @"title",
        PossibleTypes = new [] { typeof(string) })]
        string Title { get; set; }

    }
    /// Service health event
    internal partial interface IEventInternal :
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api30.IResourceInternal
    {
        /// <summary>Additional information</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesAdditionalInformation AdditionalInformation { get; set; }
        /// <summary>Additional information Message</summary>
        string AdditionalInformationMessage { get; set; }
        /// <summary>Article of event.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesArticle Article { get; set; }
        /// <summary>Article content of event.</summary>
        string ArticleContent { get; set; }
        /// <summary>
        /// Contains the communication message for the event, that could include summary, root cause and other details.
        /// </summary>
        string Description { get; set; }
        /// <summary>duration in seconds</summary>
        int? Duration { get; set; }
        /// <summary>Tells if we want to enable or disable Microsoft Support for this event.</summary>
        bool? EnableChatWithUs { get; set; }
        /// <summary>Tells if we want to enable or disable Microsoft Support for this event.</summary>
        bool? EnableMicrosoftSupport { get; set; }
        /// <summary>Level of event.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.EventLevelValues? EventLevel { get; set; }
        /// <summary>Type of event.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.EventTypeValues? EventType { get; set; }
        /// <summary>The id of the Incident</summary>
        string ExternalIncidentId { get; set; }
        /// <summary>Frequently asked questions for the service health event.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IFaq[] Faq { get; set; }
        /// <summary>Header text of event.</summary>
        string Header { get; set; }
        /// <summary>Stage for HIR Document</summary>
        string HirStage { get; set; }
        /// <summary>List services impacted by the service health event.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IImpact[] Impact { get; set; }
        /// <summary>It provides the Timestamp for when the health impacting event resolved.</summary>
        global::System.DateTime? ImpactMitigationTime { get; set; }
        /// <summary>It provides the Timestamp for when the health impacting event started.</summary>
        global::System.DateTime? ImpactStartTime { get; set; }
        /// <summary>The type of the impact</summary>
        string ImpactType { get; set; }
        /// <summary>It provides information if the event is High incident rate event or not.</summary>
        bool? IsHir { get; set; }
        /// <summary>It provides the Timestamp for when the health impacting event was last updated.</summary>
        global::System.DateTime? LastUpdateTime { get; set; }
        /// <summary>Level of insight.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.LevelValues? Level { get; set; }
        /// <summary>Useful links of event.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.ILink[] Link { get; set; }
        /// <summary>Is true if the event is platform initiated.</summary>
        bool? PlatformInitiated { get; set; }
        /// <summary>
        /// Priority level of the event. Has value from 0 to 23. 0 is the highest priority. Service issue events have higher priority
        /// followed by planned maintenance and health advisory. Critical events have higher priority followed by error, warning and
        /// informational. Furthermore, active events have higher priority than resolved.
        /// </summary>
        int? Priority { get; set; }
        /// <summary>Recommended actions for the service health event.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesRecommendedActionsItem[] PropertiesRecommendedActionsActions { get; set; }
        /// <summary>Properties of event.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventProperties Property { get; set; }
        /// <summary>Recommended actions of event.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventPropertiesRecommendedActions RecommendedAction { get; set; }
        /// <summary>Recommended action locale for the service health event.</summary>
        string RecommendedActionLocaleCode { get; set; }
        /// <summary>Recommended action title for the service health event.</summary>
        string RecommendedActionMessage { get; set; }
        /// <summary>Source of event.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.EventSourceValues? Source { get; set; }
        /// <summary>Current status of event.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.EventStatusValues? Status { get; set; }
        /// <summary>Summary text of event.</summary>
        string Summary { get; set; }
        /// <summary>Title text of event.</summary>
        string Title { get; set; }

    }
}