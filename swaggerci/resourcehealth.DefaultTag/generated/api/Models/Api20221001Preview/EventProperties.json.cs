// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Extensions;

    /// <summary>Properties of event.</summary>
    public partial class EventProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonObject into a new instance of <see cref="EventProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal EventProperties(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_article = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonObject>("article"), out var __jsonArticle) ? Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.EventPropertiesArticle.FromJson(__jsonArticle) : Article;}
            {_recommendedAction = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonObject>("recommendedActions"), out var __jsonRecommendedActions) ? Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.EventPropertiesRecommendedActions.FromJson(__jsonRecommendedActions) : RecommendedAction;}
            {_additionalInformation = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonObject>("additionalInformation"), out var __jsonAdditionalInformation) ? Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.EventPropertiesAdditionalInformation.FromJson(__jsonAdditionalInformation) : AdditionalInformation;}
            {_eventType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonString>("eventType"), out var __jsonEventType) ? (string)__jsonEventType : (string)EventType;}
            {_eventSource = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonString>("eventSource"), out var __jsonEventSource) ? (string)__jsonEventSource : (string)EventSource;}
            {_status = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonString>("status"), out var __jsonStatus) ? (string)__jsonStatus : (string)Status;}
            {_title = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonString>("title"), out var __jsonTitle) ? (string)__jsonTitle : (string)Title;}
            {_summary = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonString>("summary"), out var __jsonSummary) ? (string)__jsonSummary : (string)Summary;}
            {_header = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonString>("header"), out var __jsonHeader) ? (string)__jsonHeader : (string)Header;}
            {_level = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonString>("level"), out var __jsonLevel) ? (string)__jsonLevel : (string)Level;}
            {_eventLevel = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonString>("eventLevel"), out var __jsonEventLevel) ? (string)__jsonEventLevel : (string)EventLevel;}
            {_externalIncidentId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonString>("externalIncidentId"), out var __jsonExternalIncidentId) ? (string)__jsonExternalIncidentId : (string)ExternalIncidentId;}
            {_link = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonArray>("links"), out var __jsonLinks) ? If( __jsonLinks as Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.ILink[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.ILink) (Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.Link.FromJson(__u) )) ))() : null : Link;}
            {_impactStartTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonString>("impactStartTime"), out var __jsonImpactStartTime) ? global::System.DateTime.TryParse((string)__jsonImpactStartTime, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonImpactStartTimeValue) ? __jsonImpactStartTimeValue : ImpactStartTime : ImpactStartTime;}
            {_impactMitigationTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonString>("impactMitigationTime"), out var __jsonImpactMitigationTime) ? global::System.DateTime.TryParse((string)__jsonImpactMitigationTime, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonImpactMitigationTimeValue) ? __jsonImpactMitigationTimeValue : ImpactMitigationTime : ImpactMitigationTime;}
            {_impact = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonArray>("impact"), out var __jsonImpact) ? If( __jsonImpact as Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonArray, out var __q) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IImpact[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__q, (__p)=>(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IImpact) (Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.Impact.FromJson(__p) )) ))() : null : Impact;}
            {_faq = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonArray>("faqs"), out var __jsonFaqs) ? If( __jsonFaqs as Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonArray, out var __l) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IFaq[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__l, (__k)=>(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IFaq) (Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.Faq.FromJson(__k) )) ))() : null : Faq;}
            {_isHir = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonBoolean>("isHIR"), out var __jsonIsHir) ? (bool?)__jsonIsHir : IsHir;}
            {_enableMicrosoftSupport = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonBoolean>("enableMicrosoftSupport"), out var __jsonEnableMicrosoftSupport) ? (bool?)__jsonEnableMicrosoftSupport : EnableMicrosoftSupport;}
            {_description = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonString>("description"), out var __jsonDescription) ? (string)__jsonDescription : (string)Description;}
            {_platformInitiated = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonBoolean>("platformInitiated"), out var __jsonPlatformInitiated) ? (bool?)__jsonPlatformInitiated : PlatformInitiated;}
            {_enableChatWithUs = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonBoolean>("enableChatWithUs"), out var __jsonEnableChatWithUs) ? (bool?)__jsonEnableChatWithUs : EnableChatWithUs;}
            {_priority = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonNumber>("priority"), out var __jsonPriority) ? (int?)__jsonPriority : Priority;}
            {_lastUpdateTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonString>("lastUpdateTime"), out var __jsonLastUpdateTime) ? global::System.DateTime.TryParse((string)__jsonLastUpdateTime, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonLastUpdateTimeValue) ? __jsonLastUpdateTimeValue : LastUpdateTime : LastUpdateTime;}
            {_hirStage = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonString>("hirStage"), out var __jsonHirStage) ? (string)__jsonHirStage : (string)HirStage;}
            {_duration = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonNumber>("duration"), out var __jsonDuration) ? (int?)__jsonDuration : Duration;}
            {_impactType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonString>("impactType"), out var __jsonImpactType) ? (string)__jsonImpactType : (string)ImpactType;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20221001Preview.IEventProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonObject json ? new EventProperties(json) : null;
        }

        /// <summary>
        /// Serializes this instance of <see cref="EventProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="EventProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != this._article ? (Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonNode) this._article.ToJson(null,serializationMode) : null, "article" ,container.Add );
            AddIf( null != this._recommendedAction ? (Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonNode) this._recommendedAction.ToJson(null,serializationMode) : null, "recommendedActions" ,container.Add );
            AddIf( null != this._additionalInformation ? (Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonNode) this._additionalInformation.ToJson(null,serializationMode) : null, "additionalInformation" ,container.Add );
            AddIf( null != (((object)this._eventType)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonString(this._eventType.ToString()) : null, "eventType" ,container.Add );
            AddIf( null != (((object)this._eventSource)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonString(this._eventSource.ToString()) : null, "eventSource" ,container.Add );
            AddIf( null != (((object)this._status)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonString(this._status.ToString()) : null, "status" ,container.Add );
            AddIf( null != (((object)this._title)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonString(this._title.ToString()) : null, "title" ,container.Add );
            AddIf( null != (((object)this._summary)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonString(this._summary.ToString()) : null, "summary" ,container.Add );
            AddIf( null != (((object)this._header)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonString(this._header.ToString()) : null, "header" ,container.Add );
            AddIf( null != (((object)this._level)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonString(this._level.ToString()) : null, "level" ,container.Add );
            AddIf( null != (((object)this._eventLevel)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonString(this._eventLevel.ToString()) : null, "eventLevel" ,container.Add );
            AddIf( null != (((object)this._externalIncidentId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonString(this._externalIncidentId.ToString()) : null, "externalIncidentId" ,container.Add );
            if (null != this._link)
            {
                var __w = new Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.XNodeArray();
                foreach( var __x in this._link )
                {
                    AddIf(__x?.ToJson(null, serializationMode) ,__w.Add);
                }
                container.Add("links",__w);
            }
            AddIf( null != this._impactStartTime ? (Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonString(this._impactStartTime?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "impactStartTime" ,container.Add );
            AddIf( null != this._impactMitigationTime ? (Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonString(this._impactMitigationTime?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "impactMitigationTime" ,container.Add );
            if (null != this._impact)
            {
                var __r = new Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.XNodeArray();
                foreach( var __s in this._impact )
                {
                    AddIf(__s?.ToJson(null, serializationMode) ,__r.Add);
                }
                container.Add("impact",__r);
            }
            if (null != this._faq)
            {
                var __m = new Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.XNodeArray();
                foreach( var __n in this._faq )
                {
                    AddIf(__n?.ToJson(null, serializationMode) ,__m.Add);
                }
                container.Add("faqs",__m);
            }
            AddIf( null != this._isHir ? (Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonBoolean((bool)this._isHir) : null, "isHIR" ,container.Add );
            AddIf( null != this._enableMicrosoftSupport ? (Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonBoolean((bool)this._enableMicrosoftSupport) : null, "enableMicrosoftSupport" ,container.Add );
            AddIf( null != (((object)this._description)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonString(this._description.ToString()) : null, "description" ,container.Add );
            AddIf( null != this._platformInitiated ? (Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonBoolean((bool)this._platformInitiated) : null, "platformInitiated" ,container.Add );
            AddIf( null != this._enableChatWithUs ? (Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonBoolean((bool)this._enableChatWithUs) : null, "enableChatWithUs" ,container.Add );
            AddIf( null != this._priority ? (Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonNumber((int)this._priority) : null, "priority" ,container.Add );
            AddIf( null != this._lastUpdateTime ? (Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonString(this._lastUpdateTime?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "lastUpdateTime" ,container.Add );
            AddIf( null != (((object)this._hirStage)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonString(this._hirStage.ToString()) : null, "hirStage" ,container.Add );
            AddIf( null != this._duration ? (Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonNumber((int)this._duration) : null, "duration" ,container.Add );
            AddIf( null != (((object)this._impactType)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonString(this._impactType.ToString()) : null, "impactType" ,container.Add );
            AfterToJson(ref container);
            return container;
        }
    }
}