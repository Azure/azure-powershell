// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support
{

    /// <summary>
    /// The resizing mode - how the input video will be resized to fit the desired output resolution(s). Default is AutoSize
    /// </summary>
    public partial struct StretchMode :
        System.IEquatable<StretchMode>
    {
        /// <summary>
        /// Pad the output (with either letterbox or pillar box) to honor the output resolution, while ensuring that the active video
        /// region in the output has the same aspect ratio as the input. For example, if the input is 1920x1080 and the encoding preset
        /// asks for 1280x1280, then the output will be at 1280x1280, which contains an inner rectangle of 1280x720 at aspect ratio
        /// of 16:9, and pillar box regions 280 pixels wide at the left and right.
        /// </summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StretchMode AutoFit = @"AutoFit";

        /// <summary>
        /// Override the output resolution, and change it to match the display aspect ratio of the input, without padding. For example,
        /// if the input is 1920x1080 and the encoding preset asks for 1280x1280, then the value in the preset is overridden, and
        /// the output will be at 1280x720, which maintains the input aspect ratio of 16:9.
        /// </summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StretchMode AutoSize = @"AutoSize";

        /// <summary>
        /// Strictly respect the output resolution without considering the pixel aspect ratio or display aspect ratio of the input
        /// video.
        /// </summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StretchMode None = @"None";

        /// <summary>the value for an instance of the <see cref="StretchMode" /> Enum.</summary>
        private string _value { get; set; }

        /// <summary>Conversion from arbitrary object to StretchMode</summary>
        /// <param name="value">the value to convert to an instance of <see cref="StretchMode" />.</param>
        internal static object CreateFrom(object value)
        {
            return new StretchMode(global::System.Convert.ToString(value));
        }

        /// <summary>Compares values of enum type StretchMode</summary>
        /// <param name="e">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public bool Equals(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StretchMode e)
        {
            return _value.Equals(e._value);
        }

        /// <summary>Compares values of enum type StretchMode (override for Object)</summary>
        /// <param name="obj">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public override bool Equals(object obj)
        {
            return obj is StretchMode && Equals((StretchMode)obj);
        }

        /// <summary>Returns hashCode for enum StretchMode</summary>
        /// <returns>The hashCode of the value</returns>
        public override int GetHashCode()
        {
            return this._value.GetHashCode();
        }

        /// <summary>Creates an instance of the <see cref="StretchMode"/> Enum class.</summary>
        /// <param name="underlyingValue">the value to create an instance for.</param>
        private StretchMode(string underlyingValue)
        {
            this._value = underlyingValue;
        }

        /// <summary>Returns string representation for StretchMode</summary>
        /// <returns>A string for this value.</returns>
        public override string ToString()
        {
            return this._value;
        }

        /// <summary>Implicit operator to convert string to StretchMode</summary>
        /// <param name="value">the value to convert to an instance of <see cref="StretchMode" />.</param>

        public static implicit operator StretchMode(string value)
        {
            return new StretchMode(value);
        }

        /// <summary>Implicit operator to convert StretchMode to string</summary>
        /// <param name="e">the value to convert to an instance of <see cref="StretchMode" />.</param>

        public static implicit operator string(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StretchMode e)
        {
            return e._value;
        }

        /// <summary>Overriding != operator for enum StretchMode</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are not equal to the same value</returns>
        public static bool operator !=(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StretchMode e1, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StretchMode e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>Overriding == operator for enum StretchMode</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public static bool operator ==(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StretchMode e1, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StretchMode e2)
        {
            return e2.Equals(e1);
        }
    }
}