// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support
{

    /// <summary>
    /// Optional designation for single channel audio tracks. Can be used to combine the tracks into stereo or multi-channel audio
    /// tracks.
    /// </summary>
    public partial struct ChannelMapping :
        System.IEquatable<ChannelMapping>
    {
        /// <summary>The Back Left Channel. Sometimes referred to as the Left Surround Channel.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.ChannelMapping BackLeft = @"BackLeft";

        /// <summary>The Back Right Channel. Sometimes referred to as the Right Surround Channel.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.ChannelMapping BackRight = @"BackRight";

        /// <summary>The Center Channel.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.ChannelMapping Center = @"Center";

        /// <summary>The Front Left Channel.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.ChannelMapping FrontLeft = @"FrontLeft";

        /// <summary>The Front Right Channel.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.ChannelMapping FrontRight = @"FrontRight";

        /// <summary>Low Frequency Effects Channel. Sometimes referred to as the Subwoofer.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.ChannelMapping LowFrequencyEffects = @"LowFrequencyEffects";

        /// <summary>The Left Stereo channel. Sometimes referred to as Down Mix Left.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.ChannelMapping StereoLeft = @"StereoLeft";

        /// <summary>The Right Stereo channel. Sometimes referred to as Down Mix Right.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.ChannelMapping StereoRight = @"StereoRight";

        /// <summary>the value for an instance of the <see cref="ChannelMapping" /> Enum.</summary>
        private string _value { get; set; }

        /// <summary>Creates an instance of the <see cref="ChannelMapping"/> Enum class.</summary>
        /// <param name="underlyingValue">the value to create an instance for.</param>
        private ChannelMapping(string underlyingValue)
        {
            this._value = underlyingValue;
        }

        /// <summary>Conversion from arbitrary object to ChannelMapping</summary>
        /// <param name="value">the value to convert to an instance of <see cref="ChannelMapping" />.</param>
        internal static object CreateFrom(object value)
        {
            return new ChannelMapping(global::System.Convert.ToString(value));
        }

        /// <summary>Compares values of enum type ChannelMapping</summary>
        /// <param name="e">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public bool Equals(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.ChannelMapping e)
        {
            return _value.Equals(e._value);
        }

        /// <summary>Compares values of enum type ChannelMapping (override for Object)</summary>
        /// <param name="obj">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public override bool Equals(object obj)
        {
            return obj is ChannelMapping && Equals((ChannelMapping)obj);
        }

        /// <summary>Returns hashCode for enum ChannelMapping</summary>
        /// <returns>The hashCode of the value</returns>
        public override int GetHashCode()
        {
            return this._value.GetHashCode();
        }

        /// <summary>Returns string representation for ChannelMapping</summary>
        /// <returns>A string for this value.</returns>
        public override string ToString()
        {
            return this._value;
        }

        /// <summary>Implicit operator to convert string to ChannelMapping</summary>
        /// <param name="value">the value to convert to an instance of <see cref="ChannelMapping" />.</param>

        public static implicit operator ChannelMapping(string value)
        {
            return new ChannelMapping(value);
        }

        /// <summary>Implicit operator to convert ChannelMapping to string</summary>
        /// <param name="e">the value to convert to an instance of <see cref="ChannelMapping" />.</param>

        public static implicit operator string(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.ChannelMapping e)
        {
            return e._value;
        }

        /// <summary>Overriding != operator for enum ChannelMapping</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are not equal to the same value</returns>
        public static bool operator !=(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.ChannelMapping e1, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.ChannelMapping e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>Overriding == operator for enum ChannelMapping</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public static bool operator ==(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.ChannelMapping e1, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.ChannelMapping e2)
        {
            return e2.Equals(e1);
        }
    }
}