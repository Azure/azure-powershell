// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support
{

    /// <summary>
    /// Specifies the maximum resolution at which your video is analyzed. The default behavior is "SourceResolution," which will
    /// keep the input video at its original resolution when analyzed. Using "StandardDefinition" will resize input videos to
    /// standard definition while preserving the appropriate aspect ratio. It will only resize if the video is of higher resolution.
    /// For example, a 1920x1080 input would be scaled to 640x360 before processing. Switching to "StandardDefinition" will reduce
    /// the time it takes to process high resolution video. It may also reduce the cost of using this component (see https://azure.microsoft.com/en-us/pricing/details/media-services/#analytics
    /// for details). However, faces that end up being too small in the resized video may not be detected.
    /// </summary>
    public partial struct AnalysisResolution :
        System.IEquatable<AnalysisResolution>
    {
        public static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.AnalysisResolution SourceResolution = @"SourceResolution";

        public static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.AnalysisResolution StandardDefinition = @"StandardDefinition";

        /// <summary>the value for an instance of the <see cref="AnalysisResolution" /> Enum.</summary>
        private string _value { get; set; }

        /// <summary>Creates an instance of the <see cref="AnalysisResolution"/> Enum class.</summary>
        /// <param name="underlyingValue">the value to create an instance for.</param>
        private AnalysisResolution(string underlyingValue)
        {
            this._value = underlyingValue;
        }

        /// <summary>Conversion from arbitrary object to AnalysisResolution</summary>
        /// <param name="value">the value to convert to an instance of <see cref="AnalysisResolution" />.</param>
        internal static object CreateFrom(object value)
        {
            return new AnalysisResolution(global::System.Convert.ToString(value));
        }

        /// <summary>Compares values of enum type AnalysisResolution</summary>
        /// <param name="e">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public bool Equals(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.AnalysisResolution e)
        {
            return _value.Equals(e._value);
        }

        /// <summary>Compares values of enum type AnalysisResolution (override for Object)</summary>
        /// <param name="obj">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public override bool Equals(object obj)
        {
            return obj is AnalysisResolution && Equals((AnalysisResolution)obj);
        }

        /// <summary>Returns hashCode for enum AnalysisResolution</summary>
        /// <returns>The hashCode of the value</returns>
        public override int GetHashCode()
        {
            return this._value.GetHashCode();
        }

        /// <summary>Returns string representation for AnalysisResolution</summary>
        /// <returns>A string for this value.</returns>
        public override string ToString()
        {
            return this._value;
        }

        /// <summary>Implicit operator to convert string to AnalysisResolution</summary>
        /// <param name="value">the value to convert to an instance of <see cref="AnalysisResolution" />.</param>

        public static implicit operator AnalysisResolution(string value)
        {
            return new AnalysisResolution(value);
        }

        /// <summary>Implicit operator to convert AnalysisResolution to string</summary>
        /// <param name="e">the value to convert to an instance of <see cref="AnalysisResolution" />.</param>

        public static implicit operator string(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.AnalysisResolution e)
        {
            return e._value;
        }

        /// <summary>Overriding != operator for enum AnalysisResolution</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are not equal to the same value</returns>
        public static bool operator !=(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.AnalysisResolution e1, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.AnalysisResolution e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>Overriding == operator for enum AnalysisResolution</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public static bool operator ==(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.AnalysisResolution e1, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.AnalysisResolution e2)
        {
            return e2.Equals(e1);
        }
    }
}