// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support
{

    /// <summary>
    /// This mode provides the ability to choose between the following settings: 1) Analyze - For detection only.This mode generates
    /// a metadata JSON file marking appearances of faces throughout the video.Where possible, appearances of the same person
    /// are assigned the same ID. 2) Combined - Additionally redacts(blurs) detected faces. 3) Redact - This enables a 2-pass
    /// process, allowing for selective redaction of a subset of detected faces.It takes in the metadata file from a prior analyze
    /// pass, along with the source video, and a user-selected subset of IDs that require redaction.
    /// </summary>
    public partial struct FaceRedactorMode :
        System.IEquatable<FaceRedactorMode>
    {
        /// <summary>
        /// Analyze mode detects faces and outputs a metadata file with the results. Allows editing of the metadata file before faces
        /// are blurred with Redact mode.
        /// </summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.FaceRedactorMode Analyze = @"Analyze";

        /// <summary>
        /// Combined mode does the Analyze and Redact steps in one pass when editing the analyzed faces is not desired.
        /// </summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.FaceRedactorMode Combined = @"Combined";

        /// <summary>
        /// Redact mode consumes the metadata file from Analyze mode and redacts the faces found.
        /// </summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.FaceRedactorMode Redact = @"Redact";

        /// <summary>the value for an instance of the <see cref="FaceRedactorMode" /> Enum.</summary>
        private string _value { get; set; }

        /// <summary>Conversion from arbitrary object to FaceRedactorMode</summary>
        /// <param name="value">the value to convert to an instance of <see cref="FaceRedactorMode" />.</param>
        internal static object CreateFrom(object value)
        {
            return new FaceRedactorMode(global::System.Convert.ToString(value));
        }

        /// <summary>Compares values of enum type FaceRedactorMode</summary>
        /// <param name="e">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public bool Equals(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.FaceRedactorMode e)
        {
            return _value.Equals(e._value);
        }

        /// <summary>Compares values of enum type FaceRedactorMode (override for Object)</summary>
        /// <param name="obj">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public override bool Equals(object obj)
        {
            return obj is FaceRedactorMode && Equals((FaceRedactorMode)obj);
        }

        /// <summary>Creates an instance of the <see cref="FaceRedactorMode"/> Enum class.</summary>
        /// <param name="underlyingValue">the value to create an instance for.</param>
        private FaceRedactorMode(string underlyingValue)
        {
            this._value = underlyingValue;
        }

        /// <summary>Returns hashCode for enum FaceRedactorMode</summary>
        /// <returns>The hashCode of the value</returns>
        public override int GetHashCode()
        {
            return this._value.GetHashCode();
        }

        /// <summary>Returns string representation for FaceRedactorMode</summary>
        /// <returns>A string for this value.</returns>
        public override string ToString()
        {
            return this._value;
        }

        /// <summary>Implicit operator to convert string to FaceRedactorMode</summary>
        /// <param name="value">the value to convert to an instance of <see cref="FaceRedactorMode" />.</param>

        public static implicit operator FaceRedactorMode(string value)
        {
            return new FaceRedactorMode(value);
        }

        /// <summary>Implicit operator to convert FaceRedactorMode to string</summary>
        /// <param name="e">the value to convert to an instance of <see cref="FaceRedactorMode" />.</param>

        public static implicit operator string(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.FaceRedactorMode e)
        {
            return e._value;
        }

        /// <summary>Overriding != operator for enum FaceRedactorMode</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are not equal to the same value</returns>
        public static bool operator !=(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.FaceRedactorMode e1, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.FaceRedactorMode e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>Overriding == operator for enum FaceRedactorMode</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public static bool operator ==(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.FaceRedactorMode e1, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.FaceRedactorMode e2)
        {
            return e2.Equals(e1);
        }
    }
}