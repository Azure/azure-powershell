// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support
{

    /// <summary>The Video Sync Mode</summary>
    public partial struct VideoSyncMode :
        System.IEquatable<VideoSyncMode>
    {
        /// <summary>
        /// This is the default method. Chooses between Cfr and Vfr depending on muxer capabilities. For output format MP4, the default
        /// mode is Cfr.
        /// </summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.VideoSyncMode Auto = @"Auto";

        /// <summary>
        /// Input frames will be repeated and/or dropped as needed to achieve exactly the requested constant frame rate. Recommended
        /// when the output frame rate is explicitly set at a specified value
        /// </summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.VideoSyncMode Cfr = @"Cfr";

        /// <summary>
        /// The presentation timestamps on frames are passed through from the input file to the output file writer. Recommended when
        /// the input source has variable frame rate, and are attempting to produce multiple layers for adaptive streaming in the
        /// output which have aligned GOP boundaries. Note: if two or more frames in the input have duplicate timestamps, then the
        /// output will also have the same behavior
        /// </summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.VideoSyncMode Passthrough = @"Passthrough";

        /// <summary>
        /// Similar to the Passthrough mode, but if the input has frames that have duplicate timestamps, then only one frame is passed
        /// through to the output, and others are dropped. Recommended when the number of output frames is expected to be equal to
        /// the number of input frames. For example, the output is used to calculate a quality metric like PSNR against the input
        /// </summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.VideoSyncMode Vfr = @"Vfr";

        /// <summary>the value for an instance of the <see cref="VideoSyncMode" /> Enum.</summary>
        private string _value { get; set; }

        /// <summary>Conversion from arbitrary object to VideoSyncMode</summary>
        /// <param name="value">the value to convert to an instance of <see cref="VideoSyncMode" />.</param>
        internal static object CreateFrom(object value)
        {
            return new VideoSyncMode(global::System.Convert.ToString(value));
        }

        /// <summary>Compares values of enum type VideoSyncMode</summary>
        /// <param name="e">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public bool Equals(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.VideoSyncMode e)
        {
            return _value.Equals(e._value);
        }

        /// <summary>Compares values of enum type VideoSyncMode (override for Object)</summary>
        /// <param name="obj">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public override bool Equals(object obj)
        {
            return obj is VideoSyncMode && Equals((VideoSyncMode)obj);
        }

        /// <summary>Returns hashCode for enum VideoSyncMode</summary>
        /// <returns>The hashCode of the value</returns>
        public override int GetHashCode()
        {
            return this._value.GetHashCode();
        }

        /// <summary>Returns string representation for VideoSyncMode</summary>
        /// <returns>A string for this value.</returns>
        public override string ToString()
        {
            return this._value;
        }

        /// <summary>Creates an instance of the <see cref="VideoSyncMode"/> Enum class.</summary>
        /// <param name="underlyingValue">the value to create an instance for.</param>
        private VideoSyncMode(string underlyingValue)
        {
            this._value = underlyingValue;
        }

        /// <summary>Implicit operator to convert string to VideoSyncMode</summary>
        /// <param name="value">the value to convert to an instance of <see cref="VideoSyncMode" />.</param>

        public static implicit operator VideoSyncMode(string value)
        {
            return new VideoSyncMode(value);
        }

        /// <summary>Implicit operator to convert VideoSyncMode to string</summary>
        /// <param name="e">the value to convert to an instance of <see cref="VideoSyncMode" />.</param>

        public static implicit operator string(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.VideoSyncMode e)
        {
            return e._value;
        }

        /// <summary>Overriding != operator for enum VideoSyncMode</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are not equal to the same value</returns>
        public static bool operator !=(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.VideoSyncMode e1, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.VideoSyncMode e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>Overriding == operator for enum VideoSyncMode</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public static bool operator ==(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.VideoSyncMode e1, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.VideoSyncMode e2)
        {
            return e2.Equals(e1);
        }
    }
}