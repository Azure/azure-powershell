// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Extensions;

    public partial class EdgeUsageDataCollectionPolicy :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IEdgeUsageDataCollectionPolicy,
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IEdgeUsageDataCollectionPolicyInternal
    {

        /// <summary>Backing field for <see cref="DataCollectionFrequency" /> property.</summary>
        private string _dataCollectionFrequency;

        /// <summary>Usage data collection frequency in ISO 8601 duration format e.g. PT10M , PT5H.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public string DataCollectionFrequency { get => this._dataCollectionFrequency; set => this._dataCollectionFrequency = value; }

        /// <summary>Backing field for <see cref="DataReportingFrequency" /> property.</summary>
        private string _dataReportingFrequency;

        /// <summary>Usage data reporting frequency in ISO 8601 duration format e.g. PT10M , PT5H.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public string DataReportingFrequency { get => this._dataReportingFrequency; set => this._dataReportingFrequency = value; }

        /// <summary>Backing field for <see cref="EventHubDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IEdgeUsageDataEventHub _eventHubDetail;

        /// <summary>Details of Event Hub where the usage will be reported.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IEdgeUsageDataEventHub EventHubDetail { get => (this._eventHubDetail = this._eventHubDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.EdgeUsageDataEventHub()); set => this._eventHubDetail = value; }

        /// <summary>Name of the Event Hub where usage will be reported.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public string EventHubDetailName { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IEdgeUsageDataEventHubInternal)EventHubDetail).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IEdgeUsageDataEventHubInternal)EventHubDetail).Name = value ?? null; }

        /// <summary>Namespace of the Event Hub where usage will be reported.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public string EventHubDetailNamespace { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IEdgeUsageDataEventHubInternal)EventHubDetail).Namespace; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IEdgeUsageDataEventHubInternal)EventHubDetail).Namespace = value ?? null; }

        /// <summary>SAS token needed to interact with Event Hub.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public string EventHubDetailToken { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IEdgeUsageDataEventHubInternal)EventHubDetail).Token; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IEdgeUsageDataEventHubInternal)EventHubDetail).Token = value ?? null; }

        /// <summary>Backing field for <see cref="MaxAllowedUnreportedUsageDuration" /> property.</summary>
        private string _maxAllowedUnreportedUsageDuration;

        /// <summary>
        /// Maximum time for which the functionality of the device will not be hampered for not reporting the usage data.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public string MaxAllowedUnreportedUsageDuration { get => this._maxAllowedUnreportedUsageDuration; set => this._maxAllowedUnreportedUsageDuration = value; }

        /// <summary>Internal Acessors for EventHubDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IEdgeUsageDataEventHub Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IEdgeUsageDataCollectionPolicyInternal.EventHubDetail { get => (this._eventHubDetail = this._eventHubDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.EdgeUsageDataEventHub()); set { {_eventHubDetail = value;} } }

        /// <summary>Creates an new <see cref="EdgeUsageDataCollectionPolicy" /> instance.</summary>
        public EdgeUsageDataCollectionPolicy()
        {

        }
    }
    public partial interface IEdgeUsageDataCollectionPolicy :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.IJsonSerializable
    {
        /// <summary>Usage data collection frequency in ISO 8601 duration format e.g. PT10M , PT5H.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Usage data collection frequency in ISO 8601 duration format e.g. PT10M , PT5H.",
        SerializedName = @"dataCollectionFrequency",
        PossibleTypes = new [] { typeof(string) })]
        string DataCollectionFrequency { get; set; }
        /// <summary>Usage data reporting frequency in ISO 8601 duration format e.g. PT10M , PT5H.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Usage data reporting frequency in ISO 8601 duration format e.g. PT10M , PT5H.",
        SerializedName = @"dataReportingFrequency",
        PossibleTypes = new [] { typeof(string) })]
        string DataReportingFrequency { get; set; }
        /// <summary>Name of the Event Hub where usage will be reported.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the Event Hub where usage will be reported.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string EventHubDetailName { get; set; }
        /// <summary>Namespace of the Event Hub where usage will be reported.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Namespace of the Event Hub where usage will be reported.",
        SerializedName = @"namespace",
        PossibleTypes = new [] { typeof(string) })]
        string EventHubDetailNamespace { get; set; }
        /// <summary>SAS token needed to interact with Event Hub.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"SAS token needed to interact with Event Hub.",
        SerializedName = @"token",
        PossibleTypes = new [] { typeof(string) })]
        string EventHubDetailToken { get; set; }
        /// <summary>
        /// Maximum time for which the functionality of the device will not be hampered for not reporting the usage data.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Maximum time for which the functionality of the device will not be hampered for not reporting the usage data.",
        SerializedName = @"maxAllowedUnreportedUsageDuration",
        PossibleTypes = new [] { typeof(string) })]
        string MaxAllowedUnreportedUsageDuration { get; set; }

    }
    internal partial interface IEdgeUsageDataCollectionPolicyInternal

    {
        /// <summary>Usage data collection frequency in ISO 8601 duration format e.g. PT10M , PT5H.</summary>
        string DataCollectionFrequency { get; set; }
        /// <summary>Usage data reporting frequency in ISO 8601 duration format e.g. PT10M , PT5H.</summary>
        string DataReportingFrequency { get; set; }
        /// <summary>Details of Event Hub where the usage will be reported.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IEdgeUsageDataEventHub EventHubDetail { get; set; }
        /// <summary>Name of the Event Hub where usage will be reported.</summary>
        string EventHubDetailName { get; set; }
        /// <summary>Namespace of the Event Hub where usage will be reported.</summary>
        string EventHubDetailNamespace { get; set; }
        /// <summary>SAS token needed to interact with Event Hub.</summary>
        string EventHubDetailToken { get; set; }
        /// <summary>
        /// Maximum time for which the functionality of the device will not be hampered for not reporting the usage data.
        /// </summary>
        string MaxAllowedUnreportedUsageDuration { get; set; }

    }
}