// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601
{
    using Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.PowerShell;

    /// <summary>A Media Services account.</summary>
    [System.ComponentModel.TypeConverter(typeof(MediaServiceTypeConverter))]
    public partial class MediaService
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.MediaService"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaService" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaService DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new MediaService(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.MediaService"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaService" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaService DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new MediaService(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="MediaService" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="MediaService" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaService FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.MediaService"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal MediaService(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.MediaServicePropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Identity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).Identity = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceIdentity) content.GetValueForProperty("Identity",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).Identity, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.MediaServiceIdentityTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).SystemData = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.ISystemData) content.GetValueForProperty("SystemData",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).SystemData, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.ITrackedResourceInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.ITrackedResourceTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.ITrackedResourceInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.TrackedResourceTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.ITrackedResourceInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.ITrackedResourceInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("KeyDelivery"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).KeyDelivery = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IKeyDelivery) content.GetValueForProperty("KeyDelivery",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).KeyDelivery, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.KeyDeliveryTypeConverter.ConvertFrom);
            }
            if (content.Contains("StorageAuthentication"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).StorageAuthentication = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StorageAuthentication?) content.GetValueForProperty("StorageAuthentication",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).StorageAuthentication, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StorageAuthentication.CreateFrom);
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("Encryption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).Encryption = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IAccountEncryption) content.GetValueForProperty("Encryption",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).Encryption, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.AccountEncryptionTypeConverter.ConvertFrom);
            }
            if (content.Contains("MediaServiceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).MediaServiceId = (string) content.GetValueForProperty("MediaServiceId",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).MediaServiceId, global::System.Convert.ToString);
            }
            if (content.Contains("StorageAccount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).StorageAccount = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IStorageAccount[]) content.GetValueForProperty("StorageAccount",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).StorageAccount, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IStorageAccount>(__y, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.StorageAccountTypeConverter.ConvertFrom));
            }
            if (content.Contains("PublicNetworkAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).PublicNetworkAccess = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.PublicNetworkAccess?) content.GetValueForProperty("PublicNetworkAccess",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).PublicNetworkAccess, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.PublicNetworkAccess.CreateFrom);
            }
            if (content.Contains("KeyDeliveryAccessControl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).KeyDeliveryAccessControl = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IAccessControl) content.GetValueForProperty("KeyDeliveryAccessControl",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).KeyDeliveryAccessControl, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.AccessControlTypeConverter.ConvertFrom);
            }
            if (content.Contains("IdentityType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).IdentityType = (string) content.GetValueForProperty("IdentityType",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).IdentityType, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityPrincipalId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).IdentityPrincipalId = (string) content.GetValueForProperty("IdentityPrincipalId",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).IdentityPrincipalId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityTenantId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).IdentityTenantId = (string) content.GetValueForProperty("IdentityTenantId",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).IdentityTenantId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityUserAssignedIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).IdentityUserAssignedIdentity = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IUserAssignedManagedIdentities) content.GetValueForProperty("IdentityUserAssignedIdentity",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).IdentityUserAssignedIdentity, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.UserAssignedManagedIdentitiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).SystemDataCreatedByType = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.CreatedByType?) content.GetValueForProperty("SystemDataCreatedByType",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).SystemDataCreatedByType, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).SystemDataLastModifiedByType = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.CreatedByType?) content.GetValueForProperty("SystemDataLastModifiedByType",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).SystemDataLastModifiedByType, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("EncryptionKeyVaultProperty"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).EncryptionKeyVaultProperty = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IKeyVaultProperties) content.GetValueForProperty("EncryptionKeyVaultProperty",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).EncryptionKeyVaultProperty, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.KeyVaultPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("EncryptionIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).EncryptionIdentity = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IResourceIdentity) content.GetValueForProperty("EncryptionIdentity",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).EncryptionIdentity, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.ResourceIdentityTypeConverter.ConvertFrom);
            }
            if (content.Contains("EncryptionType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).EncryptionType = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.AccountEncryptionKeyType) content.GetValueForProperty("EncryptionType",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).EncryptionType, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.AccountEncryptionKeyType.CreateFrom);
            }
            if (content.Contains("EncryptionStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).EncryptionStatus = (string) content.GetValueForProperty("EncryptionStatus",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).EncryptionStatus, global::System.Convert.ToString);
            }
            if (content.Contains("KeyVaultPropertyKeyIdentifier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).KeyVaultPropertyKeyIdentifier = (string) content.GetValueForProperty("KeyVaultPropertyKeyIdentifier",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).KeyVaultPropertyKeyIdentifier, global::System.Convert.ToString);
            }
            if (content.Contains("AccessControlDefaultAction"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).AccessControlDefaultAction = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.DefaultAction?) content.GetValueForProperty("AccessControlDefaultAction",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).AccessControlDefaultAction, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.DefaultAction.CreateFrom);
            }
            if (content.Contains("KeyVaultPropertyCurrentKeyIdentifier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).KeyVaultPropertyCurrentKeyIdentifier = (string) content.GetValueForProperty("KeyVaultPropertyCurrentKeyIdentifier",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).KeyVaultPropertyCurrentKeyIdentifier, global::System.Convert.ToString);
            }
            if (content.Contains("PropertiesEncryptionIdentityUserAssignedIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).PropertiesEncryptionIdentityUserAssignedIdentity = (string) content.GetValueForProperty("PropertiesEncryptionIdentityUserAssignedIdentity",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).PropertiesEncryptionIdentityUserAssignedIdentity, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityUseSystemAssignedIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).IdentityUseSystemAssignedIdentity = (bool) content.GetValueForProperty("IdentityUseSystemAssignedIdentity",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).IdentityUseSystemAssignedIdentity, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AccessControlIPAllowList"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).AccessControlIPAllowList = (string[]) content.GetValueForProperty("AccessControlIPAllowList",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).AccessControlIPAllowList, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.MediaService"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal MediaService(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.MediaServicePropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Identity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).Identity = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceIdentity) content.GetValueForProperty("Identity",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).Identity, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.MediaServiceIdentityTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).SystemData = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.ISystemData) content.GetValueForProperty("SystemData",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).SystemData, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.ITrackedResourceInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.ITrackedResourceTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.ITrackedResourceInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.TrackedResourceTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.ITrackedResourceInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.ITrackedResourceInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("KeyDelivery"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).KeyDelivery = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IKeyDelivery) content.GetValueForProperty("KeyDelivery",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).KeyDelivery, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.KeyDeliveryTypeConverter.ConvertFrom);
            }
            if (content.Contains("StorageAuthentication"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).StorageAuthentication = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StorageAuthentication?) content.GetValueForProperty("StorageAuthentication",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).StorageAuthentication, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StorageAuthentication.CreateFrom);
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("Encryption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).Encryption = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IAccountEncryption) content.GetValueForProperty("Encryption",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).Encryption, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.AccountEncryptionTypeConverter.ConvertFrom);
            }
            if (content.Contains("MediaServiceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).MediaServiceId = (string) content.GetValueForProperty("MediaServiceId",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).MediaServiceId, global::System.Convert.ToString);
            }
            if (content.Contains("StorageAccount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).StorageAccount = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IStorageAccount[]) content.GetValueForProperty("StorageAccount",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).StorageAccount, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IStorageAccount>(__y, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.StorageAccountTypeConverter.ConvertFrom));
            }
            if (content.Contains("PublicNetworkAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).PublicNetworkAccess = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.PublicNetworkAccess?) content.GetValueForProperty("PublicNetworkAccess",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).PublicNetworkAccess, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.PublicNetworkAccess.CreateFrom);
            }
            if (content.Contains("KeyDeliveryAccessControl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).KeyDeliveryAccessControl = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IAccessControl) content.GetValueForProperty("KeyDeliveryAccessControl",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).KeyDeliveryAccessControl, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.AccessControlTypeConverter.ConvertFrom);
            }
            if (content.Contains("IdentityType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).IdentityType = (string) content.GetValueForProperty("IdentityType",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).IdentityType, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityPrincipalId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).IdentityPrincipalId = (string) content.GetValueForProperty("IdentityPrincipalId",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).IdentityPrincipalId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityTenantId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).IdentityTenantId = (string) content.GetValueForProperty("IdentityTenantId",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).IdentityTenantId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityUserAssignedIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).IdentityUserAssignedIdentity = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IUserAssignedManagedIdentities) content.GetValueForProperty("IdentityUserAssignedIdentity",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).IdentityUserAssignedIdentity, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.UserAssignedManagedIdentitiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).SystemDataCreatedByType = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.CreatedByType?) content.GetValueForProperty("SystemDataCreatedByType",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).SystemDataCreatedByType, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).SystemDataLastModifiedByType = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.CreatedByType?) content.GetValueForProperty("SystemDataLastModifiedByType",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).SystemDataLastModifiedByType, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("EncryptionKeyVaultProperty"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).EncryptionKeyVaultProperty = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IKeyVaultProperties) content.GetValueForProperty("EncryptionKeyVaultProperty",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).EncryptionKeyVaultProperty, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.KeyVaultPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("EncryptionIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).EncryptionIdentity = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IResourceIdentity) content.GetValueForProperty("EncryptionIdentity",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).EncryptionIdentity, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.ResourceIdentityTypeConverter.ConvertFrom);
            }
            if (content.Contains("EncryptionType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).EncryptionType = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.AccountEncryptionKeyType) content.GetValueForProperty("EncryptionType",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).EncryptionType, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.AccountEncryptionKeyType.CreateFrom);
            }
            if (content.Contains("EncryptionStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).EncryptionStatus = (string) content.GetValueForProperty("EncryptionStatus",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).EncryptionStatus, global::System.Convert.ToString);
            }
            if (content.Contains("KeyVaultPropertyKeyIdentifier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).KeyVaultPropertyKeyIdentifier = (string) content.GetValueForProperty("KeyVaultPropertyKeyIdentifier",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).KeyVaultPropertyKeyIdentifier, global::System.Convert.ToString);
            }
            if (content.Contains("AccessControlDefaultAction"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).AccessControlDefaultAction = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.DefaultAction?) content.GetValueForProperty("AccessControlDefaultAction",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).AccessControlDefaultAction, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.DefaultAction.CreateFrom);
            }
            if (content.Contains("KeyVaultPropertyCurrentKeyIdentifier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).KeyVaultPropertyCurrentKeyIdentifier = (string) content.GetValueForProperty("KeyVaultPropertyCurrentKeyIdentifier",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).KeyVaultPropertyCurrentKeyIdentifier, global::System.Convert.ToString);
            }
            if (content.Contains("PropertiesEncryptionIdentityUserAssignedIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).PropertiesEncryptionIdentityUserAssignedIdentity = (string) content.GetValueForProperty("PropertiesEncryptionIdentityUserAssignedIdentity",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).PropertiesEncryptionIdentityUserAssignedIdentity, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityUseSystemAssignedIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).IdentityUseSystemAssignedIdentity = (bool) content.GetValueForProperty("IdentityUseSystemAssignedIdentity",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).IdentityUseSystemAssignedIdentity, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AccessControlIPAllowList"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).AccessControlIPAllowList = (string[]) content.GetValueForProperty("AccessControlIPAllowList",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20210601.IMediaServiceInternal)this).AccessControlIPAllowList, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// A Media Services account.
    [System.ComponentModel.TypeConverter(typeof(MediaServiceTypeConverter))]
    public partial interface IMediaService

    {

    }
}