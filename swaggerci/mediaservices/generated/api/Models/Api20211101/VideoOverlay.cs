// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Extensions;

    /// <summary>Describes the properties of a video overlay.</summary>
    public partial class VideoOverlay :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlay,
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlayInternal,
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IOverlay"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IOverlay __overlay = new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.Overlay();

        /// <summary>
        /// The gain level of audio in the overlay. The value should be in the range [0, 1.0]. The default is 1.0.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inherited)]
        public double? AudioGainLevel { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IOverlayInternal)__overlay).AudioGainLevel; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IOverlayInternal)__overlay).AudioGainLevel = value ?? default(double); }

        /// <summary>Backing field for <see cref="CropRectangle" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IRectangle _cropRectangle;

        /// <summary>An optional rectangular window used to crop the overlay image or video.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IRectangle CropRectangle { get => (this._cropRectangle = this._cropRectangle ?? new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.Rectangle()); set => this._cropRectangle = value; }

        /// <summary>
        /// The height of the rectangular region in pixels. This can be absolute pixel value (e.g 100), or relative to the size of
        /// the video (For example, 50%).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public string CropRectangleHeight { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IRectangleInternal)CropRectangle).Height; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IRectangleInternal)CropRectangle).Height = value ?? null; }

        /// <summary>
        /// The number of pixels from the left-margin. This can be absolute pixel value (e.g 100), or relative to the size of the
        /// video (For example, 50%).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public string CropRectangleLeft { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IRectangleInternal)CropRectangle).Left; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IRectangleInternal)CropRectangle).Left = value ?? null; }

        /// <summary>
        /// The number of pixels from the top-margin. This can be absolute pixel value (e.g 100), or relative to the size of the video
        /// (For example, 50%).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public string CropRectangleTop { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IRectangleInternal)CropRectangle).Top; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IRectangleInternal)CropRectangle).Top = value ?? null; }

        /// <summary>
        /// The width of the rectangular region in pixels. This can be absolute pixel value (e.g 100), or relative to the size of
        /// the video (For example, 50%).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public string CropRectangleWidth { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IRectangleInternal)CropRectangle).Width; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IRectangleInternal)CropRectangle).Width = value ?? null; }

        /// <summary>
        /// The end position, with reference to the input video, at which the overlay ends. The value should be in ISO 8601 format.
        /// For example, PT30S to end the overlay at 30 seconds into the input video. If not specified or the value is greater than
        /// the input video duration, the overlay will be applied until the end of the input video if the overlay media duration is
        /// greater than the input video duration, else the overlay will last as long as the overlay media duration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inherited)]
        public global::System.TimeSpan? End { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IOverlayInternal)__overlay).End; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IOverlayInternal)__overlay).End = value ?? default(global::System.TimeSpan); }

        /// <summary>
        /// The duration over which the overlay fades in onto the input video. The value should be in ISO 8601 duration format. If
        /// not specified the default behavior is to have no fade in (same as PT0S).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inherited)]
        public global::System.TimeSpan? FadeInDuration { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IOverlayInternal)__overlay).FadeInDuration; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IOverlayInternal)__overlay).FadeInDuration = value ?? default(global::System.TimeSpan); }

        /// <summary>
        /// The duration over which the overlay fades out of the input video. The value should be in ISO 8601 duration format. If
        /// not specified the default behavior is to have no fade out (same as PT0S).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inherited)]
        public global::System.TimeSpan? FadeOutDuration { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IOverlayInternal)__overlay).FadeOutDuration; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IOverlayInternal)__overlay).FadeOutDuration = value ?? default(global::System.TimeSpan); }

        /// <summary>
        /// The label of the job input which is to be used as an overlay. The Input must specify exactly one file. You can specify
        /// an image file in JPG, PNG, GIF or BMP format, or an audio file (such as a WAV, MP3, WMA or M4A file), or a video file.
        /// See https://aka.ms/mesformats for the complete list of supported audio and video file formats.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inherited)]
        public string InputLabel { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IOverlayInternal)__overlay).InputLabel; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IOverlayInternal)__overlay).InputLabel = value ; }

        /// <summary>Internal Acessors for CropRectangle</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IRectangle Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlayInternal.CropRectangle { get => (this._cropRectangle = this._cropRectangle ?? new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.Rectangle()); set { {_cropRectangle = value;} } }

        /// <summary>Internal Acessors for Position</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IRectangle Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlayInternal.Position { get => (this._position = this._position ?? new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.Rectangle()); set { {_position = value;} } }

        /// <summary>The discriminator for derived types.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inherited)]
        public string OdataType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IOverlayInternal)__overlay).OdataType; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IOverlayInternal)__overlay).OdataType = value ; }

        /// <summary>Backing field for <see cref="Opacity" /> property.</summary>
        private double? _opacity;

        /// <summary>
        /// The opacity of the overlay. This is a value in the range [0 - 1.0]. Default is 1.0 which mean the overlay is opaque.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public double? Opacity { get => this._opacity; set => this._opacity = value; }

        /// <summary>Backing field for <see cref="Position" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IRectangle _position;

        /// <summary>The location in the input video where the overlay is applied.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IRectangle Position { get => (this._position = this._position ?? new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.Rectangle()); set => this._position = value; }

        /// <summary>
        /// The height of the rectangular region in pixels. This can be absolute pixel value (e.g 100), or relative to the size of
        /// the video (For example, 50%).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public string PositionHeight { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IRectangleInternal)Position).Height; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IRectangleInternal)Position).Height = value ?? null; }

        /// <summary>
        /// The number of pixels from the left-margin. This can be absolute pixel value (e.g 100), or relative to the size of the
        /// video (For example, 50%).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public string PositionLeft { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IRectangleInternal)Position).Left; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IRectangleInternal)Position).Left = value ?? null; }

        /// <summary>
        /// The number of pixels from the top-margin. This can be absolute pixel value (e.g 100), or relative to the size of the video
        /// (For example, 50%).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public string PositionTop { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IRectangleInternal)Position).Top; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IRectangleInternal)Position).Top = value ?? null; }

        /// <summary>
        /// The width of the rectangular region in pixels. This can be absolute pixel value (e.g 100), or relative to the size of
        /// the video (For example, 50%).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public string PositionWidth { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IRectangleInternal)Position).Width; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IRectangleInternal)Position).Width = value ?? null; }

        /// <summary>
        /// The start position, with reference to the input video, at which the overlay starts. The value should be in ISO 8601 format.
        /// For example, PT05S to start the overlay at 5 seconds into the input video. If not specified the overlay starts from the
        /// beginning of the input video.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inherited)]
        public global::System.TimeSpan? Start { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IOverlayInternal)__overlay).Start; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IOverlayInternal)__overlay).Start = value ?? default(global::System.TimeSpan); }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__overlay), __overlay);
            await eventListener.AssertObjectIsValid(nameof(__overlay), __overlay);
        }

        /// <summary>Creates an new <see cref="VideoOverlay" /> instance.</summary>
        public VideoOverlay()
        {

        }
    }
    /// Describes the properties of a video overlay.
    public partial interface IVideoOverlay :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IOverlay
    {
        /// <summary>
        /// The height of the rectangular region in pixels. This can be absolute pixel value (e.g 100), or relative to the size of
        /// the video (For example, 50%).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The height of the rectangular region in pixels. This can be absolute pixel value (e.g 100), or relative to the size of the video (For example, 50%).",
        SerializedName = @"height",
        PossibleTypes = new [] { typeof(string) })]
        string CropRectangleHeight { get; set; }
        /// <summary>
        /// The number of pixels from the left-margin. This can be absolute pixel value (e.g 100), or relative to the size of the
        /// video (For example, 50%).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of pixels from the left-margin. This can be absolute pixel value (e.g 100), or relative to the size of the video (For example, 50%).",
        SerializedName = @"left",
        PossibleTypes = new [] { typeof(string) })]
        string CropRectangleLeft { get; set; }
        /// <summary>
        /// The number of pixels from the top-margin. This can be absolute pixel value (e.g 100), or relative to the size of the video
        /// (For example, 50%).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of pixels from the top-margin. This can be absolute pixel value (e.g 100), or relative to the size of the video (For example, 50%).",
        SerializedName = @"top",
        PossibleTypes = new [] { typeof(string) })]
        string CropRectangleTop { get; set; }
        /// <summary>
        /// The width of the rectangular region in pixels. This can be absolute pixel value (e.g 100), or relative to the size of
        /// the video (For example, 50%).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The width of the rectangular region in pixels. This can be absolute pixel value (e.g 100), or relative to the size of the video (For example, 50%).",
        SerializedName = @"width",
        PossibleTypes = new [] { typeof(string) })]
        string CropRectangleWidth { get; set; }
        /// <summary>
        /// The opacity of the overlay. This is a value in the range [0 - 1.0]. Default is 1.0 which mean the overlay is opaque.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The opacity of the overlay. This is a value in the range [0 - 1.0]. Default is 1.0 which mean the overlay is opaque.",
        SerializedName = @"opacity",
        PossibleTypes = new [] { typeof(double) })]
        double? Opacity { get; set; }
        /// <summary>
        /// The height of the rectangular region in pixels. This can be absolute pixel value (e.g 100), or relative to the size of
        /// the video (For example, 50%).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The height of the rectangular region in pixels. This can be absolute pixel value (e.g 100), or relative to the size of the video (For example, 50%).",
        SerializedName = @"height",
        PossibleTypes = new [] { typeof(string) })]
        string PositionHeight { get; set; }
        /// <summary>
        /// The number of pixels from the left-margin. This can be absolute pixel value (e.g 100), or relative to the size of the
        /// video (For example, 50%).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of pixels from the left-margin. This can be absolute pixel value (e.g 100), or relative to the size of the video (For example, 50%).",
        SerializedName = @"left",
        PossibleTypes = new [] { typeof(string) })]
        string PositionLeft { get; set; }
        /// <summary>
        /// The number of pixels from the top-margin. This can be absolute pixel value (e.g 100), or relative to the size of the video
        /// (For example, 50%).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of pixels from the top-margin. This can be absolute pixel value (e.g 100), or relative to the size of the video (For example, 50%).",
        SerializedName = @"top",
        PossibleTypes = new [] { typeof(string) })]
        string PositionTop { get; set; }
        /// <summary>
        /// The width of the rectangular region in pixels. This can be absolute pixel value (e.g 100), or relative to the size of
        /// the video (For example, 50%).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The width of the rectangular region in pixels. This can be absolute pixel value (e.g 100), or relative to the size of the video (For example, 50%).",
        SerializedName = @"width",
        PossibleTypes = new [] { typeof(string) })]
        string PositionWidth { get; set; }

    }
    /// Describes the properties of a video overlay.
    internal partial interface IVideoOverlayInternal :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IOverlayInternal
    {
        /// <summary>An optional rectangular window used to crop the overlay image or video.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IRectangle CropRectangle { get; set; }
        /// <summary>
        /// The height of the rectangular region in pixels. This can be absolute pixel value (e.g 100), or relative to the size of
        /// the video (For example, 50%).
        /// </summary>
        string CropRectangleHeight { get; set; }
        /// <summary>
        /// The number of pixels from the left-margin. This can be absolute pixel value (e.g 100), or relative to the size of the
        /// video (For example, 50%).
        /// </summary>
        string CropRectangleLeft { get; set; }
        /// <summary>
        /// The number of pixels from the top-margin. This can be absolute pixel value (e.g 100), or relative to the size of the video
        /// (For example, 50%).
        /// </summary>
        string CropRectangleTop { get; set; }
        /// <summary>
        /// The width of the rectangular region in pixels. This can be absolute pixel value (e.g 100), or relative to the size of
        /// the video (For example, 50%).
        /// </summary>
        string CropRectangleWidth { get; set; }
        /// <summary>
        /// The opacity of the overlay. This is a value in the range [0 - 1.0]. Default is 1.0 which mean the overlay is opaque.
        /// </summary>
        double? Opacity { get; set; }
        /// <summary>The location in the input video where the overlay is applied.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IRectangle Position { get; set; }
        /// <summary>
        /// The height of the rectangular region in pixels. This can be absolute pixel value (e.g 100), or relative to the size of
        /// the video (For example, 50%).
        /// </summary>
        string PositionHeight { get; set; }
        /// <summary>
        /// The number of pixels from the left-margin. This can be absolute pixel value (e.g 100), or relative to the size of the
        /// video (For example, 50%).
        /// </summary>
        string PositionLeft { get; set; }
        /// <summary>
        /// The number of pixels from the top-margin. This can be absolute pixel value (e.g 100), or relative to the size of the video
        /// (For example, 50%).
        /// </summary>
        string PositionTop { get; set; }
        /// <summary>
        /// The width of the rectangular region in pixels. This can be absolute pixel value (e.g 100), or relative to the size of
        /// the video (For example, 50%).
        /// </summary>
        string PositionWidth { get; set; }

    }
}