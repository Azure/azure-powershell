// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Extensions;

    /// <summary>Class of response for listPaths action</summary>
    public partial class ListPathsResponse :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IListPathsResponse,
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IListPathsResponseInternal
    {

        /// <summary>Backing field for <see cref="DownloadPath" /> property.</summary>
        private string[] _downloadPath;

        /// <summary>Download Paths supported by current Streaming Locator</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public string[] DownloadPath { get => this._downloadPath; set => this._downloadPath = value; }

        /// <summary>Backing field for <see cref="StreamingPath" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPath[] _streamingPath;

        /// <summary>Streaming Paths supported by current Streaming Locator</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPath[] StreamingPath { get => this._streamingPath; set => this._streamingPath = value; }

        /// <summary>Creates an new <see cref="ListPathsResponse" /> instance.</summary>
        public ListPathsResponse()
        {

        }
    }
    /// Class of response for listPaths action
    public partial interface IListPathsResponse :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.IJsonSerializable
    {
        /// <summary>Download Paths supported by current Streaming Locator</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Download Paths supported by current Streaming Locator",
        SerializedName = @"downloadPaths",
        PossibleTypes = new [] { typeof(string) })]
        string[] DownloadPath { get; set; }
        /// <summary>Streaming Paths supported by current Streaming Locator</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Streaming Paths supported by current Streaming Locator",
        SerializedName = @"streamingPaths",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPath) })]
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPath[] StreamingPath { get; set; }

    }
    /// Class of response for listPaths action
    internal partial interface IListPathsResponseInternal

    {
        /// <summary>Download Paths supported by current Streaming Locator</summary>
        string[] DownloadPath { get; set; }
        /// <summary>Streaming Paths supported by current Streaming Locator</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPath[] StreamingPath { get; set; }

    }
}