// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Extensions;

    /// <summary>Class to specify which protocols are enabled</summary>
    public partial class EnabledProtocols :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IEnabledProtocols,
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IEnabledProtocolsInternal
    {

        /// <summary>Backing field for <see cref="Dash" /> property.</summary>
        private bool _dash;

        /// <summary>Enable DASH protocol or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public bool Dash { get => this._dash; set => this._dash = value; }

        /// <summary>Backing field for <see cref="Download" /> property.</summary>
        private bool _download;

        /// <summary>Enable Download protocol or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public bool Download { get => this._download; set => this._download = value; }

        /// <summary>Backing field for <see cref="Hl" /> property.</summary>
        private bool _hl;

        /// <summary>Enable HLS protocol or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public bool Hl { get => this._hl; set => this._hl = value; }

        /// <summary>Backing field for <see cref="SmoothStreaming" /> property.</summary>
        private bool _smoothStreaming;

        /// <summary>Enable SmoothStreaming protocol or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public bool SmoothStreaming { get => this._smoothStreaming; set => this._smoothStreaming = value; }

        /// <summary>Creates an new <see cref="EnabledProtocols" /> instance.</summary>
        public EnabledProtocols()
        {

        }
    }
    /// Class to specify which protocols are enabled
    public partial interface IEnabledProtocols :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.IJsonSerializable
    {
        /// <summary>Enable DASH protocol or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Enable DASH protocol or not",
        SerializedName = @"dash",
        PossibleTypes = new [] { typeof(bool) })]
        bool Dash { get; set; }
        /// <summary>Enable Download protocol or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Enable Download protocol or not",
        SerializedName = @"download",
        PossibleTypes = new [] { typeof(bool) })]
        bool Download { get; set; }
        /// <summary>Enable HLS protocol or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Enable HLS protocol or not",
        SerializedName = @"hls",
        PossibleTypes = new [] { typeof(bool) })]
        bool Hl { get; set; }
        /// <summary>Enable SmoothStreaming protocol or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Enable SmoothStreaming protocol or not",
        SerializedName = @"smoothStreaming",
        PossibleTypes = new [] { typeof(bool) })]
        bool SmoothStreaming { get; set; }

    }
    /// Class to specify which protocols are enabled
    internal partial interface IEnabledProtocolsInternal

    {
        /// <summary>Enable DASH protocol or not</summary>
        bool Dash { get; set; }
        /// <summary>Enable Download protocol or not</summary>
        bool Download { get; set; }
        /// <summary>Enable HLS protocol or not</summary>
        bool Hl { get; set; }
        /// <summary>Enable SmoothStreaming protocol or not</summary>
        bool SmoothStreaming { get; set; }

    }
}