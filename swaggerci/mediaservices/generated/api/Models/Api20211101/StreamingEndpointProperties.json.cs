// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Extensions;

    /// <summary>The streaming endpoint properties.</summary>
    public partial class StreamingEndpointProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingEndpointProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingEndpointProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingEndpointProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonObject json ? new StreamingEndpointProperties(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonObject into a new instance of <see cref="StreamingEndpointProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal StreamingEndpointProperties(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_accessControl = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonObject>("accessControl"), out var __jsonAccessControl) ? Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.StreamingEndpointAccessControl.FromJson(__jsonAccessControl) : AccessControl;}
            {_crossSiteAccessPolicy = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonObject>("crossSiteAccessPolicies"), out var __jsonCrossSiteAccessPolicies) ? Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.CrossSiteAccessPolicies.FromJson(__jsonCrossSiteAccessPolicies) : CrossSiteAccessPolicy;}
            {_description = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonString>("description"), out var __jsonDescription) ? (string)__jsonDescription : (string)Description;}
            {_scaleUnit = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNumber>("scaleUnits"), out var __jsonScaleUnits) ? (int)__jsonScaleUnits : ScaleUnit;}
            {_availabilitySetName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonString>("availabilitySetName"), out var __jsonAvailabilitySetName) ? (string)__jsonAvailabilitySetName : (string)AvailabilitySetName;}
            {_maxCacheAge = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNumber>("maxCacheAge"), out var __jsonMaxCacheAge) ? (long?)__jsonMaxCacheAge : MaxCacheAge;}
            {_customHostName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonArray>("customHostNames"), out var __jsonCustomHostNames) ? If( __jsonCustomHostNames as Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(string) (__u is Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonString __t ? (string)(__t.ToString()) : null)) ))() : null : CustomHostName;}
            {_hostName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonString>("hostName"), out var __jsonHostName) ? (string)__jsonHostName : (string)HostName;}
            {_cdnEnabled = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonBoolean>("cdnEnabled"), out var __jsonCdnEnabled) ? (bool?)__jsonCdnEnabled : CdnEnabled;}
            {_cdnProvider = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonString>("cdnProvider"), out var __jsonCdnProvider) ? (string)__jsonCdnProvider : (string)CdnProvider;}
            {_cdnProfile = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonString>("cdnProfile"), out var __jsonCdnProfile) ? (string)__jsonCdnProfile : (string)CdnProfile;}
            {_provisioningState = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonString>("provisioningState"), out var __jsonProvisioningState) ? (string)__jsonProvisioningState : (string)ProvisioningState;}
            {_resourceState = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonString>("resourceState"), out var __jsonResourceState) ? (string)__jsonResourceState : (string)ResourceState;}
            {_freeTrialEndTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonString>("freeTrialEndTime"), out var __jsonFreeTrialEndTime) ? global::System.DateTime.TryParse((string)__jsonFreeTrialEndTime, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonFreeTrialEndTimeValue) ? __jsonFreeTrialEndTimeValue : FreeTrialEndTime : FreeTrialEndTime;}
            {_created = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonString>("created"), out var __jsonCreated) ? global::System.DateTime.TryParse((string)__jsonCreated, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonCreatedValue) ? __jsonCreatedValue : Created : Created;}
            {_lastModified = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonString>("lastModified"), out var __jsonLastModified) ? global::System.DateTime.TryParse((string)__jsonLastModified, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonLastModifiedValue) ? __jsonLastModifiedValue : LastModified : LastModified;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="StreamingEndpointProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="StreamingEndpointProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != this._accessControl ? (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode) this._accessControl.ToJson(null,serializationMode) : null, "accessControl" ,container.Add );
            AddIf( null != this._crossSiteAccessPolicy ? (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode) this._crossSiteAccessPolicy.ToJson(null,serializationMode) : null, "crossSiteAccessPolicies" ,container.Add );
            AddIf( null != (((object)this._description)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonString(this._description.ToString()) : null, "description" ,container.Add );
            AddIf( (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNumber(this._scaleUnit), "scaleUnits" ,container.Add );
            AddIf( null != (((object)this._availabilitySetName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonString(this._availabilitySetName.ToString()) : null, "availabilitySetName" ,container.Add );
            AddIf( null != this._maxCacheAge ? (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNumber((long)this._maxCacheAge) : null, "maxCacheAge" ,container.Add );
            if (null != this._customHostName)
            {
                var __w = new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.XNodeArray();
                foreach( var __x in this._customHostName )
                {
                    AddIf(null != (((object)__x)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonString(__x.ToString()) : null ,__w.Add);
                }
                container.Add("customHostNames",__w);
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._hostName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonString(this._hostName.ToString()) : null, "hostName" ,container.Add );
            }
            AddIf( null != this._cdnEnabled ? (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonBoolean((bool)this._cdnEnabled) : null, "cdnEnabled" ,container.Add );
            AddIf( null != (((object)this._cdnProvider)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonString(this._cdnProvider.ToString()) : null, "cdnProvider" ,container.Add );
            AddIf( null != (((object)this._cdnProfile)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonString(this._cdnProfile.ToString()) : null, "cdnProfile" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._provisioningState)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonString(this._provisioningState.ToString()) : null, "provisioningState" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._resourceState)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonString(this._resourceState.ToString()) : null, "resourceState" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._freeTrialEndTime ? (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonString(this._freeTrialEndTime?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "freeTrialEndTime" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._created ? (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonString(this._created?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "created" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._lastModified ? (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonString(this._lastModified?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "lastModified" ,container.Add );
            }
            AfterToJson(ref container);
            return container;
        }
    }
}