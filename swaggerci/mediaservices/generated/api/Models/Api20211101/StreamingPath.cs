// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Extensions;

    /// <summary>Class of paths for streaming</summary>
    public partial class StreamingPath :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPath,
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPathInternal
    {

        /// <summary>Backing field for <see cref="EncryptionScheme" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.EncryptionScheme _encryptionScheme;

        /// <summary>Encryption scheme</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.EncryptionScheme EncryptionScheme { get => this._encryptionScheme; set => this._encryptionScheme = value; }

        /// <summary>Backing field for <see cref="Path" /> property.</summary>
        private string[] _path;

        /// <summary>Streaming paths for each protocol and encryptionScheme pair</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public string[] Path { get => this._path; set => this._path = value; }

        /// <summary>Backing field for <see cref="StreamingProtocol" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StreamingPolicyStreamingProtocol _streamingProtocol;

        /// <summary>Streaming protocol</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StreamingPolicyStreamingProtocol StreamingProtocol { get => this._streamingProtocol; set => this._streamingProtocol = value; }

        /// <summary>Creates an new <see cref="StreamingPath" /> instance.</summary>
        public StreamingPath()
        {

        }
    }
    /// Class of paths for streaming
    public partial interface IStreamingPath :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.IJsonSerializable
    {
        /// <summary>Encryption scheme</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Encryption scheme",
        SerializedName = @"encryptionScheme",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.EncryptionScheme) })]
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.EncryptionScheme EncryptionScheme { get; set; }
        /// <summary>Streaming paths for each protocol and encryptionScheme pair</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Streaming paths for each protocol and encryptionScheme pair",
        SerializedName = @"paths",
        PossibleTypes = new [] { typeof(string) })]
        string[] Path { get; set; }
        /// <summary>Streaming protocol</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Streaming protocol",
        SerializedName = @"streamingProtocol",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StreamingPolicyStreamingProtocol) })]
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StreamingPolicyStreamingProtocol StreamingProtocol { get; set; }

    }
    /// Class of paths for streaming
    internal partial interface IStreamingPathInternal

    {
        /// <summary>Encryption scheme</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.EncryptionScheme EncryptionScheme { get; set; }
        /// <summary>Streaming paths for each protocol and encryptionScheme pair</summary>
        string[] Path { get; set; }
        /// <summary>Streaming protocol</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StreamingPolicyStreamingProtocol StreamingProtocol { get; set; }

    }
}