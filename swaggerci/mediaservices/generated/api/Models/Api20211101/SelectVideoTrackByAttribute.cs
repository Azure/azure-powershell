// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Extensions;

    /// <summary>
    /// Select video tracks from the input by specifying an attribute and an attribute filter.
    /// </summary>
    public partial class SelectVideoTrackByAttribute :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ISelectVideoTrackByAttribute,
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ISelectVideoTrackByAttributeInternal,
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ITrackDescriptor"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ITrackDescriptor __trackDescriptor = new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.TrackDescriptor();

        /// <summary>Backing field for <see cref="Attribute" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.TrackAttribute _attribute;

        /// <summary>The TrackAttribute to filter the tracks by.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.TrackAttribute Attribute { get => this._attribute; set => this._attribute = value; }

        /// <summary>Backing field for <see cref="Filter" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.AttributeFilter _filter;

        /// <summary>
        /// The type of AttributeFilter to apply to the TrackAttribute in order to select the tracks.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.AttributeFilter Filter { get => this._filter; set => this._filter = value; }

        /// <summary>Backing field for <see cref="FilterValue" /> property.</summary>
        private string _filterValue;

        /// <summary>
        /// The value to filter the tracks by. Only used when AttributeFilter.ValueEquals is specified for the Filter property. For
        /// TrackAttribute.Bitrate, this should be an integer value in bits per second (e.g: '1500000'). The TrackAttribute.Language
        /// is not supported for video tracks.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public string FilterValue { get => this._filterValue; set => this._filterValue = value; }

        /// <summary>The discriminator for derived types.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inherited)]
        public string OdataType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ITrackDescriptorInternal)__trackDescriptor).OdataType; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ITrackDescriptorInternal)__trackDescriptor).OdataType = value ; }

        /// <summary>Creates an new <see cref="SelectVideoTrackByAttribute" /> instance.</summary>
        public SelectVideoTrackByAttribute()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__trackDescriptor), __trackDescriptor);
            await eventListener.AssertObjectIsValid(nameof(__trackDescriptor), __trackDescriptor);
        }
    }
    /// Select video tracks from the input by specifying an attribute and an attribute filter.
    public partial interface ISelectVideoTrackByAttribute :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ITrackDescriptor
    {
        /// <summary>The TrackAttribute to filter the tracks by.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The TrackAttribute to filter the tracks by.",
        SerializedName = @"attribute",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.TrackAttribute) })]
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.TrackAttribute Attribute { get; set; }
        /// <summary>
        /// The type of AttributeFilter to apply to the TrackAttribute in order to select the tracks.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The type of AttributeFilter to apply to the TrackAttribute in order to select the tracks.",
        SerializedName = @"filter",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.AttributeFilter) })]
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.AttributeFilter Filter { get; set; }
        /// <summary>
        /// The value to filter the tracks by. Only used when AttributeFilter.ValueEquals is specified for the Filter property. For
        /// TrackAttribute.Bitrate, this should be an integer value in bits per second (e.g: '1500000'). The TrackAttribute.Language
        /// is not supported for video tracks.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The value to filter the tracks by.  Only used when AttributeFilter.ValueEquals is specified for the Filter property. For TrackAttribute.Bitrate, this should be an integer value in bits per second (e.g: '1500000').  The TrackAttribute.Language is not supported for video tracks.",
        SerializedName = @"filterValue",
        PossibleTypes = new [] { typeof(string) })]
        string FilterValue { get; set; }

    }
    /// Select video tracks from the input by specifying an attribute and an attribute filter.
    internal partial interface ISelectVideoTrackByAttributeInternal :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ITrackDescriptorInternal
    {
        /// <summary>The TrackAttribute to filter the tracks by.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.TrackAttribute Attribute { get; set; }
        /// <summary>
        /// The type of AttributeFilter to apply to the TrackAttribute in order to select the tracks.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.AttributeFilter Filter { get; set; }
        /// <summary>
        /// The value to filter the tracks by. Only used when AttributeFilter.ValueEquals is specified for the Filter property. For
        /// TrackAttribute.Bitrate, this should be an integer value in bits per second (e.g: '1500000'). The TrackAttribute.Language
        /// is not supported for video tracks.
        /// </summary>
        string FilterValue { get; set; }

    }
}