// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Extensions;

    /// <summary>Represents an output file produced.</summary>
    public partial class OutputFile :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IOutputFile,
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IOutputFileInternal
    {

        /// <summary>Backing field for <see cref="Label" /> property.</summary>
        private string[] _label;

        /// <summary>
        /// The list of labels that describe how the encoder should multiplex video and audio into an output file. For example, if
        /// the encoder is producing two video layers with labels v1 and v2, and one audio layer with label a1, then an array like
        /// '[v1, a1]' tells the encoder to produce an output file with the video track represented by v1 and the audio track represented
        /// by a1.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public string[] Label { get => this._label; set => this._label = value; }

        /// <summary>Creates an new <see cref="OutputFile" /> instance.</summary>
        public OutputFile()
        {

        }
    }
    /// Represents an output file produced.
    public partial interface IOutputFile :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The list of labels that describe how the encoder should multiplex video and audio into an output file. For example, if
        /// the encoder is producing two video layers with labels v1 and v2, and one audio layer with label a1, then an array like
        /// '[v1, a1]' tells the encoder to produce an output file with the video track represented by v1 and the audio track represented
        /// by a1.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The list of labels that describe how the encoder should multiplex video and audio into an output file. For example, if the encoder is producing two video layers with labels v1 and v2, and one audio layer with label a1, then an array like '[v1, a1]' tells the encoder to produce an output file with the video track represented by v1 and the audio track represented by a1.",
        SerializedName = @"labels",
        PossibleTypes = new [] { typeof(string) })]
        string[] Label { get; set; }

    }
    /// Represents an output file produced.
    internal partial interface IOutputFileInternal

    {
        /// <summary>
        /// The list of labels that describe how the encoder should multiplex video and audio into an output file. For example, if
        /// the encoder is producing two video layers with labels v1 and v2, and one audio layer with label a1, then an array like
        /// '[v1, a1]' tells the encoder to produce an output file with the video track represented by v1 and the audio track represented
        /// by a1.
        /// </summary>
        string[] Label { get; set; }

    }
}