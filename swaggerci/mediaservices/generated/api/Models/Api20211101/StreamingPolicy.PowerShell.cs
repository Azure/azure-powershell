// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101
{
    using Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.PowerShell;

    /// <summary>A Streaming Policy resource</summary>
    [System.ComponentModel.TypeConverter(typeof(StreamingPolicyTypeConverter))]
    public partial class StreamingPolicy
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.StreamingPolicy"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicy" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicy DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new StreamingPolicy(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.StreamingPolicy"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicy" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicy DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new StreamingPolicy(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="StreamingPolicy" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="StreamingPolicy" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicy FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.StreamingPolicy"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal StreamingPolicy(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.StreamingPolicyPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).SystemData = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.ISystemData) content.GetValueForProperty("SystemData",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).SystemData, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("EnvelopeEncryption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryption = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IEnvelopeEncryption) content.GetValueForProperty("EnvelopeEncryption",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryption, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.EnvelopeEncryptionTypeConverter.ConvertFrom);
            }
            if (content.Contains("NoEncryption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).NoEncryption = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.INoEncryption) content.GetValueForProperty("NoEncryption",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).NoEncryption, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.NoEncryptionTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("CommonEncryptionCenc"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCenc = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ICommonEncryptionCenc) content.GetValueForProperty("CommonEncryptionCenc",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCenc, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.CommonEncryptionCencTypeConverter.ConvertFrom);
            }
            if (content.Contains("CommonEncryptionCbc"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbc = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ICommonEncryptionCbcs) content.GetValueForProperty("CommonEncryptionCbc",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbc, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.CommonEncryptionCbcsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Created"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).Created = (global::System.DateTime?) content.GetValueForProperty("Created",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).Created, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("DefaultContentKeyPolicyName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).DefaultContentKeyPolicyName = (string) content.GetValueForProperty("DefaultContentKeyPolicyName",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).DefaultContentKeyPolicyName, global::System.Convert.ToString);
            }
            if (content.Contains("EnvelopeEncryptionEnabledProtocol"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryptionEnabledProtocol = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IEnabledProtocols) content.GetValueForProperty("EnvelopeEncryptionEnabledProtocol",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryptionEnabledProtocol, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.EnabledProtocolsTypeConverter.ConvertFrom);
            }
            if (content.Contains("EnvelopeEncryptionClearTrack"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryptionClearTrack = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ITrackSelection[]) content.GetValueForProperty("EnvelopeEncryptionClearTrack",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryptionClearTrack, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ITrackSelection>(__y, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.TrackSelectionTypeConverter.ConvertFrom));
            }
            if (content.Contains("CommonEncryptionCencEnabledProtocol"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencEnabledProtocol = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IEnabledProtocols) content.GetValueForProperty("CommonEncryptionCencEnabledProtocol",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencEnabledProtocol, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.EnabledProtocolsTypeConverter.ConvertFrom);
            }
            if (content.Contains("CommonEncryptionCencClearTrack"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencClearTrack = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ITrackSelection[]) content.GetValueForProperty("CommonEncryptionCencClearTrack",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencClearTrack, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ITrackSelection>(__y, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.TrackSelectionTypeConverter.ConvertFrom));
            }
            if (content.Contains("CommonEncryptionCbcEnabledProtocol"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcEnabledProtocol = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IEnabledProtocols) content.GetValueForProperty("CommonEncryptionCbcEnabledProtocol",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcEnabledProtocol, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.EnabledProtocolsTypeConverter.ConvertFrom);
            }
            if (content.Contains("CommonEncryptionCbcClearTrack"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcClearTrack = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ITrackSelection[]) content.GetValueForProperty("CommonEncryptionCbcClearTrack",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcClearTrack, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ITrackSelection>(__y, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.TrackSelectionTypeConverter.ConvertFrom));
            }
            if (content.Contains("NoEncryptionEnabledProtocol"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).NoEncryptionEnabledProtocol = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IEnabledProtocols) content.GetValueForProperty("NoEncryptionEnabledProtocol",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).NoEncryptionEnabledProtocol, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.EnabledProtocolsTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).SystemDataCreatedByType = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.CreatedByType?) content.GetValueForProperty("SystemDataCreatedByType",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).SystemDataCreatedByType, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).SystemDataLastModifiedByType = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.CreatedByType?) content.GetValueForProperty("SystemDataLastModifiedByType",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).SystemDataLastModifiedByType, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("EnvelopeEncryptionContentKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryptionContentKey = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyContentKeys) content.GetValueForProperty("EnvelopeEncryptionContentKey",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryptionContentKey, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.StreamingPolicyContentKeysTypeConverter.ConvertFrom);
            }
            if (content.Contains("EnvelopeEncryptionCustomKeyAcquisitionUrlTemplate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryptionCustomKeyAcquisitionUrlTemplate = (string) content.GetValueForProperty("EnvelopeEncryptionCustomKeyAcquisitionUrlTemplate",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryptionCustomKeyAcquisitionUrlTemplate, global::System.Convert.ToString);
            }
            if (content.Contains("EnvelopeEncryptionContentKeysDefaultKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryptionContentKeysDefaultKey = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IDefaultKey) content.GetValueForProperty("EnvelopeEncryptionContentKeysDefaultKey",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryptionContentKeysDefaultKey, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.DefaultKeyTypeConverter.ConvertFrom);
            }
            if (content.Contains("CommonEncryptionCencContentKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencContentKey = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyContentKeys) content.GetValueForProperty("CommonEncryptionCencContentKey",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencContentKey, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.StreamingPolicyContentKeysTypeConverter.ConvertFrom);
            }
            if (content.Contains("CommonEncryptionCencDrm"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencDrm = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ICencDrmConfiguration) content.GetValueForProperty("CommonEncryptionCencDrm",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencDrm, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.CencDrmConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("CommonEncryptionCencContentKeysDefaultKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencContentKeysDefaultKey = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IDefaultKey) content.GetValueForProperty("CommonEncryptionCencContentKeysDefaultKey",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencContentKeysDefaultKey, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.DefaultKeyTypeConverter.ConvertFrom);
            }
            if (content.Contains("CommonEncryptionCbcContentKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcContentKey = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyContentKeys) content.GetValueForProperty("CommonEncryptionCbcContentKey",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcContentKey, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.StreamingPolicyContentKeysTypeConverter.ConvertFrom);
            }
            if (content.Contains("CommonEncryptionCbcDrm"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcDrm = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ICbcsDrmConfiguration) content.GetValueForProperty("CommonEncryptionCbcDrm",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcDrm, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.CbcsDrmConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("CommonEncryptionCbcsContentKeysDefaultKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsContentKeysDefaultKey = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IDefaultKey) content.GetValueForProperty("CommonEncryptionCbcsContentKeysDefaultKey",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsContentKeysDefaultKey, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.DefaultKeyTypeConverter.ConvertFrom);
            }
            if (content.Contains("EnvelopeEncryptionEnabledProtocolsDownload"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryptionEnabledProtocolsDownload = (bool) content.GetValueForProperty("EnvelopeEncryptionEnabledProtocolsDownload",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryptionEnabledProtocolsDownload, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EnvelopeEncryptionEnabledProtocolsDash"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryptionEnabledProtocolsDash = (bool) content.GetValueForProperty("EnvelopeEncryptionEnabledProtocolsDash",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryptionEnabledProtocolsDash, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EnvelopeEncryptionEnabledProtocolsHl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryptionEnabledProtocolsHl = (bool) content.GetValueForProperty("EnvelopeEncryptionEnabledProtocolsHl",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryptionEnabledProtocolsHl, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EnvelopeEncryptionEnabledProtocolsSmoothStreaming"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryptionEnabledProtocolsSmoothStreaming = (bool) content.GetValueForProperty("EnvelopeEncryptionEnabledProtocolsSmoothStreaming",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryptionEnabledProtocolsSmoothStreaming, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EnvelopeEncryptionContentKeysKeyToTrackMapping"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryptionContentKeysKeyToTrackMapping = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyContentKey[]) content.GetValueForProperty("EnvelopeEncryptionContentKeysKeyToTrackMapping",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryptionContentKeysKeyToTrackMapping, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyContentKey>(__y, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.StreamingPolicyContentKeyTypeConverter.ConvertFrom));
            }
            if (content.Contains("EnvelopeEncryptionContentKeysDefaultKeyLabel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryptionContentKeysDefaultKeyLabel = (string) content.GetValueForProperty("EnvelopeEncryptionContentKeysDefaultKeyLabel",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryptionContentKeysDefaultKeyLabel, global::System.Convert.ToString);
            }
            if (content.Contains("EnvelopeEncryptionContentKeysDefaultKeyPolicyName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryptionContentKeysDefaultKeyPolicyName = (string) content.GetValueForProperty("EnvelopeEncryptionContentKeysDefaultKeyPolicyName",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryptionContentKeysDefaultKeyPolicyName, global::System.Convert.ToString);
            }
            if (content.Contains("CommonEncryptionCencEnabledProtocolsDownload"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencEnabledProtocolsDownload = (bool) content.GetValueForProperty("CommonEncryptionCencEnabledProtocolsDownload",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencEnabledProtocolsDownload, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CommonEncryptionCencEnabledProtocolsDash"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencEnabledProtocolsDash = (bool) content.GetValueForProperty("CommonEncryptionCencEnabledProtocolsDash",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencEnabledProtocolsDash, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CommonEncryptionCencEnabledProtocolsHl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencEnabledProtocolsHl = (bool) content.GetValueForProperty("CommonEncryptionCencEnabledProtocolsHl",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencEnabledProtocolsHl, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CommonEncryptionCencEnabledProtocolsSmoothStreaming"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencEnabledProtocolsSmoothStreaming = (bool) content.GetValueForProperty("CommonEncryptionCencEnabledProtocolsSmoothStreaming",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencEnabledProtocolsSmoothStreaming, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CommonEncryptionCencContentKeysKeyToTrackMapping"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencContentKeysKeyToTrackMapping = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyContentKey[]) content.GetValueForProperty("CommonEncryptionCencContentKeysKeyToTrackMapping",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencContentKeysKeyToTrackMapping, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyContentKey>(__y, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.StreamingPolicyContentKeyTypeConverter.ConvertFrom));
            }
            if (content.Contains("CommonEncryptionCencContentKeysDefaultKeyLabel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencContentKeysDefaultKeyLabel = (string) content.GetValueForProperty("CommonEncryptionCencContentKeysDefaultKeyLabel",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencContentKeysDefaultKeyLabel, global::System.Convert.ToString);
            }
            if (content.Contains("CommonEncryptionCencContentKeysDefaultKeyPolicyName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencContentKeysDefaultKeyPolicyName = (string) content.GetValueForProperty("CommonEncryptionCencContentKeysDefaultKeyPolicyName",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencContentKeysDefaultKeyPolicyName, global::System.Convert.ToString);
            }
            if (content.Contains("CommonEncryptionCencDrmPlayReady"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencDrmPlayReady = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyPlayReadyConfiguration) content.GetValueForProperty("CommonEncryptionCencDrmPlayReady",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencDrmPlayReady, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.StreamingPolicyPlayReadyConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("CommonEncryptionCencDrmWidevine"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencDrmWidevine = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyWidevineConfiguration) content.GetValueForProperty("CommonEncryptionCencDrmWidevine",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencDrmWidevine, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.StreamingPolicyWidevineConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("CommonEncryptionCbcsEnabledProtocolsDownload"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsEnabledProtocolsDownload = (bool) content.GetValueForProperty("CommonEncryptionCbcsEnabledProtocolsDownload",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsEnabledProtocolsDownload, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CommonEncryptionCbcsEnabledProtocolsDash"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsEnabledProtocolsDash = (bool) content.GetValueForProperty("CommonEncryptionCbcsEnabledProtocolsDash",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsEnabledProtocolsDash, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CommonEncryptionCbcsEnabledProtocolsHl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsEnabledProtocolsHl = (bool) content.GetValueForProperty("CommonEncryptionCbcsEnabledProtocolsHl",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsEnabledProtocolsHl, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CommonEncryptionCbcsEnabledProtocolsSmoothStreaming"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsEnabledProtocolsSmoothStreaming = (bool) content.GetValueForProperty("CommonEncryptionCbcsEnabledProtocolsSmoothStreaming",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsEnabledProtocolsSmoothStreaming, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CommonEncryptionCbcsContentKeysKeyToTrackMapping"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsContentKeysKeyToTrackMapping = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyContentKey[]) content.GetValueForProperty("CommonEncryptionCbcsContentKeysKeyToTrackMapping",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsContentKeysKeyToTrackMapping, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyContentKey>(__y, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.StreamingPolicyContentKeyTypeConverter.ConvertFrom));
            }
            if (content.Contains("CommonEncryptionCbcsContentKeysDefaultKeyLabel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsContentKeysDefaultKeyLabel = (string) content.GetValueForProperty("CommonEncryptionCbcsContentKeysDefaultKeyLabel",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsContentKeysDefaultKeyLabel, global::System.Convert.ToString);
            }
            if (content.Contains("CommonEncryptionCbcsContentKeysDefaultKeyPolicyName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsContentKeysDefaultKeyPolicyName = (string) content.GetValueForProperty("CommonEncryptionCbcsContentKeysDefaultKeyPolicyName",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsContentKeysDefaultKeyPolicyName, global::System.Convert.ToString);
            }
            if (content.Contains("DrmFairPlay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).DrmFairPlay = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyFairPlayConfiguration) content.GetValueForProperty("DrmFairPlay",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).DrmFairPlay, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.StreamingPolicyFairPlayConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("CommonEncryptionCbcsDrmPlayReady"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsDrmPlayReady = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyPlayReadyConfiguration) content.GetValueForProperty("CommonEncryptionCbcsDrmPlayReady",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsDrmPlayReady, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.StreamingPolicyPlayReadyConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("CommonEncryptionCbcsDrmWidevine"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsDrmWidevine = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyWidevineConfiguration) content.GetValueForProperty("CommonEncryptionCbcsDrmWidevine",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsDrmWidevine, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.StreamingPolicyWidevineConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("NoEncryptionEnabledProtocolsDownload"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).NoEncryptionEnabledProtocolsDownload = (bool) content.GetValueForProperty("NoEncryptionEnabledProtocolsDownload",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).NoEncryptionEnabledProtocolsDownload, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("NoEncryptionEnabledProtocolsDash"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).NoEncryptionEnabledProtocolsDash = (bool) content.GetValueForProperty("NoEncryptionEnabledProtocolsDash",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).NoEncryptionEnabledProtocolsDash, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("NoEncryptionEnabledProtocolsHl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).NoEncryptionEnabledProtocolsHl = (bool) content.GetValueForProperty("NoEncryptionEnabledProtocolsHl",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).NoEncryptionEnabledProtocolsHl, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("NoEncryptionEnabledProtocolsSmoothStreaming"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).NoEncryptionEnabledProtocolsSmoothStreaming = (bool) content.GetValueForProperty("NoEncryptionEnabledProtocolsSmoothStreaming",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).NoEncryptionEnabledProtocolsSmoothStreaming, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CommonEncryptionCencDrmPlayReadyCustomLicenseAcquisitionUrlTemplate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencDrmPlayReadyCustomLicenseAcquisitionUrlTemplate = (string) content.GetValueForProperty("CommonEncryptionCencDrmPlayReadyCustomLicenseAcquisitionUrlTemplate",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencDrmPlayReadyCustomLicenseAcquisitionUrlTemplate, global::System.Convert.ToString);
            }
            if (content.Contains("CommonEncryptionCencDrmPlayReadyCustomAttribute"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencDrmPlayReadyCustomAttribute = (string) content.GetValueForProperty("CommonEncryptionCencDrmPlayReadyCustomAttribute",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencDrmPlayReadyCustomAttribute, global::System.Convert.ToString);
            }
            if (content.Contains("CommonEncryptionCencDrmWidevineCustomLicenseAcquisitionUrlTemplate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencDrmWidevineCustomLicenseAcquisitionUrlTemplate = (string) content.GetValueForProperty("CommonEncryptionCencDrmWidevineCustomLicenseAcquisitionUrlTemplate",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencDrmWidevineCustomLicenseAcquisitionUrlTemplate, global::System.Convert.ToString);
            }
            if (content.Contains("FairPlayCustomLicenseAcquisitionUrlTemplate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).FairPlayCustomLicenseAcquisitionUrlTemplate = (string) content.GetValueForProperty("FairPlayCustomLicenseAcquisitionUrlTemplate",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).FairPlayCustomLicenseAcquisitionUrlTemplate, global::System.Convert.ToString);
            }
            if (content.Contains("FairPlayAllowPersistentLicense"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).FairPlayAllowPersistentLicense = (bool) content.GetValueForProperty("FairPlayAllowPersistentLicense",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).FairPlayAllowPersistentLicense, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CommonEncryptionCbcsDrmPlayReadyCustomLicenseAcquisitionUrlTemplate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsDrmPlayReadyCustomLicenseAcquisitionUrlTemplate = (string) content.GetValueForProperty("CommonEncryptionCbcsDrmPlayReadyCustomLicenseAcquisitionUrlTemplate",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsDrmPlayReadyCustomLicenseAcquisitionUrlTemplate, global::System.Convert.ToString);
            }
            if (content.Contains("CommonEncryptionCbcsDrmPlayReadyCustomAttribute"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsDrmPlayReadyCustomAttribute = (string) content.GetValueForProperty("CommonEncryptionCbcsDrmPlayReadyCustomAttribute",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsDrmPlayReadyCustomAttribute, global::System.Convert.ToString);
            }
            if (content.Contains("CommonEncryptionCbcsDrmWidevineCustomLicenseAcquisitionUrlTemplate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsDrmWidevineCustomLicenseAcquisitionUrlTemplate = (string) content.GetValueForProperty("CommonEncryptionCbcsDrmWidevineCustomLicenseAcquisitionUrlTemplate",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsDrmWidevineCustomLicenseAcquisitionUrlTemplate, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.StreamingPolicy"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal StreamingPolicy(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.StreamingPolicyPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).SystemData = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.ISystemData) content.GetValueForProperty("SystemData",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).SystemData, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("EnvelopeEncryption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryption = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IEnvelopeEncryption) content.GetValueForProperty("EnvelopeEncryption",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryption, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.EnvelopeEncryptionTypeConverter.ConvertFrom);
            }
            if (content.Contains("NoEncryption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).NoEncryption = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.INoEncryption) content.GetValueForProperty("NoEncryption",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).NoEncryption, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.NoEncryptionTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("CommonEncryptionCenc"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCenc = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ICommonEncryptionCenc) content.GetValueForProperty("CommonEncryptionCenc",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCenc, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.CommonEncryptionCencTypeConverter.ConvertFrom);
            }
            if (content.Contains("CommonEncryptionCbc"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbc = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ICommonEncryptionCbcs) content.GetValueForProperty("CommonEncryptionCbc",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbc, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.CommonEncryptionCbcsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Created"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).Created = (global::System.DateTime?) content.GetValueForProperty("Created",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).Created, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("DefaultContentKeyPolicyName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).DefaultContentKeyPolicyName = (string) content.GetValueForProperty("DefaultContentKeyPolicyName",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).DefaultContentKeyPolicyName, global::System.Convert.ToString);
            }
            if (content.Contains("EnvelopeEncryptionEnabledProtocol"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryptionEnabledProtocol = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IEnabledProtocols) content.GetValueForProperty("EnvelopeEncryptionEnabledProtocol",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryptionEnabledProtocol, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.EnabledProtocolsTypeConverter.ConvertFrom);
            }
            if (content.Contains("EnvelopeEncryptionClearTrack"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryptionClearTrack = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ITrackSelection[]) content.GetValueForProperty("EnvelopeEncryptionClearTrack",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryptionClearTrack, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ITrackSelection>(__y, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.TrackSelectionTypeConverter.ConvertFrom));
            }
            if (content.Contains("CommonEncryptionCencEnabledProtocol"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencEnabledProtocol = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IEnabledProtocols) content.GetValueForProperty("CommonEncryptionCencEnabledProtocol",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencEnabledProtocol, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.EnabledProtocolsTypeConverter.ConvertFrom);
            }
            if (content.Contains("CommonEncryptionCencClearTrack"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencClearTrack = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ITrackSelection[]) content.GetValueForProperty("CommonEncryptionCencClearTrack",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencClearTrack, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ITrackSelection>(__y, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.TrackSelectionTypeConverter.ConvertFrom));
            }
            if (content.Contains("CommonEncryptionCbcEnabledProtocol"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcEnabledProtocol = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IEnabledProtocols) content.GetValueForProperty("CommonEncryptionCbcEnabledProtocol",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcEnabledProtocol, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.EnabledProtocolsTypeConverter.ConvertFrom);
            }
            if (content.Contains("CommonEncryptionCbcClearTrack"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcClearTrack = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ITrackSelection[]) content.GetValueForProperty("CommonEncryptionCbcClearTrack",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcClearTrack, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ITrackSelection>(__y, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.TrackSelectionTypeConverter.ConvertFrom));
            }
            if (content.Contains("NoEncryptionEnabledProtocol"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).NoEncryptionEnabledProtocol = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IEnabledProtocols) content.GetValueForProperty("NoEncryptionEnabledProtocol",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).NoEncryptionEnabledProtocol, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.EnabledProtocolsTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).SystemDataCreatedByType = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.CreatedByType?) content.GetValueForProperty("SystemDataCreatedByType",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).SystemDataCreatedByType, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).SystemDataLastModifiedByType = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.CreatedByType?) content.GetValueForProperty("SystemDataLastModifiedByType",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).SystemDataLastModifiedByType, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("EnvelopeEncryptionContentKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryptionContentKey = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyContentKeys) content.GetValueForProperty("EnvelopeEncryptionContentKey",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryptionContentKey, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.StreamingPolicyContentKeysTypeConverter.ConvertFrom);
            }
            if (content.Contains("EnvelopeEncryptionCustomKeyAcquisitionUrlTemplate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryptionCustomKeyAcquisitionUrlTemplate = (string) content.GetValueForProperty("EnvelopeEncryptionCustomKeyAcquisitionUrlTemplate",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryptionCustomKeyAcquisitionUrlTemplate, global::System.Convert.ToString);
            }
            if (content.Contains("EnvelopeEncryptionContentKeysDefaultKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryptionContentKeysDefaultKey = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IDefaultKey) content.GetValueForProperty("EnvelopeEncryptionContentKeysDefaultKey",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryptionContentKeysDefaultKey, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.DefaultKeyTypeConverter.ConvertFrom);
            }
            if (content.Contains("CommonEncryptionCencContentKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencContentKey = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyContentKeys) content.GetValueForProperty("CommonEncryptionCencContentKey",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencContentKey, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.StreamingPolicyContentKeysTypeConverter.ConvertFrom);
            }
            if (content.Contains("CommonEncryptionCencDrm"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencDrm = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ICencDrmConfiguration) content.GetValueForProperty("CommonEncryptionCencDrm",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencDrm, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.CencDrmConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("CommonEncryptionCencContentKeysDefaultKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencContentKeysDefaultKey = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IDefaultKey) content.GetValueForProperty("CommonEncryptionCencContentKeysDefaultKey",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencContentKeysDefaultKey, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.DefaultKeyTypeConverter.ConvertFrom);
            }
            if (content.Contains("CommonEncryptionCbcContentKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcContentKey = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyContentKeys) content.GetValueForProperty("CommonEncryptionCbcContentKey",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcContentKey, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.StreamingPolicyContentKeysTypeConverter.ConvertFrom);
            }
            if (content.Contains("CommonEncryptionCbcDrm"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcDrm = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ICbcsDrmConfiguration) content.GetValueForProperty("CommonEncryptionCbcDrm",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcDrm, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.CbcsDrmConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("CommonEncryptionCbcsContentKeysDefaultKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsContentKeysDefaultKey = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IDefaultKey) content.GetValueForProperty("CommonEncryptionCbcsContentKeysDefaultKey",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsContentKeysDefaultKey, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.DefaultKeyTypeConverter.ConvertFrom);
            }
            if (content.Contains("EnvelopeEncryptionEnabledProtocolsDownload"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryptionEnabledProtocolsDownload = (bool) content.GetValueForProperty("EnvelopeEncryptionEnabledProtocolsDownload",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryptionEnabledProtocolsDownload, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EnvelopeEncryptionEnabledProtocolsDash"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryptionEnabledProtocolsDash = (bool) content.GetValueForProperty("EnvelopeEncryptionEnabledProtocolsDash",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryptionEnabledProtocolsDash, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EnvelopeEncryptionEnabledProtocolsHl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryptionEnabledProtocolsHl = (bool) content.GetValueForProperty("EnvelopeEncryptionEnabledProtocolsHl",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryptionEnabledProtocolsHl, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EnvelopeEncryptionEnabledProtocolsSmoothStreaming"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryptionEnabledProtocolsSmoothStreaming = (bool) content.GetValueForProperty("EnvelopeEncryptionEnabledProtocolsSmoothStreaming",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryptionEnabledProtocolsSmoothStreaming, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EnvelopeEncryptionContentKeysKeyToTrackMapping"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryptionContentKeysKeyToTrackMapping = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyContentKey[]) content.GetValueForProperty("EnvelopeEncryptionContentKeysKeyToTrackMapping",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryptionContentKeysKeyToTrackMapping, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyContentKey>(__y, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.StreamingPolicyContentKeyTypeConverter.ConvertFrom));
            }
            if (content.Contains("EnvelopeEncryptionContentKeysDefaultKeyLabel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryptionContentKeysDefaultKeyLabel = (string) content.GetValueForProperty("EnvelopeEncryptionContentKeysDefaultKeyLabel",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryptionContentKeysDefaultKeyLabel, global::System.Convert.ToString);
            }
            if (content.Contains("EnvelopeEncryptionContentKeysDefaultKeyPolicyName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryptionContentKeysDefaultKeyPolicyName = (string) content.GetValueForProperty("EnvelopeEncryptionContentKeysDefaultKeyPolicyName",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).EnvelopeEncryptionContentKeysDefaultKeyPolicyName, global::System.Convert.ToString);
            }
            if (content.Contains("CommonEncryptionCencEnabledProtocolsDownload"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencEnabledProtocolsDownload = (bool) content.GetValueForProperty("CommonEncryptionCencEnabledProtocolsDownload",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencEnabledProtocolsDownload, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CommonEncryptionCencEnabledProtocolsDash"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencEnabledProtocolsDash = (bool) content.GetValueForProperty("CommonEncryptionCencEnabledProtocolsDash",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencEnabledProtocolsDash, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CommonEncryptionCencEnabledProtocolsHl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencEnabledProtocolsHl = (bool) content.GetValueForProperty("CommonEncryptionCencEnabledProtocolsHl",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencEnabledProtocolsHl, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CommonEncryptionCencEnabledProtocolsSmoothStreaming"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencEnabledProtocolsSmoothStreaming = (bool) content.GetValueForProperty("CommonEncryptionCencEnabledProtocolsSmoothStreaming",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencEnabledProtocolsSmoothStreaming, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CommonEncryptionCencContentKeysKeyToTrackMapping"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencContentKeysKeyToTrackMapping = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyContentKey[]) content.GetValueForProperty("CommonEncryptionCencContentKeysKeyToTrackMapping",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencContentKeysKeyToTrackMapping, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyContentKey>(__y, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.StreamingPolicyContentKeyTypeConverter.ConvertFrom));
            }
            if (content.Contains("CommonEncryptionCencContentKeysDefaultKeyLabel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencContentKeysDefaultKeyLabel = (string) content.GetValueForProperty("CommonEncryptionCencContentKeysDefaultKeyLabel",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencContentKeysDefaultKeyLabel, global::System.Convert.ToString);
            }
            if (content.Contains("CommonEncryptionCencContentKeysDefaultKeyPolicyName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencContentKeysDefaultKeyPolicyName = (string) content.GetValueForProperty("CommonEncryptionCencContentKeysDefaultKeyPolicyName",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencContentKeysDefaultKeyPolicyName, global::System.Convert.ToString);
            }
            if (content.Contains("CommonEncryptionCencDrmPlayReady"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencDrmPlayReady = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyPlayReadyConfiguration) content.GetValueForProperty("CommonEncryptionCencDrmPlayReady",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencDrmPlayReady, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.StreamingPolicyPlayReadyConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("CommonEncryptionCencDrmWidevine"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencDrmWidevine = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyWidevineConfiguration) content.GetValueForProperty("CommonEncryptionCencDrmWidevine",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencDrmWidevine, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.StreamingPolicyWidevineConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("CommonEncryptionCbcsEnabledProtocolsDownload"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsEnabledProtocolsDownload = (bool) content.GetValueForProperty("CommonEncryptionCbcsEnabledProtocolsDownload",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsEnabledProtocolsDownload, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CommonEncryptionCbcsEnabledProtocolsDash"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsEnabledProtocolsDash = (bool) content.GetValueForProperty("CommonEncryptionCbcsEnabledProtocolsDash",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsEnabledProtocolsDash, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CommonEncryptionCbcsEnabledProtocolsHl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsEnabledProtocolsHl = (bool) content.GetValueForProperty("CommonEncryptionCbcsEnabledProtocolsHl",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsEnabledProtocolsHl, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CommonEncryptionCbcsEnabledProtocolsSmoothStreaming"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsEnabledProtocolsSmoothStreaming = (bool) content.GetValueForProperty("CommonEncryptionCbcsEnabledProtocolsSmoothStreaming",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsEnabledProtocolsSmoothStreaming, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CommonEncryptionCbcsContentKeysKeyToTrackMapping"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsContentKeysKeyToTrackMapping = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyContentKey[]) content.GetValueForProperty("CommonEncryptionCbcsContentKeysKeyToTrackMapping",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsContentKeysKeyToTrackMapping, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyContentKey>(__y, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.StreamingPolicyContentKeyTypeConverter.ConvertFrom));
            }
            if (content.Contains("CommonEncryptionCbcsContentKeysDefaultKeyLabel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsContentKeysDefaultKeyLabel = (string) content.GetValueForProperty("CommonEncryptionCbcsContentKeysDefaultKeyLabel",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsContentKeysDefaultKeyLabel, global::System.Convert.ToString);
            }
            if (content.Contains("CommonEncryptionCbcsContentKeysDefaultKeyPolicyName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsContentKeysDefaultKeyPolicyName = (string) content.GetValueForProperty("CommonEncryptionCbcsContentKeysDefaultKeyPolicyName",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsContentKeysDefaultKeyPolicyName, global::System.Convert.ToString);
            }
            if (content.Contains("DrmFairPlay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).DrmFairPlay = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyFairPlayConfiguration) content.GetValueForProperty("DrmFairPlay",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).DrmFairPlay, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.StreamingPolicyFairPlayConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("CommonEncryptionCbcsDrmPlayReady"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsDrmPlayReady = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyPlayReadyConfiguration) content.GetValueForProperty("CommonEncryptionCbcsDrmPlayReady",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsDrmPlayReady, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.StreamingPolicyPlayReadyConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("CommonEncryptionCbcsDrmWidevine"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsDrmWidevine = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyWidevineConfiguration) content.GetValueForProperty("CommonEncryptionCbcsDrmWidevine",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsDrmWidevine, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.StreamingPolicyWidevineConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("NoEncryptionEnabledProtocolsDownload"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).NoEncryptionEnabledProtocolsDownload = (bool) content.GetValueForProperty("NoEncryptionEnabledProtocolsDownload",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).NoEncryptionEnabledProtocolsDownload, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("NoEncryptionEnabledProtocolsDash"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).NoEncryptionEnabledProtocolsDash = (bool) content.GetValueForProperty("NoEncryptionEnabledProtocolsDash",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).NoEncryptionEnabledProtocolsDash, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("NoEncryptionEnabledProtocolsHl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).NoEncryptionEnabledProtocolsHl = (bool) content.GetValueForProperty("NoEncryptionEnabledProtocolsHl",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).NoEncryptionEnabledProtocolsHl, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("NoEncryptionEnabledProtocolsSmoothStreaming"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).NoEncryptionEnabledProtocolsSmoothStreaming = (bool) content.GetValueForProperty("NoEncryptionEnabledProtocolsSmoothStreaming",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).NoEncryptionEnabledProtocolsSmoothStreaming, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CommonEncryptionCencDrmPlayReadyCustomLicenseAcquisitionUrlTemplate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencDrmPlayReadyCustomLicenseAcquisitionUrlTemplate = (string) content.GetValueForProperty("CommonEncryptionCencDrmPlayReadyCustomLicenseAcquisitionUrlTemplate",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencDrmPlayReadyCustomLicenseAcquisitionUrlTemplate, global::System.Convert.ToString);
            }
            if (content.Contains("CommonEncryptionCencDrmPlayReadyCustomAttribute"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencDrmPlayReadyCustomAttribute = (string) content.GetValueForProperty("CommonEncryptionCencDrmPlayReadyCustomAttribute",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencDrmPlayReadyCustomAttribute, global::System.Convert.ToString);
            }
            if (content.Contains("CommonEncryptionCencDrmWidevineCustomLicenseAcquisitionUrlTemplate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencDrmWidevineCustomLicenseAcquisitionUrlTemplate = (string) content.GetValueForProperty("CommonEncryptionCencDrmWidevineCustomLicenseAcquisitionUrlTemplate",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCencDrmWidevineCustomLicenseAcquisitionUrlTemplate, global::System.Convert.ToString);
            }
            if (content.Contains("FairPlayCustomLicenseAcquisitionUrlTemplate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).FairPlayCustomLicenseAcquisitionUrlTemplate = (string) content.GetValueForProperty("FairPlayCustomLicenseAcquisitionUrlTemplate",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).FairPlayCustomLicenseAcquisitionUrlTemplate, global::System.Convert.ToString);
            }
            if (content.Contains("FairPlayAllowPersistentLicense"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).FairPlayAllowPersistentLicense = (bool) content.GetValueForProperty("FairPlayAllowPersistentLicense",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).FairPlayAllowPersistentLicense, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CommonEncryptionCbcsDrmPlayReadyCustomLicenseAcquisitionUrlTemplate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsDrmPlayReadyCustomLicenseAcquisitionUrlTemplate = (string) content.GetValueForProperty("CommonEncryptionCbcsDrmPlayReadyCustomLicenseAcquisitionUrlTemplate",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsDrmPlayReadyCustomLicenseAcquisitionUrlTemplate, global::System.Convert.ToString);
            }
            if (content.Contains("CommonEncryptionCbcsDrmPlayReadyCustomAttribute"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsDrmPlayReadyCustomAttribute = (string) content.GetValueForProperty("CommonEncryptionCbcsDrmPlayReadyCustomAttribute",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsDrmPlayReadyCustomAttribute, global::System.Convert.ToString);
            }
            if (content.Contains("CommonEncryptionCbcsDrmWidevineCustomLicenseAcquisitionUrlTemplate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsDrmWidevineCustomLicenseAcquisitionUrlTemplate = (string) content.GetValueForProperty("CommonEncryptionCbcsDrmWidevineCustomLicenseAcquisitionUrlTemplate",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingPolicyInternal)this).CommonEncryptionCbcsDrmWidevineCustomLicenseAcquisitionUrlTemplate, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// A Streaming Policy resource
    [System.ComponentModel.TypeConverter(typeof(StreamingPolicyTypeConverter))]
    public partial interface IStreamingPolicy

    {

    }
}