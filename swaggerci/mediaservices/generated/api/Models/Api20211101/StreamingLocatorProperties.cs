// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Extensions;

    /// <summary>Properties of the Streaming Locator.</summary>
    public partial class StreamingLocatorProperties :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingLocatorProperties,
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingLocatorPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AlternativeMediaId" /> property.</summary>
        private string _alternativeMediaId;

        /// <summary>Alternative Media ID of this Streaming Locator</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public string AlternativeMediaId { get => this._alternativeMediaId; set => this._alternativeMediaId = value; }

        /// <summary>Backing field for <see cref="AssetName" /> property.</summary>
        private string _assetName;

        /// <summary>Asset Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public string AssetName { get => this._assetName; set => this._assetName = value; }

        /// <summary>Backing field for <see cref="ContentKey" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingLocatorContentKey[] _contentKey;

        /// <summary>The ContentKeys used by this Streaming Locator.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingLocatorContentKey[] ContentKey { get => this._contentKey; set => this._contentKey = value; }

        /// <summary>Backing field for <see cref="Created" /> property.</summary>
        private global::System.DateTime? _created;

        /// <summary>The creation time of the Streaming Locator.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public global::System.DateTime? Created { get => this._created; }

        /// <summary>Backing field for <see cref="DefaultContentKeyPolicyName" /> property.</summary>
        private string _defaultContentKeyPolicyName;

        /// <summary>Name of the default ContentKeyPolicy used by this Streaming Locator.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public string DefaultContentKeyPolicyName { get => this._defaultContentKeyPolicyName; set => this._defaultContentKeyPolicyName = value; }

        /// <summary>Backing field for <see cref="EndTime" /> property.</summary>
        private global::System.DateTime? _endTime;

        /// <summary>The end time of the Streaming Locator.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public global::System.DateTime? EndTime { get => this._endTime; set => this._endTime = value; }

        /// <summary>Backing field for <see cref="Filter" /> property.</summary>
        private string[] _filter;

        /// <summary>A list of asset or account filters which apply to this streaming locator</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public string[] Filter { get => this._filter; set => this._filter = value; }

        /// <summary>Internal Acessors for Created</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingLocatorPropertiesInternal.Created { get => this._created; set { {_created = value;} } }

        /// <summary>Backing field for <see cref="StartTime" /> property.</summary>
        private global::System.DateTime? _startTime;

        /// <summary>The start time of the Streaming Locator.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public global::System.DateTime? StartTime { get => this._startTime; set => this._startTime = value; }

        /// <summary>Backing field for <see cref="StreamingLocatorId" /> property.</summary>
        private string _streamingLocatorId;

        /// <summary>The StreamingLocatorId of the Streaming Locator.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public string StreamingLocatorId { get => this._streamingLocatorId; set => this._streamingLocatorId = value; }

        /// <summary>Backing field for <see cref="StreamingPolicyName" /> property.</summary>
        private string _streamingPolicyName;

        /// <summary>
        /// Name of the Streaming Policy used by this Streaming Locator. Either specify the name of Streaming Policy you created or
        /// use one of the predefined Streaming Policies. The predefined Streaming Policies available are: 'Predefined_DownloadOnly',
        /// 'Predefined_ClearStreamingOnly', 'Predefined_DownloadAndClearStreaming', 'Predefined_ClearKey', 'Predefined_MultiDrmCencStreaming'
        /// and 'Predefined_MultiDrmStreaming'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public string StreamingPolicyName { get => this._streamingPolicyName; set => this._streamingPolicyName = value; }

        /// <summary>Creates an new <see cref="StreamingLocatorProperties" /> instance.</summary>
        public StreamingLocatorProperties()
        {

        }
    }
    /// Properties of the Streaming Locator.
    public partial interface IStreamingLocatorProperties :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.IJsonSerializable
    {
        /// <summary>Alternative Media ID of this Streaming Locator</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Alternative Media ID of this Streaming Locator",
        SerializedName = @"alternativeMediaId",
        PossibleTypes = new [] { typeof(string) })]
        string AlternativeMediaId { get; set; }
        /// <summary>Asset Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Asset Name",
        SerializedName = @"assetName",
        PossibleTypes = new [] { typeof(string) })]
        string AssetName { get; set; }
        /// <summary>The ContentKeys used by this Streaming Locator.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ContentKeys used by this Streaming Locator.",
        SerializedName = @"contentKeys",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingLocatorContentKey) })]
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingLocatorContentKey[] ContentKey { get; set; }
        /// <summary>The creation time of the Streaming Locator.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The creation time of the Streaming Locator.",
        SerializedName = @"created",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? Created { get;  }
        /// <summary>Name of the default ContentKeyPolicy used by this Streaming Locator.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the default ContentKeyPolicy used by this Streaming Locator.",
        SerializedName = @"defaultContentKeyPolicyName",
        PossibleTypes = new [] { typeof(string) })]
        string DefaultContentKeyPolicyName { get; set; }
        /// <summary>The end time of the Streaming Locator.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The end time of the Streaming Locator.",
        SerializedName = @"endTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? EndTime { get; set; }
        /// <summary>A list of asset or account filters which apply to this streaming locator</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of asset or account filters which apply to this streaming locator",
        SerializedName = @"filters",
        PossibleTypes = new [] { typeof(string) })]
        string[] Filter { get; set; }
        /// <summary>The start time of the Streaming Locator.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The start time of the Streaming Locator.",
        SerializedName = @"startTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? StartTime { get; set; }
        /// <summary>The StreamingLocatorId of the Streaming Locator.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The StreamingLocatorId of the Streaming Locator.",
        SerializedName = @"streamingLocatorId",
        PossibleTypes = new [] { typeof(string) })]
        string StreamingLocatorId { get; set; }
        /// <summary>
        /// Name of the Streaming Policy used by this Streaming Locator. Either specify the name of Streaming Policy you created or
        /// use one of the predefined Streaming Policies. The predefined Streaming Policies available are: 'Predefined_DownloadOnly',
        /// 'Predefined_ClearStreamingOnly', 'Predefined_DownloadAndClearStreaming', 'Predefined_ClearKey', 'Predefined_MultiDrmCencStreaming'
        /// and 'Predefined_MultiDrmStreaming'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Name of the Streaming Policy used by this Streaming Locator. Either specify the name of Streaming Policy you created or use one of the predefined Streaming Policies. The predefined Streaming Policies available are: 'Predefined_DownloadOnly', 'Predefined_ClearStreamingOnly', 'Predefined_DownloadAndClearStreaming', 'Predefined_ClearKey', 'Predefined_MultiDrmCencStreaming' and 'Predefined_MultiDrmStreaming'",
        SerializedName = @"streamingPolicyName",
        PossibleTypes = new [] { typeof(string) })]
        string StreamingPolicyName { get; set; }

    }
    /// Properties of the Streaming Locator.
    internal partial interface IStreamingLocatorPropertiesInternal

    {
        /// <summary>Alternative Media ID of this Streaming Locator</summary>
        string AlternativeMediaId { get; set; }
        /// <summary>Asset Name</summary>
        string AssetName { get; set; }
        /// <summary>The ContentKeys used by this Streaming Locator.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingLocatorContentKey[] ContentKey { get; set; }
        /// <summary>The creation time of the Streaming Locator.</summary>
        global::System.DateTime? Created { get; set; }
        /// <summary>Name of the default ContentKeyPolicy used by this Streaming Locator.</summary>
        string DefaultContentKeyPolicyName { get; set; }
        /// <summary>The end time of the Streaming Locator.</summary>
        global::System.DateTime? EndTime { get; set; }
        /// <summary>A list of asset or account filters which apply to this streaming locator</summary>
        string[] Filter { get; set; }
        /// <summary>The start time of the Streaming Locator.</summary>
        global::System.DateTime? StartTime { get; set; }
        /// <summary>The StreamingLocatorId of the Streaming Locator.</summary>
        string StreamingLocatorId { get; set; }
        /// <summary>
        /// Name of the Streaming Policy used by this Streaming Locator. Either specify the name of Streaming Policy you created or
        /// use one of the predefined Streaming Policies. The predefined Streaming Policies available are: 'Predefined_DownloadOnly',
        /// 'Predefined_ClearStreamingOnly', 'Predefined_DownloadAndClearStreaming', 'Predefined_ClearKey', 'Predefined_MultiDrmCencStreaming'
        /// and 'Predefined_MultiDrmStreaming'
        /// </summary>
        string StreamingPolicyName { get; set; }

    }
}