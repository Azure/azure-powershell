// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101
{
    using Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.PowerShell;

    /// <summary>Describes the properties of a video overlay.</summary>
    [System.ComponentModel.TypeConverter(typeof(VideoOverlayTypeConverter))]
    public partial class VideoOverlay
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.VideoOverlay"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlay" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlay DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new VideoOverlay(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.VideoOverlay"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlay" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlay DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new VideoOverlay(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="VideoOverlay" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="VideoOverlay" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlay FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.SerializationMode.IncludeAll)?.ToString();

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.VideoOverlay"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal VideoOverlay(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Position"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlayInternal)this).Position = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IRectangle) content.GetValueForProperty("Position",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlayInternal)this).Position, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.RectangleTypeConverter.ConvertFrom);
            }
            if (content.Contains("CropRectangle"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlayInternal)this).CropRectangle = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IRectangle) content.GetValueForProperty("CropRectangle",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlayInternal)this).CropRectangle, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.RectangleTypeConverter.ConvertFrom);
            }
            if (content.Contains("Opacity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlayInternal)this).Opacity = (double?) content.GetValueForProperty("Opacity",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlayInternal)this).Opacity, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("OdataType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IOverlayInternal)this).OdataType = (string) content.GetValueForProperty("OdataType",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IOverlayInternal)this).OdataType, global::System.Convert.ToString);
            }
            if (content.Contains("InputLabel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IOverlayInternal)this).InputLabel = (string) content.GetValueForProperty("InputLabel",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IOverlayInternal)this).InputLabel, global::System.Convert.ToString);
            }
            if (content.Contains("Start"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IOverlayInternal)this).Start = (global::System.TimeSpan?) content.GetValueForProperty("Start",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IOverlayInternal)this).Start, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("End"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IOverlayInternal)this).End = (global::System.TimeSpan?) content.GetValueForProperty("End",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IOverlayInternal)this).End, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("FadeInDuration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IOverlayInternal)this).FadeInDuration = (global::System.TimeSpan?) content.GetValueForProperty("FadeInDuration",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IOverlayInternal)this).FadeInDuration, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("FadeOutDuration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IOverlayInternal)this).FadeOutDuration = (global::System.TimeSpan?) content.GetValueForProperty("FadeOutDuration",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IOverlayInternal)this).FadeOutDuration, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("AudioGainLevel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IOverlayInternal)this).AudioGainLevel = (double?) content.GetValueForProperty("AudioGainLevel",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IOverlayInternal)this).AudioGainLevel, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("PositionLeft"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlayInternal)this).PositionLeft = (string) content.GetValueForProperty("PositionLeft",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlayInternal)this).PositionLeft, global::System.Convert.ToString);
            }
            if (content.Contains("PositionTop"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlayInternal)this).PositionTop = (string) content.GetValueForProperty("PositionTop",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlayInternal)this).PositionTop, global::System.Convert.ToString);
            }
            if (content.Contains("PositionWidth"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlayInternal)this).PositionWidth = (string) content.GetValueForProperty("PositionWidth",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlayInternal)this).PositionWidth, global::System.Convert.ToString);
            }
            if (content.Contains("PositionHeight"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlayInternal)this).PositionHeight = (string) content.GetValueForProperty("PositionHeight",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlayInternal)this).PositionHeight, global::System.Convert.ToString);
            }
            if (content.Contains("CropRectangleLeft"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlayInternal)this).CropRectangleLeft = (string) content.GetValueForProperty("CropRectangleLeft",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlayInternal)this).CropRectangleLeft, global::System.Convert.ToString);
            }
            if (content.Contains("CropRectangleTop"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlayInternal)this).CropRectangleTop = (string) content.GetValueForProperty("CropRectangleTop",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlayInternal)this).CropRectangleTop, global::System.Convert.ToString);
            }
            if (content.Contains("CropRectangleWidth"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlayInternal)this).CropRectangleWidth = (string) content.GetValueForProperty("CropRectangleWidth",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlayInternal)this).CropRectangleWidth, global::System.Convert.ToString);
            }
            if (content.Contains("CropRectangleHeight"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlayInternal)this).CropRectangleHeight = (string) content.GetValueForProperty("CropRectangleHeight",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlayInternal)this).CropRectangleHeight, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.VideoOverlay"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal VideoOverlay(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Position"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlayInternal)this).Position = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IRectangle) content.GetValueForProperty("Position",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlayInternal)this).Position, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.RectangleTypeConverter.ConvertFrom);
            }
            if (content.Contains("CropRectangle"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlayInternal)this).CropRectangle = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IRectangle) content.GetValueForProperty("CropRectangle",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlayInternal)this).CropRectangle, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.RectangleTypeConverter.ConvertFrom);
            }
            if (content.Contains("Opacity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlayInternal)this).Opacity = (double?) content.GetValueForProperty("Opacity",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlayInternal)this).Opacity, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("OdataType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IOverlayInternal)this).OdataType = (string) content.GetValueForProperty("OdataType",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IOverlayInternal)this).OdataType, global::System.Convert.ToString);
            }
            if (content.Contains("InputLabel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IOverlayInternal)this).InputLabel = (string) content.GetValueForProperty("InputLabel",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IOverlayInternal)this).InputLabel, global::System.Convert.ToString);
            }
            if (content.Contains("Start"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IOverlayInternal)this).Start = (global::System.TimeSpan?) content.GetValueForProperty("Start",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IOverlayInternal)this).Start, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("End"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IOverlayInternal)this).End = (global::System.TimeSpan?) content.GetValueForProperty("End",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IOverlayInternal)this).End, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("FadeInDuration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IOverlayInternal)this).FadeInDuration = (global::System.TimeSpan?) content.GetValueForProperty("FadeInDuration",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IOverlayInternal)this).FadeInDuration, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("FadeOutDuration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IOverlayInternal)this).FadeOutDuration = (global::System.TimeSpan?) content.GetValueForProperty("FadeOutDuration",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IOverlayInternal)this).FadeOutDuration, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("AudioGainLevel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IOverlayInternal)this).AudioGainLevel = (double?) content.GetValueForProperty("AudioGainLevel",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IOverlayInternal)this).AudioGainLevel, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("PositionLeft"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlayInternal)this).PositionLeft = (string) content.GetValueForProperty("PositionLeft",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlayInternal)this).PositionLeft, global::System.Convert.ToString);
            }
            if (content.Contains("PositionTop"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlayInternal)this).PositionTop = (string) content.GetValueForProperty("PositionTop",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlayInternal)this).PositionTop, global::System.Convert.ToString);
            }
            if (content.Contains("PositionWidth"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlayInternal)this).PositionWidth = (string) content.GetValueForProperty("PositionWidth",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlayInternal)this).PositionWidth, global::System.Convert.ToString);
            }
            if (content.Contains("PositionHeight"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlayInternal)this).PositionHeight = (string) content.GetValueForProperty("PositionHeight",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlayInternal)this).PositionHeight, global::System.Convert.ToString);
            }
            if (content.Contains("CropRectangleLeft"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlayInternal)this).CropRectangleLeft = (string) content.GetValueForProperty("CropRectangleLeft",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlayInternal)this).CropRectangleLeft, global::System.Convert.ToString);
            }
            if (content.Contains("CropRectangleTop"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlayInternal)this).CropRectangleTop = (string) content.GetValueForProperty("CropRectangleTop",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlayInternal)this).CropRectangleTop, global::System.Convert.ToString);
            }
            if (content.Contains("CropRectangleWidth"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlayInternal)this).CropRectangleWidth = (string) content.GetValueForProperty("CropRectangleWidth",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlayInternal)this).CropRectangleWidth, global::System.Convert.ToString);
            }
            if (content.Contains("CropRectangleHeight"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlayInternal)this).CropRectangleHeight = (string) content.GetValueForProperty("CropRectangleHeight",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoOverlayInternal)this).CropRectangleHeight, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }
    }
    /// Describes the properties of a video overlay.
    [System.ComponentModel.TypeConverter(typeof(VideoOverlayTypeConverter))]
    public partial interface IVideoOverlay

    {

    }
}