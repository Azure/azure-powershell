// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Extensions;

    public partial class ContentKeyPolicyFairPlayOfflineRentalConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IContentKeyPolicyFairPlayOfflineRentalConfiguration,
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IContentKeyPolicyFairPlayOfflineRentalConfigurationInternal
    {

        /// <summary>Backing field for <see cref="PlaybackDurationSecond" /> property.</summary>
        private long _playbackDurationSecond;

        /// <summary>Playback duration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public long PlaybackDurationSecond { get => this._playbackDurationSecond; set => this._playbackDurationSecond = value; }

        /// <summary>Backing field for <see cref="StorageDurationSecond" /> property.</summary>
        private long _storageDurationSecond;

        /// <summary>Storage duration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public long StorageDurationSecond { get => this._storageDurationSecond; set => this._storageDurationSecond = value; }

        /// <summary>
        /// Creates an new <see cref="ContentKeyPolicyFairPlayOfflineRentalConfiguration" /> instance.
        /// </summary>
        public ContentKeyPolicyFairPlayOfflineRentalConfiguration()
        {

        }
    }
    public partial interface IContentKeyPolicyFairPlayOfflineRentalConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.IJsonSerializable
    {
        /// <summary>Playback duration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Playback duration",
        SerializedName = @"playbackDurationSeconds",
        PossibleTypes = new [] { typeof(long) })]
        long PlaybackDurationSecond { get; set; }
        /// <summary>Storage duration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Storage duration",
        SerializedName = @"storageDurationSeconds",
        PossibleTypes = new [] { typeof(long) })]
        long StorageDurationSecond { get; set; }

    }
    internal partial interface IContentKeyPolicyFairPlayOfflineRentalConfigurationInternal

    {
        /// <summary>Playback duration</summary>
        long PlaybackDurationSecond { get; set; }
        /// <summary>Storage duration</summary>
        long StorageDurationSecond { get; set; }

    }
}