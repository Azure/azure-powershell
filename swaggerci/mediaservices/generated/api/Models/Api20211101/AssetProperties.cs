// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Extensions;

    /// <summary>The Asset properties.</summary>
    public partial class AssetProperties :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IAssetProperties,
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IAssetPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AlternateId" /> property.</summary>
        private string _alternateId;

        /// <summary>The alternate ID of the Asset.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public string AlternateId { get => this._alternateId; set => this._alternateId = value; }

        /// <summary>Backing field for <see cref="AssetId" /> property.</summary>
        private string _assetId;

        /// <summary>The Asset ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public string AssetId { get => this._assetId; }

        /// <summary>Backing field for <see cref="Container" /> property.</summary>
        private string _container;

        /// <summary>The name of the asset blob container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public string Container { get => this._container; set => this._container = value; }

        /// <summary>Backing field for <see cref="Created" /> property.</summary>
        private global::System.DateTime? _created;

        /// <summary>The creation date of the Asset.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public global::System.DateTime? Created { get => this._created; }

        /// <summary>Backing field for <see cref="Description" /> property.</summary>
        private string _description;

        /// <summary>The Asset description.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public string Description { get => this._description; set => this._description = value; }

        /// <summary>Backing field for <see cref="LastModified" /> property.</summary>
        private global::System.DateTime? _lastModified;

        /// <summary>The last modified date of the Asset.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public global::System.DateTime? LastModified { get => this._lastModified; }

        /// <summary>Internal Acessors for AssetId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IAssetPropertiesInternal.AssetId { get => this._assetId; set { {_assetId = value;} } }

        /// <summary>Internal Acessors for Created</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IAssetPropertiesInternal.Created { get => this._created; set { {_created = value;} } }

        /// <summary>Internal Acessors for LastModified</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IAssetPropertiesInternal.LastModified { get => this._lastModified; set { {_lastModified = value;} } }

        /// <summary>Internal Acessors for StorageEncryptionFormat</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.AssetStorageEncryptionFormat? Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IAssetPropertiesInternal.StorageEncryptionFormat { get => this._storageEncryptionFormat; set { {_storageEncryptionFormat = value;} } }

        /// <summary>Backing field for <see cref="StorageAccountName" /> property.</summary>
        private string _storageAccountName;

        /// <summary>The name of the storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public string StorageAccountName { get => this._storageAccountName; set => this._storageAccountName = value; }

        /// <summary>Backing field for <see cref="StorageEncryptionFormat" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.AssetStorageEncryptionFormat? _storageEncryptionFormat;

        /// <summary>The Asset encryption format. One of None or MediaStorageEncryption.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.AssetStorageEncryptionFormat? StorageEncryptionFormat { get => this._storageEncryptionFormat; }

        /// <summary>Creates an new <see cref="AssetProperties" /> instance.</summary>
        public AssetProperties()
        {

        }
    }
    /// The Asset properties.
    public partial interface IAssetProperties :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.IJsonSerializable
    {
        /// <summary>The alternate ID of the Asset.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The alternate ID of the Asset.",
        SerializedName = @"alternateId",
        PossibleTypes = new [] { typeof(string) })]
        string AlternateId { get; set; }
        /// <summary>The Asset ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The Asset ID.",
        SerializedName = @"assetId",
        PossibleTypes = new [] { typeof(string) })]
        string AssetId { get;  }
        /// <summary>The name of the asset blob container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the asset blob container.",
        SerializedName = @"container",
        PossibleTypes = new [] { typeof(string) })]
        string Container { get; set; }
        /// <summary>The creation date of the Asset.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The creation date of the Asset.",
        SerializedName = @"created",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? Created { get;  }
        /// <summary>The Asset description.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Asset description.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>The last modified date of the Asset.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The last modified date of the Asset.",
        SerializedName = @"lastModified",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastModified { get;  }
        /// <summary>The name of the storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the storage account.",
        SerializedName = @"storageAccountName",
        PossibleTypes = new [] { typeof(string) })]
        string StorageAccountName { get; set; }
        /// <summary>The Asset encryption format. One of None or MediaStorageEncryption.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The Asset encryption format. One of None or MediaStorageEncryption.",
        SerializedName = @"storageEncryptionFormat",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.AssetStorageEncryptionFormat) })]
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.AssetStorageEncryptionFormat? StorageEncryptionFormat { get;  }

    }
    /// The Asset properties.
    internal partial interface IAssetPropertiesInternal

    {
        /// <summary>The alternate ID of the Asset.</summary>
        string AlternateId { get; set; }
        /// <summary>The Asset ID.</summary>
        string AssetId { get; set; }
        /// <summary>The name of the asset blob container.</summary>
        string Container { get; set; }
        /// <summary>The creation date of the Asset.</summary>
        global::System.DateTime? Created { get; set; }
        /// <summary>The Asset description.</summary>
        string Description { get; set; }
        /// <summary>The last modified date of the Asset.</summary>
        global::System.DateTime? LastModified { get; set; }
        /// <summary>The name of the storage account.</summary>
        string StorageAccountName { get; set; }
        /// <summary>The Asset encryption format. One of None or MediaStorageEncryption.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.AssetStorageEncryptionFormat? StorageEncryptionFormat { get; set; }

    }
}