// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Extensions;

    /// <summary>Base type for all overlays - image, audio or video.</summary>
    public partial class Overlay :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IOverlay,
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IOverlayInternal
    {

        /// <summary>Backing field for <see cref="AudioGainLevel" /> property.</summary>
        private double? _audioGainLevel;

        /// <summary>
        /// The gain level of audio in the overlay. The value should be in the range [0, 1.0]. The default is 1.0.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public double? AudioGainLevel { get => this._audioGainLevel; set => this._audioGainLevel = value; }

        /// <summary>Backing field for <see cref="End" /> property.</summary>
        private global::System.TimeSpan? _end;

        /// <summary>
        /// The end position, with reference to the input video, at which the overlay ends. The value should be in ISO 8601 format.
        /// For example, PT30S to end the overlay at 30 seconds into the input video. If not specified or the value is greater than
        /// the input video duration, the overlay will be applied until the end of the input video if the overlay media duration is
        /// greater than the input video duration, else the overlay will last as long as the overlay media duration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public global::System.TimeSpan? End { get => this._end; set => this._end = value; }

        /// <summary>Backing field for <see cref="FadeInDuration" /> property.</summary>
        private global::System.TimeSpan? _fadeInDuration;

        /// <summary>
        /// The duration over which the overlay fades in onto the input video. The value should be in ISO 8601 duration format. If
        /// not specified the default behavior is to have no fade in (same as PT0S).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public global::System.TimeSpan? FadeInDuration { get => this._fadeInDuration; set => this._fadeInDuration = value; }

        /// <summary>Backing field for <see cref="FadeOutDuration" /> property.</summary>
        private global::System.TimeSpan? _fadeOutDuration;

        /// <summary>
        /// The duration over which the overlay fades out of the input video. The value should be in ISO 8601 duration format. If
        /// not specified the default behavior is to have no fade out (same as PT0S).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public global::System.TimeSpan? FadeOutDuration { get => this._fadeOutDuration; set => this._fadeOutDuration = value; }

        /// <summary>Backing field for <see cref="InputLabel" /> property.</summary>
        private string _inputLabel;

        /// <summary>
        /// The label of the job input which is to be used as an overlay. The Input must specify exactly one file. You can specify
        /// an image file in JPG, PNG, GIF or BMP format, or an audio file (such as a WAV, MP3, WMA or M4A file), or a video file.
        /// See https://aka.ms/mesformats for the complete list of supported audio and video file formats.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public string InputLabel { get => this._inputLabel; set => this._inputLabel = value; }

        /// <summary>Backing field for <see cref="OdataType" /> property.</summary>
        private string _odataType;

        /// <summary>The discriminator for derived types.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public string OdataType { get => this._odataType; set => this._odataType = value; }

        /// <summary>Backing field for <see cref="Start" /> property.</summary>
        private global::System.TimeSpan? _start;

        /// <summary>
        /// The start position, with reference to the input video, at which the overlay starts. The value should be in ISO 8601 format.
        /// For example, PT05S to start the overlay at 5 seconds into the input video. If not specified the overlay starts from the
        /// beginning of the input video.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public global::System.TimeSpan? Start { get => this._start; set => this._start = value; }

        /// <summary>Creates an new <see cref="Overlay" /> instance.</summary>
        public Overlay()
        {

        }
    }
    /// Base type for all overlays - image, audio or video.
    public partial interface IOverlay :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The gain level of audio in the overlay. The value should be in the range [0, 1.0]. The default is 1.0.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The gain level of audio in the overlay. The value should be in the range [0, 1.0]. The default is 1.0.",
        SerializedName = @"audioGainLevel",
        PossibleTypes = new [] { typeof(double) })]
        double? AudioGainLevel { get; set; }
        /// <summary>
        /// The end position, with reference to the input video, at which the overlay ends. The value should be in ISO 8601 format.
        /// For example, PT30S to end the overlay at 30 seconds into the input video. If not specified or the value is greater than
        /// the input video duration, the overlay will be applied until the end of the input video if the overlay media duration is
        /// greater than the input video duration, else the overlay will last as long as the overlay media duration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The end position, with reference to the input video, at which the overlay ends. The value should be in ISO 8601 format. For example, PT30S to end the overlay at 30 seconds into the input video. If not specified or the value is greater than the input video duration, the overlay will be applied until the end of the input video if the overlay media duration is greater than the input video duration, else the overlay will last as long as the overlay media duration.",
        SerializedName = @"end",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan? End { get; set; }
        /// <summary>
        /// The duration over which the overlay fades in onto the input video. The value should be in ISO 8601 duration format. If
        /// not specified the default behavior is to have no fade in (same as PT0S).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The duration over which the overlay fades in onto the input video. The value should be in ISO 8601 duration format. If not specified the default behavior is to have no fade in (same as PT0S).",
        SerializedName = @"fadeInDuration",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan? FadeInDuration { get; set; }
        /// <summary>
        /// The duration over which the overlay fades out of the input video. The value should be in ISO 8601 duration format. If
        /// not specified the default behavior is to have no fade out (same as PT0S).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The duration over which the overlay fades out of the input video. The value should be in ISO 8601 duration format. If not specified the default behavior is to have no fade out (same as PT0S).",
        SerializedName = @"fadeOutDuration",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan? FadeOutDuration { get; set; }
        /// <summary>
        /// The label of the job input which is to be used as an overlay. The Input must specify exactly one file. You can specify
        /// an image file in JPG, PNG, GIF or BMP format, or an audio file (such as a WAV, MP3, WMA or M4A file), or a video file.
        /// See https://aka.ms/mesformats for the complete list of supported audio and video file formats.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The label of the job input which is to be used as an overlay. The Input must specify exactly one file. You can specify an image file in JPG, PNG, GIF or BMP format, or an audio file (such as a WAV, MP3, WMA or M4A file), or a video file. See https://aka.ms/mesformats for the complete list of supported audio and video file formats.",
        SerializedName = @"inputLabel",
        PossibleTypes = new [] { typeof(string) })]
        string InputLabel { get; set; }
        /// <summary>The discriminator for derived types.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The discriminator for derived types.",
        SerializedName = @"@odata.type",
        PossibleTypes = new [] { typeof(string) })]
        string OdataType { get; set; }
        /// <summary>
        /// The start position, with reference to the input video, at which the overlay starts. The value should be in ISO 8601 format.
        /// For example, PT05S to start the overlay at 5 seconds into the input video. If not specified the overlay starts from the
        /// beginning of the input video.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The start position, with reference to the input video, at which the overlay starts. The value should be in ISO 8601 format. For example, PT05S to start the overlay at 5 seconds into the input video. If not specified the overlay starts from the beginning of the input video.",
        SerializedName = @"start",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan? Start { get; set; }

    }
    /// Base type for all overlays - image, audio or video.
    internal partial interface IOverlayInternal

    {
        /// <summary>
        /// The gain level of audio in the overlay. The value should be in the range [0, 1.0]. The default is 1.0.
        /// </summary>
        double? AudioGainLevel { get; set; }
        /// <summary>
        /// The end position, with reference to the input video, at which the overlay ends. The value should be in ISO 8601 format.
        /// For example, PT30S to end the overlay at 30 seconds into the input video. If not specified or the value is greater than
        /// the input video duration, the overlay will be applied until the end of the input video if the overlay media duration is
        /// greater than the input video duration, else the overlay will last as long as the overlay media duration.
        /// </summary>
        global::System.TimeSpan? End { get; set; }
        /// <summary>
        /// The duration over which the overlay fades in onto the input video. The value should be in ISO 8601 duration format. If
        /// not specified the default behavior is to have no fade in (same as PT0S).
        /// </summary>
        global::System.TimeSpan? FadeInDuration { get; set; }
        /// <summary>
        /// The duration over which the overlay fades out of the input video. The value should be in ISO 8601 duration format. If
        /// not specified the default behavior is to have no fade out (same as PT0S).
        /// </summary>
        global::System.TimeSpan? FadeOutDuration { get; set; }
        /// <summary>
        /// The label of the job input which is to be used as an overlay. The Input must specify exactly one file. You can specify
        /// an image file in JPG, PNG, GIF or BMP format, or an audio file (such as a WAV, MP3, WMA or M4A file), or a video file.
        /// See https://aka.ms/mesformats for the complete list of supported audio and video file formats.
        /// </summary>
        string InputLabel { get; set; }
        /// <summary>The discriminator for derived types.</summary>
        string OdataType { get; set; }
        /// <summary>
        /// The start position, with reference to the input video, at which the overlay starts. The value should be in ISO 8601 format.
        /// For example, PT05S to start the overlay at 5 seconds into the input video. If not specified the overlay starts from the
        /// beginning of the input video.
        /// </summary>
        global::System.TimeSpan? Start { get; set; }

    }
}