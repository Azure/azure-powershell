// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Extensions;

    /// <summary>
    /// A video analyzer preset that extracts insights (rich metadata) from both audio and video, and outputs a JSON format file.
    /// </summary>
    public partial class VideoAnalyzerPreset :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoAnalyzerPreset,
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoAnalyzerPresetInternal,
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IAudioAnalyzerPreset"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IAudioAnalyzerPreset __audioAnalyzerPreset = new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.AudioAnalyzerPreset();

        /// <summary>
        /// The language for the audio payload in the input using the BCP-47 format of 'language tag-region' (e.g: 'en-US'). If you
        /// know the language of your content, it is recommended that you specify it. The language must be specified explicitly for
        /// AudioAnalysisMode::Basic, since automatic language detection is not included in basic mode. If the language isn't specified
        /// or set to null, automatic language detection will choose the first language detected and process with the selected language
        /// for the duration of the file. It does not currently support dynamically switching between languages after the first language
        /// is detected. The automatic detection works best with audio recordings with clearly discernable speech. If automatic detection
        /// fails to find the language, transcription would fallback to 'en-US'." The list of supported languages is available here:
        /// https://go.microsoft.com/fwlink/?linkid=2109463
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inherited)]
        public string AudioLanguage { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IAudioAnalyzerPresetInternal)__audioAnalyzerPreset).AudioLanguage; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IAudioAnalyzerPresetInternal)__audioAnalyzerPreset).AudioLanguage = value ?? null; }

        /// <summary>
        /// Dictionary containing key value pairs for parameters not exposed in the preset itself
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IAudioAnalyzerPresetExperimentalOptions ExperimentalOption { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IAudioAnalyzerPresetInternal)__audioAnalyzerPreset).ExperimentalOption; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IAudioAnalyzerPresetInternal)__audioAnalyzerPreset).ExperimentalOption = value ?? null /* model class */; }

        /// <summary>Backing field for <see cref="InsightsToExtract" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.InsightsType? _insightsToExtract;

        /// <summary>
        /// Defines the type of insights that you want the service to generate. The allowed values are 'AudioInsightsOnly', 'VideoInsightsOnly',
        /// and 'AllInsights'. The default is AllInsights. If you set this to AllInsights and the input is audio only, then only audio
        /// insights are generated. Similarly if the input is video only, then only video insights are generated. It is recommended
        /// that you not use AudioInsightsOnly if you expect some of your inputs to be video only; or use VideoInsightsOnly if you
        /// expect some of your inputs to be audio only. Your Jobs in such conditions would error out.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.InsightsType? InsightsToExtract { get => this._insightsToExtract; set => this._insightsToExtract = value; }

        /// <summary>
        /// Determines the set of audio analysis operations to be performed. If unspecified, the Standard AudioAnalysisMode would
        /// be chosen.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.AudioAnalysisMode? Mode { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IAudioAnalyzerPresetInternal)__audioAnalyzerPreset).Mode; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IAudioAnalyzerPresetInternal)__audioAnalyzerPreset).Mode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.AudioAnalysisMode)""); }

        /// <summary>The discriminator for derived types.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inherited)]
        public string OdataType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IPresetInternal)__audioAnalyzerPreset).OdataType; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IPresetInternal)__audioAnalyzerPreset).OdataType = value ; }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__audioAnalyzerPreset), __audioAnalyzerPreset);
            await eventListener.AssertObjectIsValid(nameof(__audioAnalyzerPreset), __audioAnalyzerPreset);
        }

        /// <summary>Creates an new <see cref="VideoAnalyzerPreset" /> instance.</summary>
        public VideoAnalyzerPreset()
        {

        }
    }
    /// A video analyzer preset that extracts insights (rich metadata) from both audio and video, and outputs a JSON format file.
    public partial interface IVideoAnalyzerPreset :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IAudioAnalyzerPreset
    {
        /// <summary>
        /// Defines the type of insights that you want the service to generate. The allowed values are 'AudioInsightsOnly', 'VideoInsightsOnly',
        /// and 'AllInsights'. The default is AllInsights. If you set this to AllInsights and the input is audio only, then only audio
        /// insights are generated. Similarly if the input is video only, then only video insights are generated. It is recommended
        /// that you not use AudioInsightsOnly if you expect some of your inputs to be video only; or use VideoInsightsOnly if you
        /// expect some of your inputs to be audio only. Your Jobs in such conditions would error out.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Defines the type of insights that you want the service to generate. The allowed values are 'AudioInsightsOnly', 'VideoInsightsOnly', and 'AllInsights'. The default is AllInsights. If you set this to AllInsights and the input is audio only, then only audio insights are generated. Similarly if the input is video only, then only video insights are generated. It is recommended that you not use AudioInsightsOnly if you expect some of your inputs to be video only; or use VideoInsightsOnly if you expect some of your inputs to be audio only. Your Jobs in such conditions would error out.",
        SerializedName = @"insightsToExtract",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.InsightsType) })]
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.InsightsType? InsightsToExtract { get; set; }

    }
    /// A video analyzer preset that extracts insights (rich metadata) from both audio and video, and outputs a JSON format file.
    internal partial interface IVideoAnalyzerPresetInternal :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IAudioAnalyzerPresetInternal
    {
        /// <summary>
        /// Defines the type of insights that you want the service to generate. The allowed values are 'AudioInsightsOnly', 'VideoInsightsOnly',
        /// and 'AllInsights'. The default is AllInsights. If you set this to AllInsights and the input is audio only, then only audio
        /// insights are generated. Similarly if the input is video only, then only video insights are generated. It is recommended
        /// that you not use AudioInsightsOnly if you expect some of your inputs to be video only; or use VideoInsightsOnly if you
        /// expect some of your inputs to be audio only. Your Jobs in such conditions would error out.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.InsightsType? InsightsToExtract { get; set; }

    }
}