// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Extensions;

    /// <summary>Describes the basic properties for encoding the input video.</summary>
    public partial class Video :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideo,
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IVideoInternal,
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ICodec"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ICodec __codec = new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.Codec();

        /// <summary>Backing field for <see cref="KeyFrameInterval" /> property.</summary>
        private global::System.TimeSpan? _keyFrameInterval;

        /// <summary>
        /// The distance between two key frames. The value should be non-zero in the range [0.5, 20] seconds, specified in ISO 8601
        /// format. The default is 2 seconds(PT2S). Note that this setting is ignored if VideoSyncMode.Passthrough is set, where the
        /// KeyFrameInterval value will follow the input source setting.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public global::System.TimeSpan? KeyFrameInterval { get => this._keyFrameInterval; set => this._keyFrameInterval = value; }

        /// <summary>
        /// An optional label for the codec. The label can be used to control muxing behavior.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inherited)]
        public string Label { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ICodecInternal)__codec).Label; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ICodecInternal)__codec).Label = value ?? null; }

        /// <summary>The discriminator for derived types.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inherited)]
        public string OdataType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ICodecInternal)__codec).OdataType; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ICodecInternal)__codec).OdataType = value ; }

        /// <summary>Backing field for <see cref="StretchMode" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StretchMode? _stretchMode;

        /// <summary>
        /// The resizing mode - how the input video will be resized to fit the desired output resolution(s). Default is AutoSize
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StretchMode? StretchMode { get => this._stretchMode; set => this._stretchMode = value; }

        /// <summary>Backing field for <see cref="SyncMode" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.VideoSyncMode? _syncMode;

        /// <summary>The Video Sync Mode</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.VideoSyncMode? SyncMode { get => this._syncMode; set => this._syncMode = value; }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__codec), __codec);
            await eventListener.AssertObjectIsValid(nameof(__codec), __codec);
        }

        /// <summary>Creates an new <see cref="Video" /> instance.</summary>
        public Video()
        {

        }
    }
    /// Describes the basic properties for encoding the input video.
    public partial interface IVideo :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ICodec
    {
        /// <summary>
        /// The distance between two key frames. The value should be non-zero in the range [0.5, 20] seconds, specified in ISO 8601
        /// format. The default is 2 seconds(PT2S). Note that this setting is ignored if VideoSyncMode.Passthrough is set, where the
        /// KeyFrameInterval value will follow the input source setting.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The distance between two key frames. The value should be non-zero in the range [0.5, 20] seconds, specified in ISO 8601 format. The default is 2 seconds(PT2S). Note that this setting is ignored if VideoSyncMode.Passthrough is set, where the KeyFrameInterval value will follow the input source setting.",
        SerializedName = @"keyFrameInterval",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan? KeyFrameInterval { get; set; }
        /// <summary>
        /// The resizing mode - how the input video will be resized to fit the desired output resolution(s). Default is AutoSize
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resizing mode - how the input video will be resized to fit the desired output resolution(s). Default is AutoSize",
        SerializedName = @"stretchMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StretchMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StretchMode? StretchMode { get; set; }
        /// <summary>The Video Sync Mode</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Video Sync Mode",
        SerializedName = @"syncMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.VideoSyncMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.VideoSyncMode? SyncMode { get; set; }

    }
    /// Describes the basic properties for encoding the input video.
    internal partial interface IVideoInternal :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ICodecInternal
    {
        /// <summary>
        /// The distance between two key frames. The value should be non-zero in the range [0.5, 20] seconds, specified in ISO 8601
        /// format. The default is 2 seconds(PT2S). Note that this setting is ignored if VideoSyncMode.Passthrough is set, where the
        /// KeyFrameInterval value will follow the input source setting.
        /// </summary>
        global::System.TimeSpan? KeyFrameInterval { get; set; }
        /// <summary>
        /// The resizing mode - how the input video will be resized to fit the desired output resolution(s). Default is AutoSize
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StretchMode? StretchMode { get; set; }
        /// <summary>The Video Sync Mode</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.VideoSyncMode? SyncMode { get; set; }

    }
}