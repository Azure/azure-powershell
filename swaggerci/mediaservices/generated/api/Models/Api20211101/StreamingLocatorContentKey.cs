// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Extensions;

    /// <summary>Class for content key in Streaming Locator</summary>
    public partial class StreamingLocatorContentKey :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingLocatorContentKey,
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingLocatorContentKeyInternal
    {

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>ID of Content Key</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public string Id { get => this._id; set => this._id = value; }

        /// <summary>Backing field for <see cref="LabelReferenceInStreamingPolicy" /> property.</summary>
        private string _labelReferenceInStreamingPolicy;

        /// <summary>Label of Content Key as specified in the Streaming Policy</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public string LabelReferenceInStreamingPolicy { get => this._labelReferenceInStreamingPolicy; set => this._labelReferenceInStreamingPolicy = value; }

        /// <summary>Internal Acessors for PolicyName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingLocatorContentKeyInternal.PolicyName { get => this._policyName; set { {_policyName = value;} } }

        /// <summary>Internal Acessors for Track</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ITrackSelection[] Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingLocatorContentKeyInternal.Track { get => this._track; set { {_track = value;} } }

        /// <summary>Internal Acessors for Type</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StreamingLocatorContentKeyType? Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingLocatorContentKeyInternal.Type { get => this._type; set { {_type = value;} } }

        /// <summary>Backing field for <see cref="PolicyName" /> property.</summary>
        private string _policyName;

        /// <summary>ContentKeyPolicy used by Content Key</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public string PolicyName { get => this._policyName; }

        /// <summary>Backing field for <see cref="Track" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ITrackSelection[] _track;

        /// <summary>Tracks which use this Content Key</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ITrackSelection[] Track { get => this._track; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StreamingLocatorContentKeyType? _type;

        /// <summary>Encryption type of Content Key</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StreamingLocatorContentKeyType? Type { get => this._type; }

        /// <summary>Backing field for <see cref="Value" /> property.</summary>
        private string _value;

        /// <summary>Value of Content Key</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public string Value { get => this._value; set => this._value = value; }

        /// <summary>Creates an new <see cref="StreamingLocatorContentKey" /> instance.</summary>
        public StreamingLocatorContentKey()
        {

        }
    }
    /// Class for content key in Streaming Locator
    public partial interface IStreamingLocatorContentKey :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.IJsonSerializable
    {
        /// <summary>ID of Content Key</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"ID of Content Key",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get; set; }
        /// <summary>Label of Content Key as specified in the Streaming Policy</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Label of Content Key as specified in the Streaming Policy",
        SerializedName = @"labelReferenceInStreamingPolicy",
        PossibleTypes = new [] { typeof(string) })]
        string LabelReferenceInStreamingPolicy { get; set; }
        /// <summary>ContentKeyPolicy used by Content Key</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"ContentKeyPolicy used by Content Key",
        SerializedName = @"policyName",
        PossibleTypes = new [] { typeof(string) })]
        string PolicyName { get;  }
        /// <summary>Tracks which use this Content Key</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Tracks which use this Content Key",
        SerializedName = @"tracks",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ITrackSelection) })]
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ITrackSelection[] Track { get;  }
        /// <summary>Encryption type of Content Key</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Encryption type of Content Key",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StreamingLocatorContentKeyType) })]
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StreamingLocatorContentKeyType? Type { get;  }
        /// <summary>Value of Content Key</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Value of Content Key",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(string) })]
        string Value { get; set; }

    }
    /// Class for content key in Streaming Locator
    internal partial interface IStreamingLocatorContentKeyInternal

    {
        /// <summary>ID of Content Key</summary>
        string Id { get; set; }
        /// <summary>Label of Content Key as specified in the Streaming Policy</summary>
        string LabelReferenceInStreamingPolicy { get; set; }
        /// <summary>ContentKeyPolicy used by Content Key</summary>
        string PolicyName { get; set; }
        /// <summary>Tracks which use this Content Key</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ITrackSelection[] Track { get; set; }
        /// <summary>Encryption type of Content Key</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StreamingLocatorContentKeyType? Type { get; set; }
        /// <summary>Value of Content Key</summary>
        string Value { get; set; }

    }
}