// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Extensions;

    /// <summary>The Live Output.</summary>
    public partial class LiveOutput :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveOutput,
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveOutputInternal,
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.IResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.Resource();

        /// <summary>
        /// ISO 8601 time between 1 minute to 25 hours to indicate the maximum content length that can be archived in the asset for
        /// this live output. This also sets the maximum content length for the rewind window. For example, use PT1H30M to indicate
        /// 1 hour and 30 minutes of archive window.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public global::System.TimeSpan? ArchiveWindowLength { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveOutputPropertiesInternal)Property).ArchiveWindowLength; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveOutputPropertiesInternal)Property).ArchiveWindowLength = value ?? default(global::System.TimeSpan); }

        /// <summary>The asset that the live output will write to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public string AssetName { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveOutputPropertiesInternal)Property).AssetName; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveOutputPropertiesInternal)Property).AssetName = value ?? null; }

        /// <summary>The creation time the live output.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public global::System.DateTime? Created { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveOutputPropertiesInternal)Property).Created; }

        /// <summary>The description of the live output.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public string Description { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveOutputPropertiesInternal)Property).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveOutputPropertiesInternal)Property).Description = value ?? null; }

        /// <summary>
        /// The number of fragments in an HTTP Live Streaming (HLS) TS segment in the output of the live event. This value does not
        /// affect the packing ratio for HLS CMAF output.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public int? HlFragmentsPerTsSegment { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveOutputPropertiesInternal)Property).HlFragmentsPerTsSegment; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveOutputPropertiesInternal)Property).HlFragmentsPerTsSegment = value ?? default(int); }

        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.IResourceInternal)__resource).Id; }

        /// <summary>The time the live output was last modified.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public global::System.DateTime? LastModified { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveOutputPropertiesInternal)Property).LastModified; }

        /// <summary>
        /// The manifest file name. If not provided, the service will generate one automatically.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public string ManifestName { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveOutputPropertiesInternal)Property).ManifestName; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveOutputPropertiesInternal)Property).ManifestName = value ?? null; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.IResourceInternal)__resource).Type = value; }

        /// <summary>Internal Acessors for Created</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveOutputInternal.Created { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveOutputPropertiesInternal)Property).Created; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveOutputPropertiesInternal)Property).Created = value; }

        /// <summary>Internal Acessors for Hl</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IHls Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveOutputInternal.Hl { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveOutputPropertiesInternal)Property).Hl; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveOutputPropertiesInternal)Property).Hl = value; }

        /// <summary>Internal Acessors for LastModified</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveOutputInternal.LastModified { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveOutputPropertiesInternal)Property).LastModified; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveOutputPropertiesInternal)Property).LastModified = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveOutputProperties Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveOutputInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.LiveOutputProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveOutputInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveOutputPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveOutputPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for ResourceState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.LiveOutputResourceState? Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveOutputInternal.ResourceState { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveOutputPropertiesInternal)Property).ResourceState; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveOutputPropertiesInternal)Property).ResourceState = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.ISystemData Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveOutputInternal.SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.SystemData()); set { {_systemData = value;} } }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.IResourceInternal)__resource).Name; }

        /// <summary>
        /// The initial timestamp that the live output will start at, any content before this value will not be archived.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public long? OutputSnapTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveOutputPropertiesInternal)Property).OutputSnapTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveOutputPropertiesInternal)Property).OutputSnapTime = value ?? default(long); }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveOutputProperties _property;

        /// <summary>Live output properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveOutputProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.LiveOutputProperties()); set => this._property = value; }

        /// <summary>The provisioning state of the live output.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveOutputPropertiesInternal)Property).ProvisioningState; }

        /// <summary>The resource state of the live output.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.LiveOutputResourceState? ResourceState { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveOutputPropertiesInternal)Property).ResourceState; }

        /// <summary>Backing field for <see cref="SystemData" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.ISystemData _systemData;

        /// <summary>The system metadata relating to this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.ISystemData SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.SystemData()); }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.ISystemDataInternal)SystemData).CreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.ISystemDataInternal)SystemData).CreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.ISystemDataInternal)SystemData).CreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.ISystemDataInternal)SystemData).CreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.ISystemDataInternal)SystemData).CreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.ISystemDataInternal)SystemData).CreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.ISystemDataInternal)SystemData).LastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.ISystemDataInternal)SystemData).LastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.ISystemDataInternal)SystemData).LastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.ISystemDataInternal)SystemData).LastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.ISystemDataInternal)SystemData).LastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.ISystemDataInternal)SystemData).LastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.CreatedByType)""); }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.IResourceInternal)__resource).Type; }

        /// <summary>Creates an new <see cref="LiveOutput" /> instance.</summary>
        public LiveOutput()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// The Live Output.
    public partial interface ILiveOutput :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.IResource
    {
        /// <summary>
        /// ISO 8601 time between 1 minute to 25 hours to indicate the maximum content length that can be archived in the asset for
        /// this live output. This also sets the maximum content length for the rewind window. For example, use PT1H30M to indicate
        /// 1 hour and 30 minutes of archive window.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ISO 8601 time between 1 minute to 25 hours to indicate the maximum content length that can be archived in the asset for this live output. This also sets the maximum content length for the rewind window. For example, use PT1H30M to indicate 1 hour and 30 minutes of archive window.",
        SerializedName = @"archiveWindowLength",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan? ArchiveWindowLength { get; set; }
        /// <summary>The asset that the live output will write to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The asset that the live output will write to.",
        SerializedName = @"assetName",
        PossibleTypes = new [] { typeof(string) })]
        string AssetName { get; set; }
        /// <summary>The creation time the live output.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The creation time the live output.",
        SerializedName = @"created",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? Created { get;  }
        /// <summary>The description of the live output.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The description of the live output.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>
        /// The number of fragments in an HTTP Live Streaming (HLS) TS segment in the output of the live event. This value does not
        /// affect the packing ratio for HLS CMAF output.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of fragments in an HTTP Live Streaming (HLS) TS segment in the output of the live event. This value does not affect the packing ratio for HLS CMAF output.",
        SerializedName = @"fragmentsPerTsSegment",
        PossibleTypes = new [] { typeof(int) })]
        int? HlFragmentsPerTsSegment { get; set; }
        /// <summary>The time the live output was last modified.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The time the live output was last modified.",
        SerializedName = @"lastModified",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastModified { get;  }
        /// <summary>
        /// The manifest file name. If not provided, the service will generate one automatically.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The manifest file name. If not provided, the service will generate one automatically.",
        SerializedName = @"manifestName",
        PossibleTypes = new [] { typeof(string) })]
        string ManifestName { get; set; }
        /// <summary>
        /// The initial timestamp that the live output will start at, any content before this value will not be archived.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The initial timestamp that the live output will start at, any content before this value will not be archived.",
        SerializedName = @"outputSnapTime",
        PossibleTypes = new [] { typeof(long) })]
        long? OutputSnapTime { get; set; }
        /// <summary>The provisioning state of the live output.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state of the live output.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>The resource state of the live output.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The resource state of the live output.",
        SerializedName = @"resourceState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.LiveOutputResourceState) })]
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.LiveOutputResourceState? ResourceState { get;  }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp of resource creation (UTC).",
        SerializedName = @"createdAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity that created the resource.",
        SerializedName = @"createdBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity that created the resource.",
        SerializedName = @"createdByType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.CreatedByType) })]
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.CreatedByType? SystemDataCreatedByType { get; set; }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp of resource last modification (UTC)",
        SerializedName = @"lastModifiedAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity that last modified the resource.",
        SerializedName = @"lastModifiedBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity that last modified the resource.",
        SerializedName = @"lastModifiedByType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.CreatedByType) })]
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.CreatedByType? SystemDataLastModifiedByType { get; set; }

    }
    /// The Live Output.
    internal partial interface ILiveOutputInternal :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.IResourceInternal
    {
        /// <summary>
        /// ISO 8601 time between 1 minute to 25 hours to indicate the maximum content length that can be archived in the asset for
        /// this live output. This also sets the maximum content length for the rewind window. For example, use PT1H30M to indicate
        /// 1 hour and 30 minutes of archive window.
        /// </summary>
        global::System.TimeSpan? ArchiveWindowLength { get; set; }
        /// <summary>The asset that the live output will write to.</summary>
        string AssetName { get; set; }
        /// <summary>The creation time the live output.</summary>
        global::System.DateTime? Created { get; set; }
        /// <summary>The description of the live output.</summary>
        string Description { get; set; }
        /// <summary>HTTP Live Streaming (HLS) packing setting for the live output.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IHls Hl { get; set; }
        /// <summary>
        /// The number of fragments in an HTTP Live Streaming (HLS) TS segment in the output of the live event. This value does not
        /// affect the packing ratio for HLS CMAF output.
        /// </summary>
        int? HlFragmentsPerTsSegment { get; set; }
        /// <summary>The time the live output was last modified.</summary>
        global::System.DateTime? LastModified { get; set; }
        /// <summary>
        /// The manifest file name. If not provided, the service will generate one automatically.
        /// </summary>
        string ManifestName { get; set; }
        /// <summary>
        /// The initial timestamp that the live output will start at, any content before this value will not be archived.
        /// </summary>
        long? OutputSnapTime { get; set; }
        /// <summary>Live output properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveOutputProperties Property { get; set; }
        /// <summary>The provisioning state of the live output.</summary>
        string ProvisioningState { get; set; }
        /// <summary>The resource state of the live output.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.LiveOutputResourceState? ResourceState { get; set; }
        /// <summary>The system metadata relating to this resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.ISystemData SystemData { get; set; }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        global::System.DateTime? SystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        string SystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.CreatedByType? SystemDataCreatedByType { get; set; }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        global::System.DateTime? SystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        string SystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.CreatedByType? SystemDataLastModifiedByType { get; set; }

    }
}