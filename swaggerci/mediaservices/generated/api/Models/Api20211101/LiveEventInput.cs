// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Extensions;

    /// <summary>The live event input.</summary>
    public partial class LiveEventInput :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveEventInput,
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveEventInputInternal
    {

        /// <summary>Backing field for <see cref="AccessControl" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveEventInputAccessControl _accessControl;

        /// <summary>Access control for live event input.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveEventInputAccessControl AccessControl { get => (this._accessControl = this._accessControl ?? new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.LiveEventInputAccessControl()); set => this._accessControl = value; }

        /// <summary>Backing field for <see cref="AccessToken" /> property.</summary>
        private string _accessToken;

        /// <summary>
        /// A UUID in string form to uniquely identify the stream. This can be specified at creation time but cannot be updated. If
        /// omitted, the service will generate a unique value.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public string AccessToken { get => this._accessToken; set => this._accessToken = value; }

        /// <summary>Backing field for <see cref="Endpoint" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveEventEndpoint[] _endpoint;

        /// <summary>The input endpoints for the live event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveEventEndpoint[] Endpoint { get => this._endpoint; set => this._endpoint = value; }

        /// <summary>The IP allow list.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IIPRange[] IPAllow { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveEventInputAccessControlInternal)AccessControl).IPAllow; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveEventInputAccessControlInternal)AccessControl).IPAllow = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="KeyFrameIntervalDuration" /> property.</summary>
        private string _keyFrameIntervalDuration;

        /// <summary>
        /// ISO 8601 time duration of the key frame interval duration of the input. This value sets the EXT-X-TARGETDURATION property
        /// in the HLS output. For example, use PT2S to indicate 2 seconds. Leave the value empty for encoding live events.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public string KeyFrameIntervalDuration { get => this._keyFrameIntervalDuration; set => this._keyFrameIntervalDuration = value; }

        /// <summary>Internal Acessors for AccessControl</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveEventInputAccessControl Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveEventInputInternal.AccessControl { get => (this._accessControl = this._accessControl ?? new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.LiveEventInputAccessControl()); set { {_accessControl = value;} } }

        /// <summary>Internal Acessors for AccessControlIP</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IIPAccessControl Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveEventInputInternal.AccessControlIP { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveEventInputAccessControlInternal)AccessControl).IP; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveEventInputAccessControlInternal)AccessControl).IP = value; }

        /// <summary>Backing field for <see cref="StreamingProtocol" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.LiveEventInputProtocol _streamingProtocol;

        /// <summary>
        /// The input protocol for the live event. This is specified at creation time and cannot be updated.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.LiveEventInputProtocol StreamingProtocol { get => this._streamingProtocol; set => this._streamingProtocol = value; }

        /// <summary>Creates an new <see cref="LiveEventInput" /> instance.</summary>
        public LiveEventInput()
        {

        }
    }
    /// The live event input.
    public partial interface ILiveEventInput :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.IJsonSerializable
    {
        /// <summary>
        /// A UUID in string form to uniquely identify the stream. This can be specified at creation time but cannot be updated. If
        /// omitted, the service will generate a unique value.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A UUID in string form to uniquely identify the stream. This can be specified at creation time but cannot be updated. If omitted, the service will generate a unique value.",
        SerializedName = @"accessToken",
        PossibleTypes = new [] { typeof(string) })]
        string AccessToken { get; set; }
        /// <summary>The input endpoints for the live event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The input endpoints for the live event.",
        SerializedName = @"endpoints",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveEventEndpoint) })]
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveEventEndpoint[] Endpoint { get; set; }
        /// <summary>The IP allow list.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The IP allow list.",
        SerializedName = @"allow",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IIPRange) })]
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IIPRange[] IPAllow { get; set; }
        /// <summary>
        /// ISO 8601 time duration of the key frame interval duration of the input. This value sets the EXT-X-TARGETDURATION property
        /// in the HLS output. For example, use PT2S to indicate 2 seconds. Leave the value empty for encoding live events.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ISO 8601 time duration of the key frame interval duration of the input. This value sets the EXT-X-TARGETDURATION property in the HLS output. For example, use PT2S to indicate 2 seconds. Leave the value empty for encoding live events.",
        SerializedName = @"keyFrameIntervalDuration",
        PossibleTypes = new [] { typeof(string) })]
        string KeyFrameIntervalDuration { get; set; }
        /// <summary>
        /// The input protocol for the live event. This is specified at creation time and cannot be updated.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The input protocol for the live event. This is specified at creation time and cannot be updated.",
        SerializedName = @"streamingProtocol",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.LiveEventInputProtocol) })]
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.LiveEventInputProtocol StreamingProtocol { get; set; }

    }
    /// The live event input.
    internal partial interface ILiveEventInputInternal

    {
        /// <summary>Access control for live event input.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveEventInputAccessControl AccessControl { get; set; }
        /// <summary>The IP access control properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IIPAccessControl AccessControlIP { get; set; }
        /// <summary>
        /// A UUID in string form to uniquely identify the stream. This can be specified at creation time but cannot be updated. If
        /// omitted, the service will generate a unique value.
        /// </summary>
        string AccessToken { get; set; }
        /// <summary>The input endpoints for the live event.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveEventEndpoint[] Endpoint { get; set; }
        /// <summary>The IP allow list.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IIPRange[] IPAllow { get; set; }
        /// <summary>
        /// ISO 8601 time duration of the key frame interval duration of the input. This value sets the EXT-X-TARGETDURATION property
        /// in the HLS output. For example, use PT2S to indicate 2 seconds. Leave the value empty for encoding live events.
        /// </summary>
        string KeyFrameIntervalDuration { get; set; }
        /// <summary>
        /// The input protocol for the live event. This is specified at creation time and cannot be updated.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.LiveEventInputProtocol StreamingProtocol { get; set; }

    }
}