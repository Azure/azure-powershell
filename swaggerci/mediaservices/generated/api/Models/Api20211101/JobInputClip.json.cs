// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Extensions;

    /// <summary>Represents input files for a Job.</summary>
    public partial class JobInputClip
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IJobInputClip.
        /// Note: the Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IJobInputClip interface is polymorphic,
        /// and the precise model class that will get deserialized is determined at runtime based on the payload.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IJobInputClip.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IJobInputClip FromJson(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode node)
        {
            if (!(node is Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonObject json))
            {
                return null;
            }
            // Polymorphic type -- select the appropriate constructor using the discriminator

            switch ( json.StringProperty("@odata.type") )
            {
                case "#Microsoft.Media.JobInputAsset":
                {
                    return new JobInputAsset(json);
                }
                case "#Microsoft.Media.JobInputHttp":
                {
                    return new JobInputHttp(json);
                }
            }
            return new JobInputClip(json);
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonObject into a new instance of <see cref="JobInputClip" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal JobInputClip(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            __jobInput = new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.JobInput(json);
            {_start = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonObject>("start"), out var __jsonStart) ? Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ClipTime.FromJson(__jsonStart) : Start;}
            {_end = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonObject>("end"), out var __jsonEnd) ? Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ClipTime.FromJson(__jsonEnd) : End;}
            {_file = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonArray>("files"), out var __jsonFiles) ? If( __jsonFiles as Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(string) (__u is Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonString __t ? (string)(__t.ToString()) : null)) ))() : null : File;}
            {_label = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonString>("label"), out var __jsonLabel) ? (string)__jsonLabel : (string)Label;}
            {_inputDefinition = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonArray>("inputDefinitions"), out var __jsonInputDefinitions) ? If( __jsonInputDefinitions as Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonArray, out var __q) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IInputDefinition[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__q, (__p)=>(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IInputDefinition) (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.InputDefinition.FromJson(__p) )) ))() : null : InputDefinition;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="JobInputClip" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="JobInputClip" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            __jobInput?.ToJson(container, serializationMode);
            AddIf( null != this._start ? (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode) this._start.ToJson(null,serializationMode) : null, "start" ,container.Add );
            AddIf( null != this._end ? (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode) this._end.ToJson(null,serializationMode) : null, "end" ,container.Add );
            if (null != this._file)
            {
                var __w = new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.XNodeArray();
                foreach( var __x in this._file )
                {
                    AddIf(null != (((object)__x)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonString(__x.ToString()) : null ,__w.Add);
                }
                container.Add("files",__w);
            }
            AddIf( null != (((object)this._label)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonString(this._label.ToString()) : null, "label" ,container.Add );
            if (null != this._inputDefinition)
            {
                var __r = new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.XNodeArray();
                foreach( var __s in this._inputDefinition )
                {
                    AddIf(__s?.ToJson(null, serializationMode) ,__r.Add);
                }
                container.Add("inputDefinitions",__r);
            }
            AfterToJson(ref container);
            return container;
        }
    }
}