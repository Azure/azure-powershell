// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Extensions;

    /// <summary>The JSON object that contains the properties required to create a live output.</summary>
    public partial class LiveOutputProperties :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveOutputProperties,
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveOutputPropertiesInternal
    {

        /// <summary>Backing field for <see cref="ArchiveWindowLength" /> property.</summary>
        private global::System.TimeSpan _archiveWindowLength;

        /// <summary>
        /// ISO 8601 time between 1 minute to 25 hours to indicate the maximum content length that can be archived in the asset for
        /// this live output. This also sets the maximum content length for the rewind window. For example, use PT1H30M to indicate
        /// 1 hour and 30 minutes of archive window.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public global::System.TimeSpan ArchiveWindowLength { get => this._archiveWindowLength; set => this._archiveWindowLength = value; }

        /// <summary>Backing field for <see cref="AssetName" /> property.</summary>
        private string _assetName;

        /// <summary>The asset that the live output will write to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public string AssetName { get => this._assetName; set => this._assetName = value; }

        /// <summary>Backing field for <see cref="Created" /> property.</summary>
        private global::System.DateTime? _created;

        /// <summary>The creation time the live output.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public global::System.DateTime? Created { get => this._created; }

        /// <summary>Backing field for <see cref="Description" /> property.</summary>
        private string _description;

        /// <summary>The description of the live output.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public string Description { get => this._description; set => this._description = value; }

        /// <summary>Backing field for <see cref="Hl" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IHls _hl;

        /// <summary>HTTP Live Streaming (HLS) packing setting for the live output.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IHls Hl { get => (this._hl = this._hl ?? new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.Hls()); set => this._hl = value; }

        /// <summary>
        /// The number of fragments in an HTTP Live Streaming (HLS) TS segment in the output of the live event. This value does not
        /// affect the packing ratio for HLS CMAF output.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public int? HlFragmentsPerTsSegment { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IHlsInternal)Hl).FragmentsPerTsSegment; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IHlsInternal)Hl).FragmentsPerTsSegment = value ?? default(int); }

        /// <summary>Backing field for <see cref="LastModified" /> property.</summary>
        private global::System.DateTime? _lastModified;

        /// <summary>The time the live output was last modified.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public global::System.DateTime? LastModified { get => this._lastModified; }

        /// <summary>Backing field for <see cref="ManifestName" /> property.</summary>
        private string _manifestName;

        /// <summary>
        /// The manifest file name. If not provided, the service will generate one automatically.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public string ManifestName { get => this._manifestName; set => this._manifestName = value; }

        /// <summary>Internal Acessors for Created</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveOutputPropertiesInternal.Created { get => this._created; set { {_created = value;} } }

        /// <summary>Internal Acessors for Hl</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IHls Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveOutputPropertiesInternal.Hl { get => (this._hl = this._hl ?? new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.Hls()); set { {_hl = value;} } }

        /// <summary>Internal Acessors for LastModified</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveOutputPropertiesInternal.LastModified { get => this._lastModified; set { {_lastModified = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveOutputPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for ResourceState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.LiveOutputResourceState? Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ILiveOutputPropertiesInternal.ResourceState { get => this._resourceState; set { {_resourceState = value;} } }

        /// <summary>Backing field for <see cref="OutputSnapTime" /> property.</summary>
        private long? _outputSnapTime;

        /// <summary>
        /// The initial timestamp that the live output will start at, any content before this value will not be archived.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public long? OutputSnapTime { get => this._outputSnapTime; set => this._outputSnapTime = value; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>The provisioning state of the live output.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="ResourceState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.LiveOutputResourceState? _resourceState;

        /// <summary>The resource state of the live output.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.LiveOutputResourceState? ResourceState { get => this._resourceState; }

        /// <summary>Creates an new <see cref="LiveOutputProperties" /> instance.</summary>
        public LiveOutputProperties()
        {

        }
    }
    /// The JSON object that contains the properties required to create a live output.
    public partial interface ILiveOutputProperties :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.IJsonSerializable
    {
        /// <summary>
        /// ISO 8601 time between 1 minute to 25 hours to indicate the maximum content length that can be archived in the asset for
        /// this live output. This also sets the maximum content length for the rewind window. For example, use PT1H30M to indicate
        /// 1 hour and 30 minutes of archive window.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"ISO 8601 time between 1 minute to 25 hours to indicate the maximum content length that can be archived in the asset for this live output. This also sets the maximum content length for the rewind window. For example, use PT1H30M to indicate 1 hour and 30 minutes of archive window.",
        SerializedName = @"archiveWindowLength",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan ArchiveWindowLength { get; set; }
        /// <summary>The asset that the live output will write to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The asset that the live output will write to.",
        SerializedName = @"assetName",
        PossibleTypes = new [] { typeof(string) })]
        string AssetName { get; set; }
        /// <summary>The creation time the live output.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The creation time the live output.",
        SerializedName = @"created",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? Created { get;  }
        /// <summary>The description of the live output.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The description of the live output.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>
        /// The number of fragments in an HTTP Live Streaming (HLS) TS segment in the output of the live event. This value does not
        /// affect the packing ratio for HLS CMAF output.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of fragments in an HTTP Live Streaming (HLS) TS segment in the output of the live event. This value does not affect the packing ratio for HLS CMAF output.",
        SerializedName = @"fragmentsPerTsSegment",
        PossibleTypes = new [] { typeof(int) })]
        int? HlFragmentsPerTsSegment { get; set; }
        /// <summary>The time the live output was last modified.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The time the live output was last modified.",
        SerializedName = @"lastModified",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastModified { get;  }
        /// <summary>
        /// The manifest file name. If not provided, the service will generate one automatically.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The manifest file name. If not provided, the service will generate one automatically.",
        SerializedName = @"manifestName",
        PossibleTypes = new [] { typeof(string) })]
        string ManifestName { get; set; }
        /// <summary>
        /// The initial timestamp that the live output will start at, any content before this value will not be archived.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The initial timestamp that the live output will start at, any content before this value will not be archived.",
        SerializedName = @"outputSnapTime",
        PossibleTypes = new [] { typeof(long) })]
        long? OutputSnapTime { get; set; }
        /// <summary>The provisioning state of the live output.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state of the live output.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>The resource state of the live output.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The resource state of the live output.",
        SerializedName = @"resourceState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.LiveOutputResourceState) })]
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.LiveOutputResourceState? ResourceState { get;  }

    }
    /// The JSON object that contains the properties required to create a live output.
    internal partial interface ILiveOutputPropertiesInternal

    {
        /// <summary>
        /// ISO 8601 time between 1 minute to 25 hours to indicate the maximum content length that can be archived in the asset for
        /// this live output. This also sets the maximum content length for the rewind window. For example, use PT1H30M to indicate
        /// 1 hour and 30 minutes of archive window.
        /// </summary>
        global::System.TimeSpan ArchiveWindowLength { get; set; }
        /// <summary>The asset that the live output will write to.</summary>
        string AssetName { get; set; }
        /// <summary>The creation time the live output.</summary>
        global::System.DateTime? Created { get; set; }
        /// <summary>The description of the live output.</summary>
        string Description { get; set; }
        /// <summary>HTTP Live Streaming (HLS) packing setting for the live output.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IHls Hl { get; set; }
        /// <summary>
        /// The number of fragments in an HTTP Live Streaming (HLS) TS segment in the output of the live event. This value does not
        /// affect the packing ratio for HLS CMAF output.
        /// </summary>
        int? HlFragmentsPerTsSegment { get; set; }
        /// <summary>The time the live output was last modified.</summary>
        global::System.DateTime? LastModified { get; set; }
        /// <summary>
        /// The manifest file name. If not provided, the service will generate one automatically.
        /// </summary>
        string ManifestName { get; set; }
        /// <summary>
        /// The initial timestamp that the live output will start at, any content before this value will not be archived.
        /// </summary>
        long? OutputSnapTime { get; set; }
        /// <summary>The provisioning state of the live output.</summary>
        string ProvisioningState { get; set; }
        /// <summary>The resource state of the live output.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.LiveOutputResourceState? ResourceState { get; set; }

    }
}