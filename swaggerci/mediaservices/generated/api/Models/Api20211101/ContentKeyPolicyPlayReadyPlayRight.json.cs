// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Extensions;

    /// <summary>Configures the Play Right in the PlayReady license.</summary>
    public partial class ContentKeyPolicyPlayReadyPlayRight
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonObject into a new instance of <see cref="ContentKeyPolicyPlayReadyPlayRight" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal ContentKeyPolicyPlayReadyPlayRight(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_explicitAnalogTelevisionOutputRestriction = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonObject>("explicitAnalogTelevisionOutputRestriction"), out var __jsonExplicitAnalogTelevisionOutputRestriction) ? Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction.FromJson(__jsonExplicitAnalogTelevisionOutputRestriction) : ExplicitAnalogTelevisionOutputRestriction;}
            {_firstPlayExpiration = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonString>("firstPlayExpiration"), out var __jsonFirstPlayExpiration) ? global::System.Xml.XmlConvert.ToTimeSpan( __jsonFirstPlayExpiration ) : FirstPlayExpiration;}
            {_scmsRestriction = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNumber>("scmsRestriction"), out var __jsonScmsRestriction) ? (int?)__jsonScmsRestriction : ScmsRestriction;}
            {_agcAndColorStripeRestriction = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNumber>("agcAndColorStripeRestriction"), out var __jsonAgcAndColorStripeRestriction) ? (int?)__jsonAgcAndColorStripeRestriction : AgcAndColorStripeRestriction;}
            {_digitalVideoOnlyContentRestriction = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonBoolean>("digitalVideoOnlyContentRestriction"), out var __jsonDigitalVideoOnlyContentRestriction) ? (bool)__jsonDigitalVideoOnlyContentRestriction : DigitalVideoOnlyContentRestriction;}
            {_imageConstraintForAnalogComponentVideoRestriction = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonBoolean>("imageConstraintForAnalogComponentVideoRestriction"), out var __jsonImageConstraintForAnalogComponentVideoRestriction) ? (bool)__jsonImageConstraintForAnalogComponentVideoRestriction : ImageConstraintForAnalogComponentVideoRestriction;}
            {_imageConstraintForAnalogComputerMonitorRestriction = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonBoolean>("imageConstraintForAnalogComputerMonitorRestriction"), out var __jsonImageConstraintForAnalogComputerMonitorRestriction) ? (bool)__jsonImageConstraintForAnalogComputerMonitorRestriction : ImageConstraintForAnalogComputerMonitorRestriction;}
            {_allowPassingVideoContentToUnknownOutput = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonString>("allowPassingVideoContentToUnknownOutput"), out var __jsonAllowPassingVideoContentToUnknownOutput) ? (string)__jsonAllowPassingVideoContentToUnknownOutput : (string)AllowPassingVideoContentToUnknownOutput;}
            {_uncompressedDigitalVideoOpl = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNumber>("uncompressedDigitalVideoOpl"), out var __jsonUncompressedDigitalVideoOpl) ? (int?)__jsonUncompressedDigitalVideoOpl : UncompressedDigitalVideoOpl;}
            {_compressedDigitalVideoOpl = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNumber>("compressedDigitalVideoOpl"), out var __jsonCompressedDigitalVideoOpl) ? (int?)__jsonCompressedDigitalVideoOpl : CompressedDigitalVideoOpl;}
            {_analogVideoOpl = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNumber>("analogVideoOpl"), out var __jsonAnalogVideoOpl) ? (int?)__jsonAnalogVideoOpl : AnalogVideoOpl;}
            {_compressedDigitalAudioOpl = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNumber>("compressedDigitalAudioOpl"), out var __jsonCompressedDigitalAudioOpl) ? (int?)__jsonCompressedDigitalAudioOpl : CompressedDigitalAudioOpl;}
            {_uncompressedDigitalAudioOpl = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNumber>("uncompressedDigitalAudioOpl"), out var __jsonUncompressedDigitalAudioOpl) ? (int?)__jsonUncompressedDigitalAudioOpl : UncompressedDigitalAudioOpl;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IContentKeyPolicyPlayReadyPlayRight.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IContentKeyPolicyPlayReadyPlayRight.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IContentKeyPolicyPlayReadyPlayRight FromJson(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonObject json ? new ContentKeyPolicyPlayReadyPlayRight(json) : null;
        }

        /// <summary>
        /// Serializes this instance of <see cref="ContentKeyPolicyPlayReadyPlayRight" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode"
        /// />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="ContentKeyPolicyPlayReadyPlayRight" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != this._explicitAnalogTelevisionOutputRestriction ? (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode) this._explicitAnalogTelevisionOutputRestriction.ToJson(null,serializationMode) : null, "explicitAnalogTelevisionOutputRestriction" ,container.Add );
            AddIf( (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode)(null != this._firstPlayExpiration ? new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonString(global::System.Xml.XmlConvert.ToString((global::System.TimeSpan)this._firstPlayExpiration)): null), "firstPlayExpiration" ,container.Add );
            AddIf( null != this._scmsRestriction ? (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNumber((int)this._scmsRestriction) : null, "scmsRestriction" ,container.Add );
            AddIf( null != this._agcAndColorStripeRestriction ? (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNumber((int)this._agcAndColorStripeRestriction) : null, "agcAndColorStripeRestriction" ,container.Add );
            AddIf( (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonBoolean(this._digitalVideoOnlyContentRestriction), "digitalVideoOnlyContentRestriction" ,container.Add );
            AddIf( (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonBoolean(this._imageConstraintForAnalogComponentVideoRestriction), "imageConstraintForAnalogComponentVideoRestriction" ,container.Add );
            AddIf( (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonBoolean(this._imageConstraintForAnalogComputerMonitorRestriction), "imageConstraintForAnalogComputerMonitorRestriction" ,container.Add );
            AddIf( null != (((object)this._allowPassingVideoContentToUnknownOutput)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonString(this._allowPassingVideoContentToUnknownOutput.ToString()) : null, "allowPassingVideoContentToUnknownOutput" ,container.Add );
            AddIf( null != this._uncompressedDigitalVideoOpl ? (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNumber((int)this._uncompressedDigitalVideoOpl) : null, "uncompressedDigitalVideoOpl" ,container.Add );
            AddIf( null != this._compressedDigitalVideoOpl ? (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNumber((int)this._compressedDigitalVideoOpl) : null, "compressedDigitalVideoOpl" ,container.Add );
            AddIf( null != this._analogVideoOpl ? (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNumber((int)this._analogVideoOpl) : null, "analogVideoOpl" ,container.Add );
            AddIf( null != this._compressedDigitalAudioOpl ? (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNumber((int)this._compressedDigitalAudioOpl) : null, "compressedDigitalAudioOpl" ,container.Add );
            AddIf( null != this._uncompressedDigitalAudioOpl ? (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNumber((int)this._uncompressedDigitalAudioOpl) : null, "uncompressedDigitalAudioOpl" ,container.Add );
            AfterToJson(ref container);
            return container;
        }
    }
}