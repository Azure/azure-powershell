// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Extensions;

    /// <summary>Class for NoEncryption scheme</summary>
    public partial class NoEncryption :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.INoEncryption,
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.INoEncryptionInternal
    {

        /// <summary>Backing field for <see cref="EnabledProtocol" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IEnabledProtocols _enabledProtocol;

        /// <summary>Representing supported protocols</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IEnabledProtocols EnabledProtocol { get => (this._enabledProtocol = this._enabledProtocol ?? new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.EnabledProtocols()); set => this._enabledProtocol = value; }

        /// <summary>Enable DASH protocol or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public bool? EnabledProtocolDash { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IEnabledProtocolsInternal)EnabledProtocol).Dash; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IEnabledProtocolsInternal)EnabledProtocol).Dash = value ?? default(bool); }

        /// <summary>Enable Download protocol or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public bool? EnabledProtocolDownload { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IEnabledProtocolsInternal)EnabledProtocol).Download; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IEnabledProtocolsInternal)EnabledProtocol).Download = value ?? default(bool); }

        /// <summary>Enable HLS protocol or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public bool? EnabledProtocolHl { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IEnabledProtocolsInternal)EnabledProtocol).Hl; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IEnabledProtocolsInternal)EnabledProtocol).Hl = value ?? default(bool); }

        /// <summary>Enable SmoothStreaming protocol or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public bool? EnabledProtocolSmoothStreaming { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IEnabledProtocolsInternal)EnabledProtocol).SmoothStreaming; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IEnabledProtocolsInternal)EnabledProtocol).SmoothStreaming = value ?? default(bool); }

        /// <summary>Internal Acessors for EnabledProtocol</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IEnabledProtocols Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.INoEncryptionInternal.EnabledProtocol { get => (this._enabledProtocol = this._enabledProtocol ?? new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.EnabledProtocols()); set { {_enabledProtocol = value;} } }

        /// <summary>Creates an new <see cref="NoEncryption" /> instance.</summary>
        public NoEncryption()
        {

        }
    }
    /// Class for NoEncryption scheme
    public partial interface INoEncryption :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.IJsonSerializable
    {
        /// <summary>Enable DASH protocol or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enable DASH protocol or not",
        SerializedName = @"dash",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnabledProtocolDash { get; set; }
        /// <summary>Enable Download protocol or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enable Download protocol or not",
        SerializedName = @"download",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnabledProtocolDownload { get; set; }
        /// <summary>Enable HLS protocol or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enable HLS protocol or not",
        SerializedName = @"hls",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnabledProtocolHl { get; set; }
        /// <summary>Enable SmoothStreaming protocol or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enable SmoothStreaming protocol or not",
        SerializedName = @"smoothStreaming",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnabledProtocolSmoothStreaming { get; set; }

    }
    /// Class for NoEncryption scheme
    internal partial interface INoEncryptionInternal

    {
        /// <summary>Representing supported protocols</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IEnabledProtocols EnabledProtocol { get; set; }
        /// <summary>Enable DASH protocol or not</summary>
        bool? EnabledProtocolDash { get; set; }
        /// <summary>Enable Download protocol or not</summary>
        bool? EnabledProtocolDownload { get; set; }
        /// <summary>Enable HLS protocol or not</summary>
        bool? EnabledProtocolHl { get; set; }
        /// <summary>Enable SmoothStreaming protocol or not</summary>
        bool? EnabledProtocolSmoothStreaming { get; set; }

    }
}