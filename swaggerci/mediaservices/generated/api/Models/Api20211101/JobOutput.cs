// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Extensions;

    /// <summary>Describes all the properties of a JobOutput.</summary>
    public partial class JobOutput :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IJobOutput,
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IJobOutputInternal
    {

        /// <summary>Helps with categorization of errors.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.JobErrorCategory? Category { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IJobErrorInternal)Error).Category; }

        /// <summary>Error code describing the error.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.JobErrorCode? Code { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IJobErrorInternal)Error).Code; }

        /// <summary>An array of details about specific errors that led to this reported error.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IJobErrorDetail[] Detail { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IJobErrorInternal)Error).Detail; }

        /// <summary>Backing field for <see cref="EndTime" /> property.</summary>
        private global::System.DateTime? _endTime;

        /// <summary>The UTC date and time at which this Job Output finished processing.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public global::System.DateTime? EndTime { get => this._endTime; }

        /// <summary>Backing field for <see cref="Error" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IJobError _error;

        /// <summary>If the JobOutput is in the Error state, it contains the details of the error.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IJobError Error { get => (this._error = this._error ?? new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.JobError()); }

        /// <summary>Backing field for <see cref="Label" /> property.</summary>
        private string _label;

        /// <summary>
        /// A label that is assigned to a JobOutput in order to help uniquely identify it. This is useful when your Transform has
        /// more than one TransformOutput, whereby your Job has more than one JobOutput. In such cases, when you submit the Job, you
        /// will add two or more JobOutputs, in the same order as TransformOutputs in the Transform. Subsequently, when you retrieve
        /// the Job, either through events or on a GET request, you can use the label to easily identify the JobOutput. If a label
        /// is not provided, a default value of '{presetName}_{outputIndex}' will be used, where the preset name is the name of the
        /// preset in the corresponding TransformOutput and the output index is the relative index of the this JobOutput within the
        /// Job. Note that this index is the same as the relative index of the corresponding TransformOutput within its Transform.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public string Label { get => this._label; set => this._label = value; }

        /// <summary>A human-readable language-dependent representation of the error.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public string Message { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IJobErrorInternal)Error).Message; }

        /// <summary>Internal Acessors for Category</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.JobErrorCategory? Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IJobOutputInternal.Category { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IJobErrorInternal)Error).Category; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IJobErrorInternal)Error).Category = value; }

        /// <summary>Internal Acessors for Code</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.JobErrorCode? Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IJobOutputInternal.Code { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IJobErrorInternal)Error).Code; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IJobErrorInternal)Error).Code = value; }

        /// <summary>Internal Acessors for Detail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IJobErrorDetail[] Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IJobOutputInternal.Detail { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IJobErrorInternal)Error).Detail; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IJobErrorInternal)Error).Detail = value; }

        /// <summary>Internal Acessors for EndTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IJobOutputInternal.EndTime { get => this._endTime; set { {_endTime = value;} } }

        /// <summary>Internal Acessors for Error</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IJobError Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IJobOutputInternal.Error { get => (this._error = this._error ?? new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.JobError()); set { {_error = value;} } }

        /// <summary>Internal Acessors for Message</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IJobOutputInternal.Message { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IJobErrorInternal)Error).Message; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IJobErrorInternal)Error).Message = value; }

        /// <summary>Internal Acessors for PresetOverride</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IPreset Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IJobOutputInternal.PresetOverride { get => (this._presetOverride = this._presetOverride ?? new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.Preset()); set { {_presetOverride = value;} } }

        /// <summary>Internal Acessors for Progress</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IJobOutputInternal.Progress { get => this._progress; set { {_progress = value;} } }

        /// <summary>Internal Acessors for Retry</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.JobRetry? Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IJobOutputInternal.Retry { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IJobErrorInternal)Error).Retry; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IJobErrorInternal)Error).Retry = value; }

        /// <summary>Internal Acessors for StartTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IJobOutputInternal.StartTime { get => this._startTime; set { {_startTime = value;} } }

        /// <summary>Internal Acessors for State</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.JobState? Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IJobOutputInternal.State { get => this._state; set { {_state = value;} } }

        /// <summary>Backing field for <see cref="OdataType" /> property.</summary>
        private string _odataType;

        /// <summary>The discriminator for derived types.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public string OdataType { get => this._odataType; set => this._odataType = value; }

        /// <summary>Backing field for <see cref="PresetOverride" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IPreset _presetOverride;

        /// <summary>A preset used to override the preset in the corresponding transform output.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IPreset PresetOverride { get => (this._presetOverride = this._presetOverride ?? new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.Preset()); set => this._presetOverride = value; }

        /// <summary>The discriminator for derived types.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public string PresetOverrideOdataType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IPresetInternal)PresetOverride).OdataType; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IPresetInternal)PresetOverride).OdataType = value ?? null; }

        /// <summary>Backing field for <see cref="Progress" /> property.</summary>
        private int? _progress;

        /// <summary>
        /// If the JobOutput is in a Processing state, this contains the Job completion percentage. The value is an estimate and not
        /// intended to be used to predict Job completion times. To determine if the JobOutput is complete, use the State property.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public int? Progress { get => this._progress; }

        /// <summary>
        /// Indicates that it may be possible to retry the Job. If retry is unsuccessful, please contact Azure support via Azure Portal.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.JobRetry? Retry { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IJobErrorInternal)Error).Retry; }

        /// <summary>Backing field for <see cref="StartTime" /> property.</summary>
        private global::System.DateTime? _startTime;

        /// <summary>The UTC date and time at which this Job Output began processing.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public global::System.DateTime? StartTime { get => this._startTime; }

        /// <summary>Backing field for <see cref="State" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.JobState? _state;

        /// <summary>Describes the state of the JobOutput.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.JobState? State { get => this._state; }

        /// <summary>Creates an new <see cref="JobOutput" /> instance.</summary>
        public JobOutput()
        {

        }
    }
    /// Describes all the properties of a JobOutput.
    public partial interface IJobOutput :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.IJsonSerializable
    {
        /// <summary>Helps with categorization of errors.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Helps with categorization of errors.",
        SerializedName = @"category",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.JobErrorCategory) })]
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.JobErrorCategory? Category { get;  }
        /// <summary>Error code describing the error.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Error code describing the error.",
        SerializedName = @"code",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.JobErrorCode) })]
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.JobErrorCode? Code { get;  }
        /// <summary>An array of details about specific errors that led to this reported error.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"An array of details about specific errors that led to this reported error.",
        SerializedName = @"details",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IJobErrorDetail) })]
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IJobErrorDetail[] Detail { get;  }
        /// <summary>The UTC date and time at which this Job Output finished processing.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The UTC date and time at which this Job Output finished processing.",
        SerializedName = @"endTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? EndTime { get;  }
        /// <summary>
        /// A label that is assigned to a JobOutput in order to help uniquely identify it. This is useful when your Transform has
        /// more than one TransformOutput, whereby your Job has more than one JobOutput. In such cases, when you submit the Job, you
        /// will add two or more JobOutputs, in the same order as TransformOutputs in the Transform. Subsequently, when you retrieve
        /// the Job, either through events or on a GET request, you can use the label to easily identify the JobOutput. If a label
        /// is not provided, a default value of '{presetName}_{outputIndex}' will be used, where the preset name is the name of the
        /// preset in the corresponding TransformOutput and the output index is the relative index of the this JobOutput within the
        /// Job. Note that this index is the same as the relative index of the corresponding TransformOutput within its Transform.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A label that is assigned to a JobOutput in order to help uniquely identify it. This is useful when your Transform has more than one TransformOutput, whereby your Job has more than one JobOutput. In such cases, when you submit the Job, you will add two or more JobOutputs, in the same order as TransformOutputs in the Transform. Subsequently, when you retrieve the Job, either through events or on a GET request, you can use the label to easily identify the JobOutput. If a label is not provided, a default value of '{presetName}_{outputIndex}' will be used, where the preset name is the name of the preset in the corresponding TransformOutput and the output index is the relative index of the this JobOutput within the Job. Note that this index is the same as the relative index of the corresponding TransformOutput within its Transform.",
        SerializedName = @"label",
        PossibleTypes = new [] { typeof(string) })]
        string Label { get; set; }
        /// <summary>A human-readable language-dependent representation of the error.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"A human-readable language-dependent representation of the error.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string Message { get;  }
        /// <summary>The discriminator for derived types.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The discriminator for derived types.",
        SerializedName = @"@odata.type",
        PossibleTypes = new [] { typeof(string) })]
        string OdataType { get; set; }
        /// <summary>The discriminator for derived types.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The discriminator for derived types.",
        SerializedName = @"@odata.type",
        PossibleTypes = new [] { typeof(string) })]
        string PresetOverrideOdataType { get; set; }
        /// <summary>
        /// If the JobOutput is in a Processing state, this contains the Job completion percentage. The value is an estimate and not
        /// intended to be used to predict Job completion times. To determine if the JobOutput is complete, use the State property.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"If the JobOutput is in a Processing state, this contains the Job completion percentage. The value is an estimate and not intended to be used to predict Job completion times. To determine if the JobOutput is complete, use the State property.",
        SerializedName = @"progress",
        PossibleTypes = new [] { typeof(int) })]
        int? Progress { get;  }
        /// <summary>
        /// Indicates that it may be possible to retry the Job. If retry is unsuccessful, please contact Azure support via Azure Portal.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Indicates that it may be possible to retry the Job. If retry is unsuccessful, please contact Azure support via Azure Portal.",
        SerializedName = @"retry",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.JobRetry) })]
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.JobRetry? Retry { get;  }
        /// <summary>The UTC date and time at which this Job Output began processing.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The UTC date and time at which this Job Output began processing.",
        SerializedName = @"startTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? StartTime { get;  }
        /// <summary>Describes the state of the JobOutput.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Describes the state of the JobOutput.",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.JobState) })]
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.JobState? State { get;  }

    }
    /// Describes all the properties of a JobOutput.
    internal partial interface IJobOutputInternal

    {
        /// <summary>Helps with categorization of errors.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.JobErrorCategory? Category { get; set; }
        /// <summary>Error code describing the error.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.JobErrorCode? Code { get; set; }
        /// <summary>An array of details about specific errors that led to this reported error.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IJobErrorDetail[] Detail { get; set; }
        /// <summary>The UTC date and time at which this Job Output finished processing.</summary>
        global::System.DateTime? EndTime { get; set; }
        /// <summary>If the JobOutput is in the Error state, it contains the details of the error.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IJobError Error { get; set; }
        /// <summary>
        /// A label that is assigned to a JobOutput in order to help uniquely identify it. This is useful when your Transform has
        /// more than one TransformOutput, whereby your Job has more than one JobOutput. In such cases, when you submit the Job, you
        /// will add two or more JobOutputs, in the same order as TransformOutputs in the Transform. Subsequently, when you retrieve
        /// the Job, either through events or on a GET request, you can use the label to easily identify the JobOutput. If a label
        /// is not provided, a default value of '{presetName}_{outputIndex}' will be used, where the preset name is the name of the
        /// preset in the corresponding TransformOutput and the output index is the relative index of the this JobOutput within the
        /// Job. Note that this index is the same as the relative index of the corresponding TransformOutput within its Transform.
        /// </summary>
        string Label { get; set; }
        /// <summary>A human-readable language-dependent representation of the error.</summary>
        string Message { get; set; }
        /// <summary>The discriminator for derived types.</summary>
        string OdataType { get; set; }
        /// <summary>A preset used to override the preset in the corresponding transform output.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IPreset PresetOverride { get; set; }
        /// <summary>The discriminator for derived types.</summary>
        string PresetOverrideOdataType { get; set; }
        /// <summary>
        /// If the JobOutput is in a Processing state, this contains the Job completion percentage. The value is an estimate and not
        /// intended to be used to predict Job completion times. To determine if the JobOutput is complete, use the State property.
        /// </summary>
        int? Progress { get; set; }
        /// <summary>
        /// Indicates that it may be possible to retry the Job. If retry is unsuccessful, please contact Azure support via Azure Portal.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.JobRetry? Retry { get; set; }
        /// <summary>The UTC date and time at which this Job Output began processing.</summary>
        global::System.DateTime? StartTime { get; set; }
        /// <summary>Describes the state of the JobOutput.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.JobState? State { get; set; }

    }
}