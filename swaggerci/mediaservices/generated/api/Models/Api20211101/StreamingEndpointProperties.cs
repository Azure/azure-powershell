// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Extensions;

    /// <summary>The streaming endpoint properties.</summary>
    public partial class StreamingEndpointProperties :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingEndpointProperties,
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingEndpointPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AccessControl" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingEndpointAccessControl _accessControl;

        /// <summary>The access control definition of the streaming endpoint.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingEndpointAccessControl AccessControl { get => (this._accessControl = this._accessControl ?? new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.StreamingEndpointAccessControl()); set => this._accessControl = value; }

        /// <summary>authentication key list</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IAkamaiSignatureHeaderAuthenticationKey[] AkamaiSignatureHeaderAuthenticationKeyList { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingEndpointAccessControlInternal)AccessControl).AkamaiSignatureHeaderAuthenticationKeyList; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingEndpointAccessControlInternal)AccessControl).AkamaiSignatureHeaderAuthenticationKeyList = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="AvailabilitySetName" /> property.</summary>
        private string _availabilitySetName;

        /// <summary>This feature is deprecated, do not set a value for this property.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public string AvailabilitySetName { get => this._availabilitySetName; set => this._availabilitySetName = value; }

        /// <summary>Backing field for <see cref="CdnEnabled" /> property.</summary>
        private bool? _cdnEnabled;

        /// <summary>The CDN enabled flag.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public bool? CdnEnabled { get => this._cdnEnabled; set => this._cdnEnabled = value; }

        /// <summary>Backing field for <see cref="CdnProfile" /> property.</summary>
        private string _cdnProfile;

        /// <summary>The CDN profile name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public string CdnProfile { get => this._cdnProfile; set => this._cdnProfile = value; }

        /// <summary>Backing field for <see cref="CdnProvider" /> property.</summary>
        private string _cdnProvider;

        /// <summary>The CDN provider name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public string CdnProvider { get => this._cdnProvider; set => this._cdnProvider = value; }

        /// <summary>Backing field for <see cref="Created" /> property.</summary>
        private global::System.DateTime? _created;

        /// <summary>The exact time the streaming endpoint was created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public global::System.DateTime? Created { get => this._created; }

        /// <summary>Backing field for <see cref="CrossSiteAccessPolicy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ICrossSiteAccessPolicies _crossSiteAccessPolicy;

        /// <summary>The streaming endpoint access policies.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ICrossSiteAccessPolicies CrossSiteAccessPolicy { get => (this._crossSiteAccessPolicy = this._crossSiteAccessPolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.CrossSiteAccessPolicies()); set => this._crossSiteAccessPolicy = value; }

        /// <summary>The content of clientaccesspolicy.xml used by Silverlight.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public string CrossSiteAccessPolicyClientAccessPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ICrossSiteAccessPoliciesInternal)CrossSiteAccessPolicy).ClientAccessPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ICrossSiteAccessPoliciesInternal)CrossSiteAccessPolicy).ClientAccessPolicy = value ?? null; }

        /// <summary>The content of crossdomain.xml used by Silverlight.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public string CrossSiteAccessPolicyCrossDomainPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ICrossSiteAccessPoliciesInternal)CrossSiteAccessPolicy).CrossDomainPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ICrossSiteAccessPoliciesInternal)CrossSiteAccessPolicy).CrossDomainPolicy = value ?? null; }

        /// <summary>Backing field for <see cref="CustomHostName" /> property.</summary>
        private string[] _customHostName;

        /// <summary>The custom host names of the streaming endpoint</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public string[] CustomHostName { get => this._customHostName; set => this._customHostName = value; }

        /// <summary>Backing field for <see cref="Description" /> property.</summary>
        private string _description;

        /// <summary>The streaming endpoint description.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public string Description { get => this._description; set => this._description = value; }

        /// <summary>Backing field for <see cref="FreeTrialEndTime" /> property.</summary>
        private global::System.DateTime? _freeTrialEndTime;

        /// <summary>The free trial expiration time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public global::System.DateTime? FreeTrialEndTime { get => this._freeTrialEndTime; }

        /// <summary>Backing field for <see cref="HostName" /> property.</summary>
        private string _hostName;

        /// <summary>The streaming endpoint host name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public string HostName { get => this._hostName; }

        /// <summary>The IP allow list.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IIPRange[] IPAllow { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingEndpointAccessControlInternal)AccessControl).IPAllow; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingEndpointAccessControlInternal)AccessControl).IPAllow = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="LastModified" /> property.</summary>
        private global::System.DateTime? _lastModified;

        /// <summary>The exact time the streaming endpoint was last modified.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public global::System.DateTime? LastModified { get => this._lastModified; }

        /// <summary>Backing field for <see cref="MaxCacheAge" /> property.</summary>
        private long? _maxCacheAge;

        /// <summary>Max cache age</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public long? MaxCacheAge { get => this._maxCacheAge; set => this._maxCacheAge = value; }

        /// <summary>Internal Acessors for AccessControl</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingEndpointAccessControl Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingEndpointPropertiesInternal.AccessControl { get => (this._accessControl = this._accessControl ?? new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.StreamingEndpointAccessControl()); set { {_accessControl = value;} } }

        /// <summary>Internal Acessors for AccessControlAkamai</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IAkamaiAccessControl Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingEndpointPropertiesInternal.AccessControlAkamai { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingEndpointAccessControlInternal)AccessControl).Akamai; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingEndpointAccessControlInternal)AccessControl).Akamai = value; }

        /// <summary>Internal Acessors for AccessControlIP</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IIPAccessControl Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingEndpointPropertiesInternal.AccessControlIP { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingEndpointAccessControlInternal)AccessControl).IP; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingEndpointAccessControlInternal)AccessControl).IP = value; }

        /// <summary>Internal Acessors for Created</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingEndpointPropertiesInternal.Created { get => this._created; set { {_created = value;} } }

        /// <summary>Internal Acessors for CrossSiteAccessPolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ICrossSiteAccessPolicies Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingEndpointPropertiesInternal.CrossSiteAccessPolicy { get => (this._crossSiteAccessPolicy = this._crossSiteAccessPolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.CrossSiteAccessPolicies()); set { {_crossSiteAccessPolicy = value;} } }

        /// <summary>Internal Acessors for FreeTrialEndTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingEndpointPropertiesInternal.FreeTrialEndTime { get => this._freeTrialEndTime; set { {_freeTrialEndTime = value;} } }

        /// <summary>Internal Acessors for HostName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingEndpointPropertiesInternal.HostName { get => this._hostName; set { {_hostName = value;} } }

        /// <summary>Internal Acessors for LastModified</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingEndpointPropertiesInternal.LastModified { get => this._lastModified; set { {_lastModified = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingEndpointPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for ResourceState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StreamingEndpointResourceState? Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingEndpointPropertiesInternal.ResourceState { get => this._resourceState; set { {_resourceState = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>The provisioning state of the streaming endpoint.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="ResourceState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StreamingEndpointResourceState? _resourceState;

        /// <summary>The resource state of the streaming endpoint.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StreamingEndpointResourceState? ResourceState { get => this._resourceState; }

        /// <summary>Backing field for <see cref="ScaleUnit" /> property.</summary>
        private int _scaleUnit;

        /// <summary>The number of scale units. Use the Scale operation to adjust this value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public int ScaleUnit { get => this._scaleUnit; set => this._scaleUnit = value; }

        /// <summary>Creates an new <see cref="StreamingEndpointProperties" /> instance.</summary>
        public StreamingEndpointProperties()
        {

        }
    }
    /// The streaming endpoint properties.
    public partial interface IStreamingEndpointProperties :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.IJsonSerializable
    {
        /// <summary>authentication key list</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"authentication key list",
        SerializedName = @"akamaiSignatureHeaderAuthenticationKeyList",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IAkamaiSignatureHeaderAuthenticationKey) })]
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IAkamaiSignatureHeaderAuthenticationKey[] AkamaiSignatureHeaderAuthenticationKeyList { get; set; }
        /// <summary>This feature is deprecated, do not set a value for this property.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This feature is deprecated, do not set a value for this property.",
        SerializedName = @"availabilitySetName",
        PossibleTypes = new [] { typeof(string) })]
        string AvailabilitySetName { get; set; }
        /// <summary>The CDN enabled flag.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The CDN enabled flag.",
        SerializedName = @"cdnEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? CdnEnabled { get; set; }
        /// <summary>The CDN profile name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The CDN profile name.",
        SerializedName = @"cdnProfile",
        PossibleTypes = new [] { typeof(string) })]
        string CdnProfile { get; set; }
        /// <summary>The CDN provider name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The CDN provider name.",
        SerializedName = @"cdnProvider",
        PossibleTypes = new [] { typeof(string) })]
        string CdnProvider { get; set; }
        /// <summary>The exact time the streaming endpoint was created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The exact time the streaming endpoint was created.",
        SerializedName = @"created",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? Created { get;  }
        /// <summary>The content of clientaccesspolicy.xml used by Silverlight.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The content of clientaccesspolicy.xml used by Silverlight.",
        SerializedName = @"clientAccessPolicy",
        PossibleTypes = new [] { typeof(string) })]
        string CrossSiteAccessPolicyClientAccessPolicy { get; set; }
        /// <summary>The content of crossdomain.xml used by Silverlight.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The content of crossdomain.xml used by Silverlight.",
        SerializedName = @"crossDomainPolicy",
        PossibleTypes = new [] { typeof(string) })]
        string CrossSiteAccessPolicyCrossDomainPolicy { get; set; }
        /// <summary>The custom host names of the streaming endpoint</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The custom host names of the streaming endpoint",
        SerializedName = @"customHostNames",
        PossibleTypes = new [] { typeof(string) })]
        string[] CustomHostName { get; set; }
        /// <summary>The streaming endpoint description.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The streaming endpoint description.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>The free trial expiration time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The free trial expiration time.",
        SerializedName = @"freeTrialEndTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? FreeTrialEndTime { get;  }
        /// <summary>The streaming endpoint host name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The streaming endpoint host name.",
        SerializedName = @"hostName",
        PossibleTypes = new [] { typeof(string) })]
        string HostName { get;  }
        /// <summary>The IP allow list.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The IP allow list.",
        SerializedName = @"allow",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IIPRange) })]
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IIPRange[] IPAllow { get; set; }
        /// <summary>The exact time the streaming endpoint was last modified.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The exact time the streaming endpoint was last modified.",
        SerializedName = @"lastModified",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastModified { get;  }
        /// <summary>Max cache age</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Max cache age",
        SerializedName = @"maxCacheAge",
        PossibleTypes = new [] { typeof(long) })]
        long? MaxCacheAge { get; set; }
        /// <summary>The provisioning state of the streaming endpoint.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state of the streaming endpoint.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>The resource state of the streaming endpoint.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The resource state of the streaming endpoint.",
        SerializedName = @"resourceState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StreamingEndpointResourceState) })]
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StreamingEndpointResourceState? ResourceState { get;  }
        /// <summary>The number of scale units. Use the Scale operation to adjust this value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The number of scale units. Use the Scale operation to adjust this value.",
        SerializedName = @"scaleUnits",
        PossibleTypes = new [] { typeof(int) })]
        int ScaleUnit { get; set; }

    }
    /// The streaming endpoint properties.
    internal partial interface IStreamingEndpointPropertiesInternal

    {
        /// <summary>The access control definition of the streaming endpoint.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStreamingEndpointAccessControl AccessControl { get; set; }
        /// <summary>The access control of Akamai</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IAkamaiAccessControl AccessControlAkamai { get; set; }
        /// <summary>The IP access control of the streaming endpoint.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IIPAccessControl AccessControlIP { get; set; }
        /// <summary>authentication key list</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IAkamaiSignatureHeaderAuthenticationKey[] AkamaiSignatureHeaderAuthenticationKeyList { get; set; }
        /// <summary>This feature is deprecated, do not set a value for this property.</summary>
        string AvailabilitySetName { get; set; }
        /// <summary>The CDN enabled flag.</summary>
        bool? CdnEnabled { get; set; }
        /// <summary>The CDN profile name.</summary>
        string CdnProfile { get; set; }
        /// <summary>The CDN provider name.</summary>
        string CdnProvider { get; set; }
        /// <summary>The exact time the streaming endpoint was created.</summary>
        global::System.DateTime? Created { get; set; }
        /// <summary>The streaming endpoint access policies.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ICrossSiteAccessPolicies CrossSiteAccessPolicy { get; set; }
        /// <summary>The content of clientaccesspolicy.xml used by Silverlight.</summary>
        string CrossSiteAccessPolicyClientAccessPolicy { get; set; }
        /// <summary>The content of crossdomain.xml used by Silverlight.</summary>
        string CrossSiteAccessPolicyCrossDomainPolicy { get; set; }
        /// <summary>The custom host names of the streaming endpoint</summary>
        string[] CustomHostName { get; set; }
        /// <summary>The streaming endpoint description.</summary>
        string Description { get; set; }
        /// <summary>The free trial expiration time.</summary>
        global::System.DateTime? FreeTrialEndTime { get; set; }
        /// <summary>The streaming endpoint host name.</summary>
        string HostName { get; set; }
        /// <summary>The IP allow list.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IIPRange[] IPAllow { get; set; }
        /// <summary>The exact time the streaming endpoint was last modified.</summary>
        global::System.DateTime? LastModified { get; set; }
        /// <summary>Max cache age</summary>
        long? MaxCacheAge { get; set; }
        /// <summary>The provisioning state of the streaming endpoint.</summary>
        string ProvisioningState { get; set; }
        /// <summary>The resource state of the streaming endpoint.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StreamingEndpointResourceState? ResourceState { get; set; }
        /// <summary>The number of scale units. Use the Scale operation to adjust this value.</summary>
        int ScaleUnit { get; set; }

    }
}