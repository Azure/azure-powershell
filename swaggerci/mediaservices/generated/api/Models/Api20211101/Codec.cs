// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Extensions;

    /// <summary>Describes the basic properties of all codecs.</summary>
    public partial class Codec :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ICodec,
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.ICodecInternal
    {

        /// <summary>Backing field for <see cref="Label" /> property.</summary>
        private string _label;

        /// <summary>
        /// An optional label for the codec. The label can be used to control muxing behavior.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public string Label { get => this._label; set => this._label = value; }

        /// <summary>Backing field for <see cref="OdataType" /> property.</summary>
        private string _odataType;

        /// <summary>The discriminator for derived types.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public string OdataType { get => this._odataType; set => this._odataType = value; }

        /// <summary>Creates an new <see cref="Codec" /> instance.</summary>
        public Codec()
        {

        }
    }
    /// Describes the basic properties of all codecs.
    public partial interface ICodec :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.IJsonSerializable
    {
        /// <summary>
        /// An optional label for the codec. The label can be used to control muxing behavior.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"An optional label for the codec. The label can be used to control muxing behavior.",
        SerializedName = @"label",
        PossibleTypes = new [] { typeof(string) })]
        string Label { get; set; }
        /// <summary>The discriminator for derived types.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The discriminator for derived types.",
        SerializedName = @"@odata.type",
        PossibleTypes = new [] { typeof(string) })]
        string OdataType { get; set; }

    }
    /// Describes the basic properties of all codecs.
    internal partial interface ICodecInternal

    {
        /// <summary>
        /// An optional label for the codec. The label can be used to control muxing behavior.
        /// </summary>
        string Label { get; set; }
        /// <summary>The discriminator for derived types.</summary>
        string OdataType { get; set; }

    }
}