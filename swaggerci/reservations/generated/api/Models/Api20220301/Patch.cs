// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Runtime.Extensions;

    public partial class Patch :
        Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatch,
        Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchInternal
    {

        /// <summary>
        /// List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.PropertyOrigin.Inlined)]
        public string[] AppliedScope { get => ((Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchPropertiesInternal)Property).AppliedScope; set => ((Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchPropertiesInternal)Property).AppliedScope = value ?? null /* arrayOf */; }

        /// <summary>Type of the Applied Scope.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Support.AppliedScopeType? AppliedScopeType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchPropertiesInternal)Property).AppliedScopeType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchPropertiesInternal)Property).AppliedScopeType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Support.AppliedScopeType)""); }

        /// <summary>Represent the billing plans.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Support.ReservationBillingPlan? BillingPlan { get => ((Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchPropertiesInternal)Property).BillingPlan; set => ((Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchPropertiesInternal)Property).BillingPlan = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Support.ReservationBillingPlan)""); }

        /// <summary>Subscription that will be charged for purchasing Reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.PropertyOrigin.Inlined)]
        public string BillingScopeId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchPropertiesInternal)Property).BillingScopeId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchPropertiesInternal)Property).BillingScopeId = value ?? null; }

        /// <summary>Friendly name of the Reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.PropertyOrigin.Inlined)]
        public string DisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchPropertiesInternal)Property).DisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchPropertiesInternal)Property).DisplayName = value ?? null; }

        /// <summary>
        /// Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines
        /// reserved resource type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Support.InstanceFlexibility? InstanceFlexibility { get => ((Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchPropertiesInternal)Property).InstanceFlexibility; set => ((Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchPropertiesInternal)Property).InstanceFlexibility = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Support.InstanceFlexibility)""); }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchProperties Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.PatchProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for PurchaseProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPurchaseRequestProperties Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchInternal.PurchaseProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchPropertiesInternal)Property).PurchaseProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchPropertiesInternal)Property).PurchaseProperty = value; }

        /// <summary>Internal Acessors for PurchasePropertySku</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.ISkuName Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchInternal.PurchasePropertySku { get => ((Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchPropertiesInternal)Property).PurchasePropertySku; set => ((Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchPropertiesInternal)Property).PurchasePropertySku = value; }

        /// <summary>Internal Acessors for RenewProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchPropertiesRenewProperties Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchInternal.RenewProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchPropertiesInternal)Property).RenewProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchPropertiesInternal)Property).RenewProperty = value; }

        /// <summary>Internal Acessors for RenewPropertyPurchaseProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPurchaseRequest Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchInternal.RenewPropertyPurchaseProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchPropertiesInternal)Property).RenewPropertyPurchaseProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchPropertiesInternal)Property).RenewPropertyPurchaseProperty = value; }

        /// <summary>Internal Acessors for ReservedResourceProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPurchaseRequestPropertiesReservedResourceProperties Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchInternal.ReservedResourceProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchPropertiesInternal)Property).ReservedResourceProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchPropertiesInternal)Property).ReservedResourceProperty = value; }

        /// <summary>Name of the Reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.PropertyOrigin.Inlined)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchPropertiesInternal)Property).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchPropertiesInternal)Property).Name = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchProperties _property;

        [Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.PatchProperties()); set => this._property = value; }

        /// <summary>The Azure Region where the reserved resource lives.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.PropertyOrigin.Inlined)]
        public string PurchasePropertyLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchPropertiesInternal)Property).PurchasePropertyLocation; set => ((Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchPropertiesInternal)Property).PurchasePropertyLocation = value ?? null; }

        /// <summary>Quantity of the SKUs that are part of the Reservation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.PropertyOrigin.Inlined)]
        public int? Quantity { get => ((Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchPropertiesInternal)Property).Quantity; set => ((Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchPropertiesInternal)Property).Quantity = value ?? default(int); }

        /// <summary>
        /// Setting this to true will automatically purchase a new reservation on the expiration date time.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.PropertyOrigin.Inlined)]
        public bool? Renew { get => ((Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchPropertiesInternal)Property).Renew; set => ((Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchPropertiesInternal)Property).Renew = value ?? default(bool); }

        /// <summary>
        /// List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.PropertyOrigin.Inlined)]
        public string[] RenewPropertiesPurchasePropertiesAppliedScope { get => ((Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchPropertiesInternal)Property).RenewPropertiesPurchasePropertiesAppliedScope; set => ((Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchPropertiesInternal)Property).RenewPropertiesPurchasePropertiesAppliedScope = value ?? null /* arrayOf */; }

        /// <summary>Type of the Applied Scope.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Support.AppliedScopeType? RenewPropertiesPurchasePropertiesAppliedScopeType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchPropertiesInternal)Property).RenewPropertiesPurchasePropertiesAppliedScopeType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchPropertiesInternal)Property).RenewPropertiesPurchasePropertiesAppliedScopeType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Support.AppliedScopeType)""); }

        /// <summary>
        /// Setting this to true will automatically purchase a new reservation on the expiration date time.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.PropertyOrigin.Inlined)]
        public bool? RenewPropertiesPurchasePropertiesRenew { get => ((Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchPropertiesInternal)Property).RenewPropertiesPurchasePropertiesRenew; set => ((Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchPropertiesInternal)Property).RenewPropertiesPurchasePropertiesRenew = value ?? default(bool); }

        /// <summary>
        /// Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines
        /// reserved resource type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Support.InstanceFlexibility? ReservedResourcePropertyInstanceFlexibility { get => ((Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchPropertiesInternal)Property).ReservedResourcePropertyInstanceFlexibility; set => ((Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchPropertiesInternal)Property).ReservedResourcePropertyInstanceFlexibility = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Support.InstanceFlexibility)""); }

        /// <summary>The type of the resource that is being reserved.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Support.ReservedResourceType? ReservedResourceType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchPropertiesInternal)Property).ReservedResourceType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchPropertiesInternal)Property).ReservedResourceType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Support.ReservedResourceType)""); }

        [Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.PropertyOrigin.Inlined)]
        public string SkuName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchPropertiesInternal)Property).SkuName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchPropertiesInternal)Property).SkuName = value ?? null; }

        /// <summary>Represent the term of Reservation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Support.ReservationTerm? Term { get => ((Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchPropertiesInternal)Property).Term; set => ((Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchPropertiesInternal)Property).Term = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Support.ReservationTerm)""); }

        /// <summary>Creates an new <see cref="Patch" /> instance.</summary>
        public Patch()
        {

        }
    }
    public partial interface IPatch :
        Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Runtime.IJsonSerializable
    {
        /// <summary>
        /// List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.",
        SerializedName = @"appliedScopes",
        PossibleTypes = new [] { typeof(string) })]
        string[] AppliedScope { get; set; }
        /// <summary>Type of the Applied Scope.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of the Applied Scope.",
        SerializedName = @"appliedScopeType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Support.AppliedScopeType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Support.AppliedScopeType? AppliedScopeType { get; set; }
        /// <summary>Represent the billing plans.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represent the billing plans.",
        SerializedName = @"billingPlan",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Support.ReservationBillingPlan) })]
        Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Support.ReservationBillingPlan? BillingPlan { get; set; }
        /// <summary>Subscription that will be charged for purchasing Reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Subscription that will be charged for purchasing Reservation",
        SerializedName = @"billingScopeId",
        PossibleTypes = new [] { typeof(string) })]
        string BillingScopeId { get; set; }
        /// <summary>Friendly name of the Reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Friendly name of the Reservation",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>
        /// Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines
        /// reserved resource type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines reserved resource type.",
        SerializedName = @"instanceFlexibility",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Support.InstanceFlexibility) })]
        Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Support.InstanceFlexibility? InstanceFlexibility { get; set; }
        /// <summary>Name of the Reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the Reservation",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>The Azure Region where the reserved resource lives.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Azure Region where the reserved resource lives.",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string PurchasePropertyLocation { get; set; }
        /// <summary>Quantity of the SKUs that are part of the Reservation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Quantity of the SKUs that are part of the Reservation.",
        SerializedName = @"quantity",
        PossibleTypes = new [] { typeof(int) })]
        int? Quantity { get; set; }
        /// <summary>
        /// Setting this to true will automatically purchase a new reservation on the expiration date time.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Setting this to true will automatically purchase a new reservation on the expiration date time.",
        SerializedName = @"renew",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Renew { get; set; }
        /// <summary>
        /// List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.",
        SerializedName = @"appliedScopes",
        PossibleTypes = new [] { typeof(string) })]
        string[] RenewPropertiesPurchasePropertiesAppliedScope { get; set; }
        /// <summary>Type of the Applied Scope.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of the Applied Scope.",
        SerializedName = @"appliedScopeType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Support.AppliedScopeType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Support.AppliedScopeType? RenewPropertiesPurchasePropertiesAppliedScopeType { get; set; }
        /// <summary>
        /// Setting this to true will automatically purchase a new reservation on the expiration date time.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Setting this to true will automatically purchase a new reservation on the expiration date time.",
        SerializedName = @"renew",
        PossibleTypes = new [] { typeof(bool) })]
        bool? RenewPropertiesPurchasePropertiesRenew { get; set; }
        /// <summary>
        /// Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines
        /// reserved resource type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines reserved resource type.",
        SerializedName = @"instanceFlexibility",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Support.InstanceFlexibility) })]
        Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Support.InstanceFlexibility? ReservedResourcePropertyInstanceFlexibility { get; set; }
        /// <summary>The type of the resource that is being reserved.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of the resource that is being reserved.",
        SerializedName = @"reservedResourceType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Support.ReservedResourceType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Support.ReservedResourceType? ReservedResourceType { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string SkuName { get; set; }
        /// <summary>Represent the term of Reservation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represent the term of Reservation.",
        SerializedName = @"term",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Support.ReservationTerm) })]
        Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Support.ReservationTerm? Term { get; set; }

    }
    internal partial interface IPatchInternal

    {
        /// <summary>
        /// List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.
        /// </summary>
        string[] AppliedScope { get; set; }
        /// <summary>Type of the Applied Scope.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Support.AppliedScopeType? AppliedScopeType { get; set; }
        /// <summary>Represent the billing plans.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Support.ReservationBillingPlan? BillingPlan { get; set; }
        /// <summary>Subscription that will be charged for purchasing Reservation</summary>
        string BillingScopeId { get; set; }
        /// <summary>Friendly name of the Reservation</summary>
        string DisplayName { get; set; }
        /// <summary>
        /// Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines
        /// reserved resource type.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Support.InstanceFlexibility? InstanceFlexibility { get; set; }
        /// <summary>Name of the Reservation</summary>
        string Name { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchProperties Property { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPurchaseRequestProperties PurchaseProperty { get; set; }
        /// <summary>The Azure Region where the reserved resource lives.</summary>
        string PurchasePropertyLocation { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.ISkuName PurchasePropertySku { get; set; }
        /// <summary>Quantity of the SKUs that are part of the Reservation.</summary>
        int? Quantity { get; set; }
        /// <summary>
        /// Setting this to true will automatically purchase a new reservation on the expiration date time.
        /// </summary>
        bool? Renew { get; set; }
        /// <summary>
        /// List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.
        /// </summary>
        string[] RenewPropertiesPurchasePropertiesAppliedScope { get; set; }
        /// <summary>Type of the Applied Scope.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Support.AppliedScopeType? RenewPropertiesPurchasePropertiesAppliedScopeType { get; set; }
        /// <summary>
        /// Setting this to true will automatically purchase a new reservation on the expiration date time.
        /// </summary>
        bool? RenewPropertiesPurchasePropertiesRenew { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPatchPropertiesRenewProperties RenewProperty { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPurchaseRequest RenewPropertyPurchaseProperty { get; set; }
        /// <summary>
        /// Properties specific to each reserved resource type. Not required if not applicable.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Models.Api20220301.IPurchaseRequestPropertiesReservedResourceProperties ReservedResourceProperty { get; set; }
        /// <summary>
        /// Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines
        /// reserved resource type.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Support.InstanceFlexibility? ReservedResourcePropertyInstanceFlexibility { get; set; }
        /// <summary>The type of the resource that is being reserved.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Support.ReservedResourceType? ReservedResourceType { get; set; }

        string SkuName { get; set; }
        /// <summary>Represent the term of Reservation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ReservationApi.Support.ReservationTerm? Term { get; set; }

    }
}