// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Extensions;

    /// <summary>Represents a resource name availability.</summary>
    public partial class NameAvailability :
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.INameAvailability,
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.INameAvailabilityInternal,
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api30.ICheckNameAvailabilityResponse"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api30.ICheckNameAvailabilityResponse __checkNameAvailabilityResponse = new Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api30.CheckNameAvailabilityResponse();

        /// <summary>Detailed reason why the given name is available.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inherited)]
        public string Message { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api30.ICheckNameAvailabilityResponseInternal)__checkNameAvailabilityResponse).Message; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api30.ICheckNameAvailabilityResponseInternal)__checkNameAvailabilityResponse).Message = value ?? null; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.INameAvailabilityInternal.Name { get => this._name; set { {_name = value;} } }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.INameAvailabilityInternal.Type { get => this._type; set { {_type = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>name of the PostgreSQL server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Owned)]
        public string Name { get => this._name; }

        /// <summary>Indicates if the resource name is available.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inherited)]
        public bool? NameAvailable { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api30.ICheckNameAvailabilityResponseInternal)__checkNameAvailabilityResponse).NameAvailable; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api30.ICheckNameAvailabilityResponseInternal)__checkNameAvailabilityResponse).NameAvailable = value ?? default(bool); }

        /// <summary>The reason why the given name is not available.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.CheckNameAvailabilityReason? Reason { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api30.ICheckNameAvailabilityResponseInternal)__checkNameAvailabilityResponse).Reason; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api30.ICheckNameAvailabilityResponseInternal)__checkNameAvailabilityResponse).Reason = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.CheckNameAvailabilityReason)""); }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>type of the server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Owned)]
        public string Type { get => this._type; }

        /// <summary>Creates an new <see cref="NameAvailability" /> instance.</summary>
        public NameAvailability()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__checkNameAvailabilityResponse), __checkNameAvailabilityResponse);
            await eventListener.AssertObjectIsValid(nameof(__checkNameAvailabilityResponse), __checkNameAvailabilityResponse);
        }
    }
    /// Represents a resource name availability.
    public partial interface INameAvailability :
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api30.ICheckNameAvailabilityResponse
    {
        /// <summary>name of the PostgreSQL server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"name of the PostgreSQL server.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get;  }
        /// <summary>type of the server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"type of the server",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get;  }

    }
    /// Represents a resource name availability.
    internal partial interface INameAvailabilityInternal :
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api30.ICheckNameAvailabilityResponseInternal
    {
        /// <summary>name of the PostgreSQL server.</summary>
        string Name { get; set; }
        /// <summary>type of the server</summary>
        string Type { get; set; }

    }
}