// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Extensions;

    /// <summary>Represents a server to be updated.</summary>
    public partial class ServerForUpdate :
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerForUpdate,
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerForUpdateInternal
    {

        /// <summary>The password of the administrator login.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public System.Security.SecureString AdministratorLoginPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).AdministratorLoginPassword; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).AdministratorLoginPassword = value ?? null; }

        /// <summary>If Enabled, Azure Active Directory authentication is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ActiveDirectoryAuthEnum? AuthConfigActiveDirectoryAuth { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).AuthConfigActiveDirectoryAuth; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).AuthConfigActiveDirectoryAuth = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ActiveDirectoryAuthEnum)""); }

        /// <summary>If Enabled, Password authentication is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.PasswordAuthEnum? AuthConfigPasswordAuth { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).AuthConfigPasswordAuth; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).AuthConfigPasswordAuth = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.PasswordAuthEnum)""); }

        /// <summary>Tenant id of the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public string AuthConfigTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).AuthConfigTenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).AuthConfigTenantId = value ?? null; }

        /// <summary>The earliest restore point time (ISO8601 format) for server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public global::System.DateTime? BackupEarliestRestoreDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).BackupEarliestRestoreDate; }

        /// <summary>A value indicating whether Geo-Redundant backup is enabled on the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.GeoRedundantBackupEnum? BackupGeoRedundantBackup { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).BackupGeoRedundantBackup; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).BackupGeoRedundantBackup = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.GeoRedundantBackupEnum)""); }

        /// <summary>Backup retention days for the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public int? BackupRetentionDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).BackupRetentionDay; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).BackupRetentionDay = value ?? default(int); }

        /// <summary>The mode to update a new PostgreSQL server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.CreateModeForUpdate? CreateMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).CreateMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).CreateMode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.CreateModeForUpdate)""); }

        /// <summary>URI for the key for data encryption for primary server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public string DataEncryptionPrimaryKeyUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).DataEncryptionPrimaryKeyUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).DataEncryptionPrimaryKeyUri = value ?? null; }

        /// <summary>
        /// Resource Id for the User assigned identity to be used for data encryption for primary server.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public string DataEncryptionPrimaryUserAssignedIdentityId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).DataEncryptionPrimaryUserAssignedIdentityId; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).DataEncryptionPrimaryUserAssignedIdentityId = value ?? null; }

        /// <summary>Data encryption type to depict if it is System Managed vs Azure Key vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ArmServerKeyType? DataEncryptionType { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).DataEncryptionType; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).DataEncryptionType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ArmServerKeyType)""); }

        /// <summary>The HA mode for the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.HighAvailabilityMode? HighAvailabilityMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).HighAvailabilityMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).HighAvailabilityMode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.HighAvailabilityMode)""); }

        /// <summary>availability zone information of the standby.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public string HighAvailabilityStandbyAvailabilityZone { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).HighAvailabilityStandbyAvailabilityZone; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).HighAvailabilityStandbyAvailabilityZone = value ?? null; }

        /// <summary>A state of a HA server that is visible to user.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ServerHaState? HighAvailabilityState { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).HighAvailabilityState; }

        /// <summary>Backing field for <see cref="Identity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IUserAssignedIdentity _identity;

        /// <summary>Describes the identity of the application.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IUserAssignedIdentity Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.UserAssignedIdentity()); set => this._identity = value; }

        /// <summary>
        /// the types of identities associated with this resource; currently restricted to 'SystemAssigned and UserAssigned'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.IdentityType? IdentityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IUserAssignedIdentityInternal)Identity).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IUserAssignedIdentityInternal)Identity).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.IdentityType)""); }

        /// <summary>represents user assigned identities map.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IUserAssignedIdentityMap IdentityUserAssignedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IUserAssignedIdentityInternal)Identity).UserAssignedIdentities; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IUserAssignedIdentityInternal)Identity).UserAssignedIdentities = value ?? null /* model class */; }

        /// <summary>indicates whether custom window is enabled or disabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public string MaintenanceWindowCustomWindow { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).MaintenanceWindowCustomWindow; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).MaintenanceWindowCustomWindow = value ?? null; }

        /// <summary>day of week for maintenance window</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public int? MaintenanceWindowDayOfWeek { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).MaintenanceWindowDayOfWeek; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).MaintenanceWindowDayOfWeek = value ?? default(int); }

        /// <summary>start hour for maintenance window</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public int? MaintenanceWindowStartHour { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).MaintenanceWindowStartHour; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).MaintenanceWindowStartHour = value ?? default(int); }

        /// <summary>start minute for maintenance window</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public int? MaintenanceWindowStartMinute { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).MaintenanceWindowStartMinute; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).MaintenanceWindowStartMinute = value ?? default(int); }

        /// <summary>Internal Acessors for AuthConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IAuthConfig Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerForUpdateInternal.AuthConfig { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).AuthConfig; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).AuthConfig = value; }

        /// <summary>Internal Acessors for Backup</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IBackup Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerForUpdateInternal.Backup { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).Backup; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).Backup = value; }

        /// <summary>Internal Acessors for BackupEarliestRestoreDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerForUpdateInternal.BackupEarliestRestoreDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).BackupEarliestRestoreDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).BackupEarliestRestoreDate = value; }

        /// <summary>Internal Acessors for DataEncryption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IDataEncryption Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerForUpdateInternal.DataEncryption { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).DataEncryption; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).DataEncryption = value; }

        /// <summary>Internal Acessors for HighAvailability</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IHighAvailability Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerForUpdateInternal.HighAvailability { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).HighAvailability; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).HighAvailability = value; }

        /// <summary>Internal Acessors for HighAvailabilityState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ServerHaState? Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerForUpdateInternal.HighAvailabilityState { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).HighAvailabilityState; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).HighAvailabilityState = value; }

        /// <summary>Internal Acessors for Identity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IUserAssignedIdentity Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerForUpdateInternal.Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.UserAssignedIdentity()); set { {_identity = value;} } }

        /// <summary>Internal Acessors for MaintenanceWindow</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IMaintenanceWindow Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerForUpdateInternal.MaintenanceWindow { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).MaintenanceWindow; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).MaintenanceWindow = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdate Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerForUpdateInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.ServerPropertiesForUpdate()); set { {_property = value;} } }

        /// <summary>Internal Acessors for Sku</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.ISku Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerForUpdateInternal.Sku { get => (this._sku = this._sku ?? new Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.Sku()); set { {_sku = value;} } }

        /// <summary>Internal Acessors for Storage</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IStorage Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerForUpdateInternal.Storage { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).Storage; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).Storage = value; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdate _property;

        /// <summary>Properties of the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdate Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.ServerPropertiesForUpdate()); set => this._property = value; }

        /// <summary>Replication role of the server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReplicationRole? ReplicationRole { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).ReplicationRole; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).ReplicationRole = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReplicationRole)""); }

        /// <summary>Backing field for <see cref="Sku" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.ISku _sku;

        /// <summary>The SKU (pricing tier) of the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.ISku Sku { get => (this._sku = this._sku ?? new Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.Sku()); set => this._sku = value; }

        /// <summary>The name of the sku, typically, tier + family + cores, e.g. Standard_D4s_v3.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public string SkuName { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.ISkuInternal)Sku).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.ISkuInternal)Sku).Name = value ?? null; }

        /// <summary>The tier of the particular SKU, e.g. Burstable.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.SkuTier? SkuTier { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.ISkuInternal)Sku).Tier; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.ISkuInternal)Sku).Tier = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.SkuTier)""); }

        /// <summary>Max storage allowed for a server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public int? StorageSizeGb { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).StorageSizeGb; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).StorageSizeGb = value ?? default(int); }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerForUpdateTags _tag;

        /// <summary>Application-specific metadata in the form of key-value pairs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerForUpdateTags Tag { get => (this._tag = this._tag ?? new Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.ServerForUpdateTags()); set => this._tag = value; }

        /// <summary>PostgreSQL Server version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ServerVersion? Version { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).Version; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdateInternal)Property).Version = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ServerVersion)""); }

        /// <summary>Creates an new <see cref="ServerForUpdate" /> instance.</summary>
        public ServerForUpdate()
        {

        }
    }
    /// Represents a server to be updated.
    public partial interface IServerForUpdate :
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.IJsonSerializable
    {
        /// <summary>The password of the administrator login.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The password of the administrator login.",
        SerializedName = @"administratorLoginPassword",
        PossibleTypes = new [] { typeof(System.Security.SecureString) })]
        System.Security.SecureString AdministratorLoginPassword { get; set; }
        /// <summary>If Enabled, Azure Active Directory authentication is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If Enabled, Azure Active Directory authentication is enabled.",
        SerializedName = @"activeDirectoryAuth",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ActiveDirectoryAuthEnum) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ActiveDirectoryAuthEnum? AuthConfigActiveDirectoryAuth { get; set; }
        /// <summary>If Enabled, Password authentication is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If Enabled, Password authentication is enabled.",
        SerializedName = @"passwordAuth",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.PasswordAuthEnum) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.PasswordAuthEnum? AuthConfigPasswordAuth { get; set; }
        /// <summary>Tenant id of the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Tenant id of the server.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string AuthConfigTenantId { get; set; }
        /// <summary>The earliest restore point time (ISO8601 format) for server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The earliest restore point time (ISO8601 format) for server.",
        SerializedName = @"earliestRestoreDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? BackupEarliestRestoreDate { get;  }
        /// <summary>A value indicating whether Geo-Redundant backup is enabled on the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A value indicating whether Geo-Redundant backup is enabled on the server.",
        SerializedName = @"geoRedundantBackup",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.GeoRedundantBackupEnum) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.GeoRedundantBackupEnum? BackupGeoRedundantBackup { get; set; }
        /// <summary>Backup retention days for the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Backup retention days for the server.",
        SerializedName = @"backupRetentionDays",
        PossibleTypes = new [] { typeof(int) })]
        int? BackupRetentionDay { get; set; }
        /// <summary>The mode to update a new PostgreSQL server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The mode to update a new PostgreSQL server.",
        SerializedName = @"createMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.CreateModeForUpdate) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.CreateModeForUpdate? CreateMode { get; set; }
        /// <summary>URI for the key for data encryption for primary server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"URI for the key for data encryption for primary server.",
        SerializedName = @"primaryKeyURI",
        PossibleTypes = new [] { typeof(string) })]
        string DataEncryptionPrimaryKeyUri { get; set; }
        /// <summary>
        /// Resource Id for the User assigned identity to be used for data encryption for primary server.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource Id for the User assigned identity to be used for data encryption for primary server.",
        SerializedName = @"primaryUserAssignedIdentityId",
        PossibleTypes = new [] { typeof(string) })]
        string DataEncryptionPrimaryUserAssignedIdentityId { get; set; }
        /// <summary>Data encryption type to depict if it is System Managed vs Azure Key vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Data encryption type to depict if it is System Managed vs Azure Key vault.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ArmServerKeyType) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ArmServerKeyType? DataEncryptionType { get; set; }
        /// <summary>The HA mode for the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The HA mode for the server.",
        SerializedName = @"mode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.HighAvailabilityMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.HighAvailabilityMode? HighAvailabilityMode { get; set; }
        /// <summary>availability zone information of the standby.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"availability zone information of the standby.",
        SerializedName = @"standbyAvailabilityZone",
        PossibleTypes = new [] { typeof(string) })]
        string HighAvailabilityStandbyAvailabilityZone { get; set; }
        /// <summary>A state of a HA server that is visible to user.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"A state of a HA server that is visible to user.",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ServerHaState) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ServerHaState? HighAvailabilityState { get;  }
        /// <summary>
        /// the types of identities associated with this resource; currently restricted to 'SystemAssigned and UserAssigned'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"the types of identities associated with this resource; currently restricted to 'SystemAssigned and UserAssigned'",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.IdentityType) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.IdentityType? IdentityType { get; set; }
        /// <summary>represents user assigned identities map.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"represents user assigned identities map.",
        SerializedName = @"userAssignedIdentities",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IUserAssignedIdentityMap) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IUserAssignedIdentityMap IdentityUserAssignedIdentity { get; set; }
        /// <summary>indicates whether custom window is enabled or disabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"indicates whether custom window is enabled or disabled",
        SerializedName = @"customWindow",
        PossibleTypes = new [] { typeof(string) })]
        string MaintenanceWindowCustomWindow { get; set; }
        /// <summary>day of week for maintenance window</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"day of week for maintenance window",
        SerializedName = @"dayOfWeek",
        PossibleTypes = new [] { typeof(int) })]
        int? MaintenanceWindowDayOfWeek { get; set; }
        /// <summary>start hour for maintenance window</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"start hour for maintenance window",
        SerializedName = @"startHour",
        PossibleTypes = new [] { typeof(int) })]
        int? MaintenanceWindowStartHour { get; set; }
        /// <summary>start minute for maintenance window</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"start minute for maintenance window",
        SerializedName = @"startMinute",
        PossibleTypes = new [] { typeof(int) })]
        int? MaintenanceWindowStartMinute { get; set; }
        /// <summary>Replication role of the server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Replication role of the server",
        SerializedName = @"replicationRole",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReplicationRole) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReplicationRole? ReplicationRole { get; set; }
        /// <summary>The name of the sku, typically, tier + family + cores, e.g. Standard_D4s_v3.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the sku, typically, tier + family + cores, e.g. Standard_D4s_v3.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string SkuName { get; set; }
        /// <summary>The tier of the particular SKU, e.g. Burstable.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The tier of the particular SKU, e.g. Burstable.",
        SerializedName = @"tier",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.SkuTier) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.SkuTier? SkuTier { get; set; }
        /// <summary>Max storage allowed for a server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Max storage allowed for a server.",
        SerializedName = @"storageSizeGB",
        PossibleTypes = new [] { typeof(int) })]
        int? StorageSizeGb { get; set; }
        /// <summary>Application-specific metadata in the form of key-value pairs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Application-specific metadata in the form of key-value pairs.",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerForUpdateTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerForUpdateTags Tag { get; set; }
        /// <summary>PostgreSQL Server version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"PostgreSQL Server version.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ServerVersion) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ServerVersion? Version { get; set; }

    }
    /// Represents a server to be updated.
    internal partial interface IServerForUpdateInternal

    {
        /// <summary>The password of the administrator login.</summary>
        System.Security.SecureString AdministratorLoginPassword { get; set; }
        /// <summary>AuthConfig properties of a server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IAuthConfig AuthConfig { get; set; }
        /// <summary>If Enabled, Azure Active Directory authentication is enabled.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ActiveDirectoryAuthEnum? AuthConfigActiveDirectoryAuth { get; set; }
        /// <summary>If Enabled, Password authentication is enabled.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.PasswordAuthEnum? AuthConfigPasswordAuth { get; set; }
        /// <summary>Tenant id of the server.</summary>
        string AuthConfigTenantId { get; set; }
        /// <summary>Backup properties of a server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IBackup Backup { get; set; }
        /// <summary>The earliest restore point time (ISO8601 format) for server.</summary>
        global::System.DateTime? BackupEarliestRestoreDate { get; set; }
        /// <summary>A value indicating whether Geo-Redundant backup is enabled on the server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.GeoRedundantBackupEnum? BackupGeoRedundantBackup { get; set; }
        /// <summary>Backup retention days for the server.</summary>
        int? BackupRetentionDay { get; set; }
        /// <summary>The mode to update a new PostgreSQL server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.CreateModeForUpdate? CreateMode { get; set; }
        /// <summary>Data encryption properties of a server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IDataEncryption DataEncryption { get; set; }
        /// <summary>URI for the key for data encryption for primary server.</summary>
        string DataEncryptionPrimaryKeyUri { get; set; }
        /// <summary>
        /// Resource Id for the User assigned identity to be used for data encryption for primary server.
        /// </summary>
        string DataEncryptionPrimaryUserAssignedIdentityId { get; set; }
        /// <summary>Data encryption type to depict if it is System Managed vs Azure Key vault.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ArmServerKeyType? DataEncryptionType { get; set; }
        /// <summary>High availability properties of a server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IHighAvailability HighAvailability { get; set; }
        /// <summary>The HA mode for the server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.HighAvailabilityMode? HighAvailabilityMode { get; set; }
        /// <summary>availability zone information of the standby.</summary>
        string HighAvailabilityStandbyAvailabilityZone { get; set; }
        /// <summary>A state of a HA server that is visible to user.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ServerHaState? HighAvailabilityState { get; set; }
        /// <summary>Describes the identity of the application.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IUserAssignedIdentity Identity { get; set; }
        /// <summary>
        /// the types of identities associated with this resource; currently restricted to 'SystemAssigned and UserAssigned'
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.IdentityType? IdentityType { get; set; }
        /// <summary>represents user assigned identities map.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IUserAssignedIdentityMap IdentityUserAssignedIdentity { get; set; }
        /// <summary>Maintenance window properties of a server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IMaintenanceWindow MaintenanceWindow { get; set; }
        /// <summary>indicates whether custom window is enabled or disabled</summary>
        string MaintenanceWindowCustomWindow { get; set; }
        /// <summary>day of week for maintenance window</summary>
        int? MaintenanceWindowDayOfWeek { get; set; }
        /// <summary>start hour for maintenance window</summary>
        int? MaintenanceWindowStartHour { get; set; }
        /// <summary>start minute for maintenance window</summary>
        int? MaintenanceWindowStartMinute { get; set; }
        /// <summary>Properties of the server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerPropertiesForUpdate Property { get; set; }
        /// <summary>Replication role of the server</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReplicationRole? ReplicationRole { get; set; }
        /// <summary>The SKU (pricing tier) of the server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.ISku Sku { get; set; }
        /// <summary>The name of the sku, typically, tier + family + cores, e.g. Standard_D4s_v3.</summary>
        string SkuName { get; set; }
        /// <summary>The tier of the particular SKU, e.g. Burstable.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.SkuTier? SkuTier { get; set; }
        /// <summary>Storage properties of a server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IStorage Storage { get; set; }
        /// <summary>Max storage allowed for a server.</summary>
        int? StorageSizeGb { get; set; }
        /// <summary>Application-specific metadata in the form of key-value pairs.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20221201.IServerForUpdateTags Tag { get; set; }
        /// <summary>PostgreSQL Server version.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ServerVersion? Version { get; set; }

    }
}