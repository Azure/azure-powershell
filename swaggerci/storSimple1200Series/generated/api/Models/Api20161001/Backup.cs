// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Extensions;

    /// <summary>The backup.</summary>
    public partial class Backup :
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBackup,
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBackupInternal,
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBaseModel"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBaseModel __baseModel = new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.BaseModel();

        /// <summary>The time when the backup was created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Inlined)]
        public global::System.DateTime? CreatedTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBackupPropertiesInternal)Property).CreatedTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBackupPropertiesInternal)Property).CreatedTime = value ?? default(global::System.DateTime); }

        /// <summary>The Device Identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Inlined)]
        public string DeviceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBackupPropertiesInternal)Property).DeviceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBackupPropertiesInternal)Property).DeviceId = value ; }

        /// <summary>The backup elements.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBackupElement[] Element { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBackupPropertiesInternal)Property).Element; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBackupPropertiesInternal)Property).Element = value ; }

        /// <summary>The time when the backup will expire.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Inlined)]
        public global::System.DateTime? ExpirationTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBackupPropertiesInternal)Property).ExpirationTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBackupPropertiesInternal)Property).ExpirationTime = value ?? default(global::System.DateTime); }

        /// <summary>The identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBaseModelInternal)__baseModel).Id; }

        /// <summary>Indicates how the backup was initiated "Manual | Scheduled".</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.InitiatedBy InitiatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBackupPropertiesInternal)Property).InitiatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBackupPropertiesInternal)Property).InitiatedBy = value ; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBackupProperties Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBackupInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.BackupProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBaseModelInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBaseModelInternal)__baseModel).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBaseModelInternal)__baseModel).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBaseModelInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBaseModelInternal)__baseModel).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBaseModelInternal)__baseModel).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBaseModelInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBaseModelInternal)__baseModel).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBaseModelInternal)__baseModel).Type = value; }

        /// <summary>The name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBaseModelInternal)__baseModel).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBackupProperties _property;

        /// <summary>Properties of backup</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBackupProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.BackupProperties()); set => this._property = value; }

        /// <summary>The backup size in bytes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Inlined)]
        public long SizeInByte { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBackupPropertiesInternal)Property).SizeInByte; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBackupPropertiesInternal)Property).SizeInByte = value ; }

        /// <summary>
        /// The path id of the target FileServer or IscsiServer for which the backup was taken.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Inlined)]
        public string TargetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBackupPropertiesInternal)Property).TargetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBackupPropertiesInternal)Property).TargetId = value ?? null; }

        /// <summary>Type of target, FileServer or IscsiServer</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Inlined)]
        public string TargetType { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBackupPropertiesInternal)Property).TargetType; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBackupPropertiesInternal)Property).TargetType = value ?? null; }

        /// <summary>The type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBaseModelInternal)__baseModel).Type; }

        /// <summary>Creates an new <see cref="Backup" /> instance.</summary>
        public Backup()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__baseModel), __baseModel);
            await eventListener.AssertObjectIsValid(nameof(__baseModel), __baseModel);
        }
    }
    /// The backup.
    public partial interface IBackup :
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBaseModel
    {
        /// <summary>The time when the backup was created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time when the backup was created.",
        SerializedName = @"createdTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CreatedTime { get; set; }
        /// <summary>The Device Identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The Device Identifier.",
        SerializedName = @"deviceId",
        PossibleTypes = new [] { typeof(string) })]
        string DeviceId { get; set; }
        /// <summary>The backup elements.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The backup elements.",
        SerializedName = @"elements",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBackupElement) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBackupElement[] Element { get; set; }
        /// <summary>The time when the backup will expire.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time when the backup will expire.",
        SerializedName = @"expirationTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ExpirationTime { get; set; }
        /// <summary>Indicates how the backup was initiated "Manual | Scheduled".</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Indicates how the backup was initiated ""Manual | Scheduled"".",
        SerializedName = @"initiatedBy",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.InitiatedBy) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.InitiatedBy InitiatedBy { get; set; }
        /// <summary>The backup size in bytes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The backup size in bytes.",
        SerializedName = @"sizeInBytes",
        PossibleTypes = new [] { typeof(long) })]
        long SizeInByte { get; set; }
        /// <summary>
        /// The path id of the target FileServer or IscsiServer for which the backup was taken.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The path id of the target FileServer or IscsiServer for which the backup was taken.",
        SerializedName = @"targetId",
        PossibleTypes = new [] { typeof(string) })]
        string TargetId { get; set; }
        /// <summary>Type of target, FileServer or IscsiServer</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of target, FileServer or IscsiServer",
        SerializedName = @"targetType",
        PossibleTypes = new [] { typeof(string) })]
        string TargetType { get; set; }

    }
    /// The backup.
    internal partial interface IBackupInternal :
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBaseModelInternal
    {
        /// <summary>The time when the backup was created.</summary>
        global::System.DateTime? CreatedTime { get; set; }
        /// <summary>The Device Identifier.</summary>
        string DeviceId { get; set; }
        /// <summary>The backup elements.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBackupElement[] Element { get; set; }
        /// <summary>The time when the backup will expire.</summary>
        global::System.DateTime? ExpirationTime { get; set; }
        /// <summary>Indicates how the backup was initiated "Manual | Scheduled".</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.InitiatedBy InitiatedBy { get; set; }
        /// <summary>Properties of backup</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBackupProperties Property { get; set; }
        /// <summary>The backup size in bytes.</summary>
        long SizeInByte { get; set; }
        /// <summary>
        /// The path id of the target FileServer or IscsiServer for which the backup was taken.
        /// </summary>
        string TargetId { get; set; }
        /// <summary>Type of target, FileServer or IscsiServer</summary>
        string TargetType { get; set; }

    }
}