// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Extensions;

    /// <summary>The storage domain properties.</summary>
    public partial class StorageDomainProperties :
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IStorageDomainProperties,
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IStorageDomainPropertiesInternal
    {

        /// <summary>Backing field for <see cref="EncryptionKey" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IAsymmetricEncryptedSecret _encryptionKey;

        /// <summary>The encryption key used to encrypt the data. This is a user secret.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IAsymmetricEncryptedSecret EncryptionKey { get => (this._encryptionKey = this._encryptionKey ?? new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.AsymmetricEncryptedSecret()); set => this._encryptionKey = value; }

        /// <summary>Algorithm used to encrypt "Value"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.EncryptionAlgorithm? EncryptionKeyEncryptionAlgorithm { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IAsymmetricEncryptedSecretInternal)EncryptionKey).EncryptionAlgorithm; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IAsymmetricEncryptedSecretInternal)EncryptionKey).EncryptionAlgorithm = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.EncryptionAlgorithm)""); }

        /// <summary>Thumbprint certificate that was used to encrypt "Value"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Inlined)]
        public string EncryptionKeyEncryptionCertificateThumbprint { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IAsymmetricEncryptedSecretInternal)EncryptionKey).EncryptionCertificateThumbprint; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IAsymmetricEncryptedSecretInternal)EncryptionKey).EncryptionCertificateThumbprint = value ?? null; }

        /// <summary>
        /// The value of the secret itself. If the secret is in plaintext then EncryptionAlgorithm will be none and EncryptionCertThumbprint
        /// will be null.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Inlined)]
        public string EncryptionKeyValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IAsymmetricEncryptedSecretInternal)EncryptionKey).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IAsymmetricEncryptedSecretInternal)EncryptionKey).Value = value ?? null; }

        /// <summary>Backing field for <see cref="EncryptionStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.EncryptionStatus _encryptionStatus;

        /// <summary>The encryption status "Enabled | Disabled".</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.EncryptionStatus EncryptionStatus { get => this._encryptionStatus; set => this._encryptionStatus = value; }

        /// <summary>Internal Acessors for EncryptionKey</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IAsymmetricEncryptedSecret Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IStorageDomainPropertiesInternal.EncryptionKey { get => (this._encryptionKey = this._encryptionKey ?? new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.AsymmetricEncryptedSecret()); set { {_encryptionKey = value;} } }

        /// <summary>Backing field for <see cref="StorageAccountCredentialId" /> property.</summary>
        private string[] _storageAccountCredentialId;

        /// <summary>The storage account credentials.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public string[] StorageAccountCredentialId { get => this._storageAccountCredentialId; set => this._storageAccountCredentialId = value; }

        /// <summary>Creates an new <see cref="StorageDomainProperties" /> instance.</summary>
        public StorageDomainProperties()
        {

        }
    }
    /// The storage domain properties.
    public partial interface IStorageDomainProperties :
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.IJsonSerializable
    {
        /// <summary>Algorithm used to encrypt "Value"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Algorithm used to encrypt ""Value""",
        SerializedName = @"encryptionAlgorithm",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.EncryptionAlgorithm) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.EncryptionAlgorithm? EncryptionKeyEncryptionAlgorithm { get; set; }
        /// <summary>Thumbprint certificate that was used to encrypt "Value"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Thumbprint certificate that was used to encrypt ""Value""",
        SerializedName = @"encryptionCertificateThumbprint",
        PossibleTypes = new [] { typeof(string) })]
        string EncryptionKeyEncryptionCertificateThumbprint { get; set; }
        /// <summary>
        /// The value of the secret itself. If the secret is in plaintext then EncryptionAlgorithm will be none and EncryptionCertThumbprint
        /// will be null.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The value of the secret itself. If the secret is in plaintext then EncryptionAlgorithm will be none and EncryptionCertThumbprint will be null.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(string) })]
        string EncryptionKeyValue { get; set; }
        /// <summary>The encryption status "Enabled | Disabled".</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The encryption status ""Enabled | Disabled"".",
        SerializedName = @"encryptionStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.EncryptionStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.EncryptionStatus EncryptionStatus { get; set; }
        /// <summary>The storage account credentials.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The storage account credentials.",
        SerializedName = @"storageAccountCredentialIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] StorageAccountCredentialId { get; set; }

    }
    /// The storage domain properties.
    internal partial interface IStorageDomainPropertiesInternal

    {
        /// <summary>The encryption key used to encrypt the data. This is a user secret.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IAsymmetricEncryptedSecret EncryptionKey { get; set; }
        /// <summary>Algorithm used to encrypt "Value"</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.EncryptionAlgorithm? EncryptionKeyEncryptionAlgorithm { get; set; }
        /// <summary>Thumbprint certificate that was used to encrypt "Value"</summary>
        string EncryptionKeyEncryptionCertificateThumbprint { get; set; }
        /// <summary>
        /// The value of the secret itself. If the secret is in plaintext then EncryptionAlgorithm will be none and EncryptionCertThumbprint
        /// will be null.
        /// </summary>
        string EncryptionKeyValue { get; set; }
        /// <summary>The encryption status "Enabled | Disabled".</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.EncryptionStatus EncryptionStatus { get; set; }
        /// <summary>The storage account credentials.</summary>
        string[] StorageAccountCredentialId { get; set; }

    }
}