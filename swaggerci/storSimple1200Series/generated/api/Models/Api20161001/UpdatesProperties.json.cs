// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Extensions;

    /// <summary>Properties of the update profile</summary>
    public partial class UpdatesProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IUpdatesProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IUpdatesProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IUpdatesProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonObject json ? new UpdatesProperties(json) : null;
        }

        /// <summary>
        /// Serializes this instance of <see cref="UpdatesProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="UpdatesProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != (((object)this._deviceVersion)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString(this._deviceVersion.ToString()) : null, "deviceVersion" ,container.Add );
            AddIf( null != this._deviceLastScannedTime ? (Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString(this._deviceLastScannedTime?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "deviceLastScannedTime" ,container.Add );
            AddIf( null != this._regularUpdatesAvailable ? (Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonBoolean((bool)this._regularUpdatesAvailable) : null, "regularUpdatesAvailable" ,container.Add );
            AddIf( null != this._rebootRequiredForInstall ? (Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonBoolean((bool)this._rebootRequiredForInstall) : null, "rebootRequiredForInstall" ,container.Add );
            AddIf( null != this._totalItemsPendingForDownload ? (Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNumber((int)this._totalItemsPendingForDownload) : null, "totalItemsPendingForDownload" ,container.Add );
            AddIf( null != this._totalItemsPendingForInstall ? (Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNumber((int)this._totalItemsPendingForInstall) : null, "totalItemsPendingForInstall" ,container.Add );
            AddIf( null != (((object)this._status)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString(this._status.ToString()) : null, "status" ,container.Add );
            AddIf( null != this._lastCompletedScanTime ? (Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString(this._lastCompletedScanTime?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "lastCompletedScanTime" ,container.Add );
            AddIf( null != this._lastCompletedDownloadJobTime ? (Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString(this._lastCompletedDownloadJobTime?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "lastCompletedDownloadJobTime" ,container.Add );
            AddIf( null != this._lastCompletedInstallJobTime ? (Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString(this._lastCompletedInstallJobTime?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "lastCompletedInstallJobTime" ,container.Add );
            AddIf( null != (((object)this._inProgressDownloadJobId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString(this._inProgressDownloadJobId.ToString()) : null, "inProgressDownloadJobId" ,container.Add );
            AddIf( null != (((object)this._inProgressInstallJobId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString(this._inProgressInstallJobId.ToString()) : null, "inProgressInstallJobId" ,container.Add );
            AddIf( null != this._inProgressScanStartedTime ? (Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString(this._inProgressScanStartedTime?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "inProgressScanStartedTime" ,container.Add );
            AddIf( null != this._inProgressDownloadJobStartedTime ? (Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString(this._inProgressDownloadJobStartedTime?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "inProgressDownloadJobStartedTime" ,container.Add );
            AddIf( null != this._inProgressInstallJobStartedTime ? (Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString(this._inProgressInstallJobStartedTime?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "inProgressInstallJobStartedTime" ,container.Add );
            AfterToJson(ref container);
            return container;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonObject into a new instance of <see cref="UpdatesProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal UpdatesProperties(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_deviceVersion = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString>("deviceVersion"), out var __jsonDeviceVersion) ? (string)__jsonDeviceVersion : (string)DeviceVersion;}
            {_deviceLastScannedTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString>("deviceLastScannedTime"), out var __jsonDeviceLastScannedTime) ? global::System.DateTime.TryParse((string)__jsonDeviceLastScannedTime, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonDeviceLastScannedTimeValue) ? __jsonDeviceLastScannedTimeValue : DeviceLastScannedTime : DeviceLastScannedTime;}
            {_regularUpdatesAvailable = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonBoolean>("regularUpdatesAvailable"), out var __jsonRegularUpdatesAvailable) ? (bool?)__jsonRegularUpdatesAvailable : RegularUpdatesAvailable;}
            {_rebootRequiredForInstall = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonBoolean>("rebootRequiredForInstall"), out var __jsonRebootRequiredForInstall) ? (bool?)__jsonRebootRequiredForInstall : RebootRequiredForInstall;}
            {_totalItemsPendingForDownload = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNumber>("totalItemsPendingForDownload"), out var __jsonTotalItemsPendingForDownload) ? (int?)__jsonTotalItemsPendingForDownload : TotalItemsPendingForDownload;}
            {_totalItemsPendingForInstall = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNumber>("totalItemsPendingForInstall"), out var __jsonTotalItemsPendingForInstall) ? (int?)__jsonTotalItemsPendingForInstall : TotalItemsPendingForInstall;}
            {_status = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString>("status"), out var __jsonStatus) ? (string)__jsonStatus : (string)Status;}
            {_lastCompletedScanTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString>("lastCompletedScanTime"), out var __jsonLastCompletedScanTime) ? global::System.DateTime.TryParse((string)__jsonLastCompletedScanTime, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonLastCompletedScanTimeValue) ? __jsonLastCompletedScanTimeValue : LastCompletedScanTime : LastCompletedScanTime;}
            {_lastCompletedDownloadJobTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString>("lastCompletedDownloadJobTime"), out var __jsonLastCompletedDownloadJobTime) ? global::System.DateTime.TryParse((string)__jsonLastCompletedDownloadJobTime, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonLastCompletedDownloadJobTimeValue) ? __jsonLastCompletedDownloadJobTimeValue : LastCompletedDownloadJobTime : LastCompletedDownloadJobTime;}
            {_lastCompletedInstallJobTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString>("lastCompletedInstallJobTime"), out var __jsonLastCompletedInstallJobTime) ? global::System.DateTime.TryParse((string)__jsonLastCompletedInstallJobTime, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonLastCompletedInstallJobTimeValue) ? __jsonLastCompletedInstallJobTimeValue : LastCompletedInstallJobTime : LastCompletedInstallJobTime;}
            {_inProgressDownloadJobId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString>("inProgressDownloadJobId"), out var __jsonInProgressDownloadJobId) ? (string)__jsonInProgressDownloadJobId : (string)InProgressDownloadJobId;}
            {_inProgressInstallJobId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString>("inProgressInstallJobId"), out var __jsonInProgressInstallJobId) ? (string)__jsonInProgressInstallJobId : (string)InProgressInstallJobId;}
            {_inProgressScanStartedTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString>("inProgressScanStartedTime"), out var __jsonInProgressScanStartedTime) ? global::System.DateTime.TryParse((string)__jsonInProgressScanStartedTime, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonInProgressScanStartedTimeValue) ? __jsonInProgressScanStartedTimeValue : InProgressScanStartedTime : InProgressScanStartedTime;}
            {_inProgressDownloadJobStartedTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString>("inProgressDownloadJobStartedTime"), out var __jsonInProgressDownloadJobStartedTime) ? global::System.DateTime.TryParse((string)__jsonInProgressDownloadJobStartedTime, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonInProgressDownloadJobStartedTimeValue) ? __jsonInProgressDownloadJobStartedTimeValue : InProgressDownloadJobStartedTime : InProgressDownloadJobStartedTime;}
            {_inProgressInstallJobStartedTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString>("inProgressInstallJobStartedTime"), out var __jsonInProgressInstallJobStartedTime) ? global::System.DateTime.TryParse((string)__jsonInProgressInstallJobStartedTime, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonInProgressInstallJobStartedTimeValue) ? __jsonInProgressInstallJobStartedTimeValue : InProgressInstallJobStartedTime : InProgressInstallJobStartedTime;}
            AfterFromJson(json);
        }
    }
}