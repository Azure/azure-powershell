// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Extensions;

    /// <summary>The properties of SecuritySettings</summary>
    public partial class SecuritySettingsProperties :
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.ISecuritySettingsProperties,
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.ISecuritySettingsPropertiesInternal
    {

        /// <summary>Backing field for <see cref="DeviceAdminPassword" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IAsymmetricEncryptedSecret _deviceAdminPassword;

        /// <summary>
        /// Device administrator password as an encrypted string (encrypted using RSA PKCS #1) is used to log into the local web UI
        /// of the device. Actual password could have at least 8 characters that are a combination of uppercase, lowercase, numeric,
        /// and special characters
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IAsymmetricEncryptedSecret DeviceAdminPassword { get => (this._deviceAdminPassword = this._deviceAdminPassword ?? new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.AsymmetricEncryptedSecret()); set => this._deviceAdminPassword = value; }

        /// <summary>Algorithm used to encrypt "Value"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.EncryptionAlgorithm DeviceAdminPasswordEncryptionAlgorithm { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IAsymmetricEncryptedSecretInternal)DeviceAdminPassword).EncryptionAlgorithm; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IAsymmetricEncryptedSecretInternal)DeviceAdminPassword).EncryptionAlgorithm = value ; }

        /// <summary>Thumbprint certificate that was used to encrypt "Value"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Inlined)]
        public string DeviceAdminPasswordEncryptionCertificateThumbprint { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IAsymmetricEncryptedSecretInternal)DeviceAdminPassword).EncryptionCertificateThumbprint; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IAsymmetricEncryptedSecretInternal)DeviceAdminPassword).EncryptionCertificateThumbprint = value ?? null; }

        /// <summary>
        /// The value of the secret itself. If the secret is in plaintext then EncryptionAlgorithm will be none and EncryptionCertThumbprint
        /// will be null.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Inlined)]
        public string DeviceAdminPasswordValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IAsymmetricEncryptedSecretInternal)DeviceAdminPassword).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IAsymmetricEncryptedSecretInternal)DeviceAdminPassword).Value = value ; }

        /// <summary>Internal Acessors for DeviceAdminPassword</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IAsymmetricEncryptedSecret Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.ISecuritySettingsPropertiesInternal.DeviceAdminPassword { get => (this._deviceAdminPassword = this._deviceAdminPassword ?? new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.AsymmetricEncryptedSecret()); set { {_deviceAdminPassword = value;} } }

        /// <summary>Creates an new <see cref="SecuritySettingsProperties" /> instance.</summary>
        public SecuritySettingsProperties()
        {

        }
    }
    /// The properties of SecuritySettings
    public partial interface ISecuritySettingsProperties :
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.IJsonSerializable
    {
        /// <summary>Algorithm used to encrypt "Value"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Algorithm used to encrypt ""Value""",
        SerializedName = @"encryptionAlgorithm",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.EncryptionAlgorithm) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.EncryptionAlgorithm DeviceAdminPasswordEncryptionAlgorithm { get; set; }
        /// <summary>Thumbprint certificate that was used to encrypt "Value"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Thumbprint certificate that was used to encrypt ""Value""",
        SerializedName = @"encryptionCertificateThumbprint",
        PossibleTypes = new [] { typeof(string) })]
        string DeviceAdminPasswordEncryptionCertificateThumbprint { get; set; }
        /// <summary>
        /// The value of the secret itself. If the secret is in plaintext then EncryptionAlgorithm will be none and EncryptionCertThumbprint
        /// will be null.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The value of the secret itself. If the secret is in plaintext then EncryptionAlgorithm will be none and EncryptionCertThumbprint will be null.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(string) })]
        string DeviceAdminPasswordValue { get; set; }

    }
    /// The properties of SecuritySettings
    internal partial interface ISecuritySettingsPropertiesInternal

    {
        /// <summary>
        /// Device administrator password as an encrypted string (encrypted using RSA PKCS #1) is used to log into the local web UI
        /// of the device. Actual password could have at least 8 characters that are a combination of uppercase, lowercase, numeric,
        /// and special characters
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IAsymmetricEncryptedSecret DeviceAdminPassword { get; set; }
        /// <summary>Algorithm used to encrypt "Value"</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.EncryptionAlgorithm DeviceAdminPasswordEncryptionAlgorithm { get; set; }
        /// <summary>Thumbprint certificate that was used to encrypt "Value"</summary>
        string DeviceAdminPasswordEncryptionCertificateThumbprint { get; set; }
        /// <summary>
        /// The value of the secret itself. If the secret is in plaintext then EncryptionAlgorithm will be none and EncryptionCertThumbprint
        /// will be null.
        /// </summary>
        string DeviceAdminPasswordValue { get; set; }

    }
}