// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Extensions;

    /// <summary>Properties of the ManagerExtendedInfo</summary>
    public partial class ManagerExtendedInfoProperties :
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IManagerExtendedInfoProperties,
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IManagerExtendedInfoPropertiesInternal
    {

        /// <summary>Backing field for <see cref="Algorithm" /> property.</summary>
        private string _algorithm;

        /// <summary>
        /// Represents the encryption algorithm used to encrypt the other keys. None - if EncryptionKey is saved in plain text format.
        /// AlgorithmName - if encryption is used
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public string Algorithm { get => this._algorithm; set => this._algorithm = value; }

        /// <summary>Backing field for <see cref="EncryptionKey" /> property.</summary>
        private string _encryptionKey;

        /// <summary>Represents the CEK of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public string EncryptionKey { get => this._encryptionKey; set => this._encryptionKey = value; }

        /// <summary>Backing field for <see cref="EncryptionKeyThumbprint" /> property.</summary>
        private string _encryptionKeyThumbprint;

        /// <summary>Represents the Cert thumbprint that was used to encrypt the CEK</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public string EncryptionKeyThumbprint { get => this._encryptionKeyThumbprint; set => this._encryptionKeyThumbprint = value; }

        /// <summary>Backing field for <see cref="IntegrityKey" /> property.</summary>
        private string _integrityKey;

        /// <summary>Represents the CIK of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public string IntegrityKey { get => this._integrityKey; set => this._integrityKey = value; }

        /// <summary>Backing field for <see cref="PortalCertificateThumbprint" /> property.</summary>
        private string _portalCertificateThumbprint;

        /// <summary>
        /// Represents the portal thumbprint which can be used optionally to encrypt the entire data before storing it.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public string PortalCertificateThumbprint { get => this._portalCertificateThumbprint; set => this._portalCertificateThumbprint = value; }

        /// <summary>Backing field for <see cref="Version" /> property.</summary>
        private string _version;

        /// <summary>Represents the version of the ExtendedInfo object being persisted</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public string Version { get => this._version; set => this._version = value; }

        /// <summary>Creates an new <see cref="ManagerExtendedInfoProperties" /> instance.</summary>
        public ManagerExtendedInfoProperties()
        {

        }
    }
    /// Properties of the ManagerExtendedInfo
    public partial interface IManagerExtendedInfoProperties :
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Represents the encryption algorithm used to encrypt the other keys. None - if EncryptionKey is saved in plain text format.
        /// AlgorithmName - if encryption is used
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Represents the encryption algorithm used to encrypt the other keys. None - if EncryptionKey is saved in plain text format. AlgorithmName - if encryption is used",
        SerializedName = @"algorithm",
        PossibleTypes = new [] { typeof(string) })]
        string Algorithm { get; set; }
        /// <summary>Represents the CEK of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents the CEK of the resource",
        SerializedName = @"encryptionKey",
        PossibleTypes = new [] { typeof(string) })]
        string EncryptionKey { get; set; }
        /// <summary>Represents the Cert thumbprint that was used to encrypt the CEK</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents the Cert thumbprint that was used to encrypt the CEK",
        SerializedName = @"encryptionKeyThumbprint",
        PossibleTypes = new [] { typeof(string) })]
        string EncryptionKeyThumbprint { get; set; }
        /// <summary>Represents the CIK of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Represents the CIK of the resource",
        SerializedName = @"integrityKey",
        PossibleTypes = new [] { typeof(string) })]
        string IntegrityKey { get; set; }
        /// <summary>
        /// Represents the portal thumbprint which can be used optionally to encrypt the entire data before storing it.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents the portal thumbprint which can be used optionally to encrypt the entire data before storing it.",
        SerializedName = @"portalCertificateThumbprint",
        PossibleTypes = new [] { typeof(string) })]
        string PortalCertificateThumbprint { get; set; }
        /// <summary>Represents the version of the ExtendedInfo object being persisted</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents the version of the ExtendedInfo object being persisted",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string Version { get; set; }

    }
    /// Properties of the ManagerExtendedInfo
    internal partial interface IManagerExtendedInfoPropertiesInternal

    {
        /// <summary>
        /// Represents the encryption algorithm used to encrypt the other keys. None - if EncryptionKey is saved in plain text format.
        /// AlgorithmName - if encryption is used
        /// </summary>
        string Algorithm { get; set; }
        /// <summary>Represents the CEK of the resource</summary>
        string EncryptionKey { get; set; }
        /// <summary>Represents the Cert thumbprint that was used to encrypt the CEK</summary>
        string EncryptionKeyThumbprint { get; set; }
        /// <summary>Represents the CIK of the resource</summary>
        string IntegrityKey { get; set; }
        /// <summary>
        /// Represents the portal thumbprint which can be used optionally to encrypt the entire data before storing it.
        /// </summary>
        string PortalCertificateThumbprint { get; set; }
        /// <summary>Represents the version of the ExtendedInfo object being persisted</summary>
        string Version { get; set; }

    }
}