// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Extensions;

    /// <summary>Resource Certificate And AAD Details from IDM</summary>
    public partial class ResourceCertificateAndAadDetails :
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IResourceCertificateAndAadDetails,
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IResourceCertificateAndAadDetailsInternal
    {

        /// <summary>Backing field for <see cref="AadAuthority" /> property.</summary>
        private string _aadAuthority;

        /// <summary>AAD tenant authority</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public string AadAuthority { get => this._aadAuthority; set => this._aadAuthority = value; }

        /// <summary>Backing field for <see cref="AadTenantId" /> property.</summary>
        private string _aadTenantId;

        /// <summary>AAD tenant Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public string AadTenantId { get => this._aadTenantId; set => this._aadTenantId = value; }

        /// <summary>Backing field for <see cref="AuthType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.AuthType? _authType;

        /// <summary>Specify the Authentication type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.AuthType? AuthType { get => this._authType; set => this._authType = value; }

        /// <summary>Backing field for <see cref="AzureManagementEndpointAudience" /> property.</summary>
        private string _azureManagementEndpointAudience;

        /// <summary>Azure Management Endpoint Audience</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public string AzureManagementEndpointAudience { get => this._azureManagementEndpointAudience; set => this._azureManagementEndpointAudience = value; }

        /// <summary>Backing field for <see cref="Certificate" /> property.</summary>
        private string _certificate;

        /// <summary>Gets or sets the base64 encoded certificate raw data string</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public string Certificate { get => this._certificate; set => this._certificate = value; }

        /// <summary>Backing field for <see cref="FriendlyName" /> property.</summary>
        private string _friendlyName;

        /// <summary>Certificate friendly name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public string FriendlyName { get => this._friendlyName; set => this._friendlyName = value; }

        /// <summary>Backing field for <see cref="Issuer" /> property.</summary>
        private string _issuer;

        /// <summary>Certificate issuer</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public string Issuer { get => this._issuer; set => this._issuer = value; }

        /// <summary>Backing field for <see cref="ResourceId" /> property.</summary>
        private long _resourceId;

        /// <summary>Gets or Sets the ResourceId</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public long ResourceId { get => this._resourceId; set => this._resourceId = value; }

        /// <summary>Backing field for <see cref="ServicePrincipalClientId" /> property.</summary>
        private string _servicePrincipalClientId;

        /// <summary>AAD service principal clientId</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public string ServicePrincipalClientId { get => this._servicePrincipalClientId; set => this._servicePrincipalClientId = value; }

        /// <summary>Backing field for <see cref="ServicePrincipalObjectId" /> property.</summary>
        private string _servicePrincipalObjectId;

        /// <summary>AAD service principal ObjectId</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public string ServicePrincipalObjectId { get => this._servicePrincipalObjectId; set => this._servicePrincipalObjectId = value; }

        /// <summary>Backing field for <see cref="Subject" /> property.</summary>
        private string _subject;

        /// <summary>Certificate Subject Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public string Subject { get => this._subject; set => this._subject = value; }

        /// <summary>Backing field for <see cref="Thumbprint" /> property.</summary>
        private string _thumbprint;

        /// <summary>Certificate thumbprint</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public string Thumbprint { get => this._thumbprint; set => this._thumbprint = value; }

        /// <summary>Backing field for <see cref="ValidFrom" /> property.</summary>
        private global::System.DateTime _validFrom;

        /// <summary>Certificate Validity start Date time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public global::System.DateTime ValidFrom { get => this._validFrom; set => this._validFrom = value; }

        /// <summary>Backing field for <see cref="ValidTo" /> property.</summary>
        private global::System.DateTime _validTo;

        /// <summary>Certificate Validity End Date time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public global::System.DateTime ValidTo { get => this._validTo; set => this._validTo = value; }

        /// <summary>Creates an new <see cref="ResourceCertificateAndAadDetails" /> instance.</summary>
        public ResourceCertificateAndAadDetails()
        {

        }
    }
    /// Resource Certificate And AAD Details from IDM
    public partial interface IResourceCertificateAndAadDetails :
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.IJsonSerializable
    {
        /// <summary>AAD tenant authority</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"AAD tenant authority",
        SerializedName = @"aadAuthority",
        PossibleTypes = new [] { typeof(string) })]
        string AadAuthority { get; set; }
        /// <summary>AAD tenant Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"AAD tenant Id",
        SerializedName = @"aadTenantId",
        PossibleTypes = new [] { typeof(string) })]
        string AadTenantId { get; set; }
        /// <summary>Specify the Authentication type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specify the Authentication type",
        SerializedName = @"authType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.AuthType) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.AuthType? AuthType { get; set; }
        /// <summary>Azure Management Endpoint Audience</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Azure Management Endpoint Audience",
        SerializedName = @"azureManagementEndpointAudience",
        PossibleTypes = new [] { typeof(string) })]
        string AzureManagementEndpointAudience { get; set; }
        /// <summary>Gets or sets the base64 encoded certificate raw data string</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Gets or sets the base64 encoded certificate raw data string",
        SerializedName = @"certificate",
        PossibleTypes = new [] { typeof(string) })]
        string Certificate { get; set; }
        /// <summary>Certificate friendly name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Certificate friendly name",
        SerializedName = @"friendlyName",
        PossibleTypes = new [] { typeof(string) })]
        string FriendlyName { get; set; }
        /// <summary>Certificate issuer</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Certificate issuer",
        SerializedName = @"issuer",
        PossibleTypes = new [] { typeof(string) })]
        string Issuer { get; set; }
        /// <summary>Gets or Sets the ResourceId</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Gets or Sets the ResourceId",
        SerializedName = @"resourceId",
        PossibleTypes = new [] { typeof(long) })]
        long ResourceId { get; set; }
        /// <summary>AAD service principal clientId</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"AAD service principal clientId",
        SerializedName = @"servicePrincipalClientId",
        PossibleTypes = new [] { typeof(string) })]
        string ServicePrincipalClientId { get; set; }
        /// <summary>AAD service principal ObjectId</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"AAD service principal ObjectId",
        SerializedName = @"servicePrincipalObjectId",
        PossibleTypes = new [] { typeof(string) })]
        string ServicePrincipalObjectId { get; set; }
        /// <summary>Certificate Subject Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Certificate Subject Name",
        SerializedName = @"subject",
        PossibleTypes = new [] { typeof(string) })]
        string Subject { get; set; }
        /// <summary>Certificate thumbprint</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Certificate thumbprint",
        SerializedName = @"thumbprint",
        PossibleTypes = new [] { typeof(string) })]
        string Thumbprint { get; set; }
        /// <summary>Certificate Validity start Date time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Certificate Validity start Date time",
        SerializedName = @"validFrom",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime ValidFrom { get; set; }
        /// <summary>Certificate Validity End Date time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Certificate Validity End Date time",
        SerializedName = @"validTo",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime ValidTo { get; set; }

    }
    /// Resource Certificate And AAD Details from IDM
    internal partial interface IResourceCertificateAndAadDetailsInternal

    {
        /// <summary>AAD tenant authority</summary>
        string AadAuthority { get; set; }
        /// <summary>AAD tenant Id</summary>
        string AadTenantId { get; set; }
        /// <summary>Specify the Authentication type</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.AuthType? AuthType { get; set; }
        /// <summary>Azure Management Endpoint Audience</summary>
        string AzureManagementEndpointAudience { get; set; }
        /// <summary>Gets or sets the base64 encoded certificate raw data string</summary>
        string Certificate { get; set; }
        /// <summary>Certificate friendly name</summary>
        string FriendlyName { get; set; }
        /// <summary>Certificate issuer</summary>
        string Issuer { get; set; }
        /// <summary>Gets or Sets the ResourceId</summary>
        long ResourceId { get; set; }
        /// <summary>AAD service principal clientId</summary>
        string ServicePrincipalClientId { get; set; }
        /// <summary>AAD service principal ObjectId</summary>
        string ServicePrincipalObjectId { get; set; }
        /// <summary>Certificate Subject Name</summary>
        string Subject { get; set; }
        /// <summary>Certificate thumbprint</summary>
        string Thumbprint { get; set; }
        /// <summary>Certificate Validity start Date time</summary>
        global::System.DateTime ValidFrom { get; set; }
        /// <summary>Certificate Validity End Date time</summary>
        global::System.DateTime ValidTo { get; set; }

    }
}