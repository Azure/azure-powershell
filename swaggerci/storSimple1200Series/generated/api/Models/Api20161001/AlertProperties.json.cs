// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Extensions;

    /// <summary>Properties of alert</summary>
    public partial class AlertProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonObject into a new instance of <see cref="AlertProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal AlertProperties(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_source = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonObject>("source"), out var __jsonSource) ? Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.AlertSource.FromJson(__jsonSource) : Source;}
            {_errorDetail = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonObject>("errorDetails"), out var __jsonErrorDetails) ? Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.AlertErrorDetails.FromJson(__jsonErrorDetails) : ErrorDetail;}
            {_title = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString>("title"), out var __jsonTitle) ? (string)__jsonTitle : (string)Title;}
            {_scope = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString>("scope"), out var __jsonScope) ? (string)__jsonScope : (string)Scope;}
            {_alertType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString>("alertType"), out var __jsonAlertType) ? (string)__jsonAlertType : (string)AlertType;}
            {_appearedAtTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString>("appearedAtTime"), out var __jsonAppearedAtTime) ? global::System.DateTime.TryParse((string)__jsonAppearedAtTime, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonAppearedAtTimeValue) ? __jsonAppearedAtTimeValue : AppearedAtTime : AppearedAtTime;}
            {_appearedAtSourceTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString>("appearedAtSourceTime"), out var __jsonAppearedAtSourceTime) ? global::System.DateTime.TryParse((string)__jsonAppearedAtSourceTime, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonAppearedAtSourceTimeValue) ? __jsonAppearedAtSourceTimeValue : AppearedAtSourceTime : AppearedAtSourceTime;}
            {_clearedAtTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString>("clearedAtTime"), out var __jsonClearedAtTime) ? global::System.DateTime.TryParse((string)__jsonClearedAtTime, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonClearedAtTimeValue) ? __jsonClearedAtTimeValue : ClearedAtTime : ClearedAtTime;}
            {_clearedAtSourceTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString>("clearedAtSourceTime"), out var __jsonClearedAtSourceTime) ? global::System.DateTime.TryParse((string)__jsonClearedAtSourceTime, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonClearedAtSourceTimeValue) ? __jsonClearedAtSourceTimeValue : ClearedAtSourceTime : ClearedAtSourceTime;}
            {_recommendation = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString>("recommendation"), out var __jsonRecommendation) ? (string)__jsonRecommendation : (string)Recommendation;}
            {_resolutionReason = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString>("resolutionReason"), out var __jsonResolutionReason) ? (string)__jsonResolutionReason : (string)ResolutionReason;}
            {_severity = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString>("severity"), out var __jsonSeverity) ? (string)__jsonSeverity : (string)Severity;}
            {_status = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString>("status"), out var __jsonStatus) ? (string)__jsonStatus : (string)Status;}
            {_detailedInformation = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonObject>("detailedInformation"), out var __jsonDetailedInformation) ? Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.AlertPropertiesDetailedInformation.FromJson(__jsonDetailedInformation) : DetailedInformation;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IAlertProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IAlertProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IAlertProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonObject json ? new AlertProperties(json) : null;
        }

        /// <summary>
        /// Serializes this instance of <see cref="AlertProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="AlertProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != this._source ? (Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode) this._source.ToJson(null,serializationMode) : null, "source" ,container.Add );
            AddIf( null != this._errorDetail ? (Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode) this._errorDetail.ToJson(null,serializationMode) : null, "errorDetails" ,container.Add );
            AddIf( null != (((object)this._title)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString(this._title.ToString()) : null, "title" ,container.Add );
            AddIf( null != (((object)this._scope)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString(this._scope.ToString()) : null, "scope" ,container.Add );
            AddIf( null != (((object)this._alertType)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString(this._alertType.ToString()) : null, "alertType" ,container.Add );
            AddIf( (Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString(this._appearedAtTime.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)), "appearedAtTime" ,container.Add );
            AddIf( (Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString(this._appearedAtSourceTime.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)), "appearedAtSourceTime" ,container.Add );
            AddIf( null != this._clearedAtTime ? (Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString(this._clearedAtTime?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "clearedAtTime" ,container.Add );
            AddIf( null != this._clearedAtSourceTime ? (Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString(this._clearedAtSourceTime?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "clearedAtSourceTime" ,container.Add );
            AddIf( null != (((object)this._recommendation)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString(this._recommendation.ToString()) : null, "recommendation" ,container.Add );
            AddIf( null != (((object)this._resolutionReason)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString(this._resolutionReason.ToString()) : null, "resolutionReason" ,container.Add );
            AddIf( null != (((object)this._severity)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString(this._severity.ToString()) : null, "severity" ,container.Add );
            AddIf( null != (((object)this._status)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString(this._status.ToString()) : null, "status" ,container.Add );
            AddIf( null != this._detailedInformation ? (Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode) this._detailedInformation.ToJson(null,serializationMode) : null, "detailedInformation" ,container.Add );
            AfterToJson(ref container);
            return container;
        }
    }
}