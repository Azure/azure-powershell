// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Extensions;

    /// <summary>Encases all the properties of the Device</summary>
    public partial class DeviceProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonObject into a new instance of <see cref="DeviceProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal DeviceProperties(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_detail = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonObject>("details"), out var __jsonDetails) ? Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.DeviceDetails.FromJson(__jsonDetails) : Detail;}
            {_activationTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString>("activationTime"), out var __jsonActivationTime) ? global::System.DateTime.TryParse((string)__jsonActivationTime, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonActivationTimeValue) ? __jsonActivationTimeValue : ActivationTime : ActivationTime;}
            {_allowedDeviceOperation = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonArray>("allowedDeviceOperations"), out var __jsonAllowedDeviceOperations) ? If( __jsonAllowedDeviceOperations as Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.DeviceOperation[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.DeviceOperation) (__u is Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString __t ? (Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.DeviceOperation)(__t.ToString()) : ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.DeviceOperation)""))) ))() : null : AllowedDeviceOperation;}
            {_culture = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString>("culture"), out var __jsonCulture) ? (string)__jsonCulture : (string)Culture;}
            {_deviceCapability = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonArray>("deviceCapabilities"), out var __jsonDeviceCapabilities) ? If( __jsonDeviceCapabilities as Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonArray, out var __q) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.SupportedDeviceCapabilities[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__q, (__p)=>(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.SupportedDeviceCapabilities) (__p is Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString __o ? (Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.SupportedDeviceCapabilities)(__o.ToString()) : ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.SupportedDeviceCapabilities)""))) ))() : null : DeviceCapability;}
            {_deviceDescription = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString>("deviceDescription"), out var __jsonDeviceDescription) ? (string)__jsonDeviceDescription : (string)DeviceDescription;}
            {_domainName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString>("domainName"), out var __jsonDomainName) ? (string)__jsonDomainName : (string)DomainName;}
            {_deviceSoftwareVersion = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString>("deviceSoftwareVersion"), out var __jsonDeviceSoftwareVersion) ? (string)__jsonDeviceSoftwareVersion : (string)DeviceSoftwareVersion;}
            {_friendlySoftwareName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString>("friendlySoftwareName"), out var __jsonFriendlySoftwareName) ? (string)__jsonFriendlySoftwareName : (string)FriendlySoftwareName;}
            {_deviceConfigurationStatus = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString>("deviceConfigurationStatus"), out var __jsonDeviceConfigurationStatus) ? (string)__jsonDeviceConfigurationStatus : (string)DeviceConfigurationStatus;}
            {_modelDescription = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString>("modelDescription"), out var __jsonModelDescription) ? (string)__jsonModelDescription : (string)ModelDescription;}
            {_status = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString>("status"), out var __jsonStatus) ? (string)__jsonStatus : (string)Status;}
            {_type = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString>("type"), out var __jsonType) ? (string)__jsonType : (string)Type;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IDeviceProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IDeviceProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IDeviceProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonObject json ? new DeviceProperties(json) : null;
        }

        /// <summary>
        /// Serializes this instance of <see cref="DeviceProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="DeviceProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != this._detail ? (Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode) this._detail.ToJson(null,serializationMode) : null, "details" ,container.Add );
            AddIf( null != this._activationTime ? (Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString(this._activationTime?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "activationTime" ,container.Add );
            if (null != this._allowedDeviceOperation)
            {
                var __w = new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.XNodeArray();
                foreach( var __x in this._allowedDeviceOperation )
                {
                    AddIf(null != (((object)__x)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString(__x.ToString()) : null ,__w.Add);
                }
                container.Add("allowedDeviceOperations",__w);
            }
            AddIf( null != (((object)this._culture)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString(this._culture.ToString()) : null, "culture" ,container.Add );
            if (null != this._deviceCapability)
            {
                var __r = new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.XNodeArray();
                foreach( var __s in this._deviceCapability )
                {
                    AddIf(null != (((object)__s)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString(__s.ToString()) : null ,__r.Add);
                }
                container.Add("deviceCapabilities",__r);
            }
            AddIf( null != (((object)this._deviceDescription)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString(this._deviceDescription.ToString()) : null, "deviceDescription" ,container.Add );
            AddIf( null != (((object)this._domainName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString(this._domainName.ToString()) : null, "domainName" ,container.Add );
            AddIf( null != (((object)this._deviceSoftwareVersion)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString(this._deviceSoftwareVersion.ToString()) : null, "deviceSoftwareVersion" ,container.Add );
            AddIf( null != (((object)this._friendlySoftwareName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString(this._friendlySoftwareName.ToString()) : null, "friendlySoftwareName" ,container.Add );
            AddIf( null != (((object)this._deviceConfigurationStatus)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString(this._deviceConfigurationStatus.ToString()) : null, "deviceConfigurationStatus" ,container.Add );
            AddIf( null != (((object)this._modelDescription)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString(this._modelDescription.ToString()) : null, "modelDescription" ,container.Add );
            AddIf( null != (((object)this._status)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString(this._status.ToString()) : null, "status" ,container.Add );
            AddIf( null != (((object)this._type)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Json.JsonString(this._type.ToString()) : null, "type" ,container.Add );
            AfterToJson(ref container);
            return container;
        }
    }
}