// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Extensions;

    /// <summary>Represents a networkAdapter in a particular node.</summary>
    public partial class NetworkAdapter :
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.INetworkAdapter,
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.INetworkAdapterInternal
    {

        /// <summary>Backing field for <see cref="DhcpStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.DhcpStatus _dhcpStatus;

        /// <summary>Represents state of DHCP.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.DhcpStatus DhcpStatus { get => this._dhcpStatus; set => this._dhcpStatus = value; }

        /// <summary>Backing field for <see cref="IPv4Info" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IIPConfig _iPv4Info;

        /// <summary>The ipv4 configuration of the network adapter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IIPConfig IPv4Info { get => (this._iPv4Info = this._iPv4Info ?? new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IPConfig()); set => this._iPv4Info = value; }

        /// <summary>The gateway of the network adapter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Inlined)]
        public string IPv4InfoGateway { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IIPConfigInternal)IPv4Info).Gateway; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IIPConfigInternal)IPv4Info).Gateway = value ?? null; }

        /// <summary>The IP address of the network adapter, either ipv4 or ipv6.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Inlined)]
        public string IPv4InfoIpaddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IIPConfigInternal)IPv4Info).IPAddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IIPConfigInternal)IPv4Info).IPAddress = value ?? null; }

        /// <summary>The prefix length of the network adapter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Inlined)]
        public int? IPv4InfoPrefixLength { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IIPConfigInternal)IPv4Info).PrefixLength; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IIPConfigInternal)IPv4Info).PrefixLength = value ?? default(int); }

        /// <summary>Backing field for <see cref="IPv6Info" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IIPConfig _iPv6Info;

        /// <summary>The ipv6 configuration of the network adapter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IIPConfig IPv6Info { get => (this._iPv6Info = this._iPv6Info ?? new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IPConfig()); set => this._iPv6Info = value; }

        /// <summary>The gateway of the network adapter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Inlined)]
        public string IPv6InfoGateway { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IIPConfigInternal)IPv6Info).Gateway; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IIPConfigInternal)IPv6Info).Gateway = value ?? null; }

        /// <summary>The IP address of the network adapter, either ipv4 or ipv6.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Inlined)]
        public string IPv6InfoIpaddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IIPConfigInternal)IPv6Info).IPAddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IIPConfigInternal)IPv6Info).IPAddress = value ?? null; }

        /// <summary>The prefix length of the network adapter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Inlined)]
        public int? IPv6InfoPrefixLength { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IIPConfigInternal)IPv6Info).PrefixLength; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IIPConfigInternal)IPv6Info).PrefixLength = value ?? default(int); }

        /// <summary>Backing field for <see cref="LinkSpeed" /> property.</summary>
        private long? _linkSpeed;

        /// <summary>The speed of the network adapter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public long? LinkSpeed { get => this._linkSpeed; set => this._linkSpeed = value; }

        /// <summary>Internal Acessors for IPv4Info</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IIPConfig Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.INetworkAdapterInternal.IPv4Info { get => (this._iPv4Info = this._iPv4Info ?? new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IPConfig()); set { {_iPv4Info = value;} } }

        /// <summary>Internal Acessors for IPv6Info</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IIPConfig Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.INetworkAdapterInternal.IPv6Info { get => (this._iPv6Info = this._iPv6Info ?? new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IPConfig()); set { {_iPv6Info = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>The name of the network adapter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Creates an new <see cref="NetworkAdapter" /> instance.</summary>
        public NetworkAdapter()
        {

        }
    }
    /// Represents a networkAdapter in a particular node.
    public partial interface INetworkAdapter :
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.IJsonSerializable
    {
        /// <summary>Represents state of DHCP.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Represents state of DHCP.",
        SerializedName = @"dhcpStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.DhcpStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.DhcpStatus DhcpStatus { get; set; }
        /// <summary>The gateway of the network adapter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The gateway of the network adapter.",
        SerializedName = @"gateway",
        PossibleTypes = new [] { typeof(string) })]
        string IPv4InfoGateway { get; set; }
        /// <summary>The IP address of the network adapter, either ipv4 or ipv6.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The IP address of the network adapter, either ipv4 or ipv6.",
        SerializedName = @"ipAddress",
        PossibleTypes = new [] { typeof(string) })]
        string IPv4InfoIpaddress { get; set; }
        /// <summary>The prefix length of the network adapter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The prefix length of the network adapter.",
        SerializedName = @"prefixLength",
        PossibleTypes = new [] { typeof(int) })]
        int? IPv4InfoPrefixLength { get; set; }
        /// <summary>The gateway of the network adapter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The gateway of the network adapter.",
        SerializedName = @"gateway",
        PossibleTypes = new [] { typeof(string) })]
        string IPv6InfoGateway { get; set; }
        /// <summary>The IP address of the network adapter, either ipv4 or ipv6.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The IP address of the network adapter, either ipv4 or ipv6.",
        SerializedName = @"ipAddress",
        PossibleTypes = new [] { typeof(string) })]
        string IPv6InfoIpaddress { get; set; }
        /// <summary>The prefix length of the network adapter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The prefix length of the network adapter.",
        SerializedName = @"prefixLength",
        PossibleTypes = new [] { typeof(int) })]
        int? IPv6InfoPrefixLength { get; set; }
        /// <summary>The speed of the network adapter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The speed of the network adapter.",
        SerializedName = @"linkSpeed",
        PossibleTypes = new [] { typeof(long) })]
        long? LinkSpeed { get; set; }
        /// <summary>The name of the network adapter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The name of the network adapter.",
        SerializedName = @"networkAdapterName",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }

    }
    /// Represents a networkAdapter in a particular node.
    internal partial interface INetworkAdapterInternal

    {
        /// <summary>Represents state of DHCP.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.DhcpStatus DhcpStatus { get; set; }
        /// <summary>The ipv4 configuration of the network adapter.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IIPConfig IPv4Info { get; set; }
        /// <summary>The gateway of the network adapter.</summary>
        string IPv4InfoGateway { get; set; }
        /// <summary>The IP address of the network adapter, either ipv4 or ipv6.</summary>
        string IPv4InfoIpaddress { get; set; }
        /// <summary>The prefix length of the network adapter.</summary>
        int? IPv4InfoPrefixLength { get; set; }
        /// <summary>The ipv6 configuration of the network adapter.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IIPConfig IPv6Info { get; set; }
        /// <summary>The gateway of the network adapter.</summary>
        string IPv6InfoGateway { get; set; }
        /// <summary>The IP address of the network adapter, either ipv4 or ipv6.</summary>
        string IPv6InfoIpaddress { get; set; }
        /// <summary>The prefix length of the network adapter.</summary>
        int? IPv6InfoPrefixLength { get; set; }
        /// <summary>The speed of the network adapter.</summary>
        long? LinkSpeed { get; set; }
        /// <summary>The name of the network adapter.</summary>
        string Name { get; set; }

    }
}