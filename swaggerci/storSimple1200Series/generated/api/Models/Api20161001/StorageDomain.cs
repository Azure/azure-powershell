// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Extensions;

    /// <summary>The storage domain.</summary>
    public partial class StorageDomain :
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IStorageDomain,
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IStorageDomainInternal,
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBaseModel"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBaseModel __baseModel = new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.BaseModel();

        /// <summary>Algorithm used to encrypt "Value"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.EncryptionAlgorithm? EncryptionKeyEncryptionAlgorithm { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IStorageDomainPropertiesInternal)Property).EncryptionKeyEncryptionAlgorithm; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IStorageDomainPropertiesInternal)Property).EncryptionKeyEncryptionAlgorithm = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.EncryptionAlgorithm)""); }

        /// <summary>Thumbprint certificate that was used to encrypt "Value"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Inlined)]
        public string EncryptionKeyEncryptionCertificateThumbprint { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IStorageDomainPropertiesInternal)Property).EncryptionKeyEncryptionCertificateThumbprint; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IStorageDomainPropertiesInternal)Property).EncryptionKeyEncryptionCertificateThumbprint = value ?? null; }

        /// <summary>
        /// The value of the secret itself. If the secret is in plaintext then EncryptionAlgorithm will be none and EncryptionCertThumbprint
        /// will be null.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Inlined)]
        public string EncryptionKeyValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IStorageDomainPropertiesInternal)Property).EncryptionKeyValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IStorageDomainPropertiesInternal)Property).EncryptionKeyValue = value ?? null; }

        /// <summary>The encryption status "Enabled | Disabled".</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.EncryptionStatus EncryptionStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IStorageDomainPropertiesInternal)Property).EncryptionStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IStorageDomainPropertiesInternal)Property).EncryptionStatus = value ; }

        /// <summary>The identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBaseModelInternal)__baseModel).Id; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBaseModelInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBaseModelInternal)__baseModel).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBaseModelInternal)__baseModel).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBaseModelInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBaseModelInternal)__baseModel).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBaseModelInternal)__baseModel).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBaseModelInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBaseModelInternal)__baseModel).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBaseModelInternal)__baseModel).Type = value; }

        /// <summary>Internal Acessors for EncryptionKey</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IAsymmetricEncryptedSecret Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IStorageDomainInternal.EncryptionKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IStorageDomainPropertiesInternal)Property).EncryptionKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IStorageDomainPropertiesInternal)Property).EncryptionKey = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IStorageDomainProperties Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IStorageDomainInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.StorageDomainProperties()); set { {_property = value;} } }

        /// <summary>The name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBaseModelInternal)__baseModel).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IStorageDomainProperties _property;

        /// <summary>The properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IStorageDomainProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.StorageDomainProperties()); set => this._property = value; }

        /// <summary>The storage account credentials.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Inlined)]
        public string[] StorageAccountCredentialId { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IStorageDomainPropertiesInternal)Property).StorageAccountCredentialId; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IStorageDomainPropertiesInternal)Property).StorageAccountCredentialId = value ; }

        /// <summary>The type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBaseModelInternal)__baseModel).Type; }

        /// <summary>Creates an new <see cref="StorageDomain" /> instance.</summary>
        public StorageDomain()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__baseModel), __baseModel);
            await eventListener.AssertObjectIsValid(nameof(__baseModel), __baseModel);
        }
    }
    /// The storage domain.
    public partial interface IStorageDomain :
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBaseModel
    {
        /// <summary>Algorithm used to encrypt "Value"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Algorithm used to encrypt ""Value""",
        SerializedName = @"encryptionAlgorithm",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.EncryptionAlgorithm) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.EncryptionAlgorithm? EncryptionKeyEncryptionAlgorithm { get; set; }
        /// <summary>Thumbprint certificate that was used to encrypt "Value"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Thumbprint certificate that was used to encrypt ""Value""",
        SerializedName = @"encryptionCertificateThumbprint",
        PossibleTypes = new [] { typeof(string) })]
        string EncryptionKeyEncryptionCertificateThumbprint { get; set; }
        /// <summary>
        /// The value of the secret itself. If the secret is in plaintext then EncryptionAlgorithm will be none and EncryptionCertThumbprint
        /// will be null.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The value of the secret itself. If the secret is in plaintext then EncryptionAlgorithm will be none and EncryptionCertThumbprint will be null.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(string) })]
        string EncryptionKeyValue { get; set; }
        /// <summary>The encryption status "Enabled | Disabled".</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The encryption status ""Enabled | Disabled"".",
        SerializedName = @"encryptionStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.EncryptionStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.EncryptionStatus EncryptionStatus { get; set; }
        /// <summary>The storage account credentials.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The storage account credentials.",
        SerializedName = @"storageAccountCredentialIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] StorageAccountCredentialId { get; set; }

    }
    /// The storage domain.
    internal partial interface IStorageDomainInternal :
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IBaseModelInternal
    {
        /// <summary>The encryption key used to encrypt the data. This is a user secret.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IAsymmetricEncryptedSecret EncryptionKey { get; set; }
        /// <summary>Algorithm used to encrypt "Value"</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.EncryptionAlgorithm? EncryptionKeyEncryptionAlgorithm { get; set; }
        /// <summary>Thumbprint certificate that was used to encrypt "Value"</summary>
        string EncryptionKeyEncryptionCertificateThumbprint { get; set; }
        /// <summary>
        /// The value of the secret itself. If the secret is in plaintext then EncryptionAlgorithm will be none and EncryptionCertThumbprint
        /// will be null.
        /// </summary>
        string EncryptionKeyValue { get; set; }
        /// <summary>The encryption status "Enabled | Disabled".</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.EncryptionStatus EncryptionStatus { get; set; }
        /// <summary>The properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IStorageDomainProperties Property { get; set; }
        /// <summary>The storage account credentials.</summary>
        string[] StorageAccountCredentialId { get; set; }

    }
}