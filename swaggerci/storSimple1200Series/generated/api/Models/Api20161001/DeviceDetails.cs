// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Extensions;

    /// <summary>Class containing more granular details about the device</summary>
    public partial class DeviceDetails :
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IDeviceDetails,
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IDeviceDetailsInternal
    {

        /// <summary>Backing field for <see cref="AvailableLocalStorageInByte" /> property.</summary>
        private long? _availableLocalStorageInByte;

        /// <summary>Local pending storage available on the device in bytes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public long? AvailableLocalStorageInByte { get => this._availableLocalStorageInByte; set => this._availableLocalStorageInByte = value; }

        /// <summary>Backing field for <see cref="AvailableStorageInByte" /> property.</summary>
        private long? _availableStorageInByte;

        /// <summary>Total pending available storage on the device in bytes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public long? AvailableStorageInByte { get => this._availableStorageInByte; set => this._availableStorageInByte = value; }

        /// <summary>Backing field for <see cref="EndpointCount" /> property.</summary>
        private int? _endpointCount;

        /// <summary>
        /// Total number of endpoints that are currently on the device ( i.e. number of shares on FileServer or number of volumes
        /// on IscsiServer)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public int? EndpointCount { get => this._endpointCount; set => this._endpointCount = value; }

        /// <summary>Backing field for <see cref="ProvisionedLocalStorageInByte" /> property.</summary>
        private long? _provisionedLocalStorageInByte;

        /// <summary>Storage in bytes that has been provisioned locally on the device</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public long? ProvisionedLocalStorageInByte { get => this._provisionedLocalStorageInByte; set => this._provisionedLocalStorageInByte = value; }

        /// <summary>Backing field for <see cref="ProvisionedStorageInByte" /> property.</summary>
        private long? _provisionedStorageInByte;

        /// <summary>
        /// Storage in bytes that has been provisioned on the device including both local and cloud
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public long? ProvisionedStorageInByte { get => this._provisionedStorageInByte; set => this._provisionedStorageInByte = value; }

        /// <summary>Backing field for <see cref="TotalBackupSizeInByte" /> property.</summary>
        private long? _totalBackupSizeInByte;

        /// <summary>Total size taken up by backups in bytes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public long? TotalBackupSizeInByte { get => this._totalBackupSizeInByte; set => this._totalBackupSizeInByte = value; }

        /// <summary>Backing field for <see cref="TotalLocalStorageInByte" /> property.</summary>
        private long? _totalLocalStorageInByte;

        /// <summary>Total local storage capacity in device in bytes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public long? TotalLocalStorageInByte { get => this._totalLocalStorageInByte; set => this._totalLocalStorageInByte = value; }

        /// <summary>Backing field for <see cref="TotalStorageInByte" /> property.</summary>
        private long? _totalStorageInByte;

        /// <summary>Total storage available on the device in bytes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public long? TotalStorageInByte { get => this._totalStorageInByte; set => this._totalStorageInByte = value; }

        /// <summary>Backing field for <see cref="UsingLocalStorageInByte" /> property.</summary>
        private long? _usingLocalStorageInByte;

        /// <summary>Local Storage that is being currently used in bytes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public long? UsingLocalStorageInByte { get => this._usingLocalStorageInByte; set => this._usingLocalStorageInByte = value; }

        /// <summary>Backing field for <see cref="UsingStorageInByte" /> property.</summary>
        private long? _usingStorageInByte;

        /// <summary>Storage that is being currently used in bytes including both local and cloud</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public long? UsingStorageInByte { get => this._usingStorageInByte; set => this._usingStorageInByte = value; }

        /// <summary>Creates an new <see cref="DeviceDetails" /> instance.</summary>
        public DeviceDetails()
        {

        }
    }
    /// Class containing more granular details about the device
    public partial interface IDeviceDetails :
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.IJsonSerializable
    {
        /// <summary>Local pending storage available on the device in bytes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Local pending storage available on the device in bytes",
        SerializedName = @"availableLocalStorageInBytes",
        PossibleTypes = new [] { typeof(long) })]
        long? AvailableLocalStorageInByte { get; set; }
        /// <summary>Total pending available storage on the device in bytes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Total pending available storage on the device in bytes",
        SerializedName = @"availableStorageInBytes",
        PossibleTypes = new [] { typeof(long) })]
        long? AvailableStorageInByte { get; set; }
        /// <summary>
        /// Total number of endpoints that are currently on the device ( i.e. number of shares on FileServer or number of volumes
        /// on IscsiServer)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Total number of endpoints that are currently on the device ( i.e. number of shares on FileServer or number of volumes on IscsiServer)",
        SerializedName = @"endpointCount",
        PossibleTypes = new [] { typeof(int) })]
        int? EndpointCount { get; set; }
        /// <summary>Storage in bytes that has been provisioned locally on the device</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Storage in bytes that has been provisioned locally on the device",
        SerializedName = @"provisionedLocalStorageInBytes",
        PossibleTypes = new [] { typeof(long) })]
        long? ProvisionedLocalStorageInByte { get; set; }
        /// <summary>
        /// Storage in bytes that has been provisioned on the device including both local and cloud
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Storage in bytes that has been provisioned on the device including both local and cloud",
        SerializedName = @"provisionedStorageInBytes",
        PossibleTypes = new [] { typeof(long) })]
        long? ProvisionedStorageInByte { get; set; }
        /// <summary>Total size taken up by backups in bytes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Total size taken up by backups in bytes",
        SerializedName = @"totalBackupSizeInBytes",
        PossibleTypes = new [] { typeof(long) })]
        long? TotalBackupSizeInByte { get; set; }
        /// <summary>Total local storage capacity in device in bytes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Total local storage capacity in device in bytes.",
        SerializedName = @"totalLocalStorageInBytes",
        PossibleTypes = new [] { typeof(long) })]
        long? TotalLocalStorageInByte { get; set; }
        /// <summary>Total storage available on the device in bytes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Total storage available on the device in bytes.",
        SerializedName = @"totalStorageInBytes",
        PossibleTypes = new [] { typeof(long) })]
        long? TotalStorageInByte { get; set; }
        /// <summary>Local Storage that is being currently used in bytes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Local Storage that is being currently used in bytes",
        SerializedName = @"usingLocalStorageInBytes",
        PossibleTypes = new [] { typeof(long) })]
        long? UsingLocalStorageInByte { get; set; }
        /// <summary>Storage that is being currently used in bytes including both local and cloud</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Storage that is being currently used in bytes including both local and cloud",
        SerializedName = @"usingStorageInBytes",
        PossibleTypes = new [] { typeof(long) })]
        long? UsingStorageInByte { get; set; }

    }
    /// Class containing more granular details about the device
    internal partial interface IDeviceDetailsInternal

    {
        /// <summary>Local pending storage available on the device in bytes</summary>
        long? AvailableLocalStorageInByte { get; set; }
        /// <summary>Total pending available storage on the device in bytes</summary>
        long? AvailableStorageInByte { get; set; }
        /// <summary>
        /// Total number of endpoints that are currently on the device ( i.e. number of shares on FileServer or number of volumes
        /// on IscsiServer)
        /// </summary>
        int? EndpointCount { get; set; }
        /// <summary>Storage in bytes that has been provisioned locally on the device</summary>
        long? ProvisionedLocalStorageInByte { get; set; }
        /// <summary>
        /// Storage in bytes that has been provisioned on the device including both local and cloud
        /// </summary>
        long? ProvisionedStorageInByte { get; set; }
        /// <summary>Total size taken up by backups in bytes</summary>
        long? TotalBackupSizeInByte { get; set; }
        /// <summary>Total local storage capacity in device in bytes.</summary>
        long? TotalLocalStorageInByte { get; set; }
        /// <summary>Total storage available on the device in bytes.</summary>
        long? TotalStorageInByte { get; set; }
        /// <summary>Local Storage that is being currently used in bytes</summary>
        long? UsingLocalStorageInByte { get; set; }
        /// <summary>Storage that is being currently used in bytes including both local and cloud</summary>
        long? UsingStorageInByte { get; set; }

    }
}