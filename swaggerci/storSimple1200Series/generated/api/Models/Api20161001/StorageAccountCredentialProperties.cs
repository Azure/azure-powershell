// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Extensions;

    /// <summary>Storage account properties</summary>
    public partial class StorageAccountCredentialProperties :
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IStorageAccountCredentialProperties,
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IStorageAccountCredentialPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AccessKey" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IAsymmetricEncryptedSecret _accessKey;

        /// <summary>The details of the storage account password</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IAsymmetricEncryptedSecret AccessKey { get => (this._accessKey = this._accessKey ?? new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.AsymmetricEncryptedSecret()); set => this._accessKey = value; }

        /// <summary>Algorithm used to encrypt "Value"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.EncryptionAlgorithm? AccessKeyEncryptionAlgorithm { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IAsymmetricEncryptedSecretInternal)AccessKey).EncryptionAlgorithm; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IAsymmetricEncryptedSecretInternal)AccessKey).EncryptionAlgorithm = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.EncryptionAlgorithm)""); }

        /// <summary>Thumbprint certificate that was used to encrypt "Value"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Inlined)]
        public string AccessKeyEncryptionCertificateThumbprint { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IAsymmetricEncryptedSecretInternal)AccessKey).EncryptionCertificateThumbprint; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IAsymmetricEncryptedSecretInternal)AccessKey).EncryptionCertificateThumbprint = value ?? null; }

        /// <summary>
        /// The value of the secret itself. If the secret is in plaintext then EncryptionAlgorithm will be none and EncryptionCertThumbprint
        /// will be null.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Inlined)]
        public string AccessKeyValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IAsymmetricEncryptedSecretInternal)AccessKey).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IAsymmetricEncryptedSecretInternal)AccessKey).Value = value ?? null; }

        /// <summary>Backing field for <see cref="CloudType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.CloudType _cloudType;

        /// <summary>The cloud service provider</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.CloudType CloudType { get => this._cloudType; set => this._cloudType = value; }

        /// <summary>Backing field for <see cref="EnableSsl" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.SslStatus _enableSsl;

        /// <summary>SSL needs to be enabled or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.SslStatus EnableSsl { get => this._enableSsl; set => this._enableSsl = value; }

        /// <summary>Backing field for <see cref="EndPoint" /> property.</summary>
        private string _endPoint;

        /// <summary>The storage endpoint</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public string EndPoint { get => this._endPoint; set => this._endPoint = value; }

        /// <summary>Backing field for <see cref="Location" /> property.</summary>
        private string _location;

        /// <summary>The storage account's geo location</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public string Location { get => this._location; set => this._location = value; }

        /// <summary>Backing field for <see cref="Login" /> property.</summary>
        private string _login;

        /// <summary>The storage account login</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public string Login { get => this._login; set => this._login = value; }

        /// <summary>Internal Acessors for AccessKey</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IAsymmetricEncryptedSecret Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IStorageAccountCredentialPropertiesInternal.AccessKey { get => (this._accessKey = this._accessKey ?? new Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.AsymmetricEncryptedSecret()); set { {_accessKey = value;} } }

        /// <summary>Creates an new <see cref="StorageAccountCredentialProperties" /> instance.</summary>
        public StorageAccountCredentialProperties()
        {

        }
    }
    /// Storage account properties
    public partial interface IStorageAccountCredentialProperties :
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.IJsonSerializable
    {
        /// <summary>Algorithm used to encrypt "Value"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Algorithm used to encrypt ""Value""",
        SerializedName = @"encryptionAlgorithm",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.EncryptionAlgorithm) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.EncryptionAlgorithm? AccessKeyEncryptionAlgorithm { get; set; }
        /// <summary>Thumbprint certificate that was used to encrypt "Value"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Thumbprint certificate that was used to encrypt ""Value""",
        SerializedName = @"encryptionCertificateThumbprint",
        PossibleTypes = new [] { typeof(string) })]
        string AccessKeyEncryptionCertificateThumbprint { get; set; }
        /// <summary>
        /// The value of the secret itself. If the secret is in plaintext then EncryptionAlgorithm will be none and EncryptionCertThumbprint
        /// will be null.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The value of the secret itself. If the secret is in plaintext then EncryptionAlgorithm will be none and EncryptionCertThumbprint will be null.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(string) })]
        string AccessKeyValue { get; set; }
        /// <summary>The cloud service provider</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The cloud service provider",
        SerializedName = @"cloudType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.CloudType) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.CloudType CloudType { get; set; }
        /// <summary>SSL needs to be enabled or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"SSL needs to be enabled or not",
        SerializedName = @"enableSSL",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.SslStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.SslStatus EnableSsl { get; set; }
        /// <summary>The storage endpoint</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The storage endpoint",
        SerializedName = @"endPoint",
        PossibleTypes = new [] { typeof(string) })]
        string EndPoint { get; set; }
        /// <summary>The storage account's geo location</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The storage account's geo location",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string Location { get; set; }
        /// <summary>The storage account login</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The storage account login",
        SerializedName = @"login",
        PossibleTypes = new [] { typeof(string) })]
        string Login { get; set; }

    }
    /// Storage account properties
    internal partial interface IStorageAccountCredentialPropertiesInternal

    {
        /// <summary>The details of the storage account password</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IAsymmetricEncryptedSecret AccessKey { get; set; }
        /// <summary>Algorithm used to encrypt "Value"</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.EncryptionAlgorithm? AccessKeyEncryptionAlgorithm { get; set; }
        /// <summary>Thumbprint certificate that was used to encrypt "Value"</summary>
        string AccessKeyEncryptionCertificateThumbprint { get; set; }
        /// <summary>
        /// The value of the secret itself. If the secret is in plaintext then EncryptionAlgorithm will be none and EncryptionCertThumbprint
        /// will be null.
        /// </summary>
        string AccessKeyValue { get; set; }
        /// <summary>The cloud service provider</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.CloudType CloudType { get; set; }
        /// <summary>SSL needs to be enabled or not</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.SslStatus EnableSsl { get; set; }
        /// <summary>The storage endpoint</summary>
        string EndPoint { get; set; }
        /// <summary>The storage account's geo location</summary>
        string Location { get; set; }
        /// <summary>The storage account login</summary>
        string Login { get; set; }

    }
}