// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Extensions;

    /// <summary>Properties of the update profile</summary>
    public partial class UpdatesProperties :
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IUpdatesProperties,
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Models.Api20161001.IUpdatesPropertiesInternal
    {

        /// <summary>Backing field for <see cref="DeviceLastScannedTime" /> property.</summary>
        private global::System.DateTime? _deviceLastScannedTime;

        /// <summary>The last time when the device did an update scan.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public global::System.DateTime? DeviceLastScannedTime { get => this._deviceLastScannedTime; set => this._deviceLastScannedTime = value; }

        /// <summary>Backing field for <see cref="DeviceVersion" /> property.</summary>
        private string _deviceVersion;

        /// <summary>The current Device version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public string DeviceVersion { get => this._deviceVersion; set => this._deviceVersion = value; }

        /// <summary>Backing field for <see cref="InProgressDownloadJobId" /> property.</summary>
        private string _inProgressDownloadJobId;

        /// <summary>
        /// If a download is in progress, this field contains the JobId of that particular download job
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public string InProgressDownloadJobId { get => this._inProgressDownloadJobId; set => this._inProgressDownloadJobId = value; }

        /// <summary>Backing field for <see cref="InProgressDownloadJobStartedTime" /> property.</summary>
        private global::System.DateTime? _inProgressDownloadJobStartedTime;

        /// <summary>The time when the currently running download (if any) started</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public global::System.DateTime? InProgressDownloadJobStartedTime { get => this._inProgressDownloadJobStartedTime; set => this._inProgressDownloadJobStartedTime = value; }

        /// <summary>Backing field for <see cref="InProgressInstallJobId" /> property.</summary>
        private string _inProgressInstallJobId;

        /// <summary>
        /// If an install is in progress, this field contains the JobId of that particular install job
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public string InProgressInstallJobId { get => this._inProgressInstallJobId; set => this._inProgressInstallJobId = value; }

        /// <summary>Backing field for <see cref="InProgressInstallJobStartedTime" /> property.</summary>
        private global::System.DateTime? _inProgressInstallJobStartedTime;

        /// <summary>The time when the currently running install (if any) started</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public global::System.DateTime? InProgressInstallJobStartedTime { get => this._inProgressInstallJobStartedTime; set => this._inProgressInstallJobStartedTime = value; }

        /// <summary>Backing field for <see cref="InProgressScanStartedTime" /> property.</summary>
        private global::System.DateTime? _inProgressScanStartedTime;

        /// <summary>The time when the currently running scan (if any) started</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public global::System.DateTime? InProgressScanStartedTime { get => this._inProgressScanStartedTime; set => this._inProgressScanStartedTime = value; }

        /// <summary>Backing field for <see cref="LastCompletedDownloadJobTime" /> property.</summary>
        private global::System.DateTime? _lastCompletedDownloadJobTime;

        /// <summary>
        /// The time when the last Download job was completed (success|cancelled|failed) on the device.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public global::System.DateTime? LastCompletedDownloadJobTime { get => this._lastCompletedDownloadJobTime; set => this._lastCompletedDownloadJobTime = value; }

        /// <summary>Backing field for <see cref="LastCompletedInstallJobTime" /> property.</summary>
        private global::System.DateTime? _lastCompletedInstallJobTime;

        /// <summary>
        /// The time when the last Install job was completed (success|cancelled|failed) on the device.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public global::System.DateTime? LastCompletedInstallJobTime { get => this._lastCompletedInstallJobTime; set => this._lastCompletedInstallJobTime = value; }

        /// <summary>Backing field for <see cref="LastCompletedScanTime" /> property.</summary>
        private global::System.DateTime? _lastCompletedScanTime;

        /// <summary>
        /// The time when the last scan job was completed (success|cancelled|failed) on the device.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public global::System.DateTime? LastCompletedScanTime { get => this._lastCompletedScanTime; set => this._lastCompletedScanTime = value; }

        /// <summary>Backing field for <see cref="RebootRequiredForInstall" /> property.</summary>
        private bool? _rebootRequiredForInstall;

        /// <summary>
        /// Set to true if RegularUpdatesAvailable is true and if at least one of the updateItems detected has needs a reboot to install.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public bool? RebootRequiredForInstall { get => this._rebootRequiredForInstall; set => this._rebootRequiredForInstall = value; }

        /// <summary>Backing field for <see cref="RegularUpdatesAvailable" /> property.</summary>
        private bool? _regularUpdatesAvailable;

        /// <summary>
        /// Set to true if regular updates were detected for the current version of the device.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public bool? RegularUpdatesAvailable { get => this._regularUpdatesAvailable; set => this._regularUpdatesAvailable = value; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.UpdateOperation? _status;

        /// <summary>The current update operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.UpdateOperation? Status { get => this._status; set => this._status = value; }

        /// <summary>Backing field for <see cref="TotalItemsPendingForDownload" /> property.</summary>
        private int? _totalItemsPendingForDownload;

        /// <summary>The total number of items pending for download.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public int? TotalItemsPendingForDownload { get => this._totalItemsPendingForDownload; set => this._totalItemsPendingForDownload = value; }

        /// <summary>Backing field for <see cref="TotalItemsPendingForInstall" /> property.</summary>
        private int? _totalItemsPendingForInstall;

        /// <summary>The total number of items pending for install.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.PropertyOrigin.Owned)]
        public int? TotalItemsPendingForInstall { get => this._totalItemsPendingForInstall; set => this._totalItemsPendingForInstall = value; }

        /// <summary>Creates an new <see cref="UpdatesProperties" /> instance.</summary>
        public UpdatesProperties()
        {

        }
    }
    /// Properties of the update profile
    public partial interface IUpdatesProperties :
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.IJsonSerializable
    {
        /// <summary>The last time when the device did an update scan.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The last time when the device did an update scan.",
        SerializedName = @"deviceLastScannedTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? DeviceLastScannedTime { get; set; }
        /// <summary>The current Device version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The current Device version.",
        SerializedName = @"deviceVersion",
        PossibleTypes = new [] { typeof(string) })]
        string DeviceVersion { get; set; }
        /// <summary>
        /// If a download is in progress, this field contains the JobId of that particular download job
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If a download is in progress, this field contains the JobId of that particular download job",
        SerializedName = @"inProgressDownloadJobId",
        PossibleTypes = new [] { typeof(string) })]
        string InProgressDownloadJobId { get; set; }
        /// <summary>The time when the currently running download (if any) started</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time when the currently running download (if any) started",
        SerializedName = @"inProgressDownloadJobStartedTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? InProgressDownloadJobStartedTime { get; set; }
        /// <summary>
        /// If an install is in progress, this field contains the JobId of that particular install job
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If an install is in progress, this field contains the JobId of that particular install job",
        SerializedName = @"inProgressInstallJobId",
        PossibleTypes = new [] { typeof(string) })]
        string InProgressInstallJobId { get; set; }
        /// <summary>The time when the currently running install (if any) started</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time when the currently running install (if any) started",
        SerializedName = @"inProgressInstallJobStartedTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? InProgressInstallJobStartedTime { get; set; }
        /// <summary>The time when the currently running scan (if any) started</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time when the currently running scan (if any) started",
        SerializedName = @"inProgressScanStartedTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? InProgressScanStartedTime { get; set; }
        /// <summary>
        /// The time when the last Download job was completed (success|cancelled|failed) on the device.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time when the last Download job was completed (success|cancelled|failed) on the device.",
        SerializedName = @"lastCompletedDownloadJobTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastCompletedDownloadJobTime { get; set; }
        /// <summary>
        /// The time when the last Install job was completed (success|cancelled|failed) on the device.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time when the last Install job was completed (success|cancelled|failed) on the device.",
        SerializedName = @"lastCompletedInstallJobTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastCompletedInstallJobTime { get; set; }
        /// <summary>
        /// The time when the last scan job was completed (success|cancelled|failed) on the device.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time when the last scan job was completed (success|cancelled|failed) on the device.",
        SerializedName = @"lastCompletedScanTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastCompletedScanTime { get; set; }
        /// <summary>
        /// Set to true if RegularUpdatesAvailable is true and if at least one of the updateItems detected has needs a reboot to install.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Set to true if RegularUpdatesAvailable is true and if at least one of the updateItems detected has needs a reboot to install.",
        SerializedName = @"rebootRequiredForInstall",
        PossibleTypes = new [] { typeof(bool) })]
        bool? RebootRequiredForInstall { get; set; }
        /// <summary>
        /// Set to true if regular updates were detected for the current version of the device.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Set to true if regular updates were detected for the current version of the device.",
        SerializedName = @"regularUpdatesAvailable",
        PossibleTypes = new [] { typeof(bool) })]
        bool? RegularUpdatesAvailable { get; set; }
        /// <summary>The current update operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The current update operation.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.UpdateOperation) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.UpdateOperation? Status { get; set; }
        /// <summary>The total number of items pending for download.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The total number of items pending for download.",
        SerializedName = @"totalItemsPendingForDownload",
        PossibleTypes = new [] { typeof(int) })]
        int? TotalItemsPendingForDownload { get; set; }
        /// <summary>The total number of items pending for install.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The total number of items pending for install.",
        SerializedName = @"totalItemsPendingForInstall",
        PossibleTypes = new [] { typeof(int) })]
        int? TotalItemsPendingForInstall { get; set; }

    }
    /// Properties of the update profile
    internal partial interface IUpdatesPropertiesInternal

    {
        /// <summary>The last time when the device did an update scan.</summary>
        global::System.DateTime? DeviceLastScannedTime { get; set; }
        /// <summary>The current Device version.</summary>
        string DeviceVersion { get; set; }
        /// <summary>
        /// If a download is in progress, this field contains the JobId of that particular download job
        /// </summary>
        string InProgressDownloadJobId { get; set; }
        /// <summary>The time when the currently running download (if any) started</summary>
        global::System.DateTime? InProgressDownloadJobStartedTime { get; set; }
        /// <summary>
        /// If an install is in progress, this field contains the JobId of that particular install job
        /// </summary>
        string InProgressInstallJobId { get; set; }
        /// <summary>The time when the currently running install (if any) started</summary>
        global::System.DateTime? InProgressInstallJobStartedTime { get; set; }
        /// <summary>The time when the currently running scan (if any) started</summary>
        global::System.DateTime? InProgressScanStartedTime { get; set; }
        /// <summary>
        /// The time when the last Download job was completed (success|cancelled|failed) on the device.
        /// </summary>
        global::System.DateTime? LastCompletedDownloadJobTime { get; set; }
        /// <summary>
        /// The time when the last Install job was completed (success|cancelled|failed) on the device.
        /// </summary>
        global::System.DateTime? LastCompletedInstallJobTime { get; set; }
        /// <summary>
        /// The time when the last scan job was completed (success|cancelled|failed) on the device.
        /// </summary>
        global::System.DateTime? LastCompletedScanTime { get; set; }
        /// <summary>
        /// Set to true if RegularUpdatesAvailable is true and if at least one of the updateItems detected has needs a reboot to install.
        /// </summary>
        bool? RebootRequiredForInstall { get; set; }
        /// <summary>
        /// Set to true if regular updates were detected for the current version of the device.
        /// </summary>
        bool? RegularUpdatesAvailable { get; set; }
        /// <summary>The current update operation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorSimple.Support.UpdateOperation? Status { get; set; }
        /// <summary>The total number of items pending for download.</summary>
        int? TotalItemsPendingForDownload { get; set; }
        /// <summary>The total number of items pending for install.</summary>
        int? TotalItemsPendingForInstall { get; set; }

    }
}