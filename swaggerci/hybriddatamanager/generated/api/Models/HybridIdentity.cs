// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Extensions;

    public partial class HybridIdentity :
        Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.IHybridIdentity,
        Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.IHybridIdentityInternal
    {

        /// <summary>Backing field for <see cref="DataManagerName" /> property.</summary>
        private string _dataManagerName;

        /// <summary>
        /// The name of the DataManager Resource within the specified resource group. DataManager names must be between 3 and 24 characters
        /// in length and use any alphanumeric and underscore only
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.Hybrid.PropertyOrigin.Owned)]
        public string DataManagerName { get => this._dataManagerName; set => this._dataManagerName = value; }

        /// <summary>Backing field for <see cref="DataServiceName" /> property.</summary>
        private string _dataServiceName;

        /// <summary>The name of the data service that is being queried.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.Hybrid.PropertyOrigin.Owned)]
        public string DataServiceName { get => this._dataServiceName; set => this._dataServiceName = value; }

        /// <summary>Backing field for <see cref="DataStoreName" /> property.</summary>
        private string _dataStoreName;

        /// <summary>The data store/repository name queried.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.Hybrid.PropertyOrigin.Owned)]
        public string DataStoreName { get => this._dataStoreName; set => this._dataStoreName = value; }

        /// <summary>Backing field for <see cref="DataStoreTypeName" /> property.</summary>
        private string _dataStoreTypeName;

        /// <summary>The data store/repository type name for which details are needed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.Hybrid.PropertyOrigin.Owned)]
        public string DataStoreTypeName { get => this._dataStoreTypeName; set => this._dataStoreTypeName = value; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>Resource identity path</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.Hybrid.PropertyOrigin.Owned)]
        public string Id { get => this._id; set => this._id = value; }

        /// <summary>Backing field for <see cref="JobDefinitionName" /> property.</summary>
        private string _jobDefinitionName;

        /// <summary>The job definition name that is being queried.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.Hybrid.PropertyOrigin.Owned)]
        public string JobDefinitionName { get => this._jobDefinitionName; set => this._jobDefinitionName = value; }

        /// <summary>Backing field for <see cref="JobId" /> property.</summary>
        private string _jobId;

        /// <summary>The job id of the job queried.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.Hybrid.PropertyOrigin.Owned)]
        public string JobId { get => this._jobId; set => this._jobId = value; }

        /// <summary>Backing field for <see cref="PublicKeyName" /> property.</summary>
        private string _publicKeyName;

        /// <summary>Name of the public key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.Hybrid.PropertyOrigin.Owned)]
        public string PublicKeyName { get => this._publicKeyName; set => this._publicKeyName = value; }

        /// <summary>Backing field for <see cref="ResourceGroupName" /> property.</summary>
        private string _resourceGroupName;

        /// <summary>The Resource Group Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.Hybrid.PropertyOrigin.Owned)]
        public string ResourceGroupName { get => this._resourceGroupName; set => this._resourceGroupName = value; }

        /// <summary>Backing field for <see cref="SubscriptionId" /> property.</summary>
        private string _subscriptionId;

        /// <summary>The Subscription Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.Hybrid.PropertyOrigin.Owned)]
        public string SubscriptionId { get => this._subscriptionId; set => this._subscriptionId = value; }

        /// <summary>Creates an new <see cref="HybridIdentity" /> instance.</summary>
        public HybridIdentity()
        {

        }
    }
    public partial interface IHybridIdentity :
        Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The name of the DataManager Resource within the specified resource group. DataManager names must be between 3 and 24 characters
        /// in length and use any alphanumeric and underscore only
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the DataManager Resource within the specified resource group. DataManager names must be between 3 and 24 characters in length and use any alphanumeric and underscore only",
        SerializedName = @"dataManagerName",
        PossibleTypes = new [] { typeof(string) })]
        string DataManagerName { get; set; }
        /// <summary>The name of the data service that is being queried.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the data service that is being queried.",
        SerializedName = @"dataServiceName",
        PossibleTypes = new [] { typeof(string) })]
        string DataServiceName { get; set; }
        /// <summary>The data store/repository name queried.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The data store/repository name queried.",
        SerializedName = @"dataStoreName",
        PossibleTypes = new [] { typeof(string) })]
        string DataStoreName { get; set; }
        /// <summary>The data store/repository type name for which details are needed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The data store/repository type name for which details are needed.",
        SerializedName = @"dataStoreTypeName",
        PossibleTypes = new [] { typeof(string) })]
        string DataStoreTypeName { get; set; }
        /// <summary>Resource identity path</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource identity path",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get; set; }
        /// <summary>The job definition name that is being queried.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The job definition name that is being queried.",
        SerializedName = @"jobDefinitionName",
        PossibleTypes = new [] { typeof(string) })]
        string JobDefinitionName { get; set; }
        /// <summary>The job id of the job queried.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The job id of the job queried.",
        SerializedName = @"jobId",
        PossibleTypes = new [] { typeof(string) })]
        string JobId { get; set; }
        /// <summary>Name of the public key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the public key.",
        SerializedName = @"publicKeyName",
        PossibleTypes = new [] { typeof(string) })]
        string PublicKeyName { get; set; }
        /// <summary>The Resource Group Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Resource Group Name",
        SerializedName = @"resourceGroupName",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceGroupName { get; set; }
        /// <summary>The Subscription Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Subscription Id",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionId { get; set; }

    }
    internal partial interface IHybridIdentityInternal

    {
        /// <summary>
        /// The name of the DataManager Resource within the specified resource group. DataManager names must be between 3 and 24 characters
        /// in length and use any alphanumeric and underscore only
        /// </summary>
        string DataManagerName { get; set; }
        /// <summary>The name of the data service that is being queried.</summary>
        string DataServiceName { get; set; }
        /// <summary>The data store/repository name queried.</summary>
        string DataStoreName { get; set; }
        /// <summary>The data store/repository type name for which details are needed.</summary>
        string DataStoreTypeName { get; set; }
        /// <summary>Resource identity path</summary>
        string Id { get; set; }
        /// <summary>The job definition name that is being queried.</summary>
        string JobDefinitionName { get; set; }
        /// <summary>The job id of the job queried.</summary>
        string JobId { get; set; }
        /// <summary>Name of the public key.</summary>
        string PublicKeyName { get; set; }
        /// <summary>The Resource Group Name</summary>
        string ResourceGroupName { get; set; }
        /// <summary>The Subscription Id</summary>
        string SubscriptionId { get; set; }

    }
}