// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Extensions;

    /// <summary>Job Properties</summary>
    public partial class JobProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IJobProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IJobProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IJobProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Json.JsonObject json ? new JobProperties(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Json.JsonObject into a new instance of <see cref="JobProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal JobProperties(Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_detail = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Json.JsonObject>("details"), out var __jsonDetails) ? Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.JobDetails.FromJson(__jsonDetails) : Detail;}
            {_isCancellable = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Json.JsonString>("isCancellable"), out var __jsonIsCancellable) ? (string)__jsonIsCancellable : (string)IsCancellable;}
            {_bytesProcessed = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Json.JsonNumber>("bytesProcessed"), out var __jsonBytesProcessed) ? (long?)__jsonBytesProcessed : BytesProcessed;}
            {_itemsProcessed = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Json.JsonNumber>("itemsProcessed"), out var __jsonItemsProcessed) ? (long?)__jsonItemsProcessed : ItemsProcessed;}
            {_totalBytesToProcess = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Json.JsonNumber>("totalBytesToProcess"), out var __jsonTotalBytesToProcess) ? (long?)__jsonTotalBytesToProcess : TotalBytesToProcess;}
            {_totalItemsToProcess = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Json.JsonNumber>("totalItemsToProcess"), out var __jsonTotalItemsToProcess) ? (long?)__jsonTotalItemsToProcess : TotalItemsToProcess;}
            {_dataSourceName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Json.JsonString>("dataSourceName"), out var __jsonDataSourceName) ? (string)__jsonDataSourceName : (string)DataSourceName;}
            {_dataSinkName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Json.JsonString>("dataSinkName"), out var __jsonDataSinkName) ? (string)__jsonDataSinkName : (string)DataSinkName;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="JobProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="JobProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != this._detail ? (Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Json.JsonNode) this._detail.ToJson(null,serializationMode) : null, "details" ,container.Add );
            AddIf( null != (((object)this._isCancellable)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Json.JsonString(this._isCancellable.ToString()) : null, "isCancellable" ,container.Add );
            AddIf( null != this._bytesProcessed ? (Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Json.JsonNumber((long)this._bytesProcessed) : null, "bytesProcessed" ,container.Add );
            AddIf( null != this._itemsProcessed ? (Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Json.JsonNumber((long)this._itemsProcessed) : null, "itemsProcessed" ,container.Add );
            AddIf( null != this._totalBytesToProcess ? (Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Json.JsonNumber((long)this._totalBytesToProcess) : null, "totalBytesToProcess" ,container.Add );
            AddIf( null != this._totalItemsToProcess ? (Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Json.JsonNumber((long)this._totalItemsToProcess) : null, "totalItemsToProcess" ,container.Add );
            AddIf( null != (((object)this._dataSourceName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Json.JsonString(this._dataSourceName.ToString()) : null, "dataSourceName" ,container.Add );
            AddIf( null != (((object)this._dataSinkName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Json.JsonString(this._dataSinkName.ToString()) : null, "dataSinkName" ,container.Add );
            AfterToJson(ref container);
            return container;
        }
    }
}