// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Extensions;

    /// <summary>PublicKey Properties</summary>
    public partial class PublicKeyProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IPublicKeyProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IPublicKeyPropertiesInternal
    {

        /// <summary>Backing field for <see cref="DataServiceLevel1Key" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IKey _dataServiceLevel1Key;

        /// <summary>Level one public key for encryption</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.Hybrid.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IKey DataServiceLevel1Key { get => (this._dataServiceLevel1Key = this._dataServiceLevel1Key ?? new Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.Key()); set => this._dataServiceLevel1Key = value; }

        /// <summary>
        /// The maximum byte size that can be encrypted by the key. For a key size larger than the size, break into chunks and encrypt
        /// each chunk, append each encrypted chunk with : to mark the end of the chunk.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.Hybrid.PropertyOrigin.Inlined)]
        public int DataServiceLevel1KeyEncryptionChunkSizeInByte { get => ((Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IKeyInternal)DataServiceLevel1Key).EncryptionChunkSizeInByte; set => ((Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IKeyInternal)DataServiceLevel1Key).EncryptionChunkSizeInByte = value ; }

        /// <summary>Exponent of the encryption key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.Hybrid.PropertyOrigin.Inlined)]
        public string DataServiceLevel1KeyExponent { get => ((Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IKeyInternal)DataServiceLevel1Key).Exponent; set => ((Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IKeyInternal)DataServiceLevel1Key).Exponent = value ; }

        /// <summary>Modulus of the encryption key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.Hybrid.PropertyOrigin.Inlined)]
        public string DataServiceLevel1KeyModulu { get => ((Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IKeyInternal)DataServiceLevel1Key).Modulu; set => ((Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IKeyInternal)DataServiceLevel1Key).Modulu = value ; }

        /// <summary>Backing field for <see cref="DataServiceLevel2Key" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IKey _dataServiceLevel2Key;

        /// <summary>Level two public key for encryption</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.Hybrid.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IKey DataServiceLevel2Key { get => (this._dataServiceLevel2Key = this._dataServiceLevel2Key ?? new Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.Key()); set => this._dataServiceLevel2Key = value; }

        /// <summary>
        /// The maximum byte size that can be encrypted by the key. For a key size larger than the size, break into chunks and encrypt
        /// each chunk, append each encrypted chunk with : to mark the end of the chunk.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.Hybrid.PropertyOrigin.Inlined)]
        public int DataServiceLevel2KeyEncryptionChunkSizeInByte { get => ((Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IKeyInternal)DataServiceLevel2Key).EncryptionChunkSizeInByte; set => ((Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IKeyInternal)DataServiceLevel2Key).EncryptionChunkSizeInByte = value ; }

        /// <summary>Exponent of the encryption key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.Hybrid.PropertyOrigin.Inlined)]
        public string DataServiceLevel2KeyExponent { get => ((Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IKeyInternal)DataServiceLevel2Key).Exponent; set => ((Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IKeyInternal)DataServiceLevel2Key).Exponent = value ; }

        /// <summary>Modulus of the encryption key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.Hybrid.PropertyOrigin.Inlined)]
        public string DataServiceLevel2KeyModulu { get => ((Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IKeyInternal)DataServiceLevel2Key).Modulu; set => ((Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IKeyInternal)DataServiceLevel2Key).Modulu = value ; }

        /// <summary>Internal Acessors for DataServiceLevel1Key</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IKey Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IPublicKeyPropertiesInternal.DataServiceLevel1Key { get => (this._dataServiceLevel1Key = this._dataServiceLevel1Key ?? new Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.Key()); set { {_dataServiceLevel1Key = value;} } }

        /// <summary>Internal Acessors for DataServiceLevel2Key</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IKey Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IPublicKeyPropertiesInternal.DataServiceLevel2Key { get => (this._dataServiceLevel2Key = this._dataServiceLevel2Key ?? new Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.Key()); set { {_dataServiceLevel2Key = value;} } }

        /// <summary>Creates an new <see cref="PublicKeyProperties" /> instance.</summary>
        public PublicKeyProperties()
        {

        }
    }
    /// PublicKey Properties
    public partial interface IPublicKeyProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The maximum byte size that can be encrypted by the key. For a key size larger than the size, break into chunks and encrypt
        /// each chunk, append each encrypted chunk with : to mark the end of the chunk.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The maximum byte size that can be encrypted by the key. For a key size larger than the size, break into chunks and encrypt each chunk, append each encrypted chunk with : to mark the end of the chunk.",
        SerializedName = @"encryptionChunkSizeInBytes",
        PossibleTypes = new [] { typeof(int) })]
        int DataServiceLevel1KeyEncryptionChunkSizeInByte { get; set; }
        /// <summary>Exponent of the encryption key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Exponent of the encryption key.",
        SerializedName = @"keyExponent",
        PossibleTypes = new [] { typeof(string) })]
        string DataServiceLevel1KeyExponent { get; set; }
        /// <summary>Modulus of the encryption key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Modulus of the encryption key.",
        SerializedName = @"keyModulus",
        PossibleTypes = new [] { typeof(string) })]
        string DataServiceLevel1KeyModulu { get; set; }
        /// <summary>
        /// The maximum byte size that can be encrypted by the key. For a key size larger than the size, break into chunks and encrypt
        /// each chunk, append each encrypted chunk with : to mark the end of the chunk.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The maximum byte size that can be encrypted by the key. For a key size larger than the size, break into chunks and encrypt each chunk, append each encrypted chunk with : to mark the end of the chunk.",
        SerializedName = @"encryptionChunkSizeInBytes",
        PossibleTypes = new [] { typeof(int) })]
        int DataServiceLevel2KeyEncryptionChunkSizeInByte { get; set; }
        /// <summary>Exponent of the encryption key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Exponent of the encryption key.",
        SerializedName = @"keyExponent",
        PossibleTypes = new [] { typeof(string) })]
        string DataServiceLevel2KeyExponent { get; set; }
        /// <summary>Modulus of the encryption key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Modulus of the encryption key.",
        SerializedName = @"keyModulus",
        PossibleTypes = new [] { typeof(string) })]
        string DataServiceLevel2KeyModulu { get; set; }

    }
    /// PublicKey Properties
    internal partial interface IPublicKeyPropertiesInternal

    {
        /// <summary>Level one public key for encryption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IKey DataServiceLevel1Key { get; set; }
        /// <summary>
        /// The maximum byte size that can be encrypted by the key. For a key size larger than the size, break into chunks and encrypt
        /// each chunk, append each encrypted chunk with : to mark the end of the chunk.
        /// </summary>
        int DataServiceLevel1KeyEncryptionChunkSizeInByte { get; set; }
        /// <summary>Exponent of the encryption key.</summary>
        string DataServiceLevel1KeyExponent { get; set; }
        /// <summary>Modulus of the encryption key.</summary>
        string DataServiceLevel1KeyModulu { get; set; }
        /// <summary>Level two public key for encryption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IKey DataServiceLevel2Key { get; set; }
        /// <summary>
        /// The maximum byte size that can be encrypted by the key. For a key size larger than the size, break into chunks and encrypt
        /// each chunk, append each encrypted chunk with : to mark the end of the chunk.
        /// </summary>
        int DataServiceLevel2KeyEncryptionChunkSizeInByte { get; set; }
        /// <summary>Exponent of the encryption key.</summary>
        string DataServiceLevel2KeyExponent { get; set; }
        /// <summary>Modulus of the encryption key.</summary>
        string DataServiceLevel2KeyModulu { get; set; }

    }
}