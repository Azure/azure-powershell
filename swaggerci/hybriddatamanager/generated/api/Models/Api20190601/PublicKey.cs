// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Extensions;

    /// <summary>Public key</summary>
    public partial class PublicKey :
        Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IPublicKey,
        Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IPublicKeyInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IDmsBaseObject"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IDmsBaseObject __dmsBaseObject = new Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.DmsBaseObject();

        /// <summary>
        /// The maximum byte size that can be encrypted by the key. For a key size larger than the size, break into chunks and encrypt
        /// each chunk, append each encrypted chunk with : to mark the end of the chunk.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.Hybrid.PropertyOrigin.Inlined)]
        public int DataServiceLevel1KeyEncryptionChunkSizeInByte { get => ((Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IPublicKeyPropertiesInternal)Property).DataServiceLevel1KeyEncryptionChunkSizeInByte; set => ((Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IPublicKeyPropertiesInternal)Property).DataServiceLevel1KeyEncryptionChunkSizeInByte = value ; }

        /// <summary>Exponent of the encryption key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.Hybrid.PropertyOrigin.Inlined)]
        public string DataServiceLevel1KeyExponent { get => ((Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IPublicKeyPropertiesInternal)Property).DataServiceLevel1KeyExponent; set => ((Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IPublicKeyPropertiesInternal)Property).DataServiceLevel1KeyExponent = value ; }

        /// <summary>Modulus of the encryption key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.Hybrid.PropertyOrigin.Inlined)]
        public string DataServiceLevel1KeyModulu { get => ((Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IPublicKeyPropertiesInternal)Property).DataServiceLevel1KeyModulu; set => ((Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IPublicKeyPropertiesInternal)Property).DataServiceLevel1KeyModulu = value ; }

        /// <summary>
        /// The maximum byte size that can be encrypted by the key. For a key size larger than the size, break into chunks and encrypt
        /// each chunk, append each encrypted chunk with : to mark the end of the chunk.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.Hybrid.PropertyOrigin.Inlined)]
        public int DataServiceLevel2KeyEncryptionChunkSizeInByte { get => ((Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IPublicKeyPropertiesInternal)Property).DataServiceLevel2KeyEncryptionChunkSizeInByte; set => ((Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IPublicKeyPropertiesInternal)Property).DataServiceLevel2KeyEncryptionChunkSizeInByte = value ; }

        /// <summary>Exponent of the encryption key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.Hybrid.PropertyOrigin.Inlined)]
        public string DataServiceLevel2KeyExponent { get => ((Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IPublicKeyPropertiesInternal)Property).DataServiceLevel2KeyExponent; set => ((Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IPublicKeyPropertiesInternal)Property).DataServiceLevel2KeyExponent = value ; }

        /// <summary>Modulus of the encryption key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.Hybrid.PropertyOrigin.Inlined)]
        public string DataServiceLevel2KeyModulu { get => ((Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IPublicKeyPropertiesInternal)Property).DataServiceLevel2KeyModulu; set => ((Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IPublicKeyPropertiesInternal)Property).DataServiceLevel2KeyModulu = value ; }

        /// <summary>Id of the object.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.Hybrid.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IDmsBaseObjectInternal)__dmsBaseObject).Id; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IDmsBaseObjectInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IDmsBaseObjectInternal)__dmsBaseObject).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IDmsBaseObjectInternal)__dmsBaseObject).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IDmsBaseObjectInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IDmsBaseObjectInternal)__dmsBaseObject).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IDmsBaseObjectInternal)__dmsBaseObject).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IDmsBaseObjectInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IDmsBaseObjectInternal)__dmsBaseObject).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IDmsBaseObjectInternal)__dmsBaseObject).Type = value; }

        /// <summary>Internal Acessors for DataServiceLevel1Key</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IKey Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IPublicKeyInternal.DataServiceLevel1Key { get => ((Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IPublicKeyPropertiesInternal)Property).DataServiceLevel1Key; set => ((Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IPublicKeyPropertiesInternal)Property).DataServiceLevel1Key = value; }

        /// <summary>Internal Acessors for DataServiceLevel2Key</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IKey Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IPublicKeyInternal.DataServiceLevel2Key { get => ((Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IPublicKeyPropertiesInternal)Property).DataServiceLevel2Key; set => ((Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IPublicKeyPropertiesInternal)Property).DataServiceLevel2Key = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IPublicKeyProperties Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IPublicKeyInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.PublicKeyProperties()); set { {_property = value;} } }

        /// <summary>Name of the object.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.Hybrid.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IDmsBaseObjectInternal)__dmsBaseObject).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IPublicKeyProperties _property;

        /// <summary>Public key property.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.Hybrid.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IPublicKeyProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.PublicKeyProperties()); set => this._property = value; }

        /// <summary>Type of the object.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.Hybrid.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IDmsBaseObjectInternal)__dmsBaseObject).Type; }

        /// <summary>Creates an new <see cref="PublicKey" /> instance.</summary>
        public PublicKey()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__dmsBaseObject), __dmsBaseObject);
            await eventListener.AssertObjectIsValid(nameof(__dmsBaseObject), __dmsBaseObject);
        }
    }
    /// Public key
    public partial interface IPublicKey :
        Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IDmsBaseObject
    {
        /// <summary>
        /// The maximum byte size that can be encrypted by the key. For a key size larger than the size, break into chunks and encrypt
        /// each chunk, append each encrypted chunk with : to mark the end of the chunk.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The maximum byte size that can be encrypted by the key. For a key size larger than the size, break into chunks and encrypt each chunk, append each encrypted chunk with : to mark the end of the chunk.",
        SerializedName = @"encryptionChunkSizeInBytes",
        PossibleTypes = new [] { typeof(int) })]
        int DataServiceLevel1KeyEncryptionChunkSizeInByte { get; set; }
        /// <summary>Exponent of the encryption key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Exponent of the encryption key.",
        SerializedName = @"keyExponent",
        PossibleTypes = new [] { typeof(string) })]
        string DataServiceLevel1KeyExponent { get; set; }
        /// <summary>Modulus of the encryption key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Modulus of the encryption key.",
        SerializedName = @"keyModulus",
        PossibleTypes = new [] { typeof(string) })]
        string DataServiceLevel1KeyModulu { get; set; }
        /// <summary>
        /// The maximum byte size that can be encrypted by the key. For a key size larger than the size, break into chunks and encrypt
        /// each chunk, append each encrypted chunk with : to mark the end of the chunk.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The maximum byte size that can be encrypted by the key. For a key size larger than the size, break into chunks and encrypt each chunk, append each encrypted chunk with : to mark the end of the chunk.",
        SerializedName = @"encryptionChunkSizeInBytes",
        PossibleTypes = new [] { typeof(int) })]
        int DataServiceLevel2KeyEncryptionChunkSizeInByte { get; set; }
        /// <summary>Exponent of the encryption key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Exponent of the encryption key.",
        SerializedName = @"keyExponent",
        PossibleTypes = new [] { typeof(string) })]
        string DataServiceLevel2KeyExponent { get; set; }
        /// <summary>Modulus of the encryption key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Modulus of the encryption key.",
        SerializedName = @"keyModulus",
        PossibleTypes = new [] { typeof(string) })]
        string DataServiceLevel2KeyModulu { get; set; }

    }
    /// Public key
    internal partial interface IPublicKeyInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IDmsBaseObjectInternal
    {
        /// <summary>Level one public key for encryption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IKey DataServiceLevel1Key { get; set; }
        /// <summary>
        /// The maximum byte size that can be encrypted by the key. For a key size larger than the size, break into chunks and encrypt
        /// each chunk, append each encrypted chunk with : to mark the end of the chunk.
        /// </summary>
        int DataServiceLevel1KeyEncryptionChunkSizeInByte { get; set; }
        /// <summary>Exponent of the encryption key.</summary>
        string DataServiceLevel1KeyExponent { get; set; }
        /// <summary>Modulus of the encryption key.</summary>
        string DataServiceLevel1KeyModulu { get; set; }
        /// <summary>Level two public key for encryption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IKey DataServiceLevel2Key { get; set; }
        /// <summary>
        /// The maximum byte size that can be encrypted by the key. For a key size larger than the size, break into chunks and encrypt
        /// each chunk, append each encrypted chunk with : to mark the end of the chunk.
        /// </summary>
        int DataServiceLevel2KeyEncryptionChunkSizeInByte { get; set; }
        /// <summary>Exponent of the encryption key.</summary>
        string DataServiceLevel2KeyExponent { get; set; }
        /// <summary>Modulus of the encryption key.</summary>
        string DataServiceLevel2KeyModulu { get; set; }
        /// <summary>Public key property.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IPublicKeyProperties Property { get; set; }

    }
}