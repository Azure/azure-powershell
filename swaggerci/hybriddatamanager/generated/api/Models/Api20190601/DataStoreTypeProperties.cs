// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Extensions;

    /// <summary>Data Store Type properties.</summary>
    public partial class DataStoreTypeProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IDataStoreTypeProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Models.Api20190601.IDataStoreTypePropertiesInternal
    {

        /// <summary>Backing field for <see cref="RepositoryType" /> property.</summary>
        private string _repositoryType;

        /// <summary>
        /// Arm type for the manager resource to which the data source type is associated. This is optional.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.Hybrid.PropertyOrigin.Owned)]
        public string RepositoryType { get => this._repositoryType; set => this._repositoryType = value; }

        /// <summary>Backing field for <see cref="State" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Support.State _state;

        /// <summary>State of the data store type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.Hybrid.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Support.State State { get => this._state; set => this._state = value; }

        /// <summary>Backing field for <see cref="SupportedDataServicesAsSink" /> property.</summary>
        private string[] _supportedDataServicesAsSink;

        /// <summary>Supported data services where it can be used as a sink.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.Hybrid.PropertyOrigin.Owned)]
        public string[] SupportedDataServicesAsSink { get => this._supportedDataServicesAsSink; set => this._supportedDataServicesAsSink = value; }

        /// <summary>Backing field for <see cref="SupportedDataServicesAsSource" /> property.</summary>
        private string[] _supportedDataServicesAsSource;

        /// <summary>Supported data services where it can be used as a source.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.Hybrid.PropertyOrigin.Owned)]
        public string[] SupportedDataServicesAsSource { get => this._supportedDataServicesAsSource; set => this._supportedDataServicesAsSource = value; }

        /// <summary>Creates an new <see cref="DataStoreTypeProperties" /> instance.</summary>
        public DataStoreTypeProperties()
        {

        }
    }
    /// Data Store Type properties.
    public partial interface IDataStoreTypeProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Arm type for the manager resource to which the data source type is associated. This is optional.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Arm type for the manager resource to which the data source type is associated. This is optional.",
        SerializedName = @"repositoryType",
        PossibleTypes = new [] { typeof(string) })]
        string RepositoryType { get; set; }
        /// <summary>State of the data store type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"State of the data store type.",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Support.State) })]
        Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Support.State State { get; set; }
        /// <summary>Supported data services where it can be used as a sink.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Supported data services where it can be used as a sink.",
        SerializedName = @"supportedDataServicesAsSink",
        PossibleTypes = new [] { typeof(string) })]
        string[] SupportedDataServicesAsSink { get; set; }
        /// <summary>Supported data services where it can be used as a source.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Supported data services where it can be used as a source.",
        SerializedName = @"supportedDataServicesAsSource",
        PossibleTypes = new [] { typeof(string) })]
        string[] SupportedDataServicesAsSource { get; set; }

    }
    /// Data Store Type properties.
    internal partial interface IDataStoreTypePropertiesInternal

    {
        /// <summary>
        /// Arm type for the manager resource to which the data source type is associated. This is optional.
        /// </summary>
        string RepositoryType { get; set; }
        /// <summary>State of the data store type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Hybrid.Support.State State { get; set; }
        /// <summary>Supported data services where it can be used as a sink.</summary>
        string[] SupportedDataServicesAsSink { get; set; }
        /// <summary>Supported data services where it can be used as a source.</summary>
        string[] SupportedDataServicesAsSource { get; set; }

    }
}