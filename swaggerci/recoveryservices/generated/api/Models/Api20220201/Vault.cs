// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Extensions;

    /// <summary>Resource information, as returned by the resource provider.</summary>
    public partial class Vault :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVault,
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultInternal,
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.ITrackedResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.ITrackedResource __trackedResource = new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.TrackedResource();

        /// <summary>Backup storage version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.BackupStorageVersion? BackupStorageVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).BackupStorageVersion; }

        /// <summary>Enabling/Disabling the Double Encryption state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.InfrastructureEncryptionState? EncryptionInfrastructureEncryption { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).EncryptionInfrastructureEncryption; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).EncryptionInfrastructureEncryption = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.InfrastructureEncryptionState)""); }

        /// <summary>Optional ETag.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public string Etag { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IResourceInternal)__trackedResource).Etag; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IResourceInternal)__trackedResource).Etag = value ?? null; }

        /// <summary>Resource Id represents the complete path to the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IResourceInternal)__trackedResource).Id; }

        /// <summary>Backing field for <see cref="Identity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IIdentityData _identity;

        /// <summary>Identity for the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IIdentityData Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IdentityData()); set => this._identity = value; }

        /// <summary>The principal ID of resource identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public string IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IIdentityDataInternal)Identity).PrincipalId; }

        /// <summary>The tenant ID of resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public string IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IIdentityDataInternal)Identity).TenantId; }

        /// <summary>
        /// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity
        /// and a set of user-assigned identities. The type 'None' will remove any identities.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.ResourceIdentityType? IdentityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IIdentityDataInternal)Identity).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IIdentityDataInternal)Identity).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.ResourceIdentityType)""); }

        /// <summary>
        /// The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be
        /// ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IIdentityDataUserAssignedIdentities IdentityUserAssignedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IIdentityDataInternal)Identity).UserAssignedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IIdentityDataInternal)Identity).UserAssignedIdentity = value ?? null /* model class */; }

        /// <summary>
        /// Indicate that system assigned identity should be used. Mutually exclusive with 'userAssignedIdentity' field
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public bool? KekIdentityUseSystemAssignedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).KekIdentityUseSystemAssignedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).KekIdentityUseSystemAssignedIdentity = value ?? default(bool); }

        /// <summary>
        /// The user assigned identity to be used to grant permissions in case the type of identity used is UserAssigned
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public string KekIdentityUserAssignedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).KekIdentityUserAssignedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).KekIdentityUserAssignedIdentity = value ?? null; }

        /// <summary>The key uri of the Customer Managed Key</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public string KeyVaultPropertyKeyUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).KeyVaultPropertyKeyUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).KeyVaultPropertyKeyUri = value ?? null; }

        /// <summary>Resource location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.ITrackedResourceInternal)__trackedResource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.ITrackedResourceInternal)__trackedResource).Location = value ; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IResourceInternal)__trackedResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IResourceInternal)__trackedResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IResourceInternal)__trackedResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IResourceInternal)__trackedResource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IResourceInternal)__trackedResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IResourceInternal)__trackedResource).Type = value; }

        /// <summary>Internal Acessors for BackupStorageVersion</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.BackupStorageVersion? Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultInternal.BackupStorageVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).BackupStorageVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).BackupStorageVersion = value; }

        /// <summary>Internal Acessors for Encryption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesEncryption Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultInternal.Encryption { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).Encryption; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).Encryption = value; }

        /// <summary>Internal Acessors for EncryptionKekIdentity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.ICmkKekIdentity Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultInternal.EncryptionKekIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).EncryptionKekIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).EncryptionKekIdentity = value; }

        /// <summary>Internal Acessors for EncryptionKeyVaultProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.ICmkKeyVaultProperties Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultInternal.EncryptionKeyVaultProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).EncryptionKeyVaultProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).EncryptionKeyVaultProperty = value; }

        /// <summary>Internal Acessors for Identity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IIdentityData Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultInternal.Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IdentityData()); set { {_identity = value;} } }

        /// <summary>Internal Acessors for IdentityPrincipalId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultInternal.IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IIdentityDataInternal)Identity).PrincipalId; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IIdentityDataInternal)Identity).PrincipalId = value; }

        /// <summary>Internal Acessors for IdentityTenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultInternal.IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IIdentityDataInternal)Identity).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IIdentityDataInternal)Identity).TenantId = value; }

        /// <summary>Internal Acessors for MoveDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesMoveDetails Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultInternal.MoveDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).MoveDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).MoveDetail = value; }

        /// <summary>Internal Acessors for MoveDetailCompletionTimeUtc</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultInternal.MoveDetailCompletionTimeUtc { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).MoveDetailCompletionTimeUtc; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).MoveDetailCompletionTimeUtc = value; }

        /// <summary>Internal Acessors for MoveDetailOperationId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultInternal.MoveDetailOperationId { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).MoveDetailOperationId; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).MoveDetailOperationId = value; }

        /// <summary>Internal Acessors for MoveDetailSourceResourceId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultInternal.MoveDetailSourceResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).MoveDetailSourceResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).MoveDetailSourceResourceId = value; }

        /// <summary>Internal Acessors for MoveDetailStartTimeUtc</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultInternal.MoveDetailStartTimeUtc { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).MoveDetailStartTimeUtc; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).MoveDetailStartTimeUtc = value; }

        /// <summary>Internal Acessors for MoveDetailTargetResourceId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultInternal.MoveDetailTargetResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).MoveDetailTargetResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).MoveDetailTargetResourceId = value; }

        /// <summary>Internal Acessors for MoveState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.ResourceMoveState? Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultInternal.MoveState { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).MoveState; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).MoveState = value; }

        /// <summary>Internal Acessors for PrivateEndpointConnection</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IPrivateEndpointConnectionVaultProperties[] Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultInternal.PrivateEndpointConnection { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).PrivateEndpointConnection; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).PrivateEndpointConnection = value; }

        /// <summary>Internal Acessors for PrivateEndpointStateForBackup</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.VaultPrivateEndpointState? Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultInternal.PrivateEndpointStateForBackup { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).PrivateEndpointStateForBackup; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).PrivateEndpointStateForBackup = value; }

        /// <summary>Internal Acessors for PrivateEndpointStateForSiteRecovery</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.VaultPrivateEndpointState? Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultInternal.PrivateEndpointStateForSiteRecovery { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).PrivateEndpointStateForSiteRecovery; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).PrivateEndpointStateForSiteRecovery = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultProperties Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.VaultProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for Sku</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.ISku Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultInternal.Sku { get => (this._sku = this._sku ?? new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.Sku()); set { {_sku = value;} } }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.ISystemData Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultInternal.SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.SystemData()); set { {_systemData = value;} } }

        /// <summary>Internal Acessors for UpgradeDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IUpgradeDetails Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultInternal.UpgradeDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).UpgradeDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).UpgradeDetail = value; }

        /// <summary>Internal Acessors for UpgradeDetailEndTimeUtc</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultInternal.UpgradeDetailEndTimeUtc { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).UpgradeDetailEndTimeUtc; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).UpgradeDetailEndTimeUtc = value; }

        /// <summary>Internal Acessors for UpgradeDetailLastUpdatedTimeUtc</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultInternal.UpgradeDetailLastUpdatedTimeUtc { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).UpgradeDetailLastUpdatedTimeUtc; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).UpgradeDetailLastUpdatedTimeUtc = value; }

        /// <summary>Internal Acessors for UpgradeDetailMessage</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultInternal.UpgradeDetailMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).UpgradeDetailMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).UpgradeDetailMessage = value; }

        /// <summary>Internal Acessors for UpgradeDetailOperationId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultInternal.UpgradeDetailOperationId { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).UpgradeDetailOperationId; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).UpgradeDetailOperationId = value; }

        /// <summary>Internal Acessors for UpgradeDetailPreviousResourceId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultInternal.UpgradeDetailPreviousResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).UpgradeDetailPreviousResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).UpgradeDetailPreviousResourceId = value; }

        /// <summary>Internal Acessors for UpgradeDetailStartTimeUtc</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultInternal.UpgradeDetailStartTimeUtc { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).UpgradeDetailStartTimeUtc; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).UpgradeDetailStartTimeUtc = value; }

        /// <summary>Internal Acessors for UpgradeDetailStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.VaultUpgradeState? Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultInternal.UpgradeDetailStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).UpgradeDetailStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).UpgradeDetailStatus = value; }

        /// <summary>Internal Acessors for UpgradeDetailTriggerType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.TriggerType? Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultInternal.UpgradeDetailTriggerType { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).UpgradeDetailTriggerType; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).UpgradeDetailTriggerType = value; }

        /// <summary>Internal Acessors for UpgradeDetailUpgradedResourceId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultInternal.UpgradeDetailUpgradedResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).UpgradeDetailUpgradedResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).UpgradeDetailUpgradedResourceId = value; }

        /// <summary>End Time of the Resource Move Operation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public global::System.DateTime? MoveDetailCompletionTimeUtc { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).MoveDetailCompletionTimeUtc; }

        /// <summary>OperationId of the Resource Move Operation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public string MoveDetailOperationId { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).MoveDetailOperationId; }

        /// <summary>Source Resource of the Resource Move Operation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public string MoveDetailSourceResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).MoveDetailSourceResourceId; }

        /// <summary>Start Time of the Resource Move Operation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public global::System.DateTime? MoveDetailStartTimeUtc { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).MoveDetailStartTimeUtc; }

        /// <summary>Target Resource of the Resource Move Operation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public string MoveDetailTargetResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).MoveDetailTargetResourceId; }

        /// <summary>The State of the Resource after the move operation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.ResourceMoveState? MoveState { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).MoveState; }

        /// <summary>Resource name associated with the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IResourceInternal)__trackedResource).Name; }

        /// <summary>List of private endpoint connection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IPrivateEndpointConnectionVaultProperties[] PrivateEndpointConnection { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).PrivateEndpointConnection; }

        /// <summary>Private endpoint state for backup.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.VaultPrivateEndpointState? PrivateEndpointStateForBackup { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).PrivateEndpointStateForBackup; }

        /// <summary>Private endpoint state for site recovery.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.VaultPrivateEndpointState? PrivateEndpointStateForSiteRecovery { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).PrivateEndpointStateForSiteRecovery; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultProperties _property;

        /// <summary>Properties of the vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.VaultProperties()); set => this._property = value; }

        /// <summary>Provisioning State.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).ProvisioningState; }

        /// <summary>Backing field for <see cref="Sku" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.ISku _sku;

        /// <summary>Identifies the unique system identifier for each Azure resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.ISku Sku { get => (this._sku = this._sku ?? new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.Sku()); set => this._sku = value; }

        /// <summary>The sku capacity</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public string SkuCapacity { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.ISkuInternal)Sku).Capacity; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.ISkuInternal)Sku).Capacity = value ?? null; }

        /// <summary>The sku family</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public string SkuFamily { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.ISkuInternal)Sku).Family; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.ISkuInternal)Sku).Family = value ?? null; }

        /// <summary>The Sku name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.SkuName? SkuName { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.ISkuInternal)Sku).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.ISkuInternal)Sku).Name = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.SkuName)""); }

        /// <summary>The sku size</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public string SkuSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.ISkuInternal)Sku).Size; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.ISkuInternal)Sku).Size = value ?? null; }

        /// <summary>The Sku tier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public string SkuTier { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.ISkuInternal)Sku).Tier; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.ISkuInternal)Sku).Tier = value ?? null; }

        /// <summary>Backing field for <see cref="SystemData" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.ISystemData _systemData;

        /// <summary>Metadata pertaining to creation and last modification of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.ISystemData SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.SystemData()); }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.ISystemDataInternal)SystemData).CreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.ISystemDataInternal)SystemData).CreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.ISystemDataInternal)SystemData).CreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.ISystemDataInternal)SystemData).CreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.ISystemDataInternal)SystemData).CreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.ISystemDataInternal)SystemData).CreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.CreatedByType)""); }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.ISystemDataInternal)SystemData).LastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.ISystemDataInternal)SystemData).LastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.ISystemDataInternal)SystemData).LastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.ISystemDataInternal)SystemData).LastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.ISystemDataInternal)SystemData).LastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.ISystemDataInternal)SystemData).LastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.CreatedByType)""); }

        /// <summary>Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.ITrackedResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.ITrackedResourceInternal)__trackedResource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.ITrackedResourceInternal)__trackedResource).Tag = value ?? null /* model class */; }

        /// <summary>
        /// Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IResourceInternal)__trackedResource).Type; }

        /// <summary>UTC time at which the upgrade operation has ended.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public global::System.DateTime? UpgradeDetailEndTimeUtc { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).UpgradeDetailEndTimeUtc; }

        /// <summary>UTC time at which the upgrade operation status was last updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public global::System.DateTime? UpgradeDetailLastUpdatedTimeUtc { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).UpgradeDetailLastUpdatedTimeUtc; }

        /// <summary>Message to the user containing information about the upgrade operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public string UpgradeDetailMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).UpgradeDetailMessage; }

        /// <summary>ID of the vault upgrade operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public string UpgradeDetailOperationId { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).UpgradeDetailOperationId; }

        /// <summary>Resource ID of the vault before the upgrade.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public string UpgradeDetailPreviousResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).UpgradeDetailPreviousResourceId; }

        /// <summary>UTC time at which the upgrade operation has started.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public global::System.DateTime? UpgradeDetailStartTimeUtc { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).UpgradeDetailStartTimeUtc; }

        /// <summary>Status of the vault upgrade operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.VaultUpgradeState? UpgradeDetailStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).UpgradeDetailStatus; }

        /// <summary>The way the vault upgrade was triggered.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.TriggerType? UpgradeDetailTriggerType { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).UpgradeDetailTriggerType; }

        /// <summary>Resource ID of the upgraded vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public string UpgradeDetailUpgradedResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesInternal)Property).UpgradeDetailUpgradedResourceId; }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__trackedResource), __trackedResource);
            await eventListener.AssertObjectIsValid(nameof(__trackedResource), __trackedResource);
        }

        /// <summary>Creates an new <see cref="Vault" /> instance.</summary>
        public Vault()
        {

        }
    }
    /// Resource information, as returned by the resource provider.
    public partial interface IVault :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.ITrackedResource
    {
        /// <summary>Backup storage version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Backup storage version",
        SerializedName = @"backupStorageVersion",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.BackupStorageVersion) })]
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.BackupStorageVersion? BackupStorageVersion { get;  }
        /// <summary>Enabling/Disabling the Double Encryption state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enabling/Disabling the Double Encryption state",
        SerializedName = @"infrastructureEncryption",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.InfrastructureEncryptionState) })]
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.InfrastructureEncryptionState? EncryptionInfrastructureEncryption { get; set; }
        /// <summary>The principal ID of resource identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The principal ID of resource identity.",
        SerializedName = @"principalId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityPrincipalId { get;  }
        /// <summary>The tenant ID of resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The tenant ID of resource.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityTenantId { get;  }
        /// <summary>
        /// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity
        /// and a set of user-assigned identities. The type 'None' will remove any identities.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.ResourceIdentityType) })]
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.ResourceIdentityType? IdentityType { get; set; }
        /// <summary>
        /// The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be
        /// ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
        SerializedName = @"userAssignedIdentities",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IIdentityDataUserAssignedIdentities) })]
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IIdentityDataUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }
        /// <summary>
        /// Indicate that system assigned identity should be used. Mutually exclusive with 'userAssignedIdentity' field
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicate that system assigned identity should be used. Mutually exclusive with 'userAssignedIdentity' field",
        SerializedName = @"useSystemAssignedIdentity",
        PossibleTypes = new [] { typeof(bool) })]
        bool? KekIdentityUseSystemAssignedIdentity { get; set; }
        /// <summary>
        /// The user assigned identity to be used to grant permissions in case the type of identity used is UserAssigned
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The user assigned identity to be used to grant permissions in case the type of identity used is UserAssigned",
        SerializedName = @"userAssignedIdentity",
        PossibleTypes = new [] { typeof(string) })]
        string KekIdentityUserAssignedIdentity { get; set; }
        /// <summary>The key uri of the Customer Managed Key</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The key uri of the Customer Managed Key",
        SerializedName = @"keyUri",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultPropertyKeyUri { get; set; }
        /// <summary>End Time of the Resource Move Operation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"End Time of the Resource Move Operation",
        SerializedName = @"completionTimeUtc",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? MoveDetailCompletionTimeUtc { get;  }
        /// <summary>OperationId of the Resource Move Operation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"OperationId of the Resource Move Operation",
        SerializedName = @"operationId",
        PossibleTypes = new [] { typeof(string) })]
        string MoveDetailOperationId { get;  }
        /// <summary>Source Resource of the Resource Move Operation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Source Resource of the Resource Move Operation",
        SerializedName = @"sourceResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string MoveDetailSourceResourceId { get;  }
        /// <summary>Start Time of the Resource Move Operation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Start Time of the Resource Move Operation",
        SerializedName = @"startTimeUtc",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? MoveDetailStartTimeUtc { get;  }
        /// <summary>Target Resource of the Resource Move Operation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Target Resource of the Resource Move Operation",
        SerializedName = @"targetResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string MoveDetailTargetResourceId { get;  }
        /// <summary>The State of the Resource after the move operation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The State of the Resource after the move operation",
        SerializedName = @"moveState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.ResourceMoveState) })]
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.ResourceMoveState? MoveState { get;  }
        /// <summary>List of private endpoint connection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of private endpoint connection.",
        SerializedName = @"privateEndpointConnections",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IPrivateEndpointConnectionVaultProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IPrivateEndpointConnectionVaultProperties[] PrivateEndpointConnection { get;  }
        /// <summary>Private endpoint state for backup.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Private endpoint state for backup.",
        SerializedName = @"privateEndpointStateForBackup",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.VaultPrivateEndpointState) })]
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.VaultPrivateEndpointState? PrivateEndpointStateForBackup { get;  }
        /// <summary>Private endpoint state for site recovery.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Private endpoint state for site recovery.",
        SerializedName = @"privateEndpointStateForSiteRecovery",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.VaultPrivateEndpointState) })]
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.VaultPrivateEndpointState? PrivateEndpointStateForSiteRecovery { get;  }
        /// <summary>Provisioning State.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Provisioning State.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>The sku capacity</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The sku capacity",
        SerializedName = @"capacity",
        PossibleTypes = new [] { typeof(string) })]
        string SkuCapacity { get; set; }
        /// <summary>The sku family</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The sku family",
        SerializedName = @"family",
        PossibleTypes = new [] { typeof(string) })]
        string SkuFamily { get; set; }
        /// <summary>The Sku name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Sku name.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.SkuName) })]
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.SkuName? SkuName { get; set; }
        /// <summary>The sku size</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The sku size",
        SerializedName = @"size",
        PossibleTypes = new [] { typeof(string) })]
        string SkuSize { get; set; }
        /// <summary>The Sku tier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Sku tier.",
        SerializedName = @"tier",
        PossibleTypes = new [] { typeof(string) })]
        string SkuTier { get; set; }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp of resource creation (UTC).",
        SerializedName = @"createdAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity that created the resource.",
        SerializedName = @"createdBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity that created the resource.",
        SerializedName = @"createdByType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.CreatedByType) })]
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.CreatedByType? SystemDataCreatedByType { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity that last modified the resource.",
        SerializedName = @"lastModifiedAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity that last modified the resource.",
        SerializedName = @"lastModifiedBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity that last modified the resource.",
        SerializedName = @"lastModifiedByType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.CreatedByType) })]
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.CreatedByType? SystemDataLastModifiedByType { get; set; }
        /// <summary>UTC time at which the upgrade operation has ended.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"UTC time at which the upgrade operation has ended.",
        SerializedName = @"endTimeUtc",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? UpgradeDetailEndTimeUtc { get;  }
        /// <summary>UTC time at which the upgrade operation status was last updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"UTC time at which the upgrade operation status was last updated.",
        SerializedName = @"lastUpdatedTimeUtc",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? UpgradeDetailLastUpdatedTimeUtc { get;  }
        /// <summary>Message to the user containing information about the upgrade operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Message to the user containing information about the upgrade operation.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string UpgradeDetailMessage { get;  }
        /// <summary>ID of the vault upgrade operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"ID of the vault upgrade operation.",
        SerializedName = @"operationId",
        PossibleTypes = new [] { typeof(string) })]
        string UpgradeDetailOperationId { get;  }
        /// <summary>Resource ID of the vault before the upgrade.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Resource ID of the vault before the upgrade.",
        SerializedName = @"previousResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string UpgradeDetailPreviousResourceId { get;  }
        /// <summary>UTC time at which the upgrade operation has started.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"UTC time at which the upgrade operation has started.",
        SerializedName = @"startTimeUtc",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? UpgradeDetailStartTimeUtc { get;  }
        /// <summary>Status of the vault upgrade operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Status of the vault upgrade operation.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.VaultUpgradeState) })]
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.VaultUpgradeState? UpgradeDetailStatus { get;  }
        /// <summary>The way the vault upgrade was triggered.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The way the vault upgrade was triggered.",
        SerializedName = @"triggerType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.TriggerType) })]
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.TriggerType? UpgradeDetailTriggerType { get;  }
        /// <summary>Resource ID of the upgraded vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Resource ID of the upgraded vault.",
        SerializedName = @"upgradedResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string UpgradeDetailUpgradedResourceId { get;  }

    }
    /// Resource information, as returned by the resource provider.
    internal partial interface IVaultInternal :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.ITrackedResourceInternal
    {
        /// <summary>Backup storage version</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.BackupStorageVersion? BackupStorageVersion { get; set; }
        /// <summary>Customer Managed Key details of the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesEncryption Encryption { get; set; }
        /// <summary>Enabling/Disabling the Double Encryption state</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.InfrastructureEncryptionState? EncryptionInfrastructureEncryption { get; set; }
        /// <summary>The details of the identity used for CMK</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.ICmkKekIdentity EncryptionKekIdentity { get; set; }
        /// <summary>The properties of the Key Vault which hosts CMK</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.ICmkKeyVaultProperties EncryptionKeyVaultProperty { get; set; }
        /// <summary>Identity for the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IIdentityData Identity { get; set; }
        /// <summary>The principal ID of resource identity.</summary>
        string IdentityPrincipalId { get; set; }
        /// <summary>The tenant ID of resource.</summary>
        string IdentityTenantId { get; set; }
        /// <summary>
        /// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity
        /// and a set of user-assigned identities. The type 'None' will remove any identities.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.ResourceIdentityType? IdentityType { get; set; }
        /// <summary>
        /// The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be
        /// ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IIdentityDataUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }
        /// <summary>
        /// Indicate that system assigned identity should be used. Mutually exclusive with 'userAssignedIdentity' field
        /// </summary>
        bool? KekIdentityUseSystemAssignedIdentity { get; set; }
        /// <summary>
        /// The user assigned identity to be used to grant permissions in case the type of identity used is UserAssigned
        /// </summary>
        string KekIdentityUserAssignedIdentity { get; set; }
        /// <summary>The key uri of the Customer Managed Key</summary>
        string KeyVaultPropertyKeyUri { get; set; }
        /// <summary>The details of the latest move operation performed on the Azure Resource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultPropertiesMoveDetails MoveDetail { get; set; }
        /// <summary>End Time of the Resource Move Operation</summary>
        global::System.DateTime? MoveDetailCompletionTimeUtc { get; set; }
        /// <summary>OperationId of the Resource Move Operation</summary>
        string MoveDetailOperationId { get; set; }
        /// <summary>Source Resource of the Resource Move Operation</summary>
        string MoveDetailSourceResourceId { get; set; }
        /// <summary>Start Time of the Resource Move Operation</summary>
        global::System.DateTime? MoveDetailStartTimeUtc { get; set; }
        /// <summary>Target Resource of the Resource Move Operation</summary>
        string MoveDetailTargetResourceId { get; set; }
        /// <summary>The State of the Resource after the move operation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.ResourceMoveState? MoveState { get; set; }
        /// <summary>List of private endpoint connection.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IPrivateEndpointConnectionVaultProperties[] PrivateEndpointConnection { get; set; }
        /// <summary>Private endpoint state for backup.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.VaultPrivateEndpointState? PrivateEndpointStateForBackup { get; set; }
        /// <summary>Private endpoint state for site recovery.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.VaultPrivateEndpointState? PrivateEndpointStateForSiteRecovery { get; set; }
        /// <summary>Properties of the vault.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IVaultProperties Property { get; set; }
        /// <summary>Provisioning State.</summary>
        string ProvisioningState { get; set; }
        /// <summary>Identifies the unique system identifier for each Azure resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.ISku Sku { get; set; }
        /// <summary>The sku capacity</summary>
        string SkuCapacity { get; set; }
        /// <summary>The sku family</summary>
        string SkuFamily { get; set; }
        /// <summary>The Sku name.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.SkuName? SkuName { get; set; }
        /// <summary>The sku size</summary>
        string SkuSize { get; set; }
        /// <summary>The Sku tier.</summary>
        string SkuTier { get; set; }
        /// <summary>Metadata pertaining to creation and last modification of the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.ISystemData SystemData { get; set; }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        global::System.DateTime? SystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        string SystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.CreatedByType? SystemDataCreatedByType { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        global::System.DateTime? SystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        string SystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.CreatedByType? SystemDataLastModifiedByType { get; set; }
        /// <summary>Details for upgrading vault.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IUpgradeDetails UpgradeDetail { get; set; }
        /// <summary>UTC time at which the upgrade operation has ended.</summary>
        global::System.DateTime? UpgradeDetailEndTimeUtc { get; set; }
        /// <summary>UTC time at which the upgrade operation status was last updated.</summary>
        global::System.DateTime? UpgradeDetailLastUpdatedTimeUtc { get; set; }
        /// <summary>Message to the user containing information about the upgrade operation.</summary>
        string UpgradeDetailMessage { get; set; }
        /// <summary>ID of the vault upgrade operation.</summary>
        string UpgradeDetailOperationId { get; set; }
        /// <summary>Resource ID of the vault before the upgrade.</summary>
        string UpgradeDetailPreviousResourceId { get; set; }
        /// <summary>UTC time at which the upgrade operation has started.</summary>
        global::System.DateTime? UpgradeDetailStartTimeUtc { get; set; }
        /// <summary>Status of the vault upgrade operation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.VaultUpgradeState? UpgradeDetailStatus { get; set; }
        /// <summary>The way the vault upgrade was triggered.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.TriggerType? UpgradeDetailTriggerType { get; set; }
        /// <summary>Resource ID of the upgraded vault.</summary>
        string UpgradeDetailUpgradedResourceId { get; set; }

    }
}