// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Extensions;

    /// <summary>Certificate details representing the Vault credentials for ACS.</summary>
    public partial class ResourceCertificateAndAcsDetails :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IResourceCertificateAndAcsDetails,
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IResourceCertificateAndAcsDetailsInternal,
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IResourceCertificateDetails"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IResourceCertificateDetails __resourceCertificateDetails = new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.ResourceCertificateDetails();

        /// <summary>
        /// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public string AuthType { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IResourceCertificateDetailsInternal)__resourceCertificateDetails).AuthType; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IResourceCertificateDetailsInternal)__resourceCertificateDetails).AuthType = value ; }

        /// <summary>The base64 encoded certificate raw data string.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public byte[] Certificate { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IResourceCertificateDetailsInternal)__resourceCertificateDetails).Certificate; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IResourceCertificateDetailsInternal)__resourceCertificateDetails).Certificate = value ?? null /* byte array */; }

        /// <summary>Certificate friendly name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public string FriendlyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IResourceCertificateDetailsInternal)__resourceCertificateDetails).FriendlyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IResourceCertificateDetailsInternal)__resourceCertificateDetails).FriendlyName = value ?? null; }

        /// <summary>Backing field for <see cref="GlobalAcsHostName" /> property.</summary>
        private string _globalAcsHostName;

        /// <summary>Acs mgmt host name to connect to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string GlobalAcsHostName { get => this._globalAcsHostName; set => this._globalAcsHostName = value; }

        /// <summary>Backing field for <see cref="GlobalAcsNamespace" /> property.</summary>
        private string _globalAcsNamespace;

        /// <summary>ACS namespace name - tenant for our service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string GlobalAcsNamespace { get => this._globalAcsNamespace; set => this._globalAcsNamespace = value; }

        /// <summary>Backing field for <see cref="GlobalAcsRpRealm" /> property.</summary>
        private string _globalAcsRpRealm;

        /// <summary>Global ACS namespace RP realm.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string GlobalAcsRpRealm { get => this._globalAcsRpRealm; set => this._globalAcsRpRealm = value; }

        /// <summary>Certificate issuer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public string Issuer { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IResourceCertificateDetailsInternal)__resourceCertificateDetails).Issuer; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IResourceCertificateDetailsInternal)__resourceCertificateDetails).Issuer = value ?? null; }

        /// <summary>Resource ID of the vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public long? ResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IResourceCertificateDetailsInternal)__resourceCertificateDetails).ResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IResourceCertificateDetailsInternal)__resourceCertificateDetails).ResourceId = value ?? default(long); }

        /// <summary>Certificate Subject Name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public string Subject { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IResourceCertificateDetailsInternal)__resourceCertificateDetails).Subject; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IResourceCertificateDetailsInternal)__resourceCertificateDetails).Subject = value ?? null; }

        /// <summary>Certificate thumbprint.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public string Thumbprint { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IResourceCertificateDetailsInternal)__resourceCertificateDetails).Thumbprint; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IResourceCertificateDetailsInternal)__resourceCertificateDetails).Thumbprint = value ?? null; }

        /// <summary>Certificate Validity start Date time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public global::System.DateTime? ValidFrom { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IResourceCertificateDetailsInternal)__resourceCertificateDetails).ValidFrom; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IResourceCertificateDetailsInternal)__resourceCertificateDetails).ValidFrom = value ?? default(global::System.DateTime); }

        /// <summary>Certificate Validity End Date time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inherited)]
        public global::System.DateTime? ValidTo { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IResourceCertificateDetailsInternal)__resourceCertificateDetails).ValidTo; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IResourceCertificateDetailsInternal)__resourceCertificateDetails).ValidTo = value ?? default(global::System.DateTime); }

        /// <summary>Creates an new <see cref="ResourceCertificateAndAcsDetails" /> instance.</summary>
        public ResourceCertificateAndAcsDetails()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resourceCertificateDetails), __resourceCertificateDetails);
            await eventListener.AssertObjectIsValid(nameof(__resourceCertificateDetails), __resourceCertificateDetails);
        }
    }
    /// Certificate details representing the Vault credentials for ACS.
    public partial interface IResourceCertificateAndAcsDetails :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IResourceCertificateDetails
    {
        /// <summary>Acs mgmt host name to connect to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Acs mgmt host name to connect to.",
        SerializedName = @"globalAcsHostName",
        PossibleTypes = new [] { typeof(string) })]
        string GlobalAcsHostName { get; set; }
        /// <summary>ACS namespace name - tenant for our service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"ACS namespace name - tenant for our service.",
        SerializedName = @"globalAcsNamespace",
        PossibleTypes = new [] { typeof(string) })]
        string GlobalAcsNamespace { get; set; }
        /// <summary>Global ACS namespace RP realm.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Global ACS namespace RP realm.",
        SerializedName = @"globalAcsRPRealm",
        PossibleTypes = new [] { typeof(string) })]
        string GlobalAcsRpRealm { get; set; }

    }
    /// Certificate details representing the Vault credentials for ACS.
    internal partial interface IResourceCertificateAndAcsDetailsInternal :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IResourceCertificateDetailsInternal
    {
        /// <summary>Acs mgmt host name to connect to.</summary>
        string GlobalAcsHostName { get; set; }
        /// <summary>ACS namespace name - tenant for our service.</summary>
        string GlobalAcsNamespace { get; set; }
        /// <summary>Global ACS namespace RP realm.</summary>
        string GlobalAcsRpRealm { get; set; }

    }
}