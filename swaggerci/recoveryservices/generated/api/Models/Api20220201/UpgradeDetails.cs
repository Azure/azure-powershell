// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Extensions;

    /// <summary>Details for upgrading vault.</summary>
    public partial class UpgradeDetails :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IUpgradeDetails,
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IUpgradeDetailsInternal
    {

        /// <summary>Backing field for <see cref="EndTimeUtc" /> property.</summary>
        private global::System.DateTime? _endTimeUtc;

        /// <summary>UTC time at which the upgrade operation has ended.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public global::System.DateTime? EndTimeUtc { get => this._endTimeUtc; }

        /// <summary>Backing field for <see cref="LastUpdatedTimeUtc" /> property.</summary>
        private global::System.DateTime? _lastUpdatedTimeUtc;

        /// <summary>UTC time at which the upgrade operation status was last updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public global::System.DateTime? LastUpdatedTimeUtc { get => this._lastUpdatedTimeUtc; }

        /// <summary>Backing field for <see cref="Message" /> property.</summary>
        private string _message;

        /// <summary>Message to the user containing information about the upgrade operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string Message { get => this._message; }

        /// <summary>Internal Acessors for EndTimeUtc</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IUpgradeDetailsInternal.EndTimeUtc { get => this._endTimeUtc; set { {_endTimeUtc = value;} } }

        /// <summary>Internal Acessors for LastUpdatedTimeUtc</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IUpgradeDetailsInternal.LastUpdatedTimeUtc { get => this._lastUpdatedTimeUtc; set { {_lastUpdatedTimeUtc = value;} } }

        /// <summary>Internal Acessors for Message</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IUpgradeDetailsInternal.Message { get => this._message; set { {_message = value;} } }

        /// <summary>Internal Acessors for OperationId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IUpgradeDetailsInternal.OperationId { get => this._operationId; set { {_operationId = value;} } }

        /// <summary>Internal Acessors for PreviousResourceId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IUpgradeDetailsInternal.PreviousResourceId { get => this._previousResourceId; set { {_previousResourceId = value;} } }

        /// <summary>Internal Acessors for StartTimeUtc</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IUpgradeDetailsInternal.StartTimeUtc { get => this._startTimeUtc; set { {_startTimeUtc = value;} } }

        /// <summary>Internal Acessors for Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.VaultUpgradeState? Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IUpgradeDetailsInternal.Status { get => this._status; set { {_status = value;} } }

        /// <summary>Internal Acessors for TriggerType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.TriggerType? Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IUpgradeDetailsInternal.TriggerType { get => this._triggerType; set { {_triggerType = value;} } }

        /// <summary>Internal Acessors for UpgradedResourceId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IUpgradeDetailsInternal.UpgradedResourceId { get => this._upgradedResourceId; set { {_upgradedResourceId = value;} } }

        /// <summary>Backing field for <see cref="OperationId" /> property.</summary>
        private string _operationId;

        /// <summary>ID of the vault upgrade operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string OperationId { get => this._operationId; }

        /// <summary>Backing field for <see cref="PreviousResourceId" /> property.</summary>
        private string _previousResourceId;

        /// <summary>Resource ID of the vault before the upgrade.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string PreviousResourceId { get => this._previousResourceId; }

        /// <summary>Backing field for <see cref="StartTimeUtc" /> property.</summary>
        private global::System.DateTime? _startTimeUtc;

        /// <summary>UTC time at which the upgrade operation has started.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public global::System.DateTime? StartTimeUtc { get => this._startTimeUtc; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.VaultUpgradeState? _status;

        /// <summary>Status of the vault upgrade operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.VaultUpgradeState? Status { get => this._status; }

        /// <summary>Backing field for <see cref="TriggerType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.TriggerType? _triggerType;

        /// <summary>The way the vault upgrade was triggered.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.TriggerType? TriggerType { get => this._triggerType; }

        /// <summary>Backing field for <see cref="UpgradedResourceId" /> property.</summary>
        private string _upgradedResourceId;

        /// <summary>Resource ID of the upgraded vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string UpgradedResourceId { get => this._upgradedResourceId; }

        /// <summary>Creates an new <see cref="UpgradeDetails" /> instance.</summary>
        public UpgradeDetails()
        {

        }
    }
    /// Details for upgrading vault.
    public partial interface IUpgradeDetails :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.IJsonSerializable
    {
        /// <summary>UTC time at which the upgrade operation has ended.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"UTC time at which the upgrade operation has ended.",
        SerializedName = @"endTimeUtc",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? EndTimeUtc { get;  }
        /// <summary>UTC time at which the upgrade operation status was last updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"UTC time at which the upgrade operation status was last updated.",
        SerializedName = @"lastUpdatedTimeUtc",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastUpdatedTimeUtc { get;  }
        /// <summary>Message to the user containing information about the upgrade operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Message to the user containing information about the upgrade operation.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string Message { get;  }
        /// <summary>ID of the vault upgrade operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"ID of the vault upgrade operation.",
        SerializedName = @"operationId",
        PossibleTypes = new [] { typeof(string) })]
        string OperationId { get;  }
        /// <summary>Resource ID of the vault before the upgrade.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Resource ID of the vault before the upgrade.",
        SerializedName = @"previousResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string PreviousResourceId { get;  }
        /// <summary>UTC time at which the upgrade operation has started.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"UTC time at which the upgrade operation has started.",
        SerializedName = @"startTimeUtc",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? StartTimeUtc { get;  }
        /// <summary>Status of the vault upgrade operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Status of the vault upgrade operation.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.VaultUpgradeState) })]
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.VaultUpgradeState? Status { get;  }
        /// <summary>The way the vault upgrade was triggered.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The way the vault upgrade was triggered.",
        SerializedName = @"triggerType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.TriggerType) })]
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.TriggerType? TriggerType { get;  }
        /// <summary>Resource ID of the upgraded vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Resource ID of the upgraded vault.",
        SerializedName = @"upgradedResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string UpgradedResourceId { get;  }

    }
    /// Details for upgrading vault.
    internal partial interface IUpgradeDetailsInternal

    {
        /// <summary>UTC time at which the upgrade operation has ended.</summary>
        global::System.DateTime? EndTimeUtc { get; set; }
        /// <summary>UTC time at which the upgrade operation status was last updated.</summary>
        global::System.DateTime? LastUpdatedTimeUtc { get; set; }
        /// <summary>Message to the user containing information about the upgrade operation.</summary>
        string Message { get; set; }
        /// <summary>ID of the vault upgrade operation.</summary>
        string OperationId { get; set; }
        /// <summary>Resource ID of the vault before the upgrade.</summary>
        string PreviousResourceId { get; set; }
        /// <summary>UTC time at which the upgrade operation has started.</summary>
        global::System.DateTime? StartTimeUtc { get; set; }
        /// <summary>Status of the vault upgrade operation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.VaultUpgradeState? Status { get; set; }
        /// <summary>The way the vault upgrade was triggered.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Support.TriggerType? TriggerType { get; set; }
        /// <summary>Resource ID of the upgraded vault.</summary>
        string UpgradedResourceId { get; set; }

    }
}