// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Extensions;

    /// <summary>Certificate details representing the Vault credentials.</summary>
    public partial class ResourceCertificateDetails :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IResourceCertificateDetails,
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IResourceCertificateDetailsInternal
    {

        /// <summary>Backing field for <see cref="AuthType" /> property.</summary>
        private string _authType;

        /// <summary>
        /// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string AuthType { get => this._authType; set => this._authType = value; }

        /// <summary>Backing field for <see cref="Certificate" /> property.</summary>
        private byte[] _certificate;

        /// <summary>The base64 encoded certificate raw data string.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public byte[] Certificate { get => this._certificate; set => this._certificate = value; }

        /// <summary>Backing field for <see cref="FriendlyName" /> property.</summary>
        private string _friendlyName;

        /// <summary>Certificate friendly name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string FriendlyName { get => this._friendlyName; set => this._friendlyName = value; }

        /// <summary>Backing field for <see cref="Issuer" /> property.</summary>
        private string _issuer;

        /// <summary>Certificate issuer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string Issuer { get => this._issuer; set => this._issuer = value; }

        /// <summary>Backing field for <see cref="ResourceId" /> property.</summary>
        private long? _resourceId;

        /// <summary>Resource ID of the vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public long? ResourceId { get => this._resourceId; set => this._resourceId = value; }

        /// <summary>Backing field for <see cref="Subject" /> property.</summary>
        private string _subject;

        /// <summary>Certificate Subject Name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string Subject { get => this._subject; set => this._subject = value; }

        /// <summary>Backing field for <see cref="Thumbprint" /> property.</summary>
        private string _thumbprint;

        /// <summary>Certificate thumbprint.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public string Thumbprint { get => this._thumbprint; set => this._thumbprint = value; }

        /// <summary>Backing field for <see cref="ValidFrom" /> property.</summary>
        private global::System.DateTime? _validFrom;

        /// <summary>Certificate Validity start Date time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public global::System.DateTime? ValidFrom { get => this._validFrom; set => this._validFrom = value; }

        /// <summary>Backing field for <see cref="ValidTo" /> property.</summary>
        private global::System.DateTime? _validTo;

        /// <summary>Certificate Validity End Date time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public global::System.DateTime? ValidTo { get => this._validTo; set => this._validTo = value; }

        /// <summary>Creates an new <see cref="ResourceCertificateDetails" /> instance.</summary>
        public ResourceCertificateDetails()
        {

        }
    }
    /// Certificate details representing the Vault credentials.
    public partial interface IResourceCertificateDetails :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.IJsonSerializable
    {
        /// <summary>
        /// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.",
        SerializedName = @"authType",
        PossibleTypes = new [] { typeof(string) })]
        string AuthType { get; set; }
        /// <summary>The base64 encoded certificate raw data string.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The base64 encoded certificate raw data string.",
        SerializedName = @"certificate",
        PossibleTypes = new [] { typeof(byte[]) })]
        byte[] Certificate { get; set; }
        /// <summary>Certificate friendly name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Certificate friendly name.",
        SerializedName = @"friendlyName",
        PossibleTypes = new [] { typeof(string) })]
        string FriendlyName { get; set; }
        /// <summary>Certificate issuer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Certificate issuer.",
        SerializedName = @"issuer",
        PossibleTypes = new [] { typeof(string) })]
        string Issuer { get; set; }
        /// <summary>Resource ID of the vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID of the vault.",
        SerializedName = @"resourceId",
        PossibleTypes = new [] { typeof(long) })]
        long? ResourceId { get; set; }
        /// <summary>Certificate Subject Name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Certificate Subject Name.",
        SerializedName = @"subject",
        PossibleTypes = new [] { typeof(string) })]
        string Subject { get; set; }
        /// <summary>Certificate thumbprint.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Certificate thumbprint.",
        SerializedName = @"thumbprint",
        PossibleTypes = new [] { typeof(string) })]
        string Thumbprint { get; set; }
        /// <summary>Certificate Validity start Date time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Certificate Validity start Date time.",
        SerializedName = @"validFrom",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ValidFrom { get; set; }
        /// <summary>Certificate Validity End Date time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Certificate Validity End Date time.",
        SerializedName = @"validTo",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ValidTo { get; set; }

    }
    /// Certificate details representing the Vault credentials.
    internal partial interface IResourceCertificateDetailsInternal

    {
        /// <summary>
        /// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
        /// </summary>
        string AuthType { get; set; }
        /// <summary>The base64 encoded certificate raw data string.</summary>
        byte[] Certificate { get; set; }
        /// <summary>Certificate friendly name.</summary>
        string FriendlyName { get; set; }
        /// <summary>Certificate issuer.</summary>
        string Issuer { get; set; }
        /// <summary>Resource ID of the vault.</summary>
        long? ResourceId { get; set; }
        /// <summary>Certificate Subject Name.</summary>
        string Subject { get; set; }
        /// <summary>Certificate thumbprint.</summary>
        string Thumbprint { get; set; }
        /// <summary>Certificate Validity start Date time.</summary>
        global::System.DateTime? ValidFrom { get; set; }
        /// <summary>Certificate Validity End Date time.</summary>
        global::System.DateTime? ValidTo { get; set; }

    }
}