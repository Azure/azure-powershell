// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Extensions;

    /// <summary>Replication usages of a vault.</summary>
    public partial class ReplicationUsage :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IReplicationUsage,
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IReplicationUsageInternal
    {

        /// <summary>Count of failed jobs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public int? JobSummaryFailedJob { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IJobsSummaryInternal)JobsSummary).FailedJob; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IJobsSummaryInternal)JobsSummary).FailedJob = value ?? default(int); }

        /// <summary>Count of in-progress jobs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public int? JobSummaryInProgressJob { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IJobsSummaryInternal)JobsSummary).InProgressJob; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IJobsSummaryInternal)JobsSummary).InProgressJob = value ?? default(int); }

        /// <summary>Count of suspended jobs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public int? JobSummarySuspendedJob { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IJobsSummaryInternal)JobsSummary).SuspendedJob; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IJobsSummaryInternal)JobsSummary).SuspendedJob = value ?? default(int); }

        /// <summary>Backing field for <see cref="JobsSummary" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IJobsSummary _jobsSummary;

        /// <summary>Summary of the replication jobs data for this vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IJobsSummary JobsSummary { get => (this._jobsSummary = this._jobsSummary ?? new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.JobsSummary()); set => this._jobsSummary = value; }

        /// <summary>Internal Acessors for JobsSummary</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IJobsSummary Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IReplicationUsageInternal.JobsSummary { get => (this._jobsSummary = this._jobsSummary ?? new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.JobsSummary()); set { {_jobsSummary = value;} } }

        /// <summary>Internal Acessors for MonitoringSummary</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IMonitoringSummary Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IReplicationUsageInternal.MonitoringSummary { get => (this._monitoringSummary = this._monitoringSummary ?? new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.MonitoringSummary()); set { {_monitoringSummary = value;} } }

        /// <summary>Backing field for <see cref="MonitoringSummary" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IMonitoringSummary _monitoringSummary;

        /// <summary>Summary of the replication monitoring data for this vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IMonitoringSummary MonitoringSummary { get => (this._monitoringSummary = this._monitoringSummary ?? new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.MonitoringSummary()); set => this._monitoringSummary = value; }

        /// <summary>Count of all deprecated recovery service providers.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public int? MonitoringSummaryDeprecatedProviderCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IMonitoringSummaryInternal)MonitoringSummary).DeprecatedProviderCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IMonitoringSummaryInternal)MonitoringSummary).DeprecatedProviderCount = value ?? default(int); }

        /// <summary>Count of all critical warnings.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public int? MonitoringSummaryEventsCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IMonitoringSummaryInternal)MonitoringSummary).EventsCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IMonitoringSummaryInternal)MonitoringSummary).EventsCount = value ?? default(int); }

        /// <summary>Count of all the supported recovery service providers.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public int? MonitoringSummarySupportedProviderCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IMonitoringSummaryInternal)MonitoringSummary).SupportedProviderCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IMonitoringSummaryInternal)MonitoringSummary).SupportedProviderCount = value ?? default(int); }

        /// <summary>Count of unhealthy replication providers.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public int? MonitoringSummaryUnHealthyProviderCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IMonitoringSummaryInternal)MonitoringSummary).UnHealthyProviderCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IMonitoringSummaryInternal)MonitoringSummary).UnHealthyProviderCount = value ?? default(int); }

        /// <summary>Count of unhealthy VMs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public int? MonitoringSummaryUnHealthyVMCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IMonitoringSummaryInternal)MonitoringSummary).UnHealthyVMCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IMonitoringSummaryInternal)MonitoringSummary).UnHealthyVMCount = value ?? default(int); }

        /// <summary>Count of all the unsupported recovery service providers.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Inlined)]
        public int? MonitoringSummaryUnsupportedProviderCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IMonitoringSummaryInternal)MonitoringSummary).UnsupportedProviderCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IMonitoringSummaryInternal)MonitoringSummary).UnsupportedProviderCount = value ?? default(int); }

        /// <summary>Backing field for <see cref="ProtectedItemCount" /> property.</summary>
        private int? _protectedItemCount;

        /// <summary>Number of replication protected items for this vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public int? ProtectedItemCount { get => this._protectedItemCount; set => this._protectedItemCount = value; }

        /// <summary>Backing field for <see cref="RecoveryPlanCount" /> property.</summary>
        private int? _recoveryPlanCount;

        /// <summary>Number of replication recovery plans for this vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public int? RecoveryPlanCount { get => this._recoveryPlanCount; set => this._recoveryPlanCount = value; }

        /// <summary>Backing field for <see cref="RecoveryServicesProviderAuthType" /> property.</summary>
        private int? _recoveryServicesProviderAuthType;

        /// <summary>The authentication type of recovery service providers in the vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public int? RecoveryServicesProviderAuthType { get => this._recoveryServicesProviderAuthType; set => this._recoveryServicesProviderAuthType = value; }

        /// <summary>Backing field for <see cref="RegisteredServersCount" /> property.</summary>
        private int? _registeredServersCount;

        /// <summary>Number of servers registered to this vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.PropertyOrigin.Owned)]
        public int? RegisteredServersCount { get => this._registeredServersCount; set => this._registeredServersCount = value; }

        /// <summary>Creates an new <see cref="ReplicationUsage" /> instance.</summary>
        public ReplicationUsage()
        {

        }
    }
    /// Replication usages of a vault.
    public partial interface IReplicationUsage :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.IJsonSerializable
    {
        /// <summary>Count of failed jobs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Count of failed jobs.",
        SerializedName = @"failedJobs",
        PossibleTypes = new [] { typeof(int) })]
        int? JobSummaryFailedJob { get; set; }
        /// <summary>Count of in-progress jobs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Count of in-progress jobs.",
        SerializedName = @"inProgressJobs",
        PossibleTypes = new [] { typeof(int) })]
        int? JobSummaryInProgressJob { get; set; }
        /// <summary>Count of suspended jobs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Count of suspended jobs.",
        SerializedName = @"suspendedJobs",
        PossibleTypes = new [] { typeof(int) })]
        int? JobSummarySuspendedJob { get; set; }
        /// <summary>Count of all deprecated recovery service providers.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Count of all deprecated recovery service providers.",
        SerializedName = @"deprecatedProviderCount",
        PossibleTypes = new [] { typeof(int) })]
        int? MonitoringSummaryDeprecatedProviderCount { get; set; }
        /// <summary>Count of all critical warnings.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Count of all critical warnings.",
        SerializedName = @"eventsCount",
        PossibleTypes = new [] { typeof(int) })]
        int? MonitoringSummaryEventsCount { get; set; }
        /// <summary>Count of all the supported recovery service providers.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Count of all the supported recovery service providers.",
        SerializedName = @"supportedProviderCount",
        PossibleTypes = new [] { typeof(int) })]
        int? MonitoringSummarySupportedProviderCount { get; set; }
        /// <summary>Count of unhealthy replication providers.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Count of unhealthy replication providers.",
        SerializedName = @"unHealthyProviderCount",
        PossibleTypes = new [] { typeof(int) })]
        int? MonitoringSummaryUnHealthyProviderCount { get; set; }
        /// <summary>Count of unhealthy VMs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Count of unhealthy VMs.",
        SerializedName = @"unHealthyVmCount",
        PossibleTypes = new [] { typeof(int) })]
        int? MonitoringSummaryUnHealthyVMCount { get; set; }
        /// <summary>Count of all the unsupported recovery service providers.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Count of all the unsupported recovery service providers.",
        SerializedName = @"unsupportedProviderCount",
        PossibleTypes = new [] { typeof(int) })]
        int? MonitoringSummaryUnsupportedProviderCount { get; set; }
        /// <summary>Number of replication protected items for this vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of replication protected items for this vault.",
        SerializedName = @"protectedItemCount",
        PossibleTypes = new [] { typeof(int) })]
        int? ProtectedItemCount { get; set; }
        /// <summary>Number of replication recovery plans for this vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of replication recovery plans for this vault.",
        SerializedName = @"recoveryPlanCount",
        PossibleTypes = new [] { typeof(int) })]
        int? RecoveryPlanCount { get; set; }
        /// <summary>The authentication type of recovery service providers in the vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The authentication type of recovery service providers in the vault.",
        SerializedName = @"recoveryServicesProviderAuthType",
        PossibleTypes = new [] { typeof(int) })]
        int? RecoveryServicesProviderAuthType { get; set; }
        /// <summary>Number of servers registered to this vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of servers registered to this vault.",
        SerializedName = @"registeredServersCount",
        PossibleTypes = new [] { typeof(int) })]
        int? RegisteredServersCount { get; set; }

    }
    /// Replication usages of a vault.
    internal partial interface IReplicationUsageInternal

    {
        /// <summary>Count of failed jobs.</summary>
        int? JobSummaryFailedJob { get; set; }
        /// <summary>Count of in-progress jobs.</summary>
        int? JobSummaryInProgressJob { get; set; }
        /// <summary>Count of suspended jobs.</summary>
        int? JobSummarySuspendedJob { get; set; }
        /// <summary>Summary of the replication jobs data for this vault.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IJobsSummary JobsSummary { get; set; }
        /// <summary>Summary of the replication monitoring data for this vault.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Models.Api20220201.IMonitoringSummary MonitoringSummary { get; set; }
        /// <summary>Count of all deprecated recovery service providers.</summary>
        int? MonitoringSummaryDeprecatedProviderCount { get; set; }
        /// <summary>Count of all critical warnings.</summary>
        int? MonitoringSummaryEventsCount { get; set; }
        /// <summary>Count of all the supported recovery service providers.</summary>
        int? MonitoringSummarySupportedProviderCount { get; set; }
        /// <summary>Count of unhealthy replication providers.</summary>
        int? MonitoringSummaryUnHealthyProviderCount { get; set; }
        /// <summary>Count of unhealthy VMs.</summary>
        int? MonitoringSummaryUnHealthyVMCount { get; set; }
        /// <summary>Count of all the unsupported recovery service providers.</summary>
        int? MonitoringSummaryUnsupportedProviderCount { get; set; }
        /// <summary>Number of replication protected items for this vault.</summary>
        int? ProtectedItemCount { get; set; }
        /// <summary>Number of replication recovery plans for this vault.</summary>
        int? RecoveryPlanCount { get; set; }
        /// <summary>The authentication type of recovery service providers in the vault.</summary>
        int? RecoveryServicesProviderAuthType { get; set; }
        /// <summary>Number of servers registered to this vault.</summary>
        int? RegisteredServersCount { get; set; }

    }
}