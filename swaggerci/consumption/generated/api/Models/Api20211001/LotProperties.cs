// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Extensions;

    /// <summary>The lot properties.</summary>
    public partial class LotProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILotProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILotPropertiesInternal
    {

        /// <summary>Backing field for <see cref="BillingCurrency" /> property.</summary>
        private string _billingCurrency;

        /// <summary>The billing currency of the lot.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string BillingCurrency { get => this._billingCurrency; }

        /// <summary>Backing field for <see cref="ClosedBalance" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmount _closedBalance;

        /// <summary>The balance as of the last invoice.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmount ClosedBalance { get => (this._closedBalance = this._closedBalance ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.Amount()); }

        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string ClosedBalanceCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)ClosedBalance).Currency; }

        /// <summary>Backing field for <see cref="ClosedBalanceInBillingCurrency" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRate _closedBalanceInBillingCurrency;

        /// <summary>The balance as of the last invoice in billing currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRate ClosedBalanceInBillingCurrency { get => (this._closedBalanceInBillingCurrency = this._closedBalanceInBillingCurrency ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.AmountWithExchangeRate()); }

        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string ClosedBalanceInBillingCurrencyCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)ClosedBalanceInBillingCurrency).Currency; }

        /// <summary>The exchange rate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? ClosedBalanceInBillingCurrencyExchangeRate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRateInternal)ClosedBalanceInBillingCurrency).ExchangeRate; }

        /// <summary>The exchange rate month.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public int? ClosedBalanceInBillingCurrencyExchangeRateMonth { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRateInternal)ClosedBalanceInBillingCurrency).ExchangeRateMonth; }

        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? ClosedBalanceInBillingCurrencyValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)ClosedBalanceInBillingCurrency).Value; }

        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? ClosedBalanceValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)ClosedBalance).Value; }

        /// <summary>Backing field for <see cref="CreditCurrency" /> property.</summary>
        private string _creditCurrency;

        /// <summary>The currency of the lot.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string CreditCurrency { get => this._creditCurrency; }

        /// <summary>Backing field for <see cref="ETag" /> property.</summary>
        private string _eTag;

        /// <summary>The eTag for the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string ETag { get => this._eTag; }

        /// <summary>Backing field for <see cref="ExpirationDate" /> property.</summary>
        private global::System.DateTime? _expirationDate;

        /// <summary>The expiration date of a lot.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public global::System.DateTime? ExpirationDate { get => this._expirationDate; }

        /// <summary>Internal Acessors for BillingCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILotPropertiesInternal.BillingCurrency { get => this._billingCurrency; set { {_billingCurrency = value;} } }

        /// <summary>Internal Acessors for ClosedBalance</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmount Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILotPropertiesInternal.ClosedBalance { get => (this._closedBalance = this._closedBalance ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.Amount()); set { {_closedBalance = value;} } }

        /// <summary>Internal Acessors for ClosedBalanceCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILotPropertiesInternal.ClosedBalanceCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)ClosedBalance).Currency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)ClosedBalance).Currency = value; }

        /// <summary>Internal Acessors for ClosedBalanceInBillingCurrency</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRate Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILotPropertiesInternal.ClosedBalanceInBillingCurrency { get => (this._closedBalanceInBillingCurrency = this._closedBalanceInBillingCurrency ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.AmountWithExchangeRate()); set { {_closedBalanceInBillingCurrency = value;} } }

        /// <summary>Internal Acessors for ClosedBalanceInBillingCurrencyCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILotPropertiesInternal.ClosedBalanceInBillingCurrencyCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)ClosedBalanceInBillingCurrency).Currency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)ClosedBalanceInBillingCurrency).Currency = value; }

        /// <summary>Internal Acessors for ClosedBalanceInBillingCurrencyExchangeRate</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILotPropertiesInternal.ClosedBalanceInBillingCurrencyExchangeRate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRateInternal)ClosedBalanceInBillingCurrency).ExchangeRate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRateInternal)ClosedBalanceInBillingCurrency).ExchangeRate = value; }

        /// <summary>Internal Acessors for ClosedBalanceInBillingCurrencyExchangeRateMonth</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILotPropertiesInternal.ClosedBalanceInBillingCurrencyExchangeRateMonth { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRateInternal)ClosedBalanceInBillingCurrency).ExchangeRateMonth; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRateInternal)ClosedBalanceInBillingCurrency).ExchangeRateMonth = value; }

        /// <summary>Internal Acessors for ClosedBalanceInBillingCurrencyValue</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILotPropertiesInternal.ClosedBalanceInBillingCurrencyValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)ClosedBalanceInBillingCurrency).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)ClosedBalanceInBillingCurrency).Value = value; }

        /// <summary>Internal Acessors for ClosedBalanceValue</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILotPropertiesInternal.ClosedBalanceValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)ClosedBalance).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)ClosedBalance).Value = value; }

        /// <summary>Internal Acessors for CreditCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILotPropertiesInternal.CreditCurrency { get => this._creditCurrency; set { {_creditCurrency = value;} } }

        /// <summary>Internal Acessors for ETag</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILotPropertiesInternal.ETag { get => this._eTag; set { {_eTag = value;} } }

        /// <summary>Internal Acessors for ExpirationDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILotPropertiesInternal.ExpirationDate { get => this._expirationDate; set { {_expirationDate = value;} } }

        /// <summary>Internal Acessors for OriginalAmount</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmount Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILotPropertiesInternal.OriginalAmount { get => (this._originalAmount = this._originalAmount ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.Amount()); set { {_originalAmount = value;} } }

        /// <summary>Internal Acessors for OriginalAmountCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILotPropertiesInternal.OriginalAmountCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)OriginalAmount).Currency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)OriginalAmount).Currency = value; }

        /// <summary>Internal Acessors for OriginalAmountInBillingCurrency</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRate Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILotPropertiesInternal.OriginalAmountInBillingCurrency { get => (this._originalAmountInBillingCurrency = this._originalAmountInBillingCurrency ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.AmountWithExchangeRate()); set { {_originalAmountInBillingCurrency = value;} } }

        /// <summary>Internal Acessors for OriginalAmountInBillingCurrencyCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILotPropertiesInternal.OriginalAmountInBillingCurrencyCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)OriginalAmountInBillingCurrency).Currency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)OriginalAmountInBillingCurrency).Currency = value; }

        /// <summary>Internal Acessors for OriginalAmountInBillingCurrencyExchangeRate</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILotPropertiesInternal.OriginalAmountInBillingCurrencyExchangeRate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRateInternal)OriginalAmountInBillingCurrency).ExchangeRate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRateInternal)OriginalAmountInBillingCurrency).ExchangeRate = value; }

        /// <summary>Internal Acessors for OriginalAmountInBillingCurrencyExchangeRateMonth</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILotPropertiesInternal.OriginalAmountInBillingCurrencyExchangeRateMonth { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRateInternal)OriginalAmountInBillingCurrency).ExchangeRateMonth; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRateInternal)OriginalAmountInBillingCurrency).ExchangeRateMonth = value; }

        /// <summary>Internal Acessors for OriginalAmountInBillingCurrencyValue</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILotPropertiesInternal.OriginalAmountInBillingCurrencyValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)OriginalAmountInBillingCurrency).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)OriginalAmountInBillingCurrency).Value = value; }

        /// <summary>Internal Acessors for OriginalAmountValue</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILotPropertiesInternal.OriginalAmountValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)OriginalAmount).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)OriginalAmount).Value = value; }

        /// <summary>Internal Acessors for PoNumber</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILotPropertiesInternal.PoNumber { get => this._poNumber; set { {_poNumber = value;} } }

        /// <summary>Internal Acessors for PurchasedDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILotPropertiesInternal.PurchasedDate { get => this._purchasedDate; set { {_purchasedDate = value;} } }

        /// <summary>Internal Acessors for Reseller</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IReseller Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILotPropertiesInternal.Reseller { get => (this._reseller = this._reseller ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.Reseller()); set { {_reseller = value;} } }

        /// <summary>Internal Acessors for ResellerDescription</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILotPropertiesInternal.ResellerDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IResellerInternal)Reseller).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IResellerInternal)Reseller).Description = value; }

        /// <summary>Internal Acessors for ResellerId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILotPropertiesInternal.ResellerId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IResellerInternal)Reseller).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IResellerInternal)Reseller).Id = value; }

        /// <summary>Internal Acessors for Source</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.LotSource? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILotPropertiesInternal.Source { get => this._source; set { {_source = value;} } }

        /// <summary>Internal Acessors for StartDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILotPropertiesInternal.StartDate { get => this._startDate; set { {_startDate = value;} } }

        /// <summary>Internal Acessors for Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.Status? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILotPropertiesInternal.Status { get => this._status; set { {_status = value;} } }

        /// <summary>Backing field for <see cref="OriginalAmount" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmount _originalAmount;

        /// <summary>The original amount of a lot.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmount OriginalAmount { get => (this._originalAmount = this._originalAmount ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.Amount()); }

        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string OriginalAmountCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)OriginalAmount).Currency; }

        /// <summary>Backing field for <see cref="OriginalAmountInBillingCurrency" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRate _originalAmountInBillingCurrency;

        /// <summary>The original amount of a lot in billing currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRate OriginalAmountInBillingCurrency { get => (this._originalAmountInBillingCurrency = this._originalAmountInBillingCurrency ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.AmountWithExchangeRate()); }

        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string OriginalAmountInBillingCurrencyCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)OriginalAmountInBillingCurrency).Currency; }

        /// <summary>The exchange rate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? OriginalAmountInBillingCurrencyExchangeRate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRateInternal)OriginalAmountInBillingCurrency).ExchangeRate; }

        /// <summary>The exchange rate month.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public int? OriginalAmountInBillingCurrencyExchangeRateMonth { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRateInternal)OriginalAmountInBillingCurrency).ExchangeRateMonth; }

        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? OriginalAmountInBillingCurrencyValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)OriginalAmountInBillingCurrency).Value; }

        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? OriginalAmountValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)OriginalAmount).Value; }

        /// <summary>Backing field for <see cref="PoNumber" /> property.</summary>
        private string _poNumber;

        /// <summary>
        /// The po number of the invoice on which the lot was added. This property is not available for ConsumptionCommitment lots.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string PoNumber { get => this._poNumber; }

        /// <summary>Backing field for <see cref="PurchasedDate" /> property.</summary>
        private global::System.DateTime? _purchasedDate;

        /// <summary>The date when the lot was added.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public global::System.DateTime? PurchasedDate { get => this._purchasedDate; }

        /// <summary>Backing field for <see cref="Reseller" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IReseller _reseller;

        /// <summary>The reseller of the lot.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IReseller Reseller { get => (this._reseller = this._reseller ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.Reseller()); }

        /// <summary>The reseller property description.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string ResellerDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IResellerInternal)Reseller).Description; }

        /// <summary>The reseller property ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string ResellerId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IResellerInternal)Reseller).Id; }

        /// <summary>Backing field for <see cref="Source" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.LotSource? _source;

        /// <summary>The source of the lot.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.LotSource? Source { get => this._source; }

        /// <summary>Backing field for <see cref="StartDate" /> property.</summary>
        private global::System.DateTime? _startDate;

        /// <summary>The date when the lot became effective.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public global::System.DateTime? StartDate { get => this._startDate; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.Status? _status;

        /// <summary>The status of the lot.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.Status? Status { get => this._status; }

        /// <summary>Creates an new <see cref="LotProperties" /> instance.</summary>
        public LotProperties()
        {

        }
    }
    /// The lot properties.
    public partial interface ILotProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.IJsonSerializable
    {
        /// <summary>The billing currency of the lot.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The billing currency of the lot.",
        SerializedName = @"billingCurrency",
        PossibleTypes = new [] { typeof(string) })]
        string BillingCurrency { get;  }
        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount currency.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string ClosedBalanceCurrency { get;  }
        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount currency.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string ClosedBalanceInBillingCurrencyCurrency { get;  }
        /// <summary>The exchange rate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The exchange rate.",
        SerializedName = @"exchangeRate",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? ClosedBalanceInBillingCurrencyExchangeRate { get;  }
        /// <summary>The exchange rate month.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The exchange rate month.",
        SerializedName = @"exchangeRateMonth",
        PossibleTypes = new [] { typeof(int) })]
        int? ClosedBalanceInBillingCurrencyExchangeRateMonth { get;  }
        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? ClosedBalanceInBillingCurrencyValue { get;  }
        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? ClosedBalanceValue { get;  }
        /// <summary>The currency of the lot.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The currency of the lot.",
        SerializedName = @"creditCurrency",
        PossibleTypes = new [] { typeof(string) })]
        string CreditCurrency { get;  }
        /// <summary>The eTag for the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The eTag for the resource.",
        SerializedName = @"eTag",
        PossibleTypes = new [] { typeof(string) })]
        string ETag { get;  }
        /// <summary>The expiration date of a lot.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The expiration date of a lot.",
        SerializedName = @"expirationDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ExpirationDate { get;  }
        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount currency.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string OriginalAmountCurrency { get;  }
        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount currency.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string OriginalAmountInBillingCurrencyCurrency { get;  }
        /// <summary>The exchange rate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The exchange rate.",
        SerializedName = @"exchangeRate",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? OriginalAmountInBillingCurrencyExchangeRate { get;  }
        /// <summary>The exchange rate month.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The exchange rate month.",
        SerializedName = @"exchangeRateMonth",
        PossibleTypes = new [] { typeof(int) })]
        int? OriginalAmountInBillingCurrencyExchangeRateMonth { get;  }
        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? OriginalAmountInBillingCurrencyValue { get;  }
        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? OriginalAmountValue { get;  }
        /// <summary>
        /// The po number of the invoice on which the lot was added. This property is not available for ConsumptionCommitment lots.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The po number of the invoice on which the lot was added. This property is not available for ConsumptionCommitment lots.",
        SerializedName = @"poNumber",
        PossibleTypes = new [] { typeof(string) })]
        string PoNumber { get;  }
        /// <summary>The date when the lot was added.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The date when the lot was added.",
        SerializedName = @"purchasedDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? PurchasedDate { get;  }
        /// <summary>The reseller property description.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The reseller property description.",
        SerializedName = @"resellerDescription",
        PossibleTypes = new [] { typeof(string) })]
        string ResellerDescription { get;  }
        /// <summary>The reseller property ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The reseller property ID.",
        SerializedName = @"resellerId",
        PossibleTypes = new [] { typeof(string) })]
        string ResellerId { get;  }
        /// <summary>The source of the lot.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The source of the lot.",
        SerializedName = @"source",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.LotSource) })]
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.LotSource? Source { get;  }
        /// <summary>The date when the lot became effective.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The date when the lot became effective.",
        SerializedName = @"startDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? StartDate { get;  }
        /// <summary>The status of the lot.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The status of the lot.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.Status) })]
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.Status? Status { get;  }

    }
    /// The lot properties.
    internal partial interface ILotPropertiesInternal

    {
        /// <summary>The billing currency of the lot.</summary>
        string BillingCurrency { get; set; }
        /// <summary>The balance as of the last invoice.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmount ClosedBalance { get; set; }
        /// <summary>Amount currency.</summary>
        string ClosedBalanceCurrency { get; set; }
        /// <summary>The balance as of the last invoice in billing currency.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRate ClosedBalanceInBillingCurrency { get; set; }
        /// <summary>Amount currency.</summary>
        string ClosedBalanceInBillingCurrencyCurrency { get; set; }
        /// <summary>The exchange rate.</summary>
        decimal? ClosedBalanceInBillingCurrencyExchangeRate { get; set; }
        /// <summary>The exchange rate month.</summary>
        int? ClosedBalanceInBillingCurrencyExchangeRateMonth { get; set; }
        /// <summary>Amount.</summary>
        decimal? ClosedBalanceInBillingCurrencyValue { get; set; }
        /// <summary>Amount.</summary>
        decimal? ClosedBalanceValue { get; set; }
        /// <summary>The currency of the lot.</summary>
        string CreditCurrency { get; set; }
        /// <summary>The eTag for the resource.</summary>
        string ETag { get; set; }
        /// <summary>The expiration date of a lot.</summary>
        global::System.DateTime? ExpirationDate { get; set; }
        /// <summary>The original amount of a lot.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmount OriginalAmount { get; set; }
        /// <summary>Amount currency.</summary>
        string OriginalAmountCurrency { get; set; }
        /// <summary>The original amount of a lot in billing currency.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRate OriginalAmountInBillingCurrency { get; set; }
        /// <summary>Amount currency.</summary>
        string OriginalAmountInBillingCurrencyCurrency { get; set; }
        /// <summary>The exchange rate.</summary>
        decimal? OriginalAmountInBillingCurrencyExchangeRate { get; set; }
        /// <summary>The exchange rate month.</summary>
        int? OriginalAmountInBillingCurrencyExchangeRateMonth { get; set; }
        /// <summary>Amount.</summary>
        decimal? OriginalAmountInBillingCurrencyValue { get; set; }
        /// <summary>Amount.</summary>
        decimal? OriginalAmountValue { get; set; }
        /// <summary>
        /// The po number of the invoice on which the lot was added. This property is not available for ConsumptionCommitment lots.
        /// </summary>
        string PoNumber { get; set; }
        /// <summary>The date when the lot was added.</summary>
        global::System.DateTime? PurchasedDate { get; set; }
        /// <summary>The reseller of the lot.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IReseller Reseller { get; set; }
        /// <summary>The reseller property description.</summary>
        string ResellerDescription { get; set; }
        /// <summary>The reseller property ID.</summary>
        string ResellerId { get; set; }
        /// <summary>The source of the lot.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.LotSource? Source { get; set; }
        /// <summary>The date when the lot became effective.</summary>
        global::System.DateTime? StartDate { get; set; }
        /// <summary>The status of the lot.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.Status? Status { get; set; }

    }
}