// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Extensions;

    /// <summary>The properties of the meter detail.</summary>
    public partial class MeterDetailsResponse :
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMeterDetailsResponse,
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMeterDetailsResponseInternal
    {

        /// <summary>Backing field for <see cref="MeterCategory" /> property.</summary>
        private string _meterCategory;

        /// <summary>The category of the meter, for example, 'Cloud services', 'Networking', etc..</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string MeterCategory { get => this._meterCategory; }

        /// <summary>Backing field for <see cref="MeterName" /> property.</summary>
        private string _meterName;

        /// <summary>The name of the meter, within the given meter category</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string MeterName { get => this._meterName; }

        /// <summary>Backing field for <see cref="MeterSubCategory" /> property.</summary>
        private string _meterSubCategory;

        /// <summary>
        /// The subcategory of the meter, for example, 'A6 Cloud services', 'ExpressRoute (IXP)', etc..
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string MeterSubCategory { get => this._meterSubCategory; }

        /// <summary>Internal Acessors for MeterCategory</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMeterDetailsResponseInternal.MeterCategory { get => this._meterCategory; set { {_meterCategory = value;} } }

        /// <summary>Internal Acessors for MeterName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMeterDetailsResponseInternal.MeterName { get => this._meterName; set { {_meterName = value;} } }

        /// <summary>Internal Acessors for MeterSubCategory</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMeterDetailsResponseInternal.MeterSubCategory { get => this._meterSubCategory; set { {_meterSubCategory = value;} } }

        /// <summary>Internal Acessors for ServiceFamily</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMeterDetailsResponseInternal.ServiceFamily { get => this._serviceFamily; set { {_serviceFamily = value;} } }

        /// <summary>Internal Acessors for UnitOfMeasure</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMeterDetailsResponseInternal.UnitOfMeasure { get => this._unitOfMeasure; set { {_unitOfMeasure = value;} } }

        /// <summary>Backing field for <see cref="ServiceFamily" /> property.</summary>
        private string _serviceFamily;

        /// <summary>The service family.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string ServiceFamily { get => this._serviceFamily; }

        /// <summary>Backing field for <see cref="UnitOfMeasure" /> property.</summary>
        private string _unitOfMeasure;

        /// <summary>
        /// The unit in which the meter consumption is charged, for example, 'Hours', 'GB', etc.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string UnitOfMeasure { get => this._unitOfMeasure; }

        /// <summary>Creates an new <see cref="MeterDetailsResponse" /> instance.</summary>
        public MeterDetailsResponse()
        {

        }
    }
    /// The properties of the meter detail.
    public partial interface IMeterDetailsResponse :
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.IJsonSerializable
    {
        /// <summary>The category of the meter, for example, 'Cloud services', 'Networking', etc..</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The category of the meter, for example, 'Cloud services', 'Networking', etc..",
        SerializedName = @"meterCategory",
        PossibleTypes = new [] { typeof(string) })]
        string MeterCategory { get;  }
        /// <summary>The name of the meter, within the given meter category</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of the meter, within the given meter category",
        SerializedName = @"meterName",
        PossibleTypes = new [] { typeof(string) })]
        string MeterName { get;  }
        /// <summary>
        /// The subcategory of the meter, for example, 'A6 Cloud services', 'ExpressRoute (IXP)', etc..
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The subcategory of the meter, for example, 'A6 Cloud services', 'ExpressRoute (IXP)', etc..",
        SerializedName = @"meterSubCategory",
        PossibleTypes = new [] { typeof(string) })]
        string MeterSubCategory { get;  }
        /// <summary>The service family.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The service family.",
        SerializedName = @"serviceFamily",
        PossibleTypes = new [] { typeof(string) })]
        string ServiceFamily { get;  }
        /// <summary>
        /// The unit in which the meter consumption is charged, for example, 'Hours', 'GB', etc.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The unit in which the meter consumption is charged, for example, 'Hours', 'GB', etc.",
        SerializedName = @"unitOfMeasure",
        PossibleTypes = new [] { typeof(string) })]
        string UnitOfMeasure { get;  }

    }
    /// The properties of the meter detail.
    internal partial interface IMeterDetailsResponseInternal

    {
        /// <summary>The category of the meter, for example, 'Cloud services', 'Networking', etc..</summary>
        string MeterCategory { get; set; }
        /// <summary>The name of the meter, within the given meter category</summary>
        string MeterName { get; set; }
        /// <summary>
        /// The subcategory of the meter, for example, 'A6 Cloud services', 'ExpressRoute (IXP)', etc..
        /// </summary>
        string MeterSubCategory { get; set; }
        /// <summary>The service family.</summary>
        string ServiceFamily { get; set; }
        /// <summary>
        /// The unit in which the meter consumption is charged, for example, 'Hours', 'GB', etc.
        /// </summary>
        string UnitOfMeasure { get; set; }

    }
}