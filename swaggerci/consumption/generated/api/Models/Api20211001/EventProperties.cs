// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Extensions;

    /// <summary>The event properties.</summary>
    public partial class EventProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal
    {

        /// <summary>Backing field for <see cref="Adjustment" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmount _adjustment;

        /// <summary>
        /// The amount of balance adjustment. The property is not available for ConsumptionCommitment lots.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmount Adjustment { get => (this._adjustment = this._adjustment ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.Amount()); }

        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string AdjustmentCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)Adjustment).Currency; }

        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string AdjustmentInBillingCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)AdjustmentsInBillingCurrency).Currency; }

        /// <summary>The exchange rate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? AdjustmentInBillingCurrencyExchangeRate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRateInternal)AdjustmentsInBillingCurrency).ExchangeRate; }

        /// <summary>The exchange rate month.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public int? AdjustmentInBillingCurrencyExchangeRateMonth { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRateInternal)AdjustmentsInBillingCurrency).ExchangeRateMonth; }

        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? AdjustmentInBillingCurrencyValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)AdjustmentsInBillingCurrency).Value; }

        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? AdjustmentValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)Adjustment).Value; }

        /// <summary>Backing field for <see cref="AdjustmentsInBillingCurrency" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRate _adjustmentsInBillingCurrency;

        /// <summary>The amount of balance adjustment in billing currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRate AdjustmentsInBillingCurrency { get => (this._adjustmentsInBillingCurrency = this._adjustmentsInBillingCurrency ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.AmountWithExchangeRate()); }

        /// <summary>Backing field for <see cref="BillingCurrency" /> property.</summary>
        private string _billingCurrency;

        /// <summary>The billing currency of the event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string BillingCurrency { get => this._billingCurrency; }

        /// <summary>Backing field for <see cref="BillingProfileDisplayName" /> property.</summary>
        private string _billingProfileDisplayName;

        /// <summary>
        /// The display name of the billing profile for which the event happened. The property is only available for billing account
        /// of type MicrosoftCustomerAgreement.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string BillingProfileDisplayName { get => this._billingProfileDisplayName; }

        /// <summary>Backing field for <see cref="BillingProfileId" /> property.</summary>
        private string _billingProfileId;

        /// <summary>
        /// The ID that uniquely identifies the billing profile for which the event happened. The property is only available for billing
        /// account of type MicrosoftCustomerAgreement.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string BillingProfileId { get => this._billingProfileId; }

        /// <summary>Backing field for <see cref="CanceledCredit" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmount _canceledCredit;

        /// <summary>Amount of canceled credit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmount CanceledCredit { get => (this._canceledCredit = this._canceledCredit ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.Amount()); }

        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string CanceledCreditCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)CanceledCredit).Currency; }

        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? CanceledCreditValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)CanceledCredit).Value; }

        /// <summary>Backing field for <see cref="Charge" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmount _charge;

        /// <summary>
        /// The amount of charges for events of type SettleCharges and PendingEligibleCharges.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmount Charge { get => (this._charge = this._charge ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.Amount()); }

        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string ChargeCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)Charge).Currency; }

        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string ChargeInBillingCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)ChargesInBillingCurrency).Currency; }

        /// <summary>The exchange rate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? ChargeInBillingCurrencyExchangeRate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRateInternal)ChargesInBillingCurrency).ExchangeRate; }

        /// <summary>The exchange rate month.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public int? ChargeInBillingCurrencyExchangeRateMonth { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRateInternal)ChargesInBillingCurrency).ExchangeRateMonth; }

        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? ChargeInBillingCurrencyValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)ChargesInBillingCurrency).Value; }

        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? ChargeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)Charge).Value; }

        /// <summary>Backing field for <see cref="ChargesInBillingCurrency" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRate _chargesInBillingCurrency;

        /// <summary>
        /// The amount of charges for events of type SettleCharges and PendingEligibleCharges in billing currency.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRate ChargesInBillingCurrency { get => (this._chargesInBillingCurrency = this._chargesInBillingCurrency ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.AmountWithExchangeRate()); }

        /// <summary>Backing field for <see cref="ClosedBalance" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmount _closedBalance;

        /// <summary>The balance after the event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmount ClosedBalance { get => (this._closedBalance = this._closedBalance ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.Amount()); }

        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string ClosedBalanceCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)ClosedBalance).Currency; }

        /// <summary>Backing field for <see cref="ClosedBalanceInBillingCurrency" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRate _closedBalanceInBillingCurrency;

        /// <summary>The balance in billing currency after the event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRate ClosedBalanceInBillingCurrency { get => (this._closedBalanceInBillingCurrency = this._closedBalanceInBillingCurrency ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.AmountWithExchangeRate()); }

        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string ClosedBalanceInBillingCurrencyCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)ClosedBalanceInBillingCurrency).Currency; }

        /// <summary>The exchange rate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? ClosedBalanceInBillingCurrencyExchangeRate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRateInternal)ClosedBalanceInBillingCurrency).ExchangeRate; }

        /// <summary>The exchange rate month.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public int? ClosedBalanceInBillingCurrencyExchangeRateMonth { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRateInternal)ClosedBalanceInBillingCurrency).ExchangeRateMonth; }

        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? ClosedBalanceInBillingCurrencyValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)ClosedBalanceInBillingCurrency).Value; }

        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? ClosedBalanceValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)ClosedBalance).Value; }

        /// <summary>Backing field for <see cref="CreditCurrency" /> property.</summary>
        private string _creditCurrency;

        /// <summary>The credit currency of the event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string CreditCurrency { get => this._creditCurrency; }

        /// <summary>Backing field for <see cref="CreditExpired" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmount _creditExpired;

        /// <summary>
        /// The amount of expired credit or commitment for NewCredit or SettleCharges event.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmount CreditExpired { get => (this._creditExpired = this._creditExpired ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.Amount()); }

        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string CreditExpiredCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)CreditExpired).Currency; }

        /// <summary>Backing field for <see cref="CreditExpiredInBillingCurrency" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRate _creditExpiredInBillingCurrency;

        /// <summary>
        /// The amount of expired credit or commitment for NewCredit or SettleCharges event in billing currency.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRate CreditExpiredInBillingCurrency { get => (this._creditExpiredInBillingCurrency = this._creditExpiredInBillingCurrency ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.AmountWithExchangeRate()); }

        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string CreditExpiredInBillingCurrencyCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)CreditExpiredInBillingCurrency).Currency; }

        /// <summary>The exchange rate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? CreditExpiredInBillingCurrencyExchangeRate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRateInternal)CreditExpiredInBillingCurrency).ExchangeRate; }

        /// <summary>The exchange rate month.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public int? CreditExpiredInBillingCurrencyExchangeRateMonth { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRateInternal)CreditExpiredInBillingCurrency).ExchangeRateMonth; }

        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? CreditExpiredInBillingCurrencyValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)CreditExpiredInBillingCurrency).Value; }

        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? CreditExpiredValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)CreditExpired).Value; }

        /// <summary>Backing field for <see cref="Description" /> property.</summary>
        private string _description;

        /// <summary>The description of the event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string Description { get => this._description; }

        /// <summary>Backing field for <see cref="ETag" /> property.</summary>
        private string _eTag;

        /// <summary>The eTag for the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string ETag { get => this._eTag; }

        /// <summary>Backing field for <see cref="EventType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.EventType? _eventType;

        /// <summary>Identifies the type of the event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.EventType? EventType { get => this._eventType; set => this._eventType = value; }

        /// <summary>Backing field for <see cref="InvoiceNumber" /> property.</summary>
        private string _invoiceNumber;

        /// <summary>
        /// The number which uniquely identifies the invoice on which the event was billed. This will be empty for unbilled events.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string InvoiceNumber { get => this._invoiceNumber; }

        /// <summary>Backing field for <see cref="LotId" /> property.</summary>
        private string _lotId;

        /// <summary>The ID that uniquely identifies the lot for which the event happened.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string LotId { get => this._lotId; }

        /// <summary>Backing field for <see cref="LotSource" /> property.</summary>
        private string _lotSource;

        /// <summary>Identifies the source of the lot for which the event happened.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string LotSource { get => this._lotSource; }

        /// <summary>Internal Acessors for Adjustment</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmount Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.Adjustment { get => (this._adjustment = this._adjustment ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.Amount()); set { {_adjustment = value;} } }

        /// <summary>Internal Acessors for AdjustmentCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.AdjustmentCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)Adjustment).Currency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)Adjustment).Currency = value; }

        /// <summary>Internal Acessors for AdjustmentInBillingCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.AdjustmentInBillingCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)AdjustmentsInBillingCurrency).Currency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)AdjustmentsInBillingCurrency).Currency = value; }

        /// <summary>Internal Acessors for AdjustmentInBillingCurrencyExchangeRate</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.AdjustmentInBillingCurrencyExchangeRate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRateInternal)AdjustmentsInBillingCurrency).ExchangeRate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRateInternal)AdjustmentsInBillingCurrency).ExchangeRate = value; }

        /// <summary>Internal Acessors for AdjustmentInBillingCurrencyExchangeRateMonth</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.AdjustmentInBillingCurrencyExchangeRateMonth { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRateInternal)AdjustmentsInBillingCurrency).ExchangeRateMonth; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRateInternal)AdjustmentsInBillingCurrency).ExchangeRateMonth = value; }

        /// <summary>Internal Acessors for AdjustmentInBillingCurrencyValue</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.AdjustmentInBillingCurrencyValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)AdjustmentsInBillingCurrency).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)AdjustmentsInBillingCurrency).Value = value; }

        /// <summary>Internal Acessors for AdjustmentValue</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.AdjustmentValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)Adjustment).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)Adjustment).Value = value; }

        /// <summary>Internal Acessors for AdjustmentsInBillingCurrency</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRate Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.AdjustmentsInBillingCurrency { get => (this._adjustmentsInBillingCurrency = this._adjustmentsInBillingCurrency ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.AmountWithExchangeRate()); set { {_adjustmentsInBillingCurrency = value;} } }

        /// <summary>Internal Acessors for BillingCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.BillingCurrency { get => this._billingCurrency; set { {_billingCurrency = value;} } }

        /// <summary>Internal Acessors for BillingProfileDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.BillingProfileDisplayName { get => this._billingProfileDisplayName; set { {_billingProfileDisplayName = value;} } }

        /// <summary>Internal Acessors for BillingProfileId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.BillingProfileId { get => this._billingProfileId; set { {_billingProfileId = value;} } }

        /// <summary>Internal Acessors for CanceledCredit</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmount Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.CanceledCredit { get => (this._canceledCredit = this._canceledCredit ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.Amount()); set { {_canceledCredit = value;} } }

        /// <summary>Internal Acessors for CanceledCreditCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.CanceledCreditCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)CanceledCredit).Currency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)CanceledCredit).Currency = value; }

        /// <summary>Internal Acessors for CanceledCreditValue</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.CanceledCreditValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)CanceledCredit).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)CanceledCredit).Value = value; }

        /// <summary>Internal Acessors for Charge</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmount Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.Charge { get => (this._charge = this._charge ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.Amount()); set { {_charge = value;} } }

        /// <summary>Internal Acessors for ChargeCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.ChargeCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)Charge).Currency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)Charge).Currency = value; }

        /// <summary>Internal Acessors for ChargeInBillingCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.ChargeInBillingCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)ChargesInBillingCurrency).Currency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)ChargesInBillingCurrency).Currency = value; }

        /// <summary>Internal Acessors for ChargeInBillingCurrencyExchangeRate</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.ChargeInBillingCurrencyExchangeRate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRateInternal)ChargesInBillingCurrency).ExchangeRate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRateInternal)ChargesInBillingCurrency).ExchangeRate = value; }

        /// <summary>Internal Acessors for ChargeInBillingCurrencyExchangeRateMonth</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.ChargeInBillingCurrencyExchangeRateMonth { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRateInternal)ChargesInBillingCurrency).ExchangeRateMonth; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRateInternal)ChargesInBillingCurrency).ExchangeRateMonth = value; }

        /// <summary>Internal Acessors for ChargeInBillingCurrencyValue</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.ChargeInBillingCurrencyValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)ChargesInBillingCurrency).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)ChargesInBillingCurrency).Value = value; }

        /// <summary>Internal Acessors for ChargeValue</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.ChargeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)Charge).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)Charge).Value = value; }

        /// <summary>Internal Acessors for ChargesInBillingCurrency</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRate Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.ChargesInBillingCurrency { get => (this._chargesInBillingCurrency = this._chargesInBillingCurrency ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.AmountWithExchangeRate()); set { {_chargesInBillingCurrency = value;} } }

        /// <summary>Internal Acessors for ClosedBalance</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmount Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.ClosedBalance { get => (this._closedBalance = this._closedBalance ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.Amount()); set { {_closedBalance = value;} } }

        /// <summary>Internal Acessors for ClosedBalanceCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.ClosedBalanceCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)ClosedBalance).Currency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)ClosedBalance).Currency = value; }

        /// <summary>Internal Acessors for ClosedBalanceInBillingCurrency</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRate Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.ClosedBalanceInBillingCurrency { get => (this._closedBalanceInBillingCurrency = this._closedBalanceInBillingCurrency ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.AmountWithExchangeRate()); set { {_closedBalanceInBillingCurrency = value;} } }

        /// <summary>Internal Acessors for ClosedBalanceInBillingCurrencyCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.ClosedBalanceInBillingCurrencyCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)ClosedBalanceInBillingCurrency).Currency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)ClosedBalanceInBillingCurrency).Currency = value; }

        /// <summary>Internal Acessors for ClosedBalanceInBillingCurrencyExchangeRate</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.ClosedBalanceInBillingCurrencyExchangeRate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRateInternal)ClosedBalanceInBillingCurrency).ExchangeRate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRateInternal)ClosedBalanceInBillingCurrency).ExchangeRate = value; }

        /// <summary>Internal Acessors for ClosedBalanceInBillingCurrencyExchangeRateMonth</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.ClosedBalanceInBillingCurrencyExchangeRateMonth { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRateInternal)ClosedBalanceInBillingCurrency).ExchangeRateMonth; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRateInternal)ClosedBalanceInBillingCurrency).ExchangeRateMonth = value; }

        /// <summary>Internal Acessors for ClosedBalanceInBillingCurrencyValue</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.ClosedBalanceInBillingCurrencyValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)ClosedBalanceInBillingCurrency).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)ClosedBalanceInBillingCurrency).Value = value; }

        /// <summary>Internal Acessors for ClosedBalanceValue</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.ClosedBalanceValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)ClosedBalance).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)ClosedBalance).Value = value; }

        /// <summary>Internal Acessors for CreditCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.CreditCurrency { get => this._creditCurrency; set { {_creditCurrency = value;} } }

        /// <summary>Internal Acessors for CreditExpired</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmount Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.CreditExpired { get => (this._creditExpired = this._creditExpired ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.Amount()); set { {_creditExpired = value;} } }

        /// <summary>Internal Acessors for CreditExpiredCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.CreditExpiredCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)CreditExpired).Currency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)CreditExpired).Currency = value; }

        /// <summary>Internal Acessors for CreditExpiredInBillingCurrency</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRate Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.CreditExpiredInBillingCurrency { get => (this._creditExpiredInBillingCurrency = this._creditExpiredInBillingCurrency ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.AmountWithExchangeRate()); set { {_creditExpiredInBillingCurrency = value;} } }

        /// <summary>Internal Acessors for CreditExpiredInBillingCurrencyCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.CreditExpiredInBillingCurrencyCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)CreditExpiredInBillingCurrency).Currency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)CreditExpiredInBillingCurrency).Currency = value; }

        /// <summary>Internal Acessors for CreditExpiredInBillingCurrencyExchangeRate</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.CreditExpiredInBillingCurrencyExchangeRate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRateInternal)CreditExpiredInBillingCurrency).ExchangeRate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRateInternal)CreditExpiredInBillingCurrency).ExchangeRate = value; }

        /// <summary>Internal Acessors for CreditExpiredInBillingCurrencyExchangeRateMonth</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.CreditExpiredInBillingCurrencyExchangeRateMonth { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRateInternal)CreditExpiredInBillingCurrency).ExchangeRateMonth; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRateInternal)CreditExpiredInBillingCurrency).ExchangeRateMonth = value; }

        /// <summary>Internal Acessors for CreditExpiredInBillingCurrencyValue</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.CreditExpiredInBillingCurrencyValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)CreditExpiredInBillingCurrency).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)CreditExpiredInBillingCurrency).Value = value; }

        /// <summary>Internal Acessors for CreditExpiredValue</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.CreditExpiredValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)CreditExpired).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)CreditExpired).Value = value; }

        /// <summary>Internal Acessors for Description</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.Description { get => this._description; set { {_description = value;} } }

        /// <summary>Internal Acessors for ETag</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.ETag { get => this._eTag; set { {_eTag = value;} } }

        /// <summary>Internal Acessors for InvoiceNumber</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.InvoiceNumber { get => this._invoiceNumber; set { {_invoiceNumber = value;} } }

        /// <summary>Internal Acessors for LotId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.LotId { get => this._lotId; set { {_lotId = value;} } }

        /// <summary>Internal Acessors for LotSource</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.LotSource { get => this._lotSource; set { {_lotSource = value;} } }

        /// <summary>Internal Acessors for NewCredit</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmount Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.NewCredit { get => (this._newCredit = this._newCredit ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.Amount()); set { {_newCredit = value;} } }

        /// <summary>Internal Acessors for NewCreditCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.NewCreditCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)NewCredit).Currency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)NewCredit).Currency = value; }

        /// <summary>Internal Acessors for NewCreditInBillingCurrency</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRate Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.NewCreditInBillingCurrency { get => (this._newCreditInBillingCurrency = this._newCreditInBillingCurrency ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.AmountWithExchangeRate()); set { {_newCreditInBillingCurrency = value;} } }

        /// <summary>Internal Acessors for NewCreditInBillingCurrencyCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.NewCreditInBillingCurrencyCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)NewCreditInBillingCurrency).Currency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)NewCreditInBillingCurrency).Currency = value; }

        /// <summary>Internal Acessors for NewCreditInBillingCurrencyExchangeRate</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.NewCreditInBillingCurrencyExchangeRate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRateInternal)NewCreditInBillingCurrency).ExchangeRate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRateInternal)NewCreditInBillingCurrency).ExchangeRate = value; }

        /// <summary>Internal Acessors for NewCreditInBillingCurrencyExchangeRateMonth</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.NewCreditInBillingCurrencyExchangeRateMonth { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRateInternal)NewCreditInBillingCurrency).ExchangeRateMonth; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRateInternal)NewCreditInBillingCurrency).ExchangeRateMonth = value; }

        /// <summary>Internal Acessors for NewCreditInBillingCurrencyValue</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.NewCreditInBillingCurrencyValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)NewCreditInBillingCurrency).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)NewCreditInBillingCurrency).Value = value; }

        /// <summary>Internal Acessors for NewCreditValue</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.NewCreditValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)NewCredit).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)NewCredit).Value = value; }

        /// <summary>Internal Acessors for Reseller</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IReseller Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.Reseller { get => (this._reseller = this._reseller ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.Reseller()); set { {_reseller = value;} } }

        /// <summary>Internal Acessors for ResellerDescription</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.ResellerDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IResellerInternal)Reseller).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IResellerInternal)Reseller).Description = value; }

        /// <summary>Internal Acessors for ResellerId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.ResellerId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IResellerInternal)Reseller).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IResellerInternal)Reseller).Id = value; }

        /// <summary>Internal Acessors for TransactionDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IEventPropertiesInternal.TransactionDate { get => this._transactionDate; set { {_transactionDate = value;} } }

        /// <summary>Backing field for <see cref="NewCredit" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmount _newCredit;

        /// <summary>The amount of new credit or commitment for NewCredit or SettleCharges event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmount NewCredit { get => (this._newCredit = this._newCredit ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.Amount()); }

        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string NewCreditCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)NewCredit).Currency; }

        /// <summary>Backing field for <see cref="NewCreditInBillingCurrency" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRate _newCreditInBillingCurrency;

        /// <summary>
        /// The amount of new credit or commitment for NewCredit or SettleCharges event in billing currency.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRate NewCreditInBillingCurrency { get => (this._newCreditInBillingCurrency = this._newCreditInBillingCurrency ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.AmountWithExchangeRate()); }

        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string NewCreditInBillingCurrencyCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)NewCreditInBillingCurrency).Currency; }

        /// <summary>The exchange rate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? NewCreditInBillingCurrencyExchangeRate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRateInternal)NewCreditInBillingCurrency).ExchangeRate; }

        /// <summary>The exchange rate month.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public int? NewCreditInBillingCurrencyExchangeRateMonth { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRateInternal)NewCreditInBillingCurrency).ExchangeRateMonth; }

        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? NewCreditInBillingCurrencyValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)NewCreditInBillingCurrency).Value; }

        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? NewCreditValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountInternal)NewCredit).Value; }

        /// <summary>Backing field for <see cref="Reseller" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IReseller _reseller;

        /// <summary>The reseller of the event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IReseller Reseller { get => (this._reseller = this._reseller ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.Reseller()); }

        /// <summary>The reseller property description.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string ResellerDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IResellerInternal)Reseller).Description; }

        /// <summary>The reseller property ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string ResellerId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IResellerInternal)Reseller).Id; }

        /// <summary>Backing field for <see cref="TransactionDate" /> property.</summary>
        private global::System.DateTime? _transactionDate;

        /// <summary>The date of the event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public global::System.DateTime? TransactionDate { get => this._transactionDate; }

        /// <summary>Creates an new <see cref="EventProperties" /> instance.</summary>
        public EventProperties()
        {

        }
    }
    /// The event properties.
    public partial interface IEventProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.IJsonSerializable
    {
        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount currency.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string AdjustmentCurrency { get;  }
        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount currency.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string AdjustmentInBillingCurrency { get;  }
        /// <summary>The exchange rate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The exchange rate.",
        SerializedName = @"exchangeRate",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? AdjustmentInBillingCurrencyExchangeRate { get;  }
        /// <summary>The exchange rate month.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The exchange rate month.",
        SerializedName = @"exchangeRateMonth",
        PossibleTypes = new [] { typeof(int) })]
        int? AdjustmentInBillingCurrencyExchangeRateMonth { get;  }
        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? AdjustmentInBillingCurrencyValue { get;  }
        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? AdjustmentValue { get;  }
        /// <summary>The billing currency of the event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The billing currency of the event.",
        SerializedName = @"billingCurrency",
        PossibleTypes = new [] { typeof(string) })]
        string BillingCurrency { get;  }
        /// <summary>
        /// The display name of the billing profile for which the event happened. The property is only available for billing account
        /// of type MicrosoftCustomerAgreement.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The display name of the billing profile for which the event happened. The property is only available for billing account of type MicrosoftCustomerAgreement.",
        SerializedName = @"billingProfileDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string BillingProfileDisplayName { get;  }
        /// <summary>
        /// The ID that uniquely identifies the billing profile for which the event happened. The property is only available for billing
        /// account of type MicrosoftCustomerAgreement.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The ID that uniquely identifies the billing profile for which the event happened. The property is only available for billing account of type MicrosoftCustomerAgreement. ",
        SerializedName = @"billingProfileId",
        PossibleTypes = new [] { typeof(string) })]
        string BillingProfileId { get;  }
        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount currency.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string CanceledCreditCurrency { get;  }
        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? CanceledCreditValue { get;  }
        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount currency.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string ChargeCurrency { get;  }
        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount currency.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string ChargeInBillingCurrency { get;  }
        /// <summary>The exchange rate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The exchange rate.",
        SerializedName = @"exchangeRate",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? ChargeInBillingCurrencyExchangeRate { get;  }
        /// <summary>The exchange rate month.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The exchange rate month.",
        SerializedName = @"exchangeRateMonth",
        PossibleTypes = new [] { typeof(int) })]
        int? ChargeInBillingCurrencyExchangeRateMonth { get;  }
        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? ChargeInBillingCurrencyValue { get;  }
        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? ChargeValue { get;  }
        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount currency.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string ClosedBalanceCurrency { get;  }
        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount currency.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string ClosedBalanceInBillingCurrencyCurrency { get;  }
        /// <summary>The exchange rate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The exchange rate.",
        SerializedName = @"exchangeRate",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? ClosedBalanceInBillingCurrencyExchangeRate { get;  }
        /// <summary>The exchange rate month.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The exchange rate month.",
        SerializedName = @"exchangeRateMonth",
        PossibleTypes = new [] { typeof(int) })]
        int? ClosedBalanceInBillingCurrencyExchangeRateMonth { get;  }
        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? ClosedBalanceInBillingCurrencyValue { get;  }
        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? ClosedBalanceValue { get;  }
        /// <summary>The credit currency of the event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The credit currency of the event.",
        SerializedName = @"creditCurrency",
        PossibleTypes = new [] { typeof(string) })]
        string CreditCurrency { get;  }
        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount currency.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string CreditExpiredCurrency { get;  }
        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount currency.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string CreditExpiredInBillingCurrencyCurrency { get;  }
        /// <summary>The exchange rate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The exchange rate.",
        SerializedName = @"exchangeRate",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? CreditExpiredInBillingCurrencyExchangeRate { get;  }
        /// <summary>The exchange rate month.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The exchange rate month.",
        SerializedName = @"exchangeRateMonth",
        PossibleTypes = new [] { typeof(int) })]
        int? CreditExpiredInBillingCurrencyExchangeRateMonth { get;  }
        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? CreditExpiredInBillingCurrencyValue { get;  }
        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? CreditExpiredValue { get;  }
        /// <summary>The description of the event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The description of the event.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get;  }
        /// <summary>The eTag for the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The eTag for the resource.",
        SerializedName = @"eTag",
        PossibleTypes = new [] { typeof(string) })]
        string ETag { get;  }
        /// <summary>Identifies the type of the event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Identifies the type of the event.",
        SerializedName = @"eventType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.EventType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.EventType? EventType { get; set; }
        /// <summary>
        /// The number which uniquely identifies the invoice on which the event was billed. This will be empty for unbilled events.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number which uniquely identifies the invoice on which the event was billed. This will be empty for unbilled events.",
        SerializedName = @"invoiceNumber",
        PossibleTypes = new [] { typeof(string) })]
        string InvoiceNumber { get;  }
        /// <summary>The ID that uniquely identifies the lot for which the event happened.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The ID that uniquely identifies the lot for which the event happened.",
        SerializedName = @"lotId",
        PossibleTypes = new [] { typeof(string) })]
        string LotId { get;  }
        /// <summary>Identifies the source of the lot for which the event happened.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Identifies the source of the lot for which the event happened. ",
        SerializedName = @"lotSource",
        PossibleTypes = new [] { typeof(string) })]
        string LotSource { get;  }
        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount currency.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string NewCreditCurrency { get;  }
        /// <summary>Amount currency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount currency.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string NewCreditInBillingCurrencyCurrency { get;  }
        /// <summary>The exchange rate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The exchange rate.",
        SerializedName = @"exchangeRate",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? NewCreditInBillingCurrencyExchangeRate { get;  }
        /// <summary>The exchange rate month.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The exchange rate month.",
        SerializedName = @"exchangeRateMonth",
        PossibleTypes = new [] { typeof(int) })]
        int? NewCreditInBillingCurrencyExchangeRateMonth { get;  }
        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? NewCreditInBillingCurrencyValue { get;  }
        /// <summary>Amount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Amount.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? NewCreditValue { get;  }
        /// <summary>The reseller property description.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The reseller property description.",
        SerializedName = @"resellerDescription",
        PossibleTypes = new [] { typeof(string) })]
        string ResellerDescription { get;  }
        /// <summary>The reseller property ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The reseller property ID.",
        SerializedName = @"resellerId",
        PossibleTypes = new [] { typeof(string) })]
        string ResellerId { get;  }
        /// <summary>The date of the event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The date of the event.",
        SerializedName = @"transactionDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? TransactionDate { get;  }

    }
    /// The event properties.
    internal partial interface IEventPropertiesInternal

    {
        /// <summary>
        /// The amount of balance adjustment. The property is not available for ConsumptionCommitment lots.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmount Adjustment { get; set; }
        /// <summary>Amount currency.</summary>
        string AdjustmentCurrency { get; set; }
        /// <summary>Amount currency.</summary>
        string AdjustmentInBillingCurrency { get; set; }
        /// <summary>The exchange rate.</summary>
        decimal? AdjustmentInBillingCurrencyExchangeRate { get; set; }
        /// <summary>The exchange rate month.</summary>
        int? AdjustmentInBillingCurrencyExchangeRateMonth { get; set; }
        /// <summary>Amount.</summary>
        decimal? AdjustmentInBillingCurrencyValue { get; set; }
        /// <summary>Amount.</summary>
        decimal? AdjustmentValue { get; set; }
        /// <summary>The amount of balance adjustment in billing currency.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRate AdjustmentsInBillingCurrency { get; set; }
        /// <summary>The billing currency of the event.</summary>
        string BillingCurrency { get; set; }
        /// <summary>
        /// The display name of the billing profile for which the event happened. The property is only available for billing account
        /// of type MicrosoftCustomerAgreement.
        /// </summary>
        string BillingProfileDisplayName { get; set; }
        /// <summary>
        /// The ID that uniquely identifies the billing profile for which the event happened. The property is only available for billing
        /// account of type MicrosoftCustomerAgreement.
        /// </summary>
        string BillingProfileId { get; set; }
        /// <summary>Amount of canceled credit.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmount CanceledCredit { get; set; }
        /// <summary>Amount currency.</summary>
        string CanceledCreditCurrency { get; set; }
        /// <summary>Amount.</summary>
        decimal? CanceledCreditValue { get; set; }
        /// <summary>
        /// The amount of charges for events of type SettleCharges and PendingEligibleCharges.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmount Charge { get; set; }
        /// <summary>Amount currency.</summary>
        string ChargeCurrency { get; set; }
        /// <summary>Amount currency.</summary>
        string ChargeInBillingCurrency { get; set; }
        /// <summary>The exchange rate.</summary>
        decimal? ChargeInBillingCurrencyExchangeRate { get; set; }
        /// <summary>The exchange rate month.</summary>
        int? ChargeInBillingCurrencyExchangeRateMonth { get; set; }
        /// <summary>Amount.</summary>
        decimal? ChargeInBillingCurrencyValue { get; set; }
        /// <summary>Amount.</summary>
        decimal? ChargeValue { get; set; }
        /// <summary>
        /// The amount of charges for events of type SettleCharges and PendingEligibleCharges in billing currency.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRate ChargesInBillingCurrency { get; set; }
        /// <summary>The balance after the event.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmount ClosedBalance { get; set; }
        /// <summary>Amount currency.</summary>
        string ClosedBalanceCurrency { get; set; }
        /// <summary>The balance in billing currency after the event.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRate ClosedBalanceInBillingCurrency { get; set; }
        /// <summary>Amount currency.</summary>
        string ClosedBalanceInBillingCurrencyCurrency { get; set; }
        /// <summary>The exchange rate.</summary>
        decimal? ClosedBalanceInBillingCurrencyExchangeRate { get; set; }
        /// <summary>The exchange rate month.</summary>
        int? ClosedBalanceInBillingCurrencyExchangeRateMonth { get; set; }
        /// <summary>Amount.</summary>
        decimal? ClosedBalanceInBillingCurrencyValue { get; set; }
        /// <summary>Amount.</summary>
        decimal? ClosedBalanceValue { get; set; }
        /// <summary>The credit currency of the event.</summary>
        string CreditCurrency { get; set; }
        /// <summary>
        /// The amount of expired credit or commitment for NewCredit or SettleCharges event.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmount CreditExpired { get; set; }
        /// <summary>Amount currency.</summary>
        string CreditExpiredCurrency { get; set; }
        /// <summary>
        /// The amount of expired credit or commitment for NewCredit or SettleCharges event in billing currency.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRate CreditExpiredInBillingCurrency { get; set; }
        /// <summary>Amount currency.</summary>
        string CreditExpiredInBillingCurrencyCurrency { get; set; }
        /// <summary>The exchange rate.</summary>
        decimal? CreditExpiredInBillingCurrencyExchangeRate { get; set; }
        /// <summary>The exchange rate month.</summary>
        int? CreditExpiredInBillingCurrencyExchangeRateMonth { get; set; }
        /// <summary>Amount.</summary>
        decimal? CreditExpiredInBillingCurrencyValue { get; set; }
        /// <summary>Amount.</summary>
        decimal? CreditExpiredValue { get; set; }
        /// <summary>The description of the event.</summary>
        string Description { get; set; }
        /// <summary>The eTag for the resource.</summary>
        string ETag { get; set; }
        /// <summary>Identifies the type of the event.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.EventType? EventType { get; set; }
        /// <summary>
        /// The number which uniquely identifies the invoice on which the event was billed. This will be empty for unbilled events.
        /// </summary>
        string InvoiceNumber { get; set; }
        /// <summary>The ID that uniquely identifies the lot for which the event happened.</summary>
        string LotId { get; set; }
        /// <summary>Identifies the source of the lot for which the event happened.</summary>
        string LotSource { get; set; }
        /// <summary>The amount of new credit or commitment for NewCredit or SettleCharges event.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmount NewCredit { get; set; }
        /// <summary>Amount currency.</summary>
        string NewCreditCurrency { get; set; }
        /// <summary>
        /// The amount of new credit or commitment for NewCredit or SettleCharges event in billing currency.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IAmountWithExchangeRate NewCreditInBillingCurrency { get; set; }
        /// <summary>Amount currency.</summary>
        string NewCreditInBillingCurrencyCurrency { get; set; }
        /// <summary>The exchange rate.</summary>
        decimal? NewCreditInBillingCurrencyExchangeRate { get; set; }
        /// <summary>The exchange rate month.</summary>
        int? NewCreditInBillingCurrencyExchangeRateMonth { get; set; }
        /// <summary>Amount.</summary>
        decimal? NewCreditInBillingCurrencyValue { get; set; }
        /// <summary>Amount.</summary>
        decimal? NewCreditValue { get; set; }
        /// <summary>The reseller of the event.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IReseller Reseller { get; set; }
        /// <summary>The reseller property description.</summary>
        string ResellerDescription { get; set; }
        /// <summary>The reseller property ID.</summary>
        string ResellerId { get; set; }
        /// <summary>The date of the event.</summary>
        global::System.DateTime? TransactionDate { get; set; }

    }
}