// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Extensions;

    /// <summary>A marketplace resource.</summary>
    public partial class Marketplace :
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplace,
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplaceInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.Resource();

        /// <summary>Account name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string AccountName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).AccountName; }

        /// <summary>Additional information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string AdditionalInfo { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).AdditionalInfo; }

        /// <summary>
        /// Additional details of this usage item. By default this is not populated, unless it's specified in $expand.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string AdditionalProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).AdditionalProperty; }

        /// <summary>The id of the billing period resource that the usage belongs to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string BillingPeriodId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).BillingPeriodId; }

        /// <summary>The quantity of usage.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? ConsumedQuantity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).ConsumedQuantity; }

        /// <summary>Consumed service name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string ConsumedService { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).ConsumedService; }

        /// <summary>
        /// The cost center of this department if it is a department and a costcenter exists
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string CostCenter { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).CostCenter; }

        /// <summary>The ISO currency in which the meter is charged, for example, USD.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string Currency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).Currency; }

        /// <summary>Department name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string DepartmentName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).DepartmentName; }

        /// <summary>The etag for the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inherited)]
        public string Etag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IResourceInternal)__resource).Etag; }

        /// <summary>The full qualified ARM ID of an event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IResourceInternal)__resource).Id; }

        /// <summary>The uri of the resource instance that the usage is about.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string InstanceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).InstanceId; }

        /// <summary>The name of the resource instance that the usage is about.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string InstanceName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).InstanceName; }

        /// <summary>The estimated usage is subject to change.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public bool? IsEstimated { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).IsEstimated; }

        /// <summary>Flag indicating whether this is a recurring charge or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public bool? IsRecurringCharge { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).IsRecurringCharge; }

        /// <summary>The meter id (GUID).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string MeterId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).MeterId; }

        /// <summary>Internal Acessors for AccountName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplaceInternal.AccountName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).AccountName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).AccountName = value; }

        /// <summary>Internal Acessors for AdditionalInfo</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplaceInternal.AdditionalInfo { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).AdditionalInfo; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).AdditionalInfo = value; }

        /// <summary>Internal Acessors for AdditionalProperty</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplaceInternal.AdditionalProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).AdditionalProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).AdditionalProperty = value; }

        /// <summary>Internal Acessors for BillingPeriodId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplaceInternal.BillingPeriodId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).BillingPeriodId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).BillingPeriodId = value; }

        /// <summary>Internal Acessors for ConsumedQuantity</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplaceInternal.ConsumedQuantity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).ConsumedQuantity; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).ConsumedQuantity = value; }

        /// <summary>Internal Acessors for ConsumedService</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplaceInternal.ConsumedService { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).ConsumedService; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).ConsumedService = value; }

        /// <summary>Internal Acessors for CostCenter</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplaceInternal.CostCenter { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).CostCenter; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).CostCenter = value; }

        /// <summary>Internal Acessors for Currency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplaceInternal.Currency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).Currency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).Currency = value; }

        /// <summary>Internal Acessors for DepartmentName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplaceInternal.DepartmentName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).DepartmentName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).DepartmentName = value; }

        /// <summary>Internal Acessors for InstanceId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplaceInternal.InstanceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).InstanceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).InstanceId = value; }

        /// <summary>Internal Acessors for InstanceName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplaceInternal.InstanceName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).InstanceName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).InstanceName = value; }

        /// <summary>Internal Acessors for IsEstimated</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplaceInternal.IsEstimated { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).IsEstimated; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).IsEstimated = value; }

        /// <summary>Internal Acessors for IsRecurringCharge</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplaceInternal.IsRecurringCharge { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).IsRecurringCharge; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).IsRecurringCharge = value; }

        /// <summary>Internal Acessors for MeterId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplaceInternal.MeterId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).MeterId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).MeterId = value; }

        /// <summary>Internal Acessors for OfferName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplaceInternal.OfferName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).OfferName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).OfferName = value; }

        /// <summary>Internal Acessors for OrderNumber</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplaceInternal.OrderNumber { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).OrderNumber; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).OrderNumber = value; }

        /// <summary>Internal Acessors for PlanName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplaceInternal.PlanName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).PlanName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).PlanName = value; }

        /// <summary>Internal Acessors for PretaxCost</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplaceInternal.PretaxCost { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).PretaxCost; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).PretaxCost = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplaceProperties Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplaceInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.MarketplaceProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for PublisherName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplaceInternal.PublisherName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).PublisherName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).PublisherName = value; }

        /// <summary>Internal Acessors for ResourceGroup</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplaceInternal.ResourceGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).ResourceGroup; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).ResourceGroup = value; }

        /// <summary>Internal Acessors for ResourceRate</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplaceInternal.ResourceRate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).ResourceRate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).ResourceRate = value; }

        /// <summary>Internal Acessors for SubscriptionGuid</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplaceInternal.SubscriptionGuid { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).SubscriptionGuid; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).SubscriptionGuid = value; }

        /// <summary>Internal Acessors for SubscriptionName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplaceInternal.SubscriptionName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).SubscriptionName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).SubscriptionName = value; }

        /// <summary>Internal Acessors for UnitOfMeasure</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplaceInternal.UnitOfMeasure { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).UnitOfMeasure; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).UnitOfMeasure = value; }

        /// <summary>Internal Acessors for UsageEnd</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplaceInternal.UsageEnd { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).UsageEnd; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).UsageEnd = value; }

        /// <summary>Internal Acessors for UsageStart</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplaceInternal.UsageStart { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).UsageStart; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).UsageStart = value; }

        /// <summary>Internal Acessors for Etag</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IResourceInternal.Etag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IResourceInternal)__resource).Etag; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IResourceInternal)__resource).Etag = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for Tag</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IResourceTags Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IResourceInternal.Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IResourceInternal)__resource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IResourceInternal)__resource).Tag = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IResourceInternal)__resource).Type = value; }

        /// <summary>The ID that uniquely identifies an event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IResourceInternal)__resource).Name; }

        /// <summary>The type of offer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string OfferName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).OfferName; }

        /// <summary>The order number.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string OrderNumber { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).OrderNumber; }

        /// <summary>The name of plan.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string PlanName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).PlanName; }

        /// <summary>The amount of cost before tax.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? PretaxCost { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).PretaxCost; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplaceProperties _property;

        /// <summary>The properties of the marketplace usage detail.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplaceProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.MarketplaceProperties()); set => this._property = value; }

        /// <summary>The name of publisher.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string PublisherName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).PublisherName; }

        /// <summary>The name of resource group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string ResourceGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).ResourceGroup; }

        /// <summary>The marketplace resource rate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public decimal? ResourceRate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).ResourceRate; }

        /// <summary>Subscription guid.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string SubscriptionGuid { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).SubscriptionGuid; }

        /// <summary>Subscription name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string SubscriptionName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).SubscriptionName; }

        /// <summary>Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IResourceInternal)__resource).Tag; }

        /// <summary>Resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IResourceInternal)__resource).Type; }

        /// <summary>The unit of measure.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public string UnitOfMeasure { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).UnitOfMeasure; }

        /// <summary>The end of the date time range covered by the usage detail.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public global::System.DateTime? UsageEnd { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).UsageEnd; }

        /// <summary>The start of the date time range covered by the usage detail.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Inlined)]
        public global::System.DateTime? UsageStart { get => ((Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplacePropertiesInternal)Property).UsageStart; }

        /// <summary>Creates an new <see cref="Marketplace" /> instance.</summary>
        public Marketplace()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// A marketplace resource.
    public partial interface IMarketplace :
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IResource
    {
        /// <summary>Account name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Account name.",
        SerializedName = @"accountName",
        PossibleTypes = new [] { typeof(string) })]
        string AccountName { get;  }
        /// <summary>Additional information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Additional information.",
        SerializedName = @"additionalInfo",
        PossibleTypes = new [] { typeof(string) })]
        string AdditionalInfo { get;  }
        /// <summary>
        /// Additional details of this usage item. By default this is not populated, unless it's specified in $expand.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Additional details of this usage item. By default this is not populated, unless it's specified in $expand.",
        SerializedName = @"additionalProperties",
        PossibleTypes = new [] { typeof(string) })]
        string AdditionalProperty { get;  }
        /// <summary>The id of the billing period resource that the usage belongs to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The id of the billing period resource that the usage belongs to.",
        SerializedName = @"billingPeriodId",
        PossibleTypes = new [] { typeof(string) })]
        string BillingPeriodId { get;  }
        /// <summary>The quantity of usage.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The quantity of usage.",
        SerializedName = @"consumedQuantity",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? ConsumedQuantity { get;  }
        /// <summary>Consumed service name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Consumed service name.",
        SerializedName = @"consumedService",
        PossibleTypes = new [] { typeof(string) })]
        string ConsumedService { get;  }
        /// <summary>
        /// The cost center of this department if it is a department and a costcenter exists
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The cost center of this department if it is a department and a costcenter exists",
        SerializedName = @"costCenter",
        PossibleTypes = new [] { typeof(string) })]
        string CostCenter { get;  }
        /// <summary>The ISO currency in which the meter is charged, for example, USD.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The ISO currency in which the meter is charged, for example, USD.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string Currency { get;  }
        /// <summary>Department name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Department name.",
        SerializedName = @"departmentName",
        PossibleTypes = new [] { typeof(string) })]
        string DepartmentName { get;  }
        /// <summary>The uri of the resource instance that the usage is about.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The uri of the resource instance that the usage is about.",
        SerializedName = @"instanceId",
        PossibleTypes = new [] { typeof(string) })]
        string InstanceId { get;  }
        /// <summary>The name of the resource instance that the usage is about.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of the resource instance that the usage is about.",
        SerializedName = @"instanceName",
        PossibleTypes = new [] { typeof(string) })]
        string InstanceName { get;  }
        /// <summary>The estimated usage is subject to change.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The estimated usage is subject to change.",
        SerializedName = @"isEstimated",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsEstimated { get;  }
        /// <summary>Flag indicating whether this is a recurring charge or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Flag indicating whether this is a recurring charge or not.",
        SerializedName = @"isRecurringCharge",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsRecurringCharge { get;  }
        /// <summary>The meter id (GUID).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The meter id (GUID).",
        SerializedName = @"meterId",
        PossibleTypes = new [] { typeof(string) })]
        string MeterId { get;  }
        /// <summary>The type of offer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The type of offer.",
        SerializedName = @"offerName",
        PossibleTypes = new [] { typeof(string) })]
        string OfferName { get;  }
        /// <summary>The order number.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The order number.",
        SerializedName = @"orderNumber",
        PossibleTypes = new [] { typeof(string) })]
        string OrderNumber { get;  }
        /// <summary>The name of plan.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of plan.",
        SerializedName = @"planName",
        PossibleTypes = new [] { typeof(string) })]
        string PlanName { get;  }
        /// <summary>The amount of cost before tax.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The amount of cost before tax.",
        SerializedName = @"pretaxCost",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? PretaxCost { get;  }
        /// <summary>The name of publisher.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of publisher.",
        SerializedName = @"publisherName",
        PossibleTypes = new [] { typeof(string) })]
        string PublisherName { get;  }
        /// <summary>The name of resource group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of resource group.",
        SerializedName = @"resourceGroup",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceGroup { get;  }
        /// <summary>The marketplace resource rate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The marketplace resource rate.",
        SerializedName = @"resourceRate",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? ResourceRate { get;  }
        /// <summary>Subscription guid.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Subscription guid.",
        SerializedName = @"subscriptionGuid",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionGuid { get;  }
        /// <summary>Subscription name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Subscription name.",
        SerializedName = @"subscriptionName",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionName { get;  }
        /// <summary>The unit of measure.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The unit of measure.",
        SerializedName = @"unitOfMeasure",
        PossibleTypes = new [] { typeof(string) })]
        string UnitOfMeasure { get;  }
        /// <summary>The end of the date time range covered by the usage detail.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The end of the date time range covered by the usage detail.",
        SerializedName = @"usageEnd",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? UsageEnd { get;  }
        /// <summary>The start of the date time range covered by the usage detail.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The start of the date time range covered by the usage detail.",
        SerializedName = @"usageStart",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? UsageStart { get;  }

    }
    /// A marketplace resource.
    internal partial interface IMarketplaceInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IResourceInternal
    {
        /// <summary>Account name.</summary>
        string AccountName { get; set; }
        /// <summary>Additional information.</summary>
        string AdditionalInfo { get; set; }
        /// <summary>
        /// Additional details of this usage item. By default this is not populated, unless it's specified in $expand.
        /// </summary>
        string AdditionalProperty { get; set; }
        /// <summary>The id of the billing period resource that the usage belongs to.</summary>
        string BillingPeriodId { get; set; }
        /// <summary>The quantity of usage.</summary>
        decimal? ConsumedQuantity { get; set; }
        /// <summary>Consumed service name.</summary>
        string ConsumedService { get; set; }
        /// <summary>
        /// The cost center of this department if it is a department and a costcenter exists
        /// </summary>
        string CostCenter { get; set; }
        /// <summary>The ISO currency in which the meter is charged, for example, USD.</summary>
        string Currency { get; set; }
        /// <summary>Department name.</summary>
        string DepartmentName { get; set; }
        /// <summary>The uri of the resource instance that the usage is about.</summary>
        string InstanceId { get; set; }
        /// <summary>The name of the resource instance that the usage is about.</summary>
        string InstanceName { get; set; }
        /// <summary>The estimated usage is subject to change.</summary>
        bool? IsEstimated { get; set; }
        /// <summary>Flag indicating whether this is a recurring charge or not.</summary>
        bool? IsRecurringCharge { get; set; }
        /// <summary>The meter id (GUID).</summary>
        string MeterId { get; set; }
        /// <summary>The type of offer.</summary>
        string OfferName { get; set; }
        /// <summary>The order number.</summary>
        string OrderNumber { get; set; }
        /// <summary>The name of plan.</summary>
        string PlanName { get; set; }
        /// <summary>The amount of cost before tax.</summary>
        decimal? PretaxCost { get; set; }
        /// <summary>The properties of the marketplace usage detail.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplaceProperties Property { get; set; }
        /// <summary>The name of publisher.</summary>
        string PublisherName { get; set; }
        /// <summary>The name of resource group.</summary>
        string ResourceGroup { get; set; }
        /// <summary>The marketplace resource rate.</summary>
        decimal? ResourceRate { get; set; }
        /// <summary>Subscription guid.</summary>
        string SubscriptionGuid { get; set; }
        /// <summary>Subscription name.</summary>
        string SubscriptionName { get; set; }
        /// <summary>The unit of measure.</summary>
        string UnitOfMeasure { get; set; }
        /// <summary>The end of the date time range covered by the usage detail.</summary>
        global::System.DateTime? UsageEnd { get; set; }
        /// <summary>The start of the date time range covered by the usage detail.</summary>
        global::System.DateTime? UsageStart { get; set; }

    }
}