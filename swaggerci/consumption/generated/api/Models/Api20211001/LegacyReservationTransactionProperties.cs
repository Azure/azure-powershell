// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Extensions;

    /// <summary>The properties of a legacy reservation transaction.</summary>
    public partial class LegacyReservationTransactionProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILegacyReservationTransactionProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILegacyReservationTransactionPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AccountName" /> property.</summary>
        private string _accountName;

        /// <summary>The name of the account that makes the transaction.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string AccountName { get => this._accountName; }

        /// <summary>Backing field for <see cref="AccountOwnerEmail" /> property.</summary>
        private string _accountOwnerEmail;

        /// <summary>The email of the account owner that makes the transaction.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string AccountOwnerEmail { get => this._accountOwnerEmail; }

        /// <summary>Backing field for <see cref="Amount" /> property.</summary>
        private decimal? _amount;

        /// <summary>The charge of the transaction.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public decimal? Amount { get => this._amount; }

        /// <summary>Backing field for <see cref="ArmSkuName" /> property.</summary>
        private string _armSkuName;

        /// <summary>
        /// This is the ARM Sku name. It can be used to join with the serviceType field in additional info in usage records.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string ArmSkuName { get => this._armSkuName; }

        /// <summary>Backing field for <see cref="BillingFrequency" /> property.</summary>
        private string _billingFrequency;

        /// <summary>The billing frequency, which can be either one-time or recurring.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string BillingFrequency { get => this._billingFrequency; }

        /// <summary>Backing field for <see cref="BillingMonth" /> property.</summary>
        private int? _billingMonth;

        /// <summary>The billing month(yyyyMMdd), on which the event initiated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public int? BillingMonth { get => this._billingMonth; }

        /// <summary>Backing field for <see cref="CostCenter" /> property.</summary>
        private string _costCenter;

        /// <summary>
        /// The cost center of this department if it is a department and a cost center is provided.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string CostCenter { get => this._costCenter; }

        /// <summary>Backing field for <see cref="Currency" /> property.</summary>
        private string _currency;

        /// <summary>The ISO currency in which the transaction is charged, for example, USD.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string Currency { get => this._currency; }

        /// <summary>Backing field for <see cref="CurrentEnrollment" /> property.</summary>
        private string _currentEnrollment;

        /// <summary>The current enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string CurrentEnrollment { get => this._currentEnrollment; }

        /// <summary>Backing field for <see cref="DepartmentName" /> property.</summary>
        private string _departmentName;

        /// <summary>The department name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string DepartmentName { get => this._departmentName; }

        /// <summary>Backing field for <see cref="Description" /> property.</summary>
        private string _description;

        /// <summary>The description of the transaction.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string Description { get => this._description; }

        /// <summary>Backing field for <see cref="EventDate" /> property.</summary>
        private global::System.DateTime? _eventDate;

        /// <summary>The date of the transaction</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public global::System.DateTime? EventDate { get => this._eventDate; }

        /// <summary>Backing field for <see cref="EventType" /> property.</summary>
        private string _eventType;

        /// <summary>The type of the transaction (Purchase, Cancel, etc.)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string EventType { get => this._eventType; }

        /// <summary>Internal Acessors for AccountName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILegacyReservationTransactionPropertiesInternal.AccountName { get => this._accountName; set { {_accountName = value;} } }

        /// <summary>Internal Acessors for AccountOwnerEmail</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILegacyReservationTransactionPropertiesInternal.AccountOwnerEmail { get => this._accountOwnerEmail; set { {_accountOwnerEmail = value;} } }

        /// <summary>Internal Acessors for Amount</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILegacyReservationTransactionPropertiesInternal.Amount { get => this._amount; set { {_amount = value;} } }

        /// <summary>Internal Acessors for ArmSkuName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILegacyReservationTransactionPropertiesInternal.ArmSkuName { get => this._armSkuName; set { {_armSkuName = value;} } }

        /// <summary>Internal Acessors for BillingFrequency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILegacyReservationTransactionPropertiesInternal.BillingFrequency { get => this._billingFrequency; set { {_billingFrequency = value;} } }

        /// <summary>Internal Acessors for BillingMonth</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILegacyReservationTransactionPropertiesInternal.BillingMonth { get => this._billingMonth; set { {_billingMonth = value;} } }

        /// <summary>Internal Acessors for CostCenter</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILegacyReservationTransactionPropertiesInternal.CostCenter { get => this._costCenter; set { {_costCenter = value;} } }

        /// <summary>Internal Acessors for Currency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILegacyReservationTransactionPropertiesInternal.Currency { get => this._currency; set { {_currency = value;} } }

        /// <summary>Internal Acessors for CurrentEnrollment</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILegacyReservationTransactionPropertiesInternal.CurrentEnrollment { get => this._currentEnrollment; set { {_currentEnrollment = value;} } }

        /// <summary>Internal Acessors for DepartmentName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILegacyReservationTransactionPropertiesInternal.DepartmentName { get => this._departmentName; set { {_departmentName = value;} } }

        /// <summary>Internal Acessors for Description</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILegacyReservationTransactionPropertiesInternal.Description { get => this._description; set { {_description = value;} } }

        /// <summary>Internal Acessors for EventDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILegacyReservationTransactionPropertiesInternal.EventDate { get => this._eventDate; set { {_eventDate = value;} } }

        /// <summary>Internal Acessors for EventType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILegacyReservationTransactionPropertiesInternal.EventType { get => this._eventType; set { {_eventType = value;} } }

        /// <summary>Internal Acessors for MonetaryCommitment</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILegacyReservationTransactionPropertiesInternal.MonetaryCommitment { get => this._monetaryCommitment; set { {_monetaryCommitment = value;} } }

        /// <summary>Internal Acessors for Overage</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILegacyReservationTransactionPropertiesInternal.Overage { get => this._overage; set { {_overage = value;} } }

        /// <summary>Internal Acessors for PurchasingEnrollment</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILegacyReservationTransactionPropertiesInternal.PurchasingEnrollment { get => this._purchasingEnrollment; set { {_purchasingEnrollment = value;} } }

        /// <summary>Internal Acessors for PurchasingSubscriptionGuid</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILegacyReservationTransactionPropertiesInternal.PurchasingSubscriptionGuid { get => this._purchasingSubscriptionGuid; set { {_purchasingSubscriptionGuid = value;} } }

        /// <summary>Internal Acessors for PurchasingSubscriptionName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILegacyReservationTransactionPropertiesInternal.PurchasingSubscriptionName { get => this._purchasingSubscriptionName; set { {_purchasingSubscriptionName = value;} } }

        /// <summary>Internal Acessors for Quantity</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILegacyReservationTransactionPropertiesInternal.Quantity { get => this._quantity; set { {_quantity = value;} } }

        /// <summary>Internal Acessors for Region</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILegacyReservationTransactionPropertiesInternal.Region { get => this._region; set { {_region = value;} } }

        /// <summary>Internal Acessors for ReservationOrderId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILegacyReservationTransactionPropertiesInternal.ReservationOrderId { get => this._reservationOrderId; set { {_reservationOrderId = value;} } }

        /// <summary>Internal Acessors for ReservationOrderName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILegacyReservationTransactionPropertiesInternal.ReservationOrderName { get => this._reservationOrderName; set { {_reservationOrderName = value;} } }

        /// <summary>Internal Acessors for Term</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILegacyReservationTransactionPropertiesInternal.Term { get => this._term; set { {_term = value;} } }

        /// <summary>Backing field for <see cref="MonetaryCommitment" /> property.</summary>
        private decimal? _monetaryCommitment;

        /// <summary>The monetary commitment amount at the enrollment scope.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public decimal? MonetaryCommitment { get => this._monetaryCommitment; }

        /// <summary>Backing field for <see cref="Overage" /> property.</summary>
        private decimal? _overage;

        /// <summary>The overage amount at the enrollment scope.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public decimal? Overage { get => this._overage; }

        /// <summary>Backing field for <see cref="PurchasingEnrollment" /> property.</summary>
        private string _purchasingEnrollment;

        /// <summary>The purchasing enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string PurchasingEnrollment { get => this._purchasingEnrollment; }

        /// <summary>Backing field for <see cref="PurchasingSubscriptionGuid" /> property.</summary>
        private string _purchasingSubscriptionGuid;

        /// <summary>The subscription guid that makes the transaction.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string PurchasingSubscriptionGuid { get => this._purchasingSubscriptionGuid; }

        /// <summary>Backing field for <see cref="PurchasingSubscriptionName" /> property.</summary>
        private string _purchasingSubscriptionName;

        /// <summary>The subscription name that makes the transaction.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string PurchasingSubscriptionName { get => this._purchasingSubscriptionName; }

        /// <summary>Backing field for <see cref="Quantity" /> property.</summary>
        private decimal? _quantity;

        /// <summary>The quantity of the transaction.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public decimal? Quantity { get => this._quantity; }

        /// <summary>Backing field for <see cref="Region" /> property.</summary>
        private string _region;

        /// <summary>The region of the transaction.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string Region { get => this._region; }

        /// <summary>Backing field for <see cref="ReservationOrderId" /> property.</summary>
        private string _reservationOrderId;

        /// <summary>
        /// The reservation order ID is the identifier for a reservation purchase. Each reservation order ID represents a single purchase
        /// transaction. A reservation order contains reservations. The reservation order specifies the VM size and region for the
        /// reservations.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string ReservationOrderId { get => this._reservationOrderId; }

        /// <summary>Backing field for <see cref="ReservationOrderName" /> property.</summary>
        private string _reservationOrderName;

        /// <summary>The name of the reservation order.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string ReservationOrderName { get => this._reservationOrderName; }

        /// <summary>Backing field for <see cref="Term" /> property.</summary>
        private string _term;

        /// <summary>This is the term of the transaction.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Origin(Microsoft.Azure.PowerShell.Cmdlets.Consumption.PropertyOrigin.Owned)]
        public string Term { get => this._term; }

        /// <summary>Creates an new <see cref="LegacyReservationTransactionProperties" /> instance.</summary>
        public LegacyReservationTransactionProperties()
        {

        }
    }
    /// The properties of a legacy reservation transaction.
    public partial interface ILegacyReservationTransactionProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.IJsonSerializable
    {
        /// <summary>The name of the account that makes the transaction.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of the account that makes the transaction.",
        SerializedName = @"accountName",
        PossibleTypes = new [] { typeof(string) })]
        string AccountName { get;  }
        /// <summary>The email of the account owner that makes the transaction.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The email of the account owner that makes the transaction.",
        SerializedName = @"accountOwnerEmail",
        PossibleTypes = new [] { typeof(string) })]
        string AccountOwnerEmail { get;  }
        /// <summary>The charge of the transaction.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The charge of the transaction.",
        SerializedName = @"amount",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? Amount { get;  }
        /// <summary>
        /// This is the ARM Sku name. It can be used to join with the serviceType field in additional info in usage records.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"This is the ARM Sku name. It can be used to join with the serviceType field in additional info in usage records.",
        SerializedName = @"armSkuName",
        PossibleTypes = new [] { typeof(string) })]
        string ArmSkuName { get;  }
        /// <summary>The billing frequency, which can be either one-time or recurring.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The billing frequency, which can be either one-time or recurring.",
        SerializedName = @"billingFrequency",
        PossibleTypes = new [] { typeof(string) })]
        string BillingFrequency { get;  }
        /// <summary>The billing month(yyyyMMdd), on which the event initiated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The billing month(yyyyMMdd), on which the event initiated.",
        SerializedName = @"billingMonth",
        PossibleTypes = new [] { typeof(int) })]
        int? BillingMonth { get;  }
        /// <summary>
        /// The cost center of this department if it is a department and a cost center is provided.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The cost center of this department if it is a department and a cost center is provided.",
        SerializedName = @"costCenter",
        PossibleTypes = new [] { typeof(string) })]
        string CostCenter { get;  }
        /// <summary>The ISO currency in which the transaction is charged, for example, USD.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The ISO currency in which the transaction is charged, for example, USD.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string Currency { get;  }
        /// <summary>The current enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The current enrollment.",
        SerializedName = @"currentEnrollment",
        PossibleTypes = new [] { typeof(string) })]
        string CurrentEnrollment { get;  }
        /// <summary>The department name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The department name.",
        SerializedName = @"departmentName",
        PossibleTypes = new [] { typeof(string) })]
        string DepartmentName { get;  }
        /// <summary>The description of the transaction.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The description of the transaction.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get;  }
        /// <summary>The date of the transaction</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The date of the transaction",
        SerializedName = @"eventDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? EventDate { get;  }
        /// <summary>The type of the transaction (Purchase, Cancel, etc.)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The type of the transaction (Purchase, Cancel, etc.)",
        SerializedName = @"eventType",
        PossibleTypes = new [] { typeof(string) })]
        string EventType { get;  }
        /// <summary>The monetary commitment amount at the enrollment scope.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The monetary commitment amount at the enrollment scope.",
        SerializedName = @"monetaryCommitment",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? MonetaryCommitment { get;  }
        /// <summary>The overage amount at the enrollment scope.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The overage amount at the enrollment scope.",
        SerializedName = @"overage",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? Overage { get;  }
        /// <summary>The purchasing enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The purchasing enrollment.",
        SerializedName = @"purchasingEnrollment",
        PossibleTypes = new [] { typeof(string) })]
        string PurchasingEnrollment { get;  }
        /// <summary>The subscription guid that makes the transaction.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The subscription guid that makes the transaction.",
        SerializedName = @"purchasingSubscriptionGuid",
        PossibleTypes = new [] { typeof(string) })]
        string PurchasingSubscriptionGuid { get;  }
        /// <summary>The subscription name that makes the transaction.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The subscription name that makes the transaction.",
        SerializedName = @"purchasingSubscriptionName",
        PossibleTypes = new [] { typeof(string) })]
        string PurchasingSubscriptionName { get;  }
        /// <summary>The quantity of the transaction.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The quantity of the transaction.",
        SerializedName = @"quantity",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? Quantity { get;  }
        /// <summary>The region of the transaction.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The region of the transaction.",
        SerializedName = @"region",
        PossibleTypes = new [] { typeof(string) })]
        string Region { get;  }
        /// <summary>
        /// The reservation order ID is the identifier for a reservation purchase. Each reservation order ID represents a single purchase
        /// transaction. A reservation order contains reservations. The reservation order specifies the VM size and region for the
        /// reservations.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The reservation order ID is the identifier for a reservation purchase. Each reservation order ID represents a single purchase transaction. A reservation order contains reservations. The reservation order specifies the VM size and region for the reservations.",
        SerializedName = @"reservationOrderId",
        PossibleTypes = new [] { typeof(string) })]
        string ReservationOrderId { get;  }
        /// <summary>The name of the reservation order.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of the reservation order.",
        SerializedName = @"reservationOrderName",
        PossibleTypes = new [] { typeof(string) })]
        string ReservationOrderName { get;  }
        /// <summary>This is the term of the transaction.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"This is the term of the transaction.",
        SerializedName = @"term",
        PossibleTypes = new [] { typeof(string) })]
        string Term { get;  }

    }
    /// The properties of a legacy reservation transaction.
    internal partial interface ILegacyReservationTransactionPropertiesInternal

    {
        /// <summary>The name of the account that makes the transaction.</summary>
        string AccountName { get; set; }
        /// <summary>The email of the account owner that makes the transaction.</summary>
        string AccountOwnerEmail { get; set; }
        /// <summary>The charge of the transaction.</summary>
        decimal? Amount { get; set; }
        /// <summary>
        /// This is the ARM Sku name. It can be used to join with the serviceType field in additional info in usage records.
        /// </summary>
        string ArmSkuName { get; set; }
        /// <summary>The billing frequency, which can be either one-time or recurring.</summary>
        string BillingFrequency { get; set; }
        /// <summary>The billing month(yyyyMMdd), on which the event initiated.</summary>
        int? BillingMonth { get; set; }
        /// <summary>
        /// The cost center of this department if it is a department and a cost center is provided.
        /// </summary>
        string CostCenter { get; set; }
        /// <summary>The ISO currency in which the transaction is charged, for example, USD.</summary>
        string Currency { get; set; }
        /// <summary>The current enrollment.</summary>
        string CurrentEnrollment { get; set; }
        /// <summary>The department name.</summary>
        string DepartmentName { get; set; }
        /// <summary>The description of the transaction.</summary>
        string Description { get; set; }
        /// <summary>The date of the transaction</summary>
        global::System.DateTime? EventDate { get; set; }
        /// <summary>The type of the transaction (Purchase, Cancel, etc.)</summary>
        string EventType { get; set; }
        /// <summary>The monetary commitment amount at the enrollment scope.</summary>
        decimal? MonetaryCommitment { get; set; }
        /// <summary>The overage amount at the enrollment scope.</summary>
        decimal? Overage { get; set; }
        /// <summary>The purchasing enrollment.</summary>
        string PurchasingEnrollment { get; set; }
        /// <summary>The subscription guid that makes the transaction.</summary>
        string PurchasingSubscriptionGuid { get; set; }
        /// <summary>The subscription name that makes the transaction.</summary>
        string PurchasingSubscriptionName { get; set; }
        /// <summary>The quantity of the transaction.</summary>
        decimal? Quantity { get; set; }
        /// <summary>The region of the transaction.</summary>
        string Region { get; set; }
        /// <summary>
        /// The reservation order ID is the identifier for a reservation purchase. Each reservation order ID represents a single purchase
        /// transaction. A reservation order contains reservations. The reservation order specifies the VM size and region for the
        /// reservations.
        /// </summary>
        string ReservationOrderId { get; set; }
        /// <summary>The name of the reservation order.</summary>
        string ReservationOrderName { get; set; }
        /// <summary>This is the term of the transaction.</summary>
        string Term { get; set; }

    }
}