// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Extensions;

    /// <summary>The properties of the marketplace usage detail.</summary>
    public partial class MarketplaceProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json erialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplaceProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplaceProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IMarketplaceProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject json ? new MarketplaceProperties(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject into a new instance of <see cref="MarketplaceProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal MarketplaceProperties(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_billingPeriodId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("billingPeriodId"), out var __jsonBillingPeriodId) ? (string)__jsonBillingPeriodId : (string)BillingPeriodId;}
            {_usageStart = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("usageStart"), out var __jsonUsageStart) ? global::System.DateTime.TryParse((string)__jsonUsageStart, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonUsageStartValue) ? __jsonUsageStartValue : UsageStart : UsageStart;}
            {_usageEnd = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("usageEnd"), out var __jsonUsageEnd) ? global::System.DateTime.TryParse((string)__jsonUsageEnd, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonUsageEndValue) ? __jsonUsageEndValue : UsageEnd : UsageEnd;}
            {_resourceRate = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNumber>("resourceRate"), out var __jsonResourceRate) ? (decimal?)__jsonResourceRate : ResourceRate;}
            {_offerName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("offerName"), out var __jsonOfferName) ? (string)__jsonOfferName : (string)OfferName;}
            {_resourceGroup = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("resourceGroup"), out var __jsonResourceGroup) ? (string)__jsonResourceGroup : (string)ResourceGroup;}
            {_additionalInfo = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("additionalInfo"), out var __jsonAdditionalInfo) ? (string)__jsonAdditionalInfo : (string)AdditionalInfo;}
            {_orderNumber = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("orderNumber"), out var __jsonOrderNumber) ? (string)__jsonOrderNumber : (string)OrderNumber;}
            {_instanceName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("instanceName"), out var __jsonInstanceName) ? (string)__jsonInstanceName : (string)InstanceName;}
            {_instanceId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("instanceId"), out var __jsonInstanceId) ? (string)__jsonInstanceId : (string)InstanceId;}
            {_currency = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("currency"), out var __jsonCurrency) ? (string)__jsonCurrency : (string)Currency;}
            {_consumedQuantity = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNumber>("consumedQuantity"), out var __jsonConsumedQuantity) ? (decimal?)__jsonConsumedQuantity : ConsumedQuantity;}
            {_unitOfMeasure = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("unitOfMeasure"), out var __jsonUnitOfMeasure) ? (string)__jsonUnitOfMeasure : (string)UnitOfMeasure;}
            {_pretaxCost = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNumber>("pretaxCost"), out var __jsonPretaxCost) ? (decimal?)__jsonPretaxCost : PretaxCost;}
            {_isEstimated = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonBoolean>("isEstimated"), out var __jsonIsEstimated) ? (bool?)__jsonIsEstimated : IsEstimated;}
            {_meterId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("meterId"), out var __jsonMeterId) ? (string)__jsonMeterId : (string)MeterId;}
            {_subscriptionGuid = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("subscriptionGuid"), out var __jsonSubscriptionGuid) ? (string)__jsonSubscriptionGuid : (string)SubscriptionGuid;}
            {_subscriptionName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("subscriptionName"), out var __jsonSubscriptionName) ? (string)__jsonSubscriptionName : (string)SubscriptionName;}
            {_accountName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("accountName"), out var __jsonAccountName) ? (string)__jsonAccountName : (string)AccountName;}
            {_departmentName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("departmentName"), out var __jsonDepartmentName) ? (string)__jsonDepartmentName : (string)DepartmentName;}
            {_consumedService = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("consumedService"), out var __jsonConsumedService) ? (string)__jsonConsumedService : (string)ConsumedService;}
            {_costCenter = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("costCenter"), out var __jsonCostCenter) ? (string)__jsonCostCenter : (string)CostCenter;}
            {_additionalProperty = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("additionalProperties"), out var __jsonAdditionalProperties) ? (string)__jsonAdditionalProperties : (string)AdditionalProperty;}
            {_publisherName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("publisherName"), out var __jsonPublisherName) ? (string)__jsonPublisherName : (string)PublisherName;}
            {_planName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("planName"), out var __jsonPlanName) ? (string)__jsonPlanName : (string)PlanName;}
            {_isRecurringCharge = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonBoolean>("isRecurringCharge"), out var __jsonIsRecurringCharge) ? (bool?)__jsonIsRecurringCharge : IsRecurringCharge;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="MarketplaceProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="MarketplaceProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._billingPeriodId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._billingPeriodId.ToString()) : null, "billingPeriodId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._usageStart ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._usageStart?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "usageStart" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._usageEnd ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._usageEnd?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "usageEnd" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._resourceRate ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNumber((decimal)this._resourceRate) : null, "resourceRate" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._offerName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._offerName.ToString()) : null, "offerName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._resourceGroup)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._resourceGroup.ToString()) : null, "resourceGroup" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._additionalInfo)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._additionalInfo.ToString()) : null, "additionalInfo" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._orderNumber)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._orderNumber.ToString()) : null, "orderNumber" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._instanceName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._instanceName.ToString()) : null, "instanceName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._instanceId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._instanceId.ToString()) : null, "instanceId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._currency)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._currency.ToString()) : null, "currency" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._consumedQuantity ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNumber((decimal)this._consumedQuantity) : null, "consumedQuantity" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._unitOfMeasure)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._unitOfMeasure.ToString()) : null, "unitOfMeasure" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._pretaxCost ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNumber((decimal)this._pretaxCost) : null, "pretaxCost" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._isEstimated ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonBoolean((bool)this._isEstimated) : null, "isEstimated" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._meterId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._meterId.ToString()) : null, "meterId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._subscriptionGuid)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._subscriptionGuid.ToString()) : null, "subscriptionGuid" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._subscriptionName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._subscriptionName.ToString()) : null, "subscriptionName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._accountName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._accountName.ToString()) : null, "accountName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._departmentName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._departmentName.ToString()) : null, "departmentName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._consumedService)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._consumedService.ToString()) : null, "consumedService" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._costCenter)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._costCenter.ToString()) : null, "costCenter" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._additionalProperty)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._additionalProperty.ToString()) : null, "additionalProperties" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._publisherName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._publisherName.ToString()) : null, "publisherName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._planName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._planName.ToString()) : null, "planName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._isRecurringCharge ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonBoolean((bool)this._isRecurringCharge) : null, "isRecurringCharge" ,container.Add );
            }
            AfterToJson(ref container);
            return container;
        }
    }
}