// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Extensions;

    /// <summary>The properties of the usage detail.</summary>
    public partial class ModernUsageDetailProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json erialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IModernUsageDetailProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IModernUsageDetailProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.IModernUsageDetailProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject json ? new ModernUsageDetailProperties(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject into a new instance of <see cref="ModernUsageDetailProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal ModernUsageDetailProperties(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_billingAccountId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("billingAccountId"), out var __jsonBillingAccountId) ? (string)__jsonBillingAccountId : (string)BillingAccountId;}
            {_effectivePrice = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNumber>("effectivePrice"), out var __jsonEffectivePrice) ? (decimal?)__jsonEffectivePrice : EffectivePrice;}
            {_pricingModel = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("pricingModel"), out var __jsonPricingModel) ? (string)__jsonPricingModel : (string)PricingModel;}
            {_billingAccountName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("billingAccountName"), out var __jsonBillingAccountName) ? (string)__jsonBillingAccountName : (string)BillingAccountName;}
            {_billingPeriodStartDate = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("billingPeriodStartDate"), out var __jsonBillingPeriodStartDate) ? global::System.DateTime.TryParse((string)__jsonBillingPeriodStartDate, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonBillingPeriodStartDateValue) ? __jsonBillingPeriodStartDateValue : BillingPeriodStartDate : BillingPeriodStartDate;}
            {_billingPeriodEndDate = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("billingPeriodEndDate"), out var __jsonBillingPeriodEndDate) ? global::System.DateTime.TryParse((string)__jsonBillingPeriodEndDate, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonBillingPeriodEndDateValue) ? __jsonBillingPeriodEndDateValue : BillingPeriodEndDate : BillingPeriodEndDate;}
            {_billingProfileId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("billingProfileId"), out var __jsonBillingProfileId) ? (string)__jsonBillingProfileId : (string)BillingProfileId;}
            {_billingProfileName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("billingProfileName"), out var __jsonBillingProfileName) ? (string)__jsonBillingProfileName : (string)BillingProfileName;}
            {_subscriptionGuid = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("subscriptionGuid"), out var __jsonSubscriptionGuid) ? (string)__jsonSubscriptionGuid : (string)SubscriptionGuid;}
            {_subscriptionName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("subscriptionName"), out var __jsonSubscriptionName) ? (string)__jsonSubscriptionName : (string)SubscriptionName;}
            {_date = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("date"), out var __jsonDate) ? global::System.DateTime.TryParse((string)__jsonDate, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonDateValue) ? __jsonDateValue : Date : Date;}
            {_product = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("product"), out var __jsonProduct) ? (string)__jsonProduct : (string)Product;}
            {_meterId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("meterId"), out var __jsonMeterId) ? (string)__jsonMeterId : (string)MeterId;}
            {_meterName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("meterName"), out var __jsonMeterName) ? (string)__jsonMeterName : (string)MeterName;}
            {_meterRegion = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("meterRegion"), out var __jsonMeterRegion) ? (string)__jsonMeterRegion : (string)MeterRegion;}
            {_meterCategory = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("meterCategory"), out var __jsonMeterCategory) ? (string)__jsonMeterCategory : (string)MeterCategory;}
            {_meterSubCategory = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("meterSubCategory"), out var __jsonMeterSubCategory) ? (string)__jsonMeterSubCategory : (string)MeterSubCategory;}
            {_serviceFamily = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("serviceFamily"), out var __jsonServiceFamily) ? (string)__jsonServiceFamily : (string)ServiceFamily;}
            {_quantity = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNumber>("quantity"), out var __jsonQuantity) ? (decimal?)__jsonQuantity : Quantity;}
            {_unitOfMeasure = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("unitOfMeasure"), out var __jsonUnitOfMeasure) ? (string)__jsonUnitOfMeasure : (string)UnitOfMeasure;}
            {_instanceName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("instanceName"), out var __jsonInstanceName) ? (string)__jsonInstanceName : (string)InstanceName;}
            {_costInUsd = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNumber>("costInUSD"), out var __jsonCostInUsd) ? (decimal?)__jsonCostInUsd : CostInUsd;}
            {_unitPrice = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNumber>("unitPrice"), out var __jsonUnitPrice) ? (decimal?)__jsonUnitPrice : UnitPrice;}
            {_billingCurrencyCode = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("billingCurrencyCode"), out var __jsonBillingCurrencyCode) ? (string)__jsonBillingCurrencyCode : (string)BillingCurrencyCode;}
            {_resourceLocation = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("resourceLocation"), out var __jsonResourceLocation) ? (string)__jsonResourceLocation : (string)ResourceLocation;}
            {_consumedService = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("consumedService"), out var __jsonConsumedService) ? (string)__jsonConsumedService : (string)ConsumedService;}
            {_serviceInfo1 = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("serviceInfo1"), out var __jsonServiceInfo1) ? (string)__jsonServiceInfo1 : (string)ServiceInfo1;}
            {_serviceInfo2 = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("serviceInfo2"), out var __jsonServiceInfo2) ? (string)__jsonServiceInfo2 : (string)ServiceInfo2;}
            {_additionalInfo = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("additionalInfo"), out var __jsonAdditionalInfo) ? (string)__jsonAdditionalInfo : (string)AdditionalInfo;}
            {_invoiceSectionId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("invoiceSectionId"), out var __jsonInvoiceSectionId) ? (string)__jsonInvoiceSectionId : (string)InvoiceSectionId;}
            {_invoiceSectionName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("invoiceSectionName"), out var __jsonInvoiceSectionName) ? (string)__jsonInvoiceSectionName : (string)InvoiceSectionName;}
            {_costCenter = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("costCenter"), out var __jsonCostCenter) ? (string)__jsonCostCenter : (string)CostCenter;}
            {_resourceGroup = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("resourceGroup"), out var __jsonResourceGroup) ? (string)__jsonResourceGroup : (string)ResourceGroup;}
            {_reservationId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("reservationId"), out var __jsonReservationId) ? (string)__jsonReservationId : (string)ReservationId;}
            {_reservationName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("reservationName"), out var __jsonReservationName) ? (string)__jsonReservationName : (string)ReservationName;}
            {_productOrderId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("productOrderId"), out var __jsonProductOrderId) ? (string)__jsonProductOrderId : (string)ProductOrderId;}
            {_productOrderName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("productOrderName"), out var __jsonProductOrderName) ? (string)__jsonProductOrderName : (string)ProductOrderName;}
            {_isAzureCreditEligible = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonBoolean>("isAzureCreditEligible"), out var __jsonIsAzureCreditEligible) ? (bool?)__jsonIsAzureCreditEligible : IsAzureCreditEligible;}
            {_term = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("term"), out var __jsonTerm) ? (string)__jsonTerm : (string)Term;}
            {_publisherName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("publisherName"), out var __jsonPublisherName) ? (string)__jsonPublisherName : (string)PublisherName;}
            {_publisherType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("publisherType"), out var __jsonPublisherType) ? (string)__jsonPublisherType : (string)PublisherType;}
            {_chargeType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("chargeType"), out var __jsonChargeType) ? (string)__jsonChargeType : (string)ChargeType;}
            {_frequency = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("frequency"), out var __jsonFrequency) ? (string)__jsonFrequency : (string)Frequency;}
            {_costInBillingCurrency = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNumber>("costInBillingCurrency"), out var __jsonCostInBillingCurrency) ? (decimal?)__jsonCostInBillingCurrency : CostInBillingCurrency;}
            {_costInPricingCurrency = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNumber>("costInPricingCurrency"), out var __jsonCostInPricingCurrency) ? (decimal?)__jsonCostInPricingCurrency : CostInPricingCurrency;}
            {_exchangeRate = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("exchangeRate"), out var __jsonExchangeRate) ? (string)__jsonExchangeRate : (string)ExchangeRate;}
            {_exchangeRateDate = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("exchangeRateDate"), out var __jsonExchangeRateDate) ? global::System.DateTime.TryParse((string)__jsonExchangeRateDate, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonExchangeRateDateValue) ? __jsonExchangeRateDateValue : ExchangeRateDate : ExchangeRateDate;}
            {_invoiceId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("invoiceId"), out var __jsonInvoiceId) ? (string)__jsonInvoiceId : (string)InvoiceId;}
            {_previousInvoiceId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("previousInvoiceId"), out var __jsonPreviousInvoiceId) ? (string)__jsonPreviousInvoiceId : (string)PreviousInvoiceId;}
            {_pricingCurrencyCode = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("pricingCurrencyCode"), out var __jsonPricingCurrencyCode) ? (string)__jsonPricingCurrencyCode : (string)PricingCurrencyCode;}
            {_productIdentifier = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("productIdentifier"), out var __jsonProductIdentifier) ? (string)__jsonProductIdentifier : (string)ProductIdentifier;}
            {_resourceLocationNormalized = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("resourceLocationNormalized"), out var __jsonResourceLocationNormalized) ? (string)__jsonResourceLocationNormalized : (string)ResourceLocationNormalized;}
            {_servicePeriodStartDate = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("servicePeriodStartDate"), out var __jsonServicePeriodStartDate) ? global::System.DateTime.TryParse((string)__jsonServicePeriodStartDate, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonServicePeriodStartDateValue) ? __jsonServicePeriodStartDateValue : ServicePeriodStartDate : ServicePeriodStartDate;}
            {_servicePeriodEndDate = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("servicePeriodEndDate"), out var __jsonServicePeriodEndDate) ? global::System.DateTime.TryParse((string)__jsonServicePeriodEndDate, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonServicePeriodEndDateValue) ? __jsonServicePeriodEndDateValue : ServicePeriodEndDate : ServicePeriodEndDate;}
            {_customerTenantId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("customerTenantId"), out var __jsonCustomerTenantId) ? (string)__jsonCustomerTenantId : (string)CustomerTenantId;}
            {_customerName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("customerName"), out var __jsonCustomerName) ? (string)__jsonCustomerName : (string)CustomerName;}
            {_partnerTenantId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("partnerTenantId"), out var __jsonPartnerTenantId) ? (string)__jsonPartnerTenantId : (string)PartnerTenantId;}
            {_partnerName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("partnerName"), out var __jsonPartnerName) ? (string)__jsonPartnerName : (string)PartnerName;}
            {_resellerMpnId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("resellerMpnId"), out var __jsonResellerMpnId) ? (string)__jsonResellerMpnId : (string)ResellerMpnId;}
            {_resellerName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("resellerName"), out var __jsonResellerName) ? (string)__jsonResellerName : (string)ResellerName;}
            {_publisherId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("publisherId"), out var __jsonPublisherId) ? (string)__jsonPublisherId : (string)PublisherId;}
            {_marketPrice = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNumber>("marketPrice"), out var __jsonMarketPrice) ? (decimal?)__jsonMarketPrice : MarketPrice;}
            {_exchangeRatePricingToBilling = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNumber>("exchangeRatePricingToBilling"), out var __jsonExchangeRatePricingToBilling) ? (decimal?)__jsonExchangeRatePricingToBilling : ExchangeRatePricingToBilling;}
            {_paygCostInBillingCurrency = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNumber>("paygCostInBillingCurrency"), out var __jsonPaygCostInBillingCurrency) ? (decimal?)__jsonPaygCostInBillingCurrency : PaygCostInBillingCurrency;}
            {_paygCostInUsd = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNumber>("paygCostInUSD"), out var __jsonPaygCostInUsd) ? (decimal?)__jsonPaygCostInUsd : PaygCostInUsd;}
            {_partnerEarnedCreditRate = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNumber>("partnerEarnedCreditRate"), out var __jsonPartnerEarnedCreditRate) ? (decimal?)__jsonPartnerEarnedCreditRate : PartnerEarnedCreditRate;}
            {_partnerEarnedCreditApplied = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("partnerEarnedCreditApplied"), out var __jsonPartnerEarnedCreditApplied) ? (string)__jsonPartnerEarnedCreditApplied : (string)PartnerEarnedCreditApplied;}
            {_payGPrice = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNumber>("payGPrice"), out var __jsonPayGPrice) ? (decimal?)__jsonPayGPrice : PayGPrice;}
            {_benefitId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("benefitId"), out var __jsonBenefitId) ? (string)__jsonBenefitId : (string)BenefitId;}
            {_benefitName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("benefitName"), out var __jsonBenefitName) ? (string)__jsonBenefitName : (string)BenefitName;}
            {_provider = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("provider"), out var __jsonProvider) ? (string)__jsonProvider : (string)Provider;}
            {_costAllocationRuleName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("costAllocationRuleName"), out var __jsonCostAllocationRuleName) ? (string)__jsonCostAllocationRuleName : (string)CostAllocationRuleName;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="ModernUsageDetailProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="ModernUsageDetailProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._billingAccountId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._billingAccountId.ToString()) : null, "billingAccountId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._effectivePrice ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNumber((decimal)this._effectivePrice) : null, "effectivePrice" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._pricingModel)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._pricingModel.ToString()) : null, "pricingModel" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._billingAccountName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._billingAccountName.ToString()) : null, "billingAccountName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._billingPeriodStartDate ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._billingPeriodStartDate?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "billingPeriodStartDate" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._billingPeriodEndDate ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._billingPeriodEndDate?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "billingPeriodEndDate" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._billingProfileId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._billingProfileId.ToString()) : null, "billingProfileId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._billingProfileName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._billingProfileName.ToString()) : null, "billingProfileName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._subscriptionGuid)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._subscriptionGuid.ToString()) : null, "subscriptionGuid" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._subscriptionName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._subscriptionName.ToString()) : null, "subscriptionName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._date ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._date?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "date" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._product)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._product.ToString()) : null, "product" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._meterId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._meterId.ToString()) : null, "meterId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._meterName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._meterName.ToString()) : null, "meterName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._meterRegion)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._meterRegion.ToString()) : null, "meterRegion" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._meterCategory)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._meterCategory.ToString()) : null, "meterCategory" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._meterSubCategory)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._meterSubCategory.ToString()) : null, "meterSubCategory" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._serviceFamily)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._serviceFamily.ToString()) : null, "serviceFamily" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._quantity ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNumber((decimal)this._quantity) : null, "quantity" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._unitOfMeasure)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._unitOfMeasure.ToString()) : null, "unitOfMeasure" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._instanceName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._instanceName.ToString()) : null, "instanceName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._costInUsd ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNumber((decimal)this._costInUsd) : null, "costInUSD" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._unitPrice ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNumber((decimal)this._unitPrice) : null, "unitPrice" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._billingCurrencyCode)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._billingCurrencyCode.ToString()) : null, "billingCurrencyCode" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._resourceLocation)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._resourceLocation.ToString()) : null, "resourceLocation" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._consumedService)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._consumedService.ToString()) : null, "consumedService" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._serviceInfo1)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._serviceInfo1.ToString()) : null, "serviceInfo1" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._serviceInfo2)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._serviceInfo2.ToString()) : null, "serviceInfo2" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._additionalInfo)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._additionalInfo.ToString()) : null, "additionalInfo" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._invoiceSectionId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._invoiceSectionId.ToString()) : null, "invoiceSectionId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._invoiceSectionName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._invoiceSectionName.ToString()) : null, "invoiceSectionName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._costCenter)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._costCenter.ToString()) : null, "costCenter" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._resourceGroup)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._resourceGroup.ToString()) : null, "resourceGroup" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._reservationId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._reservationId.ToString()) : null, "reservationId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._reservationName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._reservationName.ToString()) : null, "reservationName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._productOrderId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._productOrderId.ToString()) : null, "productOrderId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._productOrderName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._productOrderName.ToString()) : null, "productOrderName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._isAzureCreditEligible ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonBoolean((bool)this._isAzureCreditEligible) : null, "isAzureCreditEligible" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._term)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._term.ToString()) : null, "term" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._publisherName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._publisherName.ToString()) : null, "publisherName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._publisherType)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._publisherType.ToString()) : null, "publisherType" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._chargeType)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._chargeType.ToString()) : null, "chargeType" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._frequency)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._frequency.ToString()) : null, "frequency" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._costInBillingCurrency ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNumber((decimal)this._costInBillingCurrency) : null, "costInBillingCurrency" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._costInPricingCurrency ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNumber((decimal)this._costInPricingCurrency) : null, "costInPricingCurrency" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._exchangeRate)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._exchangeRate.ToString()) : null, "exchangeRate" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._exchangeRateDate ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._exchangeRateDate?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "exchangeRateDate" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._invoiceId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._invoiceId.ToString()) : null, "invoiceId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._previousInvoiceId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._previousInvoiceId.ToString()) : null, "previousInvoiceId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._pricingCurrencyCode)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._pricingCurrencyCode.ToString()) : null, "pricingCurrencyCode" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._productIdentifier)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._productIdentifier.ToString()) : null, "productIdentifier" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._resourceLocationNormalized)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._resourceLocationNormalized.ToString()) : null, "resourceLocationNormalized" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._servicePeriodStartDate ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._servicePeriodStartDate?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "servicePeriodStartDate" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._servicePeriodEndDate ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._servicePeriodEndDate?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "servicePeriodEndDate" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._customerTenantId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._customerTenantId.ToString()) : null, "customerTenantId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._customerName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._customerName.ToString()) : null, "customerName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._partnerTenantId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._partnerTenantId.ToString()) : null, "partnerTenantId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._partnerName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._partnerName.ToString()) : null, "partnerName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._resellerMpnId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._resellerMpnId.ToString()) : null, "resellerMpnId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._resellerName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._resellerName.ToString()) : null, "resellerName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._publisherId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._publisherId.ToString()) : null, "publisherId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._marketPrice ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNumber((decimal)this._marketPrice) : null, "marketPrice" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._exchangeRatePricingToBilling ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNumber((decimal)this._exchangeRatePricingToBilling) : null, "exchangeRatePricingToBilling" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._paygCostInBillingCurrency ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNumber((decimal)this._paygCostInBillingCurrency) : null, "paygCostInBillingCurrency" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._paygCostInUsd ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNumber((decimal)this._paygCostInUsd) : null, "paygCostInUSD" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._partnerEarnedCreditRate ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNumber((decimal)this._partnerEarnedCreditRate) : null, "partnerEarnedCreditRate" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._partnerEarnedCreditApplied)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._partnerEarnedCreditApplied.ToString()) : null, "partnerEarnedCreditApplied" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._payGPrice ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNumber((decimal)this._payGPrice) : null, "payGPrice" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._benefitId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._benefitId.ToString()) : null, "benefitId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._benefitName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._benefitName.ToString()) : null, "benefitName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._provider)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._provider.ToString()) : null, "provider" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._costAllocationRuleName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._costAllocationRuleName.ToString()) : null, "costAllocationRuleName" ,container.Add );
            }
            AfterToJson(ref container);
            return container;
        }
    }
}