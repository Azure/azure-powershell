// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Extensions;

    /// <summary>The lot properties.</summary>
    public partial class LotProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json erialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILotProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILotProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.ILotProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject json ? new LotProperties(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject into a new instance of <see cref="LotProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal LotProperties(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_originalAmount = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject>("originalAmount"), out var __jsonOriginalAmount) ? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.Amount.FromJson(__jsonOriginalAmount) : OriginalAmount;}
            {_closedBalance = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject>("closedBalance"), out var __jsonClosedBalance) ? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.Amount.FromJson(__jsonClosedBalance) : ClosedBalance;}
            {_originalAmountInBillingCurrency = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject>("originalAmountInBillingCurrency"), out var __jsonOriginalAmountInBillingCurrency) ? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.AmountWithExchangeRate.FromJson(__jsonOriginalAmountInBillingCurrency) : OriginalAmountInBillingCurrency;}
            {_closedBalanceInBillingCurrency = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject>("closedBalanceInBillingCurrency"), out var __jsonClosedBalanceInBillingCurrency) ? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.AmountWithExchangeRate.FromJson(__jsonClosedBalanceInBillingCurrency) : ClosedBalanceInBillingCurrency;}
            {_reseller = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject>("reseller"), out var __jsonReseller) ? Microsoft.Azure.PowerShell.Cmdlets.Consumption.Models.Api20211001.Reseller.FromJson(__jsonReseller) : Reseller;}
            {_source = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("source"), out var __jsonSource) ? (string)__jsonSource : (string)Source;}
            {_startDate = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("startDate"), out var __jsonStartDate) ? global::System.DateTime.TryParse((string)__jsonStartDate, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonStartDateValue) ? __jsonStartDateValue : StartDate : StartDate;}
            {_expirationDate = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("expirationDate"), out var __jsonExpirationDate) ? global::System.DateTime.TryParse((string)__jsonExpirationDate, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonExpirationDateValue) ? __jsonExpirationDateValue : ExpirationDate : ExpirationDate;}
            {_poNumber = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("poNumber"), out var __jsonPoNumber) ? (string)__jsonPoNumber : (string)PoNumber;}
            {_purchasedDate = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("purchasedDate"), out var __jsonPurchasedDate) ? global::System.DateTime.TryParse((string)__jsonPurchasedDate, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonPurchasedDateValue) ? __jsonPurchasedDateValue : PurchasedDate : PurchasedDate;}
            {_status = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("status"), out var __jsonStatus) ? (string)__jsonStatus : (string)Status;}
            {_creditCurrency = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("creditCurrency"), out var __jsonCreditCurrency) ? (string)__jsonCreditCurrency : (string)CreditCurrency;}
            {_billingCurrency = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("billingCurrency"), out var __jsonBillingCurrency) ? (string)__jsonBillingCurrency : (string)BillingCurrency;}
            {_eTag = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString>("eTag"), out var __jsonETag) ? (string)__jsonETag : (string)ETag;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="LotProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="LotProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._originalAmount ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) this._originalAmount.ToJson(null,serializationMode) : null, "originalAmount" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._closedBalance ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) this._closedBalance.ToJson(null,serializationMode) : null, "closedBalance" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._originalAmountInBillingCurrency ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) this._originalAmountInBillingCurrency.ToJson(null,serializationMode) : null, "originalAmountInBillingCurrency" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._closedBalanceInBillingCurrency ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) this._closedBalanceInBillingCurrency.ToJson(null,serializationMode) : null, "closedBalanceInBillingCurrency" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._reseller ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) this._reseller.ToJson(null,serializationMode) : null, "reseller" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._source)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._source.ToString()) : null, "source" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._startDate ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._startDate?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "startDate" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._expirationDate ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._expirationDate?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "expirationDate" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._poNumber)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._poNumber.ToString()) : null, "poNumber" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._purchasedDate ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._purchasedDate?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "purchasedDate" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._status)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._status.ToString()) : null, "status" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._creditCurrency)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._creditCurrency.ToString()) : null, "creditCurrency" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._billingCurrency)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._billingCurrency.ToString()) : null, "billingCurrency" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._eTag)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Consumption.Runtime.Json.JsonString(this._eTag.ToString()) : null, "eTag" ,container.Add );
            }
            AfterToJson(ref container);
            return container;
        }
    }
}