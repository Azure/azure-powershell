// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support
{

    /// <summary>Language in which the recipient will receive the notification</summary>
    public partial struct CultureCode :
        System.IEquatable<CultureCode>
    {
        public static Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.CultureCode CsCz = @"cs-cz";

        public static Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.CultureCode DaDk = @"da-dk";

        public static Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.CultureCode De = @"de-de";

        public static Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.CultureCode EnGb = @"en-gb";

        public static Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.CultureCode EnUs = @"en-us";

        public static Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.CultureCode Es = @"es-es";

        public static Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.CultureCode Fr = @"fr-fr";

        public static Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.CultureCode Hu = @"hu-hu";

        public static Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.CultureCode It = @"it-it";

        public static Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.CultureCode JaJp = @"ja-jp";

        public static Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.CultureCode KoKr = @"ko-kr";

        public static Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.CultureCode NbNo = @"nb-no";

        public static Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.CultureCode Nl = @"nl-nl";

        public static Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.CultureCode Pl = @"pl-pl";

        public static Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.CultureCode Pt = @"pt-pt";

        public static Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.CultureCode PtBr = @"pt-br";

        public static Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.CultureCode Ru = @"ru-ru";

        public static Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.CultureCode SvSe = @"sv-se";

        public static Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.CultureCode Tr = @"tr-tr";

        public static Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.CultureCode ZhCn = @"zh-cn";

        public static Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.CultureCode ZhTw = @"zh-tw";

        /// <summary>the value for an instance of the <see cref="CultureCode" /> Enum.</summary>
        private string _value { get; set; }

        /// <summary>Conversion from arbitrary object to CultureCode</summary>
        /// <param name="value">the value to convert to an instance of <see cref="CultureCode" />.</param>
        internal static object CreateFrom(object value)
        {
            return new CultureCode(global::System.Convert.ToString(value));
        }

        /// <summary>Creates an instance of the <see cref="CultureCode" Enum class./></summary>
        /// <param name="underlyingValue">the value to create an instance for.</param>
        private CultureCode(string underlyingValue)
        {
            this._value = underlyingValue;
        }

        /// <summary>Compares values of enum type CultureCode</summary>
        /// <param name="e">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public bool Equals(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.CultureCode e)
        {
            return _value.Equals(e._value);
        }

        /// <summary>Compares values of enum type CultureCode (override for Object)</summary>
        /// <param name="obj">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public override bool Equals(object obj)
        {
            return obj is CultureCode && Equals((CultureCode)obj);
        }

        /// <summary>Returns hashCode for enum CultureCode</summary>
        /// <returns>The hashCode of the value</returns>
        public override int GetHashCode()
        {
            return this._value.GetHashCode();
        }

        /// <summary>Returns string representation for CultureCode</summary>
        /// <returns>A string for this value.</returns>
        public override string ToString()
        {
            return this._value;
        }

        /// <summary>Implicit operator to convert string to CultureCode</summary>
        /// <param name="value">the value to convert to an instance of <see cref="CultureCode" />.</param>

        public static implicit operator CultureCode(string value)
        {
            return new CultureCode(value);
        }

        /// <summary>Implicit operator to convert CultureCode to string</summary>
        /// <param name="e">the value to convert to an instance of <see cref="CultureCode" />.</param>

        public static implicit operator string(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.CultureCode e)
        {
            return e._value;
        }

        /// <summary>Overriding != operator for enum CultureCode</summary>
        /// <param name="e1">the value to compare against <see cref="e2" /></param>
        /// <param name="e2">the value to compare against <see cref="e1" /></param>
        /// <returns><c>true</c> if the two instances are not equal to the same value</returns>
        public static bool operator !=(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.CultureCode e1, Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.CultureCode e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>Overriding == operator for enum CultureCode</summary>
        /// <param name="e1">the value to compare against <see cref="e2" /></param>
        /// <param name="e2">the value to compare against <see cref="e1" /></param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public static bool operator ==(Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.CultureCode e1, Microsoft.Azure.PowerShell.Cmdlets.Consumption.Support.CultureCode e2)
        {
            return e2.Equals(e1);
        }
    }
}