// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Extensions;

    public partial class IoTSecurityIdentity :
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.IIoTSecurityIdentity,
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.IIoTSecurityIdentityInternal
    {

        /// <summary>Backing field for <see cref="DeviceGroupName" /> property.</summary>
        private string _deviceGroupName;

        /// <summary>Device group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public string DeviceGroupName { get => this._deviceGroupName; set => this._deviceGroupName = value; }

        /// <summary>Backing field for <see cref="DeviceId" /> property.</summary>
        private string _deviceId;

        /// <summary>Device Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public string DeviceId { get => this._deviceId; set => this._deviceId = value; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>Resource identity path</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public string Id { get => this._id; set => this._id = value; }

        /// <summary>Backing field for <see cref="IotDefenderLocation" /> property.</summary>
        private string _iotDefenderLocation;

        /// <summary>Defender for IoT location</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public string IotDefenderLocation { get => this._iotDefenderLocation; set => this._iotDefenderLocation = value; }

        /// <summary>Backing field for <see cref="OnPremiseSensorName" /> property.</summary>
        private string _onPremiseSensorName;

        /// <summary>Name of the on-premise IoT sensor</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public string OnPremiseSensorName { get => this._onPremiseSensorName; set => this._onPremiseSensorName = value; }

        /// <summary>Backing field for <see cref="Scope" /> property.</summary>
        private string _scope;

        /// <summary>Scope of the query (IoT Hub, /providers/Microsoft.Devices/iotHubs/myHub)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public string Scope { get => this._scope; set => this._scope = value; }

        /// <summary>Backing field for <see cref="SensorName" /> property.</summary>
        private string _sensorName;

        /// <summary>Name of the IoT sensor</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public string SensorName { get => this._sensorName; set => this._sensorName = value; }

        /// <summary>Backing field for <see cref="SubscriptionId" /> property.</summary>
        private string _subscriptionId;

        /// <summary>The ID of the target subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public string SubscriptionId { get => this._subscriptionId; set => this._subscriptionId = value; }

        /// <summary>Creates an new <see cref="IoTSecurityIdentity" /> instance.</summary>
        public IoTSecurityIdentity()
        {

        }
    }
    public partial interface IIoTSecurityIdentity :
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.IJsonSerializable
    {
        /// <summary>Device group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Device group name",
        SerializedName = @"deviceGroupName",
        PossibleTypes = new [] { typeof(string) })]
        string DeviceGroupName { get; set; }
        /// <summary>Device Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Device Id",
        SerializedName = @"deviceId",
        PossibleTypes = new [] { typeof(string) })]
        string DeviceId { get; set; }
        /// <summary>Resource identity path</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource identity path",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get; set; }
        /// <summary>Defender for IoT location</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Defender for IoT location",
        SerializedName = @"iotDefenderLocation",
        PossibleTypes = new [] { typeof(string) })]
        string IotDefenderLocation { get; set; }
        /// <summary>Name of the on-premise IoT sensor</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the on-premise IoT sensor",
        SerializedName = @"onPremiseSensorName",
        PossibleTypes = new [] { typeof(string) })]
        string OnPremiseSensorName { get; set; }
        /// <summary>Scope of the query (IoT Hub, /providers/Microsoft.Devices/iotHubs/myHub)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Scope of the query (IoT Hub, /providers/Microsoft.Devices/iotHubs/myHub)",
        SerializedName = @"scope",
        PossibleTypes = new [] { typeof(string) })]
        string Scope { get; set; }
        /// <summary>Name of the IoT sensor</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the IoT sensor",
        SerializedName = @"sensorName",
        PossibleTypes = new [] { typeof(string) })]
        string SensorName { get; set; }
        /// <summary>The ID of the target subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ID of the target subscription.",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionId { get; set; }

    }
    internal partial interface IIoTSecurityIdentityInternal

    {
        /// <summary>Device group name</summary>
        string DeviceGroupName { get; set; }
        /// <summary>Device Id</summary>
        string DeviceId { get; set; }
        /// <summary>Resource identity path</summary>
        string Id { get; set; }
        /// <summary>Defender for IoT location</summary>
        string IotDefenderLocation { get; set; }
        /// <summary>Name of the on-premise IoT sensor</summary>
        string OnPremiseSensorName { get; set; }
        /// <summary>Scope of the query (IoT Hub, /providers/Microsoft.Devices/iotHubs/myHub)</summary>
        string Scope { get; set; }
        /// <summary>Name of the IoT sensor</summary>
        string SensorName { get; set; }
        /// <summary>The ID of the target subscription.</summary>
        string SubscriptionId { get; set; }

    }
}