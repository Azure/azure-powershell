// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Extensions;

    /// <summary>Network interface card properties</summary>
    public partial class Nic
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.INic.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.INic.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.INic FromJson(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonObject json ? new Nic(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonObject into a new instance of <see cref="Nic" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal Nic(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_lastSeen = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString>("lastSeen"), out var __jsonLastSeen) ? global::System.DateTime.TryParse((string)__jsonLastSeen, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonLastSeenValue) ? __jsonLastSeenValue : LastSeen : LastSeen;}
            {_ipv4Address = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString>("ipv4Address"), out var __jsonIpv4Address) ? (string)__jsonIpv4Address : (string)Ipv4Address;}
            {_ipv6Address = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString>("ipv6Address"), out var __jsonIpv6Address) ? (string)__jsonIpv6Address : (string)Ipv6Address;}
            {_macAddress = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString>("macAddress"), out var __jsonMacAddress) ? (string)__jsonMacAddress : (string)MacAddress;}
            {_networkAdapterVendor = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString>("networkAdapterVendor"), out var __jsonNetworkAdapterVendor) ? (string)__jsonNetworkAdapterVendor : (string)NetworkAdapterVendor;}
            {_macCertainty = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString>("macCertainty"), out var __jsonMacCertainty) ? (string)__jsonMacCertainty : (string)MacCertainty;}
            {_vlan = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonArray>("vlans"), out var __jsonVlans) ? If( __jsonVlans as Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(string) (__u is Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString __t ? (string)(__t.ToString()) : null)) ))() : null : Vlan;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="Nic" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="Nic" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._lastSeen ? (Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString(this._lastSeen?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "lastSeen" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._ipv4Address)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString(this._ipv4Address.ToString()) : null, "ipv4Address" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._ipv6Address)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString(this._ipv6Address.ToString()) : null, "ipv6Address" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._macAddress)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString(this._macAddress.ToString()) : null, "macAddress" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._networkAdapterVendor)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString(this._networkAdapterVendor.ToString()) : null, "networkAdapterVendor" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._macCertainty)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString(this._macCertainty.ToString()) : null, "macCertainty" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.SerializationMode.IncludeReadOnly))
            {
                if (null != this._vlan)
                {
                    var __w = new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.XNodeArray();
                    foreach( var __x in this._vlan )
                    {
                        AddIf(null != (((object)__x)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString(__x.ToString()) : null ,__w.Add);
                    }
                    container.Add("vlans",__w);
                }
            }
            AfterToJson(ref container);
            return container;
        }
    }
}