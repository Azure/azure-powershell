// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Extensions;

    /// <summary>Device properties</summary>
    public partial class DeviceProperties :
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDeviceProperties,
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal
    {

        /// <summary>Backing field for <see cref="AdditionalField" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.IAny _additionalField;

        /// <summary>A bag of fields which extends the device information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.IAny AdditionalField { get => (this._additionalField = this._additionalField ?? new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Any()); set => this._additionalField = value; }

        /// <summary>Backing field for <see cref="AuthorizedState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.AuthorizedState? _authorizedState;

        /// <summary>Authorized state of the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.AuthorizedState? AuthorizedState { get => this._authorizedState; set => this._authorizedState = value; }

        /// <summary>Backing field for <see cref="BusinessFunction" /> property.</summary>
        private string _businessFunction;

        /// <summary>Device business function</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public string BusinessFunction { get => this._businessFunction; set => this._businessFunction = value; }

        /// <summary>Backing field for <see cref="Cpe" /> property.</summary>
        private string[] _cpe;

        /// <summary>List of Common Platform Enumeration (CPE)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public string[] Cpe { get => this._cpe; }

        /// <summary>Backing field for <see cref="Criticality" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.Criticality? _criticality;

        /// <summary>Device criticality.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.Criticality? Criticality { get => this._criticality; set => this._criticality = value; }

        /// <summary>Backing field for <see cref="DeviceCategoryDisplayName" /> property.</summary>
        private string _deviceCategoryDisplayName;

        /// <summary>Device category display name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public string DeviceCategoryDisplayName { get => this._deviceCategoryDisplayName; }

        /// <summary>Backing field for <see cref="DeviceCategoryId" /> property.</summary>
        private int? _deviceCategoryId;

        /// <summary>Device category id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public int? DeviceCategoryId { get => this._deviceCategoryId; set => this._deviceCategoryId = value; }

        /// <summary>Backing field for <see cref="DeviceDataSource" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.DeviceDataSource? _deviceDataSource;

        /// <summary>Device data source.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.DeviceDataSource? DeviceDataSource { get => this._deviceDataSource; }

        /// <summary>Backing field for <see cref="DeviceName" /> property.</summary>
        private string _deviceName;

        /// <summary>Device name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public string DeviceName { get => this._deviceName; set => this._deviceName = value; }

        /// <summary>Backing field for <see cref="DeviceStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.DeviceStatus? _deviceStatus;

        /// <summary>Device status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.DeviceStatus? DeviceStatus { get => this._deviceStatus; }

        /// <summary>Backing field for <see cref="DeviceSubTypeDisplayName" /> property.</summary>
        private string _deviceSubTypeDisplayName;

        /// <summary>Device sub type display name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public string DeviceSubTypeDisplayName { get => this._deviceSubTypeDisplayName; }

        /// <summary>Backing field for <see cref="DeviceSubTypeId" /> property.</summary>
        private int? _deviceSubTypeId;

        /// <summary>Device sub type id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public int? DeviceSubTypeId { get => this._deviceSubTypeId; set => this._deviceSubTypeId = value; }

        /// <summary>Backing field for <see cref="DeviceTag" /> property.</summary>
        private string[] _deviceTag;

        /// <summary>Device tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public string[] DeviceTag { get => this._deviceTag; set => this._deviceTag = value; }

        /// <summary>Backing field for <see cref="DeviceTypeDisplayName" /> property.</summary>
        private string _deviceTypeDisplayName;

        /// <summary>Device type display name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public string DeviceTypeDisplayName { get => this._deviceTypeDisplayName; }

        /// <summary>Backing field for <see cref="DeviceTypeId" /> property.</summary>
        private int? _deviceTypeId;

        /// <summary>Device type id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public int? DeviceTypeId { get => this._deviceTypeId; set => this._deviceTypeId = value; }

        /// <summary>Backing field for <see cref="Firmware" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IFirmware[] _firmware;

        /// <summary>List of device firmwares.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IFirmware[] Firmware { get => this._firmware; set => this._firmware = value; }

        /// <summary>Backing field for <see cref="FirstSeen" /> property.</summary>
        private global::System.DateTime? _firstSeen;

        /// <summary>First time the device was seen.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public global::System.DateTime? FirstSeen { get => this._firstSeen; }

        /// <summary>Backing field for <see cref="Hardware" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IHardware _hardware;

        /// <summary>Device hardware data</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IHardware Hardware { get => (this._hardware = this._hardware ?? new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.Hardware()); set => this._hardware = value; }

        /// <summary>Hardware model.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public string HardwareModel { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IHardwareInternal)Hardware).Model; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IHardwareInternal)Hardware).Model = value ?? null; }

        /// <summary>Hardware serial number.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public string HardwareSerialNumber { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IHardwareInternal)Hardware).SerialNumber; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IHardwareInternal)Hardware).SerialNumber = value ?? null; }

        /// <summary>Hardware vendor.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public string HardwareVendor { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IHardwareInternal)Hardware).Vendor; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IHardwareInternal)Hardware).Vendor = value ?? null; }

        /// <summary>Backing field for <see cref="LastProgrammingTime" /> property.</summary>
        private global::System.DateTime? _lastProgrammingTime;

        /// <summary>last time the device was programming or programed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public global::System.DateTime? LastProgrammingTime { get => this._lastProgrammingTime; }

        /// <summary>Backing field for <see cref="LastSeen" /> property.</summary>
        private global::System.DateTime? _lastSeen;

        /// <summary>Last time the device was seen.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public global::System.DateTime? LastSeen { get => this._lastSeen; }

        /// <summary>Backing field for <see cref="LastUpdated" /> property.</summary>
        private global::System.DateTime? _lastUpdated;

        /// <summary>Last time the device was updated by the profiler.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public global::System.DateTime? LastUpdated { get => this._lastUpdated; }

        /// <summary>Backing field for <see cref="MergedDevice" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IMergedDevice[] _mergedDevice;

        /// <summary>List of merged devices data</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IMergedDevice[] MergedDevice { get => this._mergedDevice; }

        /// <summary>Backing field for <see cref="MergedToDeviceId" /> property.</summary>
        private string _mergedToDeviceId;

        /// <summary>The device Id that this device was merged into</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public string MergedToDeviceId { get => this._mergedToDeviceId; }

        /// <summary>Internal Acessors for Cpe</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal.Cpe { get => this._cpe; set { {_cpe = value;} } }

        /// <summary>Internal Acessors for DeviceCategoryDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal.DeviceCategoryDisplayName { get => this._deviceCategoryDisplayName; set { {_deviceCategoryDisplayName = value;} } }

        /// <summary>Internal Acessors for DeviceDataSource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.DeviceDataSource? Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal.DeviceDataSource { get => this._deviceDataSource; set { {_deviceDataSource = value;} } }

        /// <summary>Internal Acessors for DeviceStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.DeviceStatus? Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal.DeviceStatus { get => this._deviceStatus; set { {_deviceStatus = value;} } }

        /// <summary>Internal Acessors for DeviceSubTypeDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal.DeviceSubTypeDisplayName { get => this._deviceSubTypeDisplayName; set { {_deviceSubTypeDisplayName = value;} } }

        /// <summary>Internal Acessors for DeviceTypeDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal.DeviceTypeDisplayName { get => this._deviceTypeDisplayName; set { {_deviceTypeDisplayName = value;} } }

        /// <summary>Internal Acessors for FirstSeen</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal.FirstSeen { get => this._firstSeen; set { {_firstSeen = value;} } }

        /// <summary>Internal Acessors for Hardware</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IHardware Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal.Hardware { get => (this._hardware = this._hardware ?? new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.Hardware()); set { {_hardware = value;} } }

        /// <summary>Internal Acessors for LastProgrammingTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal.LastProgrammingTime { get => this._lastProgrammingTime; set { {_lastProgrammingTime = value;} } }

        /// <summary>Internal Acessors for LastSeen</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal.LastSeen { get => this._lastSeen; set { {_lastSeen = value;} } }

        /// <summary>Internal Acessors for LastUpdated</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal.LastUpdated { get => this._lastUpdated; set { {_lastUpdated = value;} } }

        /// <summary>Internal Acessors for MergedDevice</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IMergedDevice[] Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal.MergedDevice { get => this._mergedDevice; set { {_mergedDevice = value;} } }

        /// <summary>Internal Acessors for MergedToDeviceId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal.MergedToDeviceId { get => this._mergedToDeviceId; set { {_mergedToDeviceId = value;} } }

        /// <summary>Internal Acessors for Nic</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.INic[] Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal.Nic { get => this._nic; set { {_nic = value;} } }

        /// <summary>Internal Acessors for OnboardingStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.OnboardingStatus? Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal.OnboardingStatus { get => this._onboardingStatus; set { {_onboardingStatus = value;} } }

        /// <summary>Internal Acessors for OperatingSystem</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IOperatingSystem Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal.OperatingSystem { get => (this._operatingSystem = this._operatingSystem ?? new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.OperatingSystem()); set { {_operatingSystem = value;} } }

        /// <summary>Internal Acessors for ParentDeviceId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal.ParentDeviceId { get => this._parentDeviceId; set { {_parentDeviceId = value;} } }

        /// <summary>Internal Acessors for ParentRackNumber</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal.ParentRackNumber { get => this._parentRackNumber; set { {_parentRackNumber = value;} } }

        /// <summary>Internal Acessors for ParentSlotNumber</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal.ParentSlotNumber { get => this._parentSlotNumber; set { {_parentSlotNumber = value;} } }

        /// <summary>Internal Acessors for ProfilingConfidence</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal.ProfilingConfidence { get => this._profilingConfidence; set { {_profilingConfidence = value;} } }

        /// <summary>Internal Acessors for ProgrammingState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.ProgrammingState? Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal.ProgrammingState { get => this._programmingState; set { {_programmingState = value;} } }

        /// <summary>Internal Acessors for RiskScore</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal.RiskScore { get => this._riskScore; set { {_riskScore = value;} } }

        /// <summary>Internal Acessors for SchemaVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal.SchemaVersion { get => this._schemaVersion; set { {_schemaVersion = value;} } }

        /// <summary>Internal Acessors for Sensor</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISensor Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal.Sensor { get => (this._sensor = this._sensor ?? new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.Sensor()); set { {_sensor = value;} } }

        /// <summary>Internal Acessors for SensorName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal.SensorName { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISensorInternal)Sensor).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISensorInternal)Sensor).Name = value; }

        /// <summary>Internal Acessors for SensorSite</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal.SensorSite { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISensorInternal)Sensor).Site; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISensorInternal)Sensor).Site = value; }

        /// <summary>Internal Acessors for SensorType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.SensorType? Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal.SensorType { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISensorInternal)Sensor).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISensorInternal)Sensor).Type = value; }

        /// <summary>Internal Acessors for SensorZone</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal.SensorZone { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISensorInternal)Sensor).Zone; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISensorInternal)Sensor).Zone = value; }

        /// <summary>Internal Acessors for Slot</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISlot[] Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal.Slot { get => this._slot; set { {_slot = value;} } }

        /// <summary>Backing field for <see cref="Nic" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.INic[] _nic;

        /// <summary>List of the device network interface cards.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.INic[] Nic { get => this._nic; }

        /// <summary>Backing field for <see cref="OnboardingStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.OnboardingStatus? _onboardingStatus;

        /// <summary>Device onboarding status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.OnboardingStatus? OnboardingStatus { get => this._onboardingStatus; }

        /// <summary>Backing field for <see cref="OperatingSystem" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IOperatingSystem _operatingSystem;

        /// <summary>Device operating system data</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IOperatingSystem OperatingSystem { get => (this._operatingSystem = this._operatingSystem ?? new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.OperatingSystem()); set => this._operatingSystem = value; }

        /// <summary>OS architecture</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public string OperatingSystemArchitecture { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IOperatingSystemInternal)OperatingSystem).Architecture; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IOperatingSystemInternal)OperatingSystem).Architecture = value ?? null; }

        /// <summary>OS build</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public string OperatingSystemBuild { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IOperatingSystemInternal)OperatingSystem).Build; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IOperatingSystemInternal)OperatingSystem).Build = value ?? null; }

        /// <summary>OS distribution</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public string OperatingSystemDistribution { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IOperatingSystemInternal)OperatingSystem).Distribution; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IOperatingSystemInternal)OperatingSystem).Distribution = value ?? null; }

        /// <summary>OS platform</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public string OperatingSystemPlatform { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IOperatingSystemInternal)OperatingSystem).Platform; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IOperatingSystemInternal)OperatingSystem).Platform = value ?? null; }

        /// <summary>OS version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public string OperatingSystemVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IOperatingSystemInternal)OperatingSystem).Version; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IOperatingSystemInternal)OperatingSystem).Version = value ?? null; }

        /// <summary>Backing field for <see cref="Package" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IPackage[] _package;

        /// <summary>List of device packages</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IPackage[] Package { get => this._package; set => this._package = value; }

        /// <summary>Backing field for <see cref="ParentDeviceId" /> property.</summary>
        private string _parentDeviceId;

        /// <summary>For nested device, this is the parent device id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public string ParentDeviceId { get => this._parentDeviceId; }

        /// <summary>Backing field for <see cref="ParentRackNumber" /> property.</summary>
        private int? _parentRackNumber;

        /// <summary>
        /// For nested device, this is the rack number in the parent device that holds the nested device.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public int? ParentRackNumber { get => this._parentRackNumber; }

        /// <summary>Backing field for <see cref="ParentSlotNumber" /> property.</summary>
        private int? _parentSlotNumber;

        /// <summary>
        /// For nested device, this is the slot number in the parent device that holds the nested device.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public int? ParentSlotNumber { get => this._parentSlotNumber; }

        /// <summary>Backing field for <see cref="ProfilingConfidence" /> property.</summary>
        private int? _profilingConfidence;

        /// <summary>Confidence of the device profile</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public int? ProfilingConfidence { get => this._profilingConfidence; }

        /// <summary>Backing field for <see cref="ProgrammingState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.ProgrammingState? _programmingState;

        /// <summary>Indicates whether this device is programming</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.ProgrammingState? ProgrammingState { get => this._programmingState; }

        /// <summary>Backing field for <see cref="PurdueLevel" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.PurdueLevel? _purdueLevel;

        /// <summary>Purdue level of the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.PurdueLevel? PurdueLevel { get => this._purdueLevel; set => this._purdueLevel = value; }

        /// <summary>Backing field for <see cref="RiskScore" /> property.</summary>
        private int? _riskScore;

        /// <summary>risk score of the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public int? RiskScore { get => this._riskScore; }

        /// <summary>Backing field for <see cref="SchemaVersion" /> property.</summary>
        private string _schemaVersion;

        /// <summary>Version of the device model schema</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public string SchemaVersion { get => this._schemaVersion; }

        /// <summary>Backing field for <see cref="Sensor" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISensor _sensor;

        /// <summary>Sensor that scanned this device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISensor Sensor { get => (this._sensor = this._sensor ?? new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.Sensor()); }

        /// <summary>Sensor name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public string SensorName { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISensorInternal)Sensor).Name; }

        /// <summary>Sensor site.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public string SensorSite { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISensorInternal)Sensor).Site; }

        /// <summary>Sensor type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.SensorType? SensorType { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISensorInternal)Sensor).Type; }

        /// <summary>Sensor zone.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public string SensorZone { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISensorInternal)Sensor).Zone; }

        /// <summary>Backing field for <see cref="Slot" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISlot[] _slot;

        /// <summary>List of the device slot in the backplane</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISlot[] Slot { get => this._slot; }

        /// <summary>Creates an new <see cref="DeviceProperties" /> instance.</summary>
        public DeviceProperties()
        {

        }
    }
    /// Device properties
    public partial interface IDeviceProperties :
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.IJsonSerializable
    {
        /// <summary>A bag of fields which extends the device information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @" A bag of fields which extends the device information.",
        SerializedName = @"additionalFields",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.IAny AdditionalField { get; set; }
        /// <summary>Authorized state of the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Authorized state of the device.",
        SerializedName = @"authorizedState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.AuthorizedState) })]
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.AuthorizedState? AuthorizedState { get; set; }
        /// <summary>Device business function</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Device business function",
        SerializedName = @"businessFunction",
        PossibleTypes = new [] { typeof(string) })]
        string BusinessFunction { get; set; }
        /// <summary>List of Common Platform Enumeration (CPE)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of Common Platform Enumeration (CPE)",
        SerializedName = @"cpes",
        PossibleTypes = new [] { typeof(string) })]
        string[] Cpe { get;  }
        /// <summary>Device criticality.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Device criticality.",
        SerializedName = @"criticality",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.Criticality) })]
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.Criticality? Criticality { get; set; }
        /// <summary>Device category display name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Device category display name",
        SerializedName = @"deviceCategoryDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string DeviceCategoryDisplayName { get;  }
        /// <summary>Device category id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Device category id",
        SerializedName = @"deviceCategoryId",
        PossibleTypes = new [] { typeof(int) })]
        int? DeviceCategoryId { get; set; }
        /// <summary>Device data source.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Device data source.",
        SerializedName = @"deviceDataSource",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.DeviceDataSource) })]
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.DeviceDataSource? DeviceDataSource { get;  }
        /// <summary>Device name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Device name",
        SerializedName = @"deviceName",
        PossibleTypes = new [] { typeof(string) })]
        string DeviceName { get; set; }
        /// <summary>Device status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Device status.",
        SerializedName = @"deviceStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.DeviceStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.DeviceStatus? DeviceStatus { get;  }
        /// <summary>Device sub type display name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Device sub type display name",
        SerializedName = @"deviceSubTypeDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string DeviceSubTypeDisplayName { get;  }
        /// <summary>Device sub type id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Device sub type id",
        SerializedName = @"deviceSubTypeId",
        PossibleTypes = new [] { typeof(int) })]
        int? DeviceSubTypeId { get; set; }
        /// <summary>Device tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Device tags",
        SerializedName = @"deviceTags",
        PossibleTypes = new [] { typeof(string) })]
        string[] DeviceTag { get; set; }
        /// <summary>Device type display name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Device type display name",
        SerializedName = @"deviceTypeDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string DeviceTypeDisplayName { get;  }
        /// <summary>Device type id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Device type id",
        SerializedName = @"deviceTypeId",
        PossibleTypes = new [] { typeof(int) })]
        int? DeviceTypeId { get; set; }
        /// <summary>List of device firmwares.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of device firmwares.",
        SerializedName = @"firmwares",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IFirmware) })]
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IFirmware[] Firmware { get; set; }
        /// <summary>First time the device was seen.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"First time the device was seen.",
        SerializedName = @"firstSeen",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? FirstSeen { get;  }
        /// <summary>Hardware model.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Hardware model.",
        SerializedName = @"model",
        PossibleTypes = new [] { typeof(string) })]
        string HardwareModel { get; set; }
        /// <summary>Hardware serial number.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Hardware serial number.",
        SerializedName = @"serialNumber",
        PossibleTypes = new [] { typeof(string) })]
        string HardwareSerialNumber { get; set; }
        /// <summary>Hardware vendor.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Hardware vendor.",
        SerializedName = @"vendor",
        PossibleTypes = new [] { typeof(string) })]
        string HardwareVendor { get; set; }
        /// <summary>last time the device was programming or programed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"last time the device was programming or programed.",
        SerializedName = @"lastProgrammingTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastProgrammingTime { get;  }
        /// <summary>Last time the device was seen.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Last time the device was seen.",
        SerializedName = @"lastSeen",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastSeen { get;  }
        /// <summary>Last time the device was updated by the profiler.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Last time the device was updated by the profiler.",
        SerializedName = @"lastUpdated",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastUpdated { get;  }
        /// <summary>List of merged devices data</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of merged devices data",
        SerializedName = @"mergedDevices",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IMergedDevice) })]
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IMergedDevice[] MergedDevice { get;  }
        /// <summary>The device Id that this device was merged into</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The device Id that this device was merged into",
        SerializedName = @"mergedToDeviceId",
        PossibleTypes = new [] { typeof(string) })]
        string MergedToDeviceId { get;  }
        /// <summary>List of the device network interface cards.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of the device network interface cards.",
        SerializedName = @"nics",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.INic) })]
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.INic[] Nic { get;  }
        /// <summary>Device onboarding status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Device onboarding status.",
        SerializedName = @"onboardingStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.OnboardingStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.OnboardingStatus? OnboardingStatus { get;  }
        /// <summary>OS architecture</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"OS architecture",
        SerializedName = @"architecture",
        PossibleTypes = new [] { typeof(string) })]
        string OperatingSystemArchitecture { get; set; }
        /// <summary>OS build</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"OS build",
        SerializedName = @"build",
        PossibleTypes = new [] { typeof(string) })]
        string OperatingSystemBuild { get; set; }
        /// <summary>OS distribution</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"OS distribution",
        SerializedName = @"distribution",
        PossibleTypes = new [] { typeof(string) })]
        string OperatingSystemDistribution { get; set; }
        /// <summary>OS platform</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"OS platform",
        SerializedName = @"platform",
        PossibleTypes = new [] { typeof(string) })]
        string OperatingSystemPlatform { get; set; }
        /// <summary>OS version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"OS version",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string OperatingSystemVersion { get; set; }
        /// <summary>List of device packages</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of device packages",
        SerializedName = @"packages",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IPackage) })]
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IPackage[] Package { get; set; }
        /// <summary>For nested device, this is the parent device id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"For nested device, this is the parent device id.",
        SerializedName = @"parentDeviceId",
        PossibleTypes = new [] { typeof(string) })]
        string ParentDeviceId { get;  }
        /// <summary>
        /// For nested device, this is the rack number in the parent device that holds the nested device.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"For nested device, this is the rack number in the parent device that holds the nested device.",
        SerializedName = @"parentRackNumber",
        PossibleTypes = new [] { typeof(int) })]
        int? ParentRackNumber { get;  }
        /// <summary>
        /// For nested device, this is the slot number in the parent device that holds the nested device.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"For nested device, this is the slot number in the parent device that holds the nested device.",
        SerializedName = @"parentSlotNumber",
        PossibleTypes = new [] { typeof(int) })]
        int? ParentSlotNumber { get;  }
        /// <summary>Confidence of the device profile</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Confidence of the device profile",
        SerializedName = @"profilingConfidence",
        PossibleTypes = new [] { typeof(int) })]
        int? ProfilingConfidence { get;  }
        /// <summary>Indicates whether this device is programming</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Indicates whether this device is programming",
        SerializedName = @"programmingState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.ProgrammingState) })]
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.ProgrammingState? ProgrammingState { get;  }
        /// <summary>Purdue level of the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Purdue level of the device.",
        SerializedName = @"purdueLevel",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.PurdueLevel) })]
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.PurdueLevel? PurdueLevel { get; set; }
        /// <summary>risk score of the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"risk score of the device.",
        SerializedName = @"riskScore",
        PossibleTypes = new [] { typeof(int) })]
        int? RiskScore { get;  }
        /// <summary>Version of the device model schema</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Version of the device model schema",
        SerializedName = @"schemaVersion",
        PossibleTypes = new [] { typeof(string) })]
        string SchemaVersion { get;  }
        /// <summary>Sensor name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Sensor name.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string SensorName { get;  }
        /// <summary>Sensor site.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Sensor site.",
        SerializedName = @"site",
        PossibleTypes = new [] { typeof(string) })]
        string SensorSite { get;  }
        /// <summary>Sensor type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Sensor type.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.SensorType) })]
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.SensorType? SensorType { get;  }
        /// <summary>Sensor zone.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Sensor zone.",
        SerializedName = @"zone",
        PossibleTypes = new [] { typeof(string) })]
        string SensorZone { get;  }
        /// <summary>List of the device slot in the backplane</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of the device slot in the backplane",
        SerializedName = @"slots",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISlot) })]
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISlot[] Slot { get;  }

    }
    /// Device properties
    internal partial interface IDevicePropertiesInternal

    {
        /// <summary>A bag of fields which extends the device information.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.IAny AdditionalField { get; set; }
        /// <summary>Authorized state of the device.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.AuthorizedState? AuthorizedState { get; set; }
        /// <summary>Device business function</summary>
        string BusinessFunction { get; set; }
        /// <summary>List of Common Platform Enumeration (CPE)</summary>
        string[] Cpe { get; set; }
        /// <summary>Device criticality.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.Criticality? Criticality { get; set; }
        /// <summary>Device category display name</summary>
        string DeviceCategoryDisplayName { get; set; }
        /// <summary>Device category id</summary>
        int? DeviceCategoryId { get; set; }
        /// <summary>Device data source.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.DeviceDataSource? DeviceDataSource { get; set; }
        /// <summary>Device name</summary>
        string DeviceName { get; set; }
        /// <summary>Device status.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.DeviceStatus? DeviceStatus { get; set; }
        /// <summary>Device sub type display name</summary>
        string DeviceSubTypeDisplayName { get; set; }
        /// <summary>Device sub type id</summary>
        int? DeviceSubTypeId { get; set; }
        /// <summary>Device tags</summary>
        string[] DeviceTag { get; set; }
        /// <summary>Device type display name</summary>
        string DeviceTypeDisplayName { get; set; }
        /// <summary>Device type id</summary>
        int? DeviceTypeId { get; set; }
        /// <summary>List of device firmwares.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IFirmware[] Firmware { get; set; }
        /// <summary>First time the device was seen.</summary>
        global::System.DateTime? FirstSeen { get; set; }
        /// <summary>Device hardware data</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IHardware Hardware { get; set; }
        /// <summary>Hardware model.</summary>
        string HardwareModel { get; set; }
        /// <summary>Hardware serial number.</summary>
        string HardwareSerialNumber { get; set; }
        /// <summary>Hardware vendor.</summary>
        string HardwareVendor { get; set; }
        /// <summary>last time the device was programming or programed.</summary>
        global::System.DateTime? LastProgrammingTime { get; set; }
        /// <summary>Last time the device was seen.</summary>
        global::System.DateTime? LastSeen { get; set; }
        /// <summary>Last time the device was updated by the profiler.</summary>
        global::System.DateTime? LastUpdated { get; set; }
        /// <summary>List of merged devices data</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IMergedDevice[] MergedDevice { get; set; }
        /// <summary>The device Id that this device was merged into</summary>
        string MergedToDeviceId { get; set; }
        /// <summary>List of the device network interface cards.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.INic[] Nic { get; set; }
        /// <summary>Device onboarding status.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.OnboardingStatus? OnboardingStatus { get; set; }
        /// <summary>Device operating system data</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IOperatingSystem OperatingSystem { get; set; }
        /// <summary>OS architecture</summary>
        string OperatingSystemArchitecture { get; set; }
        /// <summary>OS build</summary>
        string OperatingSystemBuild { get; set; }
        /// <summary>OS distribution</summary>
        string OperatingSystemDistribution { get; set; }
        /// <summary>OS platform</summary>
        string OperatingSystemPlatform { get; set; }
        /// <summary>OS version</summary>
        string OperatingSystemVersion { get; set; }
        /// <summary>List of device packages</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IPackage[] Package { get; set; }
        /// <summary>For nested device, this is the parent device id.</summary>
        string ParentDeviceId { get; set; }
        /// <summary>
        /// For nested device, this is the rack number in the parent device that holds the nested device.
        /// </summary>
        int? ParentRackNumber { get; set; }
        /// <summary>
        /// For nested device, this is the slot number in the parent device that holds the nested device.
        /// </summary>
        int? ParentSlotNumber { get; set; }
        /// <summary>Confidence of the device profile</summary>
        int? ProfilingConfidence { get; set; }
        /// <summary>Indicates whether this device is programming</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.ProgrammingState? ProgrammingState { get; set; }
        /// <summary>Purdue level of the device.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.PurdueLevel? PurdueLevel { get; set; }
        /// <summary>risk score of the device.</summary>
        int? RiskScore { get; set; }
        /// <summary>Version of the device model schema</summary>
        string SchemaVersion { get; set; }
        /// <summary>Sensor that scanned this device.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISensor Sensor { get; set; }
        /// <summary>Sensor name.</summary>
        string SensorName { get; set; }
        /// <summary>Sensor site.</summary>
        string SensorSite { get; set; }
        /// <summary>Sensor type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.SensorType? SensorType { get; set; }
        /// <summary>Sensor zone.</summary>
        string SensorZone { get; set; }
        /// <summary>List of the device slot in the backplane</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISlot[] Slot { get; set; }

    }
}