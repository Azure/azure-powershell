// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Extensions;

    /// <summary>IoT sensor properties</summary>
    public partial class SensorProperties :
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISensorProperties,
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISensorPropertiesInternal
    {

        /// <summary>Backing field for <see cref="ConnectivityTime" /> property.</summary>
        private string _connectivityTime;

        /// <summary>Last connectivity time of the IoT sensor</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public string ConnectivityTime { get => this._connectivityTime; }

        /// <summary>Backing field for <see cref="DynamicLearning" /> property.</summary>
        private bool? _dynamicLearning;

        /// <summary>Dynamic mode status of the IoT sensor</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public bool? DynamicLearning { get => this._dynamicLearning; }

        /// <summary>Backing field for <see cref="LearningMode" /> property.</summary>
        private bool? _learningMode;

        /// <summary>Learning mode status of the IoT sensor</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public bool? LearningMode { get => this._learningMode; }

        /// <summary>Internal Acessors for ConnectivityTime</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISensorPropertiesInternal.ConnectivityTime { get => this._connectivityTime; set { {_connectivityTime = value;} } }

        /// <summary>Internal Acessors for DynamicLearning</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISensorPropertiesInternal.DynamicLearning { get => this._dynamicLearning; set { {_dynamicLearning = value;} } }

        /// <summary>Internal Acessors for LearningMode</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISensorPropertiesInternal.LearningMode { get => this._learningMode; set { {_learningMode = value;} } }

        /// <summary>Internal Acessors for SensorStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.SensorStatus? Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISensorPropertiesInternal.SensorStatus { get => this._sensorStatus; set { {_sensorStatus = value;} } }

        /// <summary>Internal Acessors for SensorVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISensorPropertiesInternal.SensorVersion { get => this._sensorVersion; set { {_sensorVersion = value;} } }

        /// <summary>Internal Acessors for TiStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.TiStatus? Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISensorPropertiesInternal.TiStatus { get => this._tiStatus; set { {_tiStatus = value;} } }

        /// <summary>Internal Acessors for TiVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISensorPropertiesInternal.TiVersion { get => this._tiVersion; set { {_tiVersion = value;} } }

        /// <summary>Backing field for <see cref="SensorStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.SensorStatus? _sensorStatus;

        /// <summary>Status of the IoT sensor</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.SensorStatus? SensorStatus { get => this._sensorStatus; }

        /// <summary>Backing field for <see cref="SensorType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.SensorType? _sensorType;

        /// <summary>Type of sensor</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.SensorType? SensorType { get => this._sensorType; set => this._sensorType = value; }

        /// <summary>Backing field for <see cref="SensorVersion" /> property.</summary>
        private string _sensorVersion;

        /// <summary>Version of the IoT sensor</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public string SensorVersion { get => this._sensorVersion; }

        /// <summary>Backing field for <see cref="TiAutomaticUpdate" /> property.</summary>
        private bool? _tiAutomaticUpdate;

        /// <summary>TI Automatic mode status of the IoT sensor</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public bool? TiAutomaticUpdate { get => this._tiAutomaticUpdate; set => this._tiAutomaticUpdate = value; }

        /// <summary>Backing field for <see cref="TiStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.TiStatus? _tiStatus;

        /// <summary>TI Status of the IoT sensor</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.TiStatus? TiStatus { get => this._tiStatus; }

        /// <summary>Backing field for <see cref="TiVersion" /> property.</summary>
        private string _tiVersion;

        /// <summary>TI Version of the IoT sensor</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public string TiVersion { get => this._tiVersion; }

        /// <summary>Backing field for <see cref="Zone" /> property.</summary>
        private string _zone;

        /// <summary>Zone of the IoT sensor</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public string Zone { get => this._zone; set => this._zone = value; }

        /// <summary>Creates an new <see cref="SensorProperties" /> instance.</summary>
        public SensorProperties()
        {

        }
    }
    /// IoT sensor properties
    public partial interface ISensorProperties :
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.IJsonSerializable
    {
        /// <summary>Last connectivity time of the IoT sensor</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Last connectivity time of the IoT sensor",
        SerializedName = @"connectivityTime",
        PossibleTypes = new [] { typeof(string) })]
        string ConnectivityTime { get;  }
        /// <summary>Dynamic mode status of the IoT sensor</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Dynamic mode status of the IoT sensor",
        SerializedName = @"dynamicLearning",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DynamicLearning { get;  }
        /// <summary>Learning mode status of the IoT sensor</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Learning mode status of the IoT sensor",
        SerializedName = @"learningMode",
        PossibleTypes = new [] { typeof(bool) })]
        bool? LearningMode { get;  }
        /// <summary>Status of the IoT sensor</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Status of the IoT sensor",
        SerializedName = @"sensorStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.SensorStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.SensorStatus? SensorStatus { get;  }
        /// <summary>Type of sensor</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of sensor",
        SerializedName = @"sensorType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.SensorType) })]
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.SensorType? SensorType { get; set; }
        /// <summary>Version of the IoT sensor</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Version of the IoT sensor",
        SerializedName = @"sensorVersion",
        PossibleTypes = new [] { typeof(string) })]
        string SensorVersion { get;  }
        /// <summary>TI Automatic mode status of the IoT sensor</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"TI Automatic mode status of the IoT sensor",
        SerializedName = @"tiAutomaticUpdates",
        PossibleTypes = new [] { typeof(bool) })]
        bool? TiAutomaticUpdate { get; set; }
        /// <summary>TI Status of the IoT sensor</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"TI Status of the IoT sensor",
        SerializedName = @"tiStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.TiStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.TiStatus? TiStatus { get;  }
        /// <summary>TI Version of the IoT sensor</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"TI Version of the IoT sensor",
        SerializedName = @"tiVersion",
        PossibleTypes = new [] { typeof(string) })]
        string TiVersion { get;  }
        /// <summary>Zone of the IoT sensor</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Zone of the IoT sensor",
        SerializedName = @"zone",
        PossibleTypes = new [] { typeof(string) })]
        string Zone { get; set; }

    }
    /// IoT sensor properties
    internal partial interface ISensorPropertiesInternal

    {
        /// <summary>Last connectivity time of the IoT sensor</summary>
        string ConnectivityTime { get; set; }
        /// <summary>Dynamic mode status of the IoT sensor</summary>
        bool? DynamicLearning { get; set; }
        /// <summary>Learning mode status of the IoT sensor</summary>
        bool? LearningMode { get; set; }
        /// <summary>Status of the IoT sensor</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.SensorStatus? SensorStatus { get; set; }
        /// <summary>Type of sensor</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.SensorType? SensorType { get; set; }
        /// <summary>Version of the IoT sensor</summary>
        string SensorVersion { get; set; }
        /// <summary>TI Automatic mode status of the IoT sensor</summary>
        bool? TiAutomaticUpdate { get; set; }
        /// <summary>TI Status of the IoT sensor</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.TiStatus? TiStatus { get; set; }
        /// <summary>TI Version of the IoT sensor</summary>
        string TiVersion { get; set; }
        /// <summary>Zone of the IoT sensor</summary>
        string Zone { get; set; }

    }
}