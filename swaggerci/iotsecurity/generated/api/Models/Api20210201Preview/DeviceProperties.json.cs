// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Extensions;

    /// <summary>Device properties</summary>
    public partial class DeviceProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonObject into a new instance of <see cref="DeviceProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal DeviceProperties(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_sensor = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonObject>("sensor"), out var __jsonSensor) ? Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.Sensor.FromJson(__jsonSensor) : Sensor;}
            {_hardware = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonObject>("hardware"), out var __jsonHardware) ? Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.Hardware.FromJson(__jsonHardware) : Hardware;}
            {_operatingSystem = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonObject>("operatingSystem"), out var __jsonOperatingSystem) ? Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.OperatingSystem.FromJson(__jsonOperatingSystem) : OperatingSystem;}
            {_schemaVersion = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString>("schemaVersion"), out var __jsonSchemaVersion) ? (string)__jsonSchemaVersion : (string)SchemaVersion;}
            {_deviceDataSource = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString>("deviceDataSource"), out var __jsonDeviceDataSource) ? (string)__jsonDeviceDataSource : (string)DeviceDataSource;}
            {_mergedDevice = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonArray>("mergedDevices"), out var __jsonMergedDevices) ? If( __jsonMergedDevices as Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IMergedDevice[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IMergedDevice) (Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.MergedDevice.FromJson(__u) )) ))() : null : MergedDevice;}
            {_mergedToDeviceId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString>("mergedToDeviceId"), out var __jsonMergedToDeviceId) ? (string)__jsonMergedToDeviceId : (string)MergedToDeviceId;}
            {_onboardingStatus = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString>("onboardingStatus"), out var __jsonOnboardingStatus) ? (string)__jsonOnboardingStatus : (string)OnboardingStatus;}
            {_deviceName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString>("deviceName"), out var __jsonDeviceName) ? (string)__jsonDeviceName : (string)DeviceName;}
            {_deviceCategoryId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNumber>("deviceCategoryId"), out var __jsonDeviceCategoryId) ? (int?)__jsonDeviceCategoryId : DeviceCategoryId;}
            {_deviceTypeId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNumber>("deviceTypeId"), out var __jsonDeviceTypeId) ? (int?)__jsonDeviceTypeId : DeviceTypeId;}
            {_deviceSubTypeId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNumber>("deviceSubTypeId"), out var __jsonDeviceSubTypeId) ? (int?)__jsonDeviceSubTypeId : DeviceSubTypeId;}
            {_deviceCategoryDisplayName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString>("deviceCategoryDisplayName"), out var __jsonDeviceCategoryDisplayName) ? (string)__jsonDeviceCategoryDisplayName : (string)DeviceCategoryDisplayName;}
            {_deviceTypeDisplayName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString>("deviceTypeDisplayName"), out var __jsonDeviceTypeDisplayName) ? (string)__jsonDeviceTypeDisplayName : (string)DeviceTypeDisplayName;}
            {_deviceSubTypeDisplayName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString>("deviceSubTypeDisplayName"), out var __jsonDeviceSubTypeDisplayName) ? (string)__jsonDeviceSubTypeDisplayName : (string)DeviceSubTypeDisplayName;}
            {_profilingConfidence = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNumber>("profilingConfidence"), out var __jsonProfilingConfidence) ? (int?)__jsonProfilingConfidence : ProfilingConfidence;}
            {_riskScore = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNumber>("riskScore"), out var __jsonRiskScore) ? (int?)__jsonRiskScore : RiskScore;}
            {_criticality = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString>("criticality"), out var __jsonCriticality) ? (string)__jsonCriticality : (string)Criticality;}
            {_deviceTag = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonArray>("deviceTags"), out var __jsonDeviceTags) ? If( __jsonDeviceTags as Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonArray, out var __q) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__q, (__p)=>(string) (__p is Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString __o ? (string)(__o.ToString()) : null)) ))() : null : DeviceTag;}
            {_firstSeen = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString>("firstSeen"), out var __jsonFirstSeen) ? global::System.DateTime.TryParse((string)__jsonFirstSeen, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonFirstSeenValue) ? __jsonFirstSeenValue : FirstSeen : FirstSeen;}
            {_lastSeen = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString>("lastSeen"), out var __jsonLastSeen) ? global::System.DateTime.TryParse((string)__jsonLastSeen, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonLastSeenValue) ? __jsonLastSeenValue : LastSeen : LastSeen;}
            {_lastUpdated = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString>("lastUpdated"), out var __jsonLastUpdated) ? global::System.DateTime.TryParse((string)__jsonLastUpdated, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonLastUpdatedValue) ? __jsonLastUpdatedValue : LastUpdated : LastUpdated;}
            {_firmware = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonArray>("firmwares"), out var __jsonFirmwares) ? If( __jsonFirmwares as Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonArray, out var __l) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IFirmware[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__l, (__k)=>(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IFirmware) (Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.Firmware.FromJson(__k) )) ))() : null : Firmware;}
            {_businessFunction = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString>("businessFunction"), out var __jsonBusinessFunction) ? (string)__jsonBusinessFunction : (string)BusinessFunction;}
            {_purdueLevel = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString>("purdueLevel"), out var __jsonPurdueLevel) ? (string)__jsonPurdueLevel : (string)PurdueLevel;}
            {_authorizedState = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString>("authorizedState"), out var __jsonAuthorizedState) ? (string)__jsonAuthorizedState : (string)AuthorizedState;}
            {_programmingState = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString>("programmingState"), out var __jsonProgrammingState) ? (string)__jsonProgrammingState : (string)ProgrammingState;}
            {_lastProgrammingTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString>("lastProgrammingTime"), out var __jsonLastProgrammingTime) ? global::System.DateTime.TryParse((string)__jsonLastProgrammingTime, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonLastProgrammingTimeValue) ? __jsonLastProgrammingTimeValue : LastProgrammingTime : LastProgrammingTime;}
            {_cpe = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonArray>("cpes"), out var __jsonCpes) ? If( __jsonCpes as Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonArray, out var __g) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__g, (__f)=>(string) (__f is Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString __e ? (string)(__e.ToString()) : null)) ))() : null : Cpe;}
            {_nic = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonArray>("nics"), out var __jsonNics) ? If( __jsonNics as Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonArray, out var __b) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.INic[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__b, (__a)=>(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.INic) (Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.Nic.FromJson(__a) )) ))() : null : Nic;}
            {_deviceStatus = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString>("deviceStatus"), out var __jsonDeviceStatus) ? (string)__jsonDeviceStatus : (string)DeviceStatus;}
            {_slot = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonArray>("slots"), out var __jsonSlots) ? If( __jsonSlots as Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonArray, out var ___w) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISlot[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(___w, (___v)=>(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISlot) (Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.Slot.FromJson(___v) )) ))() : null : Slot;}
            {_parentDeviceId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString>("parentDeviceId"), out var __jsonParentDeviceId) ? (string)__jsonParentDeviceId : (string)ParentDeviceId;}
            {_parentRackNumber = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNumber>("parentRackNumber"), out var __jsonParentRackNumber) ? (int?)__jsonParentRackNumber : ParentRackNumber;}
            {_parentSlotNumber = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNumber>("parentSlotNumber"), out var __jsonParentSlotNumber) ? (int?)__jsonParentSlotNumber : ParentSlotNumber;}
            {_package = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonArray>("packages"), out var __jsonPackages) ? If( __jsonPackages as Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonArray, out var ___r) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IPackage[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(___r, (___q)=>(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IPackage) (Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.Package.FromJson(___q) )) ))() : null : Package;}
            {_additionalField = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonObject>("additionalFields"), out var __jsonAdditionalFields) ? Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Any.FromJson(__jsonAdditionalFields) : AdditionalField;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDeviceProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDeviceProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDeviceProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonObject json ? new DeviceProperties(json) : null;
        }

        /// <summary>
        /// Serializes this instance of <see cref="DeviceProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="DeviceProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._sensor ? (Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNode) this._sensor.ToJson(null,serializationMode) : null, "sensor" ,container.Add );
            }
            AddIf( null != this._hardware ? (Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNode) this._hardware.ToJson(null,serializationMode) : null, "hardware" ,container.Add );
            AddIf( null != this._operatingSystem ? (Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNode) this._operatingSystem.ToJson(null,serializationMode) : null, "operatingSystem" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._schemaVersion)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString(this._schemaVersion.ToString()) : null, "schemaVersion" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._deviceDataSource)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString(this._deviceDataSource.ToString()) : null, "deviceDataSource" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.SerializationMode.IncludeReadOnly))
            {
                if (null != this._mergedDevice)
                {
                    var __w = new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.XNodeArray();
                    foreach( var __x in this._mergedDevice )
                    {
                        AddIf(__x?.ToJson(null, serializationMode) ,__w.Add);
                    }
                    container.Add("mergedDevices",__w);
                }
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._mergedToDeviceId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString(this._mergedToDeviceId.ToString()) : null, "mergedToDeviceId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._onboardingStatus)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString(this._onboardingStatus.ToString()) : null, "onboardingStatus" ,container.Add );
            }
            AddIf( null != (((object)this._deviceName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString(this._deviceName.ToString()) : null, "deviceName" ,container.Add );
            AddIf( null != this._deviceCategoryId ? (Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNumber((int)this._deviceCategoryId) : null, "deviceCategoryId" ,container.Add );
            AddIf( null != this._deviceTypeId ? (Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNumber((int)this._deviceTypeId) : null, "deviceTypeId" ,container.Add );
            AddIf( null != this._deviceSubTypeId ? (Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNumber((int)this._deviceSubTypeId) : null, "deviceSubTypeId" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._deviceCategoryDisplayName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString(this._deviceCategoryDisplayName.ToString()) : null, "deviceCategoryDisplayName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._deviceTypeDisplayName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString(this._deviceTypeDisplayName.ToString()) : null, "deviceTypeDisplayName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._deviceSubTypeDisplayName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString(this._deviceSubTypeDisplayName.ToString()) : null, "deviceSubTypeDisplayName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._profilingConfidence ? (Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNumber((int)this._profilingConfidence) : null, "profilingConfidence" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._riskScore ? (Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNumber((int)this._riskScore) : null, "riskScore" ,container.Add );
            }
            AddIf( null != (((object)this._criticality)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString(this._criticality.ToString()) : null, "criticality" ,container.Add );
            if (null != this._deviceTag)
            {
                var __r = new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.XNodeArray();
                foreach( var __s in this._deviceTag )
                {
                    AddIf(null != (((object)__s)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString(__s.ToString()) : null ,__r.Add);
                }
                container.Add("deviceTags",__r);
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._firstSeen ? (Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString(this._firstSeen?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "firstSeen" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._lastSeen ? (Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString(this._lastSeen?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "lastSeen" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._lastUpdated ? (Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString(this._lastUpdated?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "lastUpdated" ,container.Add );
            }
            if (null != this._firmware)
            {
                var __m = new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.XNodeArray();
                foreach( var __n in this._firmware )
                {
                    AddIf(__n?.ToJson(null, serializationMode) ,__m.Add);
                }
                container.Add("firmwares",__m);
            }
            AddIf( null != (((object)this._businessFunction)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString(this._businessFunction.ToString()) : null, "businessFunction" ,container.Add );
            AddIf( null != (((object)this._purdueLevel)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString(this._purdueLevel.ToString()) : null, "purdueLevel" ,container.Add );
            AddIf( null != (((object)this._authorizedState)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString(this._authorizedState.ToString()) : null, "authorizedState" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._programmingState)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString(this._programmingState.ToString()) : null, "programmingState" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._lastProgrammingTime ? (Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString(this._lastProgrammingTime?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "lastProgrammingTime" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.SerializationMode.IncludeReadOnly))
            {
                if (null != this._cpe)
                {
                    var __h = new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.XNodeArray();
                    foreach( var __i in this._cpe )
                    {
                        AddIf(null != (((object)__i)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString(__i.ToString()) : null ,__h.Add);
                    }
                    container.Add("cpes",__h);
                }
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.SerializationMode.IncludeReadOnly))
            {
                if (null != this._nic)
                {
                    var __c = new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.XNodeArray();
                    foreach( var __d in this._nic )
                    {
                        AddIf(__d?.ToJson(null, serializationMode) ,__c.Add);
                    }
                    container.Add("nics",__c);
                }
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._deviceStatus)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString(this._deviceStatus.ToString()) : null, "deviceStatus" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.SerializationMode.IncludeReadOnly))
            {
                if (null != this._slot)
                {
                    var ___x = new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.XNodeArray();
                    foreach( var ___y in this._slot )
                    {
                        AddIf(___y?.ToJson(null, serializationMode) ,___x.Add);
                    }
                    container.Add("slots",___x);
                }
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._parentDeviceId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonString(this._parentDeviceId.ToString()) : null, "parentDeviceId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._parentRackNumber ? (Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNumber((int)this._parentRackNumber) : null, "parentRackNumber" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._parentSlotNumber ? (Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNumber((int)this._parentSlotNumber) : null, "parentSlotNumber" ,container.Add );
            }
            if (null != this._package)
            {
                var ___s = new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.XNodeArray();
                foreach( var ___t in this._package )
                {
                    AddIf(___t?.ToJson(null, serializationMode) ,___s.Add);
                }
                container.Add("packages",___s);
            }
            AddIf( null != this._additionalField ? (Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Json.JsonNode) this._additionalField.ToJson(null,serializationMode) : null, "additionalFields" ,container.Add );
            AfterToJson(ref container);
            return container;
        }
    }
}