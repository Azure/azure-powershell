// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Extensions;

    /// <summary>Sensor that scanned the device</summary>
    public partial class Sensor :
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISensor,
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISensorInternal
    {

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISensorInternal.Name { get => this._name; set { {_name = value;} } }

        /// <summary>Internal Acessors for Site</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISensorInternal.Site { get => this._site; set { {_site = value;} } }

        /// <summary>Internal Acessors for Type</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.SensorType? Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISensorInternal.Type { get => this._type; set { {_type = value;} } }

        /// <summary>Internal Acessors for Zone</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISensorInternal.Zone { get => this._zone; set { {_zone = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Sensor name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public string Name { get => this._name; }

        /// <summary>Backing field for <see cref="Site" /> property.</summary>
        private string _site;

        /// <summary>Sensor site.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public string Site { get => this._site; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.SensorType? _type;

        /// <summary>Sensor type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.SensorType? Type { get => this._type; }

        /// <summary>Backing field for <see cref="Zone" /> property.</summary>
        private string _zone;

        /// <summary>Sensor zone.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public string Zone { get => this._zone; }

        /// <summary>Creates an new <see cref="Sensor" /> instance.</summary>
        public Sensor()
        {

        }
    }
    /// Sensor that scanned the device
    public partial interface ISensor :
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.IJsonSerializable
    {
        /// <summary>Sensor name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Sensor name.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get;  }
        /// <summary>Sensor site.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Sensor site.",
        SerializedName = @"site",
        PossibleTypes = new [] { typeof(string) })]
        string Site { get;  }
        /// <summary>Sensor type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Sensor type.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.SensorType) })]
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.SensorType? Type { get;  }
        /// <summary>Sensor zone.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Sensor zone.",
        SerializedName = @"zone",
        PossibleTypes = new [] { typeof(string) })]
        string Zone { get;  }

    }
    /// Sensor that scanned the device
    internal partial interface ISensorInternal

    {
        /// <summary>Sensor name.</summary>
        string Name { get; set; }
        /// <summary>Sensor site.</summary>
        string Site { get; set; }
        /// <summary>Sensor type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.SensorType? Type { get; set; }
        /// <summary>Sensor zone.</summary>
        string Zone { get; set; }

    }
}