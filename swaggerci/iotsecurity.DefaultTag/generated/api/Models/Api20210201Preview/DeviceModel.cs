// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Extensions;

    /// <summary>Device</summary>
    public partial class DeviceModel :
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDeviceModel,
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDeviceModelInternal,
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20.IResource" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20.Resource();

        /// <summary>A bag of fields which extends the device information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.IAny AdditionalField { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).AdditionalField; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).AdditionalField = value ?? null /* model class */; }

        /// <summary>Authorized state of the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.AuthorizedState? AuthorizedState { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).AuthorizedState; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).AuthorizedState = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.AuthorizedState)""); }

        /// <summary>Device business function</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public string BusinessFunction { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).BusinessFunction; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).BusinessFunction = value ?? null; }

        /// <summary>List of Common Platform Enumeration (CPE)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public string[] Cpe { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).Cpe; }

        /// <summary>Device criticality.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.Criticality? Criticality { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).Criticality; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).Criticality = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.Criticality)""); }

        /// <summary>Device category display name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public string DeviceCategoryDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).DeviceCategoryDisplayName; }

        /// <summary>Device category id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public int? DeviceCategoryId { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).DeviceCategoryId; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).DeviceCategoryId = value ?? default(int); }

        /// <summary>Device data source.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.DeviceDataSource? DeviceDataSource { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).DeviceDataSource; }

        /// <summary>Device name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public string DeviceName { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).DeviceName; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).DeviceName = value ?? null; }

        /// <summary>Device status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.DeviceStatus? DeviceStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).DeviceStatus; }

        /// <summary>Device sub type display name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public string DeviceSubTypeDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).DeviceSubTypeDisplayName; }

        /// <summary>Device sub type id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public int? DeviceSubTypeId { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).DeviceSubTypeId; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).DeviceSubTypeId = value ?? default(int); }

        /// <summary>Device tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public string[] DeviceTag { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).DeviceTag; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).DeviceTag = value ?? null /* arrayOf */; }

        /// <summary>Device type display name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public string DeviceTypeDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).DeviceTypeDisplayName; }

        /// <summary>Device type id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public int? DeviceTypeId { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).DeviceTypeId; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).DeviceTypeId = value ?? default(int); }

        /// <summary>List of device firmwares.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IFirmware[] Firmware { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).Firmware; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).Firmware = value ?? null /* arrayOf */; }

        /// <summary>First time the device was seen.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public global::System.DateTime? FirstSeen { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).FirstSeen; }

        /// <summary>Hardware model.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public string HardwareModel { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).HardwareModel; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).HardwareModel = value ?? null; }

        /// <summary>Hardware serial number.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public string HardwareSerialNumber { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).HardwareSerialNumber; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).HardwareSerialNumber = value ?? null; }

        /// <summary>Hardware vendor.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public string HardwareVendor { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).HardwareVendor; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).HardwareVendor = value ?? null; }

        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20.IResourceInternal)__resource).Id; }

        /// <summary>last time the device was programming or programed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public global::System.DateTime? LastProgrammingTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).LastProgrammingTime; }

        /// <summary>Last time the device was seen.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public global::System.DateTime? LastSeen { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).LastSeen; }

        /// <summary>Last time the device was updated by the profiler.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public global::System.DateTime? LastUpdated { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).LastUpdated; }

        /// <summary>List of merged devices data</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IMergedDevice[] MergedDevice { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).MergedDevice; }

        /// <summary>The device Id that this device was merged into</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public string MergedToDeviceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).MergedToDeviceId; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20.IResourceInternal)__resource).Type = value; }

        /// <summary>Internal Acessors for Cpe</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDeviceModelInternal.Cpe { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).Cpe; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).Cpe = value; }

        /// <summary>Internal Acessors for DeviceCategoryDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDeviceModelInternal.DeviceCategoryDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).DeviceCategoryDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).DeviceCategoryDisplayName = value; }

        /// <summary>Internal Acessors for DeviceDataSource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.DeviceDataSource? Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDeviceModelInternal.DeviceDataSource { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).DeviceDataSource; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).DeviceDataSource = value; }

        /// <summary>Internal Acessors for DeviceStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.DeviceStatus? Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDeviceModelInternal.DeviceStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).DeviceStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).DeviceStatus = value; }

        /// <summary>Internal Acessors for DeviceSubTypeDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDeviceModelInternal.DeviceSubTypeDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).DeviceSubTypeDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).DeviceSubTypeDisplayName = value; }

        /// <summary>Internal Acessors for DeviceTypeDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDeviceModelInternal.DeviceTypeDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).DeviceTypeDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).DeviceTypeDisplayName = value; }

        /// <summary>Internal Acessors for FirstSeen</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDeviceModelInternal.FirstSeen { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).FirstSeen; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).FirstSeen = value; }

        /// <summary>Internal Acessors for Hardware</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IHardware Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDeviceModelInternal.Hardware { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).Hardware; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).Hardware = value; }

        /// <summary>Internal Acessors for LastProgrammingTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDeviceModelInternal.LastProgrammingTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).LastProgrammingTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).LastProgrammingTime = value; }

        /// <summary>Internal Acessors for LastSeen</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDeviceModelInternal.LastSeen { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).LastSeen; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).LastSeen = value; }

        /// <summary>Internal Acessors for LastUpdated</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDeviceModelInternal.LastUpdated { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).LastUpdated; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).LastUpdated = value; }

        /// <summary>Internal Acessors for MergedDevice</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IMergedDevice[] Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDeviceModelInternal.MergedDevice { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).MergedDevice; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).MergedDevice = value; }

        /// <summary>Internal Acessors for MergedToDeviceId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDeviceModelInternal.MergedToDeviceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).MergedToDeviceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).MergedToDeviceId = value; }

        /// <summary>Internal Acessors for Nic</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.INic[] Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDeviceModelInternal.Nic { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).Nic; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).Nic = value; }

        /// <summary>Internal Acessors for OnboardingStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.OnboardingStatus? Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDeviceModelInternal.OnboardingStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).OnboardingStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).OnboardingStatus = value; }

        /// <summary>Internal Acessors for OperatingSystem</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IOperatingSystem Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDeviceModelInternal.OperatingSystem { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).OperatingSystem; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).OperatingSystem = value; }

        /// <summary>Internal Acessors for ParentDeviceId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDeviceModelInternal.ParentDeviceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).ParentDeviceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).ParentDeviceId = value; }

        /// <summary>Internal Acessors for ParentRackNumber</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDeviceModelInternal.ParentRackNumber { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).ParentRackNumber; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).ParentRackNumber = value; }

        /// <summary>Internal Acessors for ParentSlotNumber</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDeviceModelInternal.ParentSlotNumber { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).ParentSlotNumber; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).ParentSlotNumber = value; }

        /// <summary>Internal Acessors for ProfilingConfidence</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDeviceModelInternal.ProfilingConfidence { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).ProfilingConfidence; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).ProfilingConfidence = value; }

        /// <summary>Internal Acessors for ProgrammingState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.ProgrammingState? Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDeviceModelInternal.ProgrammingState { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).ProgrammingState; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).ProgrammingState = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDeviceProperties Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDeviceModelInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.DeviceProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for RiskScore</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDeviceModelInternal.RiskScore { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).RiskScore; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).RiskScore = value; }

        /// <summary>Internal Acessors for SchemaVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDeviceModelInternal.SchemaVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).SchemaVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).SchemaVersion = value; }

        /// <summary>Internal Acessors for Sensor</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISensor Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDeviceModelInternal.Sensor { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).Sensor; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).Sensor = value; }

        /// <summary>Internal Acessors for SensorName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDeviceModelInternal.SensorName { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).SensorName; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).SensorName = value; }

        /// <summary>Internal Acessors for SensorSite</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDeviceModelInternal.SensorSite { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).SensorSite; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).SensorSite = value; }

        /// <summary>Internal Acessors for SensorType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.SensorType? Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDeviceModelInternal.SensorType { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).SensorType; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).SensorType = value; }

        /// <summary>Internal Acessors for SensorZone</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDeviceModelInternal.SensorZone { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).SensorZone; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).SensorZone = value; }

        /// <summary>Internal Acessors for Slot</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISlot[] Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDeviceModelInternal.Slot { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).Slot; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).Slot = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20.ISystemData Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDeviceModelInternal.SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20.SystemData()); set { {_systemData = value;} } }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20.IResourceInternal)__resource).Name; }

        /// <summary>List of the device network interface cards.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.INic[] Nic { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).Nic; }

        /// <summary>Device onboarding status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.OnboardingStatus? OnboardingStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).OnboardingStatus; }

        /// <summary>OS architecture</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public string OperatingSystemArchitecture { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).OperatingSystemArchitecture; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).OperatingSystemArchitecture = value ?? null; }

        /// <summary>OS build</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public string OperatingSystemBuild { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).OperatingSystemBuild; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).OperatingSystemBuild = value ?? null; }

        /// <summary>OS distribution</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public string OperatingSystemDistribution { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).OperatingSystemDistribution; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).OperatingSystemDistribution = value ?? null; }

        /// <summary>OS platform</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public string OperatingSystemPlatform { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).OperatingSystemPlatform; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).OperatingSystemPlatform = value ?? null; }

        /// <summary>OS version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public string OperatingSystemVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).OperatingSystemVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).OperatingSystemVersion = value ?? null; }

        /// <summary>List of device packages</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IPackage[] Package { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).Package; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).Package = value ?? null /* arrayOf */; }

        /// <summary>For nested device, this is the parent device id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public string ParentDeviceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).ParentDeviceId; }

        /// <summary>
        /// For nested device, this is the rack number in the parent device that holds the nested device.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public int? ParentRackNumber { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).ParentRackNumber; }

        /// <summary>
        /// For nested device, this is the slot number in the parent device that holds the nested device.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public int? ParentSlotNumber { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).ParentSlotNumber; }

        /// <summary>Confidence of the device profile</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public int? ProfilingConfidence { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).ProfilingConfidence; }

        /// <summary>Indicates whether this device is programming</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.ProgrammingState? ProgrammingState { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).ProgrammingState; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDeviceProperties _property;

        /// <summary>Device properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDeviceProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.DeviceProperties()); set => this._property = value; }

        /// <summary>Purdue level of the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.PurdueLevel? PurdueLevel { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).PurdueLevel; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).PurdueLevel = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.PurdueLevel)""); }

        /// <summary>risk score of the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public int? RiskScore { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).RiskScore; }

        /// <summary>Version of the device model schema</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public string SchemaVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).SchemaVersion; }

        /// <summary>Sensor name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public string SensorName { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).SensorName; }

        /// <summary>Sensor site.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public string SensorSite { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).SensorSite; }

        /// <summary>Sensor type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.SensorType? SensorType { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).SensorType; }

        /// <summary>Sensor zone.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public string SensorZone { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).SensorZone; }

        /// <summary>List of the device slot in the backplane</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISlot[] Slot { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDevicePropertiesInternal)Property).Slot; }

        /// <summary>Backing field for <see cref="SystemData" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20.ISystemData _systemData;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20.ISystemData SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20.SystemData()); }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20.ISystemDataInternal)SystemData).CreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20.ISystemDataInternal)SystemData).CreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20.ISystemDataInternal)SystemData).CreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20.ISystemDataInternal)SystemData).CreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20.ISystemDataInternal)SystemData).CreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20.ISystemDataInternal)SystemData).CreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20.ISystemDataInternal)SystemData).LastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20.ISystemDataInternal)SystemData).LastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20.ISystemDataInternal)SystemData).LastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20.ISystemDataInternal)SystemData).LastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20.ISystemDataInternal)SystemData).LastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20.ISystemDataInternal)SystemData).LastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.CreatedByType)""); }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20.IResourceInternal)__resource).Type; }

        /// <summary>Creates an new <see cref="DeviceModel" /> instance.</summary>
        public DeviceModel()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// Device
    public partial interface IDeviceModel :
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20.IResource
    {
        /// <summary>A bag of fields which extends the device information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @" A bag of fields which extends the device information.",
        SerializedName = @"additionalFields",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.IAny AdditionalField { get; set; }
        /// <summary>Authorized state of the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Authorized state of the device.",
        SerializedName = @"authorizedState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.AuthorizedState) })]
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.AuthorizedState? AuthorizedState { get; set; }
        /// <summary>Device business function</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Device business function",
        SerializedName = @"businessFunction",
        PossibleTypes = new [] { typeof(string) })]
        string BusinessFunction { get; set; }
        /// <summary>List of Common Platform Enumeration (CPE)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of Common Platform Enumeration (CPE)",
        SerializedName = @"cpes",
        PossibleTypes = new [] { typeof(string) })]
        string[] Cpe { get;  }
        /// <summary>Device criticality.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Device criticality.",
        SerializedName = @"criticality",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.Criticality) })]
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.Criticality? Criticality { get; set; }
        /// <summary>Device category display name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Device category display name",
        SerializedName = @"deviceCategoryDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string DeviceCategoryDisplayName { get;  }
        /// <summary>Device category id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Device category id",
        SerializedName = @"deviceCategoryId",
        PossibleTypes = new [] { typeof(int) })]
        int? DeviceCategoryId { get; set; }
        /// <summary>Device data source.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Device data source.",
        SerializedName = @"deviceDataSource",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.DeviceDataSource) })]
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.DeviceDataSource? DeviceDataSource { get;  }
        /// <summary>Device name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Device name",
        SerializedName = @"deviceName",
        PossibleTypes = new [] { typeof(string) })]
        string DeviceName { get; set; }
        /// <summary>Device status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Device status.",
        SerializedName = @"deviceStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.DeviceStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.DeviceStatus? DeviceStatus { get;  }
        /// <summary>Device sub type display name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Device sub type display name",
        SerializedName = @"deviceSubTypeDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string DeviceSubTypeDisplayName { get;  }
        /// <summary>Device sub type id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Device sub type id",
        SerializedName = @"deviceSubTypeId",
        PossibleTypes = new [] { typeof(int) })]
        int? DeviceSubTypeId { get; set; }
        /// <summary>Device tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Device tags",
        SerializedName = @"deviceTags",
        PossibleTypes = new [] { typeof(string) })]
        string[] DeviceTag { get; set; }
        /// <summary>Device type display name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Device type display name",
        SerializedName = @"deviceTypeDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string DeviceTypeDisplayName { get;  }
        /// <summary>Device type id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Device type id",
        SerializedName = @"deviceTypeId",
        PossibleTypes = new [] { typeof(int) })]
        int? DeviceTypeId { get; set; }
        /// <summary>List of device firmwares.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of device firmwares.",
        SerializedName = @"firmwares",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IFirmware) })]
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IFirmware[] Firmware { get; set; }
        /// <summary>First time the device was seen.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"First time the device was seen.",
        SerializedName = @"firstSeen",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? FirstSeen { get;  }
        /// <summary>Hardware model.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Hardware model.",
        SerializedName = @"model",
        PossibleTypes = new [] { typeof(string) })]
        string HardwareModel { get; set; }
        /// <summary>Hardware serial number.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Hardware serial number.",
        SerializedName = @"serialNumber",
        PossibleTypes = new [] { typeof(string) })]
        string HardwareSerialNumber { get; set; }
        /// <summary>Hardware vendor.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Hardware vendor.",
        SerializedName = @"vendor",
        PossibleTypes = new [] { typeof(string) })]
        string HardwareVendor { get; set; }
        /// <summary>last time the device was programming or programed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"last time the device was programming or programed.",
        SerializedName = @"lastProgrammingTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastProgrammingTime { get;  }
        /// <summary>Last time the device was seen.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Last time the device was seen.",
        SerializedName = @"lastSeen",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastSeen { get;  }
        /// <summary>Last time the device was updated by the profiler.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Last time the device was updated by the profiler.",
        SerializedName = @"lastUpdated",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastUpdated { get;  }
        /// <summary>List of merged devices data</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of merged devices data",
        SerializedName = @"mergedDevices",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IMergedDevice) })]
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IMergedDevice[] MergedDevice { get;  }
        /// <summary>The device Id that this device was merged into</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The device Id that this device was merged into",
        SerializedName = @"mergedToDeviceId",
        PossibleTypes = new [] { typeof(string) })]
        string MergedToDeviceId { get;  }
        /// <summary>List of the device network interface cards.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of the device network interface cards.",
        SerializedName = @"nics",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.INic) })]
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.INic[] Nic { get;  }
        /// <summary>Device onboarding status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Device onboarding status.",
        SerializedName = @"onboardingStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.OnboardingStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.OnboardingStatus? OnboardingStatus { get;  }
        /// <summary>OS architecture</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"OS architecture",
        SerializedName = @"architecture",
        PossibleTypes = new [] { typeof(string) })]
        string OperatingSystemArchitecture { get; set; }
        /// <summary>OS build</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"OS build",
        SerializedName = @"build",
        PossibleTypes = new [] { typeof(string) })]
        string OperatingSystemBuild { get; set; }
        /// <summary>OS distribution</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"OS distribution",
        SerializedName = @"distribution",
        PossibleTypes = new [] { typeof(string) })]
        string OperatingSystemDistribution { get; set; }
        /// <summary>OS platform</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"OS platform",
        SerializedName = @"platform",
        PossibleTypes = new [] { typeof(string) })]
        string OperatingSystemPlatform { get; set; }
        /// <summary>OS version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"OS version",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string OperatingSystemVersion { get; set; }
        /// <summary>List of device packages</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of device packages",
        SerializedName = @"packages",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IPackage) })]
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IPackage[] Package { get; set; }
        /// <summary>For nested device, this is the parent device id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"For nested device, this is the parent device id.",
        SerializedName = @"parentDeviceId",
        PossibleTypes = new [] { typeof(string) })]
        string ParentDeviceId { get;  }
        /// <summary>
        /// For nested device, this is the rack number in the parent device that holds the nested device.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"For nested device, this is the rack number in the parent device that holds the nested device.",
        SerializedName = @"parentRackNumber",
        PossibleTypes = new [] { typeof(int) })]
        int? ParentRackNumber { get;  }
        /// <summary>
        /// For nested device, this is the slot number in the parent device that holds the nested device.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"For nested device, this is the slot number in the parent device that holds the nested device.",
        SerializedName = @"parentSlotNumber",
        PossibleTypes = new [] { typeof(int) })]
        int? ParentSlotNumber { get;  }
        /// <summary>Confidence of the device profile</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Confidence of the device profile",
        SerializedName = @"profilingConfidence",
        PossibleTypes = new [] { typeof(int) })]
        int? ProfilingConfidence { get;  }
        /// <summary>Indicates whether this device is programming</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Indicates whether this device is programming",
        SerializedName = @"programmingState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.ProgrammingState) })]
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.ProgrammingState? ProgrammingState { get;  }
        /// <summary>Purdue level of the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Purdue level of the device.",
        SerializedName = @"purdueLevel",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.PurdueLevel) })]
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.PurdueLevel? PurdueLevel { get; set; }
        /// <summary>risk score of the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"risk score of the device.",
        SerializedName = @"riskScore",
        PossibleTypes = new [] { typeof(int) })]
        int? RiskScore { get;  }
        /// <summary>Version of the device model schema</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Version of the device model schema",
        SerializedName = @"schemaVersion",
        PossibleTypes = new [] { typeof(string) })]
        string SchemaVersion { get;  }
        /// <summary>Sensor name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Sensor name.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string SensorName { get;  }
        /// <summary>Sensor site.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Sensor site.",
        SerializedName = @"site",
        PossibleTypes = new [] { typeof(string) })]
        string SensorSite { get;  }
        /// <summary>Sensor type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Sensor type.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.SensorType) })]
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.SensorType? SensorType { get;  }
        /// <summary>Sensor zone.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Sensor zone.",
        SerializedName = @"zone",
        PossibleTypes = new [] { typeof(string) })]
        string SensorZone { get;  }
        /// <summary>List of the device slot in the backplane</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of the device slot in the backplane",
        SerializedName = @"slots",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISlot) })]
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISlot[] Slot { get;  }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp of resource creation (UTC).",
        SerializedName = @"createdAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity that created the resource.",
        SerializedName = @"createdBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity that created the resource.",
        SerializedName = @"createdByType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.CreatedByType) })]
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.CreatedByType? SystemDataCreatedByType { get; set; }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp of resource last modification (UTC)",
        SerializedName = @"lastModifiedAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity that last modified the resource.",
        SerializedName = @"lastModifiedBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity that last modified the resource.",
        SerializedName = @"lastModifiedByType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.CreatedByType) })]
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.CreatedByType? SystemDataLastModifiedByType { get; set; }

    }
    /// Device
    internal partial interface IDeviceModelInternal :
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20.IResourceInternal
    {
        /// <summary>A bag of fields which extends the device information.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.IAny AdditionalField { get; set; }
        /// <summary>Authorized state of the device.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.AuthorizedState? AuthorizedState { get; set; }
        /// <summary>Device business function</summary>
        string BusinessFunction { get; set; }
        /// <summary>List of Common Platform Enumeration (CPE)</summary>
        string[] Cpe { get; set; }
        /// <summary>Device criticality.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.Criticality? Criticality { get; set; }
        /// <summary>Device category display name</summary>
        string DeviceCategoryDisplayName { get; set; }
        /// <summary>Device category id</summary>
        int? DeviceCategoryId { get; set; }
        /// <summary>Device data source.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.DeviceDataSource? DeviceDataSource { get; set; }
        /// <summary>Device name</summary>
        string DeviceName { get; set; }
        /// <summary>Device status.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.DeviceStatus? DeviceStatus { get; set; }
        /// <summary>Device sub type display name</summary>
        string DeviceSubTypeDisplayName { get; set; }
        /// <summary>Device sub type id</summary>
        int? DeviceSubTypeId { get; set; }
        /// <summary>Device tags</summary>
        string[] DeviceTag { get; set; }
        /// <summary>Device type display name</summary>
        string DeviceTypeDisplayName { get; set; }
        /// <summary>Device type id</summary>
        int? DeviceTypeId { get; set; }
        /// <summary>List of device firmwares.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IFirmware[] Firmware { get; set; }
        /// <summary>First time the device was seen.</summary>
        global::System.DateTime? FirstSeen { get; set; }
        /// <summary>Device hardware data</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IHardware Hardware { get; set; }
        /// <summary>Hardware model.</summary>
        string HardwareModel { get; set; }
        /// <summary>Hardware serial number.</summary>
        string HardwareSerialNumber { get; set; }
        /// <summary>Hardware vendor.</summary>
        string HardwareVendor { get; set; }
        /// <summary>last time the device was programming or programed.</summary>
        global::System.DateTime? LastProgrammingTime { get; set; }
        /// <summary>Last time the device was seen.</summary>
        global::System.DateTime? LastSeen { get; set; }
        /// <summary>Last time the device was updated by the profiler.</summary>
        global::System.DateTime? LastUpdated { get; set; }
        /// <summary>List of merged devices data</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IMergedDevice[] MergedDevice { get; set; }
        /// <summary>The device Id that this device was merged into</summary>
        string MergedToDeviceId { get; set; }
        /// <summary>List of the device network interface cards.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.INic[] Nic { get; set; }
        /// <summary>Device onboarding status.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.OnboardingStatus? OnboardingStatus { get; set; }
        /// <summary>Device operating system data</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IOperatingSystem OperatingSystem { get; set; }
        /// <summary>OS architecture</summary>
        string OperatingSystemArchitecture { get; set; }
        /// <summary>OS build</summary>
        string OperatingSystemBuild { get; set; }
        /// <summary>OS distribution</summary>
        string OperatingSystemDistribution { get; set; }
        /// <summary>OS platform</summary>
        string OperatingSystemPlatform { get; set; }
        /// <summary>OS version</summary>
        string OperatingSystemVersion { get; set; }
        /// <summary>List of device packages</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IPackage[] Package { get; set; }
        /// <summary>For nested device, this is the parent device id.</summary>
        string ParentDeviceId { get; set; }
        /// <summary>
        /// For nested device, this is the rack number in the parent device that holds the nested device.
        /// </summary>
        int? ParentRackNumber { get; set; }
        /// <summary>
        /// For nested device, this is the slot number in the parent device that holds the nested device.
        /// </summary>
        int? ParentSlotNumber { get; set; }
        /// <summary>Confidence of the device profile</summary>
        int? ProfilingConfidence { get; set; }
        /// <summary>Indicates whether this device is programming</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.ProgrammingState? ProgrammingState { get; set; }
        /// <summary>Device properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IDeviceProperties Property { get; set; }
        /// <summary>Purdue level of the device.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.PurdueLevel? PurdueLevel { get; set; }
        /// <summary>risk score of the device.</summary>
        int? RiskScore { get; set; }
        /// <summary>Version of the device model schema</summary>
        string SchemaVersion { get; set; }
        /// <summary>Sensor that scanned this device.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISensor Sensor { get; set; }
        /// <summary>Sensor name.</summary>
        string SensorName { get; set; }
        /// <summary>Sensor site.</summary>
        string SensorSite { get; set; }
        /// <summary>Sensor type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.SensorType? SensorType { get; set; }
        /// <summary>Sensor zone.</summary>
        string SensorZone { get; set; }
        /// <summary>List of the device slot in the backplane</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISlot[] Slot { get; set; }
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20.ISystemData SystemData { get; set; }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        global::System.DateTime? SystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        string SystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.CreatedByType? SystemDataCreatedByType { get; set; }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        global::System.DateTime? SystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        string SystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.CreatedByType? SystemDataLastModifiedByType { get; set; }

    }
}