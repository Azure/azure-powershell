// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Extensions;

    /// <summary>Network interface card properties</summary>
    public partial class Nic :
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.INic,
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.INicInternal
    {

        /// <summary>Backing field for <see cref="Ipv4Address" /> property.</summary>
        private string _ipv4Address;

        /// <summary>Ipv4 address</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public string Ipv4Address { get => this._ipv4Address; }

        /// <summary>Backing field for <see cref="Ipv6Address" /> property.</summary>
        private string _ipv6Address;

        /// <summary>Ipv6 address</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public string Ipv6Address { get => this._ipv6Address; }

        /// <summary>Backing field for <see cref="LastSeen" /> property.</summary>
        private global::System.DateTime? _lastSeen;

        /// <summary>Last seen time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public global::System.DateTime? LastSeen { get => this._lastSeen; }

        /// <summary>Backing field for <see cref="MacAddress" /> property.</summary>
        private string _macAddress;

        /// <summary>Mac address</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public string MacAddress { get => this._macAddress; }

        /// <summary>Backing field for <see cref="MacCertainty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.MacCertainty? _macCertainty;

        /// <summary>
        /// Indicates whether the association of the mac to the ip address is certain or a guess.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.MacCertainty? MacCertainty { get => this._macCertainty; }

        /// <summary>Internal Acessors for Ipv4Address</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.INicInternal.Ipv4Address { get => this._ipv4Address; set { {_ipv4Address = value;} } }

        /// <summary>Internal Acessors for Ipv6Address</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.INicInternal.Ipv6Address { get => this._ipv6Address; set { {_ipv6Address = value;} } }

        /// <summary>Internal Acessors for LastSeen</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.INicInternal.LastSeen { get => this._lastSeen; set { {_lastSeen = value;} } }

        /// <summary>Internal Acessors for MacAddress</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.INicInternal.MacAddress { get => this._macAddress; set { {_macAddress = value;} } }

        /// <summary>Internal Acessors for MacCertainty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.MacCertainty? Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.INicInternal.MacCertainty { get => this._macCertainty; set { {_macCertainty = value;} } }

        /// <summary>Internal Acessors for NetworkAdapterVendor</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.INicInternal.NetworkAdapterVendor { get => this._networkAdapterVendor; set { {_networkAdapterVendor = value;} } }

        /// <summary>Internal Acessors for Vlan</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.INicInternal.Vlan { get => this._vlan; set { {_vlan = value;} } }

        /// <summary>Backing field for <see cref="NetworkAdapterVendor" /> property.</summary>
        private string _networkAdapterVendor;

        /// <summary>Network adapter vendor.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public string NetworkAdapterVendor { get => this._networkAdapterVendor; }

        /// <summary>Backing field for <see cref="Vlan" /> property.</summary>
        private string[] _vlan;

        /// <summary>List of virtual LAN (vlan)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public string[] Vlan { get => this._vlan; }

        /// <summary>Creates an new <see cref="Nic" /> instance.</summary>
        public Nic()
        {

        }
    }
    /// Network interface card properties
    public partial interface INic :
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.IJsonSerializable
    {
        /// <summary>Ipv4 address</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Ipv4 address",
        SerializedName = @"ipv4Address",
        PossibleTypes = new [] { typeof(string) })]
        string Ipv4Address { get;  }
        /// <summary>Ipv6 address</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Ipv6 address",
        SerializedName = @"ipv6Address",
        PossibleTypes = new [] { typeof(string) })]
        string Ipv6Address { get;  }
        /// <summary>Last seen time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Last seen time",
        SerializedName = @"lastSeen",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastSeen { get;  }
        /// <summary>Mac address</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Mac address",
        SerializedName = @"macAddress",
        PossibleTypes = new [] { typeof(string) })]
        string MacAddress { get;  }
        /// <summary>
        /// Indicates whether the association of the mac to the ip address is certain or a guess.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Indicates whether the association of the mac to the ip address is certain or a guess.",
        SerializedName = @"macCertainty",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.MacCertainty) })]
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.MacCertainty? MacCertainty { get;  }
        /// <summary>Network adapter vendor.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Network adapter vendor.",
        SerializedName = @"networkAdapterVendor",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkAdapterVendor { get;  }
        /// <summary>List of virtual LAN (vlan)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of virtual LAN (vlan)",
        SerializedName = @"vlans",
        PossibleTypes = new [] { typeof(string) })]
        string[] Vlan { get;  }

    }
    /// Network interface card properties
    internal partial interface INicInternal

    {
        /// <summary>Ipv4 address</summary>
        string Ipv4Address { get; set; }
        /// <summary>Ipv6 address</summary>
        string Ipv6Address { get; set; }
        /// <summary>Last seen time</summary>
        global::System.DateTime? LastSeen { get; set; }
        /// <summary>Mac address</summary>
        string MacAddress { get; set; }
        /// <summary>
        /// Indicates whether the association of the mac to the ip address is certain or a guess.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.MacCertainty? MacCertainty { get; set; }
        /// <summary>Network adapter vendor.</summary>
        string NetworkAdapterVendor { get; set; }
        /// <summary>List of virtual LAN (vlan)</summary>
        string[] Vlan { get; set; }

    }
}