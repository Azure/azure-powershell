// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Extensions;

    /// <summary>Device firmware data</summary>
    public partial class Firmware :
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IFirmware,
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IFirmwareInternal
    {

        /// <summary>Backing field for <see cref="AdditionalField" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.IAny _additionalField;

        /// <summary>A bag of fields which extends the firmware information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.IAny AdditionalField { get => (this._additionalField = this._additionalField ?? new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Any()); set => this._additionalField = value; }

        /// <summary>Backing field for <see cref="ModuleAddress" /> property.</summary>
        private string _moduleAddress;

        /// <summary>Firmware module address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public string ModuleAddress { get => this._moduleAddress; set => this._moduleAddress = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Firmware name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="Serial" /> property.</summary>
        private string _serial;

        /// <summary>Firmware serial.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public string Serial { get => this._serial; set => this._serial = value; }

        /// <summary>Backing field for <see cref="Vendor" /> property.</summary>
        private string _vendor;

        /// <summary>Firmware vendor.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public string Vendor { get => this._vendor; set => this._vendor = value; }

        /// <summary>Backing field for <see cref="Version" /> property.</summary>
        private string _version;

        /// <summary>Firmware version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public string Version { get => this._version; set => this._version = value; }

        /// <summary>Creates an new <see cref="Firmware" /> instance.</summary>
        public Firmware()
        {

        }
    }
    /// Device firmware data
    public partial interface IFirmware :
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.IJsonSerializable
    {
        /// <summary>A bag of fields which extends the firmware information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @" A bag of fields which extends the firmware information.",
        SerializedName = @"additionalFields",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.IAny AdditionalField { get; set; }
        /// <summary>Firmware module address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Firmware module address.",
        SerializedName = @"moduleAddress",
        PossibleTypes = new [] { typeof(string) })]
        string ModuleAddress { get; set; }
        /// <summary>Firmware name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Firmware name.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>Firmware serial.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Firmware serial.",
        SerializedName = @"serial",
        PossibleTypes = new [] { typeof(string) })]
        string Serial { get; set; }
        /// <summary>Firmware vendor.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Firmware vendor.",
        SerializedName = @"vendor",
        PossibleTypes = new [] { typeof(string) })]
        string Vendor { get; set; }
        /// <summary>Firmware version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Firmware version.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string Version { get; set; }

    }
    /// Device firmware data
    internal partial interface IFirmwareInternal

    {
        /// <summary>A bag of fields which extends the firmware information.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.IAny AdditionalField { get; set; }
        /// <summary>Firmware module address.</summary>
        string ModuleAddress { get; set; }
        /// <summary>Firmware name.</summary>
        string Name { get; set; }
        /// <summary>Firmware serial.</summary>
        string Serial { get; set; }
        /// <summary>Firmware vendor.</summary>
        string Vendor { get; set; }
        /// <summary>Firmware version.</summary>
        string Version { get; set; }

    }
}