// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Extensions;

    /// <summary>Merged device data</summary>
    public partial class MergedDevice :
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IMergedDevice,
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IMergedDeviceInternal
    {

        /// <summary>Backing field for <see cref="DeviceDataSource" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.DeviceDataSource? _deviceDataSource;

        /// <summary>Device data source</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.DeviceDataSource? DeviceDataSource { get => this._deviceDataSource; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>device id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        public string Id { get => this._id; }

        /// <summary>Internal Acessors for DeviceDataSource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.DeviceDataSource? Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IMergedDeviceInternal.DeviceDataSource { get => this._deviceDataSource; set { {_deviceDataSource = value;} } }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IMergedDeviceInternal.Id { get => this._id; set { {_id = value;} } }

        /// <summary>Internal Acessors for Sensor</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISensor Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IMergedDeviceInternal.Sensor { get => (this._sensor = this._sensor ?? new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.Sensor()); set { {_sensor = value;} } }

        /// <summary>Internal Acessors for SensorName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IMergedDeviceInternal.SensorName { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISensorInternal)Sensor).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISensorInternal)Sensor).Name = value; }

        /// <summary>Internal Acessors for SensorSite</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IMergedDeviceInternal.SensorSite { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISensorInternal)Sensor).Site; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISensorInternal)Sensor).Site = value; }

        /// <summary>Internal Acessors for SensorType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.SensorType? Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IMergedDeviceInternal.SensorType { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISensorInternal)Sensor).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISensorInternal)Sensor).Type = value; }

        /// <summary>Internal Acessors for SensorZone</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.IMergedDeviceInternal.SensorZone { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISensorInternal)Sensor).Zone; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISensorInternal)Sensor).Zone = value; }

        /// <summary>Backing field for <see cref="Sensor" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISensor _sensor;

        /// <summary>Device sensor data</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISensor Sensor { get => (this._sensor = this._sensor ?? new Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.Sensor()); }

        /// <summary>Sensor name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public string SensorName { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISensorInternal)Sensor).Name; }

        /// <summary>Sensor site.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public string SensorSite { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISensorInternal)Sensor).Site; }

        /// <summary>Sensor type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.SensorType? SensorType { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISensorInternal)Sensor).Type; }

        /// <summary>Sensor zone.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.PropertyOrigin.Inlined)]
        public string SensorZone { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISensorInternal)Sensor).Zone; }

        /// <summary>Creates an new <see cref="MergedDevice" /> instance.</summary>
        public MergedDevice()
        {

        }
    }
    /// Merged device data
    public partial interface IMergedDevice :
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.IJsonSerializable
    {
        /// <summary>Device data source</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Device data source",
        SerializedName = @"deviceDataSource",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.DeviceDataSource) })]
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.DeviceDataSource? DeviceDataSource { get;  }
        /// <summary>device id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"device id",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get;  }
        /// <summary>Sensor name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Sensor name.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string SensorName { get;  }
        /// <summary>Sensor site.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Sensor site.",
        SerializedName = @"site",
        PossibleTypes = new [] { typeof(string) })]
        string SensorSite { get;  }
        /// <summary>Sensor type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Sensor type.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.SensorType) })]
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.SensorType? SensorType { get;  }
        /// <summary>Sensor zone.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Sensor zone.",
        SerializedName = @"zone",
        PossibleTypes = new [] { typeof(string) })]
        string SensorZone { get;  }

    }
    /// Merged device data
    internal partial interface IMergedDeviceInternal

    {
        /// <summary>Device data source</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.DeviceDataSource? DeviceDataSource { get; set; }
        /// <summary>device id</summary>
        string Id { get; set; }
        /// <summary>Device sensor data</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Models.Api20210201Preview.ISensor Sensor { get; set; }
        /// <summary>Sensor name.</summary>
        string SensorName { get; set; }
        /// <summary>Sensor site.</summary>
        string SensorSite { get; set; }
        /// <summary>Sensor type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTSecurity.Support.SensorType? SensorType { get; set; }
        /// <summary>Sensor zone.</summary>
        string SensorZone { get; set; }

    }
}