// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001
{
    using Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.PowerShell;

    /// <summary>An assessment created for a group in the Migration project.</summary>
    [System.ComponentModel.TypeConverter(typeof(AssessmentTypeConverter))]
    public partial class Assessment
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.Assessment"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal Assessment(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.AssessmentPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("ETag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).ETag = (string) content.GetValueForProperty("ETag",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).ETag, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("XmsRequestId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).XmsRequestId = (string) content.GetValueForProperty("XmsRequestId",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).XmsRequestId, global::System.Convert.ToString);
            }
            if (content.Contains("VMUptime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).VMUptime = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IVMUptime) content.GetValueForProperty("VMUptime",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).VMUptime, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.VMUptimeTypeConverter.ConvertFrom);
            }
            if (content.Contains("AzureLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).AzureLocation = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureLocation) content.GetValueForProperty("AzureLocation",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).AzureLocation, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureLocation.CreateFrom);
            }
            if (content.Contains("Percentile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).Percentile = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Percentile) content.GetValueForProperty("Percentile",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).Percentile, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Percentile.CreateFrom);
            }
            if (content.Contains("TimeRange"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).TimeRange = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.TimeRange) content.GetValueForProperty("TimeRange",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).TimeRange, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.TimeRange.CreateFrom);
            }
            if (content.Contains("Currency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).Currency = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Currency) content.GetValueForProperty("Currency",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).Currency, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Currency.CreateFrom);
            }
            if (content.Contains("ReservedInstance"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).ReservedInstance = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.ReservedInstance) content.GetValueForProperty("ReservedInstance",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).ReservedInstance, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.ReservedInstance.CreateFrom);
            }
            if (content.Contains("AzureOfferCode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).AzureOfferCode = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureOfferCode) content.GetValueForProperty("AzureOfferCode",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).AzureOfferCode, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureOfferCode.CreateFrom);
            }
            if (content.Contains("EaSubscriptionId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).EaSubscriptionId = (string) content.GetValueForProperty("EaSubscriptionId",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).EaSubscriptionId, global::System.Convert.ToString);
            }
            if (content.Contains("AzurePricingTier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).AzurePricingTier = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzurePricingTier) content.GetValueForProperty("AzurePricingTier",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).AzurePricingTier, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzurePricingTier.CreateFrom);
            }
            if (content.Contains("AzureStorageRedundancy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).AzureStorageRedundancy = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureStorageRedundancy) content.GetValueForProperty("AzureStorageRedundancy",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).AzureStorageRedundancy, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureStorageRedundancy.CreateFrom);
            }
            if (content.Contains("ScalingFactor"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).ScalingFactor = (double) content.GetValueForProperty("ScalingFactor",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).ScalingFactor, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("PerfDataStartTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).PerfDataStartTime = (global::System.DateTime?) content.GetValueForProperty("PerfDataStartTime",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).PerfDataStartTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("PerfDataEndTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).PerfDataEndTime = (global::System.DateTime?) content.GetValueForProperty("PerfDataEndTime",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).PerfDataEndTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("Stage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).Stage = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AssessmentStage) content.GetValueForProperty("Stage",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).Stage, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AssessmentStage.CreateFrom);
            }
            if (content.Contains("AzureHybridUseBenefit"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).AzureHybridUseBenefit = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureHybridUseBenefit) content.GetValueForProperty("AzureHybridUseBenefit",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).AzureHybridUseBenefit, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureHybridUseBenefit.CreateFrom);
            }
            if (content.Contains("DiscountPercentage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).DiscountPercentage = (double) content.GetValueForProperty("DiscountPercentage",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).DiscountPercentage, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("ConfidenceRatingInPercentage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).ConfidenceRatingInPercentage = (double?) content.GetValueForProperty("ConfidenceRatingInPercentage",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).ConfidenceRatingInPercentage, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("SizingCriterion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).SizingCriterion = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AssessmentSizingCriterion) content.GetValueForProperty("SizingCriterion",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).SizingCriterion, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AssessmentSizingCriterion.CreateFrom);
            }
            if (content.Contains("AzureVMFamily"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).AzureVMFamily = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureVMFamily[]) content.GetValueForProperty("AzureVMFamily",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).AzureVMFamily, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureVMFamily>(__y, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureVMFamily.CreateFrom));
            }
            if (content.Contains("AzureDiskType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).AzureDiskType = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureDiskType) content.GetValueForProperty("AzureDiskType",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).AzureDiskType, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureDiskType.CreateFrom);
            }
            if (content.Contains("PricesTimestamp"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).PricesTimestamp = (global::System.DateTime?) content.GetValueForProperty("PricesTimestamp",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).PricesTimestamp, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("CreatedTimestamp"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).CreatedTimestamp = (global::System.DateTime?) content.GetValueForProperty("CreatedTimestamp",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).CreatedTimestamp, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("UpdatedTimestamp"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).UpdatedTimestamp = (global::System.DateTime?) content.GetValueForProperty("UpdatedTimestamp",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).UpdatedTimestamp, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("MonthlyComputeCost"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).MonthlyComputeCost = (double?) content.GetValueForProperty("MonthlyComputeCost",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).MonthlyComputeCost, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("MonthlyBandwidthCost"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).MonthlyBandwidthCost = (double?) content.GetValueForProperty("MonthlyBandwidthCost",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).MonthlyBandwidthCost, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("MonthlyStorageCost"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).MonthlyStorageCost = (double?) content.GetValueForProperty("MonthlyStorageCost",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).MonthlyStorageCost, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("MonthlyPremiumStorageCost"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).MonthlyPremiumStorageCost = (double?) content.GetValueForProperty("MonthlyPremiumStorageCost",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).MonthlyPremiumStorageCost, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("MonthlyStandardSsdStorageCost"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).MonthlyStandardSsdStorageCost = (double?) content.GetValueForProperty("MonthlyStandardSsdStorageCost",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).MonthlyStandardSsdStorageCost, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("Status"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).Status = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AssessmentStatus?) content.GetValueForProperty("Status",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).Status, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AssessmentStatus.CreateFrom);
            }
            if (content.Contains("NumberOfMachine"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).NumberOfMachine = (int?) content.GetValueForProperty("NumberOfMachine",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).NumberOfMachine, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("VMUptimeDaysPerMonth"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).VMUptimeDaysPerMonth = (int?) content.GetValueForProperty("VMUptimeDaysPerMonth",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).VMUptimeDaysPerMonth, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("VMUptimeHoursPerDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).VMUptimeHoursPerDay = (int?) content.GetValueForProperty("VMUptimeHoursPerDay",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).VMUptimeHoursPerDay, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.Assessment"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal Assessment(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.AssessmentPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("ETag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).ETag = (string) content.GetValueForProperty("ETag",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).ETag, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("XmsRequestId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).XmsRequestId = (string) content.GetValueForProperty("XmsRequestId",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).XmsRequestId, global::System.Convert.ToString);
            }
            if (content.Contains("VMUptime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).VMUptime = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IVMUptime) content.GetValueForProperty("VMUptime",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).VMUptime, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.VMUptimeTypeConverter.ConvertFrom);
            }
            if (content.Contains("AzureLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).AzureLocation = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureLocation) content.GetValueForProperty("AzureLocation",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).AzureLocation, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureLocation.CreateFrom);
            }
            if (content.Contains("Percentile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).Percentile = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Percentile) content.GetValueForProperty("Percentile",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).Percentile, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Percentile.CreateFrom);
            }
            if (content.Contains("TimeRange"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).TimeRange = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.TimeRange) content.GetValueForProperty("TimeRange",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).TimeRange, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.TimeRange.CreateFrom);
            }
            if (content.Contains("Currency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).Currency = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Currency) content.GetValueForProperty("Currency",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).Currency, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Currency.CreateFrom);
            }
            if (content.Contains("ReservedInstance"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).ReservedInstance = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.ReservedInstance) content.GetValueForProperty("ReservedInstance",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).ReservedInstance, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.ReservedInstance.CreateFrom);
            }
            if (content.Contains("AzureOfferCode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).AzureOfferCode = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureOfferCode) content.GetValueForProperty("AzureOfferCode",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).AzureOfferCode, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureOfferCode.CreateFrom);
            }
            if (content.Contains("EaSubscriptionId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).EaSubscriptionId = (string) content.GetValueForProperty("EaSubscriptionId",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).EaSubscriptionId, global::System.Convert.ToString);
            }
            if (content.Contains("AzurePricingTier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).AzurePricingTier = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzurePricingTier) content.GetValueForProperty("AzurePricingTier",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).AzurePricingTier, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzurePricingTier.CreateFrom);
            }
            if (content.Contains("AzureStorageRedundancy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).AzureStorageRedundancy = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureStorageRedundancy) content.GetValueForProperty("AzureStorageRedundancy",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).AzureStorageRedundancy, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureStorageRedundancy.CreateFrom);
            }
            if (content.Contains("ScalingFactor"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).ScalingFactor = (double) content.GetValueForProperty("ScalingFactor",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).ScalingFactor, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("PerfDataStartTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).PerfDataStartTime = (global::System.DateTime?) content.GetValueForProperty("PerfDataStartTime",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).PerfDataStartTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("PerfDataEndTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).PerfDataEndTime = (global::System.DateTime?) content.GetValueForProperty("PerfDataEndTime",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).PerfDataEndTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("Stage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).Stage = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AssessmentStage) content.GetValueForProperty("Stage",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).Stage, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AssessmentStage.CreateFrom);
            }
            if (content.Contains("AzureHybridUseBenefit"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).AzureHybridUseBenefit = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureHybridUseBenefit) content.GetValueForProperty("AzureHybridUseBenefit",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).AzureHybridUseBenefit, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureHybridUseBenefit.CreateFrom);
            }
            if (content.Contains("DiscountPercentage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).DiscountPercentage = (double) content.GetValueForProperty("DiscountPercentage",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).DiscountPercentage, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("ConfidenceRatingInPercentage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).ConfidenceRatingInPercentage = (double?) content.GetValueForProperty("ConfidenceRatingInPercentage",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).ConfidenceRatingInPercentage, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("SizingCriterion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).SizingCriterion = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AssessmentSizingCriterion) content.GetValueForProperty("SizingCriterion",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).SizingCriterion, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AssessmentSizingCriterion.CreateFrom);
            }
            if (content.Contains("AzureVMFamily"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).AzureVMFamily = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureVMFamily[]) content.GetValueForProperty("AzureVMFamily",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).AzureVMFamily, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureVMFamily>(__y, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureVMFamily.CreateFrom));
            }
            if (content.Contains("AzureDiskType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).AzureDiskType = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureDiskType) content.GetValueForProperty("AzureDiskType",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).AzureDiskType, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureDiskType.CreateFrom);
            }
            if (content.Contains("PricesTimestamp"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).PricesTimestamp = (global::System.DateTime?) content.GetValueForProperty("PricesTimestamp",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).PricesTimestamp, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("CreatedTimestamp"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).CreatedTimestamp = (global::System.DateTime?) content.GetValueForProperty("CreatedTimestamp",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).CreatedTimestamp, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("UpdatedTimestamp"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).UpdatedTimestamp = (global::System.DateTime?) content.GetValueForProperty("UpdatedTimestamp",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).UpdatedTimestamp, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("MonthlyComputeCost"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).MonthlyComputeCost = (double?) content.GetValueForProperty("MonthlyComputeCost",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).MonthlyComputeCost, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("MonthlyBandwidthCost"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).MonthlyBandwidthCost = (double?) content.GetValueForProperty("MonthlyBandwidthCost",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).MonthlyBandwidthCost, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("MonthlyStorageCost"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).MonthlyStorageCost = (double?) content.GetValueForProperty("MonthlyStorageCost",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).MonthlyStorageCost, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("MonthlyPremiumStorageCost"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).MonthlyPremiumStorageCost = (double?) content.GetValueForProperty("MonthlyPremiumStorageCost",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).MonthlyPremiumStorageCost, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("MonthlyStandardSsdStorageCost"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).MonthlyStandardSsdStorageCost = (double?) content.GetValueForProperty("MonthlyStandardSsdStorageCost",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).MonthlyStandardSsdStorageCost, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("Status"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).Status = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AssessmentStatus?) content.GetValueForProperty("Status",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).Status, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AssessmentStatus.CreateFrom);
            }
            if (content.Contains("NumberOfMachine"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).NumberOfMachine = (int?) content.GetValueForProperty("NumberOfMachine",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).NumberOfMachine, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("VMUptimeDaysPerMonth"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).VMUptimeDaysPerMonth = (int?) content.GetValueForProperty("VMUptimeDaysPerMonth",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).VMUptimeDaysPerMonth, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("VMUptimeHoursPerDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).VMUptimeHoursPerDay = (int?) content.GetValueForProperty("VMUptimeHoursPerDay",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).VMUptimeHoursPerDay, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.Assessment"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessment" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessment DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new Assessment(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.Assessment"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessment" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessment DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new Assessment(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="Assessment" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="Assessment" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessment FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// An assessment created for a group in the Migration project.
    [System.ComponentModel.TypeConverter(typeof(AssessmentTypeConverter))]
    public partial interface IAssessment

    {

    }
}