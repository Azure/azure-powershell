// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Extensions;

    /// <summary>Properties of a machine.</summary>
    public partial class MachineProperties :
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachineProperties,
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal
    {

        /// <summary>Backing field for <see cref="BootType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.MachineBootType? _bootType;

        /// <summary>Boot type of the machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.MachineBootType? BootType { get => this._bootType; }

        /// <summary>Backing field for <see cref="CreatedTimestamp" /> property.</summary>
        private global::System.DateTime? _createdTimestamp;

        /// <summary>Time when this machine was created. Date-Time represented in ISO-8601 format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Owned)]
        public global::System.DateTime? CreatedTimestamp { get => this._createdTimestamp; }

        /// <summary>Backing field for <see cref="DatacenterManagementServerArmId" /> property.</summary>
        private string _datacenterManagementServerArmId;

        /// <summary>ARM ID of the data center as tracked by the Microsoft.OffAzure.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Owned)]
        public string DatacenterManagementServerArmId { get => this._datacenterManagementServerArmId; }

        /// <summary>Backing field for <see cref="DatacenterManagementServerName" /> property.</summary>
        private string _datacenterManagementServerName;

        /// <summary>Name of the server hosting the datacenter management solution.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Owned)]
        public string DatacenterManagementServerName { get => this._datacenterManagementServerName; }

        /// <summary>Backing field for <see cref="Description" /> property.</summary>
        private string _description;

        /// <summary>Description of the machine</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Owned)]
        public string Description { get => this._description; }

        /// <summary>Backing field for <see cref="DiscoveryMachineArmId" /> property.</summary>
        private string _discoveryMachineArmId;

        /// <summary>ARM ID of the machine as tracked by the Microsoft.OffAzure.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Owned)]
        public string DiscoveryMachineArmId { get => this._discoveryMachineArmId; }

        /// <summary>Backing field for <see cref="Disk" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesDisks _disk;

        /// <summary>
        /// Dictionary of disks attached to the machine. Key is ID of disk. Value is a disk object
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesDisks Disk { get => (this._disk = this._disk ?? new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.MachinePropertiesDisks()); }

        /// <summary>Backing field for <see cref="DisplayName" /> property.</summary>
        private string _displayName;

        /// <summary>
        /// User readable name of the machine as defined by the user in their private datacenter.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Owned)]
        public string DisplayName { get => this._displayName; }

        /// <summary>Backing field for <see cref="Group" /> property.</summary>
        private string[] _group;

        /// <summary>List of references to the groups that the machine is member of.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Owned)]
        public string[] Group { get => this._group; }

        /// <summary>Backing field for <see cref="MegabytesOfMemory" /> property.</summary>
        private float? _megabytesOfMemory;

        /// <summary>Memory in Megabytes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Owned)]
        public float? MegabytesOfMemory { get => this._megabytesOfMemory; }

        /// <summary>Internal Acessors for BootType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.MachineBootType? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal.BootType { get => this._bootType; set { {_bootType = value;} } }

        /// <summary>Internal Acessors for CreatedTimestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal.CreatedTimestamp { get => this._createdTimestamp; set { {_createdTimestamp = value;} } }

        /// <summary>Internal Acessors for DatacenterManagementServerArmId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal.DatacenterManagementServerArmId { get => this._datacenterManagementServerArmId; set { {_datacenterManagementServerArmId = value;} } }

        /// <summary>Internal Acessors for DatacenterManagementServerName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal.DatacenterManagementServerName { get => this._datacenterManagementServerName; set { {_datacenterManagementServerName = value;} } }

        /// <summary>Internal Acessors for Description</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal.Description { get => this._description; set { {_description = value;} } }

        /// <summary>Internal Acessors for DiscoveryMachineArmId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal.DiscoveryMachineArmId { get => this._discoveryMachineArmId; set { {_discoveryMachineArmId = value;} } }

        /// <summary>Internal Acessors for Disk</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesDisks Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal.Disk { get => (this._disk = this._disk ?? new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.MachinePropertiesDisks()); set { {_disk = value;} } }

        /// <summary>Internal Acessors for DisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal.DisplayName { get => this._displayName; set { {_displayName = value;} } }

        /// <summary>Internal Acessors for Group</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal.Group { get => this._group; set { {_group = value;} } }

        /// <summary>Internal Acessors for MegabytesOfMemory</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal.MegabytesOfMemory { get => this._megabytesOfMemory; set { {_megabytesOfMemory = value;} } }

        /// <summary>Internal Acessors for NetworkAdapter</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesNetworkAdapters Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal.NetworkAdapter { get => (this._networkAdapter = this._networkAdapter ?? new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.MachinePropertiesNetworkAdapters()); set { {_networkAdapter = value;} } }

        /// <summary>Internal Acessors for NumberOfCore</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal.NumberOfCore { get => this._numberOfCore; set { {_numberOfCore = value;} } }

        /// <summary>Internal Acessors for OperatingSystemName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal.OperatingSystemName { get => this._operatingSystemName; set { {_operatingSystemName = value;} } }

        /// <summary>Internal Acessors for OperatingSystemType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal.OperatingSystemType { get => this._operatingSystemType; set { {_operatingSystemType = value;} } }

        /// <summary>Internal Acessors for OperatingSystemVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal.OperatingSystemVersion { get => this._operatingSystemVersion; set { {_operatingSystemVersion = value;} } }

        /// <summary>Internal Acessors for UpdatedTimestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal.UpdatedTimestamp { get => this._updatedTimestamp; set { {_updatedTimestamp = value;} } }

        /// <summary>Backing field for <see cref="NetworkAdapter" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesNetworkAdapters _networkAdapter;

        /// <summary>
        /// Dictionary of network adapters attached to the machine. Key is ID of network adapter. Value is a network adapter object
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesNetworkAdapters NetworkAdapter { get => (this._networkAdapter = this._networkAdapter ?? new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.MachinePropertiesNetworkAdapters()); }

        /// <summary>Backing field for <see cref="NumberOfCore" /> property.</summary>
        private int? _numberOfCore;

        /// <summary>Processor count.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Owned)]
        public int? NumberOfCore { get => this._numberOfCore; }

        /// <summary>Backing field for <see cref="OperatingSystemName" /> property.</summary>
        private string _operatingSystemName;

        /// <summary>Operating System name of the machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Owned)]
        public string OperatingSystemName { get => this._operatingSystemName; }

        /// <summary>Backing field for <see cref="OperatingSystemType" /> property.</summary>
        private string _operatingSystemType;

        /// <summary>Operating System type of the machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Owned)]
        public string OperatingSystemType { get => this._operatingSystemType; }

        /// <summary>Backing field for <see cref="OperatingSystemVersion" /> property.</summary>
        private string _operatingSystemVersion;

        /// <summary>Operating System version of the machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Owned)]
        public string OperatingSystemVersion { get => this._operatingSystemVersion; }

        /// <summary>Backing field for <see cref="UpdatedTimestamp" /> property.</summary>
        private global::System.DateTime? _updatedTimestamp;

        /// <summary>
        /// Time when this machine was last updated. Date-Time represented in ISO-8601 format.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Owned)]
        public global::System.DateTime? UpdatedTimestamp { get => this._updatedTimestamp; }

        /// <summary>Creates an new <see cref="MachineProperties" /> instance.</summary>
        public MachineProperties()
        {

        }
    }
    /// Properties of a machine.
    public partial interface IMachineProperties :
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.IJsonSerializable
    {
        /// <summary>Boot type of the machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Boot type of the machine.",
        SerializedName = @"bootType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.MachineBootType) })]
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.MachineBootType? BootType { get;  }
        /// <summary>Time when this machine was created. Date-Time represented in ISO-8601 format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Time when this machine was created. Date-Time represented in ISO-8601 format.",
        SerializedName = @"createdTimestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CreatedTimestamp { get;  }
        /// <summary>ARM ID of the data center as tracked by the Microsoft.OffAzure.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"ARM ID of the data center as tracked by the Microsoft.OffAzure.",
        SerializedName = @"datacenterManagementServerArmId",
        PossibleTypes = new [] { typeof(string) })]
        string DatacenterManagementServerArmId { get;  }
        /// <summary>Name of the server hosting the datacenter management solution.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Name of the server hosting the datacenter management solution.",
        SerializedName = @"datacenterManagementServerName",
        PossibleTypes = new [] { typeof(string) })]
        string DatacenterManagementServerName { get;  }
        /// <summary>Description of the machine</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Description of the machine",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get;  }
        /// <summary>ARM ID of the machine as tracked by the Microsoft.OffAzure.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"ARM ID of the machine as tracked by the Microsoft.OffAzure.",
        SerializedName = @"discoveryMachineArmId",
        PossibleTypes = new [] { typeof(string) })]
        string DiscoveryMachineArmId { get;  }
        /// <summary>
        /// Dictionary of disks attached to the machine. Key is ID of disk. Value is a disk object
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Dictionary of disks attached to the machine. Key is ID of disk. Value is a disk object",
        SerializedName = @"disks",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesDisks) })]
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesDisks Disk { get;  }
        /// <summary>
        /// User readable name of the machine as defined by the user in their private datacenter.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"User readable name of the machine as defined by the user in their private datacenter.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get;  }
        /// <summary>List of references to the groups that the machine is member of.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of references to the groups that the machine is member of.",
        SerializedName = @"groups",
        PossibleTypes = new [] { typeof(string) })]
        string[] Group { get;  }
        /// <summary>Memory in Megabytes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Memory in Megabytes.",
        SerializedName = @"megabytesOfMemory",
        PossibleTypes = new [] { typeof(float) })]
        float? MegabytesOfMemory { get;  }
        /// <summary>
        /// Dictionary of network adapters attached to the machine. Key is ID of network adapter. Value is a network adapter object
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Dictionary of network adapters attached to the machine. Key is ID of network adapter. Value is a network adapter object",
        SerializedName = @"networkAdapters",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesNetworkAdapters) })]
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesNetworkAdapters NetworkAdapter { get;  }
        /// <summary>Processor count.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Processor count.",
        SerializedName = @"numberOfCores",
        PossibleTypes = new [] { typeof(int) })]
        int? NumberOfCore { get;  }
        /// <summary>Operating System name of the machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Operating System name of the machine.",
        SerializedName = @"operatingSystemName",
        PossibleTypes = new [] { typeof(string) })]
        string OperatingSystemName { get;  }
        /// <summary>Operating System type of the machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Operating System type of the machine.",
        SerializedName = @"operatingSystemType",
        PossibleTypes = new [] { typeof(string) })]
        string OperatingSystemType { get;  }
        /// <summary>Operating System version of the machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Operating System version of the machine.",
        SerializedName = @"operatingSystemVersion",
        PossibleTypes = new [] { typeof(string) })]
        string OperatingSystemVersion { get;  }
        /// <summary>
        /// Time when this machine was last updated. Date-Time represented in ISO-8601 format.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Time when this machine was last updated. Date-Time represented in ISO-8601 format.",
        SerializedName = @"updatedTimestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? UpdatedTimestamp { get;  }

    }
    /// Properties of a machine.
    internal partial interface IMachinePropertiesInternal

    {
        /// <summary>Boot type of the machine.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.MachineBootType? BootType { get; set; }
        /// <summary>Time when this machine was created. Date-Time represented in ISO-8601 format.</summary>
        global::System.DateTime? CreatedTimestamp { get; set; }
        /// <summary>ARM ID of the data center as tracked by the Microsoft.OffAzure.</summary>
        string DatacenterManagementServerArmId { get; set; }
        /// <summary>Name of the server hosting the datacenter management solution.</summary>
        string DatacenterManagementServerName { get; set; }
        /// <summary>Description of the machine</summary>
        string Description { get; set; }
        /// <summary>ARM ID of the machine as tracked by the Microsoft.OffAzure.</summary>
        string DiscoveryMachineArmId { get; set; }
        /// <summary>
        /// Dictionary of disks attached to the machine. Key is ID of disk. Value is a disk object
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesDisks Disk { get; set; }
        /// <summary>
        /// User readable name of the machine as defined by the user in their private datacenter.
        /// </summary>
        string DisplayName { get; set; }
        /// <summary>List of references to the groups that the machine is member of.</summary>
        string[] Group { get; set; }
        /// <summary>Memory in Megabytes.</summary>
        float? MegabytesOfMemory { get; set; }
        /// <summary>
        /// Dictionary of network adapters attached to the machine. Key is ID of network adapter. Value is a network adapter object
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesNetworkAdapters NetworkAdapter { get; set; }
        /// <summary>Processor count.</summary>
        int? NumberOfCore { get; set; }
        /// <summary>Operating System name of the machine.</summary>
        string OperatingSystemName { get; set; }
        /// <summary>Operating System type of the machine.</summary>
        string OperatingSystemType { get; set; }
        /// <summary>Operating System version of the machine.</summary>
        string OperatingSystemVersion { get; set; }
        /// <summary>
        /// Time when this machine was last updated. Date-Time represented in ISO-8601 format.
        /// </summary>
        global::System.DateTime? UpdatedTimestamp { get; set; }

    }
}