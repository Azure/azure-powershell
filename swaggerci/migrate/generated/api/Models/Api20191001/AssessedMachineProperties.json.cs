// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Extensions;

    /// <summary>Properties of an assessed machine.</summary>
    public partial class AssessedMachineProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject into a new instance of <see cref="AssessedMachineProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal AssessedMachineProperties(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_bootType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("bootType"), out var __jsonBootType) ? (string)__jsonBootType : (string)BootType;}
            {_datacenterMachineArmId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("datacenterMachineArmId"), out var __jsonDatacenterMachineArmId) ? (string)__jsonDatacenterMachineArmId : (string)DatacenterMachineArmId;}
            {_datacenterManagementServerArmId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("datacenterManagementServerArmId"), out var __jsonDatacenterManagementServerArmId) ? (string)__jsonDatacenterManagementServerArmId : (string)DatacenterManagementServerArmId;}
            {_datacenterManagementServerName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("datacenterManagementServerName"), out var __jsonDatacenterManagementServerName) ? (string)__jsonDatacenterManagementServerName : (string)DatacenterManagementServerName;}
            {_description = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("description"), out var __jsonDescription) ? (string)__jsonDescription : (string)Description;}
            {_displayName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("displayName"), out var __jsonDisplayName) ? (string)__jsonDisplayName : (string)DisplayName;}
            {_megabytesOfMemory = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber>("megabytesOfMemory"), out var __jsonMegabytesOfMemory) ? (double?)__jsonMegabytesOfMemory : MegabytesOfMemory;}
            {_numberOfCore = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber>("numberOfCores"), out var __jsonNumberOfCores) ? (int?)__jsonNumberOfCores : NumberOfCore;}
            {_operatingSystemType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("operatingSystemType"), out var __jsonOperatingSystemType) ? (string)__jsonOperatingSystemType : (string)OperatingSystemType;}
            {_operatingSystemName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("operatingSystemName"), out var __jsonOperatingSystemName) ? (string)__jsonOperatingSystemName : (string)OperatingSystemName;}
            {_operatingSystemVersion = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("operatingSystemVersion"), out var __jsonOperatingSystemVersion) ? (string)__jsonOperatingSystemVersion : (string)OperatingSystemVersion;}
            {_monthlyBandwidthCost = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber>("monthlyBandwidthCost"), out var __jsonMonthlyBandwidthCost) ? (double?)__jsonMonthlyBandwidthCost : MonthlyBandwidthCost;}
            {_monthlyStorageCost = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber>("monthlyStorageCost"), out var __jsonMonthlyStorageCost) ? (double?)__jsonMonthlyStorageCost : MonthlyStorageCost;}
            {_monthlyPremiumStorageCost = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber>("monthlyPremiumStorageCost"), out var __jsonMonthlyPremiumStorageCost) ? (double?)__jsonMonthlyPremiumStorageCost : MonthlyPremiumStorageCost;}
            {_monthlyStandardSsdStorageCost = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber>("monthlyStandardSSDStorageCost"), out var __jsonMonthlyStandardSsdStorageCost) ? (double?)__jsonMonthlyStandardSsdStorageCost : MonthlyStandardSsdStorageCost;}
            {_confidenceRatingInPercentage = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber>("confidenceRatingInPercentage"), out var __jsonConfidenceRatingInPercentage) ? (double?)__jsonConfidenceRatingInPercentage : ConfidenceRatingInPercentage;}
            {_disk = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject>("disks"), out var __jsonDisks) ? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.AssessedMachinePropertiesDisks.FromJson(__jsonDisks) : Disk;}
            {_networkAdapter = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject>("networkAdapters"), out var __jsonNetworkAdapters) ? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.AssessedMachinePropertiesNetworkAdapters.FromJson(__jsonNetworkAdapters) : NetworkAdapter;}
            {_recommendedSize = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("recommendedSize"), out var __jsonRecommendedSize) ? (string)__jsonRecommendedSize : (string)RecommendedSize;}
            {_numberOfCoresForRecommendedSize = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber>("numberOfCoresForRecommendedSize"), out var __jsonNumberOfCoresForRecommendedSize) ? (int?)__jsonNumberOfCoresForRecommendedSize : NumberOfCoresForRecommendedSize;}
            {_megabytesOfMemoryForRecommendedSize = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber>("megabytesOfMemoryForRecommendedSize"), out var __jsonMegabytesOfMemoryForRecommendedSize) ? (double?)__jsonMegabytesOfMemoryForRecommendedSize : MegabytesOfMemoryForRecommendedSize;}
            {_monthlyComputeCostForRecommendedSize = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber>("monthlyComputeCostForRecommendedSize"), out var __jsonMonthlyComputeCostForRecommendedSize) ? (double?)__jsonMonthlyComputeCostForRecommendedSize : MonthlyComputeCostForRecommendedSize;}
            {_percentageCoresUtilization = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber>("percentageCoresUtilization"), out var __jsonPercentageCoresUtilization) ? (double?)__jsonPercentageCoresUtilization : PercentageCoresUtilization;}
            {_percentageMemoryUtilization = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber>("percentageMemoryUtilization"), out var __jsonPercentageMemoryUtilization) ? (double?)__jsonPercentageMemoryUtilization : PercentageMemoryUtilization;}
            {_suitability = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("suitability"), out var __jsonSuitability) ? (string)__jsonSuitability : (string)Suitability;}
            {_suitabilityExplanation = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("suitabilityExplanation"), out var __jsonSuitabilityExplanation) ? (string)__jsonSuitabilityExplanation : (string)SuitabilityExplanation;}
            {_suitabilityDetail = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("suitabilityDetail"), out var __jsonSuitabilityDetail) ? (string)__jsonSuitabilityDetail : (string)SuitabilityDetail;}
            {_createdTimestamp = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("createdTimestamp"), out var __jsonCreatedTimestamp) ? global::System.DateTime.TryParse((string)__jsonCreatedTimestamp, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonCreatedTimestampValue) ? __jsonCreatedTimestampValue : CreatedTimestamp : CreatedTimestamp;}
            {_updatedTimestamp = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("updatedTimestamp"), out var __jsonUpdatedTimestamp) ? global::System.DateTime.TryParse((string)__jsonUpdatedTimestamp, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonUpdatedTimestampValue) ? __jsonUpdatedTimestampValue : UpdatedTimestamp : UpdatedTimestamp;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject json ? new AssessedMachineProperties(json) : null;
        }

        /// <summary>
        /// Serializes this instance of <see cref="AssessedMachineProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="AssessedMachineProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._bootType)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._bootType.ToString()) : null, "bootType" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._datacenterMachineArmId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._datacenterMachineArmId.ToString()) : null, "datacenterMachineArmId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._datacenterManagementServerArmId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._datacenterManagementServerArmId.ToString()) : null, "datacenterManagementServerArmId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._datacenterManagementServerName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._datacenterManagementServerName.ToString()) : null, "datacenterManagementServerName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._description)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._description.ToString()) : null, "description" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._displayName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._displayName.ToString()) : null, "displayName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._megabytesOfMemory ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber((double)this._megabytesOfMemory) : null, "megabytesOfMemory" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._numberOfCore ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber((int)this._numberOfCore) : null, "numberOfCores" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._operatingSystemType)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._operatingSystemType.ToString()) : null, "operatingSystemType" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._operatingSystemName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._operatingSystemName.ToString()) : null, "operatingSystemName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._operatingSystemVersion)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._operatingSystemVersion.ToString()) : null, "operatingSystemVersion" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._monthlyBandwidthCost ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber((double)this._monthlyBandwidthCost) : null, "monthlyBandwidthCost" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._monthlyStorageCost ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber((double)this._monthlyStorageCost) : null, "monthlyStorageCost" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._monthlyPremiumStorageCost ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber((double)this._monthlyPremiumStorageCost) : null, "monthlyPremiumStorageCost" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._monthlyStandardSsdStorageCost ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber((double)this._monthlyStandardSsdStorageCost) : null, "monthlyStandardSSDStorageCost" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._confidenceRatingInPercentage ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber((double)this._confidenceRatingInPercentage) : null, "confidenceRatingInPercentage" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._disk ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) this._disk.ToJson(null,serializationMode) : null, "disks" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._networkAdapter ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) this._networkAdapter.ToJson(null,serializationMode) : null, "networkAdapters" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._recommendedSize)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._recommendedSize.ToString()) : null, "recommendedSize" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._numberOfCoresForRecommendedSize ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber((int)this._numberOfCoresForRecommendedSize) : null, "numberOfCoresForRecommendedSize" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._megabytesOfMemoryForRecommendedSize ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber((double)this._megabytesOfMemoryForRecommendedSize) : null, "megabytesOfMemoryForRecommendedSize" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._monthlyComputeCostForRecommendedSize ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber((double)this._monthlyComputeCostForRecommendedSize) : null, "monthlyComputeCostForRecommendedSize" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._percentageCoresUtilization ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber((double)this._percentageCoresUtilization) : null, "percentageCoresUtilization" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._percentageMemoryUtilization ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber((double)this._percentageMemoryUtilization) : null, "percentageMemoryUtilization" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._suitability)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._suitability.ToString()) : null, "suitability" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._suitabilityExplanation)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._suitabilityExplanation.ToString()) : null, "suitabilityExplanation" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._suitabilityDetail)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._suitabilityDetail.ToString()) : null, "suitabilityDetail" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._createdTimestamp ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._createdTimestamp?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "createdTimestamp" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._updatedTimestamp ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._updatedTimestamp?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "updatedTimestamp" ,container.Add );
            }
            AfterToJson(ref container);
            return container;
        }
    }
}