// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Extensions;

    /// <summary>A machine evaluated as part of an assessment.</summary>
    public partial class AssessedMachine :
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachine,
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal,
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.IHeaderSerializable
    {

        /// <summary>Boot type of the machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.MachineBootType? BootType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).BootType; }

        /// <summary>Confidence rating of assessed machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public double? ConfidenceRatingInPercentage { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).ConfidenceRatingInPercentage; }

        /// <summary>Time when this machine was created. Date-Time represented in ISO-8601 format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public global::System.DateTime? CreatedTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).CreatedTimestamp; }

        /// <summary>ARM ID of the discovered machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public string DatacenterMachineArmId { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).DatacenterMachineArmId; }

        /// <summary>ARM ID of the discovered datacenter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public string DatacenterManagementServerArmId { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).DatacenterManagementServerArmId; }

        /// <summary>Name of the server hosting the datacenter management solution.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public string DatacenterManagementServerName { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).DatacenterManagementServerName; }

        /// <summary>Description of the machine</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public string Description { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).Description; }

        /// <summary>
        /// Dictionary of disks attached to the machine. Key is ID of disk. Value is a disk object.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesDisks Disk { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).Disk; }

        /// <summary>
        /// User readable name of the machine as defined by the user in their private datacenter.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public string DisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).DisplayName; }

        /// <summary>Backing field for <see cref="ETag" /> property.</summary>
        private string _eTag;

        /// <summary>For optimistic concurrency control.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Owned)]
        public string ETag { get => this._eTag; set => this._eTag = value; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>
        /// Path reference to this assessed machine. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/groups/{groupName}/assessments/{assessmentName}/assessedMachines/{assessedMachineName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Owned)]
        public string Id { get => this._id; }

        /// <summary>Memory in Megabytes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public double? MegabytesOfMemory { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).MegabytesOfMemory; }

        /// <summary>Megabytes of memory in the Recommended Azure VM Size.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public double? MegabytesOfMemoryForRecommendedSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).MegabytesOfMemoryForRecommendedSize; }

        /// <summary>Internal Acessors for BootType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.MachineBootType? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal.BootType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).BootType; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).BootType = value; }

        /// <summary>Internal Acessors for ConfidenceRatingInPercentage</summary>
        double? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal.ConfidenceRatingInPercentage { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).ConfidenceRatingInPercentage; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).ConfidenceRatingInPercentage = value; }

        /// <summary>Internal Acessors for CreatedTimestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal.CreatedTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).CreatedTimestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).CreatedTimestamp = value; }

        /// <summary>Internal Acessors for DatacenterMachineArmId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal.DatacenterMachineArmId { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).DatacenterMachineArmId; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).DatacenterMachineArmId = value; }

        /// <summary>Internal Acessors for DatacenterManagementServerArmId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal.DatacenterManagementServerArmId { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).DatacenterManagementServerArmId; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).DatacenterManagementServerArmId = value; }

        /// <summary>Internal Acessors for DatacenterManagementServerName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal.DatacenterManagementServerName { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).DatacenterManagementServerName; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).DatacenterManagementServerName = value; }

        /// <summary>Internal Acessors for Description</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal.Description { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).Description = value; }

        /// <summary>Internal Acessors for Disk</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesDisks Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal.Disk { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).Disk; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).Disk = value; }

        /// <summary>Internal Acessors for DisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal.DisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).DisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).DisplayName = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal.Id { get => this._id; set { {_id = value;} } }

        /// <summary>Internal Acessors for MegabytesOfMemory</summary>
        double? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal.MegabytesOfMemory { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).MegabytesOfMemory; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).MegabytesOfMemory = value; }

        /// <summary>Internal Acessors for MegabytesOfMemoryForRecommendedSize</summary>
        double? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal.MegabytesOfMemoryForRecommendedSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).MegabytesOfMemoryForRecommendedSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).MegabytesOfMemoryForRecommendedSize = value; }

        /// <summary>Internal Acessors for MonthlyBandwidthCost</summary>
        double? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal.MonthlyBandwidthCost { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).MonthlyBandwidthCost; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).MonthlyBandwidthCost = value; }

        /// <summary>Internal Acessors for MonthlyComputeCostForRecommendedSize</summary>
        double? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal.MonthlyComputeCostForRecommendedSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).MonthlyComputeCostForRecommendedSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).MonthlyComputeCostForRecommendedSize = value; }

        /// <summary>Internal Acessors for MonthlyPremiumStorageCost</summary>
        double? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal.MonthlyPremiumStorageCost { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).MonthlyPremiumStorageCost; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).MonthlyPremiumStorageCost = value; }

        /// <summary>Internal Acessors for MonthlyStandardSsdStorageCost</summary>
        double? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal.MonthlyStandardSsdStorageCost { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).MonthlyStandardSsdStorageCost; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).MonthlyStandardSsdStorageCost = value; }

        /// <summary>Internal Acessors for MonthlyStorageCost</summary>
        double? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal.MonthlyStorageCost { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).MonthlyStorageCost; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).MonthlyStorageCost = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal.Name { get => this._name; set { {_name = value;} } }

        /// <summary>Internal Acessors for NetworkAdapter</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesNetworkAdapters Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal.NetworkAdapter { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).NetworkAdapter; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).NetworkAdapter = value; }

        /// <summary>Internal Acessors for NumberOfCore</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal.NumberOfCore { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).NumberOfCore; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).NumberOfCore = value; }

        /// <summary>Internal Acessors for NumberOfCoresForRecommendedSize</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal.NumberOfCoresForRecommendedSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).NumberOfCoresForRecommendedSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).NumberOfCoresForRecommendedSize = value; }

        /// <summary>Internal Acessors for OperatingSystemName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal.OperatingSystemName { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).OperatingSystemName; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).OperatingSystemName = value; }

        /// <summary>Internal Acessors for OperatingSystemType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal.OperatingSystemType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).OperatingSystemType; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).OperatingSystemType = value; }

        /// <summary>Internal Acessors for OperatingSystemVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal.OperatingSystemVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).OperatingSystemVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).OperatingSystemVersion = value; }

        /// <summary>Internal Acessors for PercentageCoresUtilization</summary>
        double? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal.PercentageCoresUtilization { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).PercentageCoresUtilization; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).PercentageCoresUtilization = value; }

        /// <summary>Internal Acessors for PercentageMemoryUtilization</summary>
        double? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal.PercentageMemoryUtilization { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).PercentageMemoryUtilization; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).PercentageMemoryUtilization = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineProperties Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.AssessedMachineProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for RecommendedSize</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureVMSize? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal.RecommendedSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).RecommendedSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).RecommendedSize = value; }

        /// <summary>Internal Acessors for Suitability</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.CloudSuitability? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal.Suitability { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).Suitability; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).Suitability = value; }

        /// <summary>Internal Acessors for SuitabilityDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureVMSuitabilityDetail? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal.SuitabilityDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).SuitabilityDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).SuitabilityDetail = value; }

        /// <summary>Internal Acessors for SuitabilityExplanation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureVMSuitabilityExplanation? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal.SuitabilityExplanation { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).SuitabilityExplanation; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).SuitabilityExplanation = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal.Type { get => this._type; set { {_type = value;} } }

        /// <summary>Internal Acessors for UpdatedTimestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal.UpdatedTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).UpdatedTimestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).UpdatedTimestamp = value; }

        /// <summary>
        /// Monthly network cost estimate for the network adapters that are attached to this machine as a group, for a 31-day month.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public double? MonthlyBandwidthCost { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).MonthlyBandwidthCost; }

        /// <summary>
        /// Compute Cost for a 31-day month, if the machine is migrated to Azure with the Recommended Size.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public double? MonthlyComputeCostForRecommendedSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).MonthlyComputeCostForRecommendedSize; }

        /// <summary>
        /// Monthly premium storage cost estimate for the disks that are attached to this machine as a group, for a 31-day month.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public double? MonthlyPremiumStorageCost { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).MonthlyPremiumStorageCost; }

        /// <summary>
        /// Monthly standard SSD storage cost estimate for the disks that are attached to this machine as a group, for a 31-day month.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public double? MonthlyStandardSsdStorageCost { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).MonthlyStandardSsdStorageCost; }

        /// <summary>
        /// Monthly storage cost estimate for the disks that are attached to this machine as a group, for a 31-day month.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public double? MonthlyStorageCost { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).MonthlyStorageCost; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Name of the machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Owned)]
        public string Name { get => this._name; }

        /// <summary>
        /// Dictionary of network adapters attached to the machine. Key is name of the adapter. Value is a network adapter object.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesNetworkAdapters NetworkAdapter { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).NetworkAdapter; }

        /// <summary>Processor count.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public int? NumberOfCore { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).NumberOfCore; }

        /// <summary>Number of CPU cores in the Recommended Azure VM Size.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public int? NumberOfCoresForRecommendedSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).NumberOfCoresForRecommendedSize; }

        /// <summary>Operating System name of the machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public string OperatingSystemName { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).OperatingSystemName; }

        /// <summary>Operating System type of the machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public string OperatingSystemType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).OperatingSystemType; }

        /// <summary>Operating System version of the machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public string OperatingSystemVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).OperatingSystemVersion; }

        /// <summary>
        /// Utilization percentage of the processor core as observed in the private data center, in the Time Range selected on Assessment,
        /// reported as the Percentile value based on the percentile number selected in assessment.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public double? PercentageCoresUtilization { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).PercentageCoresUtilization; }

        /// <summary>
        /// Utilization percentage of the memory as observed in the private data center, in the Time Range selected on Assessment,
        /// reported as the Percentile value based on the percentile number selected in assessment.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public double? PercentageMemoryUtilization { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).PercentageMemoryUtilization; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineProperties _property;

        /// <summary>Properties of an assessed machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.AssessedMachineProperties()); set => this._property = value; }

        /// <summary>Recommended Azure size for this machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureVMSize? RecommendedSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).RecommendedSize; }

        /// <summary>Whether machine is suitable for migration to Azure.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.CloudSuitability? Suitability { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).Suitability; }

        /// <summary>If machine is not suitable for cloud, this explains the reasons.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureVMSuitabilityDetail? SuitabilityDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).SuitabilityDetail; }

        /// <summary>
        /// If machine is not ready to be migrated, this explains the reasons and mitigation steps.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureVMSuitabilityExplanation? SuitabilityExplanation { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).SuitabilityExplanation; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>
        /// Type of the object = [Microsoft.Migrate/assessmentProjects/groups/assessments/assessedMachines].
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Owned)]
        public string Type { get => this._type; }

        /// <summary>
        /// Time when this machine was last updated. Date-Time represented in ISO-8601 format.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public global::System.DateTime? UpdatedTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesInternal)Property).UpdatedTimestamp; }

        /// <summary>Backing field for <see cref="XmsRequestId" /> property.</summary>
        private string _xmsRequestId;

        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Owned)]
        public string XmsRequestId { get => this._xmsRequestId; set => this._xmsRequestId = value; }

        /// <summary>Creates an new <see cref="AssessedMachine" /> instance.</summary>
        public AssessedMachine()
        {

        }

        /// <param name="headers"></param>
        void Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.IHeaderSerializable.ReadHeaders(global::System.Net.Http.Headers.HttpResponseHeaders headers)
        {
            if (headers.TryGetValues("x-ms-request-id", out var __xMSRequestIdHeader0))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).XmsRequestId = System.Linq.Enumerable.FirstOrDefault(__xMSRequestIdHeader0) is string __headerXMSRequestIdHeader0 ? __headerXMSRequestIdHeader0 : (string)null;
            }
        }
    }
    /// A machine evaluated as part of an assessment.
    public partial interface IAssessedMachine :
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.IJsonSerializable
    {
        /// <summary>Boot type of the machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Boot type of the machine.",
        SerializedName = @"bootType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.MachineBootType) })]
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.MachineBootType? BootType { get;  }
        /// <summary>Confidence rating of assessed machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Confidence rating of assessed machine.",
        SerializedName = @"confidenceRatingInPercentage",
        PossibleTypes = new [] { typeof(double) })]
        double? ConfidenceRatingInPercentage { get;  }
        /// <summary>Time when this machine was created. Date-Time represented in ISO-8601 format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Time when this machine was created. Date-Time represented in ISO-8601 format.",
        SerializedName = @"createdTimestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CreatedTimestamp { get;  }
        /// <summary>ARM ID of the discovered machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"ARM ID of the discovered machine.",
        SerializedName = @"datacenterMachineArmId",
        PossibleTypes = new [] { typeof(string) })]
        string DatacenterMachineArmId { get;  }
        /// <summary>ARM ID of the discovered datacenter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"ARM ID of the discovered datacenter.",
        SerializedName = @"datacenterManagementServerArmId",
        PossibleTypes = new [] { typeof(string) })]
        string DatacenterManagementServerArmId { get;  }
        /// <summary>Name of the server hosting the datacenter management solution.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Name of the server hosting the datacenter management solution.",
        SerializedName = @"datacenterManagementServerName",
        PossibleTypes = new [] { typeof(string) })]
        string DatacenterManagementServerName { get;  }
        /// <summary>Description of the machine</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Description of the machine",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get;  }
        /// <summary>
        /// Dictionary of disks attached to the machine. Key is ID of disk. Value is a disk object.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Dictionary of disks attached to the machine. Key is ID of disk. Value is a disk object.",
        SerializedName = @"disks",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesDisks) })]
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesDisks Disk { get;  }
        /// <summary>
        /// User readable name of the machine as defined by the user in their private datacenter.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"User readable name of the machine as defined by the user in their private datacenter.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get;  }
        /// <summary>For optimistic concurrency control.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"For optimistic concurrency control.",
        SerializedName = @"eTag",
        PossibleTypes = new [] { typeof(string) })]
        string ETag { get; set; }
        /// <summary>
        /// Path reference to this assessed machine. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/groups/{groupName}/assessments/{assessmentName}/assessedMachines/{assessedMachineName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Path reference to this assessed machine. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/groups/{groupName}/assessments/{assessmentName}/assessedMachines/{assessedMachineName}",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get;  }
        /// <summary>Memory in Megabytes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Memory in Megabytes.",
        SerializedName = @"megabytesOfMemory",
        PossibleTypes = new [] { typeof(double) })]
        double? MegabytesOfMemory { get;  }
        /// <summary>Megabytes of memory in the Recommended Azure VM Size.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Megabytes of memory in the Recommended Azure VM Size.",
        SerializedName = @"megabytesOfMemoryForRecommendedSize",
        PossibleTypes = new [] { typeof(double) })]
        double? MegabytesOfMemoryForRecommendedSize { get;  }
        /// <summary>
        /// Monthly network cost estimate for the network adapters that are attached to this machine as a group, for a 31-day month.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Monthly network cost estimate for the network adapters that are attached to this machine as a group, for a 31-day month.",
        SerializedName = @"monthlyBandwidthCost",
        PossibleTypes = new [] { typeof(double) })]
        double? MonthlyBandwidthCost { get;  }
        /// <summary>
        /// Compute Cost for a 31-day month, if the machine is migrated to Azure with the Recommended Size.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Compute Cost for a 31-day month, if the machine is migrated to Azure with the Recommended Size.",
        SerializedName = @"monthlyComputeCostForRecommendedSize",
        PossibleTypes = new [] { typeof(double) })]
        double? MonthlyComputeCostForRecommendedSize { get;  }
        /// <summary>
        /// Monthly premium storage cost estimate for the disks that are attached to this machine as a group, for a 31-day month.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Monthly premium storage cost estimate for the disks that are attached to this machine as a group, for a 31-day month.",
        SerializedName = @"monthlyPremiumStorageCost",
        PossibleTypes = new [] { typeof(double) })]
        double? MonthlyPremiumStorageCost { get;  }
        /// <summary>
        /// Monthly standard SSD storage cost estimate for the disks that are attached to this machine as a group, for a 31-day month.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Monthly standard SSD storage cost estimate for the disks that are attached to this machine as a group, for a 31-day month.",
        SerializedName = @"monthlyStandardSSDStorageCost",
        PossibleTypes = new [] { typeof(double) })]
        double? MonthlyStandardSsdStorageCost { get;  }
        /// <summary>
        /// Monthly storage cost estimate for the disks that are attached to this machine as a group, for a 31-day month.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Monthly storage cost estimate for the disks that are attached to this machine as a group, for a 31-day month.",
        SerializedName = @"monthlyStorageCost",
        PossibleTypes = new [] { typeof(double) })]
        double? MonthlyStorageCost { get;  }
        /// <summary>Name of the machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Name of the machine.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get;  }
        /// <summary>
        /// Dictionary of network adapters attached to the machine. Key is name of the adapter. Value is a network adapter object.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Dictionary of network adapters attached to the machine. Key is name of the adapter. Value is a network adapter object.",
        SerializedName = @"networkAdapters",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesNetworkAdapters) })]
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesNetworkAdapters NetworkAdapter { get;  }
        /// <summary>Processor count.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Processor count.",
        SerializedName = @"numberOfCores",
        PossibleTypes = new [] { typeof(int) })]
        int? NumberOfCore { get;  }
        /// <summary>Number of CPU cores in the Recommended Azure VM Size.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Number of CPU cores in the Recommended Azure VM Size.",
        SerializedName = @"numberOfCoresForRecommendedSize",
        PossibleTypes = new [] { typeof(int) })]
        int? NumberOfCoresForRecommendedSize { get;  }
        /// <summary>Operating System name of the machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Operating System name of the machine.",
        SerializedName = @"operatingSystemName",
        PossibleTypes = new [] { typeof(string) })]
        string OperatingSystemName { get;  }
        /// <summary>Operating System type of the machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Operating System type of the machine.",
        SerializedName = @"operatingSystemType",
        PossibleTypes = new [] { typeof(string) })]
        string OperatingSystemType { get;  }
        /// <summary>Operating System version of the machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Operating System version of the machine.",
        SerializedName = @"operatingSystemVersion",
        PossibleTypes = new [] { typeof(string) })]
        string OperatingSystemVersion { get;  }
        /// <summary>
        /// Utilization percentage of the processor core as observed in the private data center, in the Time Range selected on Assessment,
        /// reported as the Percentile value based on the percentile number selected in assessment.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Utilization percentage of the processor core as observed in the private data center, in the Time Range selected on Assessment, reported as the Percentile value based on the percentile number selected in assessment.",
        SerializedName = @"percentageCoresUtilization",
        PossibleTypes = new [] { typeof(double) })]
        double? PercentageCoresUtilization { get;  }
        /// <summary>
        /// Utilization percentage of the memory as observed in the private data center, in the Time Range selected on Assessment,
        /// reported as the Percentile value based on the percentile number selected in assessment.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Utilization percentage of the memory as observed in the private data center, in the Time Range selected on Assessment, reported as the Percentile value based on the percentile number selected in assessment.",
        SerializedName = @"percentageMemoryUtilization",
        PossibleTypes = new [] { typeof(double) })]
        double? PercentageMemoryUtilization { get;  }
        /// <summary>Recommended Azure size for this machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Recommended Azure size for this machine.",
        SerializedName = @"recommendedSize",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureVMSize) })]
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureVMSize? RecommendedSize { get;  }
        /// <summary>Whether machine is suitable for migration to Azure.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Whether machine is suitable for migration to Azure.",
        SerializedName = @"suitability",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.CloudSuitability) })]
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.CloudSuitability? Suitability { get;  }
        /// <summary>If machine is not suitable for cloud, this explains the reasons.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"If machine is not suitable for cloud, this explains the reasons.",
        SerializedName = @"suitabilityDetail",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureVMSuitabilityDetail) })]
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureVMSuitabilityDetail? SuitabilityDetail { get;  }
        /// <summary>
        /// If machine is not ready to be migrated, this explains the reasons and mitigation steps.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"If machine is not ready to be migrated, this explains the reasons and mitigation steps.",
        SerializedName = @"suitabilityExplanation",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureVMSuitabilityExplanation) })]
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureVMSuitabilityExplanation? SuitabilityExplanation { get;  }
        /// <summary>
        /// Type of the object = [Microsoft.Migrate/assessmentProjects/groups/assessments/assessedMachines].
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Type of the object = [Microsoft.Migrate/assessmentProjects/groups/assessments/assessedMachines].",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get;  }
        /// <summary>
        /// Time when this machine was last updated. Date-Time represented in ISO-8601 format.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Time when this machine was last updated. Date-Time represented in ISO-8601 format.",
        SerializedName = @"updatedTimestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? UpdatedTimestamp { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"x-ms-request-id",
        PossibleTypes = new [] { typeof(string) })]
        string XmsRequestId { get; set; }

    }
    /// A machine evaluated as part of an assessment.
    internal partial interface IAssessedMachineInternal

    {
        /// <summary>Boot type of the machine.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.MachineBootType? BootType { get; set; }
        /// <summary>Confidence rating of assessed machine.</summary>
        double? ConfidenceRatingInPercentage { get; set; }
        /// <summary>Time when this machine was created. Date-Time represented in ISO-8601 format.</summary>
        global::System.DateTime? CreatedTimestamp { get; set; }
        /// <summary>ARM ID of the discovered machine.</summary>
        string DatacenterMachineArmId { get; set; }
        /// <summary>ARM ID of the discovered datacenter.</summary>
        string DatacenterManagementServerArmId { get; set; }
        /// <summary>Name of the server hosting the datacenter management solution.</summary>
        string DatacenterManagementServerName { get; set; }
        /// <summary>Description of the machine</summary>
        string Description { get; set; }
        /// <summary>
        /// Dictionary of disks attached to the machine. Key is ID of disk. Value is a disk object.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesDisks Disk { get; set; }
        /// <summary>
        /// User readable name of the machine as defined by the user in their private datacenter.
        /// </summary>
        string DisplayName { get; set; }
        /// <summary>For optimistic concurrency control.</summary>
        string ETag { get; set; }
        /// <summary>
        /// Path reference to this assessed machine. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/groups/{groupName}/assessments/{assessmentName}/assessedMachines/{assessedMachineName}
        /// </summary>
        string Id { get; set; }
        /// <summary>Memory in Megabytes.</summary>
        double? MegabytesOfMemory { get; set; }
        /// <summary>Megabytes of memory in the Recommended Azure VM Size.</summary>
        double? MegabytesOfMemoryForRecommendedSize { get; set; }
        /// <summary>
        /// Monthly network cost estimate for the network adapters that are attached to this machine as a group, for a 31-day month.
        /// </summary>
        double? MonthlyBandwidthCost { get; set; }
        /// <summary>
        /// Compute Cost for a 31-day month, if the machine is migrated to Azure with the Recommended Size.
        /// </summary>
        double? MonthlyComputeCostForRecommendedSize { get; set; }
        /// <summary>
        /// Monthly premium storage cost estimate for the disks that are attached to this machine as a group, for a 31-day month.
        /// </summary>
        double? MonthlyPremiumStorageCost { get; set; }
        /// <summary>
        /// Monthly standard SSD storage cost estimate for the disks that are attached to this machine as a group, for a 31-day month.
        /// </summary>
        double? MonthlyStandardSsdStorageCost { get; set; }
        /// <summary>
        /// Monthly storage cost estimate for the disks that are attached to this machine as a group, for a 31-day month.
        /// </summary>
        double? MonthlyStorageCost { get; set; }
        /// <summary>Name of the machine.</summary>
        string Name { get; set; }
        /// <summary>
        /// Dictionary of network adapters attached to the machine. Key is name of the adapter. Value is a network adapter object.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesNetworkAdapters NetworkAdapter { get; set; }
        /// <summary>Processor count.</summary>
        int? NumberOfCore { get; set; }
        /// <summary>Number of CPU cores in the Recommended Azure VM Size.</summary>
        int? NumberOfCoresForRecommendedSize { get; set; }
        /// <summary>Operating System name of the machine.</summary>
        string OperatingSystemName { get; set; }
        /// <summary>Operating System type of the machine.</summary>
        string OperatingSystemType { get; set; }
        /// <summary>Operating System version of the machine.</summary>
        string OperatingSystemVersion { get; set; }
        /// <summary>
        /// Utilization percentage of the processor core as observed in the private data center, in the Time Range selected on Assessment,
        /// reported as the Percentile value based on the percentile number selected in assessment.
        /// </summary>
        double? PercentageCoresUtilization { get; set; }
        /// <summary>
        /// Utilization percentage of the memory as observed in the private data center, in the Time Range selected on Assessment,
        /// reported as the Percentile value based on the percentile number selected in assessment.
        /// </summary>
        double? PercentageMemoryUtilization { get; set; }
        /// <summary>Properties of an assessed machine.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineProperties Property { get; set; }
        /// <summary>Recommended Azure size for this machine.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureVMSize? RecommendedSize { get; set; }
        /// <summary>Whether machine is suitable for migration to Azure.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.CloudSuitability? Suitability { get; set; }
        /// <summary>If machine is not suitable for cloud, this explains the reasons.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureVMSuitabilityDetail? SuitabilityDetail { get; set; }
        /// <summary>
        /// If machine is not ready to be migrated, this explains the reasons and mitigation steps.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureVMSuitabilityExplanation? SuitabilityExplanation { get; set; }
        /// <summary>
        /// Type of the object = [Microsoft.Migrate/assessmentProjects/groups/assessments/assessedMachines].
        /// </summary>
        string Type { get; set; }
        /// <summary>
        /// Time when this machine was last updated. Date-Time represented in ISO-8601 format.
        /// </summary>
        global::System.DateTime? UpdatedTimestamp { get; set; }

        string XmsRequestId { get; set; }

    }
}