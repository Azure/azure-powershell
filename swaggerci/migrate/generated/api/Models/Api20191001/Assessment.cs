// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Extensions;

    /// <summary>An assessment created for a group in the Migration project.</summary>
    public partial class Assessment :
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessment,
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal,
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.IHeaderSerializable
    {

        /// <summary>Storage type selected for this disk.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureDiskType AzureDiskType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).AzureDiskType; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).AzureDiskType = value ; }

        /// <summary>AHUB discount on windows virtual machines.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureHybridUseBenefit AzureHybridUseBenefit { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).AzureHybridUseBenefit; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).AzureHybridUseBenefit = value ; }

        /// <summary>
        /// Target Azure location for which the machines should be assessed. These enums are the same as used by Compute API.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureLocation AzureLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).AzureLocation; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).AzureLocation = value ; }

        /// <summary>Offer code according to which cost estimation is done.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureOfferCode AzureOfferCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).AzureOfferCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).AzureOfferCode = value ; }

        /// <summary>Pricing tier for Size evaluation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzurePricingTier AzurePricingTier { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).AzurePricingTier; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).AzurePricingTier = value ; }

        /// <summary>Storage Redundancy type offered by Azure.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureStorageRedundancy AzureStorageRedundancy { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).AzureStorageRedundancy; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).AzureStorageRedundancy = value ; }

        /// <summary>List of azure VM families.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureVMFamily[] AzureVMFamily { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).AzureVMFamily; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).AzureVMFamily = value ; }

        /// <summary>Confidence rating percentage for assessment. Can be in the range [0, 100].</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public double? ConfidenceRatingInPercentage { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).ConfidenceRatingInPercentage; }

        /// <summary>Time when this project was created. Date-Time represented in ISO-8601 format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public global::System.DateTime? CreatedTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).CreatedTimestamp; }

        /// <summary>Currency to report prices in.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Currency Currency { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).Currency; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).Currency = value ; }

        /// <summary>
        /// Custom discount percentage to be applied on final costs. Can be in the range [0, 100].
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public double DiscountPercentage { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).DiscountPercentage; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).DiscountPercentage = value ; }

        /// <summary>Backing field for <see cref="ETag" /> property.</summary>
        private string _eTag;

        /// <summary>For optimistic concurrency control.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Owned)]
        public string ETag { get => this._eTag; set => this._eTag = value; }

        /// <summary>Enterprise agreement subscription arm id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public string EaSubscriptionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).EaSubscriptionId; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>
        /// Path reference to this assessment. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/groups/{groupName}/assessment/{assessmentName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Owned)]
        public string Id { get => this._id; }

        /// <summary>Internal Acessors for ConfidenceRatingInPercentage</summary>
        double? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal.ConfidenceRatingInPercentage { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).ConfidenceRatingInPercentage; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).ConfidenceRatingInPercentage = value; }

        /// <summary>Internal Acessors for CreatedTimestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal.CreatedTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).CreatedTimestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).CreatedTimestamp = value; }

        /// <summary>Internal Acessors for EaSubscriptionId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal.EaSubscriptionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).EaSubscriptionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).EaSubscriptionId = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal.Id { get => this._id; set { {_id = value;} } }

        /// <summary>Internal Acessors for MonthlyBandwidthCost</summary>
        double? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal.MonthlyBandwidthCost { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).MonthlyBandwidthCost; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).MonthlyBandwidthCost = value; }

        /// <summary>Internal Acessors for MonthlyComputeCost</summary>
        double? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal.MonthlyComputeCost { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).MonthlyComputeCost; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).MonthlyComputeCost = value; }

        /// <summary>Internal Acessors for MonthlyPremiumStorageCost</summary>
        double? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal.MonthlyPremiumStorageCost { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).MonthlyPremiumStorageCost; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).MonthlyPremiumStorageCost = value; }

        /// <summary>Internal Acessors for MonthlyStandardSsdStorageCost</summary>
        double? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal.MonthlyStandardSsdStorageCost { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).MonthlyStandardSsdStorageCost; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).MonthlyStandardSsdStorageCost = value; }

        /// <summary>Internal Acessors for MonthlyStorageCost</summary>
        double? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal.MonthlyStorageCost { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).MonthlyStorageCost; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).MonthlyStorageCost = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal.Name { get => this._name; set { {_name = value;} } }

        /// <summary>Internal Acessors for NumberOfMachine</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal.NumberOfMachine { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).NumberOfMachine; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).NumberOfMachine = value; }

        /// <summary>Internal Acessors for PerfDataEndTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal.PerfDataEndTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).PerfDataEndTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).PerfDataEndTime = value; }

        /// <summary>Internal Acessors for PerfDataStartTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal.PerfDataStartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).PerfDataStartTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).PerfDataStartTime = value; }

        /// <summary>Internal Acessors for PricesTimestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal.PricesTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).PricesTimestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).PricesTimestamp = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentProperties Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.AssessmentProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AssessmentStatus? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal.Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).Status = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal.Type { get => this._type; set { {_type = value;} } }

        /// <summary>Internal Acessors for UpdatedTimestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal.UpdatedTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).UpdatedTimestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).UpdatedTimestamp = value; }

        /// <summary>Internal Acessors for VMUptime</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IVMUptime Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal.VMUptime { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).VMUptime; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).VMUptime = value; }

        /// <summary>
        /// Monthly network cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public double? MonthlyBandwidthCost { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).MonthlyBandwidthCost; }

        /// <summary>
        /// Monthly compute cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public double? MonthlyComputeCost { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).MonthlyComputeCost; }

        /// <summary>
        /// Monthly premium storage cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public double? MonthlyPremiumStorageCost { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).MonthlyPremiumStorageCost; }

        /// <summary>
        /// Monthly standard SSD storage cost estimate for the machines that are part of this assessment as a group, for a 31-day
        /// month.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public double? MonthlyStandardSsdStorageCost { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).MonthlyStandardSsdStorageCost; }

        /// <summary>
        /// Monthly storage cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public double? MonthlyStorageCost { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).MonthlyStorageCost; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Unique name of an assessment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Owned)]
        public string Name { get => this._name; }

        /// <summary>Number of assessed machines part of this assessment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public int? NumberOfMachine { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).NumberOfMachine; }

        /// <summary>Percentile of performance data used to recommend Azure size.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Percentile Percentile { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).Percentile; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).Percentile = value ; }

        /// <summary>End time to consider performance data for assessment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public global::System.DateTime? PerfDataEndTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).PerfDataEndTime; }

        /// <summary>Start time to consider performance data for assessment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public global::System.DateTime? PerfDataStartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).PerfDataStartTime; }

        /// <summary>
        /// Time when the Azure Prices were queried. Date-Time represented in ISO-8601 format.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public global::System.DateTime? PricesTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).PricesTimestamp; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentProperties _property;

        /// <summary>Properties of the assessment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.AssessmentProperties()); set => this._property = value; }

        /// <summary>Azure reserved instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.ReservedInstance ReservedInstance { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).ReservedInstance; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).ReservedInstance = value ; }

        /// <summary>
        /// Scaling factor used over utilization data to add a performance buffer for new machines to be created in Azure. Min Value
        /// = 1.0, Max value = 1.9, Default = 1.3.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public double ScalingFactor { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).ScalingFactor; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).ScalingFactor = value ; }

        /// <summary>Assessment sizing criterion.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AssessmentSizingCriterion SizingCriterion { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).SizingCriterion; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).SizingCriterion = value ; }

        /// <summary>User configurable setting that describes the status of the assessment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AssessmentStage Stage { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).Stage; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).Stage = value ; }

        /// <summary>Whether the assessment has been created and is valid.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AssessmentStatus? Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).Status; }

        /// <summary>Time range of performance data used to recommend a size.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.TimeRange TimeRange { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).TimeRange; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).TimeRange = value ; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>Type of the object = [Microsoft.Migrate/assessmentProjects/groups/assessments].</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Owned)]
        public string Type { get => this._type; }

        /// <summary>
        /// Time when this project was last updated. Date-Time represented in ISO-8601 format.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public global::System.DateTime? UpdatedTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).UpdatedTimestamp; }

        /// <summary>Number of days in a month for VM uptime.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public int? VMUptimeDaysPerMonth { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).VMUptimeDaysPerMonth; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).VMUptimeDaysPerMonth = value ?? default(int); }

        /// <summary>Number of hours per day for VM uptime.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public int? VMUptimeHoursPerDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).VMUptimeHoursPerDay; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentPropertiesInternal)Property).VMUptimeHoursPerDay = value ?? default(int); }

        /// <summary>Backing field for <see cref="XmsRequestId" /> property.</summary>
        private string _xmsRequestId;

        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Owned)]
        public string XmsRequestId { get => this._xmsRequestId; set => this._xmsRequestId = value; }

        /// <summary>Creates an new <see cref="Assessment" /> instance.</summary>
        public Assessment()
        {

        }

        /// <param name="headers"></param>
        void Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.IHeaderSerializable.ReadHeaders(global::System.Net.Http.Headers.HttpResponseHeaders headers)
        {
            if (headers.TryGetValues("x-ms-request-id", out var __xMSRequestIdHeader0))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentInternal)this).XmsRequestId = System.Linq.Enumerable.FirstOrDefault(__xMSRequestIdHeader0) is string __headerXMSRequestIdHeader0 ? __headerXMSRequestIdHeader0 : (string)null;
            }
        }
    }
    /// An assessment created for a group in the Migration project.
    public partial interface IAssessment :
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.IJsonSerializable
    {
        /// <summary>Storage type selected for this disk.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Storage type selected for this disk.",
        SerializedName = @"azureDiskType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureDiskType) })]
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureDiskType AzureDiskType { get; set; }
        /// <summary>AHUB discount on windows virtual machines.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"AHUB discount on windows virtual machines.",
        SerializedName = @"azureHybridUseBenefit",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureHybridUseBenefit) })]
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureHybridUseBenefit AzureHybridUseBenefit { get; set; }
        /// <summary>
        /// Target Azure location for which the machines should be assessed. These enums are the same as used by Compute API.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Target Azure location for which the machines should be assessed. These enums are the same as used by Compute API.",
        SerializedName = @"azureLocation",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureLocation) })]
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureLocation AzureLocation { get; set; }
        /// <summary>Offer code according to which cost estimation is done.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Offer code according to which cost estimation is done.",
        SerializedName = @"azureOfferCode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureOfferCode) })]
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureOfferCode AzureOfferCode { get; set; }
        /// <summary>Pricing tier for Size evaluation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Pricing tier for Size evaluation.",
        SerializedName = @"azurePricingTier",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzurePricingTier) })]
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzurePricingTier AzurePricingTier { get; set; }
        /// <summary>Storage Redundancy type offered by Azure.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Storage Redundancy type offered by Azure.",
        SerializedName = @"azureStorageRedundancy",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureStorageRedundancy) })]
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureStorageRedundancy AzureStorageRedundancy { get; set; }
        /// <summary>List of azure VM families.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"List of azure VM families.",
        SerializedName = @"azureVmFamilies",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureVMFamily) })]
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureVMFamily[] AzureVMFamily { get; set; }
        /// <summary>Confidence rating percentage for assessment. Can be in the range [0, 100].</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Confidence rating percentage for assessment. Can be in the range [0, 100].",
        SerializedName = @"confidenceRatingInPercentage",
        PossibleTypes = new [] { typeof(double) })]
        double? ConfidenceRatingInPercentage { get;  }
        /// <summary>Time when this project was created. Date-Time represented in ISO-8601 format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Time when this project was created. Date-Time represented in ISO-8601 format.",
        SerializedName = @"createdTimestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CreatedTimestamp { get;  }
        /// <summary>Currency to report prices in.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Currency to report prices in.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Currency) })]
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Currency Currency { get; set; }
        /// <summary>
        /// Custom discount percentage to be applied on final costs. Can be in the range [0, 100].
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Custom discount percentage to be applied on final costs. Can be in the range [0, 100].",
        SerializedName = @"discountPercentage",
        PossibleTypes = new [] { typeof(double) })]
        double DiscountPercentage { get; set; }
        /// <summary>For optimistic concurrency control.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"For optimistic concurrency control.",
        SerializedName = @"eTag",
        PossibleTypes = new [] { typeof(string) })]
        string ETag { get; set; }
        /// <summary>Enterprise agreement subscription arm id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Enterprise agreement subscription arm id.",
        SerializedName = @"eaSubscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string EaSubscriptionId { get;  }
        /// <summary>
        /// Path reference to this assessment. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/groups/{groupName}/assessment/{assessmentName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Path reference to this assessment. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/groups/{groupName}/assessment/{assessmentName}",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get;  }
        /// <summary>
        /// Monthly network cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Monthly network cost estimate for the machines that are part of this assessment as a group, for a 31-day month.",
        SerializedName = @"monthlyBandwidthCost",
        PossibleTypes = new [] { typeof(double) })]
        double? MonthlyBandwidthCost { get;  }
        /// <summary>
        /// Monthly compute cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Monthly compute cost estimate for the machines that are part of this assessment as a group, for a 31-day month.",
        SerializedName = @"monthlyComputeCost",
        PossibleTypes = new [] { typeof(double) })]
        double? MonthlyComputeCost { get;  }
        /// <summary>
        /// Monthly premium storage cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Monthly premium storage cost estimate for the machines that are part of this assessment as a group, for a 31-day month.",
        SerializedName = @"monthlyPremiumStorageCost",
        PossibleTypes = new [] { typeof(double) })]
        double? MonthlyPremiumStorageCost { get;  }
        /// <summary>
        /// Monthly standard SSD storage cost estimate for the machines that are part of this assessment as a group, for a 31-day
        /// month.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Monthly standard SSD storage cost estimate for the machines that are part of this assessment as a group, for a 31-day month.",
        SerializedName = @"monthlyStandardSSDStorageCost",
        PossibleTypes = new [] { typeof(double) })]
        double? MonthlyStandardSsdStorageCost { get;  }
        /// <summary>
        /// Monthly storage cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Monthly storage cost estimate for the machines that are part of this assessment as a group, for a 31-day month.",
        SerializedName = @"monthlyStorageCost",
        PossibleTypes = new [] { typeof(double) })]
        double? MonthlyStorageCost { get;  }
        /// <summary>Unique name of an assessment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Unique name of an assessment.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get;  }
        /// <summary>Number of assessed machines part of this assessment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Number of assessed machines part of this assessment.",
        SerializedName = @"numberOfMachines",
        PossibleTypes = new [] { typeof(int) })]
        int? NumberOfMachine { get;  }
        /// <summary>Percentile of performance data used to recommend Azure size.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Percentile of performance data used to recommend Azure size.",
        SerializedName = @"percentile",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Percentile) })]
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Percentile Percentile { get; set; }
        /// <summary>End time to consider performance data for assessment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"End time to consider performance data for assessment",
        SerializedName = @"perfDataEndTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? PerfDataEndTime { get;  }
        /// <summary>Start time to consider performance data for assessment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Start time to consider performance data for assessment",
        SerializedName = @"perfDataStartTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? PerfDataStartTime { get;  }
        /// <summary>
        /// Time when the Azure Prices were queried. Date-Time represented in ISO-8601 format.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Time when the Azure Prices were queried. Date-Time represented in ISO-8601 format.",
        SerializedName = @"pricesTimestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? PricesTimestamp { get;  }
        /// <summary>Azure reserved instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Azure reserved instance.",
        SerializedName = @"reservedInstance",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.ReservedInstance) })]
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.ReservedInstance ReservedInstance { get; set; }
        /// <summary>
        /// Scaling factor used over utilization data to add a performance buffer for new machines to be created in Azure. Min Value
        /// = 1.0, Max value = 1.9, Default = 1.3.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Scaling factor used over utilization data to add a performance buffer for new machines to be created in Azure. Min Value = 1.0, Max value = 1.9, Default = 1.3.",
        SerializedName = @"scalingFactor",
        PossibleTypes = new [] { typeof(double) })]
        double ScalingFactor { get; set; }
        /// <summary>Assessment sizing criterion.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Assessment sizing criterion.",
        SerializedName = @"sizingCriterion",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AssessmentSizingCriterion) })]
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AssessmentSizingCriterion SizingCriterion { get; set; }
        /// <summary>User configurable setting that describes the status of the assessment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"User configurable setting that describes the status of the assessment.",
        SerializedName = @"stage",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AssessmentStage) })]
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AssessmentStage Stage { get; set; }
        /// <summary>Whether the assessment has been created and is valid.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Whether the assessment has been created and is valid.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AssessmentStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AssessmentStatus? Status { get;  }
        /// <summary>Time range of performance data used to recommend a size.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Time range of performance data used to recommend a size.",
        SerializedName = @"timeRange",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.TimeRange) })]
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.TimeRange TimeRange { get; set; }
        /// <summary>Type of the object = [Microsoft.Migrate/assessmentProjects/groups/assessments].</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Type of the object = [Microsoft.Migrate/assessmentProjects/groups/assessments].",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get;  }
        /// <summary>
        /// Time when this project was last updated. Date-Time represented in ISO-8601 format.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Time when this project was last updated. Date-Time represented in ISO-8601 format.",
        SerializedName = @"updatedTimestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? UpdatedTimestamp { get;  }
        /// <summary>Number of days in a month for VM uptime.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of days in a month for VM uptime.",
        SerializedName = @"daysPerMonth",
        PossibleTypes = new [] { typeof(int) })]
        int? VMUptimeDaysPerMonth { get; set; }
        /// <summary>Number of hours per day for VM uptime.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of hours per day for VM uptime.",
        SerializedName = @"hoursPerDay",
        PossibleTypes = new [] { typeof(int) })]
        int? VMUptimeHoursPerDay { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"x-ms-request-id",
        PossibleTypes = new [] { typeof(string) })]
        string XmsRequestId { get; set; }

    }
    /// An assessment created for a group in the Migration project.
    internal partial interface IAssessmentInternal

    {
        /// <summary>Storage type selected for this disk.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureDiskType AzureDiskType { get; set; }
        /// <summary>AHUB discount on windows virtual machines.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureHybridUseBenefit AzureHybridUseBenefit { get; set; }
        /// <summary>
        /// Target Azure location for which the machines should be assessed. These enums are the same as used by Compute API.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureLocation AzureLocation { get; set; }
        /// <summary>Offer code according to which cost estimation is done.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureOfferCode AzureOfferCode { get; set; }
        /// <summary>Pricing tier for Size evaluation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzurePricingTier AzurePricingTier { get; set; }
        /// <summary>Storage Redundancy type offered by Azure.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureStorageRedundancy AzureStorageRedundancy { get; set; }
        /// <summary>List of azure VM families.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureVMFamily[] AzureVMFamily { get; set; }
        /// <summary>Confidence rating percentage for assessment. Can be in the range [0, 100].</summary>
        double? ConfidenceRatingInPercentage { get; set; }
        /// <summary>Time when this project was created. Date-Time represented in ISO-8601 format.</summary>
        global::System.DateTime? CreatedTimestamp { get; set; }
        /// <summary>Currency to report prices in.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Currency Currency { get; set; }
        /// <summary>
        /// Custom discount percentage to be applied on final costs. Can be in the range [0, 100].
        /// </summary>
        double DiscountPercentage { get; set; }
        /// <summary>For optimistic concurrency control.</summary>
        string ETag { get; set; }
        /// <summary>Enterprise agreement subscription arm id.</summary>
        string EaSubscriptionId { get; set; }
        /// <summary>
        /// Path reference to this assessment. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/groups/{groupName}/assessment/{assessmentName}
        /// </summary>
        string Id { get; set; }
        /// <summary>
        /// Monthly network cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
        /// </summary>
        double? MonthlyBandwidthCost { get; set; }
        /// <summary>
        /// Monthly compute cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
        /// </summary>
        double? MonthlyComputeCost { get; set; }
        /// <summary>
        /// Monthly premium storage cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
        /// </summary>
        double? MonthlyPremiumStorageCost { get; set; }
        /// <summary>
        /// Monthly standard SSD storage cost estimate for the machines that are part of this assessment as a group, for a 31-day
        /// month.
        /// </summary>
        double? MonthlyStandardSsdStorageCost { get; set; }
        /// <summary>
        /// Monthly storage cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
        /// </summary>
        double? MonthlyStorageCost { get; set; }
        /// <summary>Unique name of an assessment.</summary>
        string Name { get; set; }
        /// <summary>Number of assessed machines part of this assessment.</summary>
        int? NumberOfMachine { get; set; }
        /// <summary>Percentile of performance data used to recommend Azure size.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Percentile Percentile { get; set; }
        /// <summary>End time to consider performance data for assessment</summary>
        global::System.DateTime? PerfDataEndTime { get; set; }
        /// <summary>Start time to consider performance data for assessment</summary>
        global::System.DateTime? PerfDataStartTime { get; set; }
        /// <summary>
        /// Time when the Azure Prices were queried. Date-Time represented in ISO-8601 format.
        /// </summary>
        global::System.DateTime? PricesTimestamp { get; set; }
        /// <summary>Properties of the assessment.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentProperties Property { get; set; }
        /// <summary>Azure reserved instance.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.ReservedInstance ReservedInstance { get; set; }
        /// <summary>
        /// Scaling factor used over utilization data to add a performance buffer for new machines to be created in Azure. Min Value
        /// = 1.0, Max value = 1.9, Default = 1.3.
        /// </summary>
        double ScalingFactor { get; set; }
        /// <summary>Assessment sizing criterion.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AssessmentSizingCriterion SizingCriterion { get; set; }
        /// <summary>User configurable setting that describes the status of the assessment.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AssessmentStage Stage { get; set; }
        /// <summary>Whether the assessment has been created and is valid.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AssessmentStatus? Status { get; set; }
        /// <summary>Time range of performance data used to recommend a size.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.TimeRange TimeRange { get; set; }
        /// <summary>Type of the object = [Microsoft.Migrate/assessmentProjects/groups/assessments].</summary>
        string Type { get; set; }
        /// <summary>
        /// Time when this project was last updated. Date-Time represented in ISO-8601 format.
        /// </summary>
        global::System.DateTime? UpdatedTimestamp { get; set; }
        /// <summary>Specify the duration for which the VMs are up in the on-premises environment.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IVMUptime VMUptime { get; set; }
        /// <summary>Number of days in a month for VM uptime.</summary>
        int? VMUptimeDaysPerMonth { get; set; }
        /// <summary>Number of hours per day for VM uptime.</summary>
        int? VMUptimeHoursPerDay { get; set; }

        string XmsRequestId { get; set; }

    }
}