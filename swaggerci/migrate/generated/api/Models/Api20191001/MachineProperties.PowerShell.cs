// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001
{
    using Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.PowerShell;

    /// <summary>Properties of a machine.</summary>
    [System.ComponentModel.TypeConverter(typeof(MachinePropertiesTypeConverter))]
    public partial class MachineProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.MachineProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachineProperties" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachineProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new MachineProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.MachineProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachineProperties" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachineProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new MachineProperties(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="MachineProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="MachineProperties" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachineProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.MachineProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal MachineProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("BootType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).BootType = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.MachineBootType?) content.GetValueForProperty("BootType",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).BootType, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.MachineBootType.CreateFrom);
            }
            if (content.Contains("DatacenterManagementServerArmId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).DatacenterManagementServerArmId = (string) content.GetValueForProperty("DatacenterManagementServerArmId",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).DatacenterManagementServerArmId, global::System.Convert.ToString);
            }
            if (content.Contains("DiscoveryMachineArmId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).DiscoveryMachineArmId = (string) content.GetValueForProperty("DiscoveryMachineArmId",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).DiscoveryMachineArmId, global::System.Convert.ToString);
            }
            if (content.Contains("DatacenterManagementServerName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).DatacenterManagementServerName = (string) content.GetValueForProperty("DatacenterManagementServerName",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).DatacenterManagementServerName, global::System.Convert.ToString);
            }
            if (content.Contains("DisplayName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).DisplayName = (string) content.GetValueForProperty("DisplayName",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).DisplayName, global::System.Convert.ToString);
            }
            if (content.Contains("MegabytesOfMemory"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).MegabytesOfMemory = (float?) content.GetValueForProperty("MegabytesOfMemory",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).MegabytesOfMemory, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("NumberOfCore"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).NumberOfCore = (int?) content.GetValueForProperty("NumberOfCore",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).NumberOfCore, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("OperatingSystemType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).OperatingSystemType = (string) content.GetValueForProperty("OperatingSystemType",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).OperatingSystemType, global::System.Convert.ToString);
            }
            if (content.Contains("OperatingSystemName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).OperatingSystemName = (string) content.GetValueForProperty("OperatingSystemName",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).OperatingSystemName, global::System.Convert.ToString);
            }
            if (content.Contains("OperatingSystemVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).OperatingSystemVersion = (string) content.GetValueForProperty("OperatingSystemVersion",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).OperatingSystemVersion, global::System.Convert.ToString);
            }
            if (content.Contains("Description"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).Description = (string) content.GetValueForProperty("Description",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).Description, global::System.Convert.ToString);
            }
            if (content.Contains("Group"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).Group = (string[]) content.GetValueForProperty("Group",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).Group, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("CreatedTimestamp"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).CreatedTimestamp = (global::System.DateTime?) content.GetValueForProperty("CreatedTimestamp",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).CreatedTimestamp, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("UpdatedTimestamp"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).UpdatedTimestamp = (global::System.DateTime?) content.GetValueForProperty("UpdatedTimestamp",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).UpdatedTimestamp, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("Disk"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).Disk = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesDisks) content.GetValueForProperty("Disk",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).Disk, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.MachinePropertiesDisksTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkAdapter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).NetworkAdapter = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesNetworkAdapters) content.GetValueForProperty("NetworkAdapter",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).NetworkAdapter, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.MachinePropertiesNetworkAdaptersTypeConverter.ConvertFrom);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.MachineProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal MachineProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("BootType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).BootType = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.MachineBootType?) content.GetValueForProperty("BootType",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).BootType, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.MachineBootType.CreateFrom);
            }
            if (content.Contains("DatacenterManagementServerArmId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).DatacenterManagementServerArmId = (string) content.GetValueForProperty("DatacenterManagementServerArmId",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).DatacenterManagementServerArmId, global::System.Convert.ToString);
            }
            if (content.Contains("DiscoveryMachineArmId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).DiscoveryMachineArmId = (string) content.GetValueForProperty("DiscoveryMachineArmId",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).DiscoveryMachineArmId, global::System.Convert.ToString);
            }
            if (content.Contains("DatacenterManagementServerName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).DatacenterManagementServerName = (string) content.GetValueForProperty("DatacenterManagementServerName",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).DatacenterManagementServerName, global::System.Convert.ToString);
            }
            if (content.Contains("DisplayName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).DisplayName = (string) content.GetValueForProperty("DisplayName",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).DisplayName, global::System.Convert.ToString);
            }
            if (content.Contains("MegabytesOfMemory"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).MegabytesOfMemory = (float?) content.GetValueForProperty("MegabytesOfMemory",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).MegabytesOfMemory, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("NumberOfCore"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).NumberOfCore = (int?) content.GetValueForProperty("NumberOfCore",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).NumberOfCore, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("OperatingSystemType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).OperatingSystemType = (string) content.GetValueForProperty("OperatingSystemType",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).OperatingSystemType, global::System.Convert.ToString);
            }
            if (content.Contains("OperatingSystemName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).OperatingSystemName = (string) content.GetValueForProperty("OperatingSystemName",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).OperatingSystemName, global::System.Convert.ToString);
            }
            if (content.Contains("OperatingSystemVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).OperatingSystemVersion = (string) content.GetValueForProperty("OperatingSystemVersion",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).OperatingSystemVersion, global::System.Convert.ToString);
            }
            if (content.Contains("Description"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).Description = (string) content.GetValueForProperty("Description",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).Description, global::System.Convert.ToString);
            }
            if (content.Contains("Group"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).Group = (string[]) content.GetValueForProperty("Group",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).Group, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("CreatedTimestamp"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).CreatedTimestamp = (global::System.DateTime?) content.GetValueForProperty("CreatedTimestamp",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).CreatedTimestamp, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("UpdatedTimestamp"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).UpdatedTimestamp = (global::System.DateTime?) content.GetValueForProperty("UpdatedTimestamp",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).UpdatedTimestamp, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("Disk"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).Disk = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesDisks) content.GetValueForProperty("Disk",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).Disk, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.MachinePropertiesDisksTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkAdapter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).NetworkAdapter = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesNetworkAdapters) content.GetValueForProperty("NetworkAdapter",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)this).NetworkAdapter, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.MachinePropertiesNetworkAdaptersTypeConverter.ConvertFrom);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Properties of a machine.
    [System.ComponentModel.TypeConverter(typeof(MachinePropertiesTypeConverter))]
    public partial interface IMachineProperties

    {

    }
}