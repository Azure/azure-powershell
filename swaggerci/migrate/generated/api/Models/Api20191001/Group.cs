// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Extensions;

    /// <summary>A group created in a Migration project.</summary>
    public partial class Group :
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IGroup,
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IGroupInternal,
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.IHeaderSerializable
    {

        /// <summary>If the assessments are in running state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public bool? AreAssessmentsRunning { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IGroupPropertiesInternal)Property).AreAssessmentsRunning; }

        /// <summary>List of References to Assessments created on this group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public string[] Assessment { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IGroupPropertiesInternal)Property).Assessment; }

        /// <summary>Time when this group was created. Date-Time represented in ISO-8601 format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public global::System.DateTime? CreatedTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IGroupPropertiesInternal)Property).CreatedTimestamp; }

        /// <summary>Backing field for <see cref="ETag" /> property.</summary>
        private string _eTag;

        /// <summary>For optimistic concurrency control.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Owned)]
        public string ETag { get => this._eTag; set => this._eTag = value; }

        /// <summary>The type of group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public string GroupType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IGroupPropertiesInternal)Property).GroupType; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IGroupPropertiesInternal)Property).GroupType = value ?? null; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>
        /// Path reference to this group. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/groups/{groupName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Owned)]
        public string Id { get => this._id; }

        /// <summary>Number of machines part of this group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public int? MachineCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IGroupPropertiesInternal)Property).MachineCount; }

        /// <summary>Internal Acessors for AreAssessmentsRunning</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IGroupInternal.AreAssessmentsRunning { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IGroupPropertiesInternal)Property).AreAssessmentsRunning; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IGroupPropertiesInternal)Property).AreAssessmentsRunning = value; }

        /// <summary>Internal Acessors for Assessment</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IGroupInternal.Assessment { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IGroupPropertiesInternal)Property).Assessment; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IGroupPropertiesInternal)Property).Assessment = value; }

        /// <summary>Internal Acessors for CreatedTimestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IGroupInternal.CreatedTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IGroupPropertiesInternal)Property).CreatedTimestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IGroupPropertiesInternal)Property).CreatedTimestamp = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IGroupInternal.Id { get => this._id; set { {_id = value;} } }

        /// <summary>Internal Acessors for MachineCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IGroupInternal.MachineCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IGroupPropertiesInternal)Property).MachineCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IGroupPropertiesInternal)Property).MachineCount = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IGroupInternal.Name { get => this._name; set { {_name = value;} } }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IGroupProperties Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IGroupInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.GroupProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.GroupStatus? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IGroupInternal.Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IGroupPropertiesInternal)Property).GroupStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IGroupPropertiesInternal)Property).GroupStatus = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IGroupInternal.Type { get => this._type; set { {_type = value;} } }

        /// <summary>Internal Acessors for UpdatedTimestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IGroupInternal.UpdatedTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IGroupPropertiesInternal)Property).UpdatedTimestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IGroupPropertiesInternal)Property).UpdatedTimestamp = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Name of the group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Owned)]
        public string Name { get => this._name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IGroupProperties _property;

        /// <summary>Properties of the group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IGroupProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.GroupProperties()); set => this._property = value; }

        /// <summary>Whether the group has been created and is valid.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.GroupStatus? Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IGroupPropertiesInternal)Property).GroupStatus; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>Type of the object = [Microsoft.Migrate/assessmentProjects/groups].</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Owned)]
        public string Type { get => this._type; }

        /// <summary>
        /// Time when this group was last updated. Date-Time represented in ISO-8601 format.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public global::System.DateTime? UpdatedTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IGroupPropertiesInternal)Property).UpdatedTimestamp; }

        /// <summary>Backing field for <see cref="XmsRequestId" /> property.</summary>
        private string _xmsRequestId;

        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Owned)]
        public string XmsRequestId { get => this._xmsRequestId; set => this._xmsRequestId = value; }

        /// <summary>Creates an new <see cref="Group" /> instance.</summary>
        public Group()
        {

        }

        /// <param name="headers"></param>
        void Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.IHeaderSerializable.ReadHeaders(global::System.Net.Http.Headers.HttpResponseHeaders headers)
        {
            if (headers.TryGetValues("x-ms-request-id", out var __xMSRequestIdHeader0))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IGroupInternal)this).XmsRequestId = System.Linq.Enumerable.FirstOrDefault(__xMSRequestIdHeader0) is string __headerXMSRequestIdHeader0 ? __headerXMSRequestIdHeader0 : (string)null;
            }
        }
    }
    /// A group created in a Migration project.
    public partial interface IGroup :
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.IJsonSerializable
    {
        /// <summary>If the assessments are in running state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"If the assessments are in running state.",
        SerializedName = @"areAssessmentsRunning",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AreAssessmentsRunning { get;  }
        /// <summary>List of References to Assessments created on this group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of References to Assessments created on this group.",
        SerializedName = @"assessments",
        PossibleTypes = new [] { typeof(string) })]
        string[] Assessment { get;  }
        /// <summary>Time when this group was created. Date-Time represented in ISO-8601 format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Time when this group was created. Date-Time represented in ISO-8601 format.",
        SerializedName = @"createdTimestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CreatedTimestamp { get;  }
        /// <summary>For optimistic concurrency control.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"For optimistic concurrency control.",
        SerializedName = @"eTag",
        PossibleTypes = new [] { typeof(string) })]
        string ETag { get; set; }
        /// <summary>The type of group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of group.",
        SerializedName = @"groupType",
        PossibleTypes = new [] { typeof(string) })]
        string GroupType { get; set; }
        /// <summary>
        /// Path reference to this group. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/groups/{groupName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Path reference to this group. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/groups/{groupName}",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get;  }
        /// <summary>Number of machines part of this group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Number of machines part of this group.",
        SerializedName = @"machineCount",
        PossibleTypes = new [] { typeof(int) })]
        int? MachineCount { get;  }
        /// <summary>Name of the group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Name of the group.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get;  }
        /// <summary>Whether the group has been created and is valid.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Whether the group has been created and is valid.",
        SerializedName = @"groupStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.GroupStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.GroupStatus? Status { get;  }
        /// <summary>Type of the object = [Microsoft.Migrate/assessmentProjects/groups].</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Type of the object = [Microsoft.Migrate/assessmentProjects/groups].",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get;  }
        /// <summary>
        /// Time when this group was last updated. Date-Time represented in ISO-8601 format.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Time when this group was last updated. Date-Time represented in ISO-8601 format.",
        SerializedName = @"updatedTimestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? UpdatedTimestamp { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"x-ms-request-id",
        PossibleTypes = new [] { typeof(string) })]
        string XmsRequestId { get; set; }

    }
    /// A group created in a Migration project.
    internal partial interface IGroupInternal

    {
        /// <summary>If the assessments are in running state.</summary>
        bool? AreAssessmentsRunning { get; set; }
        /// <summary>List of References to Assessments created on this group.</summary>
        string[] Assessment { get; set; }
        /// <summary>Time when this group was created. Date-Time represented in ISO-8601 format.</summary>
        global::System.DateTime? CreatedTimestamp { get; set; }
        /// <summary>For optimistic concurrency control.</summary>
        string ETag { get; set; }
        /// <summary>The type of group.</summary>
        string GroupType { get; set; }
        /// <summary>
        /// Path reference to this group. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/groups/{groupName}
        /// </summary>
        string Id { get; set; }
        /// <summary>Number of machines part of this group.</summary>
        int? MachineCount { get; set; }
        /// <summary>Name of the group.</summary>
        string Name { get; set; }
        /// <summary>Properties of the group.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IGroupProperties Property { get; set; }
        /// <summary>Whether the group has been created and is valid.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.GroupStatus? Status { get; set; }
        /// <summary>Type of the object = [Microsoft.Migrate/assessmentProjects/groups].</summary>
        string Type { get; set; }
        /// <summary>
        /// Time when this group was last updated. Date-Time represented in ISO-8601 format.
        /// </summary>
        global::System.DateTime? UpdatedTimestamp { get; set; }

        string XmsRequestId { get; set; }

    }
}