// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Extensions;

    /// <summary>Properties of a machine.</summary>
    public partial class MachineProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachineProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachineProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachineProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject json ? new MachineProperties(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject into a new instance of <see cref="MachineProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal MachineProperties(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_bootType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("bootType"), out var __jsonBootType) ? (string)__jsonBootType : (string)BootType;}
            {_datacenterManagementServerArmId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("datacenterManagementServerArmId"), out var __jsonDatacenterManagementServerArmId) ? (string)__jsonDatacenterManagementServerArmId : (string)DatacenterManagementServerArmId;}
            {_discoveryMachineArmId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("discoveryMachineArmId"), out var __jsonDiscoveryMachineArmId) ? (string)__jsonDiscoveryMachineArmId : (string)DiscoveryMachineArmId;}
            {_datacenterManagementServerName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("datacenterManagementServerName"), out var __jsonDatacenterManagementServerName) ? (string)__jsonDatacenterManagementServerName : (string)DatacenterManagementServerName;}
            {_displayName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("displayName"), out var __jsonDisplayName) ? (string)__jsonDisplayName : (string)DisplayName;}
            {_megabytesOfMemory = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber>("megabytesOfMemory"), out var __jsonMegabytesOfMemory) ? (float?)__jsonMegabytesOfMemory : MegabytesOfMemory;}
            {_numberOfCore = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber>("numberOfCores"), out var __jsonNumberOfCores) ? (int?)__jsonNumberOfCores : NumberOfCore;}
            {_operatingSystemType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("operatingSystemType"), out var __jsonOperatingSystemType) ? (string)__jsonOperatingSystemType : (string)OperatingSystemType;}
            {_operatingSystemName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("operatingSystemName"), out var __jsonOperatingSystemName) ? (string)__jsonOperatingSystemName : (string)OperatingSystemName;}
            {_operatingSystemVersion = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("operatingSystemVersion"), out var __jsonOperatingSystemVersion) ? (string)__jsonOperatingSystemVersion : (string)OperatingSystemVersion;}
            {_description = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("description"), out var __jsonDescription) ? (string)__jsonDescription : (string)Description;}
            {_group = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonArray>("groups"), out var __jsonGroups) ? If( __jsonGroups as Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(string) (__u is Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString __t ? (string)(__t.ToString()) : null)) ))() : null : Group;}
            {_createdTimestamp = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("createdTimestamp"), out var __jsonCreatedTimestamp) ? global::System.DateTime.TryParse((string)__jsonCreatedTimestamp, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonCreatedTimestampValue) ? __jsonCreatedTimestampValue : CreatedTimestamp : CreatedTimestamp;}
            {_updatedTimestamp = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("updatedTimestamp"), out var __jsonUpdatedTimestamp) ? global::System.DateTime.TryParse((string)__jsonUpdatedTimestamp, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonUpdatedTimestampValue) ? __jsonUpdatedTimestampValue : UpdatedTimestamp : UpdatedTimestamp;}
            {_disk = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject>("disks"), out var __jsonDisks) ? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.MachinePropertiesDisks.FromJson(__jsonDisks) : Disk;}
            {_networkAdapter = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject>("networkAdapters"), out var __jsonNetworkAdapters) ? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.MachinePropertiesNetworkAdapters.FromJson(__jsonNetworkAdapters) : NetworkAdapter;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="MachineProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="MachineProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._bootType)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._bootType.ToString()) : null, "bootType" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._datacenterManagementServerArmId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._datacenterManagementServerArmId.ToString()) : null, "datacenterManagementServerArmId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._discoveryMachineArmId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._discoveryMachineArmId.ToString()) : null, "discoveryMachineArmId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._datacenterManagementServerName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._datacenterManagementServerName.ToString()) : null, "datacenterManagementServerName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._displayName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._displayName.ToString()) : null, "displayName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._megabytesOfMemory ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber((float)this._megabytesOfMemory) : null, "megabytesOfMemory" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._numberOfCore ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber((int)this._numberOfCore) : null, "numberOfCores" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._operatingSystemType)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._operatingSystemType.ToString()) : null, "operatingSystemType" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._operatingSystemName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._operatingSystemName.ToString()) : null, "operatingSystemName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._operatingSystemVersion)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._operatingSystemVersion.ToString()) : null, "operatingSystemVersion" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._description)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._description.ToString()) : null, "description" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                if (null != this._group)
                {
                    var __w = new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.XNodeArray();
                    foreach( var __x in this._group )
                    {
                        AddIf(null != (((object)__x)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(__x.ToString()) : null ,__w.Add);
                    }
                    container.Add("groups",__w);
                }
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._createdTimestamp ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._createdTimestamp?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "createdTimestamp" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._updatedTimestamp ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._updatedTimestamp?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "updatedTimestamp" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._disk ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) this._disk.ToJson(null,serializationMode) : null, "disks" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._networkAdapter ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) this._networkAdapter.ToJson(null,serializationMode) : null, "networkAdapters" ,container.Add );
            }
            AfterToJson(ref container);
            return container;
        }
    }
}