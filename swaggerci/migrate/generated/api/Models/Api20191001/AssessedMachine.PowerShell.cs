// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001
{
    using Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.PowerShell;

    /// <summary>A machine evaluated as part of an assessment.</summary>
    [System.ComponentModel.TypeConverter(typeof(AssessedMachineTypeConverter))]
    public partial class AssessedMachine
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.AssessedMachine"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal AssessedMachine(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.AssessedMachinePropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("ETag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).ETag = (string) content.GetValueForProperty("ETag",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).ETag, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("XmsRequestId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).XmsRequestId = (string) content.GetValueForProperty("XmsRequestId",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).XmsRequestId, global::System.Convert.ToString);
            }
            if (content.Contains("BootType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).BootType = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.MachineBootType?) content.GetValueForProperty("BootType",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).BootType, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.MachineBootType.CreateFrom);
            }
            if (content.Contains("DatacenterMachineArmId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).DatacenterMachineArmId = (string) content.GetValueForProperty("DatacenterMachineArmId",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).DatacenterMachineArmId, global::System.Convert.ToString);
            }
            if (content.Contains("DatacenterManagementServerArmId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).DatacenterManagementServerArmId = (string) content.GetValueForProperty("DatacenterManagementServerArmId",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).DatacenterManagementServerArmId, global::System.Convert.ToString);
            }
            if (content.Contains("DatacenterManagementServerName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).DatacenterManagementServerName = (string) content.GetValueForProperty("DatacenterManagementServerName",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).DatacenterManagementServerName, global::System.Convert.ToString);
            }
            if (content.Contains("Description"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).Description = (string) content.GetValueForProperty("Description",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).Description, global::System.Convert.ToString);
            }
            if (content.Contains("DisplayName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).DisplayName = (string) content.GetValueForProperty("DisplayName",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).DisplayName, global::System.Convert.ToString);
            }
            if (content.Contains("MegabytesOfMemory"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).MegabytesOfMemory = (double?) content.GetValueForProperty("MegabytesOfMemory",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).MegabytesOfMemory, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("NumberOfCore"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).NumberOfCore = (int?) content.GetValueForProperty("NumberOfCore",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).NumberOfCore, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("OperatingSystemType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).OperatingSystemType = (string) content.GetValueForProperty("OperatingSystemType",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).OperatingSystemType, global::System.Convert.ToString);
            }
            if (content.Contains("OperatingSystemName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).OperatingSystemName = (string) content.GetValueForProperty("OperatingSystemName",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).OperatingSystemName, global::System.Convert.ToString);
            }
            if (content.Contains("OperatingSystemVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).OperatingSystemVersion = (string) content.GetValueForProperty("OperatingSystemVersion",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).OperatingSystemVersion, global::System.Convert.ToString);
            }
            if (content.Contains("MonthlyBandwidthCost"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).MonthlyBandwidthCost = (double?) content.GetValueForProperty("MonthlyBandwidthCost",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).MonthlyBandwidthCost, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("MonthlyStorageCost"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).MonthlyStorageCost = (double?) content.GetValueForProperty("MonthlyStorageCost",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).MonthlyStorageCost, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("MonthlyPremiumStorageCost"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).MonthlyPremiumStorageCost = (double?) content.GetValueForProperty("MonthlyPremiumStorageCost",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).MonthlyPremiumStorageCost, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("MonthlyStandardSsdStorageCost"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).MonthlyStandardSsdStorageCost = (double?) content.GetValueForProperty("MonthlyStandardSsdStorageCost",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).MonthlyStandardSsdStorageCost, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("ConfidenceRatingInPercentage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).ConfidenceRatingInPercentage = (double?) content.GetValueForProperty("ConfidenceRatingInPercentage",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).ConfidenceRatingInPercentage, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("Disk"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).Disk = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesDisks) content.GetValueForProperty("Disk",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).Disk, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.AssessedMachinePropertiesDisksTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkAdapter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).NetworkAdapter = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesNetworkAdapters) content.GetValueForProperty("NetworkAdapter",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).NetworkAdapter, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.AssessedMachinePropertiesNetworkAdaptersTypeConverter.ConvertFrom);
            }
            if (content.Contains("RecommendedSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).RecommendedSize = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureVMSize?) content.GetValueForProperty("RecommendedSize",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).RecommendedSize, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureVMSize.CreateFrom);
            }
            if (content.Contains("NumberOfCoresForRecommendedSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).NumberOfCoresForRecommendedSize = (int?) content.GetValueForProperty("NumberOfCoresForRecommendedSize",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).NumberOfCoresForRecommendedSize, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("MegabytesOfMemoryForRecommendedSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).MegabytesOfMemoryForRecommendedSize = (double?) content.GetValueForProperty("MegabytesOfMemoryForRecommendedSize",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).MegabytesOfMemoryForRecommendedSize, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("MonthlyComputeCostForRecommendedSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).MonthlyComputeCostForRecommendedSize = (double?) content.GetValueForProperty("MonthlyComputeCostForRecommendedSize",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).MonthlyComputeCostForRecommendedSize, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("PercentageCoresUtilization"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).PercentageCoresUtilization = (double?) content.GetValueForProperty("PercentageCoresUtilization",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).PercentageCoresUtilization, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("PercentageMemoryUtilization"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).PercentageMemoryUtilization = (double?) content.GetValueForProperty("PercentageMemoryUtilization",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).PercentageMemoryUtilization, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("Suitability"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).Suitability = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.CloudSuitability?) content.GetValueForProperty("Suitability",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).Suitability, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.CloudSuitability.CreateFrom);
            }
            if (content.Contains("SuitabilityExplanation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).SuitabilityExplanation = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureVMSuitabilityExplanation?) content.GetValueForProperty("SuitabilityExplanation",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).SuitabilityExplanation, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureVMSuitabilityExplanation.CreateFrom);
            }
            if (content.Contains("SuitabilityDetail"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).SuitabilityDetail = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureVMSuitabilityDetail?) content.GetValueForProperty("SuitabilityDetail",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).SuitabilityDetail, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureVMSuitabilityDetail.CreateFrom);
            }
            if (content.Contains("CreatedTimestamp"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).CreatedTimestamp = (global::System.DateTime?) content.GetValueForProperty("CreatedTimestamp",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).CreatedTimestamp, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("UpdatedTimestamp"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).UpdatedTimestamp = (global::System.DateTime?) content.GetValueForProperty("UpdatedTimestamp",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).UpdatedTimestamp, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.AssessedMachine"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal AssessedMachine(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.AssessedMachinePropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("ETag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).ETag = (string) content.GetValueForProperty("ETag",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).ETag, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("XmsRequestId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).XmsRequestId = (string) content.GetValueForProperty("XmsRequestId",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).XmsRequestId, global::System.Convert.ToString);
            }
            if (content.Contains("BootType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).BootType = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.MachineBootType?) content.GetValueForProperty("BootType",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).BootType, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.MachineBootType.CreateFrom);
            }
            if (content.Contains("DatacenterMachineArmId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).DatacenterMachineArmId = (string) content.GetValueForProperty("DatacenterMachineArmId",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).DatacenterMachineArmId, global::System.Convert.ToString);
            }
            if (content.Contains("DatacenterManagementServerArmId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).DatacenterManagementServerArmId = (string) content.GetValueForProperty("DatacenterManagementServerArmId",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).DatacenterManagementServerArmId, global::System.Convert.ToString);
            }
            if (content.Contains("DatacenterManagementServerName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).DatacenterManagementServerName = (string) content.GetValueForProperty("DatacenterManagementServerName",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).DatacenterManagementServerName, global::System.Convert.ToString);
            }
            if (content.Contains("Description"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).Description = (string) content.GetValueForProperty("Description",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).Description, global::System.Convert.ToString);
            }
            if (content.Contains("DisplayName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).DisplayName = (string) content.GetValueForProperty("DisplayName",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).DisplayName, global::System.Convert.ToString);
            }
            if (content.Contains("MegabytesOfMemory"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).MegabytesOfMemory = (double?) content.GetValueForProperty("MegabytesOfMemory",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).MegabytesOfMemory, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("NumberOfCore"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).NumberOfCore = (int?) content.GetValueForProperty("NumberOfCore",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).NumberOfCore, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("OperatingSystemType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).OperatingSystemType = (string) content.GetValueForProperty("OperatingSystemType",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).OperatingSystemType, global::System.Convert.ToString);
            }
            if (content.Contains("OperatingSystemName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).OperatingSystemName = (string) content.GetValueForProperty("OperatingSystemName",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).OperatingSystemName, global::System.Convert.ToString);
            }
            if (content.Contains("OperatingSystemVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).OperatingSystemVersion = (string) content.GetValueForProperty("OperatingSystemVersion",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).OperatingSystemVersion, global::System.Convert.ToString);
            }
            if (content.Contains("MonthlyBandwidthCost"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).MonthlyBandwidthCost = (double?) content.GetValueForProperty("MonthlyBandwidthCost",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).MonthlyBandwidthCost, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("MonthlyStorageCost"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).MonthlyStorageCost = (double?) content.GetValueForProperty("MonthlyStorageCost",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).MonthlyStorageCost, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("MonthlyPremiumStorageCost"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).MonthlyPremiumStorageCost = (double?) content.GetValueForProperty("MonthlyPremiumStorageCost",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).MonthlyPremiumStorageCost, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("MonthlyStandardSsdStorageCost"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).MonthlyStandardSsdStorageCost = (double?) content.GetValueForProperty("MonthlyStandardSsdStorageCost",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).MonthlyStandardSsdStorageCost, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("ConfidenceRatingInPercentage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).ConfidenceRatingInPercentage = (double?) content.GetValueForProperty("ConfidenceRatingInPercentage",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).ConfidenceRatingInPercentage, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("Disk"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).Disk = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesDisks) content.GetValueForProperty("Disk",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).Disk, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.AssessedMachinePropertiesDisksTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkAdapter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).NetworkAdapter = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachinePropertiesNetworkAdapters) content.GetValueForProperty("NetworkAdapter",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).NetworkAdapter, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.AssessedMachinePropertiesNetworkAdaptersTypeConverter.ConvertFrom);
            }
            if (content.Contains("RecommendedSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).RecommendedSize = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureVMSize?) content.GetValueForProperty("RecommendedSize",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).RecommendedSize, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureVMSize.CreateFrom);
            }
            if (content.Contains("NumberOfCoresForRecommendedSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).NumberOfCoresForRecommendedSize = (int?) content.GetValueForProperty("NumberOfCoresForRecommendedSize",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).NumberOfCoresForRecommendedSize, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("MegabytesOfMemoryForRecommendedSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).MegabytesOfMemoryForRecommendedSize = (double?) content.GetValueForProperty("MegabytesOfMemoryForRecommendedSize",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).MegabytesOfMemoryForRecommendedSize, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("MonthlyComputeCostForRecommendedSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).MonthlyComputeCostForRecommendedSize = (double?) content.GetValueForProperty("MonthlyComputeCostForRecommendedSize",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).MonthlyComputeCostForRecommendedSize, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("PercentageCoresUtilization"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).PercentageCoresUtilization = (double?) content.GetValueForProperty("PercentageCoresUtilization",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).PercentageCoresUtilization, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("PercentageMemoryUtilization"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).PercentageMemoryUtilization = (double?) content.GetValueForProperty("PercentageMemoryUtilization",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).PercentageMemoryUtilization, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("Suitability"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).Suitability = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.CloudSuitability?) content.GetValueForProperty("Suitability",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).Suitability, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.CloudSuitability.CreateFrom);
            }
            if (content.Contains("SuitabilityExplanation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).SuitabilityExplanation = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureVMSuitabilityExplanation?) content.GetValueForProperty("SuitabilityExplanation",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).SuitabilityExplanation, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureVMSuitabilityExplanation.CreateFrom);
            }
            if (content.Contains("SuitabilityDetail"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).SuitabilityDetail = (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureVMSuitabilityDetail?) content.GetValueForProperty("SuitabilityDetail",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).SuitabilityDetail, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureVMSuitabilityDetail.CreateFrom);
            }
            if (content.Contains("CreatedTimestamp"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).CreatedTimestamp = (global::System.DateTime?) content.GetValueForProperty("CreatedTimestamp",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).CreatedTimestamp, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("UpdatedTimestamp"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).UpdatedTimestamp = (global::System.DateTime?) content.GetValueForProperty("UpdatedTimestamp",((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachineInternal)this).UpdatedTimestamp, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.AssessedMachine"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachine" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachine DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new AssessedMachine(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.AssessedMachine"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachine" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachine DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new AssessedMachine(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="AssessedMachine" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="AssessedMachine" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedMachine FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// A machine evaluated as part of an assessment.
    [System.ComponentModel.TypeConverter(typeof(AssessedMachineTypeConverter))]
    public partial interface IAssessedMachine

    {

    }
}