// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Extensions;

    /// <summary>A disk assessed for an assessment.</summary>
    public partial class AssessedDisk
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject into a new instance of <see cref="AssessedDisk" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal AssessedDisk(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_name = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("name"), out var __jsonName) ? (string)__jsonName : (string)Name;}
            {_displayName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("displayName"), out var __jsonDisplayName) ? (string)__jsonDisplayName : (string)DisplayName;}
            {_gigabytesProvisioned = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber>("gigabytesProvisioned"), out var __jsonGigabytesProvisioned) ? (double?)__jsonGigabytesProvisioned : GigabytesProvisioned;}
            {_megabytesPerSecondOfRead = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber>("megabytesPerSecondOfRead"), out var __jsonMegabytesPerSecondOfRead) ? (double?)__jsonMegabytesPerSecondOfRead : MegabytesPerSecondOfRead;}
            {_megabytesPerSecondOfWrite = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber>("megabytesPerSecondOfWrite"), out var __jsonMegabytesPerSecondOfWrite) ? (double?)__jsonMegabytesPerSecondOfWrite : MegabytesPerSecondOfWrite;}
            {_numberOfReadOperationsPerSecond = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber>("numberOfReadOperationsPerSecond"), out var __jsonNumberOfReadOperationsPerSecond) ? (double?)__jsonNumberOfReadOperationsPerSecond : NumberOfReadOperationsPerSecond;}
            {_numberOfWriteOperationsPerSecond = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber>("numberOfWriteOperationsPerSecond"), out var __jsonNumberOfWriteOperationsPerSecond) ? (double?)__jsonNumberOfWriteOperationsPerSecond : NumberOfWriteOperationsPerSecond;}
            {_monthlyStorageCost = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber>("monthlyStorageCost"), out var __jsonMonthlyStorageCost) ? (double?)__jsonMonthlyStorageCost : MonthlyStorageCost;}
            {_recommendedDiskType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("recommendedDiskType"), out var __jsonRecommendedDiskType) ? (string)__jsonRecommendedDiskType : (string)RecommendedDiskType;}
            {_recommendedDiskSize = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("recommendedDiskSize"), out var __jsonRecommendedDiskSize) ? (string)__jsonRecommendedDiskSize : (string)RecommendedDiskSize;}
            {_gigabytesForRecommendedDiskSize = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber>("gigabytesForRecommendedDiskSize"), out var __jsonGigabytesForRecommendedDiskSize) ? (int?)__jsonGigabytesForRecommendedDiskSize : GigabytesForRecommendedDiskSize;}
            {_suitability = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("suitability"), out var __jsonSuitability) ? (string)__jsonSuitability : (string)Suitability;}
            {_suitabilityExplanation = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("suitabilityExplanation"), out var __jsonSuitabilityExplanation) ? (string)__jsonSuitabilityExplanation : (string)SuitabilityExplanation;}
            {_suitabilityDetail = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("suitabilityDetail"), out var __jsonSuitabilityDetail) ? (string)__jsonSuitabilityDetail : (string)SuitabilityDetail;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedDisk.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedDisk.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessedDisk FromJson(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject json ? new AssessedDisk(json) : null;
        }

        /// <summary>
        /// Serializes this instance of <see cref="AssessedDisk" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="AssessedDisk" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._name)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._name.ToString()) : null, "name" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._displayName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._displayName.ToString()) : null, "displayName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._gigabytesProvisioned ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber((double)this._gigabytesProvisioned) : null, "gigabytesProvisioned" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._megabytesPerSecondOfRead ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber((double)this._megabytesPerSecondOfRead) : null, "megabytesPerSecondOfRead" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._megabytesPerSecondOfWrite ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber((double)this._megabytesPerSecondOfWrite) : null, "megabytesPerSecondOfWrite" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._numberOfReadOperationsPerSecond ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber((double)this._numberOfReadOperationsPerSecond) : null, "numberOfReadOperationsPerSecond" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._numberOfWriteOperationsPerSecond ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber((double)this._numberOfWriteOperationsPerSecond) : null, "numberOfWriteOperationsPerSecond" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._monthlyStorageCost ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber((double)this._monthlyStorageCost) : null, "monthlyStorageCost" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._recommendedDiskType)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._recommendedDiskType.ToString()) : null, "recommendedDiskType" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._recommendedDiskSize)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._recommendedDiskSize.ToString()) : null, "recommendedDiskSize" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._gigabytesForRecommendedDiskSize ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber((int)this._gigabytesForRecommendedDiskSize) : null, "gigabytesForRecommendedDiskSize" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._suitability)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._suitability.ToString()) : null, "suitability" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._suitabilityExplanation)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._suitabilityExplanation.ToString()) : null, "suitabilityExplanation" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._suitabilityDetail)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._suitabilityDetail.ToString()) : null, "suitabilityDetail" ,container.Add );
            }
            AfterToJson(ref container);
            return container;
        }
    }
}