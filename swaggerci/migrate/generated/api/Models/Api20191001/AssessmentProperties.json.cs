// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Extensions;

    /// <summary>Properties of an assessment.</summary>
    public partial class AssessmentProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject into a new instance of <see cref="AssessmentProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal AssessmentProperties(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_vMUptime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject>("vmUptime"), out var __jsonVMUptime) ? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.VMUptime.FromJson(__jsonVMUptime) : VMUptime;}
            {_azureLocation = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("azureLocation"), out var __jsonAzureLocation) ? (string)__jsonAzureLocation : (string)AzureLocation;}
            {_azureOfferCode = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("azureOfferCode"), out var __jsonAzureOfferCode) ? (string)__jsonAzureOfferCode : (string)AzureOfferCode;}
            {_eaSubscriptionId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("eaSubscriptionId"), out var __jsonEaSubscriptionId) ? (string)__jsonEaSubscriptionId : (string)EaSubscriptionId;}
            {_azurePricingTier = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("azurePricingTier"), out var __jsonAzurePricingTier) ? (string)__jsonAzurePricingTier : (string)AzurePricingTier;}
            {_azureStorageRedundancy = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("azureStorageRedundancy"), out var __jsonAzureStorageRedundancy) ? (string)__jsonAzureStorageRedundancy : (string)AzureStorageRedundancy;}
            {_scalingFactor = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber>("scalingFactor"), out var __jsonScalingFactor) ? (double)__jsonScalingFactor : ScalingFactor;}
            {_percentile = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("percentile"), out var __jsonPercentile) ? (string)__jsonPercentile : (string)Percentile;}
            {_timeRange = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("timeRange"), out var __jsonTimeRange) ? (string)__jsonTimeRange : (string)TimeRange;}
            {_perfDataStartTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("perfDataStartTime"), out var __jsonPerfDataStartTime) ? global::System.DateTime.TryParse((string)__jsonPerfDataStartTime, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonPerfDataStartTimeValue) ? __jsonPerfDataStartTimeValue : PerfDataStartTime : PerfDataStartTime;}
            {_perfDataEndTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("perfDataEndTime"), out var __jsonPerfDataEndTime) ? global::System.DateTime.TryParse((string)__jsonPerfDataEndTime, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonPerfDataEndTimeValue) ? __jsonPerfDataEndTimeValue : PerfDataEndTime : PerfDataEndTime;}
            {_stage = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("stage"), out var __jsonStage) ? (string)__jsonStage : (string)Stage;}
            {_currency = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("currency"), out var __jsonCurrency) ? (string)__jsonCurrency : (string)Currency;}
            {_azureHybridUseBenefit = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("azureHybridUseBenefit"), out var __jsonAzureHybridUseBenefit) ? (string)__jsonAzureHybridUseBenefit : (string)AzureHybridUseBenefit;}
            {_discountPercentage = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber>("discountPercentage"), out var __jsonDiscountPercentage) ? (double)__jsonDiscountPercentage : DiscountPercentage;}
            {_confidenceRatingInPercentage = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber>("confidenceRatingInPercentage"), out var __jsonConfidenceRatingInPercentage) ? (double?)__jsonConfidenceRatingInPercentage : ConfidenceRatingInPercentage;}
            {_sizingCriterion = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("sizingCriterion"), out var __jsonSizingCriterion) ? (string)__jsonSizingCriterion : (string)SizingCriterion;}
            {_reservedInstance = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("reservedInstance"), out var __jsonReservedInstance) ? (string)__jsonReservedInstance : (string)ReservedInstance;}
            {_azureVMFamily = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonArray>("azureVmFamilies"), out var __jsonAzureVMFamilies) ? If( __jsonAzureVMFamilies as Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureVMFamily[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureVMFamily) (__u is Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString __t ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureVMFamily)(__t.ToString()) : ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureVMFamily)""))) ))() : null : AzureVMFamily;}
            {_azureDiskType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("azureDiskType"), out var __jsonAzureDiskType) ? (string)__jsonAzureDiskType : (string)AzureDiskType;}
            {_pricesTimestamp = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("pricesTimestamp"), out var __jsonPricesTimestamp) ? global::System.DateTime.TryParse((string)__jsonPricesTimestamp, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonPricesTimestampValue) ? __jsonPricesTimestampValue : PricesTimestamp : PricesTimestamp;}
            {_createdTimestamp = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("createdTimestamp"), out var __jsonCreatedTimestamp) ? global::System.DateTime.TryParse((string)__jsonCreatedTimestamp, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonCreatedTimestampValue) ? __jsonCreatedTimestampValue : CreatedTimestamp : CreatedTimestamp;}
            {_updatedTimestamp = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("updatedTimestamp"), out var __jsonUpdatedTimestamp) ? global::System.DateTime.TryParse((string)__jsonUpdatedTimestamp, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonUpdatedTimestampValue) ? __jsonUpdatedTimestampValue : UpdatedTimestamp : UpdatedTimestamp;}
            {_monthlyComputeCost = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber>("monthlyComputeCost"), out var __jsonMonthlyComputeCost) ? (double?)__jsonMonthlyComputeCost : MonthlyComputeCost;}
            {_monthlyBandwidthCost = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber>("monthlyBandwidthCost"), out var __jsonMonthlyBandwidthCost) ? (double?)__jsonMonthlyBandwidthCost : MonthlyBandwidthCost;}
            {_monthlyStorageCost = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber>("monthlyStorageCost"), out var __jsonMonthlyStorageCost) ? (double?)__jsonMonthlyStorageCost : MonthlyStorageCost;}
            {_monthlyPremiumStorageCost = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber>("monthlyPremiumStorageCost"), out var __jsonMonthlyPremiumStorageCost) ? (double?)__jsonMonthlyPremiumStorageCost : MonthlyPremiumStorageCost;}
            {_monthlyStandardSsdStorageCost = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber>("monthlyStandardSSDStorageCost"), out var __jsonMonthlyStandardSsdStorageCost) ? (double?)__jsonMonthlyStandardSsdStorageCost : MonthlyStandardSsdStorageCost;}
            {_status = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString>("status"), out var __jsonStatus) ? (string)__jsonStatus : (string)Status;}
            {_numberOfMachine = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber>("numberOfMachines"), out var __jsonNumberOfMachines) ? (int?)__jsonNumberOfMachines : NumberOfMachine;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessmentProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject json ? new AssessmentProperties(json) : null;
        }

        /// <summary>
        /// Serializes this instance of <see cref="AssessmentProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="AssessmentProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != this._vMUptime ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) this._vMUptime.ToJson(null,serializationMode) : null, "vmUptime" ,container.Add );
            AddIf( null != (((object)this._azureLocation)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._azureLocation.ToString()) : null, "azureLocation" ,container.Add );
            AddIf( null != (((object)this._azureOfferCode)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._azureOfferCode.ToString()) : null, "azureOfferCode" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._eaSubscriptionId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._eaSubscriptionId.ToString()) : null, "eaSubscriptionId" ,container.Add );
            }
            AddIf( null != (((object)this._azurePricingTier)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._azurePricingTier.ToString()) : null, "azurePricingTier" ,container.Add );
            AddIf( null != (((object)this._azureStorageRedundancy)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._azureStorageRedundancy.ToString()) : null, "azureStorageRedundancy" ,container.Add );
            AddIf( (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber(this._scalingFactor), "scalingFactor" ,container.Add );
            AddIf( null != (((object)this._percentile)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._percentile.ToString()) : null, "percentile" ,container.Add );
            AddIf( null != (((object)this._timeRange)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._timeRange.ToString()) : null, "timeRange" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._perfDataStartTime ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._perfDataStartTime?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "perfDataStartTime" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._perfDataEndTime ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._perfDataEndTime?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "perfDataEndTime" ,container.Add );
            }
            AddIf( null != (((object)this._stage)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._stage.ToString()) : null, "stage" ,container.Add );
            AddIf( null != (((object)this._currency)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._currency.ToString()) : null, "currency" ,container.Add );
            AddIf( null != (((object)this._azureHybridUseBenefit)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._azureHybridUseBenefit.ToString()) : null, "azureHybridUseBenefit" ,container.Add );
            AddIf( (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber(this._discountPercentage), "discountPercentage" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._confidenceRatingInPercentage ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber((double)this._confidenceRatingInPercentage) : null, "confidenceRatingInPercentage" ,container.Add );
            }
            AddIf( null != (((object)this._sizingCriterion)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._sizingCriterion.ToString()) : null, "sizingCriterion" ,container.Add );
            AddIf( null != (((object)this._reservedInstance)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._reservedInstance.ToString()) : null, "reservedInstance" ,container.Add );
            if (null != this._azureVMFamily)
            {
                var __w = new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.XNodeArray();
                foreach( var __x in this._azureVMFamily )
                {
                    AddIf(null != (((object)__x)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(__x.ToString()) : null ,__w.Add);
                }
                container.Add("azureVmFamilies",__w);
            }
            AddIf( null != (((object)this._azureDiskType)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._azureDiskType.ToString()) : null, "azureDiskType" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._pricesTimestamp ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._pricesTimestamp?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "pricesTimestamp" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._createdTimestamp ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._createdTimestamp?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "createdTimestamp" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._updatedTimestamp ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._updatedTimestamp?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "updatedTimestamp" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._monthlyComputeCost ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber((double)this._monthlyComputeCost) : null, "monthlyComputeCost" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._monthlyBandwidthCost ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber((double)this._monthlyBandwidthCost) : null, "monthlyBandwidthCost" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._monthlyStorageCost ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber((double)this._monthlyStorageCost) : null, "monthlyStorageCost" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._monthlyPremiumStorageCost ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber((double)this._monthlyPremiumStorageCost) : null, "monthlyPremiumStorageCost" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._monthlyStandardSsdStorageCost ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber((double)this._monthlyStandardSsdStorageCost) : null, "monthlyStandardSSDStorageCost" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._status)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonString(this._status.ToString()) : null, "status" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._numberOfMachine ? (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Json.JsonNumber((int)this._numberOfMachine) : null, "numberOfMachines" ,container.Add );
            }
            AfterToJson(ref container);
            return container;
        }
    }
}