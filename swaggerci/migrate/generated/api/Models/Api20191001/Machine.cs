// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Extensions;

    /// <summary>A machine in a migration project.</summary>
    public partial class Machine :
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachine,
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachineInternal,
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.IHeaderSerializable
    {

        /// <summary>Boot type of the machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.MachineBootType? BootType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)Property).BootType; }

        /// <summary>Time when this machine was created. Date-Time represented in ISO-8601 format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public global::System.DateTime? CreatedTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)Property).CreatedTimestamp; }

        /// <summary>ARM ID of the data center as tracked by the Microsoft.OffAzure.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public string DatacenterManagementServerArmId { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)Property).DatacenterManagementServerArmId; }

        /// <summary>Name of the server hosting the datacenter management solution.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public string DatacenterManagementServerName { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)Property).DatacenterManagementServerName; }

        /// <summary>Description of the machine</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public string Description { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)Property).Description; }

        /// <summary>ARM ID of the machine as tracked by the Microsoft.OffAzure.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public string DiscoveryMachineArmId { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)Property).DiscoveryMachineArmId; }

        /// <summary>
        /// Dictionary of disks attached to the machine. Key is ID of disk. Value is a disk object
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesDisks Disk { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)Property).Disk; }

        /// <summary>
        /// User readable name of the machine as defined by the user in their private datacenter.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public string DisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)Property).DisplayName; }

        /// <summary>Backing field for <see cref="ETag" /> property.</summary>
        private string _eTag;

        /// <summary>For optimistic concurrency control.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Owned)]
        public string ETag { get => this._eTag; set => this._eTag = value; }

        /// <summary>List of references to the groups that the machine is member of.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public string[] Group { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)Property).Group; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>
        /// Path reference to this machine. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/machines/{machineName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Owned)]
        public string Id { get => this._id; }

        /// <summary>Memory in Megabytes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public float? MegabytesOfMemory { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)Property).MegabytesOfMemory; }

        /// <summary>Internal Acessors for BootType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.MachineBootType? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachineInternal.BootType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)Property).BootType; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)Property).BootType = value; }

        /// <summary>Internal Acessors for CreatedTimestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachineInternal.CreatedTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)Property).CreatedTimestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)Property).CreatedTimestamp = value; }

        /// <summary>Internal Acessors for DatacenterManagementServerArmId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachineInternal.DatacenterManagementServerArmId { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)Property).DatacenterManagementServerArmId; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)Property).DatacenterManagementServerArmId = value; }

        /// <summary>Internal Acessors for DatacenterManagementServerName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachineInternal.DatacenterManagementServerName { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)Property).DatacenterManagementServerName; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)Property).DatacenterManagementServerName = value; }

        /// <summary>Internal Acessors for Description</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachineInternal.Description { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)Property).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)Property).Description = value; }

        /// <summary>Internal Acessors for DiscoveryMachineArmId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachineInternal.DiscoveryMachineArmId { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)Property).DiscoveryMachineArmId; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)Property).DiscoveryMachineArmId = value; }

        /// <summary>Internal Acessors for Disk</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesDisks Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachineInternal.Disk { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)Property).Disk; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)Property).Disk = value; }

        /// <summary>Internal Acessors for DisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachineInternal.DisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)Property).DisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)Property).DisplayName = value; }

        /// <summary>Internal Acessors for Group</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachineInternal.Group { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)Property).Group; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)Property).Group = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachineInternal.Id { get => this._id; set { {_id = value;} } }

        /// <summary>Internal Acessors for MegabytesOfMemory</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachineInternal.MegabytesOfMemory { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)Property).MegabytesOfMemory; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)Property).MegabytesOfMemory = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachineInternal.Name { get => this._name; set { {_name = value;} } }

        /// <summary>Internal Acessors for NetworkAdapter</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesNetworkAdapters Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachineInternal.NetworkAdapter { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)Property).NetworkAdapter; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)Property).NetworkAdapter = value; }

        /// <summary>Internal Acessors for NumberOfCore</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachineInternal.NumberOfCore { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)Property).NumberOfCore; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)Property).NumberOfCore = value; }

        /// <summary>Internal Acessors for OperatingSystemName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachineInternal.OperatingSystemName { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)Property).OperatingSystemName; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)Property).OperatingSystemName = value; }

        /// <summary>Internal Acessors for OperatingSystemType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachineInternal.OperatingSystemType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)Property).OperatingSystemType; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)Property).OperatingSystemType = value; }

        /// <summary>Internal Acessors for OperatingSystemVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachineInternal.OperatingSystemVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)Property).OperatingSystemVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)Property).OperatingSystemVersion = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachineProperties Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachineInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.MachineProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachineInternal.Type { get => this._type; set { {_type = value;} } }

        /// <summary>Internal Acessors for UpdatedTimestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachineInternal.UpdatedTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)Property).UpdatedTimestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)Property).UpdatedTimestamp = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>
        /// Name of the machine. It is a GUID which is unique identifier of machine in private data center. For user-readable name,
        /// we have a displayName property on this machine.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Owned)]
        public string Name { get => this._name; }

        /// <summary>
        /// Dictionary of network adapters attached to the machine. Key is ID of network adapter. Value is a network adapter object
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesNetworkAdapters NetworkAdapter { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)Property).NetworkAdapter; }

        /// <summary>Processor count.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public int? NumberOfCore { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)Property).NumberOfCore; }

        /// <summary>Operating System name of the machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public string OperatingSystemName { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)Property).OperatingSystemName; }

        /// <summary>Operating System type of the machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public string OperatingSystemType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)Property).OperatingSystemType; }

        /// <summary>Operating System version of the machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public string OperatingSystemVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)Property).OperatingSystemVersion; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachineProperties _property;

        /// <summary>Properties of the machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachineProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.MachineProperties()); set => this._property = value; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>Type of the object = [Microsoft.Migrate/assessmentProjects/machines].</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Owned)]
        public string Type { get => this._type; }

        /// <summary>
        /// Time when this machine was last updated. Date-Time represented in ISO-8601 format.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Inlined)]
        public global::System.DateTime? UpdatedTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesInternal)Property).UpdatedTimestamp; }

        /// <summary>Backing field for <see cref="XmsRequestId" /> property.</summary>
        private string _xmsRequestId;

        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Origin(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.PropertyOrigin.Owned)]
        public string XmsRequestId { get => this._xmsRequestId; set => this._xmsRequestId = value; }

        /// <summary>Creates an new <see cref="Machine" /> instance.</summary>
        public Machine()
        {

        }

        /// <param name="headers"></param>
        void Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.IHeaderSerializable.ReadHeaders(global::System.Net.Http.Headers.HttpResponseHeaders headers)
        {
            if (headers.TryGetValues("x-ms-request-id", out var __xMSRequestIdHeader0))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachineInternal)this).XmsRequestId = System.Linq.Enumerable.FirstOrDefault(__xMSRequestIdHeader0) is string __headerXMSRequestIdHeader0 ? __headerXMSRequestIdHeader0 : (string)null;
            }
        }
    }
    /// A machine in a migration project.
    public partial interface IMachine :
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.IJsonSerializable
    {
        /// <summary>Boot type of the machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Boot type of the machine.",
        SerializedName = @"bootType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.MachineBootType) })]
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.MachineBootType? BootType { get;  }
        /// <summary>Time when this machine was created. Date-Time represented in ISO-8601 format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Time when this machine was created. Date-Time represented in ISO-8601 format.",
        SerializedName = @"createdTimestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CreatedTimestamp { get;  }
        /// <summary>ARM ID of the data center as tracked by the Microsoft.OffAzure.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"ARM ID of the data center as tracked by the Microsoft.OffAzure.",
        SerializedName = @"datacenterManagementServerArmId",
        PossibleTypes = new [] { typeof(string) })]
        string DatacenterManagementServerArmId { get;  }
        /// <summary>Name of the server hosting the datacenter management solution.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Name of the server hosting the datacenter management solution.",
        SerializedName = @"datacenterManagementServerName",
        PossibleTypes = new [] { typeof(string) })]
        string DatacenterManagementServerName { get;  }
        /// <summary>Description of the machine</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Description of the machine",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get;  }
        /// <summary>ARM ID of the machine as tracked by the Microsoft.OffAzure.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"ARM ID of the machine as tracked by the Microsoft.OffAzure.",
        SerializedName = @"discoveryMachineArmId",
        PossibleTypes = new [] { typeof(string) })]
        string DiscoveryMachineArmId { get;  }
        /// <summary>
        /// Dictionary of disks attached to the machine. Key is ID of disk. Value is a disk object
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Dictionary of disks attached to the machine. Key is ID of disk. Value is a disk object",
        SerializedName = @"disks",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesDisks) })]
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesDisks Disk { get;  }
        /// <summary>
        /// User readable name of the machine as defined by the user in their private datacenter.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"User readable name of the machine as defined by the user in their private datacenter.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get;  }
        /// <summary>For optimistic concurrency control.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"For optimistic concurrency control.",
        SerializedName = @"eTag",
        PossibleTypes = new [] { typeof(string) })]
        string ETag { get; set; }
        /// <summary>List of references to the groups that the machine is member of.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of references to the groups that the machine is member of.",
        SerializedName = @"groups",
        PossibleTypes = new [] { typeof(string) })]
        string[] Group { get;  }
        /// <summary>
        /// Path reference to this machine. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/machines/{machineName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Path reference to this machine. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/machines/{machineName}",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get;  }
        /// <summary>Memory in Megabytes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Memory in Megabytes.",
        SerializedName = @"megabytesOfMemory",
        PossibleTypes = new [] { typeof(float) })]
        float? MegabytesOfMemory { get;  }
        /// <summary>
        /// Name of the machine. It is a GUID which is unique identifier of machine in private data center. For user-readable name,
        /// we have a displayName property on this machine.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Name of the machine. It is a GUID which is unique identifier of machine in private data center. For user-readable name, we have a displayName property on this machine.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get;  }
        /// <summary>
        /// Dictionary of network adapters attached to the machine. Key is ID of network adapter. Value is a network adapter object
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Dictionary of network adapters attached to the machine. Key is ID of network adapter. Value is a network adapter object",
        SerializedName = @"networkAdapters",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesNetworkAdapters) })]
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesNetworkAdapters NetworkAdapter { get;  }
        /// <summary>Processor count.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Processor count.",
        SerializedName = @"numberOfCores",
        PossibleTypes = new [] { typeof(int) })]
        int? NumberOfCore { get;  }
        /// <summary>Operating System name of the machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Operating System name of the machine.",
        SerializedName = @"operatingSystemName",
        PossibleTypes = new [] { typeof(string) })]
        string OperatingSystemName { get;  }
        /// <summary>Operating System type of the machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Operating System type of the machine.",
        SerializedName = @"operatingSystemType",
        PossibleTypes = new [] { typeof(string) })]
        string OperatingSystemType { get;  }
        /// <summary>Operating System version of the machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Operating System version of the machine.",
        SerializedName = @"operatingSystemVersion",
        PossibleTypes = new [] { typeof(string) })]
        string OperatingSystemVersion { get;  }
        /// <summary>Type of the object = [Microsoft.Migrate/assessmentProjects/machines].</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Type of the object = [Microsoft.Migrate/assessmentProjects/machines].",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get;  }
        /// <summary>
        /// Time when this machine was last updated. Date-Time represented in ISO-8601 format.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Time when this machine was last updated. Date-Time represented in ISO-8601 format.",
        SerializedName = @"updatedTimestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? UpdatedTimestamp { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"x-ms-request-id",
        PossibleTypes = new [] { typeof(string) })]
        string XmsRequestId { get; set; }

    }
    /// A machine in a migration project.
    internal partial interface IMachineInternal

    {
        /// <summary>Boot type of the machine.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.MachineBootType? BootType { get; set; }
        /// <summary>Time when this machine was created. Date-Time represented in ISO-8601 format.</summary>
        global::System.DateTime? CreatedTimestamp { get; set; }
        /// <summary>ARM ID of the data center as tracked by the Microsoft.OffAzure.</summary>
        string DatacenterManagementServerArmId { get; set; }
        /// <summary>Name of the server hosting the datacenter management solution.</summary>
        string DatacenterManagementServerName { get; set; }
        /// <summary>Description of the machine</summary>
        string Description { get; set; }
        /// <summary>ARM ID of the machine as tracked by the Microsoft.OffAzure.</summary>
        string DiscoveryMachineArmId { get; set; }
        /// <summary>
        /// Dictionary of disks attached to the machine. Key is ID of disk. Value is a disk object
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesDisks Disk { get; set; }
        /// <summary>
        /// User readable name of the machine as defined by the user in their private datacenter.
        /// </summary>
        string DisplayName { get; set; }
        /// <summary>For optimistic concurrency control.</summary>
        string ETag { get; set; }
        /// <summary>List of references to the groups that the machine is member of.</summary>
        string[] Group { get; set; }
        /// <summary>
        /// Path reference to this machine. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/machines/{machineName}
        /// </summary>
        string Id { get; set; }
        /// <summary>Memory in Megabytes.</summary>
        float? MegabytesOfMemory { get; set; }
        /// <summary>
        /// Name of the machine. It is a GUID which is unique identifier of machine in private data center. For user-readable name,
        /// we have a displayName property on this machine.
        /// </summary>
        string Name { get; set; }
        /// <summary>
        /// Dictionary of network adapters attached to the machine. Key is ID of network adapter. Value is a network adapter object
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachinePropertiesNetworkAdapters NetworkAdapter { get; set; }
        /// <summary>Processor count.</summary>
        int? NumberOfCore { get; set; }
        /// <summary>Operating System name of the machine.</summary>
        string OperatingSystemName { get; set; }
        /// <summary>Operating System type of the machine.</summary>
        string OperatingSystemType { get; set; }
        /// <summary>Operating System version of the machine.</summary>
        string OperatingSystemVersion { get; set; }
        /// <summary>Properties of the machine.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IMachineProperties Property { get; set; }
        /// <summary>Type of the object = [Microsoft.Migrate/assessmentProjects/machines].</summary>
        string Type { get; set; }
        /// <summary>
        /// Time when this machine was last updated. Date-Time represented in ISO-8601 format.
        /// </summary>
        global::System.DateTime? UpdatedTimestamp { get; set; }

        string XmsRequestId { get; set; }

    }
}