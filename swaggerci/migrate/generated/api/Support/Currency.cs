// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support
{

    /// <summary>Currency to report prices in.</summary>
    public partial struct Currency :
        System.IEquatable<Currency>
    {
        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Currency Ars = @"ARS";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Currency Aud = @"AUD";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Currency Brl = @"BRL";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Currency Cad = @"CAD";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Currency Chf = @"CHF";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Currency Cny = @"CNY";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Currency Dkk = @"DKK";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Currency Eur = @"EUR";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Currency Gbp = @"GBP";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Currency Hkd = @"HKD";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Currency Idr = @"IDR";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Currency Inr = @"INR";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Currency Jpy = @"JPY";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Currency Krw = @"KRW";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Currency Mxn = @"MXN";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Currency Myr = @"MYR";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Currency Nok = @"NOK";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Currency Nzd = @"NZD";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Currency Rub = @"RUB";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Currency Sar = @"SAR";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Currency Sek = @"SEK";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Currency Try = @"TRY";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Currency Twd = @"TWD";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Currency Unknown = @"Unknown";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Currency Usd = @"USD";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Currency Zar = @"ZAR";

        /// <summary>the value for an instance of the <see cref="Currency" /> Enum.</summary>
        private string _value { get; set; }

        /// <summary>Conversion from arbitrary object to Currency</summary>
        /// <param name="value">the value to convert to an instance of <see cref="Currency" />.</param>
        internal static object CreateFrom(object value)
        {
            return new Currency(global::System.Convert.ToString(value));
        }

        /// <summary>Creates an instance of the <see cref="Currency"/> Enum class.</summary>
        /// <param name="underlyingValue">the value to create an instance for.</param>
        private Currency(string underlyingValue)
        {
            this._value = underlyingValue;
        }

        /// <summary>Compares values of enum type Currency</summary>
        /// <param name="e">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public bool Equals(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Currency e)
        {
            return _value.Equals(e._value);
        }

        /// <summary>Compares values of enum type Currency (override for Object)</summary>
        /// <param name="obj">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public override bool Equals(object obj)
        {
            return obj is Currency && Equals((Currency)obj);
        }

        /// <summary>Returns hashCode for enum Currency</summary>
        /// <returns>The hashCode of the value</returns>
        public override int GetHashCode()
        {
            return this._value.GetHashCode();
        }

        /// <summary>Returns string representation for Currency</summary>
        /// <returns>A string for this value.</returns>
        public override string ToString()
        {
            return this._value;
        }

        /// <summary>Implicit operator to convert string to Currency</summary>
        /// <param name="value">the value to convert to an instance of <see cref="Currency" />.</param>

        public static implicit operator Currency(string value)
        {
            return new Currency(value);
        }

        /// <summary>Implicit operator to convert Currency to string</summary>
        /// <param name="e">the value to convert to an instance of <see cref="Currency" />.</param>

        public static implicit operator string(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Currency e)
        {
            return e._value;
        }

        /// <summary>Overriding != operator for enum Currency</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are not equal to the same value</returns>
        public static bool operator !=(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Currency e1, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Currency e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>Overriding == operator for enum Currency</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public static bool operator ==(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Currency e1, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Currency e2)
        {
            return e2.Equals(e1);
        }
    }
}