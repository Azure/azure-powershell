// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support
{

    /// <summary>
    /// Recommended Azure size for the disk, given utilization data and preferences set on Assessment.
    /// </summary>
    public partial struct AzureDiskSize :
        System.IEquatable<AzureDiskSize>
    {
        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureDiskSize PremiumP10 = @"Premium_P10";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureDiskSize PremiumP15 = @"Premium_P15";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureDiskSize PremiumP20 = @"Premium_P20";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureDiskSize PremiumP30 = @"Premium_P30";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureDiskSize PremiumP4 = @"Premium_P4";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureDiskSize PremiumP40 = @"Premium_P40";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureDiskSize PremiumP50 = @"Premium_P50";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureDiskSize PremiumP6 = @"Premium_P6";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureDiskSize PremiumP60 = @"Premium_P60";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureDiskSize PremiumP70 = @"Premium_P70";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureDiskSize PremiumP80 = @"Premium_P80";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureDiskSize StandardS10 = @"Standard_S10";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureDiskSize StandardS15 = @"Standard_S15";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureDiskSize StandardS20 = @"Standard_S20";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureDiskSize StandardS30 = @"Standard_S30";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureDiskSize StandardS4 = @"Standard_S4";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureDiskSize StandardS40 = @"Standard_S40";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureDiskSize StandardS50 = @"Standard_S50";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureDiskSize StandardS6 = @"Standard_S6";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureDiskSize StandardS60 = @"Standard_S60";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureDiskSize StandardS70 = @"Standard_S70";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureDiskSize StandardS80 = @"Standard_S80";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureDiskSize StandardSsdE10 = @"StandardSSD_E10";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureDiskSize StandardSsdE15 = @"StandardSSD_E15";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureDiskSize StandardSsdE20 = @"StandardSSD_E20";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureDiskSize StandardSsdE30 = @"StandardSSD_E30";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureDiskSize StandardSsdE4 = @"StandardSSD_E4";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureDiskSize StandardSsdE40 = @"StandardSSD_E40";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureDiskSize StandardSsdE50 = @"StandardSSD_E50";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureDiskSize StandardSsdE6 = @"StandardSSD_E6";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureDiskSize StandardSsdE60 = @"StandardSSD_E60";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureDiskSize StandardSsdE70 = @"StandardSSD_E70";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureDiskSize StandardSsdE80 = @"StandardSSD_E80";

        public static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureDiskSize Unknown = @"Unknown";

        /// <summary>the value for an instance of the <see cref="AzureDiskSize" /> Enum.</summary>
        private string _value { get; set; }

        /// <summary>Creates an instance of the <see cref="AzureDiskSize"/> Enum class.</summary>
        /// <param name="underlyingValue">the value to create an instance for.</param>
        private AzureDiskSize(string underlyingValue)
        {
            this._value = underlyingValue;
        }

        /// <summary>Conversion from arbitrary object to AzureDiskSize</summary>
        /// <param name="value">the value to convert to an instance of <see cref="AzureDiskSize" />.</param>
        internal static object CreateFrom(object value)
        {
            return new AzureDiskSize(global::System.Convert.ToString(value));
        }

        /// <summary>Compares values of enum type AzureDiskSize</summary>
        /// <param name="e">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public bool Equals(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureDiskSize e)
        {
            return _value.Equals(e._value);
        }

        /// <summary>Compares values of enum type AzureDiskSize (override for Object)</summary>
        /// <param name="obj">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public override bool Equals(object obj)
        {
            return obj is AzureDiskSize && Equals((AzureDiskSize)obj);
        }

        /// <summary>Returns hashCode for enum AzureDiskSize</summary>
        /// <returns>The hashCode of the value</returns>
        public override int GetHashCode()
        {
            return this._value.GetHashCode();
        }

        /// <summary>Returns string representation for AzureDiskSize</summary>
        /// <returns>A string for this value.</returns>
        public override string ToString()
        {
            return this._value;
        }

        /// <summary>Implicit operator to convert string to AzureDiskSize</summary>
        /// <param name="value">the value to convert to an instance of <see cref="AzureDiskSize" />.</param>

        public static implicit operator AzureDiskSize(string value)
        {
            return new AzureDiskSize(value);
        }

        /// <summary>Implicit operator to convert AzureDiskSize to string</summary>
        /// <param name="e">the value to convert to an instance of <see cref="AzureDiskSize" />.</param>

        public static implicit operator string(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureDiskSize e)
        {
            return e._value;
        }

        /// <summary>Overriding != operator for enum AzureDiskSize</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are not equal to the same value</returns>
        public static bool operator !=(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureDiskSize e1, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureDiskSize e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>Overriding == operator for enum AzureDiskSize</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public static bool operator ==(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureDiskSize e1, Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureDiskSize e2)
        {
            return e2.Equals(e1);
        }
    }
}