// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Cmdlets
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Extensions;
    using System;

    /// <summary>
    /// Create a new assessment with the given name and the specified settings. Since name of an assessment in a project is a
    /// unique identifier, if an assessment with the name provided already exists, then the existing assessment is updated.\n\nAny
    /// PUT operation, resulting in either create or update on an assessment, will cause the assessment to go in a \"InProgress\"
    /// state. This will be indicated by the field 'computationState' on the Assessment object. During this time no other PUT
    /// operation will be allowed on that assessment object, nor will a Delete operation. Once the computation for the assessment
    /// is complete, the field 'computationState' will be updated to 'Ready', and then other PUT or DELETE operations can happen
    /// on the assessment.\n\nWhen assessment is under computation, any PUT will lead to a 400 - Bad Request error.\n
    /// </summary>
    /// <remarks>
    /// [OpenAPI] Create=>PUT:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/groups/{groupName}/assessments/{assessmentName}"
    /// </remarks>
    [global::System.Management.Automation.Cmdlet(global::System.Management.Automation.VerbsCommon.New, @"AzMigrateV2Assessment_CreateExpanded", SupportsShouldProcess = true)]
    [global::System.Management.Automation.OutputType(typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessment))]
    [global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Description(@"Create a new assessment with the given name and the specified settings. Since name of an assessment in a project is a unique identifier, if an assessment with the name provided already exists, then the existing assessment is updated.\n\nAny PUT operation, resulting in either create or update on an assessment, will cause the assessment to go in a \""InProgress\"" state. This will be indicated by the field 'computationState' on the Assessment object. During this time no other PUT operation will be allowed on that assessment object, nor will a Delete operation. Once the computation for the assessment is complete, the field 'computationState' will be updated to 'Ready', and then other PUT or DELETE operations can happen on the assessment.\n\nWhen assessment is under computation, any PUT will lead to a 400 - Bad Request error.\n")]
    [global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Generated]
    public partial class NewAzMigrateV2Assessment_CreateExpanded : global::System.Management.Automation.PSCmdlet,
        Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.IEventListener
    {
        /// <summary>A unique id generatd for the this cmdlet when it is instantiated.</summary>
        private string __correlationId = System.Guid.NewGuid().ToString();

        /// <summary>A copy of the Invocation Info (necessary to allow asJob to clone this cmdlet)</summary>
        private global::System.Management.Automation.InvocationInfo __invocationInfo;

        /// <summary>A unique id generatd for the this cmdlet when ProcessRecord() is called.</summary>
        private string __processRecordId;

        /// <summary>An assessment created for a group in the Migration project.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessment _assessmentBody = new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.Assessment();

        /// <summary>
        /// The <see cref="global::System.Threading.CancellationTokenSource" /> for this operation.
        /// </summary>
        private global::System.Threading.CancellationTokenSource _cancellationTokenSource = new global::System.Threading.CancellationTokenSource();

        /// <summary>Storage type selected for this disk.</summary>
        [global::System.Management.Automation.Parameter(Mandatory = true, HelpMessage = "Storage type selected for this disk.")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Category(global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Storage type selected for this disk.",
        SerializedName = @"azureDiskType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureDiskType) })]
        [global::System.Management.Automation.ArgumentCompleter(typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureDiskType))]
        public Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureDiskType AzureDiskType { get => _assessmentBody.AzureDiskType; set => _assessmentBody.AzureDiskType = value; }

        /// <summary>AHUB discount on windows virtual machines.</summary>
        [global::System.Management.Automation.Parameter(Mandatory = true, HelpMessage = "AHUB discount on windows virtual machines.")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Category(global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"AHUB discount on windows virtual machines.",
        SerializedName = @"azureHybridUseBenefit",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureHybridUseBenefit) })]
        [global::System.Management.Automation.ArgumentCompleter(typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureHybridUseBenefit))]
        public Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureHybridUseBenefit AzureHybridUseBenefit { get => _assessmentBody.AzureHybridUseBenefit; set => _assessmentBody.AzureHybridUseBenefit = value; }

        /// <summary>
        /// Target Azure location for which the machines should be assessed. These enums are the same as used by Compute API.
        /// </summary>
        [global::System.Management.Automation.Parameter(Mandatory = true, HelpMessage = "Target Azure location for which the machines should be assessed. These enums are the same as used by Compute API.")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Category(global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Target Azure location for which the machines should be assessed. These enums are the same as used by Compute API.",
        SerializedName = @"azureLocation",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureLocation) })]
        [global::System.Management.Automation.ArgumentCompleter(typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureLocation))]
        public Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureLocation AzureLocation { get => _assessmentBody.AzureLocation; set => _assessmentBody.AzureLocation = value; }

        /// <summary>Offer code according to which cost estimation is done.</summary>
        [global::System.Management.Automation.Parameter(Mandatory = true, HelpMessage = "Offer code according to which cost estimation is done.")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Category(global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Offer code according to which cost estimation is done.",
        SerializedName = @"azureOfferCode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureOfferCode) })]
        [global::System.Management.Automation.ArgumentCompleter(typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureOfferCode))]
        public Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureOfferCode AzureOfferCode { get => _assessmentBody.AzureOfferCode; set => _assessmentBody.AzureOfferCode = value; }

        /// <summary>Pricing tier for Size evaluation.</summary>
        [global::System.Management.Automation.Parameter(Mandatory = true, HelpMessage = "Pricing tier for Size evaluation.")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Category(global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Pricing tier for Size evaluation.",
        SerializedName = @"azurePricingTier",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzurePricingTier) })]
        [global::System.Management.Automation.ArgumentCompleter(typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzurePricingTier))]
        public Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzurePricingTier AzurePricingTier { get => _assessmentBody.AzurePricingTier; set => _assessmentBody.AzurePricingTier = value; }

        /// <summary>Storage Redundancy type offered by Azure.</summary>
        [global::System.Management.Automation.Parameter(Mandatory = true, HelpMessage = "Storage Redundancy type offered by Azure.")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Category(global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Storage Redundancy type offered by Azure.",
        SerializedName = @"azureStorageRedundancy",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureStorageRedundancy) })]
        [global::System.Management.Automation.ArgumentCompleter(typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureStorageRedundancy))]
        public Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureStorageRedundancy AzureStorageRedundancy { get => _assessmentBody.AzureStorageRedundancy; set => _assessmentBody.AzureStorageRedundancy = value; }

        /// <summary>List of azure VM families.</summary>
        [global::System.Management.Automation.AllowEmptyCollection]
        [global::System.Management.Automation.Parameter(Mandatory = true, HelpMessage = "List of azure VM families.")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Category(global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"List of azure VM families.",
        SerializedName = @"azureVmFamilies",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureVMFamily) })]
        [global::System.Management.Automation.ArgumentCompleter(typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureVMFamily))]
        public Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AzureVMFamily[] AzureVMFamily { get => _assessmentBody.AzureVMFamily ?? null /* arrayOf */; set => _assessmentBody.AzureVMFamily = value; }

        /// <summary>Wait for .NET debugger to attach</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, DontShow = true, HelpMessage = "Wait for .NET debugger to attach")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Category(global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.ParameterCategory.Runtime)]
        public global::System.Management.Automation.SwitchParameter Break { get; set; }

        /// <summary>The reference to the client API class.</summary>
        public Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.AzureMigrateV2 Client => Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Module.Instance.ClientAPI;

        /// <summary>Currency to report prices in.</summary>
        [global::System.Management.Automation.Parameter(Mandatory = true, HelpMessage = "Currency to report prices in.")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Category(global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Currency to report prices in.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Currency) })]
        [global::System.Management.Automation.ArgumentCompleter(typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Currency))]
        public Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Currency Currency { get => _assessmentBody.Currency; set => _assessmentBody.Currency = value; }

        /// <summary>
        /// The credentials, account, tenant, and subscription used for communication with Azure
        /// </summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "The credentials, account, tenant, and subscription used for communication with Azure.")]
        [global::System.Management.Automation.ValidateNotNull]
        [global::System.Management.Automation.Alias("AzureRMContext", "AzureCredential")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Category(global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.ParameterCategory.Azure)]
        public global::System.Management.Automation.PSObject DefaultProfile { get; set; }

        /// <summary>
        /// Custom discount percentage to be applied on final costs. Can be in the range [0, 100].
        /// </summary>
        [global::System.Management.Automation.Parameter(Mandatory = true, HelpMessage = "Custom discount percentage to be applied on final costs. Can be in the range [0, 100].")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Category(global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Custom discount percentage to be applied on final costs. Can be in the range [0, 100].",
        SerializedName = @"discountPercentage",
        PossibleTypes = new [] { typeof(double) })]
        public double DiscountPercentage { get => _assessmentBody.DiscountPercentage; set => _assessmentBody.DiscountPercentage = value; }

        /// <summary>For optimistic concurrency control.</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "For optimistic concurrency control.")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Category(global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"For optimistic concurrency control.",
        SerializedName = @"eTag",
        PossibleTypes = new [] { typeof(string) })]
        public string ETag { get => _assessmentBody.ETag ?? null; set => _assessmentBody.ETag = value; }

        /// <summary>Backing field for <see cref="GroupName" /> property.</summary>
        private string _groupName;

        /// <summary>Unique name of a group within a project.</summary>
        [global::System.Management.Automation.Parameter(Mandatory = true, HelpMessage = "Unique name of a group within a project.")]
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Unique name of a group within a project.",
        SerializedName = @"groupName",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Category(global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.ParameterCategory.Path)]
        public string GroupName { get => this._groupName; set => this._groupName = value; }

        /// <summary>SendAsync Pipeline Steps to be appended to the front of the pipeline</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, DontShow = true, HelpMessage = "SendAsync Pipeline Steps to be appended to the front of the pipeline")]
        [global::System.Management.Automation.ValidateNotNull]
        [global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Category(global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.ParameterCategory.Runtime)]
        public Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SendAsyncStep[] HttpPipelineAppend { get; set; }

        /// <summary>SendAsync Pipeline Steps to be prepended to the front of the pipeline</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, DontShow = true, HelpMessage = "SendAsync Pipeline Steps to be prepended to the front of the pipeline")]
        [global::System.Management.Automation.ValidateNotNull]
        [global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Category(global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.ParameterCategory.Runtime)]
        public Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.SendAsyncStep[] HttpPipelinePrepend { get; set; }

        /// <summary>Accessor for our copy of the InvocationInfo.</summary>
        public global::System.Management.Automation.InvocationInfo InvocationInformation { get => __invocationInfo = __invocationInfo ?? this.MyInvocation ; set { __invocationInfo = value; } }

        /// <summary>
        /// <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.IEventListener" /> cancellation delegate. Stops the cmdlet when called.
        /// </summary>
        global::System.Action Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.IEventListener.Cancel => _cancellationTokenSource.Cancel;

        /// <summary><see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.IEventListener" /> cancellation token.</summary>
        global::System.Threading.CancellationToken Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.IEventListener.Token => _cancellationTokenSource.Token;

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Unique name of an assessment within a project.</summary>
        [global::System.Management.Automation.Parameter(Mandatory = true, HelpMessage = "Unique name of an assessment within a project.")]
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Unique name of an assessment within a project.",
        SerializedName = @"assessmentName",
        PossibleTypes = new [] { typeof(string) })]
        [global::System.Management.Automation.Alias("AssessmentName")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Category(global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.ParameterCategory.Path)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Percentile of performance data used to recommend Azure size.</summary>
        [global::System.Management.Automation.Parameter(Mandatory = true, HelpMessage = "Percentile of performance data used to recommend Azure size.")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Category(global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Percentile of performance data used to recommend Azure size.",
        SerializedName = @"percentile",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Percentile) })]
        [global::System.Management.Automation.ArgumentCompleter(typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Percentile))]
        public Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.Percentile Percentile { get => _assessmentBody.Percentile; set => _assessmentBody.Percentile = value; }

        /// <summary>
        /// The instance of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.HttpPipeline" /> that the remote call will use.
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.HttpPipeline Pipeline { get; set; }

        /// <summary>Backing field for <see cref="ProjectName" /> property.</summary>
        private string _projectName;

        /// <summary>Name of the Azure Migrate project.</summary>
        [global::System.Management.Automation.Parameter(Mandatory = true, HelpMessage = "Name of the Azure Migrate project.")]
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Name of the Azure Migrate project.",
        SerializedName = @"projectName",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Category(global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.ParameterCategory.Path)]
        public string ProjectName { get => this._projectName; set => this._projectName = value; }

        /// <summary>The URI for the proxy server to use</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, DontShow = true, HelpMessage = "The URI for the proxy server to use")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Category(global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.ParameterCategory.Runtime)]
        public global::System.Uri Proxy { get; set; }

        /// <summary>Credentials for a proxy server to use for the remote call</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, DontShow = true, HelpMessage = "Credentials for a proxy server to use for the remote call")]
        [global::System.Management.Automation.ValidateNotNull]
        [global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Category(global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.ParameterCategory.Runtime)]
        public global::System.Management.Automation.PSCredential ProxyCredential { get; set; }

        /// <summary>Use the default credentials for the proxy</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, DontShow = true, HelpMessage = "Use the default credentials for the proxy")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Category(global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.ParameterCategory.Runtime)]
        public global::System.Management.Automation.SwitchParameter ProxyUseDefaultCredentials { get; set; }

        /// <summary>Azure reserved instance.</summary>
        [global::System.Management.Automation.Parameter(Mandatory = true, HelpMessage = "Azure reserved instance.")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Category(global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Azure reserved instance.",
        SerializedName = @"reservedInstance",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.ReservedInstance) })]
        [global::System.Management.Automation.ArgumentCompleter(typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.ReservedInstance))]
        public Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.ReservedInstance ReservedInstance { get => _assessmentBody.ReservedInstance; set => _assessmentBody.ReservedInstance = value; }

        /// <summary>Backing field for <see cref="ResourceGroupName" /> property.</summary>
        private string _resourceGroupName;

        /// <summary>Name of the Azure Resource Group that project is part of.</summary>
        [global::System.Management.Automation.Parameter(Mandatory = true, HelpMessage = "Name of the Azure Resource Group that project is part of.")]
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Name of the Azure Resource Group that project is part of.",
        SerializedName = @"resourceGroupName",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Category(global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.ParameterCategory.Path)]
        public string ResourceGroupName { get => this._resourceGroupName; set => this._resourceGroupName = value; }

        /// <summary>
        /// Scaling factor used over utilization data to add a performance buffer for new machines to be created in Azure. Min Value
        /// = 1.0, Max value = 1.9, Default = 1.3.
        /// </summary>
        [global::System.Management.Automation.Parameter(Mandatory = true, HelpMessage = "Scaling factor used over utilization data to add a performance buffer for new machines to be created in Azure. Min Value = 1.0, Max value = 1.9, Default = 1.3.")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Category(global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Scaling factor used over utilization data to add a performance buffer for new machines to be created in Azure. Min Value = 1.0, Max value = 1.9, Default = 1.3.",
        SerializedName = @"scalingFactor",
        PossibleTypes = new [] { typeof(double) })]
        public double ScalingFactor { get => _assessmentBody.ScalingFactor; set => _assessmentBody.ScalingFactor = value; }

        /// <summary>Assessment sizing criterion.</summary>
        [global::System.Management.Automation.Parameter(Mandatory = true, HelpMessage = "Assessment sizing criterion.")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Category(global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Assessment sizing criterion.",
        SerializedName = @"sizingCriterion",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AssessmentSizingCriterion) })]
        [global::System.Management.Automation.ArgumentCompleter(typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AssessmentSizingCriterion))]
        public Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AssessmentSizingCriterion SizingCriterion { get => _assessmentBody.SizingCriterion; set => _assessmentBody.SizingCriterion = value; }

        /// <summary>User configurable setting that describes the status of the assessment.</summary>
        [global::System.Management.Automation.Parameter(Mandatory = true, HelpMessage = "User configurable setting that describes the status of the assessment.")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Category(global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"User configurable setting that describes the status of the assessment.",
        SerializedName = @"stage",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AssessmentStage) })]
        [global::System.Management.Automation.ArgumentCompleter(typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AssessmentStage))]
        public Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.AssessmentStage Stage { get => _assessmentBody.Stage; set => _assessmentBody.Stage = value; }

        /// <summary>Backing field for <see cref="SubscriptionId" /> property.</summary>
        private string _subscriptionId;

        /// <summary>Azure Subscription Id in which project was created.</summary>
        [global::System.Management.Automation.Parameter(Mandatory = true, HelpMessage = "Azure Subscription Id in which project was created.")]
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Azure Subscription Id in which project was created.",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.DefaultInfo(
        Name = @"",
        Description =@"",
        Script = @"(Get-AzContext).Subscription.Id")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Category(global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.ParameterCategory.Path)]
        public string SubscriptionId { get => this._subscriptionId; set => this._subscriptionId = value; }

        /// <summary>Time range of performance data used to recommend a size.</summary>
        [global::System.Management.Automation.Parameter(Mandatory = true, HelpMessage = "Time range of performance data used to recommend a size.")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Category(global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Time range of performance data used to recommend a size.",
        SerializedName = @"timeRange",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.TimeRange) })]
        [global::System.Management.Automation.ArgumentCompleter(typeof(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.TimeRange))]
        public Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Support.TimeRange TimeRange { get => _assessmentBody.TimeRange; set => _assessmentBody.TimeRange = value; }

        /// <summary>Number of days in a month for VM uptime.</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Number of days in a month for VM uptime.")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Category(global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of days in a month for VM uptime.",
        SerializedName = @"daysPerMonth",
        PossibleTypes = new [] { typeof(int) })]
        public int VMUptimeDaysPerMonth { get => _assessmentBody.VMUptimeDaysPerMonth ?? default(int); set => _assessmentBody.VMUptimeDaysPerMonth = value; }

        /// <summary>Number of hours per day for VM uptime.</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Number of hours per day for VM uptime.")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Category(global::Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of hours per day for VM uptime.",
        SerializedName = @"hoursPerDay",
        PossibleTypes = new [] { typeof(int) })]
        public int VMUptimeHoursPerDay { get => _assessmentBody.VMUptimeHoursPerDay ?? default(int); set => _assessmentBody.VMUptimeHoursPerDay = value; }

        /// <summary>
        /// <c>overrideOnCreated</c> will be called before the regular onCreated has been processed, allowing customization of what
        /// happens on that response. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="responseMessage">the raw response message as an global::System.Net.Http.HttpResponseMessage.</param>
        /// <param name="response">the body result as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessment">Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessment</see>
        /// from the remote call</param>
        /// <param name="returnNow">/// Determines if the rest of the onCreated method should be processed, or if the method should
        /// return immediately (set to true to skip further processing )</param>

        partial void overrideOnCreated(global::System.Net.Http.HttpResponseMessage responseMessage, global::System.Threading.Tasks.Task<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessment> response, ref global::System.Threading.Tasks.Task<bool> returnNow);

        /// <summary>
        /// <c>overrideOnDefault</c> will be called before the regular onDefault has been processed, allowing customization of what
        /// happens on that response. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="responseMessage">the raw response message as an global::System.Net.Http.HttpResponseMessage.</param>
        /// <param name="response">the body result as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.ICloudError">Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.ICloudError</see>
        /// from the remote call</param>
        /// <param name="returnNow">/// Determines if the rest of the onDefault method should be processed, or if the method should
        /// return immediately (set to true to skip further processing )</param>

        partial void overrideOnDefault(global::System.Net.Http.HttpResponseMessage responseMessage, global::System.Threading.Tasks.Task<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.ICloudError> response, ref global::System.Threading.Tasks.Task<bool> returnNow);

        /// <summary>
        /// <c>overrideOnOk</c> will be called before the regular onOk has been processed, allowing customization of what happens
        /// on that response. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="responseMessage">the raw response message as an global::System.Net.Http.HttpResponseMessage.</param>
        /// <param name="response">the body result as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessment">Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessment</see>
        /// from the remote call</param>
        /// <param name="returnNow">/// Determines if the rest of the onOk method should be processed, or if the method should return
        /// immediately (set to true to skip further processing )</param>

        partial void overrideOnOk(global::System.Net.Http.HttpResponseMessage responseMessage, global::System.Threading.Tasks.Task<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessment> response, ref global::System.Threading.Tasks.Task<bool> returnNow);

        /// <summary>
        /// (overrides the default BeginProcessing method in global::System.Management.Automation.PSCmdlet)
        /// </summary>
        protected override void BeginProcessing()
        {
            var telemetryId = Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Module.Instance.GetTelemetryId.Invoke();
            if (telemetryId != "" && telemetryId != "internal")
            {
                __correlationId = telemetryId;
            }
            Module.Instance.SetProxyConfiguration(Proxy, ProxyCredential, ProxyUseDefaultCredentials);
            if (Break)
            {
                Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.AttachDebugger.Break();
            }
            ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.IEventListener)this).Signal(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Events.CmdletBeginProcessing).Wait(); if( ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.IEventListener)this).Token.IsCancellationRequested ) { return; }
        }

        /// <summary>Performs clean-up after the command execution</summary>
        protected override void EndProcessing()
        {

        }

        /// <summary>Handles/Dispatches events during the call to the REST service.</summary>
        /// <param name="id">The message id</param>
        /// <param name="token">The message cancellation token. When this call is cancelled, this should be <c>true</c></param>
        /// <param name="messageData">Detailed message data for the message event.</param>
        /// <returns>
        /// A <see cref="global::System.Threading.Tasks.Task" /> that will be complete when handling of the message is completed.
        /// </returns>
         async global::System.Threading.Tasks.Task Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.IEventListener.Signal(string id, global::System.Threading.CancellationToken token, global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.EventData> messageData)
        {
            using( NoSynchronizationContext )
            {
                if (token.IsCancellationRequested)
                {
                    return ;
                }

                switch ( id )
                {
                    case Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Events.Verbose:
                    {
                        WriteVerbose($"{(messageData().Message ?? global::System.String.Empty)}");
                        return ;
                    }
                    case Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Events.Warning:
                    {
                        WriteWarning($"{(messageData().Message ?? global::System.String.Empty)}");
                        return ;
                    }
                    case Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Events.Information:
                    {
                        var data = messageData();
                        WriteInformation(data.Message, new string[]{});
                        return ;
                    }
                    case Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Events.Debug:
                    {
                        WriteDebug($"{(messageData().Message ?? global::System.String.Empty)}");
                        return ;
                    }
                    case Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Events.Error:
                    {
                        WriteError(new global::System.Management.Automation.ErrorRecord( new global::System.Exception(messageData().Message), string.Empty, global::System.Management.Automation.ErrorCategory.NotSpecified, null ) );
                        return ;
                    }
                }
                await Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Module.Instance.Signal(id, token, messageData, (i,t,m) => ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.IEventListener)this).Signal(i,t,()=> Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.EventDataConverter.ConvertFrom( m() ) as Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.EventData ), InvocationInformation, this.ParameterSetName, __correlationId, __processRecordId, null );
                if (token.IsCancellationRequested)
                {
                    return ;
                }
                WriteDebug($"{id}: {(messageData().Message ?? global::System.String.Empty)}");
            }
        }

        /// <summary>
        /// Intializes a new instance of the <see cref="NewAzMigrateV2Assessment_CreateExpanded" /> cmdlet class.
        /// </summary>
        public NewAzMigrateV2Assessment_CreateExpanded()
        {

        }

        /// <summary>Performs execution of the command.</summary>
        protected override void ProcessRecord()
        {
            ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.IEventListener)this).Signal(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Events.CmdletProcessRecordStart).Wait(); if( ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.IEventListener)this).Token.IsCancellationRequested ) { return; }
            __processRecordId = System.Guid.NewGuid().ToString();
            try
            {
                // work
                if (ShouldProcess($"Call remote 'AssessmentsCreate' operation"))
                {
                    using( var asyncCommandRuntime = new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.PowerShell.AsyncCommandRuntime(this, ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.IEventListener)this).Token) )
                    {
                        asyncCommandRuntime.Wait( ProcessRecordAsync(),((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.IEventListener)this).Token);
                    }
                }
            }
            catch (global::System.AggregateException aggregateException)
            {
                // unroll the inner exceptions to get the root cause
                foreach( var innerException in aggregateException.Flatten().InnerExceptions )
                {
                    ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.IEventListener)this).Signal(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Events.CmdletException, $"{innerException.GetType().Name} - {innerException.Message} : {innerException.StackTrace}").Wait(); if( ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.IEventListener)this).Token.IsCancellationRequested ) { return; }
                    // Write exception out to error channel.
                    WriteError( new global::System.Management.Automation.ErrorRecord(innerException,string.Empty, global::System.Management.Automation.ErrorCategory.NotSpecified, null) );
                }
            }
            catch (global::System.Exception exception) when ((exception as System.Management.Automation.PipelineStoppedException)== null || (exception as System.Management.Automation.PipelineStoppedException).InnerException != null)
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.IEventListener)this).Signal(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Events.CmdletException, $"{exception.GetType().Name} - {exception.Message} : {exception.StackTrace}").Wait(); if( ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.IEventListener)this).Token.IsCancellationRequested ) { return; }
                // Write exception out to error channel.
                WriteError( new global::System.Management.Automation.ErrorRecord(exception,string.Empty, global::System.Management.Automation.ErrorCategory.NotSpecified, null) );
            }
            finally
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.IEventListener)this).Signal(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Events.CmdletProcessRecordEnd).Wait();
            }
        }

        /// <summary>Performs execution of the command, working asynchronously if required.</summary>
        /// <returns>
        /// A <see cref="global::System.Threading.Tasks.Task" /> that will be complete when handling of the method is completed.
        /// </returns>
        protected async global::System.Threading.Tasks.Task ProcessRecordAsync()
        {
            using( NoSynchronizationContext )
            {
                await ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.IEventListener)this).Signal(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Events.CmdletGetPipeline); if( ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.IEventListener)this).Token.IsCancellationRequested ) { return; }
                Pipeline = Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Module.Instance.CreatePipeline(InvocationInformation, __correlationId, __processRecordId, this.ParameterSetName);
                if (null != HttpPipelinePrepend)
                {
                    Pipeline.Prepend((this.CommandRuntime as Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.PowerShell.IAsyncCommandRuntimeExtensions)?.Wrap(HttpPipelinePrepend) ?? HttpPipelinePrepend);
                }
                if (null != HttpPipelineAppend)
                {
                    Pipeline.Append((this.CommandRuntime as Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.PowerShell.IAsyncCommandRuntimeExtensions)?.Wrap(HttpPipelineAppend) ?? HttpPipelineAppend);
                }
                // get the client instance
                try
                {
                    await ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.IEventListener)this).Signal(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Events.CmdletBeforeAPICall); if( ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.IEventListener)this).Token.IsCancellationRequested ) { return; }
                    await this.Client.AssessmentsCreate(SubscriptionId, ResourceGroupName, ProjectName, GroupName, Name, _assessmentBody, onOk, onCreated, onDefault, this, Pipeline);
                    await ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.IEventListener)this).Signal(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Events.CmdletAfterAPICall); if( ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.IEventListener)this).Token.IsCancellationRequested ) { return; }
                }
                catch (Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.UndeclaredResponseException urexception)
                {
                    WriteError(new global::System.Management.Automation.ErrorRecord(urexception, urexception.StatusCode.ToString(), global::System.Management.Automation.ErrorCategory.InvalidOperation, new {  SubscriptionId=SubscriptionId,ResourceGroupName=ResourceGroupName,ProjectName=ProjectName,GroupName=GroupName,Name=Name,body=_assessmentBody})
                    {
                      ErrorDetails = new global::System.Management.Automation.ErrorDetails(urexception.Message) { RecommendedAction = urexception.Action }
                    });
                }
                finally
                {
                    await ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.IEventListener)this).Signal(Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.Events.CmdletProcessRecordAsyncEnd);
                }
            }
        }

        /// <summary>Interrupts currently running code within the command.</summary>
        protected override void StopProcessing()
        {
            ((Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.IEventListener)this).Cancel();
            base.StopProcessing();
        }

        /// <summary>a delegate that is called when the remote service returns 201 (Created).</summary>
        /// <param name="responseMessage">the raw response message as an global::System.Net.Http.HttpResponseMessage.</param>
        /// <param name="response">the body result as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessment">Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessment</see>
        /// from the remote call</param>
        /// <returns>
        /// A <see cref="global::System.Threading.Tasks.Task" /> that will be complete when handling of the method is completed.
        /// </returns>
        private async global::System.Threading.Tasks.Task onCreated(global::System.Net.Http.HttpResponseMessage responseMessage, global::System.Threading.Tasks.Task<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessment> response)
        {
            using( NoSynchronizationContext )
            {
                var _returnNow = global::System.Threading.Tasks.Task<bool>.FromResult(false);
                overrideOnCreated(responseMessage, response, ref _returnNow);
                // if overrideOnCreated has returned true, then return right away.
                if ((null != _returnNow && await _returnNow))
                {
                    return ;
                }
                // onCreated - response for 201 / application/json
                // (await response) // should be Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessment
                WriteObject((await response));
            }
        }

        /// <summary>
        /// a delegate that is called when the remote service returns default (any response code not handled elsewhere).
        /// </summary>
        /// <param name="responseMessage">the raw response message as an global::System.Net.Http.HttpResponseMessage.</param>
        /// <param name="response">the body result as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.ICloudError">Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.ICloudError</see>
        /// from the remote call</param>
        /// <returns>
        /// A <see cref="global::System.Threading.Tasks.Task" /> that will be complete when handling of the method is completed.
        /// </returns>
        private async global::System.Threading.Tasks.Task onDefault(global::System.Net.Http.HttpResponseMessage responseMessage, global::System.Threading.Tasks.Task<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.ICloudError> response)
        {
            using( NoSynchronizationContext )
            {
                var _returnNow = global::System.Threading.Tasks.Task<bool>.FromResult(false);
                overrideOnDefault(responseMessage, response, ref _returnNow);
                // if overrideOnDefault has returned true, then return right away.
                if ((null != _returnNow && await _returnNow))
                {
                    return ;
                }
                // Error Response : default
                var code = (await response)?.Code;
                var message = (await response)?.Message;
                if ((null == code || null == message))
                {
                    // Unrecognized Response. Create an error record based on what we have.
                    var ex = new Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Runtime.RestException<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.ICloudError>(responseMessage, await response);
                    WriteError( new global::System.Management.Automation.ErrorRecord(ex, ex.Code, global::System.Management.Automation.ErrorCategory.InvalidOperation, new { SubscriptionId=SubscriptionId, ResourceGroupName=ResourceGroupName, ProjectName=ProjectName, GroupName=GroupName, Name=Name, body=_assessmentBody })
                    {
                      ErrorDetails = new global::System.Management.Automation.ErrorDetails(ex.Message) { RecommendedAction = ex.Action }
                    });
                }
                else
                {
                    WriteError( new global::System.Management.Automation.ErrorRecord(new global::System.Exception($"[{code}] : {message}"), code?.ToString(), global::System.Management.Automation.ErrorCategory.InvalidOperation, new { SubscriptionId=SubscriptionId, ResourceGroupName=ResourceGroupName, ProjectName=ProjectName, GroupName=GroupName, Name=Name, body=_assessmentBody })
                    {
                      ErrorDetails = new global::System.Management.Automation.ErrorDetails(message) { RecommendedAction = global::System.String.Empty }
                    });
                }
            }
        }

        /// <summary>a delegate that is called when the remote service returns 200 (OK).</summary>
        /// <param name="responseMessage">the raw response message as an global::System.Net.Http.HttpResponseMessage.</param>
        /// <param name="response">the body result as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessment">Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessment</see>
        /// from the remote call</param>
        /// <returns>
        /// A <see cref="global::System.Threading.Tasks.Task" /> that will be complete when handling of the method is completed.
        /// </returns>
        private async global::System.Threading.Tasks.Task onOk(global::System.Net.Http.HttpResponseMessage responseMessage, global::System.Threading.Tasks.Task<Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessment> response)
        {
            using( NoSynchronizationContext )
            {
                var _returnNow = global::System.Threading.Tasks.Task<bool>.FromResult(false);
                overrideOnOk(responseMessage, response, ref _returnNow);
                // if overrideOnOk has returned true, then return right away.
                if ((null != _returnNow && await _returnNow))
                {
                    return ;
                }
                // onOk - response for 200 / application/json
                // (await response) // should be Microsoft.Azure.PowerShell.Cmdlets.MigrateV2.Models.Api20191001.IAssessment
                WriteObject((await response));
            }
        }
    }
}