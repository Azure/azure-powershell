// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api202201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.Extensions;

    /// <summary>PeeringService provider</summary>
    public partial class PeeringServiceProvider :
        Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api202201.IPeeringServiceProvider,
        Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api202201.IPeeringServiceProviderInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api202201.IResource" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api202201.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api202201.Resource();

        /// <summary>The ID of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api202201.IResourceInternal)__resource).Id; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api202201.IPeeringServiceProviderProperties Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api202201.IPeeringServiceProviderInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api202201.PeeringServiceProviderProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api202201.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api202201.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api202201.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api202201.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api202201.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api202201.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api202201.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api202201.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api202201.IResourceInternal)__resource).Type = value; }

        /// <summary>The name of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api202201.IResourceInternal)__resource).Name; }

        /// <summary>The list of locations at which the service provider peers with Microsoft.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Inlined)]
        public string[] PeeringLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api202201.IPeeringServiceProviderPropertiesInternal)Property).PeeringLocation; set => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api202201.IPeeringServiceProviderPropertiesInternal)Property).PeeringLocation = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api202201.IPeeringServiceProviderProperties _property;

        /// <summary>The properties that define a peering service provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api202201.IPeeringServiceProviderProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api202201.PeeringServiceProviderProperties()); set => this._property = value; }

        /// <summary>The name of the service provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Inlined)]
        public string ServiceProviderName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api202201.IPeeringServiceProviderPropertiesInternal)Property).ServiceProviderName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api202201.IPeeringServiceProviderPropertiesInternal)Property).ServiceProviderName = value ?? null; }

        /// <summary>The type of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api202201.IResourceInternal)__resource).Type; }

        /// <summary>Creates an new <see cref="PeeringServiceProvider" /> instance.</summary>
        public PeeringServiceProvider()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// PeeringService provider
    public partial interface IPeeringServiceProvider :
        Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api202201.IResource
    {
        /// <summary>The list of locations at which the service provider peers with Microsoft.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of locations at which the service provider peers with Microsoft.",
        SerializedName = @"peeringLocations",
        PossibleTypes = new [] { typeof(string) })]
        string[] PeeringLocation { get; set; }
        /// <summary>The name of the service provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the service provider.",
        SerializedName = @"serviceProviderName",
        PossibleTypes = new [] { typeof(string) })]
        string ServiceProviderName { get; set; }

    }
    /// PeeringService provider
    internal partial interface IPeeringServiceProviderInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api202201.IResourceInternal
    {
        /// <summary>The list of locations at which the service provider peers with Microsoft.</summary>
        string[] PeeringLocation { get; set; }
        /// <summary>The properties that define a peering service provider.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api202201.IPeeringServiceProviderProperties Property { get; set; }
        /// <summary>The name of the service provider.</summary>
        string ServiceProviderName { get; set; }

    }
}