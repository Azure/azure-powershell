// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Extensions;

    /// <summary>This type describes a service resource.</summary>
    public partial class ServiceResourceDescription :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServiceResourceDescription,
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServiceResourceDescriptionInternal,
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IManagedProxyResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IManagedProxyResource __managedProxyResource = new Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.ManagedProxyResource();

        /// <summary>Auto scaling policies</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IAutoScalingPolicy[] AutoScalingPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServicePropertiesInternal)Property).AutoScalingPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServicePropertiesInternal)Property).AutoScalingPolicy = value ?? null /* arrayOf */; }

        /// <summary>
        /// Describes the set of code packages that forms the service. A code package describes the container and the properties for
        /// running it. All the code packages are started together on the same host and share the same context (network, process etc.).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerCodePackageProperties[] CodePackage { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServiceReplicaPropertiesInternal)Property).CodePackage; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServiceReplicaPropertiesInternal)Property).CodePackage = value ; }

        /// <summary>User readable description of the service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inlined)]
        public string Description { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServicePropertiesInternal)Property).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServicePropertiesInternal)Property).Description = value ?? null; }

        /// <summary>Status of whether or not sinks are enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inlined)]
        public bool? DiagnosticEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServiceReplicaPropertiesInternal)Property).DiagnosticEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServiceReplicaPropertiesInternal)Property).DiagnosticEnabled = value ?? default(bool); }

        /// <summary>
        /// List of sinks to be used if enabled. References the list of sinks in DiagnosticsDescription.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inlined)]
        public string[] DiagnosticSinkRef { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServiceReplicaPropertiesInternal)Property).DiagnosticSinkRef; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServiceReplicaPropertiesInternal)Property).DiagnosticSinkRef = value ?? null /* arrayOf */; }

        /// <summary>Describes the health state of an application resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Support.HealthState? HealthState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServicePropertiesInternal)Property).HealthState; }

        /// <summary>
        /// Fully qualified identifier for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IManagedProxyResourceInternal)__managedProxyResource).Id; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IManagedProxyResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IManagedProxyResourceInternal)__managedProxyResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IManagedProxyResourceInternal)__managedProxyResource).Id = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IManagedProxyResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IManagedProxyResourceInternal)__managedProxyResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IManagedProxyResourceInternal)__managedProxyResource).Type = value; }

        /// <summary>Internal Acessors for Diagnostic</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IDiagnosticsRef Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServiceResourceDescriptionInternal.Diagnostic { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServiceReplicaPropertiesInternal)Property).Diagnostic; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServiceReplicaPropertiesInternal)Property).Diagnostic = value; }

        /// <summary>Internal Acessors for HealthState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Support.HealthState? Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServiceResourceDescriptionInternal.HealthState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServicePropertiesInternal)Property).HealthState; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServicePropertiesInternal)Property).HealthState = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServiceResourceProperties Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServiceResourceDescriptionInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.ServiceResourceProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServiceResourceDescriptionInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IProvisionedResourcePropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IProvisionedResourcePropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Support.ResourceStatus? Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServiceResourceDescriptionInternal.Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServicePropertiesInternal)Property).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServicePropertiesInternal)Property).Status = value; }

        /// <summary>Internal Acessors for StatusDetail</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServiceResourceDescriptionInternal.StatusDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServicePropertiesInternal)Property).StatusDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServicePropertiesInternal)Property).StatusDetail = value; }

        /// <summary>Internal Acessors for UnhealthyEvaluation</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServiceResourceDescriptionInternal.UnhealthyEvaluation { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServicePropertiesInternal)Property).UnhealthyEvaluation; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServicePropertiesInternal)Property).UnhealthyEvaluation = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IManagedProxyResourceInternal)__managedProxyResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IManagedProxyResourceInternal)__managedProxyResource).Name = value ?? null; }

        /// <summary>The names of the private networks that this service needs to be part of.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.INetworkRef[] NetworkRef { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServiceReplicaPropertiesInternal)Property).NetworkRef; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServiceReplicaPropertiesInternal)Property).NetworkRef = value ?? null /* arrayOf */; }

        /// <summary>The operation system required by the code in service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Support.OperatingSystemType OSType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServiceReplicaPropertiesInternal)Property).OSType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServiceReplicaPropertiesInternal)Property).OSType = value ; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServiceResourceProperties _property;

        /// <summary>This type describes properties of a service resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServiceResourceProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.ServiceResourceProperties()); set => this._property = value; }

        /// <summary>State of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IProvisionedResourcePropertiesInternal)Property).ProvisioningState; }

        /// <summary>
        /// The number of replicas of the service to create. Defaults to 1 if not specified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inlined)]
        public int? ReplicaCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServicePropertiesInternal)Property).ReplicaCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServicePropertiesInternal)Property).ReplicaCount = value ?? default(int); }

        /// <summary>Status of the service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Support.ResourceStatus? Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServicePropertiesInternal)Property).Status; }

        /// <summary>Gives additional information about the current status of the service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inlined)]
        public string StatusDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServicePropertiesInternal)Property).StatusDetail; }

        /// <summary>
        /// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IManagedProxyResourceInternal)__managedProxyResource).Type; }

        /// <summary>
        /// When the service's health state is not 'Ok', this additional details from service fabric Health Manager for the user to
        /// know why the service is marked unhealthy.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inlined)]
        public string UnhealthyEvaluation { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServicePropertiesInternal)Property).UnhealthyEvaluation; }

        /// <summary>Creates an new <see cref="ServiceResourceDescription" /> instance.</summary>
        public ServiceResourceDescription()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__managedProxyResource), __managedProxyResource);
            await eventListener.AssertObjectIsValid(nameof(__managedProxyResource), __managedProxyResource);
        }
    }
    /// This type describes a service resource.
    public partial interface IServiceResourceDescription :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IManagedProxyResource
    {
        /// <summary>Auto scaling policies</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Auto scaling policies",
        SerializedName = @"autoScalingPolicies",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IAutoScalingPolicy) })]
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IAutoScalingPolicy[] AutoScalingPolicy { get; set; }
        /// <summary>
        /// Describes the set of code packages that forms the service. A code package describes the container and the properties for
        /// running it. All the code packages are started together on the same host and share the same context (network, process etc.).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Describes the set of code packages that forms the service. A code package describes the container and the properties for running it. All the code packages are started together on the same host and share the same context (network, process etc.).",
        SerializedName = @"codePackages",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerCodePackageProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerCodePackageProperties[] CodePackage { get; set; }
        /// <summary>User readable description of the service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"User readable description of the service.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>Status of whether or not sinks are enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Status of whether or not sinks are enabled.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DiagnosticEnabled { get; set; }
        /// <summary>
        /// List of sinks to be used if enabled. References the list of sinks in DiagnosticsDescription.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of sinks to be used if enabled. References the list of sinks in DiagnosticsDescription.",
        SerializedName = @"sinkRefs",
        PossibleTypes = new [] { typeof(string) })]
        string[] DiagnosticSinkRef { get; set; }
        /// <summary>Describes the health state of an application resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Describes the health state of an application resource.",
        SerializedName = @"healthState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Support.HealthState) })]
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Support.HealthState? HealthState { get;  }
        /// <summary>The names of the private networks that this service needs to be part of.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The names of the private networks that this service needs to be part of.",
        SerializedName = @"networkRefs",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.INetworkRef) })]
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.INetworkRef[] NetworkRef { get; set; }
        /// <summary>The operation system required by the code in service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The operation system required by the code in service.",
        SerializedName = @"osType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Support.OperatingSystemType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Support.OperatingSystemType OSType { get; set; }
        /// <summary>State of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"State of the resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>
        /// The number of replicas of the service to create. Defaults to 1 if not specified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of replicas of the service to create. Defaults to 1 if not specified.",
        SerializedName = @"replicaCount",
        PossibleTypes = new [] { typeof(int) })]
        int? ReplicaCount { get; set; }
        /// <summary>Status of the service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Status of the service.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Support.ResourceStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Support.ResourceStatus? Status { get;  }
        /// <summary>Gives additional information about the current status of the service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gives additional information about the current status of the service.",
        SerializedName = @"statusDetails",
        PossibleTypes = new [] { typeof(string) })]
        string StatusDetail { get;  }
        /// <summary>
        /// When the service's health state is not 'Ok', this additional details from service fabric Health Manager for the user to
        /// know why the service is marked unhealthy.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"When the service's health state is not 'Ok', this additional details from service fabric Health Manager for the user to know why the service is marked unhealthy.",
        SerializedName = @"unhealthyEvaluation",
        PossibleTypes = new [] { typeof(string) })]
        string UnhealthyEvaluation { get;  }

    }
    /// This type describes a service resource.
    internal partial interface IServiceResourceDescriptionInternal :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IManagedProxyResourceInternal
    {
        /// <summary>Auto scaling policies</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IAutoScalingPolicy[] AutoScalingPolicy { get; set; }
        /// <summary>
        /// Describes the set of code packages that forms the service. A code package describes the container and the properties for
        /// running it. All the code packages are started together on the same host and share the same context (network, process etc.).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerCodePackageProperties[] CodePackage { get; set; }
        /// <summary>User readable description of the service.</summary>
        string Description { get; set; }
        /// <summary>Reference to sinks in DiagnosticsDescription.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IDiagnosticsRef Diagnostic { get; set; }
        /// <summary>Status of whether or not sinks are enabled.</summary>
        bool? DiagnosticEnabled { get; set; }
        /// <summary>
        /// List of sinks to be used if enabled. References the list of sinks in DiagnosticsDescription.
        /// </summary>
        string[] DiagnosticSinkRef { get; set; }
        /// <summary>Describes the health state of an application resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Support.HealthState? HealthState { get; set; }
        /// <summary>The names of the private networks that this service needs to be part of.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.INetworkRef[] NetworkRef { get; set; }
        /// <summary>The operation system required by the code in service.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Support.OperatingSystemType OSType { get; set; }
        /// <summary>This type describes properties of a service resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServiceResourceProperties Property { get; set; }
        /// <summary>State of the resource.</summary>
        string ProvisioningState { get; set; }
        /// <summary>
        /// The number of replicas of the service to create. Defaults to 1 if not specified.
        /// </summary>
        int? ReplicaCount { get; set; }
        /// <summary>Status of the service.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Support.ResourceStatus? Status { get; set; }
        /// <summary>Gives additional information about the current status of the service.</summary>
        string StatusDetail { get; set; }
        /// <summary>
        /// When the service's health state is not 'Ok', this additional details from service fabric Health Manager for the user to
        /// know why the service is marked unhealthy.
        /// </summary>
        string UnhealthyEvaluation { get; set; }

    }
}