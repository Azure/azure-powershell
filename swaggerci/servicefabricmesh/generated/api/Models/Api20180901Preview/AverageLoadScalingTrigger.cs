// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Extensions;

    /// <summary>Describes the average load trigger used for auto scaling.</summary>
    public partial class AverageLoadScalingTrigger :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IAverageLoadScalingTrigger,
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IAverageLoadScalingTriggerInternal,
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IAutoScalingTrigger"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IAutoScalingTrigger __autoScalingTrigger = new Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.AutoScalingTrigger();

        /// <summary>The type of auto scaling trigger</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inherited)]
        public string Kind { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IAutoScalingTriggerInternal)__autoScalingTrigger).Kind; }

        /// <summary>Backing field for <see cref="LowerLoadThreshold" /> property.</summary>
        private double _lowerLoadThreshold;

        /// <summary>
        /// Lower load threshold (if average load is below this threshold, service will scale down).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Owned)]
        public double LowerLoadThreshold { get => this._lowerLoadThreshold; set => this._lowerLoadThreshold = value; }

        /// <summary>Backing field for <see cref="Metric" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IAutoScalingMetric _metric;

        /// <summary>Description of the metric that is used for scaling.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IAutoScalingMetric Metric { get => (this._metric = this._metric ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.AutoScalingMetric()); set => this._metric = value; }

        /// <summary>The type of auto scaling metric</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inlined)]
        public string MetricKind { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IAutoScalingMetricInternal)Metric).Kind; }

        /// <summary>Internal Acessors for Kind</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IAutoScalingTriggerInternal.Kind { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IAutoScalingTriggerInternal)__autoScalingTrigger).Kind; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IAutoScalingTriggerInternal)__autoScalingTrigger).Kind = value; }

        /// <summary>Internal Acessors for Metric</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IAutoScalingMetric Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IAverageLoadScalingTriggerInternal.Metric { get => (this._metric = this._metric ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.AutoScalingMetric()); set { {_metric = value;} } }

        /// <summary>Internal Acessors for MetricKind</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IAverageLoadScalingTriggerInternal.MetricKind { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IAutoScalingMetricInternal)Metric).Kind; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IAutoScalingMetricInternal)Metric).Kind = value; }

        /// <summary>Backing field for <see cref="ScaleIntervalInSecond" /> property.</summary>
        private int _scaleIntervalInSecond;

        /// <summary>Scale interval that indicates how often will this trigger be checked.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Owned)]
        public int ScaleIntervalInSecond { get => this._scaleIntervalInSecond; set => this._scaleIntervalInSecond = value; }

        /// <summary>Backing field for <see cref="UpperLoadThreshold" /> property.</summary>
        private double _upperLoadThreshold;

        /// <summary>
        /// Upper load threshold (if average load is above this threshold, service will scale up).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Owned)]
        public double UpperLoadThreshold { get => this._upperLoadThreshold; set => this._upperLoadThreshold = value; }

        /// <summary>Creates an new <see cref="AverageLoadScalingTrigger" /> instance.</summary>
        public AverageLoadScalingTrigger()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__autoScalingTrigger), __autoScalingTrigger);
            await eventListener.AssertObjectIsValid(nameof(__autoScalingTrigger), __autoScalingTrigger);
        }
    }
    /// Describes the average load trigger used for auto scaling.
    public partial interface IAverageLoadScalingTrigger :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IAutoScalingTrigger
    {
        /// <summary>
        /// Lower load threshold (if average load is below this threshold, service will scale down).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Lower load threshold (if average load is below this threshold, service will scale down).",
        SerializedName = @"lowerLoadThreshold",
        PossibleTypes = new [] { typeof(double) })]
        double LowerLoadThreshold { get; set; }
        /// <summary>The type of auto scaling metric</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = true,
        ReadOnly = true,
        Description = @"The type of auto scaling metric",
        SerializedName = @"kind",
        PossibleTypes = new [] { typeof(string) })]
        string MetricKind { get;  }
        /// <summary>Scale interval that indicates how often will this trigger be checked.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Scale interval that indicates how often will this trigger be checked.",
        SerializedName = @"scaleIntervalInSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int ScaleIntervalInSecond { get; set; }
        /// <summary>
        /// Upper load threshold (if average load is above this threshold, service will scale up).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Upper load threshold (if average load is above this threshold, service will scale up).",
        SerializedName = @"upperLoadThreshold",
        PossibleTypes = new [] { typeof(double) })]
        double UpperLoadThreshold { get; set; }

    }
    /// Describes the average load trigger used for auto scaling.
    internal partial interface IAverageLoadScalingTriggerInternal :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IAutoScalingTriggerInternal
    {
        /// <summary>
        /// Lower load threshold (if average load is below this threshold, service will scale down).
        /// </summary>
        double LowerLoadThreshold { get; set; }
        /// <summary>Description of the metric that is used for scaling.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IAutoScalingMetric Metric { get; set; }
        /// <summary>The type of auto scaling metric</summary>
        string MetricKind { get; set; }
        /// <summary>Scale interval that indicates how often will this trigger be checked.</summary>
        int ScaleIntervalInSecond { get; set; }
        /// <summary>
        /// Upper load threshold (if average load is above this threshold, service will scale up).
        /// </summary>
        double UpperLoadThreshold { get; set; }

    }
}