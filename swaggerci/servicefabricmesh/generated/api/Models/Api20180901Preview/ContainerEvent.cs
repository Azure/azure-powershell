// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Extensions;

    /// <summary>A container event.</summary>
    public partial class ContainerEvent :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerEvent,
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerEventInternal
    {

        /// <summary>Backing field for <see cref="Count" /> property.</summary>
        private int? _count;

        /// <summary>The count of the event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Owned)]
        public int? Count { get => this._count; set => this._count = value; }

        /// <summary>Backing field for <see cref="FirstTimestamp" /> property.</summary>
        private string _firstTimestamp;

        /// <summary>Date/time of the first event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Owned)]
        public string FirstTimestamp { get => this._firstTimestamp; set => this._firstTimestamp = value; }

        /// <summary>Backing field for <see cref="LastTimestamp" /> property.</summary>
        private string _lastTimestamp;

        /// <summary>Date/time of the last event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Owned)]
        public string LastTimestamp { get => this._lastTimestamp; set => this._lastTimestamp = value; }

        /// <summary>Backing field for <see cref="Message" /> property.</summary>
        private string _message;

        /// <summary>The event message</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Owned)]
        public string Message { get => this._message; set => this._message = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>The name of the container event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>The event type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Owned)]
        public string Type { get => this._type; set => this._type = value; }

        /// <summary>Creates an new <see cref="ContainerEvent" /> instance.</summary>
        public ContainerEvent()
        {

        }
    }
    /// A container event.
    public partial interface IContainerEvent :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.IJsonSerializable
    {
        /// <summary>The count of the event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The count of the event.",
        SerializedName = @"count",
        PossibleTypes = new [] { typeof(int) })]
        int? Count { get; set; }
        /// <summary>Date/time of the first event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Date/time of the first event.",
        SerializedName = @"firstTimestamp",
        PossibleTypes = new [] { typeof(string) })]
        string FirstTimestamp { get; set; }
        /// <summary>Date/time of the last event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Date/time of the last event.",
        SerializedName = @"lastTimestamp",
        PossibleTypes = new [] { typeof(string) })]
        string LastTimestamp { get; set; }
        /// <summary>The event message</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The event message",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string Message { get; set; }
        /// <summary>The name of the container event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the container event.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>The event type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The event type.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get; set; }

    }
    /// A container event.
    internal partial interface IContainerEventInternal

    {
        /// <summary>The count of the event.</summary>
        int? Count { get; set; }
        /// <summary>Date/time of the first event.</summary>
        string FirstTimestamp { get; set; }
        /// <summary>Date/time of the last event.</summary>
        string LastTimestamp { get; set; }
        /// <summary>The event message</summary>
        string Message { get; set; }
        /// <summary>The name of the container event.</summary>
        string Name { get; set; }
        /// <summary>The event type.</summary>
        string Type { get; set; }

    }
}