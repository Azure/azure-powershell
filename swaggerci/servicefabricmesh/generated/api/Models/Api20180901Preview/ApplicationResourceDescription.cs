// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Extensions;

    /// <summary>This type describes an application resource.</summary>
    public partial class ApplicationResourceDescription :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationResourceDescription,
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationResourceDescriptionInternal,
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.ITrackedResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.ITrackedResource __trackedResource = new Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.TrackedResource();

        /// <summary>
        /// Internal - used by Visual Studio to setup the debugging session on the local development environment.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inlined)]
        public string DebugParam { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationPropertiesInternal)Property).DebugParam; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationPropertiesInternal)Property).DebugParam = value ?? null; }

        /// <summary>User readable description of the application.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inlined)]
        public string Description { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationPropertiesInternal)Property).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationPropertiesInternal)Property).Description = value ?? null; }

        /// <summary>
        /// The sinks to be used if diagnostics is enabled. Sink choices can be overridden at the service and code package level.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inlined)]
        public string[] DiagnosticDefaultSinkRef { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationPropertiesInternal)Property).DiagnosticDefaultSinkRef; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationPropertiesInternal)Property).DiagnosticDefaultSinkRef = value ?? null /* arrayOf */; }

        /// <summary>Status of whether or not sinks are enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inlined)]
        public bool? DiagnosticEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationPropertiesInternal)Property).DiagnosticEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationPropertiesInternal)Property).DiagnosticEnabled = value ?? default(bool); }

        /// <summary>List of supported sinks that can be referenced.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IDiagnosticsSinkProperties[] DiagnosticSink { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationPropertiesInternal)Property).DiagnosticSink; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationPropertiesInternal)Property).DiagnosticSink = value ?? null /* arrayOf */; }

        /// <summary>Describes the health state of an application resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Support.HealthState? HealthState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationPropertiesInternal)Property).HealthState; }

        /// <summary>
        /// Fully qualified identifier for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IResourceInternal)__trackedResource).Id; }

        /// <summary>The geo-location where the resource lives</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.ITrackedResourceInternal)__trackedResource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.ITrackedResourceInternal)__trackedResource).Location = value ; }

        /// <summary>Internal Acessors for Diagnostic</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IDiagnosticsDescription Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationResourceDescriptionInternal.Diagnostic { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationPropertiesInternal)Property).Diagnostic; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationPropertiesInternal)Property).Diagnostic = value; }

        /// <summary>Internal Acessors for HealthState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Support.HealthState? Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationResourceDescriptionInternal.HealthState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationPropertiesInternal)Property).HealthState; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationPropertiesInternal)Property).HealthState = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationResourceProperties Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationResourceDescriptionInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.ApplicationResourceProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationResourceDescriptionInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IProvisionedResourcePropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IProvisionedResourcePropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for ServiceName</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationResourceDescriptionInternal.ServiceName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationPropertiesInternal)Property).ServiceName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationPropertiesInternal)Property).ServiceName = value; }

        /// <summary>Internal Acessors for Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Support.ResourceStatus? Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationResourceDescriptionInternal.Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationPropertiesInternal)Property).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationPropertiesInternal)Property).Status = value; }

        /// <summary>Internal Acessors for StatusDetail</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationResourceDescriptionInternal.StatusDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationPropertiesInternal)Property).StatusDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationPropertiesInternal)Property).StatusDetail = value; }

        /// <summary>Internal Acessors for UnhealthyEvaluation</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationResourceDescriptionInternal.UnhealthyEvaluation { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationPropertiesInternal)Property).UnhealthyEvaluation; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationPropertiesInternal)Property).UnhealthyEvaluation = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IResourceInternal)__trackedResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IResourceInternal)__trackedResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IResourceInternal)__trackedResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IResourceInternal)__trackedResource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IResourceInternal)__trackedResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IResourceInternal)__trackedResource).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IResourceInternal)__trackedResource).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationResourceProperties _property;

        /// <summary>This type describes properties of an application resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationResourceProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.ApplicationResourceProperties()); set => this._property = value; }

        /// <summary>State of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IProvisionedResourcePropertiesInternal)Property).ProvisioningState; }

        /// <summary>
        /// Describes the services in the application. This property is used to create or modify services of the application. On get
        /// only the name of the service is returned. The service description can be obtained by querying for the service resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServiceResourceDescription[] Service { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationPropertiesInternal)Property).Service; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationPropertiesInternal)Property).Service = value ?? null /* arrayOf */; }

        /// <summary>Names of the services in the application.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inlined)]
        public string[] ServiceName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationPropertiesInternal)Property).ServiceName; }

        /// <summary>Status of the application.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Support.ResourceStatus? Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationPropertiesInternal)Property).Status; }

        /// <summary>Gives additional information about the current status of the application.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inlined)]
        public string StatusDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationPropertiesInternal)Property).StatusDetail; }

        /// <summary>Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.ITrackedResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.ITrackedResourceInternal)__trackedResource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.ITrackedResourceInternal)__trackedResource).Tag = value ?? null /* model class */; }

        /// <summary>
        /// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IResourceInternal)__trackedResource).Type; }

        /// <summary>
        /// When the application's health state is not 'Ok', this additional details from service fabric Health Manager for the user
        /// to know why the application is marked unhealthy.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inlined)]
        public string UnhealthyEvaluation { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationPropertiesInternal)Property).UnhealthyEvaluation; }

        /// <summary>Creates an new <see cref="ApplicationResourceDescription" /> instance.</summary>
        public ApplicationResourceDescription()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__trackedResource), __trackedResource);
            await eventListener.AssertObjectIsValid(nameof(__trackedResource), __trackedResource);
        }
    }
    /// This type describes an application resource.
    public partial interface IApplicationResourceDescription :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.ITrackedResource
    {
        /// <summary>
        /// Internal - used by Visual Studio to setup the debugging session on the local development environment.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Internal - used by Visual Studio to setup the debugging session on the local development environment.",
        SerializedName = @"debugParams",
        PossibleTypes = new [] { typeof(string) })]
        string DebugParam { get; set; }
        /// <summary>User readable description of the application.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"User readable description of the application.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>
        /// The sinks to be used if diagnostics is enabled. Sink choices can be overridden at the service and code package level.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The sinks to be used if diagnostics is enabled. Sink choices can be overridden at the service and code package level.",
        SerializedName = @"defaultSinkRefs",
        PossibleTypes = new [] { typeof(string) })]
        string[] DiagnosticDefaultSinkRef { get; set; }
        /// <summary>Status of whether or not sinks are enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Status of whether or not sinks are enabled.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DiagnosticEnabled { get; set; }
        /// <summary>List of supported sinks that can be referenced.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of supported sinks that can be referenced.",
        SerializedName = @"sinks",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IDiagnosticsSinkProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IDiagnosticsSinkProperties[] DiagnosticSink { get; set; }
        /// <summary>Describes the health state of an application resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Describes the health state of an application resource.",
        SerializedName = @"healthState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Support.HealthState) })]
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Support.HealthState? HealthState { get;  }
        /// <summary>State of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"State of the resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>
        /// Describes the services in the application. This property is used to create or modify services of the application. On get
        /// only the name of the service is returned. The service description can be obtained by querying for the service resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Describes the services in the application. This property is used to create or modify services of the application. On get only the name of the service is returned. The service description can be obtained by querying for the service resource.",
        SerializedName = @"services",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServiceResourceDescription) })]
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServiceResourceDescription[] Service { get; set; }
        /// <summary>Names of the services in the application.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Names of the services in the application.",
        SerializedName = @"serviceNames",
        PossibleTypes = new [] { typeof(string) })]
        string[] ServiceName { get;  }
        /// <summary>Status of the application.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Status of the application.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Support.ResourceStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Support.ResourceStatus? Status { get;  }
        /// <summary>Gives additional information about the current status of the application.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gives additional information about the current status of the application.",
        SerializedName = @"statusDetails",
        PossibleTypes = new [] { typeof(string) })]
        string StatusDetail { get;  }
        /// <summary>
        /// When the application's health state is not 'Ok', this additional details from service fabric Health Manager for the user
        /// to know why the application is marked unhealthy.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"When the application's health state is not 'Ok', this additional details from service fabric Health Manager for the user to know why the application is marked unhealthy.",
        SerializedName = @"unhealthyEvaluation",
        PossibleTypes = new [] { typeof(string) })]
        string UnhealthyEvaluation { get;  }

    }
    /// This type describes an application resource.
    internal partial interface IApplicationResourceDescriptionInternal :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.ITrackedResourceInternal
    {
        /// <summary>
        /// Internal - used by Visual Studio to setup the debugging session on the local development environment.
        /// </summary>
        string DebugParam { get; set; }
        /// <summary>User readable description of the application.</summary>
        string Description { get; set; }
        /// <summary>Describes the diagnostics definition and usage for an application resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IDiagnosticsDescription Diagnostic { get; set; }
        /// <summary>
        /// The sinks to be used if diagnostics is enabled. Sink choices can be overridden at the service and code package level.
        /// </summary>
        string[] DiagnosticDefaultSinkRef { get; set; }
        /// <summary>Status of whether or not sinks are enabled.</summary>
        bool? DiagnosticEnabled { get; set; }
        /// <summary>List of supported sinks that can be referenced.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IDiagnosticsSinkProperties[] DiagnosticSink { get; set; }
        /// <summary>Describes the health state of an application resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Support.HealthState? HealthState { get; set; }
        /// <summary>This type describes properties of an application resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationResourceProperties Property { get; set; }
        /// <summary>State of the resource.</summary>
        string ProvisioningState { get; set; }
        /// <summary>
        /// Describes the services in the application. This property is used to create or modify services of the application. On get
        /// only the name of the service is returned. The service description can be obtained by querying for the service resource.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IServiceResourceDescription[] Service { get; set; }
        /// <summary>Names of the services in the application.</summary>
        string[] ServiceName { get; set; }
        /// <summary>Status of the application.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Support.ResourceStatus? Status { get; set; }
        /// <summary>Gives additional information about the current status of the application.</summary>
        string StatusDetail { get; set; }
        /// <summary>
        /// When the application's health state is not 'Ok', this additional details from service fabric Health Manager for the user
        /// to know why the application is marked unhealthy.
        /// </summary>
        string UnhealthyEvaluation { get; set; }

    }
}