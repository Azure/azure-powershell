// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Extensions;

    /// <summary>Describes a container and its runtime properties.</summary>
    public partial class ContainerCodePackageProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerCodePackageProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerCodePackagePropertiesInternal
    {

        /// <summary>Backing field for <see cref="Command" /> property.</summary>
        private string[] _command;

        /// <summary>Command array to execute within the container in exec form.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Owned)]
        public string[] Command { get => this._command; set => this._command = value; }

        /// <summary>The state of this container</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inlined)]
        public string CurrentState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerInstanceViewInternal)InstanceView).CurrentStateState; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerInstanceViewInternal)InstanceView).CurrentStateState = value ?? null; }

        /// <summary>Human-readable status of this state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inlined)]
        public string CurrentStateDetailStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerInstanceViewInternal)InstanceView).CurrentStateDetailStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerInstanceViewInternal)InstanceView).CurrentStateDetailStatus = value ?? null; }

        /// <summary>The container exit code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inlined)]
        public string CurrentStateExitCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerInstanceViewInternal)InstanceView).CurrentStateExitCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerInstanceViewInternal)InstanceView).CurrentStateExitCode = value ?? null; }

        /// <summary>Date/time when the container state finished.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inlined)]
        public global::System.DateTime? CurrentStateFinishTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerInstanceViewInternal)InstanceView).CurrentStateFinishTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerInstanceViewInternal)InstanceView).CurrentStateFinishTime = value ?? default(global::System.DateTime); }

        /// <summary>Date/time when the container state started.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inlined)]
        public global::System.DateTime? CurrentStateStartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerInstanceViewInternal)InstanceView).CurrentStateStartTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerInstanceViewInternal)InstanceView).CurrentStateStartTime = value ?? default(global::System.DateTime); }

        /// <summary>Backing field for <see cref="Diagnostic" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IDiagnosticsRef _diagnostic;

        /// <summary>Reference to sinks in DiagnosticsDescription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IDiagnosticsRef Diagnostic { get => (this._diagnostic = this._diagnostic ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.DiagnosticsRef()); set => this._diagnostic = value; }

        /// <summary>Status of whether or not sinks are enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inlined)]
        public bool? DiagnosticEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IDiagnosticsRefInternal)Diagnostic).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IDiagnosticsRefInternal)Diagnostic).Enabled = value ?? default(bool); }

        /// <summary>
        /// List of sinks to be used if enabled. References the list of sinks in DiagnosticsDescription.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inlined)]
        public string[] DiagnosticSinkRef { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IDiagnosticsRefInternal)Diagnostic).SinkRef; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IDiagnosticsRefInternal)Diagnostic).SinkRef = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Endpoint" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IEndpointProperties[] _endpoint;

        /// <summary>The endpoints exposed by this container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IEndpointProperties[] Endpoint { get => this._endpoint; set => this._endpoint = value; }

        /// <summary>Backing field for <see cref="Entrypoint" /> property.</summary>
        private string _entrypoint;

        /// <summary>Override for the default entry point in the container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Owned)]
        public string Entrypoint { get => this._entrypoint; set => this._entrypoint = value; }

        /// <summary>Backing field for <see cref="EnvironmentVariable" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IEnvironmentVariable[] _environmentVariable;

        /// <summary>The environment variables to set in this container</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IEnvironmentVariable[] EnvironmentVariable { get => this._environmentVariable; set => this._environmentVariable = value; }

        /// <summary>Backing field for <see cref="Image" /> property.</summary>
        private string _image;

        /// <summary>The Container image to use.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Owned)]
        public string Image { get => this._image; set => this._image = value; }

        /// <summary>Backing field for <see cref="ImageRegistryCredential" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IImageRegistryCredential _imageRegistryCredential;

        /// <summary>Image registry credential.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IImageRegistryCredential ImageRegistryCredential { get => (this._imageRegistryCredential = this._imageRegistryCredential ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.ImageRegistryCredential()); set => this._imageRegistryCredential = value; }

        /// <summary>
        /// The password for the private registry. The password is required for create or update operations, however it is not returned
        /// in the get or list operations.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inlined)]
        public string ImageRegistryCredentialPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IImageRegistryCredentialInternal)ImageRegistryCredential).Password; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IImageRegistryCredentialInternal)ImageRegistryCredential).Password = value ?? null; }

        /// <summary>Docker image registry server, without protocol such as `http` and `https`.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inlined)]
        public string ImageRegistryCredentialServer { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IImageRegistryCredentialInternal)ImageRegistryCredential).Server; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IImageRegistryCredentialInternal)ImageRegistryCredential).Server = value ?? null; }

        /// <summary>The username for the private registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inlined)]
        public string ImageRegistryCredentialUsername { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IImageRegistryCredentialInternal)ImageRegistryCredential).Username; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IImageRegistryCredentialInternal)ImageRegistryCredential).Username = value ?? null; }

        /// <summary>Backing field for <see cref="InstanceView" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerInstanceView _instanceView;

        /// <summary>Runtime information of a container instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerInstanceView InstanceView { get => (this._instanceView = this._instanceView ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.ContainerInstanceView()); }

        /// <summary>The events of this container instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerEvent[] InstanceViewEvent { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerInstanceViewInternal)InstanceView).Event; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerInstanceViewInternal)InstanceView).Event = value ?? null /* arrayOf */; }

        /// <summary>The number of times the container has been restarted.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inlined)]
        public int? InstanceViewRestartCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerInstanceViewInternal)InstanceView).RestartCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerInstanceViewInternal)InstanceView).RestartCount = value ?? default(int); }

        /// <summary>Backing field for <see cref="Label" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerLabel[] _label;

        /// <summary>The labels to set in this container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerLabel[] Label { get => this._label; set => this._label = value; }

        /// <summary>CPU limits in cores. At present, only full cores are supported.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inlined)]
        public double? LimitCpu { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IResourceRequirementsInternal)Resource).LimitCpu; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IResourceRequirementsInternal)Resource).LimitCpu = value ?? default(double); }

        /// <summary>The memory limit in GB.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inlined)]
        public double? LimitMemoryInGb { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IResourceRequirementsInternal)Resource).LimitMemoryInGb; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IResourceRequirementsInternal)Resource).LimitMemoryInGb = value ?? default(double); }

        /// <summary>Internal Acessors for Diagnostic</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IDiagnosticsRef Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerCodePackagePropertiesInternal.Diagnostic { get => (this._diagnostic = this._diagnostic ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.DiagnosticsRef()); set { {_diagnostic = value;} } }

        /// <summary>Internal Acessors for ImageRegistryCredential</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IImageRegistryCredential Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerCodePackagePropertiesInternal.ImageRegistryCredential { get => (this._imageRegistryCredential = this._imageRegistryCredential ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.ImageRegistryCredential()); set { {_imageRegistryCredential = value;} } }

        /// <summary>Internal Acessors for InstanceView</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerInstanceView Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerCodePackagePropertiesInternal.InstanceView { get => (this._instanceView = this._instanceView ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.ContainerInstanceView()); set { {_instanceView = value;} } }

        /// <summary>Internal Acessors for InstanceViewCurrentState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerState Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerCodePackagePropertiesInternal.InstanceViewCurrentState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerInstanceViewInternal)InstanceView).CurrentState; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerInstanceViewInternal)InstanceView).CurrentState = value; }

        /// <summary>Internal Acessors for InstanceViewPreviousState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerState Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerCodePackagePropertiesInternal.InstanceViewPreviousState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerInstanceViewInternal)InstanceView).PreviousState; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerInstanceViewInternal)InstanceView).PreviousState = value; }

        /// <summary>Internal Acessors for Resource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IResourceRequirements Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerCodePackagePropertiesInternal.Resource { get => (this._resource = this._resource ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.ResourceRequirements()); set { {_resource = value;} } }

        /// <summary>Internal Acessors for ResourceLimit</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IResourceLimits Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerCodePackagePropertiesInternal.ResourceLimit { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IResourceRequirementsInternal)Resource).Limit; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IResourceRequirementsInternal)Resource).Limit = value; }

        /// <summary>Internal Acessors for ResourceRequest</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IResourceRequests Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerCodePackagePropertiesInternal.ResourceRequest { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IResourceRequirementsInternal)Resource).Request; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IResourceRequirementsInternal)Resource).Request = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>The name of the code package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>The state of this container</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inlined)]
        public string PreviouState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerInstanceViewInternal)InstanceView).PreviouState; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerInstanceViewInternal)InstanceView).PreviouState = value ?? null; }

        /// <summary>Human-readable status of this state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inlined)]
        public string PreviouStateDetailStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerInstanceViewInternal)InstanceView).PreviouStateDetailStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerInstanceViewInternal)InstanceView).PreviouStateDetailStatus = value ?? null; }

        /// <summary>The container exit code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inlined)]
        public string PreviouStateExitCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerInstanceViewInternal)InstanceView).PreviouStateExitCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerInstanceViewInternal)InstanceView).PreviouStateExitCode = value ?? null; }

        /// <summary>Date/time when the container state finished.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inlined)]
        public global::System.DateTime? PreviouStateFinishTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerInstanceViewInternal)InstanceView).PreviouStateFinishTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerInstanceViewInternal)InstanceView).PreviouStateFinishTime = value ?? default(global::System.DateTime); }

        /// <summary>Date/time when the container state started.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inlined)]
        public global::System.DateTime? PreviouStateStartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerInstanceViewInternal)InstanceView).PreviouStateStartTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerInstanceViewInternal)InstanceView).PreviouStateStartTime = value ?? default(global::System.DateTime); }

        /// <summary>Backing field for <see cref="ReliableCollectionsRef" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IReliableCollectionsRef[] _reliableCollectionsRef;

        /// <summary>
        /// A list of ReliableCollection resources used by this particular code package. Please refer to ReliableCollectionsRef for
        /// more details.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IReliableCollectionsRef[] ReliableCollectionsRef { get => this._reliableCollectionsRef; set => this._reliableCollectionsRef = value; }

        /// <summary>Requested number of CPU cores. At present, only full cores are supported.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inlined)]
        public double RequestCpu { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IResourceRequirementsInternal)Resource).RequestCpu; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IResourceRequirementsInternal)Resource).RequestCpu = value ; }

        /// <summary>The memory request in GB for this container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Inlined)]
        public double RequestMemoryInGb { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IResourceRequirementsInternal)Resource).RequestMemoryInGb; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IResourceRequirementsInternal)Resource).RequestMemoryInGb = value ; }

        /// <summary>Backing field for <see cref="Resource" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IResourceRequirements _resource;

        /// <summary>The resources required by this container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IResourceRequirements Resource { get => (this._resource = this._resource ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.ResourceRequirements()); set => this._resource = value; }

        /// <summary>Backing field for <see cref="Setting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.ISetting[] _setting;

        /// <summary>
        /// The settings to set in this container. The setting file path can be fetched from environment variable "Fabric_SettingPath".
        /// The path for Windows container is "C:\\secrets". The path for Linux container is "/var/secrets".
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.ISetting[] Setting { get => this._setting; set => this._setting = value; }

        /// <summary>Backing field for <see cref="Volume" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationScopedVolume[] _volume;

        /// <summary>
        /// Volumes to be attached to the container. The lifetime of these volumes is scoped to the application's lifetime.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationScopedVolume[] Volume { get => this._volume; set => this._volume = value; }

        /// <summary>Backing field for <see cref="VolumeRef" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IVolumeReference[] _volumeRef;

        /// <summary>
        /// Volumes to be attached to the container. The lifetime of these volumes is independent of the application's lifetime.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IVolumeReference[] VolumeRef { get => this._volumeRef; set => this._volumeRef = value; }

        /// <summary>Creates an new <see cref="ContainerCodePackageProperties" /> instance.</summary>
        public ContainerCodePackageProperties()
        {

        }
    }
    /// Describes a container and its runtime properties.
    public partial interface IContainerCodePackageProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.IJsonSerializable
    {
        /// <summary>Command array to execute within the container in exec form.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Command array to execute within the container in exec form.",
        SerializedName = @"commands",
        PossibleTypes = new [] { typeof(string) })]
        string[] Command { get; set; }
        /// <summary>The state of this container</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The state of this container",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(string) })]
        string CurrentState { get; set; }
        /// <summary>Human-readable status of this state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Human-readable status of this state.",
        SerializedName = @"detailStatus",
        PossibleTypes = new [] { typeof(string) })]
        string CurrentStateDetailStatus { get; set; }
        /// <summary>The container exit code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The container exit code.",
        SerializedName = @"exitCode",
        PossibleTypes = new [] { typeof(string) })]
        string CurrentStateExitCode { get; set; }
        /// <summary>Date/time when the container state finished.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Date/time when the container state finished.",
        SerializedName = @"finishTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CurrentStateFinishTime { get; set; }
        /// <summary>Date/time when the container state started.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Date/time when the container state started.",
        SerializedName = @"startTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CurrentStateStartTime { get; set; }
        /// <summary>Status of whether or not sinks are enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Status of whether or not sinks are enabled.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DiagnosticEnabled { get; set; }
        /// <summary>
        /// List of sinks to be used if enabled. References the list of sinks in DiagnosticsDescription.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of sinks to be used if enabled. References the list of sinks in DiagnosticsDescription.",
        SerializedName = @"sinkRefs",
        PossibleTypes = new [] { typeof(string) })]
        string[] DiagnosticSinkRef { get; set; }
        /// <summary>The endpoints exposed by this container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The endpoints exposed by this container.",
        SerializedName = @"endpoints",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IEndpointProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IEndpointProperties[] Endpoint { get; set; }
        /// <summary>Override for the default entry point in the container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Override for the default entry point in the container.",
        SerializedName = @"entrypoint",
        PossibleTypes = new [] { typeof(string) })]
        string Entrypoint { get; set; }
        /// <summary>The environment variables to set in this container</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The environment variables to set in this container",
        SerializedName = @"environmentVariables",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IEnvironmentVariable) })]
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IEnvironmentVariable[] EnvironmentVariable { get; set; }
        /// <summary>The Container image to use.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The Container image to use.",
        SerializedName = @"image",
        PossibleTypes = new [] { typeof(string) })]
        string Image { get; set; }
        /// <summary>
        /// The password for the private registry. The password is required for create or update operations, however it is not returned
        /// in the get or list operations.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The password for the private registry. The password is required for create or update operations, however it is not returned in the get or list operations.",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(string) })]
        string ImageRegistryCredentialPassword { get; set; }
        /// <summary>Docker image registry server, without protocol such as `http` and `https`.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Docker image registry server, without protocol such as `http` and `https`.",
        SerializedName = @"server",
        PossibleTypes = new [] { typeof(string) })]
        string ImageRegistryCredentialServer { get; set; }
        /// <summary>The username for the private registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The username for the private registry.",
        SerializedName = @"username",
        PossibleTypes = new [] { typeof(string) })]
        string ImageRegistryCredentialUsername { get; set; }
        /// <summary>The events of this container instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The events of this container instance.",
        SerializedName = @"events",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerEvent) })]
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerEvent[] InstanceViewEvent { get; set; }
        /// <summary>The number of times the container has been restarted.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of times the container has been restarted.",
        SerializedName = @"restartCount",
        PossibleTypes = new [] { typeof(int) })]
        int? InstanceViewRestartCount { get; set; }
        /// <summary>The labels to set in this container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The labels to set in this container.",
        SerializedName = @"labels",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerLabel) })]
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerLabel[] Label { get; set; }
        /// <summary>CPU limits in cores. At present, only full cores are supported.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"CPU limits in cores. At present, only full cores are supported.",
        SerializedName = @"cpu",
        PossibleTypes = new [] { typeof(double) })]
        double? LimitCpu { get; set; }
        /// <summary>The memory limit in GB.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The memory limit in GB.",
        SerializedName = @"memoryInGB",
        PossibleTypes = new [] { typeof(double) })]
        double? LimitMemoryInGb { get; set; }
        /// <summary>The name of the code package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The name of the code package.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>The state of this container</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The state of this container",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(string) })]
        string PreviouState { get; set; }
        /// <summary>Human-readable status of this state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Human-readable status of this state.",
        SerializedName = @"detailStatus",
        PossibleTypes = new [] { typeof(string) })]
        string PreviouStateDetailStatus { get; set; }
        /// <summary>The container exit code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The container exit code.",
        SerializedName = @"exitCode",
        PossibleTypes = new [] { typeof(string) })]
        string PreviouStateExitCode { get; set; }
        /// <summary>Date/time when the container state finished.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Date/time when the container state finished.",
        SerializedName = @"finishTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? PreviouStateFinishTime { get; set; }
        /// <summary>Date/time when the container state started.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Date/time when the container state started.",
        SerializedName = @"startTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? PreviouStateStartTime { get; set; }
        /// <summary>
        /// A list of ReliableCollection resources used by this particular code package. Please refer to ReliableCollectionsRef for
        /// more details.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of ReliableCollection resources used by this particular code package. Please refer to ReliableCollectionsRef for more details.",
        SerializedName = @"reliableCollectionsRefs",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IReliableCollectionsRef) })]
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IReliableCollectionsRef[] ReliableCollectionsRef { get; set; }
        /// <summary>Requested number of CPU cores. At present, only full cores are supported.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Requested number of CPU cores. At present, only full cores are supported.",
        SerializedName = @"cpu",
        PossibleTypes = new [] { typeof(double) })]
        double RequestCpu { get; set; }
        /// <summary>The memory request in GB for this container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The memory request in GB for this container.",
        SerializedName = @"memoryInGB",
        PossibleTypes = new [] { typeof(double) })]
        double RequestMemoryInGb { get; set; }
        /// <summary>
        /// The settings to set in this container. The setting file path can be fetched from environment variable "Fabric_SettingPath".
        /// The path for Windows container is "C:\\secrets". The path for Linux container is "/var/secrets".
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The settings to set in this container. The setting file path can be fetched from environment variable ""Fabric_SettingPath"". The path for Windows container is ""C:\\secrets"". The path for Linux container is ""/var/secrets"".",
        SerializedName = @"settings",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.ISetting) })]
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.ISetting[] Setting { get; set; }
        /// <summary>
        /// Volumes to be attached to the container. The lifetime of these volumes is scoped to the application's lifetime.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Volumes to be attached to the container. The lifetime of these volumes is scoped to the application's lifetime.",
        SerializedName = @"volumes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationScopedVolume) })]
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationScopedVolume[] Volume { get; set; }
        /// <summary>
        /// Volumes to be attached to the container. The lifetime of these volumes is independent of the application's lifetime.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Volumes to be attached to the container. The lifetime of these volumes is independent of the application's lifetime.",
        SerializedName = @"volumeRefs",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IVolumeReference) })]
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IVolumeReference[] VolumeRef { get; set; }

    }
    /// Describes a container and its runtime properties.
    internal partial interface IContainerCodePackagePropertiesInternal

    {
        /// <summary>Command array to execute within the container in exec form.</summary>
        string[] Command { get; set; }
        /// <summary>The state of this container</summary>
        string CurrentState { get; set; }
        /// <summary>Human-readable status of this state.</summary>
        string CurrentStateDetailStatus { get; set; }
        /// <summary>The container exit code.</summary>
        string CurrentStateExitCode { get; set; }
        /// <summary>Date/time when the container state finished.</summary>
        global::System.DateTime? CurrentStateFinishTime { get; set; }
        /// <summary>Date/time when the container state started.</summary>
        global::System.DateTime? CurrentStateStartTime { get; set; }
        /// <summary>Reference to sinks in DiagnosticsDescription.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IDiagnosticsRef Diagnostic { get; set; }
        /// <summary>Status of whether or not sinks are enabled.</summary>
        bool? DiagnosticEnabled { get; set; }
        /// <summary>
        /// List of sinks to be used if enabled. References the list of sinks in DiagnosticsDescription.
        /// </summary>
        string[] DiagnosticSinkRef { get; set; }
        /// <summary>The endpoints exposed by this container.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IEndpointProperties[] Endpoint { get; set; }
        /// <summary>Override for the default entry point in the container.</summary>
        string Entrypoint { get; set; }
        /// <summary>The environment variables to set in this container</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IEnvironmentVariable[] EnvironmentVariable { get; set; }
        /// <summary>The Container image to use.</summary>
        string Image { get; set; }
        /// <summary>Image registry credential.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IImageRegistryCredential ImageRegistryCredential { get; set; }
        /// <summary>
        /// The password for the private registry. The password is required for create or update operations, however it is not returned
        /// in the get or list operations.
        /// </summary>
        string ImageRegistryCredentialPassword { get; set; }
        /// <summary>Docker image registry server, without protocol such as `http` and `https`.</summary>
        string ImageRegistryCredentialServer { get; set; }
        /// <summary>The username for the private registry.</summary>
        string ImageRegistryCredentialUsername { get; set; }
        /// <summary>Runtime information of a container instance.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerInstanceView InstanceView { get; set; }
        /// <summary>Current container instance state.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerState InstanceViewCurrentState { get; set; }
        /// <summary>The events of this container instance.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerEvent[] InstanceViewEvent { get; set; }
        /// <summary>Previous container instance state.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerState InstanceViewPreviousState { get; set; }
        /// <summary>The number of times the container has been restarted.</summary>
        int? InstanceViewRestartCount { get; set; }
        /// <summary>The labels to set in this container.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IContainerLabel[] Label { get; set; }
        /// <summary>CPU limits in cores. At present, only full cores are supported.</summary>
        double? LimitCpu { get; set; }
        /// <summary>The memory limit in GB.</summary>
        double? LimitMemoryInGb { get; set; }
        /// <summary>The name of the code package.</summary>
        string Name { get; set; }
        /// <summary>The state of this container</summary>
        string PreviouState { get; set; }
        /// <summary>Human-readable status of this state.</summary>
        string PreviouStateDetailStatus { get; set; }
        /// <summary>The container exit code.</summary>
        string PreviouStateExitCode { get; set; }
        /// <summary>Date/time when the container state finished.</summary>
        global::System.DateTime? PreviouStateFinishTime { get; set; }
        /// <summary>Date/time when the container state started.</summary>
        global::System.DateTime? PreviouStateStartTime { get; set; }
        /// <summary>
        /// A list of ReliableCollection resources used by this particular code package. Please refer to ReliableCollectionsRef for
        /// more details.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IReliableCollectionsRef[] ReliableCollectionsRef { get; set; }
        /// <summary>Requested number of CPU cores. At present, only full cores are supported.</summary>
        double RequestCpu { get; set; }
        /// <summary>The memory request in GB for this container.</summary>
        double RequestMemoryInGb { get; set; }
        /// <summary>The resources required by this container.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IResourceRequirements Resource { get; set; }
        /// <summary>Describes the maximum limits on the resources for a given container.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IResourceLimits ResourceLimit { get; set; }
        /// <summary>Describes the requested resources for a given container.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IResourceRequests ResourceRequest { get; set; }
        /// <summary>
        /// The settings to set in this container. The setting file path can be fetched from environment variable "Fabric_SettingPath".
        /// The path for Windows container is "C:\\secrets". The path for Linux container is "/var/secrets".
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.ISetting[] Setting { get; set; }
        /// <summary>
        /// Volumes to be attached to the container. The lifetime of these volumes is scoped to the application's lifetime.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IApplicationScopedVolume[] Volume { get; set; }
        /// <summary>
        /// Volumes to be attached to the container. The lifetime of these volumes is independent of the application's lifetime.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceFabricMesh.Models.Api20180901Preview.IVolumeReference[] VolumeRef { get; set; }

    }
}