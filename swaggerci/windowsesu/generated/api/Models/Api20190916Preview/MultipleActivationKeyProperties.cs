// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Windowsesu.Models.Api20190916Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Windowsesu.Runtime.Extensions;

    /// <summary>MAK key specific properties.</summary>
    public partial class MultipleActivationKeyProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Windowsesu.Models.Api20190916Preview.IMultipleActivationKeyProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Windowsesu.Models.Api20190916Preview.IMultipleActivationKeyPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AgreementNumber" /> property.</summary>
        private string _agreementNumber;

        /// <summary>Agreement number under which the key is requested.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Windowsesu.Origin(Microsoft.Azure.PowerShell.Cmdlets.Windowsesu.PropertyOrigin.Owned)]
        public string AgreementNumber { get => this._agreementNumber; set => this._agreementNumber = value; }

        /// <summary>Backing field for <see cref="ExpirationDate" /> property.</summary>
        private global::System.DateTime? _expirationDate;

        /// <summary>End of support of security updates activated by the MAK key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Windowsesu.Origin(Microsoft.Azure.PowerShell.Cmdlets.Windowsesu.PropertyOrigin.Owned)]
        public global::System.DateTime? ExpirationDate { get => this._expirationDate; }

        /// <summary>Backing field for <see cref="InstalledServerNumber" /> property.</summary>
        private int? _installedServerNumber;

        /// <summary>Number of activations/servers using the MAK key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Windowsesu.Origin(Microsoft.Azure.PowerShell.Cmdlets.Windowsesu.PropertyOrigin.Owned)]
        public int? InstalledServerNumber { get => this._installedServerNumber; set => this._installedServerNumber = value; }

        /// <summary>Backing field for <see cref="IsEligible" /> property.</summary>
        private bool? _isEligible;

        /// <summary>
        /// <code> true </code> if user has eligible on-premises Windows physical or virtual machines, and that the requested key
        /// will only be used in their organization; <code> false </code> otherwise.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Windowsesu.Origin(Microsoft.Azure.PowerShell.Cmdlets.Windowsesu.PropertyOrigin.Owned)]
        public bool? IsEligible { get => this._isEligible; set => this._isEligible = value; }

        /// <summary>Internal Acessors for ExpirationDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Windowsesu.Models.Api20190916Preview.IMultipleActivationKeyPropertiesInternal.ExpirationDate { get => this._expirationDate; set { {_expirationDate = value;} } }

        /// <summary>Internal Acessors for MultipleActivationKey</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Windowsesu.Models.Api20190916Preview.IMultipleActivationKeyPropertiesInternal.MultipleActivationKey { get => this._multipleActivationKey; set { {_multipleActivationKey = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Windowsesu.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.Windowsesu.Models.Api20190916Preview.IMultipleActivationKeyPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Backing field for <see cref="MultipleActivationKey" /> property.</summary>
        private string _multipleActivationKey;

        /// <summary>MAK 5x5 key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Windowsesu.Origin(Microsoft.Azure.PowerShell.Cmdlets.Windowsesu.PropertyOrigin.Owned)]
        public string MultipleActivationKey { get => this._multipleActivationKey; }

        /// <summary>Backing field for <see cref="OSType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Windowsesu.Support.OSType? _oSType;

        /// <summary>Type of OS for which the key is requested.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Windowsesu.Origin(Microsoft.Azure.PowerShell.Cmdlets.Windowsesu.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Windowsesu.Support.OSType? OSType { get => this._oSType; set => this._oSType = value; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Windowsesu.Support.ProvisioningState? _provisioningState;

        [Microsoft.Azure.PowerShell.Cmdlets.Windowsesu.Origin(Microsoft.Azure.PowerShell.Cmdlets.Windowsesu.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Windowsesu.Support.ProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="SupportType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Windowsesu.Support.SupportType? _supportType;

        /// <summary>Type of support</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Windowsesu.Origin(Microsoft.Azure.PowerShell.Cmdlets.Windowsesu.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Windowsesu.Support.SupportType? SupportType { get => this._supportType; set => this._supportType = value; }

        /// <summary>Creates an new <see cref="MultipleActivationKeyProperties" /> instance.</summary>
        public MultipleActivationKeyProperties()
        {

        }
    }
    /// MAK key specific properties.
    public partial interface IMultipleActivationKeyProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Windowsesu.Runtime.IJsonSerializable
    {
        /// <summary>Agreement number under which the key is requested.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Windowsesu.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Agreement number under which the key is requested.",
        SerializedName = @"agreementNumber",
        PossibleTypes = new [] { typeof(string) })]
        string AgreementNumber { get; set; }
        /// <summary>End of support of security updates activated by the MAK key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Windowsesu.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"End of support of security updates activated by the MAK key.",
        SerializedName = @"expirationDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ExpirationDate { get;  }
        /// <summary>Number of activations/servers using the MAK key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Windowsesu.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of activations/servers using the MAK key.",
        SerializedName = @"installedServerNumber",
        PossibleTypes = new [] { typeof(int) })]
        int? InstalledServerNumber { get; set; }
        /// <summary>
        /// <code> true </code> if user has eligible on-premises Windows physical or virtual machines, and that the requested key
        /// will only be used in their organization; <code> false </code> otherwise.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Windowsesu.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<code> true </code> if user has eligible on-premises Windows physical or virtual machines, and that the requested key will only be used in their organization; <code> false </code> otherwise.",
        SerializedName = @"isEligible",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsEligible { get; set; }
        /// <summary>MAK 5x5 key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Windowsesu.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"MAK 5x5 key.",
        SerializedName = @"multipleActivationKey",
        PossibleTypes = new [] { typeof(string) })]
        string MultipleActivationKey { get;  }
        /// <summary>Type of OS for which the key is requested.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Windowsesu.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of OS for which the key is requested.",
        SerializedName = @"osType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Windowsesu.Support.OSType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Windowsesu.Support.OSType? OSType { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Windowsesu.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Windowsesu.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Windowsesu.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>Type of support</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Windowsesu.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of support",
        SerializedName = @"supportType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Windowsesu.Support.SupportType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Windowsesu.Support.SupportType? SupportType { get; set; }

    }
    /// MAK key specific properties.
    internal partial interface IMultipleActivationKeyPropertiesInternal

    {
        /// <summary>Agreement number under which the key is requested.</summary>
        string AgreementNumber { get; set; }
        /// <summary>End of support of security updates activated by the MAK key.</summary>
        global::System.DateTime? ExpirationDate { get; set; }
        /// <summary>Number of activations/servers using the MAK key.</summary>
        int? InstalledServerNumber { get; set; }
        /// <summary>
        /// <code> true </code> if user has eligible on-premises Windows physical or virtual machines, and that the requested key
        /// will only be used in their organization; <code> false </code> otherwise.
        /// </summary>
        bool? IsEligible { get; set; }
        /// <summary>MAK 5x5 key.</summary>
        string MultipleActivationKey { get; set; }
        /// <summary>Type of OS for which the key is requested.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Windowsesu.Support.OSType? OSType { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Windowsesu.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>Type of support</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Windowsesu.Support.SupportType? SupportType { get; set; }

    }
}