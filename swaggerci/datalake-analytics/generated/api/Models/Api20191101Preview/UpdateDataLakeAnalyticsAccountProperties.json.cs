// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Extensions;

    /// <summary>
    /// The properties to update that are associated with an underlying Data Lake Analytics account.
    /// </summary>
    public partial class UpdateDataLakeAnalyticsAccountProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json erialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateDataLakeAnalyticsAccountProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateDataLakeAnalyticsAccountProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateDataLakeAnalyticsAccountProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.JsonObject json ? new UpdateDataLakeAnalyticsAccountProperties(json) : null;
        }

        /// <summary>
        /// Serializes this instance of <see cref="UpdateDataLakeAnalyticsAccountProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.JsonNode"
        /// />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="UpdateDataLakeAnalyticsAccountProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.JsonNode"
        /// />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            if (null != this._dataLakeStoreAccount)
            {
                var __w = new Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.XNodeArray();
                foreach( var __x in this._dataLakeStoreAccount )
                {
                    AddIf(__x?.ToJson(null, serializationMode) ,__w.Add);
                }
                container.Add("dataLakeStoreAccounts",__w);
            }
            if (null != this._storageAccount)
            {
                var __r = new Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.XNodeArray();
                foreach( var __s in this._storageAccount )
                {
                    AddIf(__s?.ToJson(null, serializationMode) ,__r.Add);
                }
                container.Add("storageAccounts",__r);
            }
            if (null != this._computePolicy)
            {
                var __m = new Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.XNodeArray();
                foreach( var __n in this._computePolicy )
                {
                    AddIf(__n?.ToJson(null, serializationMode) ,__m.Add);
                }
                container.Add("computePolicies",__m);
            }
            if (null != this._firewallRule)
            {
                var __h = new Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.XNodeArray();
                foreach( var __i in this._firewallRule )
                {
                    AddIf(__i?.ToJson(null, serializationMode) ,__h.Add);
                }
                container.Add("firewallRules",__h);
            }
            AddIf( null != (((object)this._firewallState)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.JsonString(this._firewallState.ToString()) : null, "firewallState" ,container.Add );
            AddIf( null != (((object)this._firewallAllowAzureIP)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.JsonString(this._firewallAllowAzureIP.ToString()) : null, "firewallAllowAzureIps" ,container.Add );
            AddIf( null != (((object)this._newTier)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.JsonString(this._newTier.ToString()) : null, "newTier" ,container.Add );
            AddIf( null != this._maxJobCount ? (Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.JsonNumber((int)this._maxJobCount) : null, "maxJobCount" ,container.Add );
            AddIf( null != this._maxDegreeOfParallelism ? (Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.JsonNumber((int)this._maxDegreeOfParallelism) : null, "maxDegreeOfParallelism" ,container.Add );
            AddIf( null != this._maxDegreeOfParallelismPerJob ? (Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.JsonNumber((int)this._maxDegreeOfParallelismPerJob) : null, "maxDegreeOfParallelismPerJob" ,container.Add );
            AddIf( null != this._minPriorityPerJob ? (Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.JsonNumber((int)this._minPriorityPerJob) : null, "minPriorityPerJob" ,container.Add );
            AddIf( null != this._queryStoreRetention ? (Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.JsonNumber((int)this._queryStoreRetention) : null, "queryStoreRetention" ,container.Add );
            AfterToJson(ref container);
            return container;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.JsonObject into a new instance of <see cref="UpdateDataLakeAnalyticsAccountProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal UpdateDataLakeAnalyticsAccountProperties(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_dataLakeStoreAccount = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.JsonArray>("dataLakeStoreAccounts"), out var __jsonDataLakeStoreAccounts) ? If( __jsonDataLakeStoreAccounts as Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateDataLakeStoreWithAccountParameters[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateDataLakeStoreWithAccountParameters) (Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.UpdateDataLakeStoreWithAccountParameters.FromJson(__u) )) ))() : null : DataLakeStoreAccount;}
            {_storageAccount = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.JsonArray>("storageAccounts"), out var __jsonStorageAccounts) ? If( __jsonStorageAccounts as Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.JsonArray, out var __q) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateStorageAccountWithAccountParameters[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__q, (__p)=>(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateStorageAccountWithAccountParameters) (Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.UpdateStorageAccountWithAccountParameters.FromJson(__p) )) ))() : null : StorageAccount;}
            {_computePolicy = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.JsonArray>("computePolicies"), out var __jsonComputePolicies) ? If( __jsonComputePolicies as Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.JsonArray, out var __l) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateComputePolicyWithAccountParameters[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__l, (__k)=>(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateComputePolicyWithAccountParameters) (Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.UpdateComputePolicyWithAccountParameters.FromJson(__k) )) ))() : null : ComputePolicy;}
            {_firewallRule = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.JsonArray>("firewallRules"), out var __jsonFirewallRules) ? If( __jsonFirewallRules as Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.JsonArray, out var __g) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateFirewallRuleWithAccountParameters[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__g, (__f)=>(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateFirewallRuleWithAccountParameters) (Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.UpdateFirewallRuleWithAccountParameters.FromJson(__f) )) ))() : null : FirewallRule;}
            {_firewallState = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.JsonString>("firewallState"), out var __jsonFirewallState) ? (string)__jsonFirewallState : (string)FirewallState;}
            {_firewallAllowAzureIP = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.JsonString>("firewallAllowAzureIps"), out var __jsonFirewallAllowAzureIps) ? (string)__jsonFirewallAllowAzureIps : (string)FirewallAllowAzureIP;}
            {_newTier = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.JsonString>("newTier"), out var __jsonNewTier) ? (string)__jsonNewTier : (string)NewTier;}
            {_maxJobCount = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.JsonNumber>("maxJobCount"), out var __jsonMaxJobCount) ? (int?)__jsonMaxJobCount : MaxJobCount;}
            {_maxDegreeOfParallelism = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.JsonNumber>("maxDegreeOfParallelism"), out var __jsonMaxDegreeOfParallelism) ? (int?)__jsonMaxDegreeOfParallelism : MaxDegreeOfParallelism;}
            {_maxDegreeOfParallelismPerJob = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.JsonNumber>("maxDegreeOfParallelismPerJob"), out var __jsonMaxDegreeOfParallelismPerJob) ? (int?)__jsonMaxDegreeOfParallelismPerJob : MaxDegreeOfParallelismPerJob;}
            {_minPriorityPerJob = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.JsonNumber>("minPriorityPerJob"), out var __jsonMinPriorityPerJob) ? (int?)__jsonMinPriorityPerJob : MinPriorityPerJob;}
            {_queryStoreRetention = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Json.JsonNumber>("queryStoreRetention"), out var __jsonQueryStoreRetention) ? (int?)__jsonQueryStoreRetention : QueryStoreRetention;}
            AfterFromJson(json);
        }
    }
}