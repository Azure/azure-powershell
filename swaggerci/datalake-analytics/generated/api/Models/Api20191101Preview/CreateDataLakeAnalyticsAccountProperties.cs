// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Extensions;

    public partial class CreateDataLakeAnalyticsAccountProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.ICreateDataLakeAnalyticsAccountProperties,
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.ICreateDataLakeAnalyticsAccountPropertiesInternal
    {

        /// <summary>Backing field for <see cref="ComputePolicy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.ICreateComputePolicyWithAccountParameters[] _computePolicy;

        /// <summary>The list of compute policies associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.ICreateComputePolicyWithAccountParameters[] ComputePolicy { get => this._computePolicy; set => this._computePolicy = value; }

        /// <summary>Backing field for <see cref="DataLakeStoreAccount" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IAddDataLakeStoreWithAccountParameters[] _dataLakeStoreAccount;

        /// <summary>The list of Data Lake Store accounts associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IAddDataLakeStoreWithAccountParameters[] DataLakeStoreAccount { get => this._dataLakeStoreAccount; set => this._dataLakeStoreAccount = value; }

        /// <summary>Backing field for <see cref="DefaultDataLakeStoreAccount" /> property.</summary>
        private string _defaultDataLakeStoreAccount;

        /// <summary>The default Data Lake Store account associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Owned)]
        public string DefaultDataLakeStoreAccount { get => this._defaultDataLakeStoreAccount; set => this._defaultDataLakeStoreAccount = value; }

        /// <summary>Backing field for <see cref="FirewallAllowAzureIP" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.FirewallAllowAzureIpsState? _firewallAllowAzureIP;

        /// <summary>
        /// The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled,
        /// this is not enforced.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.FirewallAllowAzureIpsState? FirewallAllowAzureIP { get => this._firewallAllowAzureIP; set => this._firewallAllowAzureIP = value; }

        /// <summary>Backing field for <see cref="FirewallRule" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.ICreateFirewallRuleWithAccountParameters[] _firewallRule;

        /// <summary>The list of firewall rules associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.ICreateFirewallRuleWithAccountParameters[] FirewallRule { get => this._firewallRule; set => this._firewallRule = value; }

        /// <summary>Backing field for <see cref="FirewallState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.FirewallState? _firewallState;

        /// <summary>The current state of the IP address firewall for this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.FirewallState? FirewallState { get => this._firewallState; set => this._firewallState = value; }

        /// <summary>Backing field for <see cref="MaxDegreeOfParallelism" /> property.</summary>
        private int? _maxDegreeOfParallelism;

        /// <summary>The maximum supported degree of parallelism for this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Owned)]
        public int? MaxDegreeOfParallelism { get => this._maxDegreeOfParallelism; set => this._maxDegreeOfParallelism = value; }

        /// <summary>Backing field for <see cref="MaxDegreeOfParallelismPerJob" /> property.</summary>
        private int? _maxDegreeOfParallelismPerJob;

        /// <summary>The maximum supported degree of parallelism per job for this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Owned)]
        public int? MaxDegreeOfParallelismPerJob { get => this._maxDegreeOfParallelismPerJob; set => this._maxDegreeOfParallelismPerJob = value; }

        /// <summary>Backing field for <see cref="MaxJobCount" /> property.</summary>
        private int? _maxJobCount;

        /// <summary>The maximum supported jobs running under the account at the same time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Owned)]
        public int? MaxJobCount { get => this._maxJobCount; set => this._maxJobCount = value; }

        /// <summary>Backing field for <see cref="MinPriorityPerJob" /> property.</summary>
        private int? _minPriorityPerJob;

        /// <summary>The minimum supported priority per job for this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Owned)]
        public int? MinPriorityPerJob { get => this._minPriorityPerJob; set => this._minPriorityPerJob = value; }

        /// <summary>Backing field for <see cref="NewTier" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.TierType? _newTier;

        /// <summary>The commitment tier for the next month.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.TierType? NewTier { get => this._newTier; set => this._newTier = value; }

        /// <summary>Backing field for <see cref="QueryStoreRetention" /> property.</summary>
        private int? _queryStoreRetention;

        /// <summary>The number of days that job metadata is retained.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Owned)]
        public int? QueryStoreRetention { get => this._queryStoreRetention; set => this._queryStoreRetention = value; }

        /// <summary>Backing field for <see cref="StorageAccount" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IAddStorageAccountWithAccountParameters[] _storageAccount;

        /// <summary>The list of Azure Blob Storage accounts associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IAddStorageAccountWithAccountParameters[] StorageAccount { get => this._storageAccount; set => this._storageAccount = value; }

        /// <summary>
        /// Creates an new <see cref="CreateDataLakeAnalyticsAccountProperties" /> instance.
        /// </summary>
        public CreateDataLakeAnalyticsAccountProperties()
        {

        }
    }
    public partial interface ICreateDataLakeAnalyticsAccountProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.IJsonSerializable
    {
        /// <summary>The list of compute policies associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of compute policies associated with this account.",
        SerializedName = @"computePolicies",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.ICreateComputePolicyWithAccountParameters) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.ICreateComputePolicyWithAccountParameters[] ComputePolicy { get; set; }
        /// <summary>The list of Data Lake Store accounts associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The list of Data Lake Store accounts associated with this account.",
        SerializedName = @"dataLakeStoreAccounts",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IAddDataLakeStoreWithAccountParameters) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IAddDataLakeStoreWithAccountParameters[] DataLakeStoreAccount { get; set; }
        /// <summary>The default Data Lake Store account associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The default Data Lake Store account associated with this account.",
        SerializedName = @"defaultDataLakeStoreAccount",
        PossibleTypes = new [] { typeof(string) })]
        string DefaultDataLakeStoreAccount { get; set; }
        /// <summary>
        /// The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled,
        /// this is not enforced.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.",
        SerializedName = @"firewallAllowAzureIps",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.FirewallAllowAzureIpsState) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.FirewallAllowAzureIpsState? FirewallAllowAzureIP { get; set; }
        /// <summary>The list of firewall rules associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of firewall rules associated with this account.",
        SerializedName = @"firewallRules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.ICreateFirewallRuleWithAccountParameters) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.ICreateFirewallRuleWithAccountParameters[] FirewallRule { get; set; }
        /// <summary>The current state of the IP address firewall for this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The current state of the IP address firewall for this account.",
        SerializedName = @"firewallState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.FirewallState) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.FirewallState? FirewallState { get; set; }
        /// <summary>The maximum supported degree of parallelism for this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum supported degree of parallelism for this account.",
        SerializedName = @"maxDegreeOfParallelism",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxDegreeOfParallelism { get; set; }
        /// <summary>The maximum supported degree of parallelism per job for this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum supported degree of parallelism per job for this account.",
        SerializedName = @"maxDegreeOfParallelismPerJob",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxDegreeOfParallelismPerJob { get; set; }
        /// <summary>The maximum supported jobs running under the account at the same time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum supported jobs running under the account at the same time.",
        SerializedName = @"maxJobCount",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxJobCount { get; set; }
        /// <summary>The minimum supported priority per job for this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The minimum supported priority per job for this account.",
        SerializedName = @"minPriorityPerJob",
        PossibleTypes = new [] { typeof(int) })]
        int? MinPriorityPerJob { get; set; }
        /// <summary>The commitment tier for the next month.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The commitment tier for the next month.",
        SerializedName = @"newTier",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.TierType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.TierType? NewTier { get; set; }
        /// <summary>The number of days that job metadata is retained.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of days that job metadata is retained.",
        SerializedName = @"queryStoreRetention",
        PossibleTypes = new [] { typeof(int) })]
        int? QueryStoreRetention { get; set; }
        /// <summary>The list of Azure Blob Storage accounts associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of Azure Blob Storage accounts associated with this account.",
        SerializedName = @"storageAccounts",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IAddStorageAccountWithAccountParameters) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IAddStorageAccountWithAccountParameters[] StorageAccount { get; set; }

    }
    internal partial interface ICreateDataLakeAnalyticsAccountPropertiesInternal

    {
        /// <summary>The list of compute policies associated with this account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.ICreateComputePolicyWithAccountParameters[] ComputePolicy { get; set; }
        /// <summary>The list of Data Lake Store accounts associated with this account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IAddDataLakeStoreWithAccountParameters[] DataLakeStoreAccount { get; set; }
        /// <summary>The default Data Lake Store account associated with this account.</summary>
        string DefaultDataLakeStoreAccount { get; set; }
        /// <summary>
        /// The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled,
        /// this is not enforced.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.FirewallAllowAzureIpsState? FirewallAllowAzureIP { get; set; }
        /// <summary>The list of firewall rules associated with this account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.ICreateFirewallRuleWithAccountParameters[] FirewallRule { get; set; }
        /// <summary>The current state of the IP address firewall for this account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.FirewallState? FirewallState { get; set; }
        /// <summary>The maximum supported degree of parallelism for this account.</summary>
        int? MaxDegreeOfParallelism { get; set; }
        /// <summary>The maximum supported degree of parallelism per job for this account.</summary>
        int? MaxDegreeOfParallelismPerJob { get; set; }
        /// <summary>The maximum supported jobs running under the account at the same time.</summary>
        int? MaxJobCount { get; set; }
        /// <summary>The minimum supported priority per job for this account.</summary>
        int? MinPriorityPerJob { get; set; }
        /// <summary>The commitment tier for the next month.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.TierType? NewTier { get; set; }
        /// <summary>The number of days that job metadata is retained.</summary>
        int? QueryStoreRetention { get; set; }
        /// <summary>The list of Azure Blob Storage accounts associated with this account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IAddStorageAccountWithAccountParameters[] StorageAccount { get; set; }

    }
}