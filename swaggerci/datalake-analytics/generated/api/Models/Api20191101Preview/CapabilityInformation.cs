// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Extensions;

    /// <summary>Subscription-level properties and limits for Data Lake Analytics.</summary>
    public partial class CapabilityInformation :
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.ICapabilityInformation,
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.ICapabilityInformationInternal
    {

        /// <summary>Backing field for <see cref="AccountCount" /> property.</summary>
        private int? _accountCount;

        /// <summary>The current number of accounts under this subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Owned)]
        public int? AccountCount { get => this._accountCount; }

        /// <summary>Backing field for <see cref="MaxAccountCount" /> property.</summary>
        private int? _maxAccountCount;

        /// <summary>The maximum supported number of accounts under this subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Owned)]
        public int? MaxAccountCount { get => this._maxAccountCount; }

        /// <summary>Internal Acessors for AccountCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.ICapabilityInformationInternal.AccountCount { get => this._accountCount; set { {_accountCount = value;} } }

        /// <summary>Internal Acessors for MaxAccountCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.ICapabilityInformationInternal.MaxAccountCount { get => this._maxAccountCount; set { {_maxAccountCount = value;} } }

        /// <summary>Internal Acessors for MigrationState</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.ICapabilityInformationInternal.MigrationState { get => this._migrationState; set { {_migrationState = value;} } }

        /// <summary>Internal Acessors for State</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.SubscriptionState? Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.ICapabilityInformationInternal.State { get => this._state; set { {_state = value;} } }

        /// <summary>Internal Acessors for SubscriptionId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.ICapabilityInformationInternal.SubscriptionId { get => this._subscriptionId; set { {_subscriptionId = value;} } }

        /// <summary>Backing field for <see cref="MigrationState" /> property.</summary>
        private bool? _migrationState;

        /// <summary>The Boolean value of true or false to indicate the maintenance state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Owned)]
        public bool? MigrationState { get => this._migrationState; }

        /// <summary>Backing field for <see cref="State" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.SubscriptionState? _state;

        /// <summary>The subscription state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.SubscriptionState? State { get => this._state; }

        /// <summary>Backing field for <see cref="SubscriptionId" /> property.</summary>
        private string _subscriptionId;

        /// <summary>The subscription credentials that uniquely identifies the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Owned)]
        public string SubscriptionId { get => this._subscriptionId; }

        /// <summary>Creates an new <see cref="CapabilityInformation" /> instance.</summary>
        public CapabilityInformation()
        {

        }
    }
    /// Subscription-level properties and limits for Data Lake Analytics.
    public partial interface ICapabilityInformation :
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.IJsonSerializable
    {
        /// <summary>The current number of accounts under this subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The current number of accounts under this subscription.",
        SerializedName = @"accountCount",
        PossibleTypes = new [] { typeof(int) })]
        int? AccountCount { get;  }
        /// <summary>The maximum supported number of accounts under this subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The maximum supported number of accounts under this subscription.",
        SerializedName = @"maxAccountCount",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxAccountCount { get;  }
        /// <summary>The Boolean value of true or false to indicate the maintenance state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The Boolean value of true or false to indicate the maintenance state.",
        SerializedName = @"migrationState",
        PossibleTypes = new [] { typeof(bool) })]
        bool? MigrationState { get;  }
        /// <summary>The subscription state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The subscription state.",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.SubscriptionState) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.SubscriptionState? State { get;  }
        /// <summary>The subscription credentials that uniquely identifies the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The subscription credentials that uniquely identifies the subscription.",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionId { get;  }

    }
    /// Subscription-level properties and limits for Data Lake Analytics.
    internal partial interface ICapabilityInformationInternal

    {
        /// <summary>The current number of accounts under this subscription.</summary>
        int? AccountCount { get; set; }
        /// <summary>The maximum supported number of accounts under this subscription.</summary>
        int? MaxAccountCount { get; set; }
        /// <summary>The Boolean value of true or false to indicate the maintenance state.</summary>
        bool? MigrationState { get; set; }
        /// <summary>The subscription state.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.SubscriptionState? State { get; set; }
        /// <summary>The subscription credentials that uniquely identifies the subscription.</summary>
        string SubscriptionId { get; set; }

    }
}