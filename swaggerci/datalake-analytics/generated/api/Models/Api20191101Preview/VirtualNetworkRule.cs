// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Extensions;

    /// <summary>Data Lake Analytics VirtualNetwork Rule information.</summary>
    public partial class VirtualNetworkRule :
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IVirtualNetworkRule,
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IVirtualNetworkRuleInternal,
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.ISubResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.ISubResource __subResource = new Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.SubResource();

        /// <summary>The resource identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.ISubResourceInternal)__subResource).Id; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.ISubResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.ISubResourceInternal)__subResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.ISubResourceInternal)__subResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.ISubResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.ISubResourceInternal)__subResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.ISubResourceInternal)__subResource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.ISubResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.ISubResourceInternal)__subResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.ISubResourceInternal)__subResource).Type = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IVirtualNetworkRuleProperties Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IVirtualNetworkRuleInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.VirtualNetworkRuleProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for State</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.VirtualNetworkRuleState? Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IVirtualNetworkRuleInternal.State { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IVirtualNetworkRulePropertiesInternal)Property).VirtualNetworkRuleState; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IVirtualNetworkRulePropertiesInternal)Property).VirtualNetworkRuleState = value; }

        /// <summary>Internal Acessors for SubnetId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IVirtualNetworkRuleInternal.SubnetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IVirtualNetworkRulePropertiesInternal)Property).SubnetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IVirtualNetworkRulePropertiesInternal)Property).SubnetId = value; }

        /// <summary>The resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.ISubResourceInternal)__subResource).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IVirtualNetworkRuleProperties _property;

        /// <summary>The VirtualNetwork rule properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IVirtualNetworkRuleProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.VirtualNetworkRuleProperties()); }

        /// <summary>The current state of the VirtualNetwork Rule</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.VirtualNetworkRuleState? State { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IVirtualNetworkRulePropertiesInternal)Property).VirtualNetworkRuleState; }

        /// <summary>The resource identifier for the subnet</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inlined)]
        public string SubnetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IVirtualNetworkRulePropertiesInternal)Property).SubnetId; }

        /// <summary>The resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.ISubResourceInternal)__subResource).Type; }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__subResource), __subResource);
            await eventListener.AssertObjectIsValid(nameof(__subResource), __subResource);
        }

        /// <summary>Creates an new <see cref="VirtualNetworkRule" /> instance.</summary>
        public VirtualNetworkRule()
        {

        }
    }
    /// Data Lake Analytics VirtualNetwork Rule information.
    public partial interface IVirtualNetworkRule :
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.ISubResource
    {
        /// <summary>The current state of the VirtualNetwork Rule</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The current state of the VirtualNetwork Rule",
        SerializedName = @"virtualNetworkRuleState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.VirtualNetworkRuleState) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.VirtualNetworkRuleState? State { get;  }
        /// <summary>The resource identifier for the subnet</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The resource identifier for the subnet",
        SerializedName = @"subnetId",
        PossibleTypes = new [] { typeof(string) })]
        string SubnetId { get;  }

    }
    /// Data Lake Analytics VirtualNetwork Rule information.
    internal partial interface IVirtualNetworkRuleInternal :
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.ISubResourceInternal
    {
        /// <summary>The VirtualNetwork rule properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IVirtualNetworkRuleProperties Property { get; set; }
        /// <summary>The current state of the VirtualNetwork Rule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.VirtualNetworkRuleState? State { get; set; }
        /// <summary>The resource identifier for the subnet</summary>
        string SubnetId { get; set; }

    }
}