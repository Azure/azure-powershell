// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Extensions;

    /// <summary>
    /// The parameters that can be used to update an existing Data Lake Analytics account.
    /// </summary>
    public partial class UpdateDataLakeAnalyticsAccountParameters :
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateDataLakeAnalyticsAccountParameters,
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateDataLakeAnalyticsAccountParametersInternal
    {

        /// <summary>The list of compute policies associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateComputePolicyWithAccountParameters[] ComputePolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateDataLakeAnalyticsAccountPropertiesInternal)Property).ComputePolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateDataLakeAnalyticsAccountPropertiesInternal)Property).ComputePolicy = value ?? null /* arrayOf */; }

        /// <summary>The list of Data Lake Store accounts associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateDataLakeStoreWithAccountParameters[] DataLakeStoreAccount { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateDataLakeAnalyticsAccountPropertiesInternal)Property).DataLakeStoreAccount; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateDataLakeAnalyticsAccountPropertiesInternal)Property).DataLakeStoreAccount = value ?? null /* arrayOf */; }

        /// <summary>
        /// The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled,
        /// this is not enforced.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.FirewallAllowAzureIpsState? FirewallAllowAzureIP { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateDataLakeAnalyticsAccountPropertiesInternal)Property).FirewallAllowAzureIP; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateDataLakeAnalyticsAccountPropertiesInternal)Property).FirewallAllowAzureIP = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.FirewallAllowAzureIpsState)""); }

        /// <summary>The list of firewall rules associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateFirewallRuleWithAccountParameters[] FirewallRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateDataLakeAnalyticsAccountPropertiesInternal)Property).FirewallRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateDataLakeAnalyticsAccountPropertiesInternal)Property).FirewallRule = value ?? null /* arrayOf */; }

        /// <summary>
        /// The current state of the IP address firewall for this account. Disabling the firewall does not remove existing rules,
        /// they will just be ignored until the firewall is re-enabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.FirewallState? FirewallState { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateDataLakeAnalyticsAccountPropertiesInternal)Property).FirewallState; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateDataLakeAnalyticsAccountPropertiesInternal)Property).FirewallState = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.FirewallState)""); }

        /// <summary>The maximum supported degree of parallelism for this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inlined)]
        public int? MaxDegreeOfParallelism { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateDataLakeAnalyticsAccountPropertiesInternal)Property).MaxDegreeOfParallelism; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateDataLakeAnalyticsAccountPropertiesInternal)Property).MaxDegreeOfParallelism = value ?? default(int); }

        /// <summary>The maximum supported degree of parallelism per job for this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inlined)]
        public int? MaxDegreeOfParallelismPerJob { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateDataLakeAnalyticsAccountPropertiesInternal)Property).MaxDegreeOfParallelismPerJob; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateDataLakeAnalyticsAccountPropertiesInternal)Property).MaxDegreeOfParallelismPerJob = value ?? default(int); }

        /// <summary>The maximum supported jobs running under the account at the same time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inlined)]
        public int? MaxJobCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateDataLakeAnalyticsAccountPropertiesInternal)Property).MaxJobCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateDataLakeAnalyticsAccountPropertiesInternal)Property).MaxJobCount = value ?? default(int); }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateDataLakeAnalyticsAccountProperties Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateDataLakeAnalyticsAccountParametersInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.UpdateDataLakeAnalyticsAccountProperties()); set { {_property = value;} } }

        /// <summary>The minimum supported priority per job for this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inlined)]
        public int? MinPriorityPerJob { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateDataLakeAnalyticsAccountPropertiesInternal)Property).MinPriorityPerJob; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateDataLakeAnalyticsAccountPropertiesInternal)Property).MinPriorityPerJob = value ?? default(int); }

        /// <summary>The commitment tier to use for next month.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.TierType? NewTier { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateDataLakeAnalyticsAccountPropertiesInternal)Property).NewTier; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateDataLakeAnalyticsAccountPropertiesInternal)Property).NewTier = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.TierType)""); }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateDataLakeAnalyticsAccountProperties _property;

        /// <summary>The properties that can be updated in an existing Data Lake Analytics account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateDataLakeAnalyticsAccountProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.UpdateDataLakeAnalyticsAccountProperties()); set => this._property = value; }

        /// <summary>The number of days that job metadata is retained.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inlined)]
        public int? QueryStoreRetention { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateDataLakeAnalyticsAccountPropertiesInternal)Property).QueryStoreRetention; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateDataLakeAnalyticsAccountPropertiesInternal)Property).QueryStoreRetention = value ?? default(int); }

        /// <summary>The list of Azure Blob storage accounts associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateStorageAccountWithAccountParameters[] StorageAccount { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateDataLakeAnalyticsAccountPropertiesInternal)Property).StorageAccount; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateDataLakeAnalyticsAccountPropertiesInternal)Property).StorageAccount = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateDataLakeAnalyticsAccountParametersTags _tag;

        /// <summary>The resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateDataLakeAnalyticsAccountParametersTags Tag { get => (this._tag = this._tag ?? new Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.UpdateDataLakeAnalyticsAccountParametersTags()); set => this._tag = value; }

        /// <summary>
        /// Creates an new <see cref="UpdateDataLakeAnalyticsAccountParameters" /> instance.
        /// </summary>
        public UpdateDataLakeAnalyticsAccountParameters()
        {

        }
    }
    /// The parameters that can be used to update an existing Data Lake Analytics account.
    public partial interface IUpdateDataLakeAnalyticsAccountParameters :
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.IJsonSerializable
    {
        /// <summary>The list of compute policies associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of compute policies associated with this account.",
        SerializedName = @"computePolicies",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateComputePolicyWithAccountParameters) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateComputePolicyWithAccountParameters[] ComputePolicy { get; set; }
        /// <summary>The list of Data Lake Store accounts associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of Data Lake Store accounts associated with this account.",
        SerializedName = @"dataLakeStoreAccounts",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateDataLakeStoreWithAccountParameters) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateDataLakeStoreWithAccountParameters[] DataLakeStoreAccount { get; set; }
        /// <summary>
        /// The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled,
        /// this is not enforced.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.",
        SerializedName = @"firewallAllowAzureIps",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.FirewallAllowAzureIpsState) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.FirewallAllowAzureIpsState? FirewallAllowAzureIP { get; set; }
        /// <summary>The list of firewall rules associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of firewall rules associated with this account.",
        SerializedName = @"firewallRules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateFirewallRuleWithAccountParameters) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateFirewallRuleWithAccountParameters[] FirewallRule { get; set; }
        /// <summary>
        /// The current state of the IP address firewall for this account. Disabling the firewall does not remove existing rules,
        /// they will just be ignored until the firewall is re-enabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The current state of the IP address firewall for this account. Disabling the firewall does not remove existing rules, they will just be ignored until the firewall is re-enabled.",
        SerializedName = @"firewallState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.FirewallState) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.FirewallState? FirewallState { get; set; }
        /// <summary>The maximum supported degree of parallelism for this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum supported degree of parallelism for this account.",
        SerializedName = @"maxDegreeOfParallelism",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxDegreeOfParallelism { get; set; }
        /// <summary>The maximum supported degree of parallelism per job for this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum supported degree of parallelism per job for this account.",
        SerializedName = @"maxDegreeOfParallelismPerJob",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxDegreeOfParallelismPerJob { get; set; }
        /// <summary>The maximum supported jobs running under the account at the same time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum supported jobs running under the account at the same time.",
        SerializedName = @"maxJobCount",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxJobCount { get; set; }
        /// <summary>The minimum supported priority per job for this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The minimum supported priority per job for this account.",
        SerializedName = @"minPriorityPerJob",
        PossibleTypes = new [] { typeof(int) })]
        int? MinPriorityPerJob { get; set; }
        /// <summary>The commitment tier to use for next month.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The commitment tier to use for next month.",
        SerializedName = @"newTier",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.TierType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.TierType? NewTier { get; set; }
        /// <summary>The number of days that job metadata is retained.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of days that job metadata is retained.",
        SerializedName = @"queryStoreRetention",
        PossibleTypes = new [] { typeof(int) })]
        int? QueryStoreRetention { get; set; }
        /// <summary>The list of Azure Blob storage accounts associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of Azure Blob storage accounts associated with this account.",
        SerializedName = @"storageAccounts",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateStorageAccountWithAccountParameters) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateStorageAccountWithAccountParameters[] StorageAccount { get; set; }
        /// <summary>The resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource tags.",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateDataLakeAnalyticsAccountParametersTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateDataLakeAnalyticsAccountParametersTags Tag { get; set; }

    }
    /// The parameters that can be used to update an existing Data Lake Analytics account.
    internal partial interface IUpdateDataLakeAnalyticsAccountParametersInternal

    {
        /// <summary>The list of compute policies associated with this account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateComputePolicyWithAccountParameters[] ComputePolicy { get; set; }
        /// <summary>The list of Data Lake Store accounts associated with this account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateDataLakeStoreWithAccountParameters[] DataLakeStoreAccount { get; set; }
        /// <summary>
        /// The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled,
        /// this is not enforced.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.FirewallAllowAzureIpsState? FirewallAllowAzureIP { get; set; }
        /// <summary>The list of firewall rules associated with this account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateFirewallRuleWithAccountParameters[] FirewallRule { get; set; }
        /// <summary>
        /// The current state of the IP address firewall for this account. Disabling the firewall does not remove existing rules,
        /// they will just be ignored until the firewall is re-enabled.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.FirewallState? FirewallState { get; set; }
        /// <summary>The maximum supported degree of parallelism for this account.</summary>
        int? MaxDegreeOfParallelism { get; set; }
        /// <summary>The maximum supported degree of parallelism per job for this account.</summary>
        int? MaxDegreeOfParallelismPerJob { get; set; }
        /// <summary>The maximum supported jobs running under the account at the same time.</summary>
        int? MaxJobCount { get; set; }
        /// <summary>The minimum supported priority per job for this account.</summary>
        int? MinPriorityPerJob { get; set; }
        /// <summary>The commitment tier to use for next month.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.TierType? NewTier { get; set; }
        /// <summary>The properties that can be updated in an existing Data Lake Analytics account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateDataLakeAnalyticsAccountProperties Property { get; set; }
        /// <summary>The number of days that job metadata is retained.</summary>
        int? QueryStoreRetention { get; set; }
        /// <summary>The list of Azure Blob storage accounts associated with this account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateStorageAccountWithAccountParameters[] StorageAccount { get; set; }
        /// <summary>The resource tags.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IUpdateDataLakeAnalyticsAccountParametersTags Tag { get; set; }

    }
}