// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Extensions;

    /// <summary>
    /// A Data Lake Analytics account object, containing all information associated with the named Data Lake Analytics account.
    /// </summary>
    public partial class DataLakeAnalyticsAccount :
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccount,
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountInternal,
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.Resource();

        /// <summary>The unique identifier associated with this Data Lake Analytics account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inlined)]
        public string AccountId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesBasicInternal)Property).AccountId; }

        /// <summary>The list of compute policies associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IComputePolicy[] ComputePolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).ComputePolicy; }

        /// <summary>The account creation time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inlined)]
        public global::System.DateTime? CreationTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesBasicInternal)Property).CreationTime; }

        /// <summary>The commitment tier in use for the current month.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.TierType? CurrentTier { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).CurrentTier; }

        /// <summary>The list of Data Lake Store accounts associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeStoreAccountInformation[] DataLakeStoreAccount { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).DataLakeStoreAccount; }

        /// <summary>The current state of the DebugDataAccessLevel for this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.DebugDataAccessLevel? DebugDataAccessLevel { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).DebugDataAccessLevel; }

        /// <summary>The default Data Lake Store account associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inlined)]
        public string DefaultDataLakeStoreAccount { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).DefaultDataLakeStoreAccount; }

        /// <summary>The type of the default Data Lake Store account associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inlined)]
        public string DefaultDataLakeStoreAccountType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).DefaultDataLakeStoreAccountType; }

        /// <summary>The full CName endpoint for this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inlined)]
        public string Endpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesBasicInternal)Property).Endpoint; }

        /// <summary>
        /// The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled,
        /// this is not enforced.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.FirewallAllowAzureIpsState? FirewallAllowAzureIP { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).FirewallAllowAzureIP; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).FirewallAllowAzureIP = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.FirewallAllowAzureIpsState)""); }

        /// <summary>The list of firewall rules associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IFirewallRule[] FirewallRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).FirewallRule; }

        /// <summary>The current state of the IP address firewall for this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.FirewallState? FirewallState { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).FirewallState; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).FirewallState = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.FirewallState)""); }

        /// <summary>The list of hiveMetastores associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IHiveMetastore[] HiveMetastore { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).HiveMetastore; }

        /// <summary>The resource identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IResourceInternal)__resource).Id; }

        /// <summary>The account last modified time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inlined)]
        public global::System.DateTime? LastModifiedTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesBasicInternal)Property).LastModifiedTime; }

        /// <summary>The resource location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IResourceInternal)__resource).Location; }

        /// <summary>The maximum supported active jobs under the account at the same time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inlined)]
        public int? MaxActiveJobCountPerUser { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).MaxActiveJobCountPerUser; }

        /// <summary>The maximum supported degree of parallelism for this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inlined)]
        public int? MaxDegreeOfParallelism { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).MaxDegreeOfParallelism; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).MaxDegreeOfParallelism = value ?? default(int); }

        /// <summary>The maximum supported degree of parallelism per job for this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inlined)]
        public int? MaxDegreeOfParallelismPerJob { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).MaxDegreeOfParallelismPerJob; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).MaxDegreeOfParallelismPerJob = value ?? default(int); }

        /// <summary>The maximum supported jobs running under the account at the same time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inlined)]
        public int? MaxJobCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).MaxJobCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).MaxJobCount = value ?? default(int); }

        /// <summary>The maximum supported active jobs under the account at the same time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inlined)]
        public int? MaxJobRunningTimeInMin { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).MaxJobRunningTimeInMin; }

        /// <summary>The maximum supported jobs queued under the account at the same time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inlined)]
        public int? MaxQueuedJobCountPerUser { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).MaxQueuedJobCountPerUser; }

        /// <summary>Internal Acessors for AccountId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountInternal.AccountId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesBasicInternal)Property).AccountId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesBasicInternal)Property).AccountId = value; }

        /// <summary>Internal Acessors for ComputePolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IComputePolicy[] Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountInternal.ComputePolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).ComputePolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).ComputePolicy = value; }

        /// <summary>Internal Acessors for CreationTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountInternal.CreationTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesBasicInternal)Property).CreationTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesBasicInternal)Property).CreationTime = value; }

        /// <summary>Internal Acessors for CurrentTier</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.TierType? Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountInternal.CurrentTier { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).CurrentTier; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).CurrentTier = value; }

        /// <summary>Internal Acessors for DataLakeStoreAccount</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeStoreAccountInformation[] Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountInternal.DataLakeStoreAccount { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).DataLakeStoreAccount; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).DataLakeStoreAccount = value; }

        /// <summary>Internal Acessors for DebugDataAccessLevel</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.DebugDataAccessLevel? Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountInternal.DebugDataAccessLevel { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).DebugDataAccessLevel; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).DebugDataAccessLevel = value; }

        /// <summary>Internal Acessors for DefaultDataLakeStoreAccount</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountInternal.DefaultDataLakeStoreAccount { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).DefaultDataLakeStoreAccount; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).DefaultDataLakeStoreAccount = value; }

        /// <summary>Internal Acessors for DefaultDataLakeStoreAccountType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountInternal.DefaultDataLakeStoreAccountType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).DefaultDataLakeStoreAccountType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).DefaultDataLakeStoreAccountType = value; }

        /// <summary>Internal Acessors for Endpoint</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountInternal.Endpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesBasicInternal)Property).Endpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesBasicInternal)Property).Endpoint = value; }

        /// <summary>Internal Acessors for FirewallRule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IFirewallRule[] Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountInternal.FirewallRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).FirewallRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).FirewallRule = value; }

        /// <summary>Internal Acessors for HiveMetastore</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IHiveMetastore[] Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountInternal.HiveMetastore { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).HiveMetastore; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).HiveMetastore = value; }

        /// <summary>Internal Acessors for LastModifiedTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountInternal.LastModifiedTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesBasicInternal)Property).LastModifiedTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesBasicInternal)Property).LastModifiedTime = value; }

        /// <summary>Internal Acessors for MaxActiveJobCountPerUser</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountInternal.MaxActiveJobCountPerUser { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).MaxActiveJobCountPerUser; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).MaxActiveJobCountPerUser = value; }

        /// <summary>Internal Acessors for MaxJobRunningTimeInMin</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountInternal.MaxJobRunningTimeInMin { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).MaxJobRunningTimeInMin; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).MaxJobRunningTimeInMin = value; }

        /// <summary>Internal Acessors for MaxQueuedJobCountPerUser</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountInternal.MaxQueuedJobCountPerUser { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).MaxQueuedJobCountPerUser; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).MaxQueuedJobCountPerUser = value; }

        /// <summary>Internal Acessors for MinPriorityPerJob</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountInternal.MinPriorityPerJob { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).MinPriorityPerJob; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).MinPriorityPerJob = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountProperties Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.DataLakeAnalyticsAccountProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.DataLakeAnalyticsAccountStatus? Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesBasicInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesBasicInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for State</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.DataLakeAnalyticsAccountState? Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountInternal.State { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesBasicInternal)Property).State; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesBasicInternal)Property).State = value; }

        /// <summary>Internal Acessors for StorageAccount</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IStorageAccountInformation[] Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountInternal.StorageAccount { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).StorageAccount; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).StorageAccount = value; }

        /// <summary>Internal Acessors for SystemMaxDegreeOfParallelism</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountInternal.SystemMaxDegreeOfParallelism { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).SystemMaxDegreeOfParallelism; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).SystemMaxDegreeOfParallelism = value; }

        /// <summary>Internal Acessors for SystemMaxJobCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountInternal.SystemMaxJobCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).SystemMaxJobCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).SystemMaxJobCount = value; }

        /// <summary>Internal Acessors for VirtualNetworkRule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IVirtualNetworkRule[] Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountInternal.VirtualNetworkRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).VirtualNetworkRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).VirtualNetworkRule = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Location</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IResourceInternal.Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IResourceInternal)__resource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IResourceInternal)__resource).Location = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for Tag</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IResourceTags Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IResourceInternal.Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IResourceInternal)__resource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IResourceInternal)__resource).Tag = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IResourceInternal)__resource).Type = value; }

        /// <summary>The minimum supported priority per job for this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inlined)]
        public int? MinPriorityPerJob { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).MinPriorityPerJob; }

        /// <summary>The resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IResourceInternal)__resource).Name; }

        /// <summary>The commitment tier for the next month.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.TierType? NewTier { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).NewTier; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).NewTier = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.TierType)""); }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountProperties _property;

        /// <summary>
        /// The properties defined by Data Lake Analytics all properties are specific to each resource provider.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.DataLakeAnalyticsAccountProperties()); }

        /// <summary>The provisioning status of the Data Lake Analytics account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.DataLakeAnalyticsAccountStatus? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesBasicInternal)Property).ProvisioningState; }

        /// <summary>The list of Data Lake Store accounts associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeStoreAccountInformation[] PublicDataLakeStoreAccount { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).PublicDataLakeStoreAccount; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).PublicDataLakeStoreAccount = value ?? null /* arrayOf */; }

        /// <summary>The number of days that job metadata is retained.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inlined)]
        public int? QueryStoreRetention { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).QueryStoreRetention; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).QueryStoreRetention = value ?? default(int); }

        /// <summary>The state of the Data Lake Analytics account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.DataLakeAnalyticsAccountState? State { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesBasicInternal)Property).State; }

        /// <summary>The list of Azure Blob Storage accounts associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IStorageAccountInformation[] StorageAccount { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).StorageAccount; }

        /// <summary>
        /// The system defined maximum supported degree of parallelism for this account, which restricts the maximum value of parallelism
        /// the user can set for the account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inlined)]
        public int? SystemMaxDegreeOfParallelism { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).SystemMaxDegreeOfParallelism; }

        /// <summary>
        /// The system defined maximum supported jobs running under the account at the same time, which restricts the maximum number
        /// of running jobs the user can set for the account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inlined)]
        public int? SystemMaxJobCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).SystemMaxJobCount; }

        /// <summary>The resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IResourceInternal)__resource).Tag; }

        /// <summary>The resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IResourceInternal)__resource).Type; }

        /// <summary>The list of virtualNetwork rules associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IVirtualNetworkRule[] VirtualNetworkRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal)Property).VirtualNetworkRule; }

        /// <summary>Creates an new <see cref="DataLakeAnalyticsAccount" /> instance.</summary>
        public DataLakeAnalyticsAccount()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// A Data Lake Analytics account object, containing all information associated with the named Data Lake Analytics account.
    public partial interface IDataLakeAnalyticsAccount :
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IResource
    {
        /// <summary>The unique identifier associated with this Data Lake Analytics account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The unique identifier associated with this Data Lake Analytics account.",
        SerializedName = @"accountId",
        PossibleTypes = new [] { typeof(string) })]
        string AccountId { get;  }
        /// <summary>The list of compute policies associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of compute policies associated with this account.",
        SerializedName = @"computePolicies",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IComputePolicy) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IComputePolicy[] ComputePolicy { get;  }
        /// <summary>The account creation time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The account creation time.",
        SerializedName = @"creationTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CreationTime { get;  }
        /// <summary>The commitment tier in use for the current month.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The commitment tier in use for the current month.",
        SerializedName = @"currentTier",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.TierType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.TierType? CurrentTier { get;  }
        /// <summary>The list of Data Lake Store accounts associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of Data Lake Store accounts associated with this account.",
        SerializedName = @"dataLakeStoreAccounts",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeStoreAccountInformation) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeStoreAccountInformation[] DataLakeStoreAccount { get;  }
        /// <summary>The current state of the DebugDataAccessLevel for this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The current state of the DebugDataAccessLevel for this account.",
        SerializedName = @"debugDataAccessLevel",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.DebugDataAccessLevel) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.DebugDataAccessLevel? DebugDataAccessLevel { get;  }
        /// <summary>The default Data Lake Store account associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The default Data Lake Store account associated with this account.",
        SerializedName = @"defaultDataLakeStoreAccount",
        PossibleTypes = new [] { typeof(string) })]
        string DefaultDataLakeStoreAccount { get;  }
        /// <summary>The type of the default Data Lake Store account associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The type of the default Data Lake Store account associated with this account.",
        SerializedName = @"defaultDataLakeStoreAccountType",
        PossibleTypes = new [] { typeof(string) })]
        string DefaultDataLakeStoreAccountType { get;  }
        /// <summary>The full CName endpoint for this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The full CName endpoint for this account.",
        SerializedName = @"endpoint",
        PossibleTypes = new [] { typeof(string) })]
        string Endpoint { get;  }
        /// <summary>
        /// The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled,
        /// this is not enforced.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.",
        SerializedName = @"firewallAllowAzureIps",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.FirewallAllowAzureIpsState) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.FirewallAllowAzureIpsState? FirewallAllowAzureIP { get; set; }
        /// <summary>The list of firewall rules associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of firewall rules associated with this account.",
        SerializedName = @"firewallRules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IFirewallRule) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IFirewallRule[] FirewallRule { get;  }
        /// <summary>The current state of the IP address firewall for this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The current state of the IP address firewall for this account.",
        SerializedName = @"firewallState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.FirewallState) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.FirewallState? FirewallState { get; set; }
        /// <summary>The list of hiveMetastores associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of hiveMetastores associated with this account.",
        SerializedName = @"hiveMetastores",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IHiveMetastore) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IHiveMetastore[] HiveMetastore { get;  }
        /// <summary>The account last modified time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The account last modified time.",
        SerializedName = @"lastModifiedTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastModifiedTime { get;  }
        /// <summary>The maximum supported active jobs under the account at the same time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The maximum supported active jobs under the account at the same time.",
        SerializedName = @"maxActiveJobCountPerUser",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxActiveJobCountPerUser { get;  }
        /// <summary>The maximum supported degree of parallelism for this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum supported degree of parallelism for this account.",
        SerializedName = @"maxDegreeOfParallelism",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxDegreeOfParallelism { get; set; }
        /// <summary>The maximum supported degree of parallelism per job for this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum supported degree of parallelism per job for this account.",
        SerializedName = @"maxDegreeOfParallelismPerJob",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxDegreeOfParallelismPerJob { get; set; }
        /// <summary>The maximum supported jobs running under the account at the same time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum supported jobs running under the account at the same time.",
        SerializedName = @"maxJobCount",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxJobCount { get; set; }
        /// <summary>The maximum supported active jobs under the account at the same time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The maximum supported active jobs under the account at the same time.",
        SerializedName = @"maxJobRunningTimeInMin",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxJobRunningTimeInMin { get;  }
        /// <summary>The maximum supported jobs queued under the account at the same time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The maximum supported jobs queued under the account at the same time.",
        SerializedName = @"maxQueuedJobCountPerUser",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxQueuedJobCountPerUser { get;  }
        /// <summary>The minimum supported priority per job for this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The minimum supported priority per job for this account.",
        SerializedName = @"minPriorityPerJob",
        PossibleTypes = new [] { typeof(int) })]
        int? MinPriorityPerJob { get;  }
        /// <summary>The commitment tier for the next month.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The commitment tier for the next month.",
        SerializedName = @"newTier",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.TierType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.TierType? NewTier { get; set; }
        /// <summary>The provisioning status of the Data Lake Analytics account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning status of the Data Lake Analytics account.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.DataLakeAnalyticsAccountStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.DataLakeAnalyticsAccountStatus? ProvisioningState { get;  }
        /// <summary>The list of Data Lake Store accounts associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of Data Lake Store accounts associated with this account.",
        SerializedName = @"publicDataLakeStoreAccounts",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeStoreAccountInformation) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeStoreAccountInformation[] PublicDataLakeStoreAccount { get; set; }
        /// <summary>The number of days that job metadata is retained.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of days that job metadata is retained.",
        SerializedName = @"queryStoreRetention",
        PossibleTypes = new [] { typeof(int) })]
        int? QueryStoreRetention { get; set; }
        /// <summary>The state of the Data Lake Analytics account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The state of the Data Lake Analytics account.",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.DataLakeAnalyticsAccountState) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.DataLakeAnalyticsAccountState? State { get;  }
        /// <summary>The list of Azure Blob Storage accounts associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of Azure Blob Storage accounts associated with this account.",
        SerializedName = @"storageAccounts",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IStorageAccountInformation) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IStorageAccountInformation[] StorageAccount { get;  }
        /// <summary>
        /// The system defined maximum supported degree of parallelism for this account, which restricts the maximum value of parallelism
        /// the user can set for the account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The system defined maximum supported degree of parallelism for this account, which restricts the maximum value of parallelism the user can set for the account.",
        SerializedName = @"systemMaxDegreeOfParallelism",
        PossibleTypes = new [] { typeof(int) })]
        int? SystemMaxDegreeOfParallelism { get;  }
        /// <summary>
        /// The system defined maximum supported jobs running under the account at the same time, which restricts the maximum number
        /// of running jobs the user can set for the account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The system defined maximum supported jobs running under the account at the same time, which restricts the maximum number of running jobs the user can set for the account.",
        SerializedName = @"systemMaxJobCount",
        PossibleTypes = new [] { typeof(int) })]
        int? SystemMaxJobCount { get;  }
        /// <summary>The list of virtualNetwork rules associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of virtualNetwork rules associated with this account.",
        SerializedName = @"virtualNetworkRules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IVirtualNetworkRule) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IVirtualNetworkRule[] VirtualNetworkRule { get;  }

    }
    /// A Data Lake Analytics account object, containing all information associated with the named Data Lake Analytics account.
    internal partial interface IDataLakeAnalyticsAccountInternal :
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IResourceInternal
    {
        /// <summary>The unique identifier associated with this Data Lake Analytics account.</summary>
        string AccountId { get; set; }
        /// <summary>The list of compute policies associated with this account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IComputePolicy[] ComputePolicy { get; set; }
        /// <summary>The account creation time.</summary>
        global::System.DateTime? CreationTime { get; set; }
        /// <summary>The commitment tier in use for the current month.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.TierType? CurrentTier { get; set; }
        /// <summary>The list of Data Lake Store accounts associated with this account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeStoreAccountInformation[] DataLakeStoreAccount { get; set; }
        /// <summary>The current state of the DebugDataAccessLevel for this account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.DebugDataAccessLevel? DebugDataAccessLevel { get; set; }
        /// <summary>The default Data Lake Store account associated with this account.</summary>
        string DefaultDataLakeStoreAccount { get; set; }
        /// <summary>The type of the default Data Lake Store account associated with this account.</summary>
        string DefaultDataLakeStoreAccountType { get; set; }
        /// <summary>The full CName endpoint for this account.</summary>
        string Endpoint { get; set; }
        /// <summary>
        /// The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled,
        /// this is not enforced.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.FirewallAllowAzureIpsState? FirewallAllowAzureIP { get; set; }
        /// <summary>The list of firewall rules associated with this account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IFirewallRule[] FirewallRule { get; set; }
        /// <summary>The current state of the IP address firewall for this account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.FirewallState? FirewallState { get; set; }
        /// <summary>The list of hiveMetastores associated with this account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IHiveMetastore[] HiveMetastore { get; set; }
        /// <summary>The account last modified time.</summary>
        global::System.DateTime? LastModifiedTime { get; set; }
        /// <summary>The maximum supported active jobs under the account at the same time.</summary>
        int? MaxActiveJobCountPerUser { get; set; }
        /// <summary>The maximum supported degree of parallelism for this account.</summary>
        int? MaxDegreeOfParallelism { get; set; }
        /// <summary>The maximum supported degree of parallelism per job for this account.</summary>
        int? MaxDegreeOfParallelismPerJob { get; set; }
        /// <summary>The maximum supported jobs running under the account at the same time.</summary>
        int? MaxJobCount { get; set; }
        /// <summary>The maximum supported active jobs under the account at the same time.</summary>
        int? MaxJobRunningTimeInMin { get; set; }
        /// <summary>The maximum supported jobs queued under the account at the same time.</summary>
        int? MaxQueuedJobCountPerUser { get; set; }
        /// <summary>The minimum supported priority per job for this account.</summary>
        int? MinPriorityPerJob { get; set; }
        /// <summary>The commitment tier for the next month.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.TierType? NewTier { get; set; }
        /// <summary>
        /// The properties defined by Data Lake Analytics all properties are specific to each resource provider.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountProperties Property { get; set; }
        /// <summary>The provisioning status of the Data Lake Analytics account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.DataLakeAnalyticsAccountStatus? ProvisioningState { get; set; }
        /// <summary>The list of Data Lake Store accounts associated with this account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeStoreAccountInformation[] PublicDataLakeStoreAccount { get; set; }
        /// <summary>The number of days that job metadata is retained.</summary>
        int? QueryStoreRetention { get; set; }
        /// <summary>The state of the Data Lake Analytics account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.DataLakeAnalyticsAccountState? State { get; set; }
        /// <summary>The list of Azure Blob Storage accounts associated with this account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IStorageAccountInformation[] StorageAccount { get; set; }
        /// <summary>
        /// The system defined maximum supported degree of parallelism for this account, which restricts the maximum value of parallelism
        /// the user can set for the account.
        /// </summary>
        int? SystemMaxDegreeOfParallelism { get; set; }
        /// <summary>
        /// The system defined maximum supported jobs running under the account at the same time, which restricts the maximum number
        /// of running jobs the user can set for the account.
        /// </summary>
        int? SystemMaxJobCount { get; set; }
        /// <summary>The list of virtualNetwork rules associated with this account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IVirtualNetworkRule[] VirtualNetworkRule { get; set; }

    }
}