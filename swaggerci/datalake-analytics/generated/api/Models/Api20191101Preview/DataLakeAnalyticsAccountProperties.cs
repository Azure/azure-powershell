// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Extensions;

    /// <summary>
    /// The account specific properties that are associated with an underlying Data Lake Analytics account. Returned only when
    /// retrieving a specific account.
    /// </summary>
    public partial class DataLakeAnalyticsAccountProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountProperties,
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal,
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesBasic"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesBasic __dataLakeAnalyticsAccountPropertiesBasic = new Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.DataLakeAnalyticsAccountPropertiesBasic();

        /// <summary>The unique identifier associated with this Data Lake Analytics account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inherited)]
        public string AccountId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesBasicInternal)__dataLakeAnalyticsAccountPropertiesBasic).AccountId; }

        /// <summary>Backing field for <see cref="ComputePolicy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IComputePolicy[] _computePolicy;

        /// <summary>The list of compute policies associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IComputePolicy[] ComputePolicy { get => this._computePolicy; }

        /// <summary>The account creation time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inherited)]
        public global::System.DateTime? CreationTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesBasicInternal)__dataLakeAnalyticsAccountPropertiesBasic).CreationTime; }

        /// <summary>Backing field for <see cref="CurrentTier" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.TierType? _currentTier;

        /// <summary>The commitment tier in use for the current month.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.TierType? CurrentTier { get => this._currentTier; }

        /// <summary>Backing field for <see cref="DataLakeStoreAccount" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeStoreAccountInformation[] _dataLakeStoreAccount;

        /// <summary>The list of Data Lake Store accounts associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeStoreAccountInformation[] DataLakeStoreAccount { get => this._dataLakeStoreAccount; }

        /// <summary>Backing field for <see cref="DebugDataAccessLevel" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.DebugDataAccessLevel? _debugDataAccessLevel;

        /// <summary>The current state of the DebugDataAccessLevel for this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.DebugDataAccessLevel? DebugDataAccessLevel { get => this._debugDataAccessLevel; }

        /// <summary>Backing field for <see cref="DefaultDataLakeStoreAccount" /> property.</summary>
        private string _defaultDataLakeStoreAccount;

        /// <summary>The default Data Lake Store account associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Owned)]
        public string DefaultDataLakeStoreAccount { get => this._defaultDataLakeStoreAccount; }

        /// <summary>Backing field for <see cref="DefaultDataLakeStoreAccountType" /> property.</summary>
        private string _defaultDataLakeStoreAccountType;

        /// <summary>The type of the default Data Lake Store account associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Owned)]
        public string DefaultDataLakeStoreAccountType { get => this._defaultDataLakeStoreAccountType; }

        /// <summary>The full CName endpoint for this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inherited)]
        public string Endpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesBasicInternal)__dataLakeAnalyticsAccountPropertiesBasic).Endpoint; }

        /// <summary>Backing field for <see cref="FirewallAllowAzureIP" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.FirewallAllowAzureIpsState? _firewallAllowAzureIP;

        /// <summary>
        /// The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled,
        /// this is not enforced.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.FirewallAllowAzureIpsState? FirewallAllowAzureIP { get => this._firewallAllowAzureIP; set => this._firewallAllowAzureIP = value; }

        /// <summary>Backing field for <see cref="FirewallRule" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IFirewallRule[] _firewallRule;

        /// <summary>The list of firewall rules associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IFirewallRule[] FirewallRule { get => this._firewallRule; }

        /// <summary>Backing field for <see cref="FirewallState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.FirewallState? _firewallState;

        /// <summary>The current state of the IP address firewall for this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.FirewallState? FirewallState { get => this._firewallState; set => this._firewallState = value; }

        /// <summary>Backing field for <see cref="HiveMetastore" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IHiveMetastore[] _hiveMetastore;

        /// <summary>The list of hiveMetastores associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IHiveMetastore[] HiveMetastore { get => this._hiveMetastore; }

        /// <summary>The account last modified time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inherited)]
        public global::System.DateTime? LastModifiedTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesBasicInternal)__dataLakeAnalyticsAccountPropertiesBasic).LastModifiedTime; }

        /// <summary>Backing field for <see cref="MaxActiveJobCountPerUser" /> property.</summary>
        private int? _maxActiveJobCountPerUser;

        /// <summary>The maximum supported active jobs under the account at the same time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Owned)]
        public int? MaxActiveJobCountPerUser { get => this._maxActiveJobCountPerUser; }

        /// <summary>Backing field for <see cref="MaxDegreeOfParallelism" /> property.</summary>
        private int? _maxDegreeOfParallelism;

        /// <summary>The maximum supported degree of parallelism for this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Owned)]
        public int? MaxDegreeOfParallelism { get => this._maxDegreeOfParallelism; set => this._maxDegreeOfParallelism = value; }

        /// <summary>Backing field for <see cref="MaxDegreeOfParallelismPerJob" /> property.</summary>
        private int? _maxDegreeOfParallelismPerJob;

        /// <summary>The maximum supported degree of parallelism per job for this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Owned)]
        public int? MaxDegreeOfParallelismPerJob { get => this._maxDegreeOfParallelismPerJob; set => this._maxDegreeOfParallelismPerJob = value; }

        /// <summary>Backing field for <see cref="MaxJobCount" /> property.</summary>
        private int? _maxJobCount;

        /// <summary>The maximum supported jobs running under the account at the same time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Owned)]
        public int? MaxJobCount { get => this._maxJobCount; set => this._maxJobCount = value; }

        /// <summary>Backing field for <see cref="MaxJobRunningTimeInMin" /> property.</summary>
        private int? _maxJobRunningTimeInMin;

        /// <summary>The maximum supported active jobs under the account at the same time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Owned)]
        public int? MaxJobRunningTimeInMin { get => this._maxJobRunningTimeInMin; }

        /// <summary>Backing field for <see cref="MaxQueuedJobCountPerUser" /> property.</summary>
        private int? _maxQueuedJobCountPerUser;

        /// <summary>The maximum supported jobs queued under the account at the same time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Owned)]
        public int? MaxQueuedJobCountPerUser { get => this._maxQueuedJobCountPerUser; }

        /// <summary>Internal Acessors for AccountId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesBasicInternal.AccountId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesBasicInternal)__dataLakeAnalyticsAccountPropertiesBasic).AccountId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesBasicInternal)__dataLakeAnalyticsAccountPropertiesBasic).AccountId = value; }

        /// <summary>Internal Acessors for CreationTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesBasicInternal.CreationTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesBasicInternal)__dataLakeAnalyticsAccountPropertiesBasic).CreationTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesBasicInternal)__dataLakeAnalyticsAccountPropertiesBasic).CreationTime = value; }

        /// <summary>Internal Acessors for Endpoint</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesBasicInternal.Endpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesBasicInternal)__dataLakeAnalyticsAccountPropertiesBasic).Endpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesBasicInternal)__dataLakeAnalyticsAccountPropertiesBasic).Endpoint = value; }

        /// <summary>Internal Acessors for LastModifiedTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesBasicInternal.LastModifiedTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesBasicInternal)__dataLakeAnalyticsAccountPropertiesBasic).LastModifiedTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesBasicInternal)__dataLakeAnalyticsAccountPropertiesBasic).LastModifiedTime = value; }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.DataLakeAnalyticsAccountStatus? Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesBasicInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesBasicInternal)__dataLakeAnalyticsAccountPropertiesBasic).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesBasicInternal)__dataLakeAnalyticsAccountPropertiesBasic).ProvisioningState = value; }

        /// <summary>Internal Acessors for State</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.DataLakeAnalyticsAccountState? Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesBasicInternal.State { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesBasicInternal)__dataLakeAnalyticsAccountPropertiesBasic).State; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesBasicInternal)__dataLakeAnalyticsAccountPropertiesBasic).State = value; }

        /// <summary>Internal Acessors for ComputePolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IComputePolicy[] Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal.ComputePolicy { get => this._computePolicy; set { {_computePolicy = value;} } }

        /// <summary>Internal Acessors for CurrentTier</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.TierType? Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal.CurrentTier { get => this._currentTier; set { {_currentTier = value;} } }

        /// <summary>Internal Acessors for DataLakeStoreAccount</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeStoreAccountInformation[] Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal.DataLakeStoreAccount { get => this._dataLakeStoreAccount; set { {_dataLakeStoreAccount = value;} } }

        /// <summary>Internal Acessors for DebugDataAccessLevel</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.DebugDataAccessLevel? Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal.DebugDataAccessLevel { get => this._debugDataAccessLevel; set { {_debugDataAccessLevel = value;} } }

        /// <summary>Internal Acessors for DefaultDataLakeStoreAccount</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal.DefaultDataLakeStoreAccount { get => this._defaultDataLakeStoreAccount; set { {_defaultDataLakeStoreAccount = value;} } }

        /// <summary>Internal Acessors for DefaultDataLakeStoreAccountType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal.DefaultDataLakeStoreAccountType { get => this._defaultDataLakeStoreAccountType; set { {_defaultDataLakeStoreAccountType = value;} } }

        /// <summary>Internal Acessors for FirewallRule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IFirewallRule[] Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal.FirewallRule { get => this._firewallRule; set { {_firewallRule = value;} } }

        /// <summary>Internal Acessors for HiveMetastore</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IHiveMetastore[] Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal.HiveMetastore { get => this._hiveMetastore; set { {_hiveMetastore = value;} } }

        /// <summary>Internal Acessors for MaxActiveJobCountPerUser</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal.MaxActiveJobCountPerUser { get => this._maxActiveJobCountPerUser; set { {_maxActiveJobCountPerUser = value;} } }

        /// <summary>Internal Acessors for MaxJobRunningTimeInMin</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal.MaxJobRunningTimeInMin { get => this._maxJobRunningTimeInMin; set { {_maxJobRunningTimeInMin = value;} } }

        /// <summary>Internal Acessors for MaxQueuedJobCountPerUser</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal.MaxQueuedJobCountPerUser { get => this._maxQueuedJobCountPerUser; set { {_maxQueuedJobCountPerUser = value;} } }

        /// <summary>Internal Acessors for MinPriorityPerJob</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal.MinPriorityPerJob { get => this._minPriorityPerJob; set { {_minPriorityPerJob = value;} } }

        /// <summary>Internal Acessors for StorageAccount</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IStorageAccountInformation[] Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal.StorageAccount { get => this._storageAccount; set { {_storageAccount = value;} } }

        /// <summary>Internal Acessors for SystemMaxDegreeOfParallelism</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal.SystemMaxDegreeOfParallelism { get => this._systemMaxDegreeOfParallelism; set { {_systemMaxDegreeOfParallelism = value;} } }

        /// <summary>Internal Acessors for SystemMaxJobCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal.SystemMaxJobCount { get => this._systemMaxJobCount; set { {_systemMaxJobCount = value;} } }

        /// <summary>Internal Acessors for VirtualNetworkRule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IVirtualNetworkRule[] Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesInternal.VirtualNetworkRule { get => this._virtualNetworkRule; set { {_virtualNetworkRule = value;} } }

        /// <summary>Backing field for <see cref="MinPriorityPerJob" /> property.</summary>
        private int? _minPriorityPerJob;

        /// <summary>The minimum supported priority per job for this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Owned)]
        public int? MinPriorityPerJob { get => this._minPriorityPerJob; }

        /// <summary>Backing field for <see cref="NewTier" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.TierType? _newTier;

        /// <summary>The commitment tier for the next month.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.TierType? NewTier { get => this._newTier; set => this._newTier = value; }

        /// <summary>The provisioning status of the Data Lake Analytics account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.DataLakeAnalyticsAccountStatus? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesBasicInternal)__dataLakeAnalyticsAccountPropertiesBasic).ProvisioningState; }

        /// <summary>Backing field for <see cref="PublicDataLakeStoreAccount" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeStoreAccountInformation[] _publicDataLakeStoreAccount;

        /// <summary>The list of Data Lake Store accounts associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeStoreAccountInformation[] PublicDataLakeStoreAccount { get => this._publicDataLakeStoreAccount; set => this._publicDataLakeStoreAccount = value; }

        /// <summary>Backing field for <see cref="QueryStoreRetention" /> property.</summary>
        private int? _queryStoreRetention;

        /// <summary>The number of days that job metadata is retained.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Owned)]
        public int? QueryStoreRetention { get => this._queryStoreRetention; set => this._queryStoreRetention = value; }

        /// <summary>The state of the Data Lake Analytics account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.DataLakeAnalyticsAccountState? State { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesBasicInternal)__dataLakeAnalyticsAccountPropertiesBasic).State; }

        /// <summary>Backing field for <see cref="StorageAccount" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IStorageAccountInformation[] _storageAccount;

        /// <summary>The list of Azure Blob Storage accounts associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IStorageAccountInformation[] StorageAccount { get => this._storageAccount; }

        /// <summary>Backing field for <see cref="SystemMaxDegreeOfParallelism" /> property.</summary>
        private int? _systemMaxDegreeOfParallelism;

        /// <summary>
        /// The system defined maximum supported degree of parallelism for this account, which restricts the maximum value of parallelism
        /// the user can set for the account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Owned)]
        public int? SystemMaxDegreeOfParallelism { get => this._systemMaxDegreeOfParallelism; }

        /// <summary>Backing field for <see cref="SystemMaxJobCount" /> property.</summary>
        private int? _systemMaxJobCount;

        /// <summary>
        /// The system defined maximum supported jobs running under the account at the same time, which restricts the maximum number
        /// of running jobs the user can set for the account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Owned)]
        public int? SystemMaxJobCount { get => this._systemMaxJobCount; }

        /// <summary>Backing field for <see cref="VirtualNetworkRule" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IVirtualNetworkRule[] _virtualNetworkRule;

        /// <summary>The list of virtualNetwork rules associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IVirtualNetworkRule[] VirtualNetworkRule { get => this._virtualNetworkRule; }

        /// <summary>Creates an new <see cref="DataLakeAnalyticsAccountProperties" /> instance.</summary>
        public DataLakeAnalyticsAccountProperties()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__dataLakeAnalyticsAccountPropertiesBasic), __dataLakeAnalyticsAccountPropertiesBasic);
            await eventListener.AssertObjectIsValid(nameof(__dataLakeAnalyticsAccountPropertiesBasic), __dataLakeAnalyticsAccountPropertiesBasic);
        }
    }
    /// The account specific properties that are associated with an underlying Data Lake Analytics account. Returned only when
    /// retrieving a specific account.
    public partial interface IDataLakeAnalyticsAccountProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesBasic
    {
        /// <summary>The list of compute policies associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of compute policies associated with this account.",
        SerializedName = @"computePolicies",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IComputePolicy) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IComputePolicy[] ComputePolicy { get;  }
        /// <summary>The commitment tier in use for the current month.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The commitment tier in use for the current month.",
        SerializedName = @"currentTier",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.TierType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.TierType? CurrentTier { get;  }
        /// <summary>The list of Data Lake Store accounts associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of Data Lake Store accounts associated with this account.",
        SerializedName = @"dataLakeStoreAccounts",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeStoreAccountInformation) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeStoreAccountInformation[] DataLakeStoreAccount { get;  }
        /// <summary>The current state of the DebugDataAccessLevel for this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The current state of the DebugDataAccessLevel for this account.",
        SerializedName = @"debugDataAccessLevel",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.DebugDataAccessLevel) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.DebugDataAccessLevel? DebugDataAccessLevel { get;  }
        /// <summary>The default Data Lake Store account associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The default Data Lake Store account associated with this account.",
        SerializedName = @"defaultDataLakeStoreAccount",
        PossibleTypes = new [] { typeof(string) })]
        string DefaultDataLakeStoreAccount { get;  }
        /// <summary>The type of the default Data Lake Store account associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The type of the default Data Lake Store account associated with this account.",
        SerializedName = @"defaultDataLakeStoreAccountType",
        PossibleTypes = new [] { typeof(string) })]
        string DefaultDataLakeStoreAccountType { get;  }
        /// <summary>
        /// The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled,
        /// this is not enforced.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.",
        SerializedName = @"firewallAllowAzureIps",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.FirewallAllowAzureIpsState) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.FirewallAllowAzureIpsState? FirewallAllowAzureIP { get; set; }
        /// <summary>The list of firewall rules associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of firewall rules associated with this account.",
        SerializedName = @"firewallRules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IFirewallRule) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IFirewallRule[] FirewallRule { get;  }
        /// <summary>The current state of the IP address firewall for this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The current state of the IP address firewall for this account.",
        SerializedName = @"firewallState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.FirewallState) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.FirewallState? FirewallState { get; set; }
        /// <summary>The list of hiveMetastores associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of hiveMetastores associated with this account.",
        SerializedName = @"hiveMetastores",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IHiveMetastore) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IHiveMetastore[] HiveMetastore { get;  }
        /// <summary>The maximum supported active jobs under the account at the same time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The maximum supported active jobs under the account at the same time.",
        SerializedName = @"maxActiveJobCountPerUser",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxActiveJobCountPerUser { get;  }
        /// <summary>The maximum supported degree of parallelism for this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum supported degree of parallelism for this account.",
        SerializedName = @"maxDegreeOfParallelism",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxDegreeOfParallelism { get; set; }
        /// <summary>The maximum supported degree of parallelism per job for this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum supported degree of parallelism per job for this account.",
        SerializedName = @"maxDegreeOfParallelismPerJob",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxDegreeOfParallelismPerJob { get; set; }
        /// <summary>The maximum supported jobs running under the account at the same time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum supported jobs running under the account at the same time.",
        SerializedName = @"maxJobCount",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxJobCount { get; set; }
        /// <summary>The maximum supported active jobs under the account at the same time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The maximum supported active jobs under the account at the same time.",
        SerializedName = @"maxJobRunningTimeInMin",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxJobRunningTimeInMin { get;  }
        /// <summary>The maximum supported jobs queued under the account at the same time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The maximum supported jobs queued under the account at the same time.",
        SerializedName = @"maxQueuedJobCountPerUser",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxQueuedJobCountPerUser { get;  }
        /// <summary>The minimum supported priority per job for this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The minimum supported priority per job for this account.",
        SerializedName = @"minPriorityPerJob",
        PossibleTypes = new [] { typeof(int) })]
        int? MinPriorityPerJob { get;  }
        /// <summary>The commitment tier for the next month.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The commitment tier for the next month.",
        SerializedName = @"newTier",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.TierType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.TierType? NewTier { get; set; }
        /// <summary>The list of Data Lake Store accounts associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of Data Lake Store accounts associated with this account.",
        SerializedName = @"publicDataLakeStoreAccounts",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeStoreAccountInformation) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeStoreAccountInformation[] PublicDataLakeStoreAccount { get; set; }
        /// <summary>The number of days that job metadata is retained.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of days that job metadata is retained.",
        SerializedName = @"queryStoreRetention",
        PossibleTypes = new [] { typeof(int) })]
        int? QueryStoreRetention { get; set; }
        /// <summary>The list of Azure Blob Storage accounts associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of Azure Blob Storage accounts associated with this account.",
        SerializedName = @"storageAccounts",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IStorageAccountInformation) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IStorageAccountInformation[] StorageAccount { get;  }
        /// <summary>
        /// The system defined maximum supported degree of parallelism for this account, which restricts the maximum value of parallelism
        /// the user can set for the account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The system defined maximum supported degree of parallelism for this account, which restricts the maximum value of parallelism the user can set for the account.",
        SerializedName = @"systemMaxDegreeOfParallelism",
        PossibleTypes = new [] { typeof(int) })]
        int? SystemMaxDegreeOfParallelism { get;  }
        /// <summary>
        /// The system defined maximum supported jobs running under the account at the same time, which restricts the maximum number
        /// of running jobs the user can set for the account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The system defined maximum supported jobs running under the account at the same time, which restricts the maximum number of running jobs the user can set for the account.",
        SerializedName = @"systemMaxJobCount",
        PossibleTypes = new [] { typeof(int) })]
        int? SystemMaxJobCount { get;  }
        /// <summary>The list of virtualNetwork rules associated with this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of virtualNetwork rules associated with this account.",
        SerializedName = @"virtualNetworkRules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IVirtualNetworkRule) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IVirtualNetworkRule[] VirtualNetworkRule { get;  }

    }
    /// The account specific properties that are associated with an underlying Data Lake Analytics account. Returned only when
    /// retrieving a specific account.
    internal partial interface IDataLakeAnalyticsAccountPropertiesInternal :
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeAnalyticsAccountPropertiesBasicInternal
    {
        /// <summary>The list of compute policies associated with this account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IComputePolicy[] ComputePolicy { get; set; }
        /// <summary>The commitment tier in use for the current month.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.TierType? CurrentTier { get; set; }
        /// <summary>The list of Data Lake Store accounts associated with this account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeStoreAccountInformation[] DataLakeStoreAccount { get; set; }
        /// <summary>The current state of the DebugDataAccessLevel for this account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.DebugDataAccessLevel? DebugDataAccessLevel { get; set; }
        /// <summary>The default Data Lake Store account associated with this account.</summary>
        string DefaultDataLakeStoreAccount { get; set; }
        /// <summary>The type of the default Data Lake Store account associated with this account.</summary>
        string DefaultDataLakeStoreAccountType { get; set; }
        /// <summary>
        /// The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled,
        /// this is not enforced.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.FirewallAllowAzureIpsState? FirewallAllowAzureIP { get; set; }
        /// <summary>The list of firewall rules associated with this account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IFirewallRule[] FirewallRule { get; set; }
        /// <summary>The current state of the IP address firewall for this account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.FirewallState? FirewallState { get; set; }
        /// <summary>The list of hiveMetastores associated with this account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IHiveMetastore[] HiveMetastore { get; set; }
        /// <summary>The maximum supported active jobs under the account at the same time.</summary>
        int? MaxActiveJobCountPerUser { get; set; }
        /// <summary>The maximum supported degree of parallelism for this account.</summary>
        int? MaxDegreeOfParallelism { get; set; }
        /// <summary>The maximum supported degree of parallelism per job for this account.</summary>
        int? MaxDegreeOfParallelismPerJob { get; set; }
        /// <summary>The maximum supported jobs running under the account at the same time.</summary>
        int? MaxJobCount { get; set; }
        /// <summary>The maximum supported active jobs under the account at the same time.</summary>
        int? MaxJobRunningTimeInMin { get; set; }
        /// <summary>The maximum supported jobs queued under the account at the same time.</summary>
        int? MaxQueuedJobCountPerUser { get; set; }
        /// <summary>The minimum supported priority per job for this account.</summary>
        int? MinPriorityPerJob { get; set; }
        /// <summary>The commitment tier for the next month.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Support.TierType? NewTier { get; set; }
        /// <summary>The list of Data Lake Store accounts associated with this account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IDataLakeStoreAccountInformation[] PublicDataLakeStoreAccount { get; set; }
        /// <summary>The number of days that job metadata is retained.</summary>
        int? QueryStoreRetention { get; set; }
        /// <summary>The list of Azure Blob Storage accounts associated with this account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IStorageAccountInformation[] StorageAccount { get; set; }
        /// <summary>
        /// The system defined maximum supported degree of parallelism for this account, which restricts the maximum value of parallelism
        /// the user can set for the account.
        /// </summary>
        int? SystemMaxDegreeOfParallelism { get; set; }
        /// <summary>
        /// The system defined maximum supported jobs running under the account at the same time, which restricts the maximum number
        /// of running jobs the user can set for the account.
        /// </summary>
        int? SystemMaxJobCount { get; set; }
        /// <summary>The list of virtualNetwork rules associated with this account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataLakeAnalyticsAccount.Models.Api20191101Preview.IVirtualNetworkRule[] VirtualNetworkRule { get; set; }

    }
}