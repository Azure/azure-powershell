// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.SerialConsole.Models.Api20180501
{
    using static Microsoft.Azure.PowerShell.Cmdlets.SerialConsole.Runtime.Extensions;

    /// <summary>Represents the serial port of the parent resource.</summary>
    public partial class SerialPort :
        Microsoft.Azure.PowerShell.Cmdlets.SerialConsole.Models.Api20180501.ISerialPort,
        Microsoft.Azure.PowerShell.Cmdlets.SerialConsole.Models.Api20180501.ISerialPortInternal,
        Microsoft.Azure.PowerShell.Cmdlets.SerialConsole.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.SerialConsole.Models.Api20180501.IResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SerialConsole.Models.Api20180501.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.SerialConsole.Models.Api20180501.Resource();

        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SerialConsole.Origin(Microsoft.Azure.PowerShell.Cmdlets.SerialConsole.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.SerialConsole.Models.Api20180501.IResourceInternal)__resource).Id; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SerialConsole.Models.Api20180501.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.SerialConsole.Models.Api20180501.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.SerialConsole.Models.Api20180501.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SerialConsole.Models.Api20180501.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.SerialConsole.Models.Api20180501.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.SerialConsole.Models.Api20180501.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SerialConsole.Models.Api20180501.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.SerialConsole.Models.Api20180501.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.SerialConsole.Models.Api20180501.IResourceInternal)__resource).Type = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SerialConsole.Models.Api20180501.ISerialPortProperties Microsoft.Azure.PowerShell.Cmdlets.SerialConsole.Models.Api20180501.ISerialPortInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.SerialConsole.Models.Api20180501.SerialPortProperties()); set { {_property = value;} } }

        /// <summary>Resource name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SerialConsole.Origin(Microsoft.Azure.PowerShell.Cmdlets.SerialConsole.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.SerialConsole.Models.Api20180501.IResourceInternal)__resource).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SerialConsole.Models.Api20180501.ISerialPortProperties _property;

        /// <summary>The properties of the serial port.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SerialConsole.Origin(Microsoft.Azure.PowerShell.Cmdlets.SerialConsole.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.SerialConsole.Models.Api20180501.ISerialPortProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.SerialConsole.Models.Api20180501.SerialPortProperties()); set => this._property = value; }

        /// <summary>Specifies whether the port is enabled for a serial console connection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SerialConsole.Origin(Microsoft.Azure.PowerShell.Cmdlets.SerialConsole.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.SerialConsole.Support.SerialPortState? State { get => ((Microsoft.Azure.PowerShell.Cmdlets.SerialConsole.Models.Api20180501.ISerialPortPropertiesInternal)Property).State; set => ((Microsoft.Azure.PowerShell.Cmdlets.SerialConsole.Models.Api20180501.ISerialPortPropertiesInternal)Property).State = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.SerialConsole.Support.SerialPortState)""); }

        /// <summary>Resource type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SerialConsole.Origin(Microsoft.Azure.PowerShell.Cmdlets.SerialConsole.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.SerialConsole.Models.Api20180501.IResourceInternal)__resource).Type; }

        /// <summary>Creates an new <see cref="SerialPort" /> instance.</summary>
        public SerialPort()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.SerialConsole.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.SerialConsole.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// Represents the serial port of the parent resource.
    public partial interface ISerialPort :
        Microsoft.Azure.PowerShell.Cmdlets.SerialConsole.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.SerialConsole.Models.Api20180501.IResource
    {
        /// <summary>Specifies whether the port is enabled for a serial console connection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SerialConsole.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies whether the port is enabled for a serial console connection.",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SerialConsole.Support.SerialPortState) })]
        Microsoft.Azure.PowerShell.Cmdlets.SerialConsole.Support.SerialPortState? State { get; set; }

    }
    /// Represents the serial port of the parent resource.
    internal partial interface ISerialPortInternal :
        Microsoft.Azure.PowerShell.Cmdlets.SerialConsole.Models.Api20180501.IResourceInternal
    {
        /// <summary>The properties of the serial port.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SerialConsole.Models.Api20180501.ISerialPortProperties Property { get; set; }
        /// <summary>Specifies whether the port is enabled for a serial console connection.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SerialConsole.Support.SerialPortState? State { get; set; }

    }
}