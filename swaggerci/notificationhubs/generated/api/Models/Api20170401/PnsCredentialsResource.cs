// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Extensions;

    /// <summary>Description of a NotificationHub PNS Credentials.</summary>
    public partial class PnsCredentialsResource :
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsResource,
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsResourceInternal,
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.Resource();

        /// <summary>The APNS certificate. Specify if using Certificate Authentication Mode.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inlined)]
        public string ApnsCertificate { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).ApnsCertificate; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).ApnsCertificate = value ?? null; }

        /// <summary>The APNS certificate password if it exists.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inlined)]
        public string ApnsCredentialPropertiesCertificateKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).ApnsCredentialPropertiesCertificateKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).ApnsCredentialPropertiesCertificateKey = value ?? null; }

        /// <summary>
        /// The APNS certificate thumbprint. Specify if using Certificate Authentication Mode.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inlined)]
        public string ApnsCredentialPropertiesThumbprint { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).ApnsCredentialPropertiesThumbprint; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).ApnsCredentialPropertiesThumbprint = value ?? null; }

        /// <summary>
        /// The issuer (iss) registered claim key. The value is a 10-character TeamId, obtained from your developer account. Specify
        /// if using Token Authentication Mode.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inlined)]
        public string AppId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).AppId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).AppId = value ?? null; }

        /// <summary>
        /// The name of the application or BundleId. Specify if using Token Authentication Mode.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inlined)]
        public string AppName { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).AppName; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).AppName = value ?? null; }

        /// <summary>The URL of the authorization token.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inlined)]
        public string AuthTokenUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).AuthTokenUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).AuthTokenUrl = value ?? null; }

        /// <summary>Baidu Api Key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inlined)]
        public string BaiduApiKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).BaiduApiKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).BaiduApiKey = value ?? null; }

        /// <summary>Baidu Endpoint.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inlined)]
        public string BaiduEndPoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).BaiduEndPoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).BaiduEndPoint = value ?? null; }

        /// <summary>Baidu Secret Key</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inlined)]
        public string BaiduSecretKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).BaiduSecretKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).BaiduSecretKey = value ?? null; }

        /// <summary>The client identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inlined)]
        public string ClientId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).ClientId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).ClientId = value ?? null; }

        /// <summary>The credential secret access key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inlined)]
        public string ClientSecret { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).ClientSecret; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).ClientSecret = value ?? null; }

        /// <summary>
        /// The APNS endpoint of this credential. If using Certificate Authentication Mode and Sandbox specify 'gateway.sandbox.push.apple.com'.
        /// If using Certificate Authentication Mode and Production specify 'gateway.push.apple.com'. If using Token Authentication
        /// Mode and Sandbox specify 'https://api.development.push.apple.com:443/3/device'. If using Token Authentication Mode and
        /// Production specify 'https://api.push.apple.com:443/3/device'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inlined)]
        public string Endpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).Endpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).Endpoint = value ?? null; }

        /// <summary>The FCM legacy endpoint. Default value is 'https://fcm.googleapis.com/fcm/send'</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inlined)]
        public string GcmEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).GcmEndpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).GcmEndpoint = value ?? null; }

        /// <summary>The Google API key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inlined)]
        public string GoogleApiKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).GoogleApiKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).GoogleApiKey = value ?? null; }

        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal)__resource).Id; }

        /// <summary>
        /// A 10-character key identifier (kid) key, obtained from your developer account. Specify if using Token Authentication Mode.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inlined)]
        public string KeyId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).KeyId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).KeyId = value ?? null; }

        /// <summary>Resource location</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal)__resource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal)__resource).Location = value ?? null; }

        /// <summary>Internal Acessors for AdmCredential</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IAdmCredential Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsResourceInternal.AdmCredential { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).AdmCredential; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).AdmCredential = value; }

        /// <summary>Internal Acessors for AdmCredentialProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IAdmCredentialProperties Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsResourceInternal.AdmCredentialProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).AdmCredentialProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).AdmCredentialProperty = value; }

        /// <summary>Internal Acessors for ApnCredentialProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IApnsCredentialProperties Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsResourceInternal.ApnCredentialProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).ApnCredentialProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).ApnCredentialProperty = value; }

        /// <summary>Internal Acessors for ApnsCredential</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IApnsCredential Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsResourceInternal.ApnsCredential { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).ApnsCredential; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).ApnsCredential = value; }

        /// <summary>Internal Acessors for BaiduCredential</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IBaiduCredential Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsResourceInternal.BaiduCredential { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).BaiduCredential; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).BaiduCredential = value; }

        /// <summary>Internal Acessors for BaiduCredentialProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IBaiduCredentialProperties Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsResourceInternal.BaiduCredentialProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).BaiduCredentialProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).BaiduCredentialProperty = value; }

        /// <summary>Internal Acessors for GcmCredential</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IGcmCredential Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsResourceInternal.GcmCredential { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).GcmCredential; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).GcmCredential = value; }

        /// <summary>Internal Acessors for GcmCredentialProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IGcmCredentialProperties Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsResourceInternal.GcmCredentialProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).GcmCredentialProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).GcmCredentialProperty = value; }

        /// <summary>Internal Acessors for MpnCredentialProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IMpnsCredentialProperties Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsResourceInternal.MpnCredentialProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).MpnCredentialProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).MpnCredentialProperty = value; }

        /// <summary>Internal Acessors for MpnsCredential</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IMpnsCredential Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsResourceInternal.MpnsCredential { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).MpnsCredential; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).MpnsCredential = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsProperties Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsResourceInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.PnsCredentialsProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for WnCredentialProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IWnsCredentialProperties Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsResourceInternal.WnCredentialProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).WnCredentialProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).WnCredentialProperty = value; }

        /// <summary>Internal Acessors for WnsCredential</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IWnsCredential Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsResourceInternal.WnsCredential { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).WnsCredential; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).WnsCredential = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal)__resource).Type = value; }

        /// <summary>The MPNS certificate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inlined)]
        public string MpnsCertificate { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).MpnsCertificate; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).MpnsCertificate = value ?? null; }

        /// <summary>The certificate key for this credential.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inlined)]
        public string MpnsCredentialPropertiesCertificateKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).MpnsCredentialPropertiesCertificateKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).MpnsCredentialPropertiesCertificateKey = value ?? null; }

        /// <summary>The MPNS certificate Thumbprint</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inlined)]
        public string MpnsCredentialPropertiesThumbprint { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).MpnsCredentialPropertiesThumbprint; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).MpnsCredentialPropertiesThumbprint = value ?? null; }

        /// <summary>Resource name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal)__resource).Name; }

        /// <summary>The package ID for this credential.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inlined)]
        public string PackageSid { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).PackageSid; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).PackageSid = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsProperties _property;

        /// <summary>NotificationHub PNS Credentials.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.PnsCredentialsProperties()); set => this._property = value; }

        /// <summary>The secret key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inlined)]
        public string SecretKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).SecretKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).SecretKey = value ?? null; }

        /// <summary>The sku of the created namespace</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.ISku Sku { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal)__resource).Sku; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal)__resource).Sku = value ?? null /* model class */; }

        /// <summary>The capacity of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inherited)]
        public int? SkuCapacity { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal)__resource).SkuCapacity; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal)__resource).SkuCapacity = value ?? default(int); }

        /// <summary>The Sku Family</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inherited)]
        public string SkuFamily { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal)__resource).SkuFamily; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal)__resource).SkuFamily = value ?? null; }

        /// <summary>Name of the notification hub sku</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Support.SkuName? SkuName { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal)__resource).SkuName; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal)__resource).SkuName = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Support.SkuName)""); }

        /// <summary>The Sku size</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inherited)]
        public string SkuSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal)__resource).SkuSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal)__resource).SkuSize = value ?? null; }

        /// <summary>The tier of particular sku</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inherited)]
        public string SkuTier { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal)__resource).SkuTier; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal)__resource).SkuTier = value ?? null; }

        /// <summary>Resource tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal)__resource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal)__resource).Tag = value ?? null /* model class */; }

        /// <summary>
        /// Provider Authentication Token, obtained through your developer account. Specify if using Token Authentication Mode.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inlined)]
        public string Token { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).Token; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).Token = value ?? null; }

        /// <summary>Resource type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal)__resource).Type; }

        /// <summary>The Windows Live endpoint.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inlined)]
        public string WindowsLiveEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).WindowsLiveEndpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsPropertiesInternal)Property).WindowsLiveEndpoint = value ?? null; }

        /// <summary>Creates an new <see cref="PnsCredentialsResource" /> instance.</summary>
        public PnsCredentialsResource()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// Description of a NotificationHub PNS Credentials.
    public partial interface IPnsCredentialsResource :
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResource
    {
        /// <summary>The APNS certificate. Specify if using Certificate Authentication Mode.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The APNS certificate. Specify if using Certificate Authentication Mode.",
        SerializedName = @"apnsCertificate",
        PossibleTypes = new [] { typeof(string) })]
        string ApnsCertificate { get; set; }
        /// <summary>The APNS certificate password if it exists.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The APNS certificate password if it exists.",
        SerializedName = @"certificateKey",
        PossibleTypes = new [] { typeof(string) })]
        string ApnsCredentialPropertiesCertificateKey { get; set; }
        /// <summary>
        /// The APNS certificate thumbprint. Specify if using Certificate Authentication Mode.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The APNS certificate thumbprint. Specify if using Certificate Authentication Mode.",
        SerializedName = @"thumbprint",
        PossibleTypes = new [] { typeof(string) })]
        string ApnsCredentialPropertiesThumbprint { get; set; }
        /// <summary>
        /// The issuer (iss) registered claim key. The value is a 10-character TeamId, obtained from your developer account. Specify
        /// if using Token Authentication Mode.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The issuer (iss) registered claim key. The value is a 10-character TeamId, obtained from your developer account. Specify if using Token Authentication Mode.",
        SerializedName = @"appId",
        PossibleTypes = new [] { typeof(string) })]
        string AppId { get; set; }
        /// <summary>
        /// The name of the application or BundleId. Specify if using Token Authentication Mode.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the application or BundleId. Specify if using Token Authentication Mode.",
        SerializedName = @"appName",
        PossibleTypes = new [] { typeof(string) })]
        string AppName { get; set; }
        /// <summary>The URL of the authorization token.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The URL of the authorization token.",
        SerializedName = @"authTokenUrl",
        PossibleTypes = new [] { typeof(string) })]
        string AuthTokenUrl { get; set; }
        /// <summary>Baidu Api Key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Baidu Api Key.",
        SerializedName = @"baiduApiKey",
        PossibleTypes = new [] { typeof(string) })]
        string BaiduApiKey { get; set; }
        /// <summary>Baidu Endpoint.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Baidu Endpoint.",
        SerializedName = @"baiduEndPoint",
        PossibleTypes = new [] { typeof(string) })]
        string BaiduEndPoint { get; set; }
        /// <summary>Baidu Secret Key</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Baidu Secret Key",
        SerializedName = @"baiduSecretKey",
        PossibleTypes = new [] { typeof(string) })]
        string BaiduSecretKey { get; set; }
        /// <summary>The client identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The client identifier.",
        SerializedName = @"clientId",
        PossibleTypes = new [] { typeof(string) })]
        string ClientId { get; set; }
        /// <summary>The credential secret access key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The credential secret access key.",
        SerializedName = @"clientSecret",
        PossibleTypes = new [] { typeof(string) })]
        string ClientSecret { get; set; }
        /// <summary>
        /// The APNS endpoint of this credential. If using Certificate Authentication Mode and Sandbox specify 'gateway.sandbox.push.apple.com'.
        /// If using Certificate Authentication Mode and Production specify 'gateway.push.apple.com'. If using Token Authentication
        /// Mode and Sandbox specify 'https://api.development.push.apple.com:443/3/device'. If using Token Authentication Mode and
        /// Production specify 'https://api.push.apple.com:443/3/device'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The APNS endpoint of this credential. If using Certificate Authentication Mode and Sandbox specify 'gateway.sandbox.push.apple.com'. If using Certificate Authentication Mode and Production specify 'gateway.push.apple.com'. If using Token Authentication Mode and Sandbox specify 'https://api.development.push.apple.com:443/3/device'. If using Token Authentication Mode and Production specify 'https://api.push.apple.com:443/3/device'.",
        SerializedName = @"endpoint",
        PossibleTypes = new [] { typeof(string) })]
        string Endpoint { get; set; }
        /// <summary>The FCM legacy endpoint. Default value is 'https://fcm.googleapis.com/fcm/send'</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The FCM legacy endpoint. Default value is 'https://fcm.googleapis.com/fcm/send'",
        SerializedName = @"gcmEndpoint",
        PossibleTypes = new [] { typeof(string) })]
        string GcmEndpoint { get; set; }
        /// <summary>The Google API key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Google API key.",
        SerializedName = @"googleApiKey",
        PossibleTypes = new [] { typeof(string) })]
        string GoogleApiKey { get; set; }
        /// <summary>
        /// A 10-character key identifier (kid) key, obtained from your developer account. Specify if using Token Authentication Mode.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A 10-character key identifier (kid) key, obtained from your developer account. Specify if using Token Authentication Mode.",
        SerializedName = @"keyId",
        PossibleTypes = new [] { typeof(string) })]
        string KeyId { get; set; }
        /// <summary>The MPNS certificate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The MPNS certificate.",
        SerializedName = @"mpnsCertificate",
        PossibleTypes = new [] { typeof(string) })]
        string MpnsCertificate { get; set; }
        /// <summary>The certificate key for this credential.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The certificate key for this credential.",
        SerializedName = @"certificateKey",
        PossibleTypes = new [] { typeof(string) })]
        string MpnsCredentialPropertiesCertificateKey { get; set; }
        /// <summary>The MPNS certificate Thumbprint</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The MPNS certificate Thumbprint",
        SerializedName = @"thumbprint",
        PossibleTypes = new [] { typeof(string) })]
        string MpnsCredentialPropertiesThumbprint { get; set; }
        /// <summary>The package ID for this credential.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The package ID for this credential.",
        SerializedName = @"packageSid",
        PossibleTypes = new [] { typeof(string) })]
        string PackageSid { get; set; }
        /// <summary>The secret key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The secret key.",
        SerializedName = @"secretKey",
        PossibleTypes = new [] { typeof(string) })]
        string SecretKey { get; set; }
        /// <summary>
        /// Provider Authentication Token, obtained through your developer account. Specify if using Token Authentication Mode.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Provider Authentication Token, obtained through your developer account. Specify if using Token Authentication Mode.",
        SerializedName = @"token",
        PossibleTypes = new [] { typeof(string) })]
        string Token { get; set; }
        /// <summary>The Windows Live endpoint.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Windows Live endpoint.",
        SerializedName = @"windowsLiveEndpoint",
        PossibleTypes = new [] { typeof(string) })]
        string WindowsLiveEndpoint { get; set; }

    }
    /// Description of a NotificationHub PNS Credentials.
    internal partial interface IPnsCredentialsResourceInternal :
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal
    {
        /// <summary>The AdmCredential of the created NotificationHub</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IAdmCredential AdmCredential { get; set; }
        /// <summary>Properties of NotificationHub AdmCredential.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IAdmCredentialProperties AdmCredentialProperty { get; set; }
        /// <summary>Properties of NotificationHub ApnsCredential.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IApnsCredentialProperties ApnCredentialProperty { get; set; }
        /// <summary>The APNS certificate. Specify if using Certificate Authentication Mode.</summary>
        string ApnsCertificate { get; set; }
        /// <summary>The ApnsCredential of the created NotificationHub</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IApnsCredential ApnsCredential { get; set; }
        /// <summary>The APNS certificate password if it exists.</summary>
        string ApnsCredentialPropertiesCertificateKey { get; set; }
        /// <summary>
        /// The APNS certificate thumbprint. Specify if using Certificate Authentication Mode.
        /// </summary>
        string ApnsCredentialPropertiesThumbprint { get; set; }
        /// <summary>
        /// The issuer (iss) registered claim key. The value is a 10-character TeamId, obtained from your developer account. Specify
        /// if using Token Authentication Mode.
        /// </summary>
        string AppId { get; set; }
        /// <summary>
        /// The name of the application or BundleId. Specify if using Token Authentication Mode.
        /// </summary>
        string AppName { get; set; }
        /// <summary>The URL of the authorization token.</summary>
        string AuthTokenUrl { get; set; }
        /// <summary>Baidu Api Key.</summary>
        string BaiduApiKey { get; set; }
        /// <summary>The BaiduCredential of the created NotificationHub</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IBaiduCredential BaiduCredential { get; set; }
        /// <summary>Properties of NotificationHub BaiduCredential.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IBaiduCredentialProperties BaiduCredentialProperty { get; set; }
        /// <summary>Baidu Endpoint.</summary>
        string BaiduEndPoint { get; set; }
        /// <summary>Baidu Secret Key</summary>
        string BaiduSecretKey { get; set; }
        /// <summary>The client identifier.</summary>
        string ClientId { get; set; }
        /// <summary>The credential secret access key.</summary>
        string ClientSecret { get; set; }
        /// <summary>
        /// The APNS endpoint of this credential. If using Certificate Authentication Mode and Sandbox specify 'gateway.sandbox.push.apple.com'.
        /// If using Certificate Authentication Mode and Production specify 'gateway.push.apple.com'. If using Token Authentication
        /// Mode and Sandbox specify 'https://api.development.push.apple.com:443/3/device'. If using Token Authentication Mode and
        /// Production specify 'https://api.push.apple.com:443/3/device'.
        /// </summary>
        string Endpoint { get; set; }
        /// <summary>The GcmCredential of the created NotificationHub</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IGcmCredential GcmCredential { get; set; }
        /// <summary>Properties of NotificationHub GcmCredential.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IGcmCredentialProperties GcmCredentialProperty { get; set; }
        /// <summary>The FCM legacy endpoint. Default value is 'https://fcm.googleapis.com/fcm/send'</summary>
        string GcmEndpoint { get; set; }
        /// <summary>The Google API key.</summary>
        string GoogleApiKey { get; set; }
        /// <summary>
        /// A 10-character key identifier (kid) key, obtained from your developer account. Specify if using Token Authentication Mode.
        /// </summary>
        string KeyId { get; set; }
        /// <summary>Properties of NotificationHub MpnsCredential.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IMpnsCredentialProperties MpnCredentialProperty { get; set; }
        /// <summary>The MPNS certificate.</summary>
        string MpnsCertificate { get; set; }
        /// <summary>The MpnsCredential of the created NotificationHub</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IMpnsCredential MpnsCredential { get; set; }
        /// <summary>The certificate key for this credential.</summary>
        string MpnsCredentialPropertiesCertificateKey { get; set; }
        /// <summary>The MPNS certificate Thumbprint</summary>
        string MpnsCredentialPropertiesThumbprint { get; set; }
        /// <summary>The package ID for this credential.</summary>
        string PackageSid { get; set; }
        /// <summary>NotificationHub PNS Credentials.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IPnsCredentialsProperties Property { get; set; }
        /// <summary>The secret key.</summary>
        string SecretKey { get; set; }
        /// <summary>
        /// Provider Authentication Token, obtained through your developer account. Specify if using Token Authentication Mode.
        /// </summary>
        string Token { get; set; }
        /// <summary>The Windows Live endpoint.</summary>
        string WindowsLiveEndpoint { get; set; }
        /// <summary>Properties of NotificationHub WnsCredential.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IWnsCredentialProperties WnCredentialProperty { get; set; }
        /// <summary>The WnsCredential of the created NotificationHub</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IWnsCredential WnsCredential { get; set; }

    }
}