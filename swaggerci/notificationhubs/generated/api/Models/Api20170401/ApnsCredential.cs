// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Extensions;

    /// <summary>Description of a NotificationHub ApnsCredential.</summary>
    public partial class ApnsCredential :
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IApnsCredential,
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IApnsCredentialInternal
    {

        /// <summary>The APNS certificate. Specify if using Certificate Authentication Mode.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inlined)]
        public string ApnsCertificate { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IApnsCredentialPropertiesInternal)Property).ApnsCertificate; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IApnsCredentialPropertiesInternal)Property).ApnsCertificate = value ?? null; }

        /// <summary>
        /// The issuer (iss) registered claim key. The value is a 10-character TeamId, obtained from your developer account. Specify
        /// if using Token Authentication Mode.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inlined)]
        public string AppId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IApnsCredentialPropertiesInternal)Property).AppId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IApnsCredentialPropertiesInternal)Property).AppId = value ?? null; }

        /// <summary>
        /// The name of the application or BundleId. Specify if using Token Authentication Mode.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inlined)]
        public string AppName { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IApnsCredentialPropertiesInternal)Property).AppName; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IApnsCredentialPropertiesInternal)Property).AppName = value ?? null; }

        /// <summary>The APNS certificate password if it exists.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inlined)]
        public string CertificateKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IApnsCredentialPropertiesInternal)Property).CertificateKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IApnsCredentialPropertiesInternal)Property).CertificateKey = value ?? null; }

        /// <summary>
        /// The APNS endpoint of this credential. If using Certificate Authentication Mode and Sandbox specify 'gateway.sandbox.push.apple.com'.
        /// If using Certificate Authentication Mode and Production specify 'gateway.push.apple.com'. If using Token Authentication
        /// Mode and Sandbox specify 'https://api.development.push.apple.com:443/3/device'. If using Token Authentication Mode and
        /// Production specify 'https://api.push.apple.com:443/3/device'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inlined)]
        public string Endpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IApnsCredentialPropertiesInternal)Property).Endpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IApnsCredentialPropertiesInternal)Property).Endpoint = value ?? null; }

        /// <summary>
        /// A 10-character key identifier (kid) key, obtained from your developer account. Specify if using Token Authentication Mode.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inlined)]
        public string KeyId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IApnsCredentialPropertiesInternal)Property).KeyId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IApnsCredentialPropertiesInternal)Property).KeyId = value ?? null; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IApnsCredentialProperties Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IApnsCredentialInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.ApnsCredentialProperties()); set { {_property = value;} } }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IApnsCredentialProperties _property;

        /// <summary>Properties of NotificationHub ApnsCredential.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IApnsCredentialProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.ApnsCredentialProperties()); set => this._property = value; }

        /// <summary>
        /// The APNS certificate thumbprint. Specify if using Certificate Authentication Mode.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inlined)]
        public string Thumbprint { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IApnsCredentialPropertiesInternal)Property).Thumbprint; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IApnsCredentialPropertiesInternal)Property).Thumbprint = value ?? null; }

        /// <summary>
        /// Provider Authentication Token, obtained through your developer account. Specify if using Token Authentication Mode.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inlined)]
        public string Token { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IApnsCredentialPropertiesInternal)Property).Token; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IApnsCredentialPropertiesInternal)Property).Token = value ?? null; }

        /// <summary>Creates an new <see cref="ApnsCredential" /> instance.</summary>
        public ApnsCredential()
        {

        }
    }
    /// Description of a NotificationHub ApnsCredential.
    public partial interface IApnsCredential :
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.IJsonSerializable
    {
        /// <summary>The APNS certificate. Specify if using Certificate Authentication Mode.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The APNS certificate. Specify if using Certificate Authentication Mode.",
        SerializedName = @"apnsCertificate",
        PossibleTypes = new [] { typeof(string) })]
        string ApnsCertificate { get; set; }
        /// <summary>
        /// The issuer (iss) registered claim key. The value is a 10-character TeamId, obtained from your developer account. Specify
        /// if using Token Authentication Mode.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The issuer (iss) registered claim key. The value is a 10-character TeamId, obtained from your developer account. Specify if using Token Authentication Mode.",
        SerializedName = @"appId",
        PossibleTypes = new [] { typeof(string) })]
        string AppId { get; set; }
        /// <summary>
        /// The name of the application or BundleId. Specify if using Token Authentication Mode.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the application or BundleId. Specify if using Token Authentication Mode.",
        SerializedName = @"appName",
        PossibleTypes = new [] { typeof(string) })]
        string AppName { get; set; }
        /// <summary>The APNS certificate password if it exists.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The APNS certificate password if it exists.",
        SerializedName = @"certificateKey",
        PossibleTypes = new [] { typeof(string) })]
        string CertificateKey { get; set; }
        /// <summary>
        /// The APNS endpoint of this credential. If using Certificate Authentication Mode and Sandbox specify 'gateway.sandbox.push.apple.com'.
        /// If using Certificate Authentication Mode and Production specify 'gateway.push.apple.com'. If using Token Authentication
        /// Mode and Sandbox specify 'https://api.development.push.apple.com:443/3/device'. If using Token Authentication Mode and
        /// Production specify 'https://api.push.apple.com:443/3/device'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The APNS endpoint of this credential. If using Certificate Authentication Mode and Sandbox specify 'gateway.sandbox.push.apple.com'. If using Certificate Authentication Mode and Production specify 'gateway.push.apple.com'. If using Token Authentication Mode and Sandbox specify 'https://api.development.push.apple.com:443/3/device'. If using Token Authentication Mode and Production specify 'https://api.push.apple.com:443/3/device'.",
        SerializedName = @"endpoint",
        PossibleTypes = new [] { typeof(string) })]
        string Endpoint { get; set; }
        /// <summary>
        /// A 10-character key identifier (kid) key, obtained from your developer account. Specify if using Token Authentication Mode.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A 10-character key identifier (kid) key, obtained from your developer account. Specify if using Token Authentication Mode.",
        SerializedName = @"keyId",
        PossibleTypes = new [] { typeof(string) })]
        string KeyId { get; set; }
        /// <summary>
        /// The APNS certificate thumbprint. Specify if using Certificate Authentication Mode.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The APNS certificate thumbprint. Specify if using Certificate Authentication Mode.",
        SerializedName = @"thumbprint",
        PossibleTypes = new [] { typeof(string) })]
        string Thumbprint { get; set; }
        /// <summary>
        /// Provider Authentication Token, obtained through your developer account. Specify if using Token Authentication Mode.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Provider Authentication Token, obtained through your developer account. Specify if using Token Authentication Mode.",
        SerializedName = @"token",
        PossibleTypes = new [] { typeof(string) })]
        string Token { get; set; }

    }
    /// Description of a NotificationHub ApnsCredential.
    internal partial interface IApnsCredentialInternal

    {
        /// <summary>The APNS certificate. Specify if using Certificate Authentication Mode.</summary>
        string ApnsCertificate { get; set; }
        /// <summary>
        /// The issuer (iss) registered claim key. The value is a 10-character TeamId, obtained from your developer account. Specify
        /// if using Token Authentication Mode.
        /// </summary>
        string AppId { get; set; }
        /// <summary>
        /// The name of the application or BundleId. Specify if using Token Authentication Mode.
        /// </summary>
        string AppName { get; set; }
        /// <summary>The APNS certificate password if it exists.</summary>
        string CertificateKey { get; set; }
        /// <summary>
        /// The APNS endpoint of this credential. If using Certificate Authentication Mode and Sandbox specify 'gateway.sandbox.push.apple.com'.
        /// If using Certificate Authentication Mode and Production specify 'gateway.push.apple.com'. If using Token Authentication
        /// Mode and Sandbox specify 'https://api.development.push.apple.com:443/3/device'. If using Token Authentication Mode and
        /// Production specify 'https://api.push.apple.com:443/3/device'.
        /// </summary>
        string Endpoint { get; set; }
        /// <summary>
        /// A 10-character key identifier (kid) key, obtained from your developer account. Specify if using Token Authentication Mode.
        /// </summary>
        string KeyId { get; set; }
        /// <summary>Properties of NotificationHub ApnsCredential.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IApnsCredentialProperties Property { get; set; }
        /// <summary>
        /// The APNS certificate thumbprint. Specify if using Certificate Authentication Mode.
        /// </summary>
        string Thumbprint { get; set; }
        /// <summary>
        /// Provider Authentication Token, obtained through your developer account. Specify if using Token Authentication Mode.
        /// </summary>
        string Token { get; set; }

    }
}