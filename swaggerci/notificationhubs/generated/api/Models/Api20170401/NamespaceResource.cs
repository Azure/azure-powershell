// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Extensions;

    /// <summary>Description of a Namespace resource.</summary>
    public partial class NamespaceResource :
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.INamespaceResource,
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.INamespaceResourceInternal,
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.Resource();

        /// <summary>The time the namespace was created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inlined)]
        public global::System.DateTime? CreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.INamespacePropertiesInternal)Property).CreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.INamespacePropertiesInternal)Property).CreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>Whether or not the namespace is set as Critical.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inlined)]
        public bool? Critical { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.INamespacePropertiesInternal)Property).Critical; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.INamespacePropertiesInternal)Property).Critical = value ?? default(bool); }

        /// <summary>Data center for the namespace</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inlined)]
        public string DataCenter { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.INamespacePropertiesInternal)Property).DataCenter; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.INamespacePropertiesInternal)Property).DataCenter = value ?? null; }

        /// <summary>Whether or not the namespace is currently enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inlined)]
        public bool? Enabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.INamespacePropertiesInternal)Property).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.INamespacePropertiesInternal)Property).Enabled = value ?? default(bool); }

        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal)__resource).Id; }

        /// <summary>Resource location</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal)__resource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal)__resource).Location = value ?? null; }

        /// <summary>Identifier for Azure Insights metrics</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inlined)]
        public string MetricId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.INamespacePropertiesInternal)Property).MetricId; }

        /// <summary>Internal Acessors for MetricId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.INamespaceResourceInternal.MetricId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.INamespacePropertiesInternal)Property).MetricId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.INamespacePropertiesInternal)Property).MetricId = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.INamespaceProperties Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.INamespaceResourceInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.NamespaceProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal)__resource).Type = value; }

        /// <summary>Resource name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal)__resource).Name; }

        /// <summary>The namespace type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Support.NamespaceType? NamespaceType { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.INamespacePropertiesInternal)Property).NamespaceType; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.INamespacePropertiesInternal)Property).NamespaceType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Support.NamespaceType)""); }

        /// <summary>The name of the namespace.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inlined)]
        public string PropertiesName { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.INamespacePropertiesInternal)Property).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.INamespacePropertiesInternal)Property).Name = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.INamespaceProperties _property;

        /// <summary>Properties of the Namespace.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.INamespaceProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.NamespaceProperties()); set => this._property = value; }

        /// <summary>Provisioning state of the Namespace.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.INamespacePropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.INamespacePropertiesInternal)Property).ProvisioningState = value ?? null; }

        /// <summary>
        /// Specifies the targeted region in which the namespace should be created. It can be any of the following values: Australia
        /// East, Australia Southeast, Central US, East US, East US 2, West US, North Central US, South Central US, East Asia, Southeast
        /// Asia, Brazil South, Japan East, Japan West, North Europe, West Europe
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inlined)]
        public string Region { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.INamespacePropertiesInternal)Property).Region; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.INamespacePropertiesInternal)Property).Region = value ?? null; }

        /// <summary>ScaleUnit where the namespace gets created</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inlined)]
        public string ScaleUnit { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.INamespacePropertiesInternal)Property).ScaleUnit; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.INamespacePropertiesInternal)Property).ScaleUnit = value ?? null; }

        /// <summary>Endpoint you can use to perform NotificationHub operations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inlined)]
        public string ServiceBusEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.INamespacePropertiesInternal)Property).ServiceBusEndpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.INamespacePropertiesInternal)Property).ServiceBusEndpoint = value ?? null; }

        /// <summary>The sku of the created namespace</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.ISku Sku { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal)__resource).Sku; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal)__resource).Sku = value ?? null /* model class */; }

        /// <summary>The capacity of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inherited)]
        public int? SkuCapacity { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal)__resource).SkuCapacity; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal)__resource).SkuCapacity = value ?? default(int); }

        /// <summary>The Sku Family</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inherited)]
        public string SkuFamily { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal)__resource).SkuFamily; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal)__resource).SkuFamily = value ?? null; }

        /// <summary>Name of the notification hub sku</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Support.SkuName? SkuName { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal)__resource).SkuName; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal)__resource).SkuName = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Support.SkuName)""); }

        /// <summary>The Sku size</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inherited)]
        public string SkuSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal)__resource).SkuSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal)__resource).SkuSize = value ?? null; }

        /// <summary>The tier of particular sku</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inherited)]
        public string SkuTier { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal)__resource).SkuTier; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal)__resource).SkuTier = value ?? null; }

        /// <summary>
        /// Status of the namespace. It can be any of these values:1 = Created/Active2 = Creating3 = Suspended4 = Deleting
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inlined)]
        public string Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.INamespacePropertiesInternal)Property).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.INamespacePropertiesInternal)Property).Status = value ?? null; }

        /// <summary>The Id of the Azure subscription associated with the namespace.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inlined)]
        public string SubscriptionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.INamespacePropertiesInternal)Property).SubscriptionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.INamespacePropertiesInternal)Property).SubscriptionId = value ?? null; }

        /// <summary>Resource tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal)__resource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal)__resource).Tag = value ?? null /* model class */; }

        /// <summary>Resource type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal)__resource).Type; }

        /// <summary>The time the namespace was updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inlined)]
        public global::System.DateTime? UpdatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.INamespacePropertiesInternal)Property).UpdatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.INamespacePropertiesInternal)Property).UpdatedAt = value ?? default(global::System.DateTime); }

        /// <summary>Creates an new <see cref="NamespaceResource" /> instance.</summary>
        public NamespaceResource()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// Description of a Namespace resource.
    public partial interface INamespaceResource :
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResource
    {
        /// <summary>The time the namespace was created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time the namespace was created.",
        SerializedName = @"createdAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CreatedAt { get; set; }
        /// <summary>Whether or not the namespace is set as Critical.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether or not the namespace is set as Critical.",
        SerializedName = @"critical",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Critical { get; set; }
        /// <summary>Data center for the namespace</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Data center for the namespace",
        SerializedName = @"dataCenter",
        PossibleTypes = new [] { typeof(string) })]
        string DataCenter { get; set; }
        /// <summary>Whether or not the namespace is currently enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether or not the namespace is currently enabled.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Enabled { get; set; }
        /// <summary>Identifier for Azure Insights metrics</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Identifier for Azure Insights metrics",
        SerializedName = @"metricId",
        PossibleTypes = new [] { typeof(string) })]
        string MetricId { get;  }
        /// <summary>The namespace type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The namespace type.",
        SerializedName = @"namespaceType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Support.NamespaceType) })]
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Support.NamespaceType? NamespaceType { get; set; }
        /// <summary>The name of the namespace.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the namespace.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string PropertiesName { get; set; }
        /// <summary>Provisioning state of the Namespace.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Provisioning state of the Namespace.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get; set; }
        /// <summary>
        /// Specifies the targeted region in which the namespace should be created. It can be any of the following values: Australia
        /// East, Australia Southeast, Central US, East US, East US 2, West US, North Central US, South Central US, East Asia, Southeast
        /// Asia, Brazil South, Japan East, Japan West, North Europe, West Europe
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the targeted region in which the namespace should be created. It can be any of the following values: Australia East, Australia Southeast, Central US, East US, East US 2, West US, North Central US, South Central US, East Asia, Southeast Asia, Brazil South, Japan East, Japan West, North Europe, West Europe",
        SerializedName = @"region",
        PossibleTypes = new [] { typeof(string) })]
        string Region { get; set; }
        /// <summary>ScaleUnit where the namespace gets created</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ScaleUnit where the namespace gets created",
        SerializedName = @"scaleUnit",
        PossibleTypes = new [] { typeof(string) })]
        string ScaleUnit { get; set; }
        /// <summary>Endpoint you can use to perform NotificationHub operations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Endpoint you can use to perform NotificationHub operations.",
        SerializedName = @"serviceBusEndpoint",
        PossibleTypes = new [] { typeof(string) })]
        string ServiceBusEndpoint { get; set; }
        /// <summary>
        /// Status of the namespace. It can be any of these values:1 = Created/Active2 = Creating3 = Suspended4 = Deleting
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Status of the namespace. It can be any of these values:1 = Created/Active2 = Creating3 = Suspended4 = Deleting",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(string) })]
        string Status { get; set; }
        /// <summary>The Id of the Azure subscription associated with the namespace.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Id of the Azure subscription associated with the namespace.",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionId { get; set; }
        /// <summary>The time the namespace was updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time the namespace was updated.",
        SerializedName = @"updatedAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? UpdatedAt { get; set; }

    }
    /// Description of a Namespace resource.
    internal partial interface INamespaceResourceInternal :
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceInternal
    {
        /// <summary>The time the namespace was created.</summary>
        global::System.DateTime? CreatedAt { get; set; }
        /// <summary>Whether or not the namespace is set as Critical.</summary>
        bool? Critical { get; set; }
        /// <summary>Data center for the namespace</summary>
        string DataCenter { get; set; }
        /// <summary>Whether or not the namespace is currently enabled.</summary>
        bool? Enabled { get; set; }
        /// <summary>Identifier for Azure Insights metrics</summary>
        string MetricId { get; set; }
        /// <summary>The namespace type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Support.NamespaceType? NamespaceType { get; set; }
        /// <summary>The name of the namespace.</summary>
        string PropertiesName { get; set; }
        /// <summary>Properties of the Namespace.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.INamespaceProperties Property { get; set; }
        /// <summary>Provisioning state of the Namespace.</summary>
        string ProvisioningState { get; set; }
        /// <summary>
        /// Specifies the targeted region in which the namespace should be created. It can be any of the following values: Australia
        /// East, Australia Southeast, Central US, East US, East US 2, West US, North Central US, South Central US, East Asia, Southeast
        /// Asia, Brazil South, Japan East, Japan West, North Europe, West Europe
        /// </summary>
        string Region { get; set; }
        /// <summary>ScaleUnit where the namespace gets created</summary>
        string ScaleUnit { get; set; }
        /// <summary>Endpoint you can use to perform NotificationHub operations.</summary>
        string ServiceBusEndpoint { get; set; }
        /// <summary>
        /// Status of the namespace. It can be any of these values:1 = Created/Active2 = Creating3 = Suspended4 = Deleting
        /// </summary>
        string Status { get; set; }
        /// <summary>The Id of the Azure subscription associated with the namespace.</summary>
        string SubscriptionId { get; set; }
        /// <summary>The time the namespace was updated.</summary>
        global::System.DateTime? UpdatedAt { get; set; }

    }
}