// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Extensions;

    /// <summary>
    /// Description of a NotificationHub ApnsCredential. Note that there is no explicit switch between Certificate and Token Authentication
    /// Modes. The mode is determined based on the properties passed in.
    /// </summary>
    public partial class ApnsCredentialProperties :
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IApnsCredentialProperties,
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IApnsCredentialPropertiesInternal
    {

        /// <summary>Backing field for <see cref="ApnsCertificate" /> property.</summary>
        private string _apnsCertificate;

        /// <summary>The APNS certificate. Specify if using Certificate Authentication Mode.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Owned)]
        public string ApnsCertificate { get => this._apnsCertificate; set => this._apnsCertificate = value; }

        /// <summary>Backing field for <see cref="AppId" /> property.</summary>
        private string _appId;

        /// <summary>
        /// The issuer (iss) registered claim key. The value is a 10-character TeamId, obtained from your developer account. Specify
        /// if using Token Authentication Mode.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Owned)]
        public string AppId { get => this._appId; set => this._appId = value; }

        /// <summary>Backing field for <see cref="AppName" /> property.</summary>
        private string _appName;

        /// <summary>
        /// The name of the application or BundleId. Specify if using Token Authentication Mode.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Owned)]
        public string AppName { get => this._appName; set => this._appName = value; }

        /// <summary>Backing field for <see cref="CertificateKey" /> property.</summary>
        private string _certificateKey;

        /// <summary>The APNS certificate password if it exists.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Owned)]
        public string CertificateKey { get => this._certificateKey; set => this._certificateKey = value; }

        /// <summary>Backing field for <see cref="Endpoint" /> property.</summary>
        private string _endpoint;

        /// <summary>
        /// The APNS endpoint of this credential. If using Certificate Authentication Mode and Sandbox specify 'gateway.sandbox.push.apple.com'.
        /// If using Certificate Authentication Mode and Production specify 'gateway.push.apple.com'. If using Token Authentication
        /// Mode and Sandbox specify 'https://api.development.push.apple.com:443/3/device'. If using Token Authentication Mode and
        /// Production specify 'https://api.push.apple.com:443/3/device'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Owned)]
        public string Endpoint { get => this._endpoint; set => this._endpoint = value; }

        /// <summary>Backing field for <see cref="KeyId" /> property.</summary>
        private string _keyId;

        /// <summary>
        /// A 10-character key identifier (kid) key, obtained from your developer account. Specify if using Token Authentication Mode.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Owned)]
        public string KeyId { get => this._keyId; set => this._keyId = value; }

        /// <summary>Backing field for <see cref="Thumbprint" /> property.</summary>
        private string _thumbprint;

        /// <summary>
        /// The APNS certificate thumbprint. Specify if using Certificate Authentication Mode.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Owned)]
        public string Thumbprint { get => this._thumbprint; set => this._thumbprint = value; }

        /// <summary>Backing field for <see cref="Token" /> property.</summary>
        private string _token;

        /// <summary>
        /// Provider Authentication Token, obtained through your developer account. Specify if using Token Authentication Mode.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Owned)]
        public string Token { get => this._token; set => this._token = value; }

        /// <summary>Creates an new <see cref="ApnsCredentialProperties" /> instance.</summary>
        public ApnsCredentialProperties()
        {

        }
    }
    /// Description of a NotificationHub ApnsCredential. Note that there is no explicit switch between Certificate and Token Authentication
    /// Modes. The mode is determined based on the properties passed in.
    public partial interface IApnsCredentialProperties :
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.IJsonSerializable
    {
        /// <summary>The APNS certificate. Specify if using Certificate Authentication Mode.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The APNS certificate. Specify if using Certificate Authentication Mode.",
        SerializedName = @"apnsCertificate",
        PossibleTypes = new [] { typeof(string) })]
        string ApnsCertificate { get; set; }
        /// <summary>
        /// The issuer (iss) registered claim key. The value is a 10-character TeamId, obtained from your developer account. Specify
        /// if using Token Authentication Mode.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The issuer (iss) registered claim key. The value is a 10-character TeamId, obtained from your developer account. Specify if using Token Authentication Mode.",
        SerializedName = @"appId",
        PossibleTypes = new [] { typeof(string) })]
        string AppId { get; set; }
        /// <summary>
        /// The name of the application or BundleId. Specify if using Token Authentication Mode.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the application or BundleId. Specify if using Token Authentication Mode.",
        SerializedName = @"appName",
        PossibleTypes = new [] { typeof(string) })]
        string AppName { get; set; }
        /// <summary>The APNS certificate password if it exists.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The APNS certificate password if it exists.",
        SerializedName = @"certificateKey",
        PossibleTypes = new [] { typeof(string) })]
        string CertificateKey { get; set; }
        /// <summary>
        /// The APNS endpoint of this credential. If using Certificate Authentication Mode and Sandbox specify 'gateway.sandbox.push.apple.com'.
        /// If using Certificate Authentication Mode and Production specify 'gateway.push.apple.com'. If using Token Authentication
        /// Mode and Sandbox specify 'https://api.development.push.apple.com:443/3/device'. If using Token Authentication Mode and
        /// Production specify 'https://api.push.apple.com:443/3/device'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The APNS endpoint of this credential. If using Certificate Authentication Mode and Sandbox specify 'gateway.sandbox.push.apple.com'. If using Certificate Authentication Mode and Production specify 'gateway.push.apple.com'. If using Token Authentication Mode and Sandbox specify 'https://api.development.push.apple.com:443/3/device'. If using Token Authentication Mode and Production specify 'https://api.push.apple.com:443/3/device'.",
        SerializedName = @"endpoint",
        PossibleTypes = new [] { typeof(string) })]
        string Endpoint { get; set; }
        /// <summary>
        /// A 10-character key identifier (kid) key, obtained from your developer account. Specify if using Token Authentication Mode.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A 10-character key identifier (kid) key, obtained from your developer account. Specify if using Token Authentication Mode.",
        SerializedName = @"keyId",
        PossibleTypes = new [] { typeof(string) })]
        string KeyId { get; set; }
        /// <summary>
        /// The APNS certificate thumbprint. Specify if using Certificate Authentication Mode.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The APNS certificate thumbprint. Specify if using Certificate Authentication Mode.",
        SerializedName = @"thumbprint",
        PossibleTypes = new [] { typeof(string) })]
        string Thumbprint { get; set; }
        /// <summary>
        /// Provider Authentication Token, obtained through your developer account. Specify if using Token Authentication Mode.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Provider Authentication Token, obtained through your developer account. Specify if using Token Authentication Mode.",
        SerializedName = @"token",
        PossibleTypes = new [] { typeof(string) })]
        string Token { get; set; }

    }
    /// Description of a NotificationHub ApnsCredential. Note that there is no explicit switch between Certificate and Token Authentication
    /// Modes. The mode is determined based on the properties passed in.
    internal partial interface IApnsCredentialPropertiesInternal

    {
        /// <summary>The APNS certificate. Specify if using Certificate Authentication Mode.</summary>
        string ApnsCertificate { get; set; }
        /// <summary>
        /// The issuer (iss) registered claim key. The value is a 10-character TeamId, obtained from your developer account. Specify
        /// if using Token Authentication Mode.
        /// </summary>
        string AppId { get; set; }
        /// <summary>
        /// The name of the application or BundleId. Specify if using Token Authentication Mode.
        /// </summary>
        string AppName { get; set; }
        /// <summary>The APNS certificate password if it exists.</summary>
        string CertificateKey { get; set; }
        /// <summary>
        /// The APNS endpoint of this credential. If using Certificate Authentication Mode and Sandbox specify 'gateway.sandbox.push.apple.com'.
        /// If using Certificate Authentication Mode and Production specify 'gateway.push.apple.com'. If using Token Authentication
        /// Mode and Sandbox specify 'https://api.development.push.apple.com:443/3/device'. If using Token Authentication Mode and
        /// Production specify 'https://api.push.apple.com:443/3/device'.
        /// </summary>
        string Endpoint { get; set; }
        /// <summary>
        /// A 10-character key identifier (kid) key, obtained from your developer account. Specify if using Token Authentication Mode.
        /// </summary>
        string KeyId { get; set; }
        /// <summary>
        /// The APNS certificate thumbprint. Specify if using Certificate Authentication Mode.
        /// </summary>
        string Thumbprint { get; set; }
        /// <summary>
        /// Provider Authentication Token, obtained through your developer account. Specify if using Token Authentication Mode.
        /// </summary>
        string Token { get; set; }

    }
}