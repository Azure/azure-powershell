// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Extensions;

    /// <summary>
    /// Parameters supplied to the Check Name Availability for Namespace and NotificationHubs.
    /// </summary>
    public partial class CheckAvailabilityParameters :
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.ICheckAvailabilityParameters,
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.ICheckAvailabilityParametersInternal
    {

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Owned)]
        public string Id { get => this._id; }

        /// <summary>Backing field for <see cref="IsAvailiable" /> property.</summary>
        private bool? _isAvailiable;

        /// <summary>
        /// True if the name is available and can be used to create new Namespace/NotificationHub. Otherwise false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Owned)]
        public bool? IsAvailiable { get => this._isAvailiable; set => this._isAvailiable = value; }

        /// <summary>Backing field for <see cref="Location" /> property.</summary>
        private string _location;

        /// <summary>Resource location</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Owned)]
        public string Location { get => this._location; set => this._location = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.ICheckAvailabilityParametersInternal.Id { get => this._id; set { {_id = value;} } }

        /// <summary>Internal Acessors for Sku</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.ISku Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.ICheckAvailabilityParametersInternal.Sku { get => (this._sku = this._sku ?? new Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.Sku()); set { {_sku = value;} } }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.ICheckAvailabilityParametersInternal.Type { get => this._type; set { {_type = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Resource name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="Sku" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.ISku _sku;

        /// <summary>The sku of the created namespace</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.ISku Sku { get => (this._sku = this._sku ?? new Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.Sku()); set => this._sku = value; }

        /// <summary>The capacity of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inlined)]
        public int? SkuCapacity { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.ISkuInternal)Sku).Capacity; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.ISkuInternal)Sku).Capacity = value ?? default(int); }

        /// <summary>The Sku Family</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inlined)]
        public string SkuFamily { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.ISkuInternal)Sku).Family; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.ISkuInternal)Sku).Family = value ?? null; }

        /// <summary>Name of the notification hub sku</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Support.SkuName? SkuName { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.ISkuInternal)Sku).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.ISkuInternal)Sku).Name = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Support.SkuName)""); }

        /// <summary>The Sku size</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inlined)]
        public string SkuSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.ISkuInternal)Sku).Size; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.ISkuInternal)Sku).Size = value ?? null; }

        /// <summary>The tier of particular sku</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Inlined)]
        public string SkuTier { get => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.ISkuInternal)Sku).Tier; set => ((Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.ISkuInternal)Sku).Tier = value ?? null; }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.ICheckAvailabilityParametersTags _tag;

        /// <summary>Resource tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.ICheckAvailabilityParametersTags Tag { get => (this._tag = this._tag ?? new Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.CheckAvailabilityParametersTags()); set => this._tag = value; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>Resource type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Owned)]
        public string Type { get => this._type; }

        /// <summary>Creates an new <see cref="CheckAvailabilityParameters" /> instance.</summary>
        public CheckAvailabilityParameters()
        {

        }
    }
    /// Parameters supplied to the Check Name Availability for Namespace and NotificationHubs.
    public partial interface ICheckAvailabilityParameters :
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.IJsonSerializable
    {
        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Resource Id",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get;  }
        /// <summary>
        /// True if the name is available and can be used to create new Namespace/NotificationHub. Otherwise false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"True if the name is available and can be used to create new Namespace/NotificationHub. Otherwise false.",
        SerializedName = @"isAvailiable",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsAvailiable { get; set; }
        /// <summary>Resource location</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource location",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string Location { get; set; }
        /// <summary>Resource name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Resource name",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>The capacity of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The capacity of the resource",
        SerializedName = @"capacity",
        PossibleTypes = new [] { typeof(int) })]
        int? SkuCapacity { get; set; }
        /// <summary>The Sku Family</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Sku Family",
        SerializedName = @"family",
        PossibleTypes = new [] { typeof(string) })]
        string SkuFamily { get; set; }
        /// <summary>Name of the notification hub sku</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the notification hub sku",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Support.SkuName) })]
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Support.SkuName? SkuName { get; set; }
        /// <summary>The Sku size</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Sku size",
        SerializedName = @"size",
        PossibleTypes = new [] { typeof(string) })]
        string SkuSize { get; set; }
        /// <summary>The tier of particular sku</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The tier of particular sku",
        SerializedName = @"tier",
        PossibleTypes = new [] { typeof(string) })]
        string SkuTier { get; set; }
        /// <summary>Resource tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource tags",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.ICheckAvailabilityParametersTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.ICheckAvailabilityParametersTags Tag { get; set; }
        /// <summary>Resource type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Resource type",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get;  }

    }
    /// Parameters supplied to the Check Name Availability for Namespace and NotificationHubs.
    internal partial interface ICheckAvailabilityParametersInternal

    {
        /// <summary>Resource Id</summary>
        string Id { get; set; }
        /// <summary>
        /// True if the name is available and can be used to create new Namespace/NotificationHub. Otherwise false.
        /// </summary>
        bool? IsAvailiable { get; set; }
        /// <summary>Resource location</summary>
        string Location { get; set; }
        /// <summary>Resource name</summary>
        string Name { get; set; }
        /// <summary>The sku of the created namespace</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.ISku Sku { get; set; }
        /// <summary>The capacity of the resource</summary>
        int? SkuCapacity { get; set; }
        /// <summary>The Sku Family</summary>
        string SkuFamily { get; set; }
        /// <summary>Name of the notification hub sku</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Support.SkuName? SkuName { get; set; }
        /// <summary>The Sku size</summary>
        string SkuSize { get; set; }
        /// <summary>The tier of particular sku</summary>
        string SkuTier { get; set; }
        /// <summary>Resource tags</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.ICheckAvailabilityParametersTags Tag { get; set; }
        /// <summary>Resource type</summary>
        string Type { get; set; }

    }
}