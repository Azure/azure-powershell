// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Extensions;

    /// <summary>Namespace properties.</summary>
    public partial class NamespaceProperties :
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.INamespaceProperties,
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.INamespacePropertiesInternal
    {

        /// <summary>Backing field for <see cref="CreatedAt" /> property.</summary>
        private global::System.DateTime? _createdAt;

        /// <summary>The time the namespace was created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Owned)]
        public global::System.DateTime? CreatedAt { get => this._createdAt; set => this._createdAt = value; }

        /// <summary>Backing field for <see cref="Critical" /> property.</summary>
        private bool? _critical;

        /// <summary>Whether or not the namespace is set as Critical.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Owned)]
        public bool? Critical { get => this._critical; set => this._critical = value; }

        /// <summary>Backing field for <see cref="DataCenter" /> property.</summary>
        private string _dataCenter;

        /// <summary>Data center for the namespace</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Owned)]
        public string DataCenter { get => this._dataCenter; set => this._dataCenter = value; }

        /// <summary>Backing field for <see cref="Enabled" /> property.</summary>
        private bool? _enabled;

        /// <summary>Whether or not the namespace is currently enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Owned)]
        public bool? Enabled { get => this._enabled; set => this._enabled = value; }

        /// <summary>Backing field for <see cref="MetricId" /> property.</summary>
        private string _metricId;

        /// <summary>Identifier for Azure Insights metrics</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Owned)]
        public string MetricId { get => this._metricId; }

        /// <summary>Internal Acessors for MetricId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.INamespacePropertiesInternal.MetricId { get => this._metricId; set { {_metricId = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>The name of the namespace.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="NamespaceType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Support.NamespaceType? _namespaceType;

        /// <summary>The namespace type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Support.NamespaceType? NamespaceType { get => this._namespaceType; set => this._namespaceType = value; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>Provisioning state of the Namespace.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; set => this._provisioningState = value; }

        /// <summary>Backing field for <see cref="Region" /> property.</summary>
        private string _region;

        /// <summary>
        /// Specifies the targeted region in which the namespace should be created. It can be any of the following values: Australia
        /// East, Australia Southeast, Central US, East US, East US 2, West US, North Central US, South Central US, East Asia, Southeast
        /// Asia, Brazil South, Japan East, Japan West, North Europe, West Europe
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Owned)]
        public string Region { get => this._region; set => this._region = value; }

        /// <summary>Backing field for <see cref="ScaleUnit" /> property.</summary>
        private string _scaleUnit;

        /// <summary>ScaleUnit where the namespace gets created</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Owned)]
        public string ScaleUnit { get => this._scaleUnit; set => this._scaleUnit = value; }

        /// <summary>Backing field for <see cref="ServiceBusEndpoint" /> property.</summary>
        private string _serviceBusEndpoint;

        /// <summary>Endpoint you can use to perform NotificationHub operations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Owned)]
        public string ServiceBusEndpoint { get => this._serviceBusEndpoint; set => this._serviceBusEndpoint = value; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private string _status;

        /// <summary>
        /// Status of the namespace. It can be any of these values:1 = Created/Active2 = Creating3 = Suspended4 = Deleting
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Owned)]
        public string Status { get => this._status; set => this._status = value; }

        /// <summary>Backing field for <see cref="SubscriptionId" /> property.</summary>
        private string _subscriptionId;

        /// <summary>The Id of the Azure subscription associated with the namespace.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Owned)]
        public string SubscriptionId { get => this._subscriptionId; set => this._subscriptionId = value; }

        /// <summary>Backing field for <see cref="UpdatedAt" /> property.</summary>
        private global::System.DateTime? _updatedAt;

        /// <summary>The time the namespace was updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.PropertyOrigin.Owned)]
        public global::System.DateTime? UpdatedAt { get => this._updatedAt; set => this._updatedAt = value; }

        /// <summary>Creates an new <see cref="NamespaceProperties" /> instance.</summary>
        public NamespaceProperties()
        {

        }
    }
    /// Namespace properties.
    public partial interface INamespaceProperties :
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.IJsonSerializable
    {
        /// <summary>The time the namespace was created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time the namespace was created.",
        SerializedName = @"createdAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CreatedAt { get; set; }
        /// <summary>Whether or not the namespace is set as Critical.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether or not the namespace is set as Critical.",
        SerializedName = @"critical",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Critical { get; set; }
        /// <summary>Data center for the namespace</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Data center for the namespace",
        SerializedName = @"dataCenter",
        PossibleTypes = new [] { typeof(string) })]
        string DataCenter { get; set; }
        /// <summary>Whether or not the namespace is currently enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether or not the namespace is currently enabled.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Enabled { get; set; }
        /// <summary>Identifier for Azure Insights metrics</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Identifier for Azure Insights metrics",
        SerializedName = @"metricId",
        PossibleTypes = new [] { typeof(string) })]
        string MetricId { get;  }
        /// <summary>The name of the namespace.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the namespace.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>The namespace type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The namespace type.",
        SerializedName = @"namespaceType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Support.NamespaceType) })]
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Support.NamespaceType? NamespaceType { get; set; }
        /// <summary>Provisioning state of the Namespace.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Provisioning state of the Namespace.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get; set; }
        /// <summary>
        /// Specifies the targeted region in which the namespace should be created. It can be any of the following values: Australia
        /// East, Australia Southeast, Central US, East US, East US 2, West US, North Central US, South Central US, East Asia, Southeast
        /// Asia, Brazil South, Japan East, Japan West, North Europe, West Europe
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the targeted region in which the namespace should be created. It can be any of the following values: Australia East, Australia Southeast, Central US, East US, East US 2, West US, North Central US, South Central US, East Asia, Southeast Asia, Brazil South, Japan East, Japan West, North Europe, West Europe",
        SerializedName = @"region",
        PossibleTypes = new [] { typeof(string) })]
        string Region { get; set; }
        /// <summary>ScaleUnit where the namespace gets created</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ScaleUnit where the namespace gets created",
        SerializedName = @"scaleUnit",
        PossibleTypes = new [] { typeof(string) })]
        string ScaleUnit { get; set; }
        /// <summary>Endpoint you can use to perform NotificationHub operations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Endpoint you can use to perform NotificationHub operations.",
        SerializedName = @"serviceBusEndpoint",
        PossibleTypes = new [] { typeof(string) })]
        string ServiceBusEndpoint { get; set; }
        /// <summary>
        /// Status of the namespace. It can be any of these values:1 = Created/Active2 = Creating3 = Suspended4 = Deleting
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Status of the namespace. It can be any of these values:1 = Created/Active2 = Creating3 = Suspended4 = Deleting",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(string) })]
        string Status { get; set; }
        /// <summary>The Id of the Azure subscription associated with the namespace.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Id of the Azure subscription associated with the namespace.",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionId { get; set; }
        /// <summary>The time the namespace was updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time the namespace was updated.",
        SerializedName = @"updatedAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? UpdatedAt { get; set; }

    }
    /// Namespace properties.
    internal partial interface INamespacePropertiesInternal

    {
        /// <summary>The time the namespace was created.</summary>
        global::System.DateTime? CreatedAt { get; set; }
        /// <summary>Whether or not the namespace is set as Critical.</summary>
        bool? Critical { get; set; }
        /// <summary>Data center for the namespace</summary>
        string DataCenter { get; set; }
        /// <summary>Whether or not the namespace is currently enabled.</summary>
        bool? Enabled { get; set; }
        /// <summary>Identifier for Azure Insights metrics</summary>
        string MetricId { get; set; }
        /// <summary>The name of the namespace.</summary>
        string Name { get; set; }
        /// <summary>The namespace type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Support.NamespaceType? NamespaceType { get; set; }
        /// <summary>Provisioning state of the Namespace.</summary>
        string ProvisioningState { get; set; }
        /// <summary>
        /// Specifies the targeted region in which the namespace should be created. It can be any of the following values: Australia
        /// East, Australia Southeast, Central US, East US, East US 2, West US, North Central US, South Central US, East Asia, Southeast
        /// Asia, Brazil South, Japan East, Japan West, North Europe, West Europe
        /// </summary>
        string Region { get; set; }
        /// <summary>ScaleUnit where the namespace gets created</summary>
        string ScaleUnit { get; set; }
        /// <summary>Endpoint you can use to perform NotificationHub operations.</summary>
        string ServiceBusEndpoint { get; set; }
        /// <summary>
        /// Status of the namespace. It can be any of these values:1 = Created/Active2 = Creating3 = Suspended4 = Deleting
        /// </summary>
        string Status { get; set; }
        /// <summary>The Id of the Azure subscription associated with the namespace.</summary>
        string SubscriptionId { get; set; }
        /// <summary>The time the namespace was updated.</summary>
        global::System.DateTime? UpdatedAt { get; set; }

    }
}