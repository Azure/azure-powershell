
# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Patch a NotificationHub in a namespace.
.Description
Patch a NotificationHub in a namespace.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.INotificationHubPatchParameters
.Inputs
Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.INotificationHubsIdentity
.Outputs
Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.INotificationHubResource
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

AUTHORIZATIONRULE <ISharedAccessAuthorizationRuleProperties[]>: The AuthorizationRules of the created NotificationHub
  [Rights <AccessRights[]>]: The rights associated with the rule.

INPUTOBJECT <INotificationHubsIdentity>: Identity Parameter
  [AuthorizationRuleName <String>]: Authorization Rule Name.
  [Id <String>]: Resource identity path
  [NamespaceName <String>]: The namespace name.
  [NotificationHubName <String>]: The notification hub name.
  [ResourceGroupName <String>]: The name of the resource group.
  [SubscriptionId <String>]: Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.

PARAMETER <INotificationHubPatchParameters>: Parameters supplied to the patch NotificationHub operation.
  [Location <String>]: Resource location
  [SkuCapacity <Int32?>]: The capacity of the resource
  [SkuFamily <String>]: The Sku Family
  [SkuName <SkuName?>]: Name of the notification hub sku
  [SkuSize <String>]: The Sku size
  [SkuTier <String>]: The tier of particular sku
  [Tag <IResourceTags>]: Resource tags
    [(Any) <String>]: This indicates any property can be added to this object.
  [ApnsCertificate <String>]: The APNS certificate. Specify if using Certificate Authentication Mode.
  [ApnsCredentialPropertiesCertificateKey <String>]: The APNS certificate password if it exists.
  [ApnsCredentialPropertiesThumbprint <String>]: The APNS certificate thumbprint. Specify if using Certificate Authentication Mode.
  [AppId <String>]: The issuer (iss) registered claim key. The value is a 10-character TeamId, obtained from your developer account. Specify if using Token Authentication Mode.
  [AppName <String>]: The name of the application or BundleId. Specify if using Token Authentication Mode.
  [AuthTokenUrl <String>]: The URL of the authorization token.
  [AuthorizationRule <ISharedAccessAuthorizationRuleProperties[]>]: The AuthorizationRules of the created NotificationHub
    [Rights <AccessRights[]>]: The rights associated with the rule.
  [BaiduApiKey <String>]: Baidu Api Key.
  [BaiduEndPoint <String>]: Baidu Endpoint.
  [BaiduSecretKey <String>]: Baidu Secret Key
  [ClientId <String>]: The client identifier.
  [ClientSecret <String>]: The credential secret access key.
  [Endpoint <String>]: The APNS endpoint of this credential. If using Certificate Authentication Mode and Sandbox specify 'gateway.sandbox.push.apple.com'. If using Certificate Authentication Mode and Production specify 'gateway.push.apple.com'. If using Token Authentication Mode and Sandbox specify 'https://api.development.push.apple.com:443/3/device'. If using Token Authentication Mode and Production specify 'https://api.push.apple.com:443/3/device'.
  [GcmEndpoint <String>]: The FCM legacy endpoint. Default value is 'https://fcm.googleapis.com/fcm/send'
  [GoogleApiKey <String>]: The Google API key.
  [KeyId <String>]: A 10-character key identifier (kid) key, obtained from your developer account. Specify if using Token Authentication Mode.
  [MpnsCertificate <String>]: The MPNS certificate.
  [MpnsCredentialPropertiesCertificateKey <String>]: The certificate key for this credential.
  [MpnsCredentialPropertiesThumbprint <String>]: The MPNS certificate Thumbprint
  [PackageSid <String>]: The package ID for this credential.
  [PropertiesName <String>]: The NotificationHub name.
  [RegistrationTtl <String>]: The RegistrationTtl of the created NotificationHub
  [SecretKey <String>]: The secret key.
  [Token <String>]: Provider Authentication Token, obtained through your developer account. Specify if using Token Authentication Mode.
  [WindowsLiveEndpoint <String>]: The Windows Live endpoint.
.Link
https://docs.microsoft.com/en-us/powershell/module/az.notificationhubs/update-aznotificationhubsnotificationhub
#>
function Update-AzNotificationHubsNotificationHub {
[OutputType([Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.INotificationHubResource])]
[CmdletBinding(DefaultParameterSetName='PatchExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Patch', Mandatory)]
    [Parameter(ParameterSetName='PatchExpanded', Mandatory)]
    [Alias('NotificationHubName')]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Category('Path')]
    [System.String]
    # The notification hub name.
    ${Name},

    [Parameter(ParameterSetName='Patch', Mandatory)]
    [Parameter(ParameterSetName='PatchExpanded', Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Category('Path')]
    [System.String]
    # The namespace name.
    ${NamespaceName},

    [Parameter(ParameterSetName='Patch', Mandatory)]
    [Parameter(ParameterSetName='PatchExpanded', Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Category('Path')]
    [System.String]
    # The name of the resource group.
    ${ResourceGroupName},

    [Parameter(ParameterSetName='Patch')]
    [Parameter(ParameterSetName='PatchExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Category('Path')]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.DefaultInfo(Script='(Get-AzContext).Subscription.Id')]
    [System.String]
    # Gets subscription credentials which uniquely identify Microsoft Azure subscription.
    # The subscription ID forms part of the URI for every service call.
    ${SubscriptionId},

    [Parameter(ParameterSetName='PatchViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='PatchViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Category('Path')]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.INotificationHubsIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Patch', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='PatchViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.INotificationHubPatchParameters]
    # Parameters supplied to the patch NotificationHub operation.
    # To construct, see NOTES section for PARAMETER properties and create a hash table.
    ${Parameter},

    [Parameter(ParameterSetName='PatchExpanded')]
    [Parameter(ParameterSetName='PatchViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Category('Body')]
    [System.String]
    # The APNS certificate.
    # Specify if using Certificate Authentication Mode.
    ${ApnsCertificate},

    [Parameter(ParameterSetName='PatchExpanded')]
    [Parameter(ParameterSetName='PatchViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Category('Body')]
    [System.String]
    # The APNS certificate password if it exists.
    ${ApnsCredentialPropertiesCertificateKey},

    [Parameter(ParameterSetName='PatchExpanded')]
    [Parameter(ParameterSetName='PatchViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Category('Body')]
    [System.String]
    # The APNS certificate thumbprint.
    # Specify if using Certificate Authentication Mode.
    ${ApnsCredentialPropertiesThumbprint},

    [Parameter(ParameterSetName='PatchExpanded')]
    [Parameter(ParameterSetName='PatchViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Category('Body')]
    [System.String]
    # The issuer (iss) registered claim key.
    # The value is a 10-character TeamId, obtained from your developer account.
    # Specify if using Token Authentication Mode.
    ${AppId},

    [Parameter(ParameterSetName='PatchExpanded')]
    [Parameter(ParameterSetName='PatchViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Category('Body')]
    [System.String]
    # The name of the application or BundleId.
    # Specify if using Token Authentication Mode.
    ${AppName},

    [Parameter(ParameterSetName='PatchExpanded')]
    [Parameter(ParameterSetName='PatchViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Category('Body')]
    [System.String]
    # The URL of the authorization token.
    ${AuthTokenUrl},

    [Parameter(ParameterSetName='PatchExpanded')]
    [Parameter(ParameterSetName='PatchViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.ISharedAccessAuthorizationRuleProperties[]]
    # The AuthorizationRules of the created NotificationHub
    # To construct, see NOTES section for AUTHORIZATIONRULE properties and create a hash table.
    ${AuthorizationRule},

    [Parameter(ParameterSetName='PatchExpanded')]
    [Parameter(ParameterSetName='PatchViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Category('Body')]
    [System.String]
    # Baidu Api Key.
    ${BaiduApiKey},

    [Parameter(ParameterSetName='PatchExpanded')]
    [Parameter(ParameterSetName='PatchViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Category('Body')]
    [System.String]
    # Baidu Endpoint.
    ${BaiduEndPoint},

    [Parameter(ParameterSetName='PatchExpanded')]
    [Parameter(ParameterSetName='PatchViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Category('Body')]
    [System.String]
    # Baidu Secret Key
    ${BaiduSecretKey},

    [Parameter(ParameterSetName='PatchExpanded')]
    [Parameter(ParameterSetName='PatchViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Category('Body')]
    [System.String]
    # The client identifier.
    ${ClientId},

    [Parameter(ParameterSetName='PatchExpanded')]
    [Parameter(ParameterSetName='PatchViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Category('Body')]
    [System.String]
    # The credential secret access key.
    ${ClientSecret},

    [Parameter(ParameterSetName='PatchExpanded')]
    [Parameter(ParameterSetName='PatchViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Category('Body')]
    [System.String]
    # The APNS endpoint of this credential.
    # If using Certificate Authentication Mode and Sandbox specify 'gateway.sandbox.push.apple.com'.
    # If using Certificate Authentication Mode and Production specify 'gateway.push.apple.com'.
    # If using Token Authentication Mode and Sandbox specify 'https://api.development.push.apple.com:443/3/device'.
    # If using Token Authentication Mode and Production specify 'https://api.push.apple.com:443/3/device'.
    ${Endpoint},

    [Parameter(ParameterSetName='PatchExpanded')]
    [Parameter(ParameterSetName='PatchViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Category('Body')]
    [System.String]
    # The FCM legacy endpoint.
    # Default value is 'https://fcm.googleapis.com/fcm/send'
    ${GcmEndpoint},

    [Parameter(ParameterSetName='PatchExpanded')]
    [Parameter(ParameterSetName='PatchViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Category('Body')]
    [System.String]
    # The Google API key.
    ${GoogleApiKey},

    [Parameter(ParameterSetName='PatchExpanded')]
    [Parameter(ParameterSetName='PatchViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Category('Body')]
    [System.String]
    # A 10-character key identifier (kid) key, obtained from your developer account.
    # Specify if using Token Authentication Mode.
    ${KeyId},

    [Parameter(ParameterSetName='PatchExpanded')]
    [Parameter(ParameterSetName='PatchViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Category('Body')]
    [System.String]
    # Resource location
    ${Location},

    [Parameter(ParameterSetName='PatchExpanded')]
    [Parameter(ParameterSetName='PatchViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Category('Body')]
    [System.String]
    # The MPNS certificate.
    ${MpnsCertificate},

    [Parameter(ParameterSetName='PatchExpanded')]
    [Parameter(ParameterSetName='PatchViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Category('Body')]
    [System.String]
    # The certificate key for this credential.
    ${MpnsCredentialPropertiesCertificateKey},

    [Parameter(ParameterSetName='PatchExpanded')]
    [Parameter(ParameterSetName='PatchViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Category('Body')]
    [System.String]
    # The MPNS certificate Thumbprint
    ${MpnsCredentialPropertiesThumbprint},

    [Parameter(ParameterSetName='PatchExpanded')]
    [Parameter(ParameterSetName='PatchViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Category('Body')]
    [System.String]
    # The package ID for this credential.
    ${PackageSid},

    [Parameter(ParameterSetName='PatchExpanded')]
    [Parameter(ParameterSetName='PatchViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Category('Body')]
    [System.String]
    # The NotificationHub name.
    ${PropertiesName},

    [Parameter(ParameterSetName='PatchExpanded')]
    [Parameter(ParameterSetName='PatchViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Category('Body')]
    [System.String]
    # The RegistrationTtl of the created NotificationHub
    ${RegistrationTtl},

    [Parameter(ParameterSetName='PatchExpanded')]
    [Parameter(ParameterSetName='PatchViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Category('Body')]
    [System.String]
    # The secret key.
    ${SecretKey},

    [Parameter(ParameterSetName='PatchExpanded')]
    [Parameter(ParameterSetName='PatchViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Category('Body')]
    [System.Int32]
    # The capacity of the resource
    ${SkuCapacity},

    [Parameter(ParameterSetName='PatchExpanded')]
    [Parameter(ParameterSetName='PatchViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Category('Body')]
    [System.String]
    # The Sku Family
    ${SkuFamily},

    [Parameter(ParameterSetName='PatchExpanded')]
    [Parameter(ParameterSetName='PatchViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Support.SkuName])]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Support.SkuName]
    # Name of the notification hub sku
    ${SkuName},

    [Parameter(ParameterSetName='PatchExpanded')]
    [Parameter(ParameterSetName='PatchViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Category('Body')]
    [System.String]
    # The Sku size
    ${SkuSize},

    [Parameter(ParameterSetName='PatchExpanded')]
    [Parameter(ParameterSetName='PatchViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Category('Body')]
    [System.String]
    # The tier of particular sku
    ${SkuTier},

    [Parameter(ParameterSetName='PatchExpanded')]
    [Parameter(ParameterSetName='PatchViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.Info(PossibleTypes=([Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Models.Api20170401.IResourceTags]))]
    [System.Collections.Hashtable]
    # Resource tags
    ${Tag},

    [Parameter(ParameterSetName='PatchExpanded')]
    [Parameter(ParameterSetName='PatchViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Category('Body')]
    [System.String]
    # Provider Authentication Token, obtained through your developer account.
    # Specify if using Token Authentication Mode.
    ${Token},

    [Parameter(ParameterSetName='PatchExpanded')]
    [Parameter(ParameterSetName='PatchViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Category('Body')]
    [System.String]
    # The Windows Live endpoint.
    ${WindowsLiveEndpoint},

    [Parameter()]
    [Alias('AzureRMContext', 'AzureCredential')]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Category('Azure')]
    [System.Management.Automation.PSObject]
    # The credentials, account, tenant, and subscription used for communication with Azure.
    ${DefaultProfile},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Category('Runtime')]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Category('Runtime')]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        if ($null -eq [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PowerShellVersion) {
            [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PowerShellVersion = $Host.Version.ToString()
        }         
        $preTelemetryId = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId
        if ($preTelemetryId -eq '') {
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId =(New-Guid).ToString()
            [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.module]::Instance.Telemetry.Invoke('Create', $MyInvocation, $parameterSet, $PSCmdlet)
        } else {
            $internalCalledCmdlets = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets
            if ($internalCalledCmdlets -eq '') {
                [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets = $MyInvocation.MyCommand.Name
            } else {
                [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets += ',' + $MyInvocation.MyCommand.Name
            }
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = 'internal'
        }

        $mapping = @{
            Patch = 'Az.NotificationHubs.private\Update-AzNotificationHubsNotificationHub_Patch';
            PatchExpanded = 'Az.NotificationHubs.private\Update-AzNotificationHubsNotificationHub_PatchExpanded';
            PatchViaIdentity = 'Az.NotificationHubs.private\Update-AzNotificationHubsNotificationHub_PatchViaIdentity';
            PatchViaIdentityExpanded = 'Az.NotificationHubs.private\Update-AzNotificationHubsNotificationHub_PatchViaIdentityExpanded';
        }
        if (('Patch', 'PatchExpanded') -contains $parameterSet -and -not $PSBoundParameters.ContainsKey('SubscriptionId')) {
            $PSBoundParameters['SubscriptionId'] = (Get-AzContext).Subscription.Id
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }

    finally {
        $backupTelemetryId = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId
        $backupInternalCalledCmdlets = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
    }

}
end {
    try {
        $steppablePipeline.End()

        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = $backupTelemetryId
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets = $backupInternalCalledCmdlets
        if ($preTelemetryId -eq '') {
            [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubs.module]::Instance.Telemetry.Invoke('Send', $MyInvocation, $parameterSet, $PSCmdlet)
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        }
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = $preTelemetryId

    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }
} 
}
