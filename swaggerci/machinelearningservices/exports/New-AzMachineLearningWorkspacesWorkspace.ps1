
# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Creates or updates a workspace with the specified parameters.
.Description
Creates or updates a workspace with the specified parameters.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Outputs
Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IWorkspace
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

SHAREDPRIVATELINKRESOURCE <ISharedPrivateLinkResource[]>: The list of shared private link resources in this workspace.
  [GroupId <String>]: The private link resource group id.
  [Name <String>]: Unique name of the private link.
  [PrivateLinkResourceId <String>]: The resource id that private link links to.
  [RequestMessage <String>]: Request message.
  [Status <PrivateEndpointServiceConnectionStatus?>]: Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
.Link
https://docs.microsoft.com/en-us/powershell/module/az.machinelearningworkspaces/new-azmachinelearningworkspacesworkspace
#>
function New-AzMachineLearningWorkspacesWorkspace {
[OutputType([Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IWorkspace])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(Mandatory)]
    [Alias('WorkspaceName')]
    [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Category('Path')]
    [System.String]
    # Name of Azure Machine Learning workspace.
    ${Name},

    [Parameter(Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Category('Path')]
    [System.String]
    # The name of the resource group.
    # The name is case insensitive.
    ${ResourceGroupName},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Category('Path')]
    [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Runtime.DefaultInfo(Script='(Get-AzContext).Subscription.Id')]
    [System.String]
    # The ID of the target subscription.
    ${SubscriptionId},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # The flag to indicate whether to allow public access when behind VNet.
    ${AllowPublicAccessWhenBehindVnet},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Category('Body')]
    [System.String]
    # ARM id of the application insights associated with this workspace.
    # This cannot be changed once the workspace has been created
    ${ApplicationInsight},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Category('Body')]
    [System.String]
    # ARM id of the container registry associated with this workspace.
    # This cannot be changed once the workspace has been created
    ${ContainerRegistry},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Category('Body')]
    [System.Int32]
    # The throughput of the collections in cosmosdb database
    ${CosmoDbCollectionsThroughput},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Category('Body')]
    [System.String]
    # The description of this workspace.
    ${Description},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Category('Body')]
    [System.String]
    # Url for the discovery service to identify regional endpoints for machine learning experimentation services
    ${DiscoveryUrl},

    [Parameter()]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Support.EncryptionStatus])]
    [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Support.EncryptionStatus]
    # Indicates whether or not the encryption is enabled for the workspace.
    ${EncryptionStatus},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Category('Body')]
    [System.String]
    # The friendly name for this workspace.
    # This name in mutable
    ${FriendlyName},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # The flag to signal HBI data in the workspace and reduce diagnostic data collected by the service
    ${HbiWorkspace},

    [Parameter()]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Support.ResourceIdentityType])]
    [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Support.ResourceIdentityType]
    # The identity type.
    ${IdentityType},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Runtime.Info(PossibleTypes=([Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IUserAssignedIdentities]))]
    [System.Collections.Hashtable]
    # The user assigned identities associated with the resource.
    ${IdentityUserAssignedIdentity},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Category('Body')]
    [System.String]
    # The compute name for image build
    ${ImageBuildCompute},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Category('Body')]
    [System.String]
    # ARM id of the key vault associated with this workspace.
    # This cannot be changed once the workspace has been created
    ${KeyVault},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Category('Body')]
    [System.String]
    # For future use - The client id of the identity which will be used to access key vault.
    ${KeyVaultPropertyIdentityClientId},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Category('Body')]
    [System.String]
    # Key vault uri to access the encryption key.
    ${KeyVaultPropertyKeyIdentifier},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Category('Body')]
    [System.String]
    # The ArmId of the keyVault where the customer owned encryption key is present.
    ${KeyVaultPropertyKeyVaultArmId},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Category('Body')]
    [System.String]
    # Specifies the location of the resource.
    ${Location},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Category('Body')]
    [System.String]
    # The user assigned identity resource id that represents the workspace identity.
    ${PrimaryUserAssignedIdentity},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Category('Body')]
    [System.String]
    # The ArmId of the user assigned identity that will be used to access the customer managed key vault
    ${PropertiesEncryptionIdentityUserAssignedIdentity},

    [Parameter()]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Support.PublicNetworkAccess])]
    [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Support.PublicNetworkAccess]
    # Whether requests from Public Network are allowed.
    ${PublicNetworkAccess},

    [Parameter()]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.ISharedPrivateLinkResource[]]
    # The list of shared private link resources in this workspace.
    # To construct, see NOTES section for SHAREDPRIVATELINKRESOURCE properties and create a hash table.
    ${SharedPrivateLinkResource},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Category('Body')]
    [System.String]
    # Name of the sku
    ${SkuName},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Category('Body')]
    [System.String]
    # Tier of the sku like Basic or Enterprise
    ${SkuTier},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Category('Body')]
    [System.String]
    # ARM id of the storage account associated with this workspace.
    # This cannot be changed once the workspace has been created
    ${StorageAccount},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Runtime.Info(PossibleTypes=([Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IWorkspaceTags]))]
    [System.Collections.Hashtable]
    # Contains resource tags defined as key/value pairs.
    ${Tag},

    [Parameter()]
    [Alias('AzureRMContext', 'AzureCredential')]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Category('Azure')]
    [System.Management.Automation.PSObject]
    # The credentials, account, tenant, and subscription used for communication with Azure.
    ${DefaultProfile},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Run the command as a job
    ${AsJob},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Category('Runtime')]
    [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Category('Runtime')]
    [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Run the command asynchronously
    ${NoWait},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        if ($null -eq [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PowerShellVersion) {
            [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PowerShellVersion = $Host.Runspace.Version.ToString()
        }         
        $preTelemetryId = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId
        if ($preTelemetryId -eq '') {
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId =(New-Guid).ToString()
            [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.module]::Instance.Telemetry.Invoke('Create', $MyInvocation, $parameterSet, $PSCmdlet)
        } else {
            $internalCalledCmdlets = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets
            if ($internalCalledCmdlets -eq '') {
                [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets = $MyInvocation.MyCommand.Name
            } else {
                [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets += ',' + $MyInvocation.MyCommand.Name
            }
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = 'internal'
        }

        $mapping = @{
            CreateExpanded = 'Az.MachineLearningWorkspaces.private\New-AzMachineLearningWorkspacesWorkspace_CreateExpanded';
        }
        if (('CreateExpanded') -contains $parameterSet -and -not $PSBoundParameters.ContainsKey('SubscriptionId')) {
            $PSBoundParameters['SubscriptionId'] = (Get-AzContext).Subscription.Id
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }

    finally {
        $backupTelemetryId = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId
        $backupInternalCalledCmdlets = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
    }

}
end {
    try {
        $steppablePipeline.End()

        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = $backupTelemetryId
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets = $backupInternalCalledCmdlets
        if ($preTelemetryId -eq '') {
            [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.module]::Instance.Telemetry.Invoke('Send', $MyInvocation, $parameterSet, $PSCmdlet)
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        }
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = $preTelemetryId

    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }
} 
}
