// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Runtime.Extensions;

    /// <summary>A Machine Learning compute based on AKS.</summary>
    public partial class Aks :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAks,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksInternal,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.ICompute"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.ICompute __compute = new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.Compute();

        /// <summary>Number of agents</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.PropertyOrigin.Inlined)]
        public int? AgentCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)Property).AgentCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)Property).AgentCount = value ?? default(int); }

        /// <summary>Agent virtual machine size</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.PropertyOrigin.Inlined)]
        public string AgentVMSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)Property).AgentVMSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)Property).AgentVMSize = value ?? null; }

        /// <summary>
        /// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified
        /// in serviceCidr.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.PropertyOrigin.Inlined)]
        public string AkNetworkingConfigurationDnsServiceIP { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)Property).AkNetworkingConfigurationDnsServiceIP; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)Property).AkNetworkingConfigurationDnsServiceIP = value ?? null; }

        /// <summary>
        /// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes
        /// service address range.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.PropertyOrigin.Inlined)]
        public string AkNetworkingConfigurationDockerBridgeCidr { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)Property).AkNetworkingConfigurationDockerBridgeCidr; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)Property).AkNetworkingConfigurationDockerBridgeCidr = value ?? null; }

        /// <summary>
        /// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.PropertyOrigin.Inlined)]
        public string AkNetworkingConfigurationServiceCidr { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)Property).AkNetworkingConfigurationServiceCidr; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)Property).AkNetworkingConfigurationServiceCidr = value ?? null; }

        /// <summary>Virtual network subnet resource ID the compute nodes belong to</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.PropertyOrigin.Inlined)]
        public string AkNetworkingConfigurationSubnetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)Property).AkNetworkingConfigurationSubnetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)Property).AkNetworkingConfigurationSubnetId = value ?? null; }

        /// <summary>Cluster full qualified domain name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.PropertyOrigin.Inlined)]
        public string ClusterFqdn { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)Property).ClusterFqdn; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)Property).ClusterFqdn = value ?? null; }

        /// <summary>Intended usage of the cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Support.ClusterPurpose? ClusterPurpose { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)Property).ClusterPurpose; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)Property).ClusterPurpose = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Support.ClusterPurpose)""); }

        /// <summary>The time at which the compute was created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.PropertyOrigin.Inherited)]
        public global::System.DateTime? CreatedOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IComputeInternal)__compute).CreatedOn; }

        /// <summary>The description of the Machine Learning compute.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.PropertyOrigin.Inherited)]
        public string Description { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IComputeInternal)__compute).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IComputeInternal)__compute).Description = value ?? null; }

        /// <summary>
        /// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.PropertyOrigin.Inherited)]
        public bool? DisableLocalAuth { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IComputeInternal)__compute).DisableLocalAuth; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IComputeInternal)__compute).DisableLocalAuth = value ?? default(bool); }

        /// <summary>
        /// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned
        /// it if false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.PropertyOrigin.Inherited)]
        public bool? IsAttachedCompute { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IComputeInternal)__compute).IsAttachedCompute; }

        /// <summary>Load Balancer Subnet</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.PropertyOrigin.Inlined)]
        public string LoadBalancerSubnet { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)Property).LoadBalancerSubnet; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)Property).LoadBalancerSubnet = value ?? null; }

        /// <summary>Load Balancer Type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Support.LoadBalancerType? LoadBalancerType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)Property).LoadBalancerType; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)Property).LoadBalancerType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Support.LoadBalancerType)""); }

        /// <summary>Location for the underlying compute</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IComputeInternal)__compute).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IComputeInternal)__compute).Location = value ?? null; }

        /// <summary>Internal Acessors for NetworkingConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksNetworkingConfiguration Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksInternal.NetworkingConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)Property).AksNetworkingConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)Property).AksNetworkingConfiguration = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksProperties Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.AksProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for SslConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.ISslConfiguration Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksInternal.SslConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)Property).SslConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)Property).SslConfiguration = value; }

        /// <summary>Internal Acessors for SystemService</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.ISystemService[] Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksInternal.SystemService { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)Property).SystemService; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)Property).SystemService = value; }

        /// <summary>Internal Acessors for CreatedOn</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IComputeInternal.CreatedOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IComputeInternal)__compute).CreatedOn; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IComputeInternal)__compute).CreatedOn = value; }

        /// <summary>Internal Acessors for IsAttachedCompute</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IComputeInternal.IsAttachedCompute { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IComputeInternal)__compute).IsAttachedCompute; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IComputeInternal)__compute).IsAttachedCompute = value; }

        /// <summary>Internal Acessors for ModifiedOn</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IComputeInternal.ModifiedOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IComputeInternal)__compute).ModifiedOn; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IComputeInternal)__compute).ModifiedOn = value; }

        /// <summary>Internal Acessors for ProvisioningError</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20.IErrorResponse[] Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IComputeInternal.ProvisioningError { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IComputeInternal)__compute).ProvisioningError; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IComputeInternal)__compute).ProvisioningError = value; }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IComputeInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IComputeInternal)__compute).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IComputeInternal)__compute).ProvisioningState = value; }

        /// <summary>The time at which the compute was last modified.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.PropertyOrigin.Inherited)]
        public global::System.DateTime? ModifiedOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IComputeInternal)__compute).ModifiedOn; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksProperties _property;

        /// <summary>AKS properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.AksProperties()); set => this._property = value; }

        /// <summary>Errors during provisioning</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20.IErrorResponse[] ProvisioningError { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IComputeInternal)__compute).ProvisioningError; }

        /// <summary>
        /// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Support.ProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IComputeInternal)__compute).ProvisioningState; }

        /// <summary>ARM resource id of the underlying compute</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.PropertyOrigin.Inherited)]
        public string ResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IComputeInternal)__compute).ResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IComputeInternal)__compute).ResourceId = value ?? null; }

        /// <summary>Cert data</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.PropertyOrigin.Inlined)]
        public string SslConfigurationCert { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)Property).SslConfigurationCert; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)Property).SslConfigurationCert = value ?? null; }

        /// <summary>CNAME of the cert</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.PropertyOrigin.Inlined)]
        public string SslConfigurationCname { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)Property).SslConfigurationCname; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)Property).SslConfigurationCname = value ?? null; }

        /// <summary>Key data</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.PropertyOrigin.Inlined)]
        public string SslConfigurationKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)Property).SslConfigurationKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)Property).SslConfigurationKey = value ?? null; }

        /// <summary>Leaf domain label of public endpoint</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.PropertyOrigin.Inlined)]
        public string SslConfigurationLeafDomainLabel { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)Property).SslConfigurationLeafDomainLabel; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)Property).SslConfigurationLeafDomainLabel = value ?? null; }

        /// <summary>Indicates whether to overwrite existing domain label.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.PropertyOrigin.Inlined)]
        public bool? SslConfigurationOverwriteExistingDomain { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)Property).SslConfigurationOverwriteExistingDomain; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)Property).SslConfigurationOverwriteExistingDomain = value ?? default(bool); }

        /// <summary>Enable or disable ssl for scoring</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.PropertyOrigin.Inlined)]
        public string SslConfigurationStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)Property).SslConfigurationStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)Property).SslConfigurationStatus = value ?? null; }

        /// <summary>System services</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.ISystemService[] SystemService { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)Property).SystemService; }

        /// <summary>The type of compute</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Support.ComputeType Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IComputeInternal)__compute).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IComputeInternal)__compute).Type = value ; }

        /// <summary>Creates an new <see cref="Aks" /> instance.</summary>
        public Aks()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__compute), __compute);
            await eventListener.AssertObjectIsValid(nameof(__compute), __compute);
        }
    }
    /// A Machine Learning compute based on AKS.
    public partial interface IAks :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.ICompute
    {
        /// <summary>Number of agents</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of agents",
        SerializedName = @"agentCount",
        PossibleTypes = new [] { typeof(int) })]
        int? AgentCount { get; set; }
        /// <summary>Agent virtual machine size</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Agent virtual machine size",
        SerializedName = @"agentVmSize",
        PossibleTypes = new [] { typeof(string) })]
        string AgentVMSize { get; set; }
        /// <summary>
        /// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified
        /// in serviceCidr.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.",
        SerializedName = @"dnsServiceIP",
        PossibleTypes = new [] { typeof(string) })]
        string AkNetworkingConfigurationDnsServiceIP { get; set; }
        /// <summary>
        /// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes
        /// service address range.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.",
        SerializedName = @"dockerBridgeCidr",
        PossibleTypes = new [] { typeof(string) })]
        string AkNetworkingConfigurationDockerBridgeCidr { get; set; }
        /// <summary>
        /// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.",
        SerializedName = @"serviceCidr",
        PossibleTypes = new [] { typeof(string) })]
        string AkNetworkingConfigurationServiceCidr { get; set; }
        /// <summary>Virtual network subnet resource ID the compute nodes belong to</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Virtual network subnet resource ID the compute nodes belong to",
        SerializedName = @"subnetId",
        PossibleTypes = new [] { typeof(string) })]
        string AkNetworkingConfigurationSubnetId { get; set; }
        /// <summary>Cluster full qualified domain name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Cluster full qualified domain name",
        SerializedName = @"clusterFqdn",
        PossibleTypes = new [] { typeof(string) })]
        string ClusterFqdn { get; set; }
        /// <summary>Intended usage of the cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Intended usage of the cluster",
        SerializedName = @"clusterPurpose",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Support.ClusterPurpose) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Support.ClusterPurpose? ClusterPurpose { get; set; }
        /// <summary>Load Balancer Subnet</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Load Balancer Subnet",
        SerializedName = @"loadBalancerSubnet",
        PossibleTypes = new [] { typeof(string) })]
        string LoadBalancerSubnet { get; set; }
        /// <summary>Load Balancer Type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Load Balancer Type",
        SerializedName = @"loadBalancerType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Support.LoadBalancerType) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Support.LoadBalancerType? LoadBalancerType { get; set; }
        /// <summary>Cert data</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Cert data",
        SerializedName = @"cert",
        PossibleTypes = new [] { typeof(string) })]
        string SslConfigurationCert { get; set; }
        /// <summary>CNAME of the cert</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"CNAME of the cert",
        SerializedName = @"cname",
        PossibleTypes = new [] { typeof(string) })]
        string SslConfigurationCname { get; set; }
        /// <summary>Key data</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Key data",
        SerializedName = @"key",
        PossibleTypes = new [] { typeof(string) })]
        string SslConfigurationKey { get; set; }
        /// <summary>Leaf domain label of public endpoint</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Leaf domain label of public endpoint",
        SerializedName = @"leafDomainLabel",
        PossibleTypes = new [] { typeof(string) })]
        string SslConfigurationLeafDomainLabel { get; set; }
        /// <summary>Indicates whether to overwrite existing domain label.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether to overwrite existing domain label.",
        SerializedName = @"overwriteExistingDomain",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SslConfigurationOverwriteExistingDomain { get; set; }
        /// <summary>Enable or disable ssl for scoring</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enable or disable ssl for scoring",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(string) })]
        string SslConfigurationStatus { get; set; }
        /// <summary>System services</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"System services",
        SerializedName = @"systemServices",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.ISystemService) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.ISystemService[] SystemService { get;  }

    }
    /// A Machine Learning compute based on AKS.
    internal partial interface IAksInternal :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IComputeInternal
    {
        /// <summary>Number of agents</summary>
        int? AgentCount { get; set; }
        /// <summary>Agent virtual machine size</summary>
        string AgentVMSize { get; set; }
        /// <summary>
        /// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified
        /// in serviceCidr.
        /// </summary>
        string AkNetworkingConfigurationDnsServiceIP { get; set; }
        /// <summary>
        /// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes
        /// service address range.
        /// </summary>
        string AkNetworkingConfigurationDockerBridgeCidr { get; set; }
        /// <summary>
        /// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
        /// </summary>
        string AkNetworkingConfigurationServiceCidr { get; set; }
        /// <summary>Virtual network subnet resource ID the compute nodes belong to</summary>
        string AkNetworkingConfigurationSubnetId { get; set; }
        /// <summary>Cluster full qualified domain name</summary>
        string ClusterFqdn { get; set; }
        /// <summary>Intended usage of the cluster</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Support.ClusterPurpose? ClusterPurpose { get; set; }
        /// <summary>Load Balancer Subnet</summary>
        string LoadBalancerSubnet { get; set; }
        /// <summary>Load Balancer Type</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Support.LoadBalancerType? LoadBalancerType { get; set; }
        /// <summary>AKS networking configuration for vnet</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksNetworkingConfiguration NetworkingConfiguration { get; set; }
        /// <summary>AKS properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksProperties Property { get; set; }
        /// <summary>SSL configuration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.ISslConfiguration SslConfiguration { get; set; }
        /// <summary>Cert data</summary>
        string SslConfigurationCert { get; set; }
        /// <summary>CNAME of the cert</summary>
        string SslConfigurationCname { get; set; }
        /// <summary>Key data</summary>
        string SslConfigurationKey { get; set; }
        /// <summary>Leaf domain label of public endpoint</summary>
        string SslConfigurationLeafDomainLabel { get; set; }
        /// <summary>Indicates whether to overwrite existing domain label.</summary>
        bool? SslConfigurationOverwriteExistingDomain { get; set; }
        /// <summary>Enable or disable ssl for scoring</summary>
        string SslConfigurationStatus { get; set; }
        /// <summary>System services</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.ISystemService[] SystemService { get; set; }

    }
}