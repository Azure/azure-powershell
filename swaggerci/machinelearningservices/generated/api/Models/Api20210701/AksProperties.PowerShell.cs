// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701
{
    using Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Runtime.PowerShell;

    /// <summary>AKS properties</summary>
    [System.ComponentModel.TypeConverter(typeof(AksPropertiesTypeConverter))]
    public partial class AksProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.AksProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal AksProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("SslConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).SslConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.ISslConfiguration) content.GetValueForProperty("SslConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).SslConfiguration, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.SslConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("AksNetworkingConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).AksNetworkingConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksNetworkingConfiguration) content.GetValueForProperty("AksNetworkingConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).AksNetworkingConfiguration, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.AksNetworkingConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("ClusterFqdn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).ClusterFqdn = (string) content.GetValueForProperty("ClusterFqdn",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).ClusterFqdn, global::System.Convert.ToString);
            }
            if (content.Contains("SystemService"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).SystemService = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.ISystemService[]) content.GetValueForProperty("SystemService",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).SystemService, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.ISystemService>(__y, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.SystemServiceTypeConverter.ConvertFrom));
            }
            if (content.Contains("AgentCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).AgentCount = (int?) content.GetValueForProperty("AgentCount",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).AgentCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("AgentVMSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).AgentVMSize = (string) content.GetValueForProperty("AgentVMSize",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).AgentVMSize, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterPurpose"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).ClusterPurpose = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Support.ClusterPurpose?) content.GetValueForProperty("ClusterPurpose",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).ClusterPurpose, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Support.ClusterPurpose.CreateFrom);
            }
            if (content.Contains("LoadBalancerType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).LoadBalancerType = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Support.LoadBalancerType?) content.GetValueForProperty("LoadBalancerType",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).LoadBalancerType, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Support.LoadBalancerType.CreateFrom);
            }
            if (content.Contains("LoadBalancerSubnet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).LoadBalancerSubnet = (string) content.GetValueForProperty("LoadBalancerSubnet",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).LoadBalancerSubnet, global::System.Convert.ToString);
            }
            if (content.Contains("SslConfigurationStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).SslConfigurationStatus = (string) content.GetValueForProperty("SslConfigurationStatus",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).SslConfigurationStatus, global::System.Convert.ToString);
            }
            if (content.Contains("SslConfigurationCert"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).SslConfigurationCert = (string) content.GetValueForProperty("SslConfigurationCert",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).SslConfigurationCert, global::System.Convert.ToString);
            }
            if (content.Contains("SslConfigurationKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).SslConfigurationKey = (string) content.GetValueForProperty("SslConfigurationKey",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).SslConfigurationKey, global::System.Convert.ToString);
            }
            if (content.Contains("SslConfigurationCname"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).SslConfigurationCname = (string) content.GetValueForProperty("SslConfigurationCname",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).SslConfigurationCname, global::System.Convert.ToString);
            }
            if (content.Contains("AkNetworkingConfigurationSubnetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).AkNetworkingConfigurationSubnetId = (string) content.GetValueForProperty("AkNetworkingConfigurationSubnetId",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).AkNetworkingConfigurationSubnetId, global::System.Convert.ToString);
            }
            if (content.Contains("AkNetworkingConfigurationServiceCidr"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).AkNetworkingConfigurationServiceCidr = (string) content.GetValueForProperty("AkNetworkingConfigurationServiceCidr",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).AkNetworkingConfigurationServiceCidr, global::System.Convert.ToString);
            }
            if (content.Contains("SslConfigurationLeafDomainLabel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).SslConfigurationLeafDomainLabel = (string) content.GetValueForProperty("SslConfigurationLeafDomainLabel",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).SslConfigurationLeafDomainLabel, global::System.Convert.ToString);
            }
            if (content.Contains("SslConfigurationOverwriteExistingDomain"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).SslConfigurationOverwriteExistingDomain = (bool?) content.GetValueForProperty("SslConfigurationOverwriteExistingDomain",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).SslConfigurationOverwriteExistingDomain, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AkNetworkingConfigurationDnsServiceIP"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).AkNetworkingConfigurationDnsServiceIP = (string) content.GetValueForProperty("AkNetworkingConfigurationDnsServiceIP",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).AkNetworkingConfigurationDnsServiceIP, global::System.Convert.ToString);
            }
            if (content.Contains("AkNetworkingConfigurationDockerBridgeCidr"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).AkNetworkingConfigurationDockerBridgeCidr = (string) content.GetValueForProperty("AkNetworkingConfigurationDockerBridgeCidr",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).AkNetworkingConfigurationDockerBridgeCidr, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.AksProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal AksProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("SslConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).SslConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.ISslConfiguration) content.GetValueForProperty("SslConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).SslConfiguration, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.SslConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("AksNetworkingConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).AksNetworkingConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksNetworkingConfiguration) content.GetValueForProperty("AksNetworkingConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).AksNetworkingConfiguration, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.AksNetworkingConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("ClusterFqdn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).ClusterFqdn = (string) content.GetValueForProperty("ClusterFqdn",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).ClusterFqdn, global::System.Convert.ToString);
            }
            if (content.Contains("SystemService"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).SystemService = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.ISystemService[]) content.GetValueForProperty("SystemService",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).SystemService, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.ISystemService>(__y, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.SystemServiceTypeConverter.ConvertFrom));
            }
            if (content.Contains("AgentCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).AgentCount = (int?) content.GetValueForProperty("AgentCount",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).AgentCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("AgentVMSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).AgentVMSize = (string) content.GetValueForProperty("AgentVMSize",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).AgentVMSize, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterPurpose"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).ClusterPurpose = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Support.ClusterPurpose?) content.GetValueForProperty("ClusterPurpose",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).ClusterPurpose, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Support.ClusterPurpose.CreateFrom);
            }
            if (content.Contains("LoadBalancerType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).LoadBalancerType = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Support.LoadBalancerType?) content.GetValueForProperty("LoadBalancerType",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).LoadBalancerType, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Support.LoadBalancerType.CreateFrom);
            }
            if (content.Contains("LoadBalancerSubnet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).LoadBalancerSubnet = (string) content.GetValueForProperty("LoadBalancerSubnet",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).LoadBalancerSubnet, global::System.Convert.ToString);
            }
            if (content.Contains("SslConfigurationStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).SslConfigurationStatus = (string) content.GetValueForProperty("SslConfigurationStatus",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).SslConfigurationStatus, global::System.Convert.ToString);
            }
            if (content.Contains("SslConfigurationCert"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).SslConfigurationCert = (string) content.GetValueForProperty("SslConfigurationCert",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).SslConfigurationCert, global::System.Convert.ToString);
            }
            if (content.Contains("SslConfigurationKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).SslConfigurationKey = (string) content.GetValueForProperty("SslConfigurationKey",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).SslConfigurationKey, global::System.Convert.ToString);
            }
            if (content.Contains("SslConfigurationCname"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).SslConfigurationCname = (string) content.GetValueForProperty("SslConfigurationCname",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).SslConfigurationCname, global::System.Convert.ToString);
            }
            if (content.Contains("AkNetworkingConfigurationSubnetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).AkNetworkingConfigurationSubnetId = (string) content.GetValueForProperty("AkNetworkingConfigurationSubnetId",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).AkNetworkingConfigurationSubnetId, global::System.Convert.ToString);
            }
            if (content.Contains("AkNetworkingConfigurationServiceCidr"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).AkNetworkingConfigurationServiceCidr = (string) content.GetValueForProperty("AkNetworkingConfigurationServiceCidr",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).AkNetworkingConfigurationServiceCidr, global::System.Convert.ToString);
            }
            if (content.Contains("SslConfigurationLeafDomainLabel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).SslConfigurationLeafDomainLabel = (string) content.GetValueForProperty("SslConfigurationLeafDomainLabel",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).SslConfigurationLeafDomainLabel, global::System.Convert.ToString);
            }
            if (content.Contains("SslConfigurationOverwriteExistingDomain"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).SslConfigurationOverwriteExistingDomain = (bool?) content.GetValueForProperty("SslConfigurationOverwriteExistingDomain",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).SslConfigurationOverwriteExistingDomain, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AkNetworkingConfigurationDnsServiceIP"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).AkNetworkingConfigurationDnsServiceIP = (string) content.GetValueForProperty("AkNetworkingConfigurationDnsServiceIP",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).AkNetworkingConfigurationDnsServiceIP, global::System.Convert.ToString);
            }
            if (content.Contains("AkNetworkingConfigurationDockerBridgeCidr"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).AkNetworkingConfigurationDockerBridgeCidr = (string) content.GetValueForProperty("AkNetworkingConfigurationDockerBridgeCidr",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksPropertiesInternal)this).AkNetworkingConfigurationDockerBridgeCidr, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.AksProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new AksProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.AksProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new AksProperties(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="AksProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="className" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Models.Api20210701.IAksProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningWorkspaces.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// AKS properties
    [System.ComponentModel.TypeConverter(typeof(AksPropertiesTypeConverter))]
    public partial interface IAksProperties

    {

    }
}