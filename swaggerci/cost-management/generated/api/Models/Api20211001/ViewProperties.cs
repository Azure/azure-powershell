// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Extensions;

    /// <summary>The properties of the view.</summary>
    public partial class ViewProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IViewProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IViewPropertiesInternal
    {

        /// <summary>Backing field for <see cref="Accumulated" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.AccumulatedType? _accumulated;

        /// <summary>Show costs accumulated over time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.AccumulatedType? Accumulated { get => this._accumulated; set => this._accumulated = value; }

        /// <summary>Backing field for <see cref="Chart" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.ChartType? _chart;

        /// <summary>Chart type of the main view in Cost Analysis. Required.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.ChartType? Chart { get => this._chart; set => this._chart = value; }

        /// <summary>Backing field for <see cref="CreatedOn" /> property.</summary>
        private global::System.DateTime? _createdOn;

        /// <summary>Date the user created this view.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Owned)]
        public global::System.DateTime? CreatedOn { get => this._createdOn; }

        /// <summary>Backing field for <see cref="Currency" /> property.</summary>
        private string _currency;

        /// <summary>Currency of the current view.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Owned)]
        public string Currency { get => this._currency; }

        /// <summary>Backing field for <see cref="DateRange" /> property.</summary>
        private string _dateRange;

        /// <summary>Date range of the current view.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Owned)]
        public string DateRange { get => this._dateRange; }

        /// <summary>Backing field for <see cref="DisplayName" /> property.</summary>
        private string _displayName;

        /// <summary>User input name of the view. Required.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Owned)]
        public string DisplayName { get => this._displayName; set => this._displayName = value; }

        /// <summary>Backing field for <see cref="Kpi" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IKpiProperties[] _kpi;

        /// <summary>List of KPIs to show in Cost Analysis UI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IKpiProperties[] Kpi { get => this._kpi; set => this._kpi = value; }

        /// <summary>Backing field for <see cref="Metric" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.MetricType? _metric;

        /// <summary>Metric to use when displaying costs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.MetricType? Metric { get => this._metric; set => this._metric = value; }

        /// <summary>Internal Acessors for CreatedOn</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IViewPropertiesInternal.CreatedOn { get => this._createdOn; set { {_createdOn = value;} } }

        /// <summary>Internal Acessors for Currency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IViewPropertiesInternal.Currency { get => this._currency; set { {_currency = value;} } }

        /// <summary>Internal Acessors for DateRange</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IViewPropertiesInternal.DateRange { get => this._dateRange; set { {_dateRange = value;} } }

        /// <summary>Internal Acessors for ModifiedOn</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IViewPropertiesInternal.ModifiedOn { get => this._modifiedOn; set { {_modifiedOn = value;} } }

        /// <summary>Backing field for <see cref="ModifiedOn" /> property.</summary>
        private global::System.DateTime? _modifiedOn;

        /// <summary>Date when the user last modified this view.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Owned)]
        public global::System.DateTime? ModifiedOn { get => this._modifiedOn; }

        /// <summary>Backing field for <see cref="Pivot" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IPivotProperties[] _pivot;

        /// <summary>Configuration of 3 sub-views in the Cost Analysis UI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IPivotProperties[] Pivot { get => this._pivot; set => this._pivot = value; }

        /// <summary>Backing field for <see cref="Query" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IReportConfigDefinition _query;

        /// <summary>Query body configuration. Required.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IReportConfigDefinition Query { get => (this._query = this._query ?? new Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.ReportConfigDefinition()); set => this._query = value; }

        /// <summary>Backing field for <see cref="Scope" /> property.</summary>
        private string _scope;

        /// <summary>
        /// Cost Management scope to save the view on. This includes 'subscriptions/{subscriptionId}' for subscription scope, 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
        /// for resourceGroup scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}'
        /// for Department scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'
        /// for EnrollmentAccount scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
        /// for BillingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}'
        /// for InvoiceSection scope, 'providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group scope,
        /// '/providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for ExternalBillingAccount
        /// scope, and '/providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for ExternalSubscription
        /// scope.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Owned)]
        public string Scope { get => this._scope; set => this._scope = value; }

        /// <summary>Creates an new <see cref="ViewProperties" /> instance.</summary>
        public ViewProperties()
        {

        }
    }
    /// The properties of the view.
    public partial interface IViewProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.IJsonSerializable
    {
        /// <summary>Show costs accumulated over time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Show costs accumulated over time.",
        SerializedName = @"accumulated",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.AccumulatedType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.AccumulatedType? Accumulated { get; set; }
        /// <summary>Chart type of the main view in Cost Analysis. Required.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Chart type of the main view in Cost Analysis. Required.",
        SerializedName = @"chart",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.ChartType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.ChartType? Chart { get; set; }
        /// <summary>Date the user created this view.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Date the user created this view.",
        SerializedName = @"createdOn",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CreatedOn { get;  }
        /// <summary>Currency of the current view.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Currency of the current view.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string Currency { get;  }
        /// <summary>Date range of the current view.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Date range of the current view.",
        SerializedName = @"dateRange",
        PossibleTypes = new [] { typeof(string) })]
        string DateRange { get;  }
        /// <summary>User input name of the view. Required.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"User input name of the view. Required.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>List of KPIs to show in Cost Analysis UI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of KPIs to show in Cost Analysis UI.",
        SerializedName = @"kpis",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IKpiProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IKpiProperties[] Kpi { get; set; }
        /// <summary>Metric to use when displaying costs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Metric to use when displaying costs.",
        SerializedName = @"metric",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.MetricType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.MetricType? Metric { get; set; }
        /// <summary>Date when the user last modified this view.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Date when the user last modified this view.",
        SerializedName = @"modifiedOn",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ModifiedOn { get;  }
        /// <summary>Configuration of 3 sub-views in the Cost Analysis UI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Configuration of 3 sub-views in the Cost Analysis UI.",
        SerializedName = @"pivots",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IPivotProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IPivotProperties[] Pivot { get; set; }
        /// <summary>Query body configuration. Required.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Query body configuration. Required.",
        SerializedName = @"query",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IReportConfigDefinition) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IReportConfigDefinition Query { get; set; }
        /// <summary>
        /// Cost Management scope to save the view on. This includes 'subscriptions/{subscriptionId}' for subscription scope, 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
        /// for resourceGroup scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}'
        /// for Department scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'
        /// for EnrollmentAccount scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
        /// for BillingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}'
        /// for InvoiceSection scope, 'providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group scope,
        /// '/providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for ExternalBillingAccount
        /// scope, and '/providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for ExternalSubscription
        /// scope.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Cost Management scope to save the view on. This includes 'subscriptions/{subscriptionId}' for subscription scope, 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for BillingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}' for InvoiceSection scope, 'providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group scope, '/providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for ExternalBillingAccount scope, and '/providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for ExternalSubscription scope.",
        SerializedName = @"scope",
        PossibleTypes = new [] { typeof(string) })]
        string Scope { get; set; }

    }
    /// The properties of the view.
    internal partial interface IViewPropertiesInternal

    {
        /// <summary>Show costs accumulated over time.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.AccumulatedType? Accumulated { get; set; }
        /// <summary>Chart type of the main view in Cost Analysis. Required.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.ChartType? Chart { get; set; }
        /// <summary>Date the user created this view.</summary>
        global::System.DateTime? CreatedOn { get; set; }
        /// <summary>Currency of the current view.</summary>
        string Currency { get; set; }
        /// <summary>Date range of the current view.</summary>
        string DateRange { get; set; }
        /// <summary>User input name of the view. Required.</summary>
        string DisplayName { get; set; }
        /// <summary>List of KPIs to show in Cost Analysis UI.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IKpiProperties[] Kpi { get; set; }
        /// <summary>Metric to use when displaying costs.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.MetricType? Metric { get; set; }
        /// <summary>Date when the user last modified this view.</summary>
        global::System.DateTime? ModifiedOn { get; set; }
        /// <summary>Configuration of 3 sub-views in the Cost Analysis UI.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IPivotProperties[] Pivot { get; set; }
        /// <summary>Query body configuration. Required.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IReportConfigDefinition Query { get; set; }
        /// <summary>
        /// Cost Management scope to save the view on. This includes 'subscriptions/{subscriptionId}' for subscription scope, 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
        /// for resourceGroup scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}'
        /// for Department scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'
        /// for EnrollmentAccount scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
        /// for BillingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}'
        /// for InvoiceSection scope, 'providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group scope,
        /// '/providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for ExternalBillingAccount
        /// scope, and '/providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for ExternalSubscription
        /// scope.
        /// </summary>
        string Scope { get; set; }

    }
}