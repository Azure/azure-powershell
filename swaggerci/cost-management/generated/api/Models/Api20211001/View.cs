// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Extensions;

    /// <summary>States and configurations of Cost Analysis.</summary>
    public partial class View :
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IView,
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IViewInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IProxyResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IProxyResource __proxyResource = new Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.ProxyResource();

        /// <summary>Show costs accumulated over time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.AccumulatedType? Accumulated { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IViewPropertiesInternal)Property).Accumulated; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IViewPropertiesInternal)Property).Accumulated = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.AccumulatedType)""); }

        /// <summary>Chart type of the main view in Cost Analysis. Required.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.ChartType? Chart { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IViewPropertiesInternal)Property).Chart; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IViewPropertiesInternal)Property).Chart = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.ChartType)""); }

        /// <summary>Date the user created this view.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inlined)]
        public global::System.DateTime? CreatedOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IViewPropertiesInternal)Property).CreatedOn; }

        /// <summary>Currency of the current view.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inlined)]
        public string Currency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IViewPropertiesInternal)Property).Currency; }

        /// <summary>Date range of the current view.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inlined)]
        public string DateRange { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IViewPropertiesInternal)Property).DateRange; }

        /// <summary>User input name of the view. Required.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inlined)]
        public string DisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IViewPropertiesInternal)Property).DisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IViewPropertiesInternal)Property).DisplayName = value ?? null; }

        /// <summary>
        /// eTag of the resource. To handle concurrent update scenario, this field will be used to determine whether the user is updating
        /// the latest version or not.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public string ETag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IProxyResourceInternal)__proxyResource).ETag; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IProxyResourceInternal)__proxyResource).ETag = value ?? null; }

        /// <summary>Resource Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IProxyResourceInternal)__proxyResource).Id; }

        /// <summary>List of KPIs to show in Cost Analysis UI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IKpiProperties[] Kpi { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IViewPropertiesInternal)Property).Kpi; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IViewPropertiesInternal)Property).Kpi = value ?? null /* arrayOf */; }

        /// <summary>Metric to use when displaying costs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.MetricType? Metric { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IViewPropertiesInternal)Property).Metric; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IViewPropertiesInternal)Property).Metric = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.MetricType)""); }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IProxyResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IProxyResourceInternal)__proxyResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IProxyResourceInternal)__proxyResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IProxyResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IProxyResourceInternal)__proxyResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IProxyResourceInternal)__proxyResource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IProxyResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IProxyResourceInternal)__proxyResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IProxyResourceInternal)__proxyResource).Type = value; }

        /// <summary>Internal Acessors for CreatedOn</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IViewInternal.CreatedOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IViewPropertiesInternal)Property).CreatedOn; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IViewPropertiesInternal)Property).CreatedOn = value; }

        /// <summary>Internal Acessors for Currency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IViewInternal.Currency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IViewPropertiesInternal)Property).Currency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IViewPropertiesInternal)Property).Currency = value; }

        /// <summary>Internal Acessors for DateRange</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IViewInternal.DateRange { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IViewPropertiesInternal)Property).DateRange; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IViewPropertiesInternal)Property).DateRange = value; }

        /// <summary>Internal Acessors for ModifiedOn</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IViewInternal.ModifiedOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IViewPropertiesInternal)Property).ModifiedOn; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IViewPropertiesInternal)Property).ModifiedOn = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IViewProperties Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IViewInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.ViewProperties()); set { {_property = value;} } }

        /// <summary>Date when the user last modified this view.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inlined)]
        public global::System.DateTime? ModifiedOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IViewPropertiesInternal)Property).ModifiedOn; }

        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IProxyResourceInternal)__proxyResource).Name; }

        /// <summary>Configuration of 3 sub-views in the Cost Analysis UI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IPivotProperties[] Pivot { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IViewPropertiesInternal)Property).Pivot; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IViewPropertiesInternal)Property).Pivot = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IViewProperties _property;

        /// <summary>The properties of the view.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IViewProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.ViewProperties()); set => this._property = value; }

        /// <summary>Query body configuration. Required.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IReportConfigDefinition Query { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IViewPropertiesInternal)Property).Query; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IViewPropertiesInternal)Property).Query = value ?? null /* model class */; }

        /// <summary>
        /// Cost Management scope to save the view on. This includes 'subscriptions/{subscriptionId}' for subscription scope, 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
        /// for resourceGroup scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}'
        /// for Department scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'
        /// for EnrollmentAccount scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
        /// for BillingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}'
        /// for InvoiceSection scope, 'providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group scope,
        /// '/providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for ExternalBillingAccount
        /// scope, and '/providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for ExternalSubscription
        /// scope.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inlined)]
        public string Scope { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IViewPropertiesInternal)Property).Scope; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IViewPropertiesInternal)Property).Scope = value ?? null; }

        /// <summary>Resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IProxyResourceInternal)__proxyResource).Type; }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__proxyResource), __proxyResource);
            await eventListener.AssertObjectIsValid(nameof(__proxyResource), __proxyResource);
        }

        /// <summary>Creates an new <see cref="View" /> instance.</summary>
        public View()
        {

        }
    }
    /// States and configurations of Cost Analysis.
    public partial interface IView :
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IProxyResource
    {
        /// <summary>Show costs accumulated over time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Show costs accumulated over time.",
        SerializedName = @"accumulated",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.AccumulatedType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.AccumulatedType? Accumulated { get; set; }
        /// <summary>Chart type of the main view in Cost Analysis. Required.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Chart type of the main view in Cost Analysis. Required.",
        SerializedName = @"chart",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.ChartType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.ChartType? Chart { get; set; }
        /// <summary>Date the user created this view.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Date the user created this view.",
        SerializedName = @"createdOn",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CreatedOn { get;  }
        /// <summary>Currency of the current view.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Currency of the current view.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string Currency { get;  }
        /// <summary>Date range of the current view.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Date range of the current view.",
        SerializedName = @"dateRange",
        PossibleTypes = new [] { typeof(string) })]
        string DateRange { get;  }
        /// <summary>User input name of the view. Required.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"User input name of the view. Required.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>List of KPIs to show in Cost Analysis UI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of KPIs to show in Cost Analysis UI.",
        SerializedName = @"kpis",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IKpiProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IKpiProperties[] Kpi { get; set; }
        /// <summary>Metric to use when displaying costs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Metric to use when displaying costs.",
        SerializedName = @"metric",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.MetricType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.MetricType? Metric { get; set; }
        /// <summary>Date when the user last modified this view.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Date when the user last modified this view.",
        SerializedName = @"modifiedOn",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ModifiedOn { get;  }
        /// <summary>Configuration of 3 sub-views in the Cost Analysis UI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Configuration of 3 sub-views in the Cost Analysis UI.",
        SerializedName = @"pivots",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IPivotProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IPivotProperties[] Pivot { get; set; }
        /// <summary>Query body configuration. Required.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Query body configuration. Required.",
        SerializedName = @"query",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IReportConfigDefinition) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IReportConfigDefinition Query { get; set; }
        /// <summary>
        /// Cost Management scope to save the view on. This includes 'subscriptions/{subscriptionId}' for subscription scope, 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
        /// for resourceGroup scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}'
        /// for Department scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'
        /// for EnrollmentAccount scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
        /// for BillingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}'
        /// for InvoiceSection scope, 'providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group scope,
        /// '/providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for ExternalBillingAccount
        /// scope, and '/providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for ExternalSubscription
        /// scope.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Cost Management scope to save the view on. This includes 'subscriptions/{subscriptionId}' for subscription scope, 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for BillingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}' for InvoiceSection scope, 'providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group scope, '/providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for ExternalBillingAccount scope, and '/providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for ExternalSubscription scope.",
        SerializedName = @"scope",
        PossibleTypes = new [] { typeof(string) })]
        string Scope { get; set; }

    }
    /// States and configurations of Cost Analysis.
    internal partial interface IViewInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IProxyResourceInternal
    {
        /// <summary>Show costs accumulated over time.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.AccumulatedType? Accumulated { get; set; }
        /// <summary>Chart type of the main view in Cost Analysis. Required.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.ChartType? Chart { get; set; }
        /// <summary>Date the user created this view.</summary>
        global::System.DateTime? CreatedOn { get; set; }
        /// <summary>Currency of the current view.</summary>
        string Currency { get; set; }
        /// <summary>Date range of the current view.</summary>
        string DateRange { get; set; }
        /// <summary>User input name of the view. Required.</summary>
        string DisplayName { get; set; }
        /// <summary>List of KPIs to show in Cost Analysis UI.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IKpiProperties[] Kpi { get; set; }
        /// <summary>Metric to use when displaying costs.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.MetricType? Metric { get; set; }
        /// <summary>Date when the user last modified this view.</summary>
        global::System.DateTime? ModifiedOn { get; set; }
        /// <summary>Configuration of 3 sub-views in the Cost Analysis UI.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IPivotProperties[] Pivot { get; set; }
        /// <summary>The properties of the view.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IViewProperties Property { get; set; }
        /// <summary>Query body configuration. Required.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IReportConfigDefinition Query { get; set; }
        /// <summary>
        /// Cost Management scope to save the view on. This includes 'subscriptions/{subscriptionId}' for subscription scope, 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
        /// for resourceGroup scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}'
        /// for Department scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'
        /// for EnrollmentAccount scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
        /// for BillingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}'
        /// for InvoiceSection scope, 'providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group scope,
        /// '/providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for ExternalBillingAccount
        /// scope, and '/providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for ExternalSubscription
        /// scope.
        /// </summary>
        string Scope { get; set; }

    }
}