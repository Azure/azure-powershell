
# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Dismisses the specified alert
.Description
Dismisses the specified alert
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IDismissAlertPayload
.Inputs
Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.ICostIdentity
.Outputs
Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IAlert
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <ICostIdentity>: Identity Parameter
  [AlertId <String>]: Alert ID
  [BillingAccountId <String>]: Enrollment ID (Legacy BillingAccount ID)
  [BillingProfileId <String>]: BillingProfile ID
  [ExportName <String>]: Export Name.
  [ExternalCloudProviderId <String>]: This can be '{externalSubscriptionId}' for linked account or '{externalBillingAccountId}' for consolidated account used with dimension/query operations.
  [ExternalCloudProviderType <ExternalCloudProviderType?>]: The external cloud provider type associated with dimension/query operations. This includes 'externalSubscriptions' for linked account and 'externalBillingAccounts' for consolidated account.
  [Id <String>]: Resource identity path
  [OperationId <String>]: The target operation Id.
  [Scope <String>]: The scope associated with export operations. This includes '/subscriptions/{subscriptionId}/' for subscription scope, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope and '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope, '/providers/Microsoft.Management/managementGroups/{managementGroupId} for Management Group scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for billingProfile scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}' for invoiceSection scope, and '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}' specific for partners.
  [ViewName <String>]: View name

PARAMETER <IDismissAlertPayload>: The request payload to update an alert
  [CloseTime <String>]: dateTime in which alert was closed
  [CostEntityId <String>]: related budget
  [CreationTime <String>]: dateTime in which alert was created
  [DefinitionCategory <AlertCategory?>]: Alert category
  [DefinitionCriterion <AlertCriteria?>]: Criteria that triggered alert
  [DefinitionType <AlertType?>]: type of alert
  [Description <String>]: Alert description
  [DetailAmount <Decimal?>]: budget threshold amount
  [DetailCompanyName <String>]: company name
  [DetailContactEmail <String[]>]: list of emails to contact
  [DetailContactGroup <String[]>]: list of action groups to broadcast to
  [DetailContactRole <String[]>]: list of contact roles
  [DetailCurrentSpend <Decimal?>]: current spend
  [DetailDepartmentName <String>]: department name
  [DetailEnrollmentEndDate <String>]: datetime of enrollmentEndDate
  [DetailEnrollmentNumber <String>]: enrollment number
  [DetailEnrollmentStartDate <String>]: datetime of enrollmentStartDate
  [DetailInvoicingThreshold <Decimal?>]: invoicing threshold
  [DetailMeterFilter <IAny[]>]: array of meters to filter by
  [DetailOperator <AlertOperator?>]: operator used to compare currentSpend with amount
  [DetailOverridingAlert <String>]: overriding alert
  [DetailPeriodStartDate <String>]: datetime of periodStartDate
  [DetailResourceFilter <IAny[]>]: array of resources to filter by
  [DetailResourceGroupFilter <IAny[]>]: array of resourceGroups to filter by
  [DetailTagFilter <IAny>]: tags to filter by
  [DetailThreshold <Decimal?>]: notification threshold percentage as a decimal which activated this alert
  [DetailTimeGrainType <AlertTimeGrainType?>]: Type of timegrain cadence
  [DetailTriggeredBy <String>]: notificationId that triggered this alert
  [DetailUnit <String>]: unit of currency being used
  [ModificationTime <String>]: dateTime in which alert was last modified
  [Source <AlertSource?>]: Source of alert
  [Status <AlertStatus?>]: alert status
  [StatusModificationTime <String>]: dateTime in which the alert status was last modified
  [StatusModificationUserName <String>]: User who last modified the alert
.Link
https://docs.microsoft.com/en-us/powershell/module/az.cost/invoke-azcostdismissalert
#>
function Invoke-AzCostDismissAlert {
[OutputType([Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IAlert])]
[CmdletBinding(DefaultParameterSetName='DismissExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Dismiss', Mandatory)]
    [Parameter(ParameterSetName='DismissExpanded', Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Category('Path')]
    [System.String]
    # Alert ID
    ${AlertId},

    [Parameter(ParameterSetName='Dismiss', Mandatory)]
    [Parameter(ParameterSetName='DismissExpanded', Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Category('Path')]
    [System.String]
    # The scope associated with alerts operations.
    # This includes '/subscriptions/{subscriptionId}/' for subscription scope, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope and '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope, '/providers/Microsoft.Management/managementGroups/{managementGroupId} for Management Group scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for billingProfile scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}' for invoiceSection scope, and '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}' specific for partners.
    ${Scope},

    [Parameter(ParameterSetName='DismissViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='DismissViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Category('Path')]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.ICostIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Dismiss', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='DismissViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20211001.IDismissAlertPayload]
    # The request payload to update an alert
    # To construct, see NOTES section for PARAMETER properties and create a hash table.
    ${Parameter},

    [Parameter(ParameterSetName='DismissExpanded')]
    [Parameter(ParameterSetName='DismissViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Category('Body')]
    [System.String]
    # dateTime in which alert was closed
    ${CloseTime},

    [Parameter(ParameterSetName='DismissExpanded')]
    [Parameter(ParameterSetName='DismissViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Category('Body')]
    [System.String]
    # related budget
    ${CostEntityId},

    [Parameter(ParameterSetName='DismissExpanded')]
    [Parameter(ParameterSetName='DismissViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Category('Body')]
    [System.String]
    # dateTime in which alert was created
    ${CreationTime},

    [Parameter(ParameterSetName='DismissExpanded')]
    [Parameter(ParameterSetName='DismissViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.AlertCategory])]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.AlertCategory]
    # Alert category
    ${DefinitionCategory},

    [Parameter(ParameterSetName='DismissExpanded')]
    [Parameter(ParameterSetName='DismissViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.AlertCriteria])]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.AlertCriteria]
    # Criteria that triggered alert
    ${DefinitionCriterion},

    [Parameter(ParameterSetName='DismissExpanded')]
    [Parameter(ParameterSetName='DismissViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.AlertType])]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.AlertType]
    # type of alert
    ${DefinitionType},

    [Parameter(ParameterSetName='DismissExpanded')]
    [Parameter(ParameterSetName='DismissViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Category('Body')]
    [System.String]
    # Alert description
    ${Description},

    [Parameter(ParameterSetName='DismissExpanded')]
    [Parameter(ParameterSetName='DismissViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Category('Body')]
    [System.Decimal]
    # budget threshold amount
    ${DetailAmount},

    [Parameter(ParameterSetName='DismissExpanded')]
    [Parameter(ParameterSetName='DismissViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Category('Body')]
    [System.String]
    # company name
    ${DetailCompanyName},

    [Parameter(ParameterSetName='DismissExpanded')]
    [Parameter(ParameterSetName='DismissViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Category('Body')]
    [System.String[]]
    # list of emails to contact
    ${DetailContactEmail},

    [Parameter(ParameterSetName='DismissExpanded')]
    [Parameter(ParameterSetName='DismissViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Category('Body')]
    [System.String[]]
    # list of action groups to broadcast to
    ${DetailContactGroup},

    [Parameter(ParameterSetName='DismissExpanded')]
    [Parameter(ParameterSetName='DismissViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Category('Body')]
    [System.String[]]
    # list of contact roles
    ${DetailContactRole},

    [Parameter(ParameterSetName='DismissExpanded')]
    [Parameter(ParameterSetName='DismissViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Category('Body')]
    [System.Decimal]
    # current spend
    ${DetailCurrentSpend},

    [Parameter(ParameterSetName='DismissExpanded')]
    [Parameter(ParameterSetName='DismissViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Category('Body')]
    [System.String]
    # department name
    ${DetailDepartmentName},

    [Parameter(ParameterSetName='DismissExpanded')]
    [Parameter(ParameterSetName='DismissViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Category('Body')]
    [System.String]
    # datetime of enrollmentEndDate
    ${DetailEnrollmentEndDate},

    [Parameter(ParameterSetName='DismissExpanded')]
    [Parameter(ParameterSetName='DismissViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Category('Body')]
    [System.String]
    # enrollment number
    ${DetailEnrollmentNumber},

    [Parameter(ParameterSetName='DismissExpanded')]
    [Parameter(ParameterSetName='DismissViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Category('Body')]
    [System.String]
    # datetime of enrollmentStartDate
    ${DetailEnrollmentStartDate},

    [Parameter(ParameterSetName='DismissExpanded')]
    [Parameter(ParameterSetName='DismissViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Category('Body')]
    [System.Decimal]
    # invoicing threshold
    ${DetailInvoicingThreshold},

    [Parameter(ParameterSetName='DismissExpanded')]
    [Parameter(ParameterSetName='DismissViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.IAny[]]
    # array of meters to filter by
    ${DetailMeterFilter},

    [Parameter(ParameterSetName='DismissExpanded')]
    [Parameter(ParameterSetName='DismissViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.AlertOperator])]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.AlertOperator]
    # operator used to compare currentSpend with amount
    ${DetailOperator},

    [Parameter(ParameterSetName='DismissExpanded')]
    [Parameter(ParameterSetName='DismissViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Category('Body')]
    [System.String]
    # overriding alert
    ${DetailOverridingAlert},

    [Parameter(ParameterSetName='DismissExpanded')]
    [Parameter(ParameterSetName='DismissViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Category('Body')]
    [System.String]
    # datetime of periodStartDate
    ${DetailPeriodStartDate},

    [Parameter(ParameterSetName='DismissExpanded')]
    [Parameter(ParameterSetName='DismissViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.IAny[]]
    # array of resources to filter by
    ${DetailResourceFilter},

    [Parameter(ParameterSetName='DismissExpanded')]
    [Parameter(ParameterSetName='DismissViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.IAny[]]
    # array of resourceGroups to filter by
    ${DetailResourceGroupFilter},

    [Parameter(ParameterSetName='DismissExpanded')]
    [Parameter(ParameterSetName='DismissViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.IAny]
    # tags to filter by
    ${DetailTagFilter},

    [Parameter(ParameterSetName='DismissExpanded')]
    [Parameter(ParameterSetName='DismissViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Category('Body')]
    [System.Decimal]
    # notification threshold percentage as a decimal which activated this alert
    ${DetailThreshold},

    [Parameter(ParameterSetName='DismissExpanded')]
    [Parameter(ParameterSetName='DismissViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.AlertTimeGrainType])]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.AlertTimeGrainType]
    # Type of timegrain cadence
    ${DetailTimeGrainType},

    [Parameter(ParameterSetName='DismissExpanded')]
    [Parameter(ParameterSetName='DismissViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Category('Body')]
    [System.String]
    # notificationId that triggered this alert
    ${DetailTriggeredBy},

    [Parameter(ParameterSetName='DismissExpanded')]
    [Parameter(ParameterSetName='DismissViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Category('Body')]
    [System.String]
    # unit of currency being used
    ${DetailUnit},

    [Parameter(ParameterSetName='DismissExpanded')]
    [Parameter(ParameterSetName='DismissViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Category('Body')]
    [System.String]
    # dateTime in which alert was last modified
    ${ModificationTime},

    [Parameter(ParameterSetName='DismissExpanded')]
    [Parameter(ParameterSetName='DismissViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.AlertSource])]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.AlertSource]
    # Source of alert
    ${Source},

    [Parameter(ParameterSetName='DismissExpanded')]
    [Parameter(ParameterSetName='DismissViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.AlertStatus])]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.AlertStatus]
    # alert status
    ${Status},

    [Parameter(ParameterSetName='DismissExpanded')]
    [Parameter(ParameterSetName='DismissViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Category('Body')]
    [System.String]
    # dateTime in which the alert status was last modified
    ${StatusModificationTime},

    [Parameter(ParameterSetName='DismissExpanded')]
    [Parameter(ParameterSetName='DismissViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Category('Body')]
    [System.String]
    # User who last modified the alert
    ${StatusModificationUserName},

    [Parameter()]
    [Alias('AzureRMContext', 'AzureCredential')]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Category('Azure')]
    [System.Management.Automation.PSObject]
    # The credentials, account, tenant, and subscription used for communication with Azure.
    ${DefaultProfile},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Category('Runtime')]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Category('Runtime')]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.Cost.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        if ($null -eq [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PowerShellVersion) {
            [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PowerShellVersion = $Host.Runspace.Version.ToString()
        }         
        $preTelemetryId = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId
        if ($preTelemetryId -eq '') {
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId =(New-Guid).ToString()
            [Microsoft.Azure.PowerShell.Cmdlets.Cost.module]::Instance.Telemetry.Invoke('Create', $MyInvocation, $parameterSet, $PSCmdlet)
        } else {
            $internalCalledCmdlets = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets
            if ($internalCalledCmdlets -eq '') {
                [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets = $MyInvocation.MyCommand.Name
            } else {
                [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets += ',' + $MyInvocation.MyCommand.Name
            }
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = 'internal'
        }

        $mapping = @{
            Dismiss = 'Az.Cost.private\Invoke-AzCostDismissAlert_Dismiss';
            DismissExpanded = 'Az.Cost.private\Invoke-AzCostDismissAlert_DismissExpanded';
            DismissViaIdentity = 'Az.Cost.private\Invoke-AzCostDismissAlert_DismissViaIdentity';
            DismissViaIdentityExpanded = 'Az.Cost.private\Invoke-AzCostDismissAlert_DismissViaIdentityExpanded';
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }

    finally {
        $backupTelemetryId = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId
        $backupInternalCalledCmdlets = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
    }

}
end {
    try {
        $steppablePipeline.End()

        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = $backupTelemetryId
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets = $backupInternalCalledCmdlets
        if ($preTelemetryId -eq '') {
            [Microsoft.Azure.PowerShell.Cmdlets.Cost.module]::Instance.Telemetry.Invoke('Send', $MyInvocation, $parameterSet, $PSCmdlet)
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        }
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = $preTelemetryId

    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }
} 
}
