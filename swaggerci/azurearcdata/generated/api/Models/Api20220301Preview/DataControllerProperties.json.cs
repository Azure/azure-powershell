// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Extensions;

    /// <summary>The data controller properties.</summary>
    public partial class DataControllerProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json erialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Json.JsonObject into a new instance of <see cref="DataControllerProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal DataControllerProperties(Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_onPremiseProperty = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Json.JsonObject>("onPremiseProperty"), out var __jsonOnPremiseProperty) ? Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.OnPremiseProperty.FromJson(__jsonOnPremiseProperty) : OnPremiseProperty;}
            {_uploadWatermark = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Json.JsonObject>("uploadWatermark"), out var __jsonUploadWatermark) ? Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.UploadWatermark.FromJson(__jsonUploadWatermark) : UploadWatermark;}
            {_basicLoginInformation = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Json.JsonObject>("basicLoginInformation"), out var __jsonBasicLoginInformation) ? Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.BasicLoginInformation.FromJson(__jsonBasicLoginInformation) : BasicLoginInformation;}
            {_metricsDashboardCredential = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Json.JsonObject>("metricsDashboardCredential"), out var __jsonMetricsDashboardCredential) ? Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.BasicLoginInformation.FromJson(__jsonMetricsDashboardCredential) : MetricsDashboardCredential;}
            {_logsDashboardCredential = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Json.JsonObject>("logsDashboardCredential"), out var __jsonLogsDashboardCredential) ? Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.BasicLoginInformation.FromJson(__jsonLogsDashboardCredential) : LogsDashboardCredential;}
            {_logAnalyticsWorkspaceConfig = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Json.JsonObject>("logAnalyticsWorkspaceConfig"), out var __jsonLogAnalyticsWorkspaceConfig) ? Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.LogAnalyticsWorkspaceConfig.FromJson(__jsonLogAnalyticsWorkspaceConfig) : LogAnalyticsWorkspaceConfig;}
            {_uploadServicePrincipal = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Json.JsonObject>("uploadServicePrincipal"), out var __jsonUploadServicePrincipal) ? Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.UploadServicePrincipal.FromJson(__jsonUploadServicePrincipal) : UploadServicePrincipal;}
            {_infrastructure = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Json.JsonString>("infrastructure"), out var __jsonInfrastructure) ? (string)__jsonInfrastructure : (string)Infrastructure;}
            {_k8SRaw = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Json.JsonObject>("k8sRaw"), out var __jsonK8SRaw) ? Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Any.FromJson(__jsonK8SRaw) : K8SRaw;}
            {_lastUploadedDate = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Json.JsonString>("lastUploadedDate"), out var __jsonLastUploadedDate) ? global::System.DateTime.TryParse((string)__jsonLastUploadedDate, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonLastUploadedDateValue) ? __jsonLastUploadedDateValue : LastUploadedDate : LastUploadedDate;}
            {_provisioningState = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Json.JsonString>("provisioningState"), out var __jsonProvisioningState) ? (string)__jsonProvisioningState : (string)ProvisioningState;}
            {_clusterId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Json.JsonString>("clusterId"), out var __jsonClusterId) ? (string)__jsonClusterId : (string)ClusterId;}
            {_extensionId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Json.JsonString>("extensionId"), out var __jsonExtensionId) ? (string)__jsonExtensionId : (string)ExtensionId;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IDataControllerProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IDataControllerProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IDataControllerProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Json.JsonObject json ? new DataControllerProperties(json) : null;
        }

        /// <summary>
        /// Serializes this instance of <see cref="DataControllerProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="DataControllerProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != this._onPremiseProperty ? (Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Json.JsonNode) this._onPremiseProperty.ToJson(null,serializationMode) : null, "onPremiseProperty" ,container.Add );
            AddIf( null != this._uploadWatermark ? (Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Json.JsonNode) this._uploadWatermark.ToJson(null,serializationMode) : null, "uploadWatermark" ,container.Add );
            AddIf( null != this._basicLoginInformation ? (Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Json.JsonNode) this._basicLoginInformation.ToJson(null,serializationMode) : null, "basicLoginInformation" ,container.Add );
            AddIf( null != this._metricsDashboardCredential ? (Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Json.JsonNode) this._metricsDashboardCredential.ToJson(null,serializationMode) : null, "metricsDashboardCredential" ,container.Add );
            AddIf( null != this._logsDashboardCredential ? (Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Json.JsonNode) this._logsDashboardCredential.ToJson(null,serializationMode) : null, "logsDashboardCredential" ,container.Add );
            AddIf( null != this._logAnalyticsWorkspaceConfig ? (Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Json.JsonNode) this._logAnalyticsWorkspaceConfig.ToJson(null,serializationMode) : null, "logAnalyticsWorkspaceConfig" ,container.Add );
            AddIf( null != this._uploadServicePrincipal ? (Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Json.JsonNode) this._uploadServicePrincipal.ToJson(null,serializationMode) : null, "uploadServicePrincipal" ,container.Add );
            AddIf( null != (((object)this._infrastructure)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Json.JsonString(this._infrastructure.ToString()) : null, "infrastructure" ,container.Add );
            AddIf( null != this._k8SRaw ? (Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Json.JsonNode) this._k8SRaw.ToJson(null,serializationMode) : null, "k8sRaw" ,container.Add );
            AddIf( null != this._lastUploadedDate ? (Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Json.JsonString(this._lastUploadedDate?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "lastUploadedDate" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._provisioningState)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Json.JsonString(this._provisioningState.ToString()) : null, "provisioningState" ,container.Add );
            }
            AddIf( null != (((object)this._clusterId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Json.JsonString(this._clusterId.ToString()) : null, "clusterId" ,container.Add );
            AddIf( null != (((object)this._extensionId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Json.JsonString(this._extensionId.ToString()) : null, "extensionId" ,container.Add );
            AfterToJson(ref container);
            return container;
        }
    }
}