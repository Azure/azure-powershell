// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Extensions;

    /// <summary>The specifications of the AD Kubernetes resource.</summary>
    public partial class ActiveDirectoryConnectorSpec :
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IActiveDirectoryConnectorSpec,
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IActiveDirectoryConnectorSpecInternal
    {

        /// <summary>Backing field for <see cref="ActiveDirectory" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IActiveDirectoryConnectorDomainDetails _activeDirectory;

        /// <summary>null</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IActiveDirectoryConnectorDomainDetails ActiveDirectory { get => (this._activeDirectory = this._activeDirectory ?? new Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ActiveDirectoryConnectorDomainDetails()); set => this._activeDirectory = value; }

        /// <summary>NETBIOS name of the Active Directory domain.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public string ActiveDirectoryNetbiosDomainName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IActiveDirectoryConnectorDomainDetailsInternal)ActiveDirectory).NetbiosDomainName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IActiveDirectoryConnectorDomainDetailsInternal)ActiveDirectory).NetbiosDomainName = value ?? null; }

        /// <summary>The distinguished name of the Active Directory Organizational Unit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public string ActiveDirectoryOuDistinguishedName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IActiveDirectoryConnectorDomainDetailsInternal)ActiveDirectory).OuDistinguishedName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IActiveDirectoryConnectorDomainDetailsInternal)ActiveDirectory).OuDistinguishedName = value ?? null; }

        /// <summary>
        /// Name (uppercase) of the Active Directory domain that this AD connector will be associated with.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public string ActiveDirectoryRealm { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IActiveDirectoryConnectorDomainDetailsInternal)ActiveDirectory).Realm; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IActiveDirectoryConnectorDomainDetailsInternal)ActiveDirectory).Realm = value ; }

        /// <summary>The service account provisioning mode for this Active Directory connector.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.AccountProvisioningMode? ActiveDirectoryServiceAccountProvisioning { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IActiveDirectoryConnectorDomainDetailsInternal)ActiveDirectory).ServiceAccountProvisioning; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IActiveDirectoryConnectorDomainDetailsInternal)ActiveDirectory).ServiceAccountProvisioning = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.AccountProvisioningMode)""); }

        /// <summary>Backing field for <see cref="Dns" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IActiveDirectoryConnectorDnsDetails _dns;

        /// <summary>null</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IActiveDirectoryConnectorDnsDetails Dns { get => (this._dns = this._dns ?? new Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ActiveDirectoryConnectorDnsDetails()); set => this._dns = value; }

        /// <summary>
        /// DNS domain name for which DNS lookups should be forwarded to the Active Directory DNS servers.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public string DnsDomainName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IActiveDirectoryConnectorDnsDetailsInternal)Dns).DomainName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IActiveDirectoryConnectorDnsDetailsInternal)Dns).DomainName = value ?? null; }

        /// <summary>List of Active Directory DNS server IP addresses.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public string[] DnsNameserverIPAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IActiveDirectoryConnectorDnsDetailsInternal)Dns).NameserverIPAddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IActiveDirectoryConnectorDnsDetailsInternal)Dns).NameserverIPAddress = value ; }

        /// <summary>
        /// Flag indicating whether to prefer Kubernetes DNS server response over AD DNS server response for IP address lookups.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public bool? DnsPreferK8SDnsForPtrLookup { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IActiveDirectoryConnectorDnsDetailsInternal)Dns).PreferK8SDnsForPtrLookup; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IActiveDirectoryConnectorDnsDetailsInternal)Dns).PreferK8SDnsForPtrLookup = value ?? default(bool); }

        /// <summary>Replica count for DNS proxy service. Default value is 1.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public long? DnsReplica { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IActiveDirectoryConnectorDnsDetailsInternal)Dns).Replica; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IActiveDirectoryConnectorDnsDetailsInternal)Dns).Replica = value ?? default(long); }

        /// <summary>null</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IActiveDirectoryDomainController[] DomainControllerSecondaryDomainController { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IActiveDirectoryConnectorDomainDetailsInternal)ActiveDirectory).DomainControllerSecondaryDomainController; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IActiveDirectoryConnectorDomainDetailsInternal)ActiveDirectory).DomainControllerSecondaryDomainController = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for ActiveDirectory</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IActiveDirectoryConnectorDomainDetails Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IActiveDirectoryConnectorSpecInternal.ActiveDirectory { get => (this._activeDirectory = this._activeDirectory ?? new Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ActiveDirectoryConnectorDomainDetails()); set { {_activeDirectory = value;} } }

        /// <summary>Internal Acessors for ActiveDirectoryDomainController</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IActiveDirectoryDomainControllers Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IActiveDirectoryConnectorSpecInternal.ActiveDirectoryDomainController { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IActiveDirectoryConnectorDomainDetailsInternal)ActiveDirectory).DomainController; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IActiveDirectoryConnectorDomainDetailsInternal)ActiveDirectory).DomainController = value; }

        /// <summary>Internal Acessors for Dns</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IActiveDirectoryConnectorDnsDetails Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IActiveDirectoryConnectorSpecInternal.Dns { get => (this._dns = this._dns ?? new Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ActiveDirectoryConnectorDnsDetails()); set { {_dns = value;} } }

        /// <summary>Internal Acessors for DomainControllerPrimaryDomainController</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IActiveDirectoryDomainController Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IActiveDirectoryConnectorSpecInternal.DomainControllerPrimaryDomainController { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IActiveDirectoryConnectorDomainDetailsInternal)ActiveDirectory).DomainControllerPrimaryDomainController; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IActiveDirectoryConnectorDomainDetailsInternal)ActiveDirectory).DomainControllerPrimaryDomainController = value; }

        /// <summary>Fully-qualified domain name of a domain controller in the AD domain.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public string PrimaryDomainControllerHostname { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IActiveDirectoryConnectorDomainDetailsInternal)ActiveDirectory).PrimaryDomainControllerHostname; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IActiveDirectoryConnectorDomainDetailsInternal)ActiveDirectory).PrimaryDomainControllerHostname = value ?? null; }

        /// <summary>Creates an new <see cref="ActiveDirectoryConnectorSpec" /> instance.</summary>
        public ActiveDirectoryConnectorSpec()
        {

        }
    }
    /// The specifications of the AD Kubernetes resource.
    public partial interface IActiveDirectoryConnectorSpec :
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.IJsonSerializable
    {
        /// <summary>NETBIOS name of the Active Directory domain.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"NETBIOS name of the Active Directory domain.",
        SerializedName = @"netbiosDomainName",
        PossibleTypes = new [] { typeof(string) })]
        string ActiveDirectoryNetbiosDomainName { get; set; }
        /// <summary>The distinguished name of the Active Directory Organizational Unit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The distinguished name of the Active Directory Organizational Unit.",
        SerializedName = @"ouDistinguishedName",
        PossibleTypes = new [] { typeof(string) })]
        string ActiveDirectoryOuDistinguishedName { get; set; }
        /// <summary>
        /// Name (uppercase) of the Active Directory domain that this AD connector will be associated with.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Name (uppercase) of the Active Directory domain that this AD connector will be associated with.",
        SerializedName = @"realm",
        PossibleTypes = new [] { typeof(string) })]
        string ActiveDirectoryRealm { get; set; }
        /// <summary>The service account provisioning mode for this Active Directory connector.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The service account provisioning mode for this Active Directory connector.",
        SerializedName = @"serviceAccountProvisioning",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.AccountProvisioningMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.AccountProvisioningMode? ActiveDirectoryServiceAccountProvisioning { get; set; }
        /// <summary>
        /// DNS domain name for which DNS lookups should be forwarded to the Active Directory DNS servers.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"DNS domain name for which DNS lookups should be forwarded to the Active Directory DNS servers.",
        SerializedName = @"domainName",
        PossibleTypes = new [] { typeof(string) })]
        string DnsDomainName { get; set; }
        /// <summary>List of Active Directory DNS server IP addresses.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"List of Active Directory DNS server IP addresses.",
        SerializedName = @"nameserverIPAddresses",
        PossibleTypes = new [] { typeof(string) })]
        string[] DnsNameserverIPAddress { get; set; }
        /// <summary>
        /// Flag indicating whether to prefer Kubernetes DNS server response over AD DNS server response for IP address lookups.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Flag indicating whether to prefer Kubernetes DNS server response over AD DNS server response for IP address lookups.",
        SerializedName = @"preferK8sDnsForPtrLookups",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DnsPreferK8SDnsForPtrLookup { get; set; }
        /// <summary>Replica count for DNS proxy service. Default value is 1.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Replica count for DNS proxy service. Default value is 1.",
        SerializedName = @"replicas",
        PossibleTypes = new [] { typeof(long) })]
        long? DnsReplica { get; set; }
        /// <summary>null</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"null",
        SerializedName = @"secondaryDomainControllers",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IActiveDirectoryDomainController) })]
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IActiveDirectoryDomainController[] DomainControllerSecondaryDomainController { get; set; }
        /// <summary>Fully-qualified domain name of a domain controller in the AD domain.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Fully-qualified domain name of a domain controller in the AD domain.",
        SerializedName = @"hostname",
        PossibleTypes = new [] { typeof(string) })]
        string PrimaryDomainControllerHostname { get; set; }

    }
    /// The specifications of the AD Kubernetes resource.
    internal partial interface IActiveDirectoryConnectorSpecInternal

    {
        /// <summary>null</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IActiveDirectoryConnectorDomainDetails ActiveDirectory { get; set; }
        /// <summary>null</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IActiveDirectoryDomainControllers ActiveDirectoryDomainController { get; set; }
        /// <summary>NETBIOS name of the Active Directory domain.</summary>
        string ActiveDirectoryNetbiosDomainName { get; set; }
        /// <summary>The distinguished name of the Active Directory Organizational Unit.</summary>
        string ActiveDirectoryOuDistinguishedName { get; set; }
        /// <summary>
        /// Name (uppercase) of the Active Directory domain that this AD connector will be associated with.
        /// </summary>
        string ActiveDirectoryRealm { get; set; }
        /// <summary>The service account provisioning mode for this Active Directory connector.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.AccountProvisioningMode? ActiveDirectoryServiceAccountProvisioning { get; set; }
        /// <summary>null</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IActiveDirectoryConnectorDnsDetails Dns { get; set; }
        /// <summary>
        /// DNS domain name for which DNS lookups should be forwarded to the Active Directory DNS servers.
        /// </summary>
        string DnsDomainName { get; set; }
        /// <summary>List of Active Directory DNS server IP addresses.</summary>
        string[] DnsNameserverIPAddress { get; set; }
        /// <summary>
        /// Flag indicating whether to prefer Kubernetes DNS server response over AD DNS server response for IP address lookups.
        /// </summary>
        bool? DnsPreferK8SDnsForPtrLookup { get; set; }
        /// <summary>Replica count for DNS proxy service. Default value is 1.</summary>
        long? DnsReplica { get; set; }
        /// <summary>Information about the Primary Domain Controller (PDC) in the AD domain.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IActiveDirectoryDomainController DomainControllerPrimaryDomainController { get; set; }
        /// <summary>null</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IActiveDirectoryDomainController[] DomainControllerSecondaryDomainController { get; set; }
        /// <summary>Fully-qualified domain name of a domain controller in the AD domain.</summary>
        string PrimaryDomainControllerHostname { get; set; }

    }
}