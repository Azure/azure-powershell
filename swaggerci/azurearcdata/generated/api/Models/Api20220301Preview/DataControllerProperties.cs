// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Extensions;

    /// <summary>The data controller properties.</summary>
    public partial class DataControllerProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IDataControllerProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IDataControllerPropertiesInternal
    {

        /// <summary>Backing field for <see cref="BasicLoginInformation" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IBasicLoginInformation _basicLoginInformation;

        /// <summary>
        /// Deprecated. Azure Arc Data Services data controller no longer expose any endpoint. All traffic are exposed through Kubernetes
        /// native API.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IBasicLoginInformation BasicLoginInformation { get => (this._basicLoginInformation = this._basicLoginInformation ?? new Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.BasicLoginInformation()); set => this._basicLoginInformation = value; }

        /// <summary>Login password.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public string BasicLoginInformationPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IBasicLoginInformationInternal)BasicLoginInformation).Password; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IBasicLoginInformationInternal)BasicLoginInformation).Password = value ?? null; }

        /// <summary>Login username.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public string BasicLoginInformationUsername { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IBasicLoginInformationInternal)BasicLoginInformation).Username; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IBasicLoginInformationInternal)BasicLoginInformation).Username = value ?? null; }

        /// <summary>Backing field for <see cref="ClusterId" /> property.</summary>
        private string _clusterId;

        /// <summary>
        /// If a CustomLocation is provided, this contains the ARM id of the connected cluster the custom location belongs to.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Owned)]
        public string ClusterId { get => this._clusterId; set => this._clusterId = value; }

        /// <summary>Backing field for <see cref="ExtensionId" /> property.</summary>
        private string _extensionId;

        /// <summary>
        /// If a CustomLocation is provided, this contains the ARM id of the extension the custom location belongs to.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Owned)]
        public string ExtensionId { get => this._extensionId; set => this._extensionId = value; }

        /// <summary>Backing field for <see cref="Infrastructure" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.Infrastructure? _infrastructure;

        /// <summary>The infrastructure the data controller is running on.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.Infrastructure? Infrastructure { get => this._infrastructure; set => this._infrastructure = value; }

        /// <summary>Backing field for <see cref="K8SRaw" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.IAny _k8SRaw;

        /// <summary>The raw kubernetes information</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.IAny K8SRaw { get => (this._k8SRaw = this._k8SRaw ?? new Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Any()); set => this._k8SRaw = value; }

        /// <summary>Backing field for <see cref="LastUploadedDate" /> property.</summary>
        private global::System.DateTime? _lastUploadedDate;

        /// <summary>Last uploaded date from Kubernetes cluster. Defaults to current date time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Owned)]
        public global::System.DateTime? LastUploadedDate { get => this._lastUploadedDate; set => this._lastUploadedDate = value; }

        /// <summary>Primary key of the workspace</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public string LogAnalyticWorkspaceConfigPrimaryKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ILogAnalyticsWorkspaceConfigInternal)LogAnalyticsWorkspaceConfig).PrimaryKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ILogAnalyticsWorkspaceConfigInternal)LogAnalyticsWorkspaceConfig).PrimaryKey = value ?? null; }

        /// <summary>Azure Log Analytics workspace ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public string LogAnalyticWorkspaceConfigWorkspaceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ILogAnalyticsWorkspaceConfigInternal)LogAnalyticsWorkspaceConfig).WorkspaceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ILogAnalyticsWorkspaceConfigInternal)LogAnalyticsWorkspaceConfig).WorkspaceId = value ?? null; }

        /// <summary>Backing field for <see cref="LogAnalyticsWorkspaceConfig" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ILogAnalyticsWorkspaceConfig _logAnalyticsWorkspaceConfig;

        /// <summary>Log analytics workspace id and primary key</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ILogAnalyticsWorkspaceConfig LogAnalyticsWorkspaceConfig { get => (this._logAnalyticsWorkspaceConfig = this._logAnalyticsWorkspaceConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.LogAnalyticsWorkspaceConfig()); set => this._logAnalyticsWorkspaceConfig = value; }

        /// <summary>Login password.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public string LogDashboardCredentialPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IBasicLoginInformationInternal)LogsDashboardCredential).Password; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IBasicLoginInformationInternal)LogsDashboardCredential).Password = value ?? null; }

        /// <summary>Login username.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public string LogDashboardCredentialUsername { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IBasicLoginInformationInternal)LogsDashboardCredential).Username; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IBasicLoginInformationInternal)LogsDashboardCredential).Username = value ?? null; }

        /// <summary>Backing field for <see cref="LogsDashboardCredential" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IBasicLoginInformation _logsDashboardCredential;

        /// <summary>Login credential for logs dashboard on the Kubernetes cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IBasicLoginInformation LogsDashboardCredential { get => (this._logsDashboardCredential = this._logsDashboardCredential ?? new Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.BasicLoginInformation()); set => this._logsDashboardCredential = value; }

        /// <summary>Login password.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public string MetricDashboardCredentialPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IBasicLoginInformationInternal)MetricsDashboardCredential).Password; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IBasicLoginInformationInternal)MetricsDashboardCredential).Password = value ?? null; }

        /// <summary>Login username.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public string MetricDashboardCredentialUsername { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IBasicLoginInformationInternal)MetricsDashboardCredential).Username; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IBasicLoginInformationInternal)MetricsDashboardCredential).Username = value ?? null; }

        /// <summary>Backing field for <see cref="MetricsDashboardCredential" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IBasicLoginInformation _metricsDashboardCredential;

        /// <summary>Login credential for metrics dashboard on the Kubernetes cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IBasicLoginInformation MetricsDashboardCredential { get => (this._metricsDashboardCredential = this._metricsDashboardCredential ?? new Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.BasicLoginInformation()); set => this._metricsDashboardCredential = value; }

        /// <summary>Internal Acessors for BasicLoginInformation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IBasicLoginInformation Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IDataControllerPropertiesInternal.BasicLoginInformation { get => (this._basicLoginInformation = this._basicLoginInformation ?? new Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.BasicLoginInformation()); set { {_basicLoginInformation = value;} } }

        /// <summary>Internal Acessors for LogAnalyticsWorkspaceConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ILogAnalyticsWorkspaceConfig Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IDataControllerPropertiesInternal.LogAnalyticsWorkspaceConfig { get => (this._logAnalyticsWorkspaceConfig = this._logAnalyticsWorkspaceConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.LogAnalyticsWorkspaceConfig()); set { {_logAnalyticsWorkspaceConfig = value;} } }

        /// <summary>Internal Acessors for LogsDashboardCredential</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IBasicLoginInformation Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IDataControllerPropertiesInternal.LogsDashboardCredential { get => (this._logsDashboardCredential = this._logsDashboardCredential ?? new Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.BasicLoginInformation()); set { {_logsDashboardCredential = value;} } }

        /// <summary>Internal Acessors for MetricsDashboardCredential</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IBasicLoginInformation Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IDataControllerPropertiesInternal.MetricsDashboardCredential { get => (this._metricsDashboardCredential = this._metricsDashboardCredential ?? new Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.BasicLoginInformation()); set { {_metricsDashboardCredential = value;} } }

        /// <summary>Internal Acessors for OnPremiseProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IOnPremiseProperty Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IDataControllerPropertiesInternal.OnPremiseProperty { get => (this._onPremiseProperty = this._onPremiseProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.OnPremiseProperty()); set { {_onPremiseProperty = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IDataControllerPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for UploadServicePrincipal</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IUploadServicePrincipal Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IDataControllerPropertiesInternal.UploadServicePrincipal { get => (this._uploadServicePrincipal = this._uploadServicePrincipal ?? new Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.UploadServicePrincipal()); set { {_uploadServicePrincipal = value;} } }

        /// <summary>Internal Acessors for UploadWatermark</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IUploadWatermark Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IDataControllerPropertiesInternal.UploadWatermark { get => (this._uploadWatermark = this._uploadWatermark ?? new Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.UploadWatermark()); set { {_uploadWatermark = value;} } }

        /// <summary>Backing field for <see cref="OnPremiseProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IOnPremiseProperty _onPremiseProperty;

        /// <summary>Properties from the Kubernetes data controller</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IOnPremiseProperty OnPremiseProperty { get => (this._onPremiseProperty = this._onPremiseProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.OnPremiseProperty()); set => this._onPremiseProperty = value; }

        /// <summary>A globally unique ID identifying the associated Kubernetes cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public string OnPremisePropertyId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IOnPremisePropertyInternal)OnPremiseProperty).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IOnPremisePropertyInternal)OnPremiseProperty).Id = value ?? null; }

        /// <summary>
        /// Certificate that contains the Kubernetes cluster public key used to verify signing
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public string OnPremisePropertyPublicSigningKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IOnPremisePropertyInternal)OnPremiseProperty).PublicSigningKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IOnPremisePropertyInternal)OnPremiseProperty).PublicSigningKey = value ?? null; }

        /// <summary>Unique thumbprint returned to customer to verify the certificate being uploaded</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public string OnPremisePropertySigningCertificateThumbprint { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IOnPremisePropertyInternal)OnPremiseProperty).SigningCertificateThumbprint; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IOnPremisePropertyInternal)OnPremiseProperty).SigningCertificateThumbprint = value ?? null; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>The provisioning state of the Arc Data Controller resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="UploadServicePrincipal" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IUploadServicePrincipal _uploadServicePrincipal;

        /// <summary>
        /// Deprecated. Service principal is deprecated in favor of Arc Kubernetes service extension managed identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IUploadServicePrincipal UploadServicePrincipal { get => (this._uploadServicePrincipal = this._uploadServicePrincipal ?? new Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.UploadServicePrincipal()); set => this._uploadServicePrincipal = value; }

        /// <summary>
        /// Authority for the service principal. Example: https://login.microsoftonline.com/
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public string UploadServicePrincipalAuthority { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IUploadServicePrincipalInternal)UploadServicePrincipal).Authority; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IUploadServicePrincipalInternal)UploadServicePrincipal).Authority = value ?? null; }

        /// <summary>Client ID of the service principal for uploading data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public string UploadServicePrincipalClientId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IUploadServicePrincipalInternal)UploadServicePrincipal).ClientId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IUploadServicePrincipalInternal)UploadServicePrincipal).ClientId = value ?? null; }

        /// <summary>Secret of the service principal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public string UploadServicePrincipalClientSecret { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IUploadServicePrincipalInternal)UploadServicePrincipal).ClientSecret; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IUploadServicePrincipalInternal)UploadServicePrincipal).ClientSecret = value ?? null; }

        /// <summary>Tenant ID of the service principal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public string UploadServicePrincipalTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IUploadServicePrincipalInternal)UploadServicePrincipal).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IUploadServicePrincipalInternal)UploadServicePrincipal).TenantId = value ?? null; }

        /// <summary>Backing field for <see cref="UploadWatermark" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IUploadWatermark _uploadWatermark;

        /// <summary>Properties on upload watermark. Mostly timestamp for each upload data type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IUploadWatermark UploadWatermark { get => (this._uploadWatermark = this._uploadWatermark ?? new Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.UploadWatermark()); set => this._uploadWatermark = value; }

        /// <summary>
        /// Last uploaded date for logs from kubernetes cluster. Defaults to current date time
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public global::System.DateTime? UploadWatermarkLog { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IUploadWatermarkInternal)UploadWatermark).Log; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IUploadWatermarkInternal)UploadWatermark).Log = value ?? default(global::System.DateTime); }

        /// <summary>
        /// Last uploaded date for metrics from kubernetes cluster. Defaults to current date time
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public global::System.DateTime? UploadWatermarkMetric { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IUploadWatermarkInternal)UploadWatermark).Metric; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IUploadWatermarkInternal)UploadWatermark).Metric = value ?? default(global::System.DateTime); }

        /// <summary>
        /// Last uploaded date for usages from kubernetes cluster. Defaults to current date time
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public global::System.DateTime? UploadWatermarkUsage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IUploadWatermarkInternal)UploadWatermark).Usage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IUploadWatermarkInternal)UploadWatermark).Usage = value ?? default(global::System.DateTime); }

        /// <summary>Creates an new <see cref="DataControllerProperties" /> instance.</summary>
        public DataControllerProperties()
        {

        }
    }
    /// The data controller properties.
    public partial interface IDataControllerProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.IJsonSerializable
    {
        /// <summary>Login password.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Login password.",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(string) })]
        string BasicLoginInformationPassword { get; set; }
        /// <summary>Login username.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Login username.",
        SerializedName = @"username",
        PossibleTypes = new [] { typeof(string) })]
        string BasicLoginInformationUsername { get; set; }
        /// <summary>
        /// If a CustomLocation is provided, this contains the ARM id of the connected cluster the custom location belongs to.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If a CustomLocation is provided, this contains the ARM id of the connected cluster the custom location belongs to.",
        SerializedName = @"clusterId",
        PossibleTypes = new [] { typeof(string) })]
        string ClusterId { get; set; }
        /// <summary>
        /// If a CustomLocation is provided, this contains the ARM id of the extension the custom location belongs to.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If a CustomLocation is provided, this contains the ARM id of the extension the custom location belongs to.",
        SerializedName = @"extensionId",
        PossibleTypes = new [] { typeof(string) })]
        string ExtensionId { get; set; }
        /// <summary>The infrastructure the data controller is running on.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The infrastructure the data controller is running on.",
        SerializedName = @"infrastructure",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.Infrastructure) })]
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.Infrastructure? Infrastructure { get; set; }
        /// <summary>The raw kubernetes information</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The raw kubernetes information",
        SerializedName = @"k8sRaw",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.IAny K8SRaw { get; set; }
        /// <summary>Last uploaded date from Kubernetes cluster. Defaults to current date time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Last uploaded date from Kubernetes cluster. Defaults to current date time",
        SerializedName = @"lastUploadedDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastUploadedDate { get; set; }
        /// <summary>Primary key of the workspace</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Primary key of the workspace",
        SerializedName = @"primaryKey",
        PossibleTypes = new [] { typeof(string) })]
        string LogAnalyticWorkspaceConfigPrimaryKey { get; set; }
        /// <summary>Azure Log Analytics workspace ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Azure Log Analytics workspace ID",
        SerializedName = @"workspaceId",
        PossibleTypes = new [] { typeof(string) })]
        string LogAnalyticWorkspaceConfigWorkspaceId { get; set; }
        /// <summary>Login password.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Login password.",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(string) })]
        string LogDashboardCredentialPassword { get; set; }
        /// <summary>Login username.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Login username.",
        SerializedName = @"username",
        PossibleTypes = new [] { typeof(string) })]
        string LogDashboardCredentialUsername { get; set; }
        /// <summary>Login password.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Login password.",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(string) })]
        string MetricDashboardCredentialPassword { get; set; }
        /// <summary>Login username.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Login username.",
        SerializedName = @"username",
        PossibleTypes = new [] { typeof(string) })]
        string MetricDashboardCredentialUsername { get; set; }
        /// <summary>A globally unique ID identifying the associated Kubernetes cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A globally unique ID identifying the associated Kubernetes cluster",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string OnPremisePropertyId { get; set; }
        /// <summary>
        /// Certificate that contains the Kubernetes cluster public key used to verify signing
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Certificate that contains the Kubernetes cluster public key used to verify signing",
        SerializedName = @"publicSigningKey",
        PossibleTypes = new [] { typeof(string) })]
        string OnPremisePropertyPublicSigningKey { get; set; }
        /// <summary>Unique thumbprint returned to customer to verify the certificate being uploaded</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Unique thumbprint returned to customer to verify the certificate being uploaded",
        SerializedName = @"signingCertificateThumbprint",
        PossibleTypes = new [] { typeof(string) })]
        string OnPremisePropertySigningCertificateThumbprint { get; set; }
        /// <summary>The provisioning state of the Arc Data Controller resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state of the Arc Data Controller resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>
        /// Authority for the service principal. Example: https://login.microsoftonline.com/
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Authority for the service principal. Example: https://login.microsoftonline.com/",
        SerializedName = @"authority",
        PossibleTypes = new [] { typeof(string) })]
        string UploadServicePrincipalAuthority { get; set; }
        /// <summary>Client ID of the service principal for uploading data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Client ID of the service principal for uploading data.",
        SerializedName = @"clientId",
        PossibleTypes = new [] { typeof(string) })]
        string UploadServicePrincipalClientId { get; set; }
        /// <summary>Secret of the service principal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Secret of the service principal",
        SerializedName = @"clientSecret",
        PossibleTypes = new [] { typeof(string) })]
        string UploadServicePrincipalClientSecret { get; set; }
        /// <summary>Tenant ID of the service principal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Tenant ID of the service principal.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string UploadServicePrincipalTenantId { get; set; }
        /// <summary>
        /// Last uploaded date for logs from kubernetes cluster. Defaults to current date time
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Last uploaded date for logs from kubernetes cluster. Defaults to current date time",
        SerializedName = @"logs",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? UploadWatermarkLog { get; set; }
        /// <summary>
        /// Last uploaded date for metrics from kubernetes cluster. Defaults to current date time
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Last uploaded date for metrics from kubernetes cluster. Defaults to current date time",
        SerializedName = @"metrics",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? UploadWatermarkMetric { get; set; }
        /// <summary>
        /// Last uploaded date for usages from kubernetes cluster. Defaults to current date time
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Last uploaded date for usages from kubernetes cluster. Defaults to current date time",
        SerializedName = @"usages",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? UploadWatermarkUsage { get; set; }

    }
    /// The data controller properties.
    internal partial interface IDataControllerPropertiesInternal

    {
        /// <summary>
        /// Deprecated. Azure Arc Data Services data controller no longer expose any endpoint. All traffic are exposed through Kubernetes
        /// native API.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IBasicLoginInformation BasicLoginInformation { get; set; }
        /// <summary>Login password.</summary>
        string BasicLoginInformationPassword { get; set; }
        /// <summary>Login username.</summary>
        string BasicLoginInformationUsername { get; set; }
        /// <summary>
        /// If a CustomLocation is provided, this contains the ARM id of the connected cluster the custom location belongs to.
        /// </summary>
        string ClusterId { get; set; }
        /// <summary>
        /// If a CustomLocation is provided, this contains the ARM id of the extension the custom location belongs to.
        /// </summary>
        string ExtensionId { get; set; }
        /// <summary>The infrastructure the data controller is running on.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.Infrastructure? Infrastructure { get; set; }
        /// <summary>The raw kubernetes information</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.IAny K8SRaw { get; set; }
        /// <summary>Last uploaded date from Kubernetes cluster. Defaults to current date time</summary>
        global::System.DateTime? LastUploadedDate { get; set; }
        /// <summary>Primary key of the workspace</summary>
        string LogAnalyticWorkspaceConfigPrimaryKey { get; set; }
        /// <summary>Azure Log Analytics workspace ID</summary>
        string LogAnalyticWorkspaceConfigWorkspaceId { get; set; }
        /// <summary>Log analytics workspace id and primary key</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ILogAnalyticsWorkspaceConfig LogAnalyticsWorkspaceConfig { get; set; }
        /// <summary>Login password.</summary>
        string LogDashboardCredentialPassword { get; set; }
        /// <summary>Login username.</summary>
        string LogDashboardCredentialUsername { get; set; }
        /// <summary>Login credential for logs dashboard on the Kubernetes cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IBasicLoginInformation LogsDashboardCredential { get; set; }
        /// <summary>Login password.</summary>
        string MetricDashboardCredentialPassword { get; set; }
        /// <summary>Login username.</summary>
        string MetricDashboardCredentialUsername { get; set; }
        /// <summary>Login credential for metrics dashboard on the Kubernetes cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IBasicLoginInformation MetricsDashboardCredential { get; set; }
        /// <summary>Properties from the Kubernetes data controller</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IOnPremiseProperty OnPremiseProperty { get; set; }
        /// <summary>A globally unique ID identifying the associated Kubernetes cluster</summary>
        string OnPremisePropertyId { get; set; }
        /// <summary>
        /// Certificate that contains the Kubernetes cluster public key used to verify signing
        /// </summary>
        string OnPremisePropertyPublicSigningKey { get; set; }
        /// <summary>Unique thumbprint returned to customer to verify the certificate being uploaded</summary>
        string OnPremisePropertySigningCertificateThumbprint { get; set; }
        /// <summary>The provisioning state of the Arc Data Controller resource.</summary>
        string ProvisioningState { get; set; }
        /// <summary>
        /// Deprecated. Service principal is deprecated in favor of Arc Kubernetes service extension managed identity.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IUploadServicePrincipal UploadServicePrincipal { get; set; }
        /// <summary>
        /// Authority for the service principal. Example: https://login.microsoftonline.com/
        /// </summary>
        string UploadServicePrincipalAuthority { get; set; }
        /// <summary>Client ID of the service principal for uploading data.</summary>
        string UploadServicePrincipalClientId { get; set; }
        /// <summary>Secret of the service principal</summary>
        string UploadServicePrincipalClientSecret { get; set; }
        /// <summary>Tenant ID of the service principal.</summary>
        string UploadServicePrincipalTenantId { get; set; }
        /// <summary>Properties on upload watermark. Mostly timestamp for each upload data type</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.IUploadWatermark UploadWatermark { get; set; }
        /// <summary>
        /// Last uploaded date for logs from kubernetes cluster. Defaults to current date time
        /// </summary>
        global::System.DateTime? UploadWatermarkLog { get; set; }
        /// <summary>
        /// Last uploaded date for metrics from kubernetes cluster. Defaults to current date time
        /// </summary>
        global::System.DateTime? UploadWatermarkMetric { get; set; }
        /// <summary>
        /// Last uploaded date for usages from kubernetes cluster. Defaults to current date time
        /// </summary>
        global::System.DateTime? UploadWatermarkUsage { get; set; }

    }
}