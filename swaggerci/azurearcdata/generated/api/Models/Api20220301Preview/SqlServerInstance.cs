// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Extensions;

    /// <summary>A SqlServerInstance.</summary>
    public partial class SqlServerInstance :
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ISqlServerInstance,
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ISqlServerInstanceInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api30.ITrackedResource" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api30.ITrackedResource __trackedResource = new Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api30.TrackedResource();

        /// <summary>Status of Azure Defender.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.DefenderStatus? AzureDefenderStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ISqlServerInstancePropertiesInternal)Property).AzureDefenderStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ISqlServerInstancePropertiesInternal)Property).AzureDefenderStatus = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.DefenderStatus)""); }

        /// <summary>Timestamp of last Azure Defender status update.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public global::System.DateTime? AzureDefenderStatusLastUpdated { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ISqlServerInstancePropertiesInternal)Property).AzureDefenderStatusLastUpdated; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ISqlServerInstancePropertiesInternal)Property).AzureDefenderStatusLastUpdated = value ?? default(global::System.DateTime); }

        /// <summary>SQL Server collation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public string Collation { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ISqlServerInstancePropertiesInternal)Property).Collation; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ISqlServerInstancePropertiesInternal)Property).Collation = value ?? null; }

        /// <summary>ARM Resource id of the container resource (Azure Arc for Servers).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public string ContainerResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ISqlServerInstancePropertiesInternal)Property).ContainerResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ISqlServerInstancePropertiesInternal)Property).ContainerResourceId = value ?? null; }

        /// <summary>The time when the resource was created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public string CreateTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ISqlServerInstancePropertiesInternal)Property).CreateTime; }

        /// <summary>SQL Server current version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public string CurrentVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ISqlServerInstancePropertiesInternal)Property).CurrentVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ISqlServerInstancePropertiesInternal)Property).CurrentVersion = value ?? null; }

        /// <summary>SQL Server edition.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.EditionType? Edition { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ISqlServerInstancePropertiesInternal)Property).Edition; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ISqlServerInstancePropertiesInternal)Property).Edition = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.EditionType)""); }

        /// <summary>Type of host for Azure Arc SQL Server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.HostType? HostType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ISqlServerInstancePropertiesInternal)Property).HostType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ISqlServerInstancePropertiesInternal)Property).HostType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.HostType)""); }

        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api30.IResourceInternal)__trackedResource).Id; }

        /// <summary>SQL Server instance name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public string InstanceName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ISqlServerInstancePropertiesInternal)Property).InstanceName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ISqlServerInstancePropertiesInternal)Property).InstanceName = value ?? null; }

        /// <summary>SQL Server license type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.ArcSqlServerLicenseType? LicenseType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ISqlServerInstancePropertiesInternal)Property).LicenseType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ISqlServerInstancePropertiesInternal)Property).LicenseType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.ArcSqlServerLicenseType)""); }

        /// <summary>The geo-location where the resource lives</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api30.ITrackedResourceInternal)__trackedResource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api30.ITrackedResourceInternal)__trackedResource).Location = value ; }

        /// <summary>Internal Acessors for CreateTime</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ISqlServerInstanceInternal.CreateTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ISqlServerInstancePropertiesInternal)Property).CreateTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ISqlServerInstancePropertiesInternal)Property).CreateTime = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ISqlServerInstanceProperties Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ISqlServerInstanceInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.SqlServerInstanceProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ISqlServerInstanceInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ISqlServerInstancePropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ISqlServerInstancePropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api30.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api30.IResourceInternal)__trackedResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api30.IResourceInternal)__trackedResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api30.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api30.IResourceInternal)__trackedResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api30.IResourceInternal)__trackedResource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api30.ISystemData Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api30.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api30.IResourceInternal)__trackedResource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api30.IResourceInternal)__trackedResource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api30.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api30.IResourceInternal)__trackedResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api30.IResourceInternal)__trackedResource).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api30.IResourceInternal)__trackedResource).Name; }

        /// <summary>SQL Server update level.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public string PatchLevel { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ISqlServerInstancePropertiesInternal)Property).PatchLevel; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ISqlServerInstancePropertiesInternal)Property).PatchLevel = value ?? null; }

        /// <summary>SQL Server product ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public string ProductId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ISqlServerInstancePropertiesInternal)Property).ProductId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ISqlServerInstancePropertiesInternal)Property).ProductId = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ISqlServerInstanceProperties _property;

        /// <summary>null</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ISqlServerInstanceProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.SqlServerInstanceProperties()); set => this._property = value; }

        /// <summary>The provisioning state of the Arc-enabled SQL Server resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ISqlServerInstancePropertiesInternal)Property).ProvisioningState; }

        /// <summary>The cloud connectivity status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.ConnectionStatus? Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ISqlServerInstancePropertiesInternal)Property).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ISqlServerInstancePropertiesInternal)Property).Status = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.ConnectionStatus)""); }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api30.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api30.IResourceInternal)__trackedResource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api30.IResourceInternal)__trackedResource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api30.IResourceInternal)__trackedResource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api30.IResourceInternal)__trackedResource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api30.IResourceInternal)__trackedResource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api30.IResourceInternal)__trackedResource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api30.IResourceInternal)__trackedResource).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api30.IResourceInternal)__trackedResource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api30.IResourceInternal)__trackedResource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api30.IResourceInternal)__trackedResource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api30.IResourceInternal)__trackedResource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api30.IResourceInternal)__trackedResource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api30.IResourceInternal)__trackedResource).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.CreatedByType)""); }

        /// <summary>Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api30.ITrackedResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api30.ITrackedResourceInternal)__trackedResource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api30.ITrackedResourceInternal)__trackedResource).Tag = value ?? null /* model class */; }

        /// <summary>Dynamic TCP ports used by SQL Server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public string TcpDynamicPort { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ISqlServerInstancePropertiesInternal)Property).TcpDynamicPort; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ISqlServerInstancePropertiesInternal)Property).TcpDynamicPort = value ?? null; }

        /// <summary>Static TCP ports used by SQL Server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public string TcpStaticPort { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ISqlServerInstancePropertiesInternal)Property).TcpStaticPort; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ISqlServerInstancePropertiesInternal)Property).TcpStaticPort = value ?? null; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api30.IResourceInternal)__trackedResource).Type; }

        /// <summary>The number of logical processors used by the SQL Server instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public string VCore { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ISqlServerInstancePropertiesInternal)Property).VCore; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ISqlServerInstancePropertiesInternal)Property).VCore = value ?? null; }

        /// <summary>SQL Server version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Origin(Microsoft.Azure.PowerShell.Cmdlets.Arc.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.SqlVersion? Version { get => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ISqlServerInstancePropertiesInternal)Property).Version; set => ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ISqlServerInstancePropertiesInternal)Property).Version = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.SqlVersion)""); }

        /// <summary>Creates an new <see cref="SqlServerInstance" /> instance.</summary>
        public SqlServerInstance()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__trackedResource), __trackedResource);
            await eventListener.AssertObjectIsValid(nameof(__trackedResource), __trackedResource);
        }
    }
    /// A SqlServerInstance.
    public partial interface ISqlServerInstance :
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api30.ITrackedResource
    {
        /// <summary>Status of Azure Defender.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Status of Azure Defender.",
        SerializedName = @"azureDefenderStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.DefenderStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.DefenderStatus? AzureDefenderStatus { get; set; }
        /// <summary>Timestamp of last Azure Defender status update.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Timestamp of last Azure Defender status update.",
        SerializedName = @"azureDefenderStatusLastUpdated",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? AzureDefenderStatusLastUpdated { get; set; }
        /// <summary>SQL Server collation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"SQL Server collation.",
        SerializedName = @"collation",
        PossibleTypes = new [] { typeof(string) })]
        string Collation { get; set; }
        /// <summary>ARM Resource id of the container resource (Azure Arc for Servers).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ARM Resource id of the container resource (Azure Arc for Servers).",
        SerializedName = @"containerResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string ContainerResourceId { get; set; }
        /// <summary>The time when the resource was created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The time when the resource was created.",
        SerializedName = @"createTime",
        PossibleTypes = new [] { typeof(string) })]
        string CreateTime { get;  }
        /// <summary>SQL Server current version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"SQL Server current version.",
        SerializedName = @"currentVersion",
        PossibleTypes = new [] { typeof(string) })]
        string CurrentVersion { get; set; }
        /// <summary>SQL Server edition.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"SQL Server edition.",
        SerializedName = @"edition",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.EditionType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.EditionType? Edition { get; set; }
        /// <summary>Type of host for Azure Arc SQL Server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of host for Azure Arc SQL Server",
        SerializedName = @"hostType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.HostType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.HostType? HostType { get; set; }
        /// <summary>SQL Server instance name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"SQL Server instance name.",
        SerializedName = @"instanceName",
        PossibleTypes = new [] { typeof(string) })]
        string InstanceName { get; set; }
        /// <summary>SQL Server license type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"SQL Server license type.",
        SerializedName = @"licenseType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.ArcSqlServerLicenseType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.ArcSqlServerLicenseType? LicenseType { get; set; }
        /// <summary>SQL Server update level.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"SQL Server update level.",
        SerializedName = @"patchLevel",
        PossibleTypes = new [] { typeof(string) })]
        string PatchLevel { get; set; }
        /// <summary>SQL Server product ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"SQL Server product ID.",
        SerializedName = @"productId",
        PossibleTypes = new [] { typeof(string) })]
        string ProductId { get; set; }
        /// <summary>The provisioning state of the Arc-enabled SQL Server resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state of the Arc-enabled SQL Server resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>The cloud connectivity status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The cloud connectivity status.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.ConnectionStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.ConnectionStatus? Status { get; set; }
        /// <summary>Dynamic TCP ports used by SQL Server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Dynamic TCP ports used by SQL Server.",
        SerializedName = @"tcpDynamicPorts",
        PossibleTypes = new [] { typeof(string) })]
        string TcpDynamicPort { get; set; }
        /// <summary>Static TCP ports used by SQL Server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Static TCP ports used by SQL Server.",
        SerializedName = @"tcpStaticPorts",
        PossibleTypes = new [] { typeof(string) })]
        string TcpStaticPort { get; set; }
        /// <summary>The number of logical processors used by the SQL Server instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of logical processors used by the SQL Server instance.",
        SerializedName = @"vCore",
        PossibleTypes = new [] { typeof(string) })]
        string VCore { get; set; }
        /// <summary>SQL Server version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Arc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"SQL Server version.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.SqlVersion) })]
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.SqlVersion? Version { get; set; }

    }
    /// A SqlServerInstance.
    internal partial interface ISqlServerInstanceInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api30.ITrackedResourceInternal
    {
        /// <summary>Status of Azure Defender.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.DefenderStatus? AzureDefenderStatus { get; set; }
        /// <summary>Timestamp of last Azure Defender status update.</summary>
        global::System.DateTime? AzureDefenderStatusLastUpdated { get; set; }
        /// <summary>SQL Server collation.</summary>
        string Collation { get; set; }
        /// <summary>ARM Resource id of the container resource (Azure Arc for Servers).</summary>
        string ContainerResourceId { get; set; }
        /// <summary>The time when the resource was created.</summary>
        string CreateTime { get; set; }
        /// <summary>SQL Server current version.</summary>
        string CurrentVersion { get; set; }
        /// <summary>SQL Server edition.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.EditionType? Edition { get; set; }
        /// <summary>Type of host for Azure Arc SQL Server</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.HostType? HostType { get; set; }
        /// <summary>SQL Server instance name.</summary>
        string InstanceName { get; set; }
        /// <summary>SQL Server license type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.ArcSqlServerLicenseType? LicenseType { get; set; }
        /// <summary>SQL Server update level.</summary>
        string PatchLevel { get; set; }
        /// <summary>SQL Server product ID.</summary>
        string ProductId { get; set; }
        /// <summary>null</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Models.Api20220301Preview.ISqlServerInstanceProperties Property { get; set; }
        /// <summary>The provisioning state of the Arc-enabled SQL Server resource.</summary>
        string ProvisioningState { get; set; }
        /// <summary>The cloud connectivity status.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.ConnectionStatus? Status { get; set; }
        /// <summary>Dynamic TCP ports used by SQL Server.</summary>
        string TcpDynamicPort { get; set; }
        /// <summary>Static TCP ports used by SQL Server.</summary>
        string TcpStaticPort { get; set; }
        /// <summary>The number of logical processors used by the SQL Server instance.</summary>
        string VCore { get; set; }
        /// <summary>SQL Server version.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Arc.Support.SqlVersion? Version { get; set; }

    }
}