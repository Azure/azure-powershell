// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Runtime.Extensions;

    /// <summary>Definition of the EnterprisePolicy.</summary>
    public partial class PatchEnterprisePolicy :
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPatchEnterprisePolicy,
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPatchEnterprisePolicyInternal,
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.ApiV1.IPatchTrackedResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.ApiV1.IPatchTrackedResource __patchTrackedResource = new Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.ApiV1.PatchTrackedResource();

        /// <summary>The state of onboarding, which only appears in the response.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.State? EncryptionState { get => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)Property).EncryptionState; set => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)Property).EncryptionState = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.State)""); }

        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api10.IResourceInternal)__patchTrackedResource).Id; }

        /// <summary>Backing field for <see cref="Identity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IEnterprisePolicyIdentity _identity;

        /// <summary>The identity of the EnterprisePolicy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IEnterprisePolicyIdentity Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.EnterprisePolicyIdentity()); set => this._identity = value; }

        /// <summary>The principal id of EnterprisePolicy identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.PropertyOrigin.Inlined)]
        public string IdentitySystemAssignedIdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IEnterprisePolicyIdentityInternal)Identity).SystemAssignedIdentityPrincipalId; }

        /// <summary>The tenant id associated with the EnterprisePolicy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.PropertyOrigin.Inlined)]
        public string IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IEnterprisePolicyIdentityInternal)Identity).TenantId; }

        /// <summary>
        /// The type of identity used for the EnterprisePolicy. Currently, the only supported type is 'SystemAssigned', which implicitly
        /// creates an identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.ResourceIdentityType? IdentityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IEnterprisePolicyIdentityInternal)Identity).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IEnterprisePolicyIdentityInternal)Identity).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.ResourceIdentityType)""); }

        /// <summary>The identifier of the key vault key used to encrypt data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.PropertyOrigin.Inlined)]
        public string KeyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)Property).KeyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)Property).KeyName = value ?? null; }

        /// <summary>Uri of KeyVault</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.PropertyOrigin.Inlined)]
        public string KeyVaultId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)Property).KeyVaultId; set => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)Property).KeyVaultId = value ?? null; }

        /// <summary>The version of the identity which will be used to access key vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.PropertyOrigin.Inlined)]
        public string KeyVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)Property).KeyVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)Property).KeyVersion = value ?? null; }

        /// <summary>Backing field for <see cref="Kind" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.EnterprisePolicyKind? _kind;

        /// <summary>The kind (type) of Enterprise Policy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.EnterprisePolicyKind? Kind { get => this._kind; set => this._kind = value; }

        /// <summary>The geo-location where the resource lives</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.ApiV1.IPatchTrackedResourceInternal)__patchTrackedResource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.ApiV1.IPatchTrackedResourceInternal)__patchTrackedResource).Location = value ?? null; }

        /// <summary>lockbox configuration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.State? LockboxState { get => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)Property).LockboxState; set => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)Property).LockboxState = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.State)""); }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api10.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api10.IResourceInternal)__patchTrackedResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api10.IResourceInternal)__patchTrackedResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api10.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api10.IResourceInternal)__patchTrackedResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api10.IResourceInternal)__patchTrackedResource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api10.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api10.IResourceInternal)__patchTrackedResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api10.IResourceInternal)__patchTrackedResource).Type = value; }

        /// <summary>Internal Acessors for Encryption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesEncryption Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPatchEnterprisePolicyInternal.Encryption { get => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)Property).Encryption; set => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)Property).Encryption = value; }

        /// <summary>Internal Acessors for EncryptionKeyVault</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IKeyVaultProperties Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPatchEnterprisePolicyInternal.EncryptionKeyVault { get => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)Property).EncryptionKeyVault; set => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)Property).EncryptionKeyVault = value; }

        /// <summary>Internal Acessors for Identity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IEnterprisePolicyIdentity Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPatchEnterprisePolicyInternal.Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.EnterprisePolicyIdentity()); set { {_identity = value;} } }

        /// <summary>Internal Acessors for IdentitySystemAssignedIdentityPrincipalId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPatchEnterprisePolicyInternal.IdentitySystemAssignedIdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IEnterprisePolicyIdentityInternal)Identity).SystemAssignedIdentityPrincipalId; set => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IEnterprisePolicyIdentityInternal)Identity).SystemAssignedIdentityPrincipalId = value; }

        /// <summary>Internal Acessors for IdentityTenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPatchEnterprisePolicyInternal.IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IEnterprisePolicyIdentityInternal)Identity).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IEnterprisePolicyIdentityInternal)Identity).TenantId = value; }

        /// <summary>Internal Acessors for KeyVaultKey</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IKeyProperties Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPatchEnterprisePolicyInternal.KeyVaultKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)Property).KeyVaultKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)Property).KeyVaultKey = value; }

        /// <summary>Internal Acessors for Lockbox</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesLockbox Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPatchEnterprisePolicyInternal.Lockbox { get => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)Property).Lockbox; set => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)Property).Lockbox = value; }

        /// <summary>Internal Acessors for NetworkInjection</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesNetworkInjection Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPatchEnterprisePolicyInternal.NetworkInjection { get => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)Property).NetworkInjection; set => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)Property).NetworkInjection = value; }

        /// <summary>Internal Acessors for NetworkInjectionVirtualNetwork</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IVirtualNetworkPropertiesList Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPatchEnterprisePolicyInternal.NetworkInjectionVirtualNetwork { get => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)Property).NetworkInjectionVirtualNetwork; set => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)Property).NetworkInjectionVirtualNetwork = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IProperties Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPatchEnterprisePolicyInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.Properties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20.ISystemData Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPatchEnterprisePolicyInternal.SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20.SystemData()); set { {_systemData = value;} } }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api10.IResourceInternal)__patchTrackedResource).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IProperties _property;

        /// <summary>The properties that define configuration for the enterprise policy</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.Properties()); set => this._property = value; }

        /// <summary>Backing field for <see cref="SystemData" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20.ISystemData _systemData;

        /// <summary>Metadata pertaining to creation and last modification of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20.ISystemData SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20.SystemData()); }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20.ISystemDataInternal)SystemData).CreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20.ISystemDataInternal)SystemData).CreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.PropertyOrigin.Inlined)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20.ISystemDataInternal)SystemData).CreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20.ISystemDataInternal)SystemData).CreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20.ISystemDataInternal)SystemData).CreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20.ISystemDataInternal)SystemData).CreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20.ISystemDataInternal)SystemData).LastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20.ISystemDataInternal)SystemData).LastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.PropertyOrigin.Inlined)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20.ISystemDataInternal)SystemData).LastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20.ISystemDataInternal)SystemData).LastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20.ISystemDataInternal)SystemData).LastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20.ISystemDataInternal)SystemData).LastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.CreatedByType)""); }

        /// <summary>Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.ApiV1.IPatchTrackedResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.ApiV1.IPatchTrackedResourceInternal)__patchTrackedResource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.ApiV1.IPatchTrackedResourceInternal)__patchTrackedResource).Tag = value ?? null /* model class */; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api10.IResourceInternal)__patchTrackedResource).Type; }

        /// <summary>Next page link if any.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.PropertyOrigin.Inlined)]
        public string VirtualNetworkNextLink { get => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)Property).VirtualNetworkNextLink; set => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)Property).VirtualNetworkNextLink = value ?? null; }

        /// <summary>Array of virtual networks.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IVirtualNetworkProperties[] VirtualNetworkValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)Property).VirtualNetworkValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesInternal)Property).VirtualNetworkValue = value ?? null /* arrayOf */; }

        /// <summary>Creates an new <see cref="PatchEnterprisePolicy" /> instance.</summary>
        public PatchEnterprisePolicy()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__patchTrackedResource), __patchTrackedResource);
            await eventListener.AssertObjectIsValid(nameof(__patchTrackedResource), __patchTrackedResource);
        }
    }
    /// Definition of the EnterprisePolicy.
    public partial interface IPatchEnterprisePolicy :
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.ApiV1.IPatchTrackedResource
    {
        /// <summary>The state of onboarding, which only appears in the response.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The state of onboarding, which only appears in the response.",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.State) })]
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.State? EncryptionState { get; set; }
        /// <summary>The principal id of EnterprisePolicy identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The principal id of EnterprisePolicy identity.",
        SerializedName = @"systemAssignedIdentityPrincipalId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentitySystemAssignedIdentityPrincipalId { get;  }
        /// <summary>The tenant id associated with the EnterprisePolicy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The tenant id associated with the EnterprisePolicy.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityTenantId { get;  }
        /// <summary>
        /// The type of identity used for the EnterprisePolicy. Currently, the only supported type is 'SystemAssigned', which implicitly
        /// creates an identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity used for the EnterprisePolicy. Currently, the only supported type is 'SystemAssigned', which implicitly creates an identity.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.ResourceIdentityType) })]
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.ResourceIdentityType? IdentityType { get; set; }
        /// <summary>The identifier of the key vault key used to encrypt data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identifier of the key vault key used to encrypt data.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string KeyName { get; set; }
        /// <summary>Uri of KeyVault</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Uri of KeyVault",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultId { get; set; }
        /// <summary>The version of the identity which will be used to access key vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The version of the identity which will be used to access key vault.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVersion { get; set; }
        /// <summary>The kind (type) of Enterprise Policy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The kind (type) of Enterprise Policy.",
        SerializedName = @"kind",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.EnterprisePolicyKind) })]
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.EnterprisePolicyKind? Kind { get; set; }
        /// <summary>lockbox configuration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"lockbox configuration",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.State) })]
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.State? LockboxState { get; set; }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp of resource creation (UTC).",
        SerializedName = @"createdAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity that created the resource.",
        SerializedName = @"createdBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity that created the resource.",
        SerializedName = @"createdByType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.CreatedByType) })]
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.CreatedByType? SystemDataCreatedByType { get; set; }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp of resource last modification (UTC)",
        SerializedName = @"lastModifiedAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity that last modified the resource.",
        SerializedName = @"lastModifiedBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity that last modified the resource.",
        SerializedName = @"lastModifiedByType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.CreatedByType) })]
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.CreatedByType? SystemDataLastModifiedByType { get; set; }
        /// <summary>Next page link if any.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Next page link if any.",
        SerializedName = @"nextLink",
        PossibleTypes = new [] { typeof(string) })]
        string VirtualNetworkNextLink { get; set; }
        /// <summary>Array of virtual networks.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Array of virtual networks.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IVirtualNetworkProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IVirtualNetworkProperties[] VirtualNetworkValue { get; set; }

    }
    /// Definition of the EnterprisePolicy.
    internal partial interface IPatchEnterprisePolicyInternal :
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.ApiV1.IPatchTrackedResourceInternal
    {
        /// <summary>The encryption settings for a configuration store.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesEncryption Encryption { get; set; }
        /// <summary>Key vault properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IKeyVaultProperties EncryptionKeyVault { get; set; }
        /// <summary>The state of onboarding, which only appears in the response.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.State? EncryptionState { get; set; }
        /// <summary>The identity of the EnterprisePolicy.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IEnterprisePolicyIdentity Identity { get; set; }
        /// <summary>The principal id of EnterprisePolicy identity.</summary>
        string IdentitySystemAssignedIdentityPrincipalId { get; set; }
        /// <summary>The tenant id associated with the EnterprisePolicy.</summary>
        string IdentityTenantId { get; set; }
        /// <summary>
        /// The type of identity used for the EnterprisePolicy. Currently, the only supported type is 'SystemAssigned', which implicitly
        /// creates an identity.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.ResourceIdentityType? IdentityType { get; set; }
        /// <summary>The identifier of the key vault key used to encrypt data.</summary>
        string KeyName { get; set; }
        /// <summary>Uri of KeyVault</summary>
        string KeyVaultId { get; set; }
        /// <summary>Identity of the secret that includes name and version.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IKeyProperties KeyVaultKey { get; set; }
        /// <summary>The version of the identity which will be used to access key vault.</summary>
        string KeyVersion { get; set; }
        /// <summary>The kind (type) of Enterprise Policy.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.EnterprisePolicyKind? Kind { get; set; }
        /// <summary>Settings concerning lockbox.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesLockbox Lockbox { get; set; }
        /// <summary>lockbox configuration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.State? LockboxState { get; set; }
        /// <summary>Settings concerning network injection.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IPropertiesNetworkInjection NetworkInjection { get; set; }
        /// <summary>Network injection configuration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IVirtualNetworkPropertiesList NetworkInjectionVirtualNetwork { get; set; }
        /// <summary>The properties that define configuration for the enterprise policy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IProperties Property { get; set; }
        /// <summary>Metadata pertaining to creation and last modification of the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20.ISystemData SystemData { get; set; }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        global::System.DateTime? SystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        string SystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.CreatedByType? SystemDataCreatedByType { get; set; }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        global::System.DateTime? SystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        string SystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Support.CreatedByType? SystemDataLastModifiedByType { get; set; }
        /// <summary>Next page link if any.</summary>
        string VirtualNetworkNextLink { get; set; }
        /// <summary>Array of virtual networks.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PowerPlatform.Models.Api20201030Preview.IVirtualNetworkProperties[] VirtualNetworkValue { get; set; }

    }
}