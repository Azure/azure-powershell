// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501
{
    using Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.PowerShell;

    /// <summary>availabilityStatus of a resource.</summary>
    [System.ComponentModel.TypeConverter(typeof(AvailabilityStatusTypeConverter))]
    public partial class AvailabilityStatus
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.AvailabilityStatus"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal AvailabilityStatus(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.AvailabilityStatusPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("RecentlyResolved"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).RecentlyResolved = (Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusPropertiesRecentlyResolved) content.GetValueForProperty("RecentlyResolved",((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).RecentlyResolved, Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.AvailabilityStatusPropertiesRecentlyResolvedTypeConverter.ConvertFrom);
            }
            if (content.Contains("AvailabilityState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).AvailabilityState = (Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.AvailabilityStateValues?) content.GetValueForProperty("AvailabilityState",((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).AvailabilityState, Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.AvailabilityStateValues.CreateFrom);
            }
            if (content.Contains("Title"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).Title = (string) content.GetValueForProperty("Title",((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).Title, global::System.Convert.ToString);
            }
            if (content.Contains("Summary"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).Summary = (string) content.GetValueForProperty("Summary",((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).Summary, global::System.Convert.ToString);
            }
            if (content.Contains("DetailedStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).DetailedStatus = (string) content.GetValueForProperty("DetailedStatus",((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).DetailedStatus, global::System.Convert.ToString);
            }
            if (content.Contains("ReasonType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).ReasonType = (string) content.GetValueForProperty("ReasonType",((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).ReasonType, global::System.Convert.ToString);
            }
            if (content.Contains("RootCauseAttributionTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).RootCauseAttributionTime = (global::System.DateTime?) content.GetValueForProperty("RootCauseAttributionTime",((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).RootCauseAttributionTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("HealthEventType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).HealthEventType = (string) content.GetValueForProperty("HealthEventType",((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).HealthEventType, global::System.Convert.ToString);
            }
            if (content.Contains("HealthEventCause"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).HealthEventCause = (string) content.GetValueForProperty("HealthEventCause",((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).HealthEventCause, global::System.Convert.ToString);
            }
            if (content.Contains("HealthEventCategory"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).HealthEventCategory = (string) content.GetValueForProperty("HealthEventCategory",((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).HealthEventCategory, global::System.Convert.ToString);
            }
            if (content.Contains("HealthEventId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).HealthEventId = (string) content.GetValueForProperty("HealthEventId",((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).HealthEventId, global::System.Convert.ToString);
            }
            if (content.Contains("ResolutionEta"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).ResolutionEta = (global::System.DateTime?) content.GetValueForProperty("ResolutionEta",((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).ResolutionEta, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("OccurredTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).OccurredTime = (global::System.DateTime?) content.GetValueForProperty("OccurredTime",((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).OccurredTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ReasonChronicity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).ReasonChronicity = (Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.ReasonChronicityTypes?) content.GetValueForProperty("ReasonChronicity",((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).ReasonChronicity, Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.ReasonChronicityTypes.CreateFrom);
            }
            if (content.Contains("ReportedTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).ReportedTime = (global::System.DateTime?) content.GetValueForProperty("ReportedTime",((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).ReportedTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("RecommendedAction"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).RecommendedAction = (Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IRecommendedAction[]) content.GetValueForProperty("RecommendedAction",((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).RecommendedAction, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IRecommendedAction>(__y, Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.RecommendedActionTypeConverter.ConvertFrom));
            }
            if (content.Contains("ServiceImpactingEvent"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).ServiceImpactingEvent = (Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IServiceImpactingEvent[]) content.GetValueForProperty("ServiceImpactingEvent",((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).ServiceImpactingEvent, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IServiceImpactingEvent>(__y, Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.ServiceImpactingEventTypeConverter.ConvertFrom));
            }
            if (content.Contains("RecentlyResolvedUnavailableOccurredTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).RecentlyResolvedUnavailableOccurredTime = (global::System.DateTime?) content.GetValueForProperty("RecentlyResolvedUnavailableOccurredTime",((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).RecentlyResolvedUnavailableOccurredTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("RecentlyResolvedTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).RecentlyResolvedTime = (global::System.DateTime?) content.GetValueForProperty("RecentlyResolvedTime",((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).RecentlyResolvedTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("RecentlyResolvedUnavailabilitySummary"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).RecentlyResolvedUnavailabilitySummary = (string) content.GetValueForProperty("RecentlyResolvedUnavailabilitySummary",((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).RecentlyResolvedUnavailabilitySummary, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.AvailabilityStatus"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal AvailabilityStatus(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.AvailabilityStatusPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("RecentlyResolved"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).RecentlyResolved = (Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusPropertiesRecentlyResolved) content.GetValueForProperty("RecentlyResolved",((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).RecentlyResolved, Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.AvailabilityStatusPropertiesRecentlyResolvedTypeConverter.ConvertFrom);
            }
            if (content.Contains("AvailabilityState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).AvailabilityState = (Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.AvailabilityStateValues?) content.GetValueForProperty("AvailabilityState",((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).AvailabilityState, Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.AvailabilityStateValues.CreateFrom);
            }
            if (content.Contains("Title"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).Title = (string) content.GetValueForProperty("Title",((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).Title, global::System.Convert.ToString);
            }
            if (content.Contains("Summary"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).Summary = (string) content.GetValueForProperty("Summary",((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).Summary, global::System.Convert.ToString);
            }
            if (content.Contains("DetailedStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).DetailedStatus = (string) content.GetValueForProperty("DetailedStatus",((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).DetailedStatus, global::System.Convert.ToString);
            }
            if (content.Contains("ReasonType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).ReasonType = (string) content.GetValueForProperty("ReasonType",((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).ReasonType, global::System.Convert.ToString);
            }
            if (content.Contains("RootCauseAttributionTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).RootCauseAttributionTime = (global::System.DateTime?) content.GetValueForProperty("RootCauseAttributionTime",((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).RootCauseAttributionTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("HealthEventType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).HealthEventType = (string) content.GetValueForProperty("HealthEventType",((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).HealthEventType, global::System.Convert.ToString);
            }
            if (content.Contains("HealthEventCause"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).HealthEventCause = (string) content.GetValueForProperty("HealthEventCause",((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).HealthEventCause, global::System.Convert.ToString);
            }
            if (content.Contains("HealthEventCategory"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).HealthEventCategory = (string) content.GetValueForProperty("HealthEventCategory",((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).HealthEventCategory, global::System.Convert.ToString);
            }
            if (content.Contains("HealthEventId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).HealthEventId = (string) content.GetValueForProperty("HealthEventId",((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).HealthEventId, global::System.Convert.ToString);
            }
            if (content.Contains("ResolutionEta"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).ResolutionEta = (global::System.DateTime?) content.GetValueForProperty("ResolutionEta",((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).ResolutionEta, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("OccurredTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).OccurredTime = (global::System.DateTime?) content.GetValueForProperty("OccurredTime",((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).OccurredTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ReasonChronicity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).ReasonChronicity = (Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.ReasonChronicityTypes?) content.GetValueForProperty("ReasonChronicity",((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).ReasonChronicity, Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.ReasonChronicityTypes.CreateFrom);
            }
            if (content.Contains("ReportedTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).ReportedTime = (global::System.DateTime?) content.GetValueForProperty("ReportedTime",((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).ReportedTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("RecommendedAction"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).RecommendedAction = (Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IRecommendedAction[]) content.GetValueForProperty("RecommendedAction",((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).RecommendedAction, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IRecommendedAction>(__y, Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.RecommendedActionTypeConverter.ConvertFrom));
            }
            if (content.Contains("ServiceImpactingEvent"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).ServiceImpactingEvent = (Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IServiceImpactingEvent[]) content.GetValueForProperty("ServiceImpactingEvent",((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).ServiceImpactingEvent, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IServiceImpactingEvent>(__y, Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.ServiceImpactingEventTypeConverter.ConvertFrom));
            }
            if (content.Contains("RecentlyResolvedUnavailableOccurredTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).RecentlyResolvedUnavailableOccurredTime = (global::System.DateTime?) content.GetValueForProperty("RecentlyResolvedUnavailableOccurredTime",((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).RecentlyResolvedUnavailableOccurredTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("RecentlyResolvedTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).RecentlyResolvedTime = (global::System.DateTime?) content.GetValueForProperty("RecentlyResolvedTime",((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).RecentlyResolvedTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("RecentlyResolvedUnavailabilitySummary"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).RecentlyResolvedUnavailabilitySummary = (string) content.GetValueForProperty("RecentlyResolvedUnavailabilitySummary",((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatusInternal)this).RecentlyResolvedUnavailabilitySummary, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.AvailabilityStatus"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatus" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatus DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new AvailabilityStatus(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.AvailabilityStatus"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatus" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatus DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new AvailabilityStatus(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="AvailabilityStatus" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="AvailabilityStatus" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20200501.IAvailabilityStatus FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// availabilityStatus of a resource.
    [System.ComponentModel.TypeConverter(typeof(AvailabilityStatusTypeConverter))]
    public partial interface IAvailabilityStatus

    {

    }
}