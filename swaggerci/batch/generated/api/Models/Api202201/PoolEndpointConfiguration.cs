// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Extensions;

    /// <summary>The endpoint configuration for a pool.</summary>
    public partial class PoolEndpointConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IPoolEndpointConfiguration,
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IPoolEndpointConfigurationInternal
    {

        /// <summary>Backing field for <see cref="InboundNatPool" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IInboundNatPool[] _inboundNatPool;

        /// <summary>
        /// The maximum number of inbound NAT pools per Batch pool is 5. If the maximum number of inbound NAT pools is exceeded the
        /// request fails with HTTP status code 400. This cannot be specified if the IPAddressProvisioningType is NoPublicIPAddresses.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IInboundNatPool[] InboundNatPool { get => this._inboundNatPool; set => this._inboundNatPool = value; }

        /// <summary>Creates an new <see cref="PoolEndpointConfiguration" /> instance.</summary>
        public PoolEndpointConfiguration()
        {

        }
    }
    /// The endpoint configuration for a pool.
    public partial interface IPoolEndpointConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The maximum number of inbound NAT pools per Batch pool is 5. If the maximum number of inbound NAT pools is exceeded the
        /// request fails with HTTP status code 400. This cannot be specified if the IPAddressProvisioningType is NoPublicIPAddresses.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The maximum number of inbound NAT pools per Batch pool is 5. If the maximum number of inbound NAT pools is exceeded the request fails with HTTP status code 400. This cannot be specified if the IPAddressProvisioningType is NoPublicIPAddresses.",
        SerializedName = @"inboundNatPools",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IInboundNatPool) })]
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IInboundNatPool[] InboundNatPool { get; set; }

    }
    /// The endpoint configuration for a pool.
    internal partial interface IPoolEndpointConfigurationInternal

    {
        /// <summary>
        /// The maximum number of inbound NAT pools per Batch pool is 5. If the maximum number of inbound NAT pools is exceeded the
        /// request fails with HTTP status code 400. This cannot be specified if the IPAddressProvisioningType is NoPublicIPAddresses.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IInboundNatPool[] InboundNatPool { get; set; }

    }
}