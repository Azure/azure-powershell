// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Extensions;

    /// <summary>Contains information about a certificate.</summary>
    public partial class Certificate :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificate,
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificateInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.IValidates,
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.IHeaderSerializable
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IProxyResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IProxyResource __proxyResource = new Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ProxyResource();

        /// <summary>
        /// An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public string DeleteCertificateErrorCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificatePropertiesInternal)Property).DeleteCertificateErrorCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificatePropertiesInternal)Property).DeleteCertificateErrorCode = value ?? null; }

        /// <summary>A list of additional details about the error.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeleteCertificateError[] DeleteCertificateErrorDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificatePropertiesInternal)Property).DeleteCertificateErrorDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificatePropertiesInternal)Property).DeleteCertificateErrorDetail = value ?? null /* arrayOf */; }

        /// <summary>
        /// A message describing the error, intended to be suitable for display in a user interface.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public string DeleteCertificateErrorMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificatePropertiesInternal)Property).DeleteCertificateErrorMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificatePropertiesInternal)Property).DeleteCertificateErrorMessage = value ?? null; }

        /// <summary>
        /// The target of the particular error. For example, the name of the property in error.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public string DeleteCertificateErrorTarget { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificatePropertiesInternal)Property).DeleteCertificateErrorTarget; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificatePropertiesInternal)Property).DeleteCertificateErrorTarget = value ?? null; }

        /// <summary>Backing field for <see cref="ETag" /> property.</summary>
        private string _eTag;

        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string ETag { get => this._eTag; set => this._eTag = value; }

        /// <summary>The ETag of the resource, used for concurrency statements.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inherited)]
        public string Etag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IProxyResourceInternal)__proxyResource).Etag; }

        /// <summary>
        /// The format of the certificate - either Pfx or Cer. If omitted, the default is Pfx.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.CertificateFormat? Format { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificateBasePropertiesInternal)Property).Format; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificateBasePropertiesInternal)Property).Format = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.CertificateFormat)""); }

        /// <summary>The ID of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IProxyResourceInternal)__proxyResource).Id; }

        /// <summary>Internal Acessors for DeleteCertificateError</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeleteCertificateError Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificateInternal.DeleteCertificateError { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificatePropertiesInternal)Property).DeleteCertificateError; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificatePropertiesInternal)Property).DeleteCertificateError = value; }

        /// <summary>Internal Acessors for PreviousProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.CertificateProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificateInternal.PreviousProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificatePropertiesInternal)Property).PreviousProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificatePropertiesInternal)Property).PreviousProvisioningState = value; }

        /// <summary>Internal Acessors for PreviousProvisioningStateTransitionTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificateInternal.PreviousProvisioningStateTransitionTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificatePropertiesInternal)Property).PreviousProvisioningStateTransitionTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificatePropertiesInternal)Property).PreviousProvisioningStateTransitionTime = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificateProperties Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificateInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.CertificateProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.CertificateProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificateInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificatePropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificatePropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for ProvisioningStateTransitionTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificateInternal.ProvisioningStateTransitionTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificatePropertiesInternal)Property).ProvisioningStateTransitionTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificatePropertiesInternal)Property).ProvisioningStateTransitionTime = value; }

        /// <summary>Internal Acessors for PublicData</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificateInternal.PublicData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificatePropertiesInternal)Property).PublicData; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificatePropertiesInternal)Property).PublicData = value; }

        /// <summary>Internal Acessors for Etag</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IProxyResourceInternal.Etag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IProxyResourceInternal)__proxyResource).Etag; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IProxyResourceInternal)__proxyResource).Etag = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IProxyResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IProxyResourceInternal)__proxyResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IProxyResourceInternal)__proxyResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IProxyResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IProxyResourceInternal)__proxyResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IProxyResourceInternal)__proxyResource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IProxyResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IProxyResourceInternal)__proxyResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IProxyResourceInternal)__proxyResource).Type = value; }

        /// <summary>The name of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IProxyResourceInternal)__proxyResource).Name; }

        /// <summary>The previous provisioned state of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.CertificateProvisioningState? PreviousProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificatePropertiesInternal)Property).PreviousProvisioningState; }

        /// <summary>The time at which the certificate entered its previous state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public global::System.DateTime? PreviousProvisioningStateTransitionTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificatePropertiesInternal)Property).PreviousProvisioningStateTransitionTime; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificateProperties _property;

        /// <summary>The properties associated with the certificate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificateProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.CertificateProperties()); set => this._property = value; }

        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.CertificateProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificatePropertiesInternal)Property).ProvisioningState; }

        /// <summary>The time at which the certificate entered its current state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public global::System.DateTime? ProvisioningStateTransitionTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificatePropertiesInternal)Property).ProvisioningStateTransitionTime; }

        /// <summary>The public key of the certificate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public string PublicData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificatePropertiesInternal)Property).PublicData; }

        /// <summary>This must match the thumbprint from the name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public string Thumbprint { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificateBasePropertiesInternal)Property).Thumbprint; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificateBasePropertiesInternal)Property).Thumbprint = value ?? null; }

        /// <summary>
        /// This must match the first portion of the certificate name. Currently required to be 'SHA1'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public string ThumbprintAlgorithm { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificateBasePropertiesInternal)Property).ThumbprintAlgorithm; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificateBasePropertiesInternal)Property).ThumbprintAlgorithm = value ?? null; }

        /// <summary>The type of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IProxyResourceInternal)__proxyResource).Type; }

        /// <summary>Creates an new <see cref="Certificate" /> instance.</summary>
        public Certificate()
        {

        }

        /// <param name="headers"></param>
        void Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.IHeaderSerializable.ReadHeaders(global::System.Net.Http.Headers.HttpResponseHeaders headers)
        {
            if (headers.TryGetValues("ETag", out var __eTagHeader0))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificateInternal)this).ETag = System.Linq.Enumerable.FirstOrDefault(__eTagHeader0) is string __headerETagHeader0 ? __headerETagHeader0 : (string)null;
            }
        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__proxyResource), __proxyResource);
            await eventListener.AssertObjectIsValid(nameof(__proxyResource), __proxyResource);
        }
    }
    /// Contains information about a certificate.
    public partial interface ICertificate :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IProxyResource
    {
        /// <summary>
        /// An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"An identifier for the error. Codes are invariant and are intended to be consumed programmatically.",
        SerializedName = @"code",
        PossibleTypes = new [] { typeof(string) })]
        string DeleteCertificateErrorCode { get; set; }
        /// <summary>A list of additional details about the error.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of additional details about the error.",
        SerializedName = @"details",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeleteCertificateError) })]
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeleteCertificateError[] DeleteCertificateErrorDetail { get; set; }
        /// <summary>
        /// A message describing the error, intended to be suitable for display in a user interface.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A message describing the error, intended to be suitable for display in a user interface.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string DeleteCertificateErrorMessage { get; set; }
        /// <summary>
        /// The target of the particular error. For example, the name of the property in error.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The target of the particular error. For example, the name of the property in error.",
        SerializedName = @"target",
        PossibleTypes = new [] { typeof(string) })]
        string DeleteCertificateErrorTarget { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"ETag",
        PossibleTypes = new [] { typeof(string) })]
        string ETag { get; set; }
        /// <summary>
        /// The format of the certificate - either Pfx or Cer. If omitted, the default is Pfx.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The format of the certificate - either Pfx or Cer. If omitted, the default is Pfx.",
        SerializedName = @"format",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.CertificateFormat) })]
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.CertificateFormat? Format { get; set; }
        /// <summary>The previous provisioned state of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The previous provisioned state of the resource",
        SerializedName = @"previousProvisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.CertificateProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.CertificateProvisioningState? PreviousProvisioningState { get;  }
        /// <summary>The time at which the certificate entered its previous state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The time at which the certificate entered its previous state.",
        SerializedName = @"previousProvisioningStateTransitionTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? PreviousProvisioningStateTransitionTime { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.CertificateProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.CertificateProvisioningState? ProvisioningState { get;  }
        /// <summary>The time at which the certificate entered its current state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The time at which the certificate entered its current state.",
        SerializedName = @"provisioningStateTransitionTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ProvisioningStateTransitionTime { get;  }
        /// <summary>The public key of the certificate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The public key of the certificate.",
        SerializedName = @"publicData",
        PossibleTypes = new [] { typeof(string) })]
        string PublicData { get;  }
        /// <summary>This must match the thumbprint from the name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This must match the thumbprint from the name.",
        SerializedName = @"thumbprint",
        PossibleTypes = new [] { typeof(string) })]
        string Thumbprint { get; set; }
        /// <summary>
        /// This must match the first portion of the certificate name. Currently required to be 'SHA1'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This must match the first portion of the certificate name. Currently required to be 'SHA1'.",
        SerializedName = @"thumbprintAlgorithm",
        PossibleTypes = new [] { typeof(string) })]
        string ThumbprintAlgorithm { get; set; }

    }
    /// Contains information about a certificate.
    internal partial interface ICertificateInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IProxyResourceInternal
    {
        /// <summary>This is only returned when the certificate provisioningState is 'Failed'.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeleteCertificateError DeleteCertificateError { get; set; }
        /// <summary>
        /// An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
        /// </summary>
        string DeleteCertificateErrorCode { get; set; }
        /// <summary>A list of additional details about the error.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeleteCertificateError[] DeleteCertificateErrorDetail { get; set; }
        /// <summary>
        /// A message describing the error, intended to be suitable for display in a user interface.
        /// </summary>
        string DeleteCertificateErrorMessage { get; set; }
        /// <summary>
        /// The target of the particular error. For example, the name of the property in error.
        /// </summary>
        string DeleteCertificateErrorTarget { get; set; }

        string ETag { get; set; }
        /// <summary>
        /// The format of the certificate - either Pfx or Cer. If omitted, the default is Pfx.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.CertificateFormat? Format { get; set; }
        /// <summary>The previous provisioned state of the resource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.CertificateProvisioningState? PreviousProvisioningState { get; set; }
        /// <summary>The time at which the certificate entered its previous state.</summary>
        global::System.DateTime? PreviousProvisioningStateTransitionTime { get; set; }
        /// <summary>The properties associated with the certificate.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificateProperties Property { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.CertificateProvisioningState? ProvisioningState { get; set; }
        /// <summary>The time at which the certificate entered its current state.</summary>
        global::System.DateTime? ProvisioningStateTransitionTime { get; set; }
        /// <summary>The public key of the certificate.</summary>
        string PublicData { get; set; }
        /// <summary>This must match the thumbprint from the name.</summary>
        string Thumbprint { get; set; }
        /// <summary>
        /// This must match the first portion of the certificate name. Currently required to be 'SHA1'.
        /// </summary>
        string ThumbprintAlgorithm { get; set; }

    }
}