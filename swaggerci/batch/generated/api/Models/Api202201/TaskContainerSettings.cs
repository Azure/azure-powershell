// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Extensions;

    /// <summary>The container settings for a task.</summary>
    public partial class TaskContainerSettings :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ITaskContainerSettings,
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ITaskContainerSettingsInternal
    {

        /// <summary>Backing field for <see cref="ContainerRunOption" /> property.</summary>
        private string _containerRunOption;

        /// <summary>
        /// These additional options are supplied as arguments to the "docker create" command, in addition to those controlled by
        /// the Batch Service.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string ContainerRunOption { get => this._containerRunOption; set => this._containerRunOption = value; }

        /// <summary>The ARM resource id of the user assigned identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public string IdentityReferenceResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IContainerRegistryInternal)Registry).IdentityReferenceResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IContainerRegistryInternal)Registry).IdentityReferenceResourceId = value ?? null; }

        /// <summary>Backing field for <see cref="ImageName" /> property.</summary>
        private string _imageName;

        /// <summary>
        /// This is the full image reference, as would be specified to "docker pull". If no tag is provided as part of the image name,
        /// the tag ":latest" is used as a default.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string ImageName { get => this._imageName; set => this._imageName = value; }

        /// <summary>Internal Acessors for Registry</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IContainerRegistry Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ITaskContainerSettingsInternal.Registry { get => (this._registry = this._registry ?? new Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ContainerRegistry()); set { {_registry = value;} } }

        /// <summary>Internal Acessors for RegistryIdentityReference</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IComputeNodeIdentityReference Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ITaskContainerSettingsInternal.RegistryIdentityReference { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IContainerRegistryInternal)Registry).IdentityReference; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IContainerRegistryInternal)Registry).IdentityReference = value; }

        /// <summary>Backing field for <see cref="Registry" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IContainerRegistry _registry;

        /// <summary>This setting can be omitted if was already provided at pool creation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IContainerRegistry Registry { get => (this._registry = this._registry ?? new Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ContainerRegistry()); set => this._registry = value; }

        /// <summary>The password to log into the registry server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public string RegistryPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IContainerRegistryInternal)Registry).Password; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IContainerRegistryInternal)Registry).Password = value ?? null; }

        /// <summary>If omitted, the default is "docker.io".</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public string RegistryServer { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IContainerRegistryInternal)Registry).RegistryServer; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IContainerRegistryInternal)Registry).RegistryServer = value ?? null; }

        /// <summary>The user name to log into the registry server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public string RegistryUserName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IContainerRegistryInternal)Registry).UserName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IContainerRegistryInternal)Registry).UserName = value ?? null; }

        /// <summary>Backing field for <see cref="WorkingDirectory" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.ContainerWorkingDirectory? _workingDirectory;

        /// <summary>
        /// A flag to indicate where the container task working directory is. The default is 'taskWorkingDirectory'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.ContainerWorkingDirectory? WorkingDirectory { get => this._workingDirectory; set => this._workingDirectory = value; }

        /// <summary>Creates an new <see cref="TaskContainerSettings" /> instance.</summary>
        public TaskContainerSettings()
        {

        }
    }
    /// The container settings for a task.
    public partial interface ITaskContainerSettings :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.IJsonSerializable
    {
        /// <summary>
        /// These additional options are supplied as arguments to the "docker create" command, in addition to those controlled by
        /// the Batch Service.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"These additional options are supplied as arguments to the ""docker create"" command, in addition to those controlled by the Batch Service.",
        SerializedName = @"containerRunOptions",
        PossibleTypes = new [] { typeof(string) })]
        string ContainerRunOption { get; set; }
        /// <summary>The ARM resource id of the user assigned identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ARM resource id of the user assigned identity.",
        SerializedName = @"resourceId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityReferenceResourceId { get; set; }
        /// <summary>
        /// This is the full image reference, as would be specified to "docker pull". If no tag is provided as part of the image name,
        /// the tag ":latest" is used as a default.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"This is the full image reference, as would be specified to ""docker pull"". If no tag is provided as part of the image name, the tag "":latest"" is used as a default.",
        SerializedName = @"imageName",
        PossibleTypes = new [] { typeof(string) })]
        string ImageName { get; set; }
        /// <summary>The password to log into the registry server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The password to log into the registry server.",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(string) })]
        string RegistryPassword { get; set; }
        /// <summary>If omitted, the default is "docker.io".</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If omitted, the default is ""docker.io"".",
        SerializedName = @"registryServer",
        PossibleTypes = new [] { typeof(string) })]
        string RegistryServer { get; set; }
        /// <summary>The user name to log into the registry server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The user name to log into the registry server.",
        SerializedName = @"username",
        PossibleTypes = new [] { typeof(string) })]
        string RegistryUserName { get; set; }
        /// <summary>
        /// A flag to indicate where the container task working directory is. The default is 'taskWorkingDirectory'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A flag to indicate where the container task working directory is. The default is 'taskWorkingDirectory'.",
        SerializedName = @"workingDirectory",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.ContainerWorkingDirectory) })]
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.ContainerWorkingDirectory? WorkingDirectory { get; set; }

    }
    /// The container settings for a task.
    internal partial interface ITaskContainerSettingsInternal

    {
        /// <summary>
        /// These additional options are supplied as arguments to the "docker create" command, in addition to those controlled by
        /// the Batch Service.
        /// </summary>
        string ContainerRunOption { get; set; }
        /// <summary>The ARM resource id of the user assigned identity.</summary>
        string IdentityReferenceResourceId { get; set; }
        /// <summary>
        /// This is the full image reference, as would be specified to "docker pull". If no tag is provided as part of the image name,
        /// the tag ":latest" is used as a default.
        /// </summary>
        string ImageName { get; set; }
        /// <summary>This setting can be omitted if was already provided at pool creation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IContainerRegistry Registry { get; set; }
        /// <summary>
        /// The reference to a user assigned identity associated with the Batch pool which a compute node will use.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IComputeNodeIdentityReference RegistryIdentityReference { get; set; }
        /// <summary>The password to log into the registry server.</summary>
        string RegistryPassword { get; set; }
        /// <summary>If omitted, the default is "docker.io".</summary>
        string RegistryServer { get; set; }
        /// <summary>The user name to log into the registry server.</summary>
        string RegistryUserName { get; set; }
        /// <summary>
        /// A flag to indicate where the container task working directory is. The default is 'taskWorkingDirectory'.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.ContainerWorkingDirectory? WorkingDirectory { get; set; }

    }
}