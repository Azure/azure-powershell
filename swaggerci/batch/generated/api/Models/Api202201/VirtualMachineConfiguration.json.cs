// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Extensions;

    /// <summary>
    /// The configuration for compute nodes in a pool based on the Azure Virtual Machines infrastructure.
    /// </summary>
    public partial class VirtualMachineConfiguration
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json erialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IVirtualMachineConfiguration.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IVirtualMachineConfiguration.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IVirtualMachineConfiguration FromJson(Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonObject json ? new VirtualMachineConfiguration(json) : null;
        }

        /// <summary>
        /// Serializes this instance of <see cref="VirtualMachineConfiguration" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="VirtualMachineConfiguration" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != this._imageReference ? (Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonNode) this._imageReference.ToJson(null,serializationMode) : null, "imageReference" ,container.Add );
            AddIf( null != this._windowsConfiguration ? (Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonNode) this._windowsConfiguration.ToJson(null,serializationMode) : null, "windowsConfiguration" ,container.Add );
            AddIf( null != this._containerConfiguration ? (Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonNode) this._containerConfiguration.ToJson(null,serializationMode) : null, "containerConfiguration" ,container.Add );
            AddIf( null != this._diskEncryptionConfiguration ? (Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonNode) this._diskEncryptionConfiguration.ToJson(null,serializationMode) : null, "diskEncryptionConfiguration" ,container.Add );
            AddIf( null != this._nodePlacementConfiguration ? (Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonNode) this._nodePlacementConfiguration.ToJson(null,serializationMode) : null, "nodePlacementConfiguration" ,container.Add );
            AddIf( null != this._oSDisk ? (Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonNode) this._oSDisk.ToJson(null,serializationMode) : null, "osDisk" ,container.Add );
            AddIf( null != (((object)this._nodeAgentSkuId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonString(this._nodeAgentSkuId.ToString()) : null, "nodeAgentSkuId" ,container.Add );
            if (null != this._dataDisk)
            {
                var __w = new Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.XNodeArray();
                foreach( var __x in this._dataDisk )
                {
                    AddIf(__x?.ToJson(null, serializationMode) ,__w.Add);
                }
                container.Add("dataDisks",__w);
            }
            AddIf( null != (((object)this._licenseType)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonString(this._licenseType.ToString()) : null, "licenseType" ,container.Add );
            if (null != this._extension)
            {
                var __r = new Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.XNodeArray();
                foreach( var __s in this._extension )
                {
                    AddIf(__s?.ToJson(null, serializationMode) ,__r.Add);
                }
                container.Add("extensions",__r);
            }
            AfterToJson(ref container);
            return container;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonObject into a new instance of <see cref="VirtualMachineConfiguration" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal VirtualMachineConfiguration(Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_imageReference = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonObject>("imageReference"), out var __jsonImageReference) ? Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ImageReference.FromJson(__jsonImageReference) : ImageReference;}
            {_windowsConfiguration = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonObject>("windowsConfiguration"), out var __jsonWindowsConfiguration) ? Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.WindowsConfiguration.FromJson(__jsonWindowsConfiguration) : WindowsConfiguration;}
            {_containerConfiguration = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonObject>("containerConfiguration"), out var __jsonContainerConfiguration) ? Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ContainerConfiguration.FromJson(__jsonContainerConfiguration) : ContainerConfiguration;}
            {_diskEncryptionConfiguration = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonObject>("diskEncryptionConfiguration"), out var __jsonDiskEncryptionConfiguration) ? Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.DiskEncryptionConfiguration.FromJson(__jsonDiskEncryptionConfiguration) : DiskEncryptionConfiguration;}
            {_nodePlacementConfiguration = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonObject>("nodePlacementConfiguration"), out var __jsonNodePlacementConfiguration) ? Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.NodePlacementConfiguration.FromJson(__jsonNodePlacementConfiguration) : NodePlacementConfiguration;}
            {_oSDisk = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonObject>("osDisk"), out var __jsonOSDisk) ? Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.OSDisk.FromJson(__jsonOSDisk) : OSDisk;}
            {_nodeAgentSkuId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonString>("nodeAgentSkuId"), out var __jsonNodeAgentSkuId) ? (string)__jsonNodeAgentSkuId : (string)NodeAgentSkuId;}
            {_dataDisk = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonArray>("dataDisks"), out var __jsonDataDisks) ? If( __jsonDataDisks as Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDataDisk[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDataDisk) (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.DataDisk.FromJson(__u) )) ))() : null : DataDisk;}
            {_licenseType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonString>("licenseType"), out var __jsonLicenseType) ? (string)__jsonLicenseType : (string)LicenseType;}
            {_extension = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonArray>("extensions"), out var __jsonExtensions) ? If( __jsonExtensions as Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonArray, out var __q) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IVMExtension[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__q, (__p)=>(Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IVMExtension) (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.VMExtension.FromJson(__p) )) ))() : null : Extension;}
            AfterFromJson(json);
        }
    }
}