// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Extensions;

    /// <summary>The properties of a Batch account.</summary>
    public partial class BatchAccountCreateProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreateProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreatePropertiesInternal
    {

        /// <summary>Backing field for <see cref="AllowedAuthenticationMode" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.AuthenticationMode[] _allowedAuthenticationMode;

        /// <summary>
        /// List of allowed authentication modes for the Batch account that can be used to authenticate with the data plane. This
        /// does not affect authentication with the control plane.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.AuthenticationMode[] AllowedAuthenticationMode { get => this._allowedAuthenticationMode; set => this._allowedAuthenticationMode = value; }

        /// <summary>Backing field for <see cref="AutoStorage" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IAutoStorageBaseProperties _autoStorage;

        /// <summary>The properties related to the auto-storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IAutoStorageBaseProperties AutoStorage { get => (this._autoStorage = this._autoStorage ?? new Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.AutoStorageBaseProperties()); set => this._autoStorage = value; }

        /// <summary>The resource ID of the storage account to be used for auto-storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public string AutoStorageAccountId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IAutoStorageBasePropertiesInternal)AutoStorage).StorageAccountId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IAutoStorageBasePropertiesInternal)AutoStorage).StorageAccountId = value ?? null; }

        /// <summary>
        /// The authentication mode which the Batch service will use to manage the auto-storage account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.AutoStorageAuthenticationMode? AutoStorageAuthenticationMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IAutoStorageBasePropertiesInternal)AutoStorage).AuthenticationMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IAutoStorageBasePropertiesInternal)AutoStorage).AuthenticationMode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.AutoStorageAuthenticationMode)""); }

        /// <summary>Backing field for <see cref="Encryption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IEncryptionProperties _encryption;

        /// <summary>
        /// Configures how customer data is encrypted inside the Batch account. By default, accounts are encrypted using a Microsoft
        /// managed key. For additional control, a customer-managed key can be used instead.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IEncryptionProperties Encryption { get => (this._encryption = this._encryption ?? new Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.EncryptionProperties()); set => this._encryption = value; }

        /// <summary>Type of the key source.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.KeySource? EncryptionKeySource { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IEncryptionPropertiesInternal)Encryption).KeySource; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IEncryptionPropertiesInternal)Encryption).KeySource = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.KeySource)""); }

        /// <summary>
        /// Full path to the versioned secret. Example https://mykeyvault.vault.azure.net/keys/testkey/6e34a81fef704045975661e297a4c053.
        /// To be usable the following prerequisites must be met:
        /// The Batch Account has a System Assigned identity
        /// The account identity has been granted Key/Get, Key/Unwrap and Key/Wrap permissions
        /// The KeyVault has soft-delete and purge protection enabled
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public string KeyVaultPropertyKeyIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IEncryptionPropertiesInternal)Encryption).KeyVaultPropertyKeyIdentifier; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IEncryptionPropertiesInternal)Encryption).KeyVaultPropertyKeyIdentifier = value ?? null; }

        /// <summary>Backing field for <see cref="KeyVaultReference" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IKeyVaultReference _keyVaultReference;

        /// <summary>A reference to the Azure key vault associated with the Batch account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IKeyVaultReference KeyVaultReference { get => (this._keyVaultReference = this._keyVaultReference ?? new Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.KeyVaultReference()); set => this._keyVaultReference = value; }

        /// <summary>The resource ID of the Azure key vault associated with the Batch account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public string KeyVaultReferenceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IKeyVaultReferenceInternal)KeyVaultReference).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IKeyVaultReferenceInternal)KeyVaultReference).Id = value ?? null; }

        /// <summary>The URL of the Azure key vault associated with the Batch account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public string KeyVaultReferenceUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IKeyVaultReferenceInternal)KeyVaultReference).Url; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IKeyVaultReferenceInternal)KeyVaultReference).Url = value ?? null; }

        /// <summary>Internal Acessors for AutoStorage</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IAutoStorageBaseProperties Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreatePropertiesInternal.AutoStorage { get => (this._autoStorage = this._autoStorage ?? new Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.AutoStorageBaseProperties()); set { {_autoStorage = value;} } }

        /// <summary>Internal Acessors for AutoStorageNodeIdentityReference</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IComputeNodeIdentityReference Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreatePropertiesInternal.AutoStorageNodeIdentityReference { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IAutoStorageBasePropertiesInternal)AutoStorage).NodeIdentityReference; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IAutoStorageBasePropertiesInternal)AutoStorage).NodeIdentityReference = value; }

        /// <summary>Internal Acessors for Encryption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IEncryptionProperties Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreatePropertiesInternal.Encryption { get => (this._encryption = this._encryption ?? new Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.EncryptionProperties()); set { {_encryption = value;} } }

        /// <summary>Internal Acessors for EncryptionKeyVaultProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IKeyVaultProperties Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreatePropertiesInternal.EncryptionKeyVaultProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IEncryptionPropertiesInternal)Encryption).KeyVaultProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IEncryptionPropertiesInternal)Encryption).KeyVaultProperty = value; }

        /// <summary>Internal Acessors for KeyVaultReference</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IKeyVaultReference Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreatePropertiesInternal.KeyVaultReference { get => (this._keyVaultReference = this._keyVaultReference ?? new Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.KeyVaultReference()); set { {_keyVaultReference = value;} } }

        /// <summary>The ARM resource id of the user assigned identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public string NodeIdentityReferenceResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IAutoStorageBasePropertiesInternal)AutoStorage).NodeIdentityReferenceResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IAutoStorageBasePropertiesInternal)AutoStorage).NodeIdentityReferenceResourceId = value ?? null; }

        /// <summary>Backing field for <see cref="PoolAllocationMode" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.PoolAllocationMode? _poolAllocationMode;

        /// <summary>
        /// The pool allocation mode also affects how clients may authenticate to the Batch Service API. If the mode is BatchService,
        /// clients may authenticate using access keys or Azure Active Directory. If the mode is UserSubscription, clients must use
        /// Azure Active Directory. The default is BatchService.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.PoolAllocationMode? PoolAllocationMode { get => this._poolAllocationMode; set => this._poolAllocationMode = value; }

        /// <summary>Backing field for <see cref="PublicNetworkAccess" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.PublicNetworkAccessType? _publicNetworkAccess;

        /// <summary>If not specified, the default value is 'enabled'.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.PublicNetworkAccessType? PublicNetworkAccess { get => this._publicNetworkAccess; set => this._publicNetworkAccess = value; }

        /// <summary>Creates an new <see cref="BatchAccountCreateProperties" /> instance.</summary>
        public BatchAccountCreateProperties()
        {

        }
    }
    /// The properties of a Batch account.
    public partial interface IBatchAccountCreateProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.IJsonSerializable
    {
        /// <summary>
        /// List of allowed authentication modes for the Batch account that can be used to authenticate with the data plane. This
        /// does not affect authentication with the control plane.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of allowed authentication modes for the Batch account that can be used to authenticate with the data plane. This does not affect authentication with the control plane.",
        SerializedName = @"allowedAuthenticationModes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.AuthenticationMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.AuthenticationMode[] AllowedAuthenticationMode { get; set; }
        /// <summary>The resource ID of the storage account to be used for auto-storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource ID of the storage account to be used for auto-storage account.",
        SerializedName = @"storageAccountId",
        PossibleTypes = new [] { typeof(string) })]
        string AutoStorageAccountId { get; set; }
        /// <summary>
        /// The authentication mode which the Batch service will use to manage the auto-storage account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The authentication mode which the Batch service will use to manage the auto-storage account.",
        SerializedName = @"authenticationMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.AutoStorageAuthenticationMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.AutoStorageAuthenticationMode? AutoStorageAuthenticationMode { get; set; }
        /// <summary>Type of the key source.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of the key source.",
        SerializedName = @"keySource",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.KeySource) })]
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.KeySource? EncryptionKeySource { get; set; }
        /// <summary>
        /// Full path to the versioned secret. Example https://mykeyvault.vault.azure.net/keys/testkey/6e34a81fef704045975661e297a4c053.
        /// To be usable the following prerequisites must be met:
        /// The Batch Account has a System Assigned identity
        /// The account identity has been granted Key/Get, Key/Unwrap and Key/Wrap permissions
        /// The KeyVault has soft-delete and purge protection enabled
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Full path to the versioned secret. Example https://mykeyvault.vault.azure.net/keys/testkey/6e34a81fef704045975661e297a4c053. To be usable the following prerequisites must be met:

         The Batch Account has a System Assigned identity
         The account identity has been granted Key/Get, Key/Unwrap and Key/Wrap permissions
         The KeyVault has soft-delete and purge protection enabled",
        SerializedName = @"keyIdentifier",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultPropertyKeyIdentifier { get; set; }
        /// <summary>The resource ID of the Azure key vault associated with the Batch account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource ID of the Azure key vault associated with the Batch account.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultReferenceId { get; set; }
        /// <summary>The URL of the Azure key vault associated with the Batch account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The URL of the Azure key vault associated with the Batch account.",
        SerializedName = @"url",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultReferenceUrl { get; set; }
        /// <summary>The ARM resource id of the user assigned identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ARM resource id of the user assigned identity.",
        SerializedName = @"resourceId",
        PossibleTypes = new [] { typeof(string) })]
        string NodeIdentityReferenceResourceId { get; set; }
        /// <summary>
        /// The pool allocation mode also affects how clients may authenticate to the Batch Service API. If the mode is BatchService,
        /// clients may authenticate using access keys or Azure Active Directory. If the mode is UserSubscription, clients must use
        /// Azure Active Directory. The default is BatchService.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The pool allocation mode also affects how clients may authenticate to the Batch Service API. If the mode is BatchService, clients may authenticate using access keys or Azure Active Directory. If the mode is UserSubscription, clients must use Azure Active Directory. The default is BatchService.",
        SerializedName = @"poolAllocationMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.PoolAllocationMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.PoolAllocationMode? PoolAllocationMode { get; set; }
        /// <summary>If not specified, the default value is 'enabled'.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If not specified, the default value is 'enabled'.",
        SerializedName = @"publicNetworkAccess",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.PublicNetworkAccessType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.PublicNetworkAccessType? PublicNetworkAccess { get; set; }

    }
    /// The properties of a Batch account.
    internal partial interface IBatchAccountCreatePropertiesInternal

    {
        /// <summary>
        /// List of allowed authentication modes for the Batch account that can be used to authenticate with the data plane. This
        /// does not affect authentication with the control plane.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.AuthenticationMode[] AllowedAuthenticationMode { get; set; }
        /// <summary>The properties related to the auto-storage account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IAutoStorageBaseProperties AutoStorage { get; set; }
        /// <summary>The resource ID of the storage account to be used for auto-storage account.</summary>
        string AutoStorageAccountId { get; set; }
        /// <summary>
        /// The authentication mode which the Batch service will use to manage the auto-storage account.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.AutoStorageAuthenticationMode? AutoStorageAuthenticationMode { get; set; }
        /// <summary>
        /// The identity referenced here must be assigned to pools which have compute nodes that need access to auto-storage.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IComputeNodeIdentityReference AutoStorageNodeIdentityReference { get; set; }
        /// <summary>
        /// Configures how customer data is encrypted inside the Batch account. By default, accounts are encrypted using a Microsoft
        /// managed key. For additional control, a customer-managed key can be used instead.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IEncryptionProperties Encryption { get; set; }
        /// <summary>Type of the key source.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.KeySource? EncryptionKeySource { get; set; }
        /// <summary>Additional details when using Microsoft.KeyVault</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IKeyVaultProperties EncryptionKeyVaultProperty { get; set; }
        /// <summary>
        /// Full path to the versioned secret. Example https://mykeyvault.vault.azure.net/keys/testkey/6e34a81fef704045975661e297a4c053.
        /// To be usable the following prerequisites must be met:
        /// The Batch Account has a System Assigned identity
        /// The account identity has been granted Key/Get, Key/Unwrap and Key/Wrap permissions
        /// The KeyVault has soft-delete and purge protection enabled
        /// </summary>
        string KeyVaultPropertyKeyIdentifier { get; set; }
        /// <summary>A reference to the Azure key vault associated with the Batch account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IKeyVaultReference KeyVaultReference { get; set; }
        /// <summary>The resource ID of the Azure key vault associated with the Batch account.</summary>
        string KeyVaultReferenceId { get; set; }
        /// <summary>The URL of the Azure key vault associated with the Batch account.</summary>
        string KeyVaultReferenceUrl { get; set; }
        /// <summary>The ARM resource id of the user assigned identity.</summary>
        string NodeIdentityReferenceResourceId { get; set; }
        /// <summary>
        /// The pool allocation mode also affects how clients may authenticate to the Batch Service API. If the mode is BatchService,
        /// clients may authenticate using access keys or Azure Active Directory. If the mode is UserSubscription, clients must use
        /// Azure Active Directory. The default is BatchService.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.PoolAllocationMode? PoolAllocationMode { get; set; }
        /// <summary>If not specified, the default value is 'enabled'.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.PublicNetworkAccessType? PublicNetworkAccess { get; set; }

    }
}