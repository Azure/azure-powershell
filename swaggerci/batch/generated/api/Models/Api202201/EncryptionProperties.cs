// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Extensions;

    /// <summary>
    /// Configures how customer data is encrypted inside the Batch account. By default, accounts are encrypted using a Microsoft
    /// managed key. For additional control, a customer-managed key can be used instead.
    /// </summary>
    public partial class EncryptionProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IEncryptionProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IEncryptionPropertiesInternal
    {

        /// <summary>Backing field for <see cref="KeySource" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.KeySource? _keySource;

        /// <summary>Type of the key source.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.KeySource? KeySource { get => this._keySource; set => this._keySource = value; }

        /// <summary>Backing field for <see cref="KeyVaultProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IKeyVaultProperties _keyVaultProperty;

        /// <summary>Additional details when using Microsoft.KeyVault</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IKeyVaultProperties KeyVaultProperty { get => (this._keyVaultProperty = this._keyVaultProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.KeyVaultProperties()); set => this._keyVaultProperty = value; }

        /// <summary>
        /// Full path to the versioned secret. Example https://mykeyvault.vault.azure.net/keys/testkey/6e34a81fef704045975661e297a4c053.
        /// To be usable the following prerequisites must be met:
        /// The Batch Account has a System Assigned identity
        /// The account identity has been granted Key/Get, Key/Unwrap and Key/Wrap permissions
        /// The KeyVault has soft-delete and purge protection enabled
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public string KeyVaultPropertyKeyIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IKeyVaultPropertiesInternal)KeyVaultProperty).KeyIdentifier; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IKeyVaultPropertiesInternal)KeyVaultProperty).KeyIdentifier = value ?? null; }

        /// <summary>Internal Acessors for KeyVaultProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IKeyVaultProperties Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IEncryptionPropertiesInternal.KeyVaultProperty { get => (this._keyVaultProperty = this._keyVaultProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.KeyVaultProperties()); set { {_keyVaultProperty = value;} } }

        /// <summary>Creates an new <see cref="EncryptionProperties" /> instance.</summary>
        public EncryptionProperties()
        {

        }
    }
    /// Configures how customer data is encrypted inside the Batch account. By default, accounts are encrypted using a Microsoft
    /// managed key. For additional control, a customer-managed key can be used instead.
    public partial interface IEncryptionProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.IJsonSerializable
    {
        /// <summary>Type of the key source.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of the key source.",
        SerializedName = @"keySource",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.KeySource) })]
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.KeySource? KeySource { get; set; }
        /// <summary>
        /// Full path to the versioned secret. Example https://mykeyvault.vault.azure.net/keys/testkey/6e34a81fef704045975661e297a4c053.
        /// To be usable the following prerequisites must be met:
        /// The Batch Account has a System Assigned identity
        /// The account identity has been granted Key/Get, Key/Unwrap and Key/Wrap permissions
        /// The KeyVault has soft-delete and purge protection enabled
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Full path to the versioned secret. Example https://mykeyvault.vault.azure.net/keys/testkey/6e34a81fef704045975661e297a4c053. To be usable the following prerequisites must be met:

         The Batch Account has a System Assigned identity
         The account identity has been granted Key/Get, Key/Unwrap and Key/Wrap permissions
         The KeyVault has soft-delete and purge protection enabled",
        SerializedName = @"keyIdentifier",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultPropertyKeyIdentifier { get; set; }

    }
    /// Configures how customer data is encrypted inside the Batch account. By default, accounts are encrypted using a Microsoft
    /// managed key. For additional control, a customer-managed key can be used instead.
    internal partial interface IEncryptionPropertiesInternal

    {
        /// <summary>Type of the key source.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.KeySource? KeySource { get; set; }
        /// <summary>Additional details when using Microsoft.KeyVault</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IKeyVaultProperties KeyVaultProperty { get; set; }
        /// <summary>
        /// Full path to the versioned secret. Example https://mykeyvault.vault.azure.net/keys/testkey/6e34a81fef704045975661e297a4c053.
        /// To be usable the following prerequisites must be met:
        /// The Batch Account has a System Assigned identity
        /// The account identity has been granted Key/Get, Key/Unwrap and Key/Wrap permissions
        /// The KeyVault has soft-delete and purge protection enabled
        /// </summary>
        string KeyVaultPropertyKeyIdentifier { get; set; }

    }
}