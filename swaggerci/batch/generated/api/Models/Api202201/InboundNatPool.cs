// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Extensions;

    /// <summary>
    /// A inbound NAT pool that can be used to address specific ports on compute nodes in a Batch pool externally.
    /// </summary>
    public partial class InboundNatPool :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IInboundNatPool,
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IInboundNatPoolInternal
    {

        /// <summary>Backing field for <see cref="BackendPort" /> property.</summary>
        private int _backendPort;

        /// <summary>
        /// This must be unique within a Batch pool. Acceptable values are between 1 and 65535 except for 22, 3389, 29876 and 29877
        /// as these are reserved. If any reserved values are provided the request fails with HTTP status code 400.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public int BackendPort { get => this._backendPort; set => this._backendPort = value; }

        /// <summary>Backing field for <see cref="FrontendPortRangeEnd" /> property.</summary>
        private int _frontendPortRangeEnd;

        /// <summary>
        /// Acceptable values range between 1 and 65534 except ports from 50000 to 55000 which are reserved by the Batch service.
        /// All ranges within a pool must be distinct and cannot overlap. If any reserved or overlapping values are provided the request
        /// fails with HTTP status code 400.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public int FrontendPortRangeEnd { get => this._frontendPortRangeEnd; set => this._frontendPortRangeEnd = value; }

        /// <summary>Backing field for <see cref="FrontendPortRangeStart" /> property.</summary>
        private int _frontendPortRangeStart;

        /// <summary>
        /// Acceptable values range between 1 and 65534 except ports from 50000 to 55000 which are reserved. All ranges within a pool
        /// must be distinct and cannot overlap. If any reserved or overlapping values are provided the request fails with HTTP status
        /// code 400.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public int FrontendPortRangeStart { get => this._frontendPortRangeStart; set => this._frontendPortRangeStart = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>
        /// The name must be unique within a Batch pool, can contain letters, numbers, underscores, periods, and hyphens. Names must
        /// start with a letter or number, must end with a letter, number, or underscore, and cannot exceed 77 characters. If any
        /// invalid values are provided the request fails with HTTP status code 400.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="NetworkSecurityGroupRule" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.INetworkSecurityGroupRule[] _networkSecurityGroupRule;

        /// <summary>
        /// The maximum number of rules that can be specified across all the endpoints on a Batch pool is 25. If no network security
        /// group rules are specified, a default rule will be created to allow inbound access to the specified backendPort. If the
        /// maximum number of network security group rules is exceeded the request fails with HTTP status code 400.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.INetworkSecurityGroupRule[] NetworkSecurityGroupRule { get => this._networkSecurityGroupRule; set => this._networkSecurityGroupRule = value; }

        /// <summary>Backing field for <see cref="Protocol" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.InboundEndpointProtocol _protocol;

        /// <summary>The protocol of the endpoint.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.InboundEndpointProtocol Protocol { get => this._protocol; set => this._protocol = value; }

        /// <summary>Creates an new <see cref="InboundNatPool" /> instance.</summary>
        public InboundNatPool()
        {

        }
    }
    /// A inbound NAT pool that can be used to address specific ports on compute nodes in a Batch pool externally.
    public partial interface IInboundNatPool :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.IJsonSerializable
    {
        /// <summary>
        /// This must be unique within a Batch pool. Acceptable values are between 1 and 65535 except for 22, 3389, 29876 and 29877
        /// as these are reserved. If any reserved values are provided the request fails with HTTP status code 400.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"This must be unique within a Batch pool. Acceptable values are between 1 and 65535 except for 22, 3389, 29876 and 29877 as these are reserved. If any reserved values are provided the request fails with HTTP status code 400.",
        SerializedName = @"backendPort",
        PossibleTypes = new [] { typeof(int) })]
        int BackendPort { get; set; }
        /// <summary>
        /// Acceptable values range between 1 and 65534 except ports from 50000 to 55000 which are reserved by the Batch service.
        /// All ranges within a pool must be distinct and cannot overlap. If any reserved or overlapping values are provided the request
        /// fails with HTTP status code 400.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Acceptable values range between 1 and 65534 except ports from 50000 to 55000 which are reserved by the Batch service. All ranges within a pool must be distinct and cannot overlap. If any reserved or overlapping values are provided the request fails with HTTP status code 400.",
        SerializedName = @"frontendPortRangeEnd",
        PossibleTypes = new [] { typeof(int) })]
        int FrontendPortRangeEnd { get; set; }
        /// <summary>
        /// Acceptable values range between 1 and 65534 except ports from 50000 to 55000 which are reserved. All ranges within a pool
        /// must be distinct and cannot overlap. If any reserved or overlapping values are provided the request fails with HTTP status
        /// code 400.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Acceptable values range between 1 and 65534 except ports from 50000 to 55000 which are reserved. All ranges within a pool must be distinct and cannot overlap. If any reserved or overlapping values are provided the request fails with HTTP status code 400.",
        SerializedName = @"frontendPortRangeStart",
        PossibleTypes = new [] { typeof(int) })]
        int FrontendPortRangeStart { get; set; }
        /// <summary>
        /// The name must be unique within a Batch pool, can contain letters, numbers, underscores, periods, and hyphens. Names must
        /// start with a letter or number, must end with a letter, number, or underscore, and cannot exceed 77 characters. If any
        /// invalid values are provided the request fails with HTTP status code 400.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The name must be unique within a Batch pool, can contain letters, numbers, underscores, periods, and hyphens. Names must start with a letter or number, must end with a letter, number, or underscore, and cannot exceed 77 characters.  If any invalid values are provided the request fails with HTTP status code 400.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>
        /// The maximum number of rules that can be specified across all the endpoints on a Batch pool is 25. If no network security
        /// group rules are specified, a default rule will be created to allow inbound access to the specified backendPort. If the
        /// maximum number of network security group rules is exceeded the request fails with HTTP status code 400.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum number of rules that can be specified across all the endpoints on a Batch pool is 25. If no network security group rules are specified, a default rule will be created to allow inbound access to the specified backendPort. If the maximum number of network security group rules is exceeded the request fails with HTTP status code 400.",
        SerializedName = @"networkSecurityGroupRules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.INetworkSecurityGroupRule) })]
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.INetworkSecurityGroupRule[] NetworkSecurityGroupRule { get; set; }
        /// <summary>The protocol of the endpoint.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The protocol of the endpoint.",
        SerializedName = @"protocol",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.InboundEndpointProtocol) })]
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.InboundEndpointProtocol Protocol { get; set; }

    }
    /// A inbound NAT pool that can be used to address specific ports on compute nodes in a Batch pool externally.
    internal partial interface IInboundNatPoolInternal

    {
        /// <summary>
        /// This must be unique within a Batch pool. Acceptable values are between 1 and 65535 except for 22, 3389, 29876 and 29877
        /// as these are reserved. If any reserved values are provided the request fails with HTTP status code 400.
        /// </summary>
        int BackendPort { get; set; }
        /// <summary>
        /// Acceptable values range between 1 and 65534 except ports from 50000 to 55000 which are reserved by the Batch service.
        /// All ranges within a pool must be distinct and cannot overlap. If any reserved or overlapping values are provided the request
        /// fails with HTTP status code 400.
        /// </summary>
        int FrontendPortRangeEnd { get; set; }
        /// <summary>
        /// Acceptable values range between 1 and 65534 except ports from 50000 to 55000 which are reserved. All ranges within a pool
        /// must be distinct and cannot overlap. If any reserved or overlapping values are provided the request fails with HTTP status
        /// code 400.
        /// </summary>
        int FrontendPortRangeStart { get; set; }
        /// <summary>
        /// The name must be unique within a Batch pool, can contain letters, numbers, underscores, periods, and hyphens. Names must
        /// start with a letter or number, must end with a letter, number, or underscore, and cannot exceed 77 characters. If any
        /// invalid values are provided the request fails with HTTP status code 400.
        /// </summary>
        string Name { get; set; }
        /// <summary>
        /// The maximum number of rules that can be specified across all the endpoints on a Batch pool is 25. If no network security
        /// group rules are specified, a default rule will be created to allow inbound access to the specified backendPort. If the
        /// maximum number of network security group rules is exceeded the request fails with HTTP status code 400.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.INetworkSecurityGroupRule[] NetworkSecurityGroupRule { get; set; }
        /// <summary>The protocol of the endpoint.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.InboundEndpointProtocol Protocol { get; set; }

    }
}