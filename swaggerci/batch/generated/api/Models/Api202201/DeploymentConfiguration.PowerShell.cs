// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201
{
    using Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.PowerShell;

    /// <summary>Deployment configuration properties.</summary>
    [System.ComponentModel.TypeConverter(typeof(DeploymentConfigurationTypeConverter))]
    public partial class DeploymentConfiguration
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.DeploymentConfiguration"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal DeploymentConfiguration(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("CloudServiceConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).CloudServiceConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICloudServiceConfiguration) content.GetValueForProperty("CloudServiceConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).CloudServiceConfiguration, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.CloudServiceConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("VirtualMachineConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).VirtualMachineConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IVirtualMachineConfiguration) content.GetValueForProperty("VirtualMachineConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).VirtualMachineConfiguration, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.VirtualMachineConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("CloudServiceConfigurationOSFamily"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).CloudServiceConfigurationOSFamily = (string) content.GetValueForProperty("CloudServiceConfigurationOSFamily",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).CloudServiceConfigurationOSFamily, global::System.Convert.ToString);
            }
            if (content.Contains("CloudServiceConfigurationOSVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).CloudServiceConfigurationOSVersion = (string) content.GetValueForProperty("CloudServiceConfigurationOSVersion",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).CloudServiceConfigurationOSVersion, global::System.Convert.ToString);
            }
            if (content.Contains("VirtualMachineConfigurationImageReference"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).VirtualMachineConfigurationImageReference = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IImageReference) content.GetValueForProperty("VirtualMachineConfigurationImageReference",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).VirtualMachineConfigurationImageReference, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ImageReferenceTypeConverter.ConvertFrom);
            }
            if (content.Contains("VirtualMachineConfigurationWindowsConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).VirtualMachineConfigurationWindowsConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IWindowsConfiguration) content.GetValueForProperty("VirtualMachineConfigurationWindowsConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).VirtualMachineConfigurationWindowsConfiguration, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.WindowsConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("VirtualMachineConfigurationContainerConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).VirtualMachineConfigurationContainerConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IContainerConfiguration) content.GetValueForProperty("VirtualMachineConfigurationContainerConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).VirtualMachineConfigurationContainerConfiguration, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ContainerConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("VirtualMachineConfigurationOSDisk"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).VirtualMachineConfigurationOSDisk = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IOSDisk) content.GetValueForProperty("VirtualMachineConfigurationOSDisk",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).VirtualMachineConfigurationOSDisk, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.OSDiskTypeConverter.ConvertFrom);
            }
            if (content.Contains("VirtualMachineConfigurationDataDisk"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).VirtualMachineConfigurationDataDisk = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDataDisk[]) content.GetValueForProperty("VirtualMachineConfigurationDataDisk",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).VirtualMachineConfigurationDataDisk, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDataDisk>(__y, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.DataDiskTypeConverter.ConvertFrom));
            }
            if (content.Contains("VirtualMachineConfigurationLicenseType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).VirtualMachineConfigurationLicenseType = (string) content.GetValueForProperty("VirtualMachineConfigurationLicenseType",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).VirtualMachineConfigurationLicenseType, global::System.Convert.ToString);
            }
            if (content.Contains("VirtualMachineConfigurationExtension"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).VirtualMachineConfigurationExtension = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IVMExtension[]) content.GetValueForProperty("VirtualMachineConfigurationExtension",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).VirtualMachineConfigurationExtension, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IVMExtension>(__y, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.VMExtensionTypeConverter.ConvertFrom));
            }
            if (content.Contains("VirtualMachineConfigurationDiskEncryptionConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).VirtualMachineConfigurationDiskEncryptionConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDiskEncryptionConfiguration) content.GetValueForProperty("VirtualMachineConfigurationDiskEncryptionConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).VirtualMachineConfigurationDiskEncryptionConfiguration, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.DiskEncryptionConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("VirtualMachineConfigurationNodePlacementConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).VirtualMachineConfigurationNodePlacementConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.INodePlacementConfiguration) content.GetValueForProperty("VirtualMachineConfigurationNodePlacementConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).VirtualMachineConfigurationNodePlacementConfiguration, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.NodePlacementConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("VirtualMachineConfigurationNodeAgentSkuId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).VirtualMachineConfigurationNodeAgentSkuId = (string) content.GetValueForProperty("VirtualMachineConfigurationNodeAgentSkuId",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).VirtualMachineConfigurationNodeAgentSkuId, global::System.Convert.ToString);
            }
            if (content.Contains("ImageReferencePublisher"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).ImageReferencePublisher = (string) content.GetValueForProperty("ImageReferencePublisher",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).ImageReferencePublisher, global::System.Convert.ToString);
            }
            if (content.Contains("ImageReferenceOffer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).ImageReferenceOffer = (string) content.GetValueForProperty("ImageReferenceOffer",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).ImageReferenceOffer, global::System.Convert.ToString);
            }
            if (content.Contains("ImageReferenceSku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).ImageReferenceSku = (string) content.GetValueForProperty("ImageReferenceSku",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).ImageReferenceSku, global::System.Convert.ToString);
            }
            if (content.Contains("ImageReferenceVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).ImageReferenceVersion = (string) content.GetValueForProperty("ImageReferenceVersion",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).ImageReferenceVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ImageReferenceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).ImageReferenceId = (string) content.GetValueForProperty("ImageReferenceId",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).ImageReferenceId, global::System.Convert.ToString);
            }
            if (content.Contains("ContainerConfigurationContainerRegistry"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).ContainerConfigurationContainerRegistry = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IContainerRegistry[]) content.GetValueForProperty("ContainerConfigurationContainerRegistry",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).ContainerConfigurationContainerRegistry, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IContainerRegistry>(__y, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ContainerRegistryTypeConverter.ConvertFrom));
            }
            if (content.Contains("DiskEncryptionConfigurationTarget"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).DiskEncryptionConfigurationTarget = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.DiskEncryptionTarget[]) content.GetValueForProperty("DiskEncryptionConfigurationTarget",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).DiskEncryptionConfigurationTarget, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.DiskEncryptionTarget>(__y, Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.DiskEncryptionTarget.CreateFrom));
            }
            if (content.Contains("WindowConfigurationEnableAutomaticUpdate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).WindowConfigurationEnableAutomaticUpdate = (bool?) content.GetValueForProperty("WindowConfigurationEnableAutomaticUpdate",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).WindowConfigurationEnableAutomaticUpdate, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ContainerConfigurationType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).ContainerConfigurationType = (string) content.GetValueForProperty("ContainerConfigurationType",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).ContainerConfigurationType, global::System.Convert.ToString);
            }
            if (content.Contains("ContainerConfigurationContainerImageName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).ContainerConfigurationContainerImageName = (string[]) content.GetValueForProperty("ContainerConfigurationContainerImageName",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).ContainerConfigurationContainerImageName, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("NodePlacementConfigurationPolicy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).NodePlacementConfigurationPolicy = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.NodePlacementPolicyType?) content.GetValueForProperty("NodePlacementConfigurationPolicy",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).NodePlacementConfigurationPolicy, Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.NodePlacementPolicyType.CreateFrom);
            }
            if (content.Contains("OSDiskEphemeralOsdiskSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).OSDiskEphemeralOsdiskSetting = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDiffDiskSettings) content.GetValueForProperty("OSDiskEphemeralOsdiskSetting",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).OSDiskEphemeralOsdiskSetting, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.DiffDiskSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("EphemeralOSDiskSettingPlacement"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).EphemeralOSDiskSettingPlacement = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.DiffDiskPlacement?) content.GetValueForProperty("EphemeralOSDiskSettingPlacement",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).EphemeralOSDiskSettingPlacement, Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.DiffDiskPlacement.CreateFrom);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.DeploymentConfiguration"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal DeploymentConfiguration(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("CloudServiceConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).CloudServiceConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICloudServiceConfiguration) content.GetValueForProperty("CloudServiceConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).CloudServiceConfiguration, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.CloudServiceConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("VirtualMachineConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).VirtualMachineConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IVirtualMachineConfiguration) content.GetValueForProperty("VirtualMachineConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).VirtualMachineConfiguration, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.VirtualMachineConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("CloudServiceConfigurationOSFamily"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).CloudServiceConfigurationOSFamily = (string) content.GetValueForProperty("CloudServiceConfigurationOSFamily",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).CloudServiceConfigurationOSFamily, global::System.Convert.ToString);
            }
            if (content.Contains("CloudServiceConfigurationOSVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).CloudServiceConfigurationOSVersion = (string) content.GetValueForProperty("CloudServiceConfigurationOSVersion",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).CloudServiceConfigurationOSVersion, global::System.Convert.ToString);
            }
            if (content.Contains("VirtualMachineConfigurationImageReference"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).VirtualMachineConfigurationImageReference = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IImageReference) content.GetValueForProperty("VirtualMachineConfigurationImageReference",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).VirtualMachineConfigurationImageReference, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ImageReferenceTypeConverter.ConvertFrom);
            }
            if (content.Contains("VirtualMachineConfigurationWindowsConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).VirtualMachineConfigurationWindowsConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IWindowsConfiguration) content.GetValueForProperty("VirtualMachineConfigurationWindowsConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).VirtualMachineConfigurationWindowsConfiguration, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.WindowsConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("VirtualMachineConfigurationContainerConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).VirtualMachineConfigurationContainerConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IContainerConfiguration) content.GetValueForProperty("VirtualMachineConfigurationContainerConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).VirtualMachineConfigurationContainerConfiguration, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ContainerConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("VirtualMachineConfigurationOSDisk"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).VirtualMachineConfigurationOSDisk = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IOSDisk) content.GetValueForProperty("VirtualMachineConfigurationOSDisk",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).VirtualMachineConfigurationOSDisk, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.OSDiskTypeConverter.ConvertFrom);
            }
            if (content.Contains("VirtualMachineConfigurationDataDisk"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).VirtualMachineConfigurationDataDisk = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDataDisk[]) content.GetValueForProperty("VirtualMachineConfigurationDataDisk",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).VirtualMachineConfigurationDataDisk, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDataDisk>(__y, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.DataDiskTypeConverter.ConvertFrom));
            }
            if (content.Contains("VirtualMachineConfigurationLicenseType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).VirtualMachineConfigurationLicenseType = (string) content.GetValueForProperty("VirtualMachineConfigurationLicenseType",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).VirtualMachineConfigurationLicenseType, global::System.Convert.ToString);
            }
            if (content.Contains("VirtualMachineConfigurationExtension"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).VirtualMachineConfigurationExtension = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IVMExtension[]) content.GetValueForProperty("VirtualMachineConfigurationExtension",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).VirtualMachineConfigurationExtension, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IVMExtension>(__y, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.VMExtensionTypeConverter.ConvertFrom));
            }
            if (content.Contains("VirtualMachineConfigurationDiskEncryptionConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).VirtualMachineConfigurationDiskEncryptionConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDiskEncryptionConfiguration) content.GetValueForProperty("VirtualMachineConfigurationDiskEncryptionConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).VirtualMachineConfigurationDiskEncryptionConfiguration, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.DiskEncryptionConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("VirtualMachineConfigurationNodePlacementConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).VirtualMachineConfigurationNodePlacementConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.INodePlacementConfiguration) content.GetValueForProperty("VirtualMachineConfigurationNodePlacementConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).VirtualMachineConfigurationNodePlacementConfiguration, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.NodePlacementConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("VirtualMachineConfigurationNodeAgentSkuId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).VirtualMachineConfigurationNodeAgentSkuId = (string) content.GetValueForProperty("VirtualMachineConfigurationNodeAgentSkuId",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).VirtualMachineConfigurationNodeAgentSkuId, global::System.Convert.ToString);
            }
            if (content.Contains("ImageReferencePublisher"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).ImageReferencePublisher = (string) content.GetValueForProperty("ImageReferencePublisher",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).ImageReferencePublisher, global::System.Convert.ToString);
            }
            if (content.Contains("ImageReferenceOffer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).ImageReferenceOffer = (string) content.GetValueForProperty("ImageReferenceOffer",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).ImageReferenceOffer, global::System.Convert.ToString);
            }
            if (content.Contains("ImageReferenceSku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).ImageReferenceSku = (string) content.GetValueForProperty("ImageReferenceSku",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).ImageReferenceSku, global::System.Convert.ToString);
            }
            if (content.Contains("ImageReferenceVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).ImageReferenceVersion = (string) content.GetValueForProperty("ImageReferenceVersion",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).ImageReferenceVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ImageReferenceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).ImageReferenceId = (string) content.GetValueForProperty("ImageReferenceId",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).ImageReferenceId, global::System.Convert.ToString);
            }
            if (content.Contains("ContainerConfigurationContainerRegistry"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).ContainerConfigurationContainerRegistry = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IContainerRegistry[]) content.GetValueForProperty("ContainerConfigurationContainerRegistry",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).ContainerConfigurationContainerRegistry, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IContainerRegistry>(__y, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ContainerRegistryTypeConverter.ConvertFrom));
            }
            if (content.Contains("DiskEncryptionConfigurationTarget"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).DiskEncryptionConfigurationTarget = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.DiskEncryptionTarget[]) content.GetValueForProperty("DiskEncryptionConfigurationTarget",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).DiskEncryptionConfigurationTarget, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.DiskEncryptionTarget>(__y, Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.DiskEncryptionTarget.CreateFrom));
            }
            if (content.Contains("WindowConfigurationEnableAutomaticUpdate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).WindowConfigurationEnableAutomaticUpdate = (bool?) content.GetValueForProperty("WindowConfigurationEnableAutomaticUpdate",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).WindowConfigurationEnableAutomaticUpdate, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ContainerConfigurationType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).ContainerConfigurationType = (string) content.GetValueForProperty("ContainerConfigurationType",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).ContainerConfigurationType, global::System.Convert.ToString);
            }
            if (content.Contains("ContainerConfigurationContainerImageName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).ContainerConfigurationContainerImageName = (string[]) content.GetValueForProperty("ContainerConfigurationContainerImageName",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).ContainerConfigurationContainerImageName, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("NodePlacementConfigurationPolicy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).NodePlacementConfigurationPolicy = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.NodePlacementPolicyType?) content.GetValueForProperty("NodePlacementConfigurationPolicy",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).NodePlacementConfigurationPolicy, Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.NodePlacementPolicyType.CreateFrom);
            }
            if (content.Contains("OSDiskEphemeralOsdiskSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).OSDiskEphemeralOsdiskSetting = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDiffDiskSettings) content.GetValueForProperty("OSDiskEphemeralOsdiskSetting",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).OSDiskEphemeralOsdiskSetting, Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.DiffDiskSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("EphemeralOSDiskSettingPlacement"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).EphemeralOSDiskSettingPlacement = (Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.DiffDiskPlacement?) content.GetValueForProperty("EphemeralOSDiskSettingPlacement",((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfigurationInternal)this).EphemeralOSDiskSettingPlacement, Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.DiffDiskPlacement.CreateFrom);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.DeploymentConfiguration"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfiguration" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfiguration DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new DeploymentConfiguration(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.DeploymentConfiguration"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfiguration" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfiguration DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new DeploymentConfiguration(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="DeploymentConfiguration" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="className" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeploymentConfiguration FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Deployment configuration properties.
    [System.ComponentModel.TypeConverter(typeof(DeploymentConfigurationTypeConverter))]
    public partial interface IDeploymentConfiguration

    {

    }
}