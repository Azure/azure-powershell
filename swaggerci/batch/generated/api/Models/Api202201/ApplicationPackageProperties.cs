// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Extensions;

    /// <summary>Properties of an application package</summary>
    public partial class ApplicationPackageProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IApplicationPackageProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IApplicationPackagePropertiesInternal
    {

        /// <summary>Backing field for <see cref="Format" /> property.</summary>
        private string _format;

        /// <summary>The format of the application package, if the package is active.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string Format { get => this._format; }

        /// <summary>Backing field for <see cref="LastActivationTime" /> property.</summary>
        private global::System.DateTime? _lastActivationTime;

        /// <summary>The time at which the package was last activated, if the package is active.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public global::System.DateTime? LastActivationTime { get => this._lastActivationTime; }

        /// <summary>Internal Acessors for Format</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IApplicationPackagePropertiesInternal.Format { get => this._format; set { {_format = value;} } }

        /// <summary>Internal Acessors for LastActivationTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IApplicationPackagePropertiesInternal.LastActivationTime { get => this._lastActivationTime; set { {_lastActivationTime = value;} } }

        /// <summary>Internal Acessors for State</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.PackageState? Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IApplicationPackagePropertiesInternal.State { get => this._state; set { {_state = value;} } }

        /// <summary>Internal Acessors for StorageUrl</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IApplicationPackagePropertiesInternal.StorageUrl { get => this._storageUrl; set { {_storageUrl = value;} } }

        /// <summary>Internal Acessors for StorageUrlExpiry</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IApplicationPackagePropertiesInternal.StorageUrlExpiry { get => this._storageUrlExpiry; set { {_storageUrlExpiry = value;} } }

        /// <summary>Backing field for <see cref="State" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.PackageState? _state;

        /// <summary>The current state of the application package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.PackageState? State { get => this._state; }

        /// <summary>Backing field for <see cref="StorageUrl" /> property.</summary>
        private string _storageUrl;

        /// <summary>The URL for the application package in Azure Storage.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string StorageUrl { get => this._storageUrl; }

        /// <summary>Backing field for <see cref="StorageUrlExpiry" /> property.</summary>
        private global::System.DateTime? _storageUrlExpiry;

        /// <summary>The UTC time at which the Azure Storage URL will expire.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public global::System.DateTime? StorageUrlExpiry { get => this._storageUrlExpiry; }

        /// <summary>Creates an new <see cref="ApplicationPackageProperties" /> instance.</summary>
        public ApplicationPackageProperties()
        {

        }
    }
    /// Properties of an application package
    public partial interface IApplicationPackageProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.IJsonSerializable
    {
        /// <summary>The format of the application package, if the package is active.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The format of the application package, if the package is active.",
        SerializedName = @"format",
        PossibleTypes = new [] { typeof(string) })]
        string Format { get;  }
        /// <summary>The time at which the package was last activated, if the package is active.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The time at which the package was last activated, if the package is active.",
        SerializedName = @"lastActivationTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastActivationTime { get;  }
        /// <summary>The current state of the application package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The current state of the application package.",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.PackageState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.PackageState? State { get;  }
        /// <summary>The URL for the application package in Azure Storage.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The URL for the application package in Azure Storage.",
        SerializedName = @"storageUrl",
        PossibleTypes = new [] { typeof(string) })]
        string StorageUrl { get;  }
        /// <summary>The UTC time at which the Azure Storage URL will expire.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The UTC time at which the Azure Storage URL will expire.",
        SerializedName = @"storageUrlExpiry",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? StorageUrlExpiry { get;  }

    }
    /// Properties of an application package
    internal partial interface IApplicationPackagePropertiesInternal

    {
        /// <summary>The format of the application package, if the package is active.</summary>
        string Format { get; set; }
        /// <summary>The time at which the package was last activated, if the package is active.</summary>
        global::System.DateTime? LastActivationTime { get; set; }
        /// <summary>The current state of the application package.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.PackageState? State { get; set; }
        /// <summary>The URL for the application package in Azure Storage.</summary>
        string StorageUrl { get; set; }
        /// <summary>The UTC time at which the Azure Storage URL will expire.</summary>
        global::System.DateTime? StorageUrlExpiry { get; set; }

    }
}