// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Extensions;

    /// <summary>
    /// Describes either the current operation (if the pool AllocationState is Resizing) or the previously completed operation
    /// (if the AllocationState is Steady).
    /// </summary>
    public partial class ResizeOperationStatus :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IResizeOperationStatus,
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IResizeOperationStatusInternal
    {

        /// <summary>Backing field for <see cref="Error" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IResizeError[] _error;

        /// <summary>
        /// This property is set only if an error occurred during the last pool resize, and only when the pool allocationState is
        /// Steady.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IResizeError[] Error { get => this._error; set => this._error = value; }

        /// <summary>Backing field for <see cref="NodeDeallocationOption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.ComputeNodeDeallocationOption? _nodeDeallocationOption;

        /// <summary>The default value is requeue.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.ComputeNodeDeallocationOption? NodeDeallocationOption { get => this._nodeDeallocationOption; set => this._nodeDeallocationOption = value; }

        /// <summary>Backing field for <see cref="ResizeTimeout" /> property.</summary>
        private global::System.TimeSpan? _resizeTimeout;

        /// <summary>
        /// The default value is 15 minutes. The minimum value is 5 minutes. If you specify a value less than 5 minutes, the Batch
        /// service returns an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public global::System.TimeSpan? ResizeTimeout { get => this._resizeTimeout; set => this._resizeTimeout = value; }

        /// <summary>Backing field for <see cref="StartTime" /> property.</summary>
        private global::System.DateTime? _startTime;

        /// <summary>The time when this resize operation was started.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public global::System.DateTime? StartTime { get => this._startTime; set => this._startTime = value; }

        /// <summary>Backing field for <see cref="TargetDedicatedNode" /> property.</summary>
        private int? _targetDedicatedNode;

        /// <summary>The desired number of dedicated compute nodes in the pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public int? TargetDedicatedNode { get => this._targetDedicatedNode; set => this._targetDedicatedNode = value; }

        /// <summary>Backing field for <see cref="TargetLowPriorityNode" /> property.</summary>
        private int? _targetLowPriorityNode;

        /// <summary>The desired number of Spot/low-priority compute nodes in the pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public int? TargetLowPriorityNode { get => this._targetLowPriorityNode; set => this._targetLowPriorityNode = value; }

        /// <summary>Creates an new <see cref="ResizeOperationStatus" /> instance.</summary>
        public ResizeOperationStatus()
        {

        }
    }
    /// Describes either the current operation (if the pool AllocationState is Resizing) or the previously completed operation
    /// (if the AllocationState is Steady).
    public partial interface IResizeOperationStatus :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.IJsonSerializable
    {
        /// <summary>
        /// This property is set only if an error occurred during the last pool resize, and only when the pool allocationState is
        /// Steady.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This property is set only if an error occurred during the last pool resize, and only when the pool allocationState is Steady.",
        SerializedName = @"errors",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IResizeError) })]
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IResizeError[] Error { get; set; }
        /// <summary>The default value is requeue.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The default value is requeue.",
        SerializedName = @"nodeDeallocationOption",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.ComputeNodeDeallocationOption) })]
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.ComputeNodeDeallocationOption? NodeDeallocationOption { get; set; }
        /// <summary>
        /// The default value is 15 minutes. The minimum value is 5 minutes. If you specify a value less than 5 minutes, the Batch
        /// service returns an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The default value is 15 minutes. The minimum value is 5 minutes. If you specify a value less than 5 minutes, the Batch service returns an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).",
        SerializedName = @"resizeTimeout",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan? ResizeTimeout { get; set; }
        /// <summary>The time when this resize operation was started.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time when this resize operation was started.",
        SerializedName = @"startTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? StartTime { get; set; }
        /// <summary>The desired number of dedicated compute nodes in the pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The desired number of dedicated compute nodes in the pool.",
        SerializedName = @"targetDedicatedNodes",
        PossibleTypes = new [] { typeof(int) })]
        int? TargetDedicatedNode { get; set; }
        /// <summary>The desired number of Spot/low-priority compute nodes in the pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The desired number of Spot/low-priority compute nodes in the pool.",
        SerializedName = @"targetLowPriorityNodes",
        PossibleTypes = new [] { typeof(int) })]
        int? TargetLowPriorityNode { get; set; }

    }
    /// Describes either the current operation (if the pool AllocationState is Resizing) or the previously completed operation
    /// (if the AllocationState is Steady).
    internal partial interface IResizeOperationStatusInternal

    {
        /// <summary>
        /// This property is set only if an error occurred during the last pool resize, and only when the pool allocationState is
        /// Steady.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IResizeError[] Error { get; set; }
        /// <summary>The default value is requeue.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.ComputeNodeDeallocationOption? NodeDeallocationOption { get; set; }
        /// <summary>
        /// The default value is 15 minutes. The minimum value is 5 minutes. If you specify a value less than 5 minutes, the Batch
        /// service returns an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).
        /// </summary>
        global::System.TimeSpan? ResizeTimeout { get; set; }
        /// <summary>The time when this resize operation was started.</summary>
        global::System.DateTime? StartTime { get; set; }
        /// <summary>The desired number of dedicated compute nodes in the pool.</summary>
        int? TargetDedicatedNode { get; set; }
        /// <summary>The desired number of Spot/low-priority compute nodes in the pool.</summary>
        int? TargetLowPriorityNode { get; set; }

    }
}