// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Extensions;

    /// <summary>Certificate properties.</summary>
    public partial class CertificateProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificateProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificatePropertiesInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificateBaseProperties"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificateBaseProperties __certificateBaseProperties = new Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.CertificateBaseProperties();

        /// <summary>Backing field for <see cref="DeleteCertificateError" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeleteCertificateError _deleteCertificateError;

        /// <summary>This is only returned when the certificate provisioningState is 'Failed'.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeleteCertificateError DeleteCertificateError { get => (this._deleteCertificateError = this._deleteCertificateError ?? new Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.DeleteCertificateError()); }

        /// <summary>
        /// An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public string DeleteCertificateErrorCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeleteCertificateErrorInternal)DeleteCertificateError).Code; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeleteCertificateErrorInternal)DeleteCertificateError).Code = value ?? null; }

        /// <summary>A list of additional details about the error.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeleteCertificateError[] DeleteCertificateErrorDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeleteCertificateErrorInternal)DeleteCertificateError).Detail; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeleteCertificateErrorInternal)DeleteCertificateError).Detail = value ?? null /* arrayOf */; }

        /// <summary>
        /// A message describing the error, intended to be suitable for display in a user interface.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public string DeleteCertificateErrorMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeleteCertificateErrorInternal)DeleteCertificateError).Message; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeleteCertificateErrorInternal)DeleteCertificateError).Message = value ?? null; }

        /// <summary>
        /// The target of the particular error. For example, the name of the property in error.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public string DeleteCertificateErrorTarget { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeleteCertificateErrorInternal)DeleteCertificateError).Target; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeleteCertificateErrorInternal)DeleteCertificateError).Target = value ?? null; }

        /// <summary>
        /// The format of the certificate - either Pfx or Cer. If omitted, the default is Pfx.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.CertificateFormat? Format { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificateBasePropertiesInternal)__certificateBaseProperties).Format; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificateBasePropertiesInternal)__certificateBaseProperties).Format = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.CertificateFormat)""); }

        /// <summary>Internal Acessors for DeleteCertificateError</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeleteCertificateError Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificatePropertiesInternal.DeleteCertificateError { get => (this._deleteCertificateError = this._deleteCertificateError ?? new Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.DeleteCertificateError()); set { {_deleteCertificateError = value;} } }

        /// <summary>Internal Acessors for PreviousProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.CertificateProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificatePropertiesInternal.PreviousProvisioningState { get => this._previousProvisioningState; set { {_previousProvisioningState = value;} } }

        /// <summary>Internal Acessors for PreviousProvisioningStateTransitionTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificatePropertiesInternal.PreviousProvisioningStateTransitionTime { get => this._previousProvisioningStateTransitionTime; set { {_previousProvisioningStateTransitionTime = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.CertificateProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificatePropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for ProvisioningStateTransitionTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificatePropertiesInternal.ProvisioningStateTransitionTime { get => this._provisioningStateTransitionTime; set { {_provisioningStateTransitionTime = value;} } }

        /// <summary>Internal Acessors for PublicData</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificatePropertiesInternal.PublicData { get => this._publicData; set { {_publicData = value;} } }

        /// <summary>Backing field for <see cref="PreviousProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.CertificateProvisioningState? _previousProvisioningState;

        /// <summary>The previous provisioned state of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.CertificateProvisioningState? PreviousProvisioningState { get => this._previousProvisioningState; }

        /// <summary>
        /// Backing field for <see cref="PreviousProvisioningStateTransitionTime" /> property.
        /// </summary>
        private global::System.DateTime? _previousProvisioningStateTransitionTime;

        /// <summary>The time at which the certificate entered its previous state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public global::System.DateTime? PreviousProvisioningStateTransitionTime { get => this._previousProvisioningStateTransitionTime; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.CertificateProvisioningState? _provisioningState;

        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.CertificateProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="ProvisioningStateTransitionTime" /> property.</summary>
        private global::System.DateTime? _provisioningStateTransitionTime;

        /// <summary>The time at which the certificate entered its current state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public global::System.DateTime? ProvisioningStateTransitionTime { get => this._provisioningStateTransitionTime; }

        /// <summary>Backing field for <see cref="PublicData" /> property.</summary>
        private string _publicData;

        /// <summary>The public key of the certificate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string PublicData { get => this._publicData; }

        /// <summary>This must match the thumbprint from the name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inherited)]
        public string Thumbprint { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificateBasePropertiesInternal)__certificateBaseProperties).Thumbprint; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificateBasePropertiesInternal)__certificateBaseProperties).Thumbprint = value ?? null; }

        /// <summary>
        /// This must match the first portion of the certificate name. Currently required to be 'SHA1'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inherited)]
        public string ThumbprintAlgorithm { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificateBasePropertiesInternal)__certificateBaseProperties).ThumbprintAlgorithm; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificateBasePropertiesInternal)__certificateBaseProperties).ThumbprintAlgorithm = value ?? null; }

        /// <summary>Creates an new <see cref="CertificateProperties" /> instance.</summary>
        public CertificateProperties()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__certificateBaseProperties), __certificateBaseProperties);
            await eventListener.AssertObjectIsValid(nameof(__certificateBaseProperties), __certificateBaseProperties);
        }
    }
    /// Certificate properties.
    public partial interface ICertificateProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificateBaseProperties
    {
        /// <summary>
        /// An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"An identifier for the error. Codes are invariant and are intended to be consumed programmatically.",
        SerializedName = @"code",
        PossibleTypes = new [] { typeof(string) })]
        string DeleteCertificateErrorCode { get; set; }
        /// <summary>A list of additional details about the error.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of additional details about the error.",
        SerializedName = @"details",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeleteCertificateError) })]
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeleteCertificateError[] DeleteCertificateErrorDetail { get; set; }
        /// <summary>
        /// A message describing the error, intended to be suitable for display in a user interface.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A message describing the error, intended to be suitable for display in a user interface.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string DeleteCertificateErrorMessage { get; set; }
        /// <summary>
        /// The target of the particular error. For example, the name of the property in error.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The target of the particular error. For example, the name of the property in error.",
        SerializedName = @"target",
        PossibleTypes = new [] { typeof(string) })]
        string DeleteCertificateErrorTarget { get; set; }
        /// <summary>The previous provisioned state of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The previous provisioned state of the resource",
        SerializedName = @"previousProvisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.CertificateProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.CertificateProvisioningState? PreviousProvisioningState { get;  }
        /// <summary>The time at which the certificate entered its previous state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The time at which the certificate entered its previous state.",
        SerializedName = @"previousProvisioningStateTransitionTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? PreviousProvisioningStateTransitionTime { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.CertificateProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.CertificateProvisioningState? ProvisioningState { get;  }
        /// <summary>The time at which the certificate entered its current state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The time at which the certificate entered its current state.",
        SerializedName = @"provisioningStateTransitionTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ProvisioningStateTransitionTime { get;  }
        /// <summary>The public key of the certificate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The public key of the certificate.",
        SerializedName = @"publicData",
        PossibleTypes = new [] { typeof(string) })]
        string PublicData { get;  }

    }
    /// Certificate properties.
    internal partial interface ICertificatePropertiesInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificateBasePropertiesInternal
    {
        /// <summary>This is only returned when the certificate provisioningState is 'Failed'.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeleteCertificateError DeleteCertificateError { get; set; }
        /// <summary>
        /// An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
        /// </summary>
        string DeleteCertificateErrorCode { get; set; }
        /// <summary>A list of additional details about the error.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDeleteCertificateError[] DeleteCertificateErrorDetail { get; set; }
        /// <summary>
        /// A message describing the error, intended to be suitable for display in a user interface.
        /// </summary>
        string DeleteCertificateErrorMessage { get; set; }
        /// <summary>
        /// The target of the particular error. For example, the name of the property in error.
        /// </summary>
        string DeleteCertificateErrorTarget { get; set; }
        /// <summary>The previous provisioned state of the resource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.CertificateProvisioningState? PreviousProvisioningState { get; set; }
        /// <summary>The time at which the certificate entered its previous state.</summary>
        global::System.DateTime? PreviousProvisioningStateTransitionTime { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.CertificateProvisioningState? ProvisioningState { get; set; }
        /// <summary>The time at which the certificate entered its current state.</summary>
        global::System.DateTime? ProvisioningStateTransitionTime { get; set; }
        /// <summary>The public key of the certificate.</summary>
        string PublicData { get; set; }

    }
}