// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Extensions;

    /// <summary>
    /// A reference to a certificate to be installed on compute nodes in a pool. This must exist inside the same account as the
    /// pool.
    /// </summary>
    public partial class CertificateReference :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificateReference,
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ICertificateReferenceInternal
    {

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>
        /// The fully qualified ID of the certificate to install on the pool. This must be inside the same batch account as the pool.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string Id { get => this._id; set => this._id = value; }

        /// <summary>Backing field for <see cref="StoreLocation" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.CertificateStoreLocation? _storeLocation;

        /// <summary>
        /// The default value is currentUser. This property is applicable only for pools configured with Windows nodes (that is, created
        /// with cloudServiceConfiguration, or with virtualMachineConfiguration using a Windows image reference). For Linux compute
        /// nodes, the certificates are stored in a directory inside the task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR
        /// is supplied to the task to query for this location. For certificates with visibility of 'remoteUser', a 'certs' directory
        /// is created in the user's home directory (e.g., /home/{user-name}/certs) and certificates are placed in that directory.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.CertificateStoreLocation? StoreLocation { get => this._storeLocation; set => this._storeLocation = value; }

        /// <summary>Backing field for <see cref="StoreName" /> property.</summary>
        private string _storeName;

        /// <summary>
        /// This property is applicable only for pools configured with Windows nodes (that is, created with cloudServiceConfiguration,
        /// or with virtualMachineConfiguration using a Windows image reference). Common store names include: My, Root, CA, Trust,
        /// Disallowed, TrustedPeople, TrustedPublisher, AuthRoot, AddressBook, but any custom store name can also be used. The default
        /// value is My.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string StoreName { get => this._storeName; set => this._storeName = value; }

        /// <summary>Backing field for <see cref="Visibility" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.CertificateVisibility[] _visibility;

        /// <summary>
        /// Which user accounts on the compute node should have access to the private data of the certificate.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.CertificateVisibility[] Visibility { get => this._visibility; set => this._visibility = value; }

        /// <summary>Creates an new <see cref="CertificateReference" /> instance.</summary>
        public CertificateReference()
        {

        }
    }
    /// A reference to a certificate to be installed on compute nodes in a pool. This must exist inside the same account as the
    /// pool.
    public partial interface ICertificateReference :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The fully qualified ID of the certificate to install on the pool. This must be inside the same batch account as the pool.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The fully qualified ID of the certificate to install on the pool. This must be inside the same batch account as the pool.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get; set; }
        /// <summary>
        /// The default value is currentUser. This property is applicable only for pools configured with Windows nodes (that is, created
        /// with cloudServiceConfiguration, or with virtualMachineConfiguration using a Windows image reference). For Linux compute
        /// nodes, the certificates are stored in a directory inside the task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR
        /// is supplied to the task to query for this location. For certificates with visibility of 'remoteUser', a 'certs' directory
        /// is created in the user's home directory (e.g., /home/{user-name}/certs) and certificates are placed in that directory.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The default value is currentUser. This property is applicable only for pools configured with Windows nodes (that is, created with cloudServiceConfiguration, or with virtualMachineConfiguration using a Windows image reference). For Linux compute nodes, the certificates are stored in a directory inside the task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this location. For certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/{user-name}/certs) and certificates are placed in that directory.",
        SerializedName = @"storeLocation",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.CertificateStoreLocation) })]
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.CertificateStoreLocation? StoreLocation { get; set; }
        /// <summary>
        /// This property is applicable only for pools configured with Windows nodes (that is, created with cloudServiceConfiguration,
        /// or with virtualMachineConfiguration using a Windows image reference). Common store names include: My, Root, CA, Trust,
        /// Disallowed, TrustedPeople, TrustedPublisher, AuthRoot, AddressBook, but any custom store name can also be used. The default
        /// value is My.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This property is applicable only for pools configured with Windows nodes (that is, created with cloudServiceConfiguration, or with virtualMachineConfiguration using a Windows image reference). Common store names include: My, Root, CA, Trust, Disallowed, TrustedPeople, TrustedPublisher, AuthRoot, AddressBook, but any custom store name can also be used. The default value is My.",
        SerializedName = @"storeName",
        PossibleTypes = new [] { typeof(string) })]
        string StoreName { get; set; }
        /// <summary>
        /// Which user accounts on the compute node should have access to the private data of the certificate.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Which user accounts on the compute node should have access to the private data of the certificate.",
        SerializedName = @"visibility",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.CertificateVisibility) })]
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.CertificateVisibility[] Visibility { get; set; }

    }
    /// A reference to a certificate to be installed on compute nodes in a pool. This must exist inside the same account as the
    /// pool.
    internal partial interface ICertificateReferenceInternal

    {
        /// <summary>
        /// The fully qualified ID of the certificate to install on the pool. This must be inside the same batch account as the pool.
        /// </summary>
        string Id { get; set; }
        /// <summary>
        /// The default value is currentUser. This property is applicable only for pools configured with Windows nodes (that is, created
        /// with cloudServiceConfiguration, or with virtualMachineConfiguration using a Windows image reference). For Linux compute
        /// nodes, the certificates are stored in a directory inside the task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR
        /// is supplied to the task to query for this location. For certificates with visibility of 'remoteUser', a 'certs' directory
        /// is created in the user's home directory (e.g., /home/{user-name}/certs) and certificates are placed in that directory.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.CertificateStoreLocation? StoreLocation { get; set; }
        /// <summary>
        /// This property is applicable only for pools configured with Windows nodes (that is, created with cloudServiceConfiguration,
        /// or with virtualMachineConfiguration using a Windows image reference). Common store names include: My, Root, CA, Trust,
        /// Disallowed, TrustedPeople, TrustedPublisher, AuthRoot, AddressBook, but any custom store name can also be used. The default
        /// value is My.
        /// </summary>
        string StoreName { get; set; }
        /// <summary>
        /// Which user accounts on the compute node should have access to the private data of the certificate.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.CertificateVisibility[] Visibility { get; set; }

    }
}