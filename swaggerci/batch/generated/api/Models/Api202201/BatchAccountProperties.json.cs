// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Extensions;

    /// <summary>Account specific properties.</summary>
    public partial class BatchAccountProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json erialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonObject into a new instance of <see cref="BatchAccountProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal BatchAccountProperties(Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_keyVaultReference = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonObject>("keyVaultReference"), out var __jsonKeyVaultReference) ? Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.KeyVaultReference.FromJson(__jsonKeyVaultReference) : KeyVaultReference;}
            {_autoStorage = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonObject>("autoStorage"), out var __jsonAutoStorage) ? Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.AutoStorageProperties.FromJson(__jsonAutoStorage) : AutoStorage;}
            {_encryption = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonObject>("encryption"), out var __jsonEncryption) ? Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.EncryptionProperties.FromJson(__jsonEncryption) : Encryption;}
            {_accountEndpoint = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonString>("accountEndpoint"), out var __jsonAccountEndpoint) ? (string)__jsonAccountEndpoint : (string)AccountEndpoint;}
            {_provisioningState = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonString>("provisioningState"), out var __jsonProvisioningState) ? (string)__jsonProvisioningState : (string)ProvisioningState;}
            {_poolAllocationMode = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonString>("poolAllocationMode"), out var __jsonPoolAllocationMode) ? (string)__jsonPoolAllocationMode : (string)PoolAllocationMode;}
            {_publicNetworkAccess = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonString>("publicNetworkAccess"), out var __jsonPublicNetworkAccess) ? (string)__jsonPublicNetworkAccess : (string)PublicNetworkAccess;}
            {_privateEndpointConnection = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonArray>("privateEndpointConnections"), out var __jsonPrivateEndpointConnections) ? If( __jsonPrivateEndpointConnections as Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IPrivateEndpointConnection[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IPrivateEndpointConnection) (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.PrivateEndpointConnection.FromJson(__u) )) ))() : null : PrivateEndpointConnection;}
            {_dedicatedCoreQuota = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonNumber>("dedicatedCoreQuota"), out var __jsonDedicatedCoreQuota) ? (int?)__jsonDedicatedCoreQuota : DedicatedCoreQuota;}
            {_lowPriorityCoreQuota = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonNumber>("lowPriorityCoreQuota"), out var __jsonLowPriorityCoreQuota) ? (int?)__jsonLowPriorityCoreQuota : LowPriorityCoreQuota;}
            {_dedicatedCoreQuotaPerVMFamily = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonArray>("dedicatedCoreQuotaPerVMFamily"), out var __jsonDedicatedCoreQuotaPerVMFamily) ? If( __jsonDedicatedCoreQuotaPerVMFamily as Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonArray, out var __q) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IVirtualMachineFamilyCoreQuota[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__q, (__p)=>(Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IVirtualMachineFamilyCoreQuota) (Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.VirtualMachineFamilyCoreQuota.FromJson(__p) )) ))() : null : DedicatedCoreQuotaPerVMFamily;}
            {_dedicatedCoreQuotaPerVMFamilyEnforced = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonBoolean>("dedicatedCoreQuotaPerVMFamilyEnforced"), out var __jsonDedicatedCoreQuotaPerVMFamilyEnforced) ? (bool?)__jsonDedicatedCoreQuotaPerVMFamilyEnforced : DedicatedCoreQuotaPerVMFamilyEnforced;}
            {_poolQuota = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonNumber>("poolQuota"), out var __jsonPoolQuota) ? (int?)__jsonPoolQuota : PoolQuota;}
            {_activeJobAndJobScheduleQuota = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonNumber>("activeJobAndJobScheduleQuota"), out var __jsonActiveJobAndJobScheduleQuota) ? (int?)__jsonActiveJobAndJobScheduleQuota : ActiveJobAndJobScheduleQuota;}
            {_allowedAuthenticationMode = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonArray>("allowedAuthenticationModes"), out var __jsonAllowedAuthenticationModes) ? If( __jsonAllowedAuthenticationModes as Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonArray, out var __l) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.AuthenticationMode[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__l, (__k)=>(Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.AuthenticationMode) (__k is Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonString __j ? (Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.AuthenticationMode)(__j.ToString()) : ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.AuthenticationMode)""))) ))() : null : AllowedAuthenticationMode;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonObject json ? new BatchAccountProperties(json) : null;
        }

        /// <summary>
        /// Serializes this instance of <see cref="BatchAccountProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="BatchAccountProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._keyVaultReference ? (Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonNode) this._keyVaultReference.ToJson(null,serializationMode) : null, "keyVaultReference" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._autoStorage ? (Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonNode) this._autoStorage.ToJson(null,serializationMode) : null, "autoStorage" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._encryption ? (Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonNode) this._encryption.ToJson(null,serializationMode) : null, "encryption" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._accountEndpoint)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonString(this._accountEndpoint.ToString()) : null, "accountEndpoint" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._provisioningState)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonString(this._provisioningState.ToString()) : null, "provisioningState" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._poolAllocationMode)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonString(this._poolAllocationMode.ToString()) : null, "poolAllocationMode" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._publicNetworkAccess)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonString(this._publicNetworkAccess.ToString()) : null, "publicNetworkAccess" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.SerializationMode.IncludeReadOnly))
            {
                if (null != this._privateEndpointConnection)
                {
                    var __w = new Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.XNodeArray();
                    foreach( var __x in this._privateEndpointConnection )
                    {
                        AddIf(__x?.ToJson(null, serializationMode) ,__w.Add);
                    }
                    container.Add("privateEndpointConnections",__w);
                }
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._dedicatedCoreQuota ? (Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonNumber((int)this._dedicatedCoreQuota) : null, "dedicatedCoreQuota" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._lowPriorityCoreQuota ? (Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonNumber((int)this._lowPriorityCoreQuota) : null, "lowPriorityCoreQuota" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.SerializationMode.IncludeReadOnly))
            {
                if (null != this._dedicatedCoreQuotaPerVMFamily)
                {
                    var __r = new Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.XNodeArray();
                    foreach( var __s in this._dedicatedCoreQuotaPerVMFamily )
                    {
                        AddIf(__s?.ToJson(null, serializationMode) ,__r.Add);
                    }
                    container.Add("dedicatedCoreQuotaPerVMFamily",__r);
                }
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._dedicatedCoreQuotaPerVMFamilyEnforced ? (Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonBoolean((bool)this._dedicatedCoreQuotaPerVMFamilyEnforced) : null, "dedicatedCoreQuotaPerVMFamilyEnforced" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._poolQuota ? (Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonNumber((int)this._poolQuota) : null, "poolQuota" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._activeJobAndJobScheduleQuota ? (Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonNumber((int)this._activeJobAndJobScheduleQuota) : null, "activeJobAndJobScheduleQuota" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.SerializationMode.IncludeReadOnly))
            {
                if (null != this._allowedAuthenticationMode)
                {
                    var __m = new Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.XNodeArray();
                    foreach( var __n in this._allowedAuthenticationMode )
                    {
                        AddIf(null != (((object)__n)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Json.JsonString(__n.ToString()) : null ,__m.Add);
                    }
                    container.Add("allowedAuthenticationModes",__m);
                }
            }
            AfterToJson(ref container);
            return container;
        }
    }
}