// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Extensions;

    /// <summary>The properties associated with the Application.</summary>
    public partial class ApplicationProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IApplicationProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IApplicationPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AllowUpdate" /> property.</summary>
        private bool? _allowUpdate;

        /// <summary>
        /// A value indicating whether packages within the application may be overwritten using the same version string.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public bool? AllowUpdate { get => this._allowUpdate; set => this._allowUpdate = value; }

        /// <summary>Backing field for <see cref="DefaultVersion" /> property.</summary>
        private string _defaultVersion;

        /// <summary>
        /// The package to use if a client requests the application but does not specify a version. This property can only be set
        /// to the name of an existing package.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string DefaultVersion { get => this._defaultVersion; set => this._defaultVersion = value; }

        /// <summary>Backing field for <see cref="DisplayName" /> property.</summary>
        private string _displayName;

        /// <summary>The display name for the application.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string DisplayName { get => this._displayName; set => this._displayName = value; }

        /// <summary>Creates an new <see cref="ApplicationProperties" /> instance.</summary>
        public ApplicationProperties()
        {

        }
    }
    /// The properties associated with the Application.
    public partial interface IApplicationProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.IJsonSerializable
    {
        /// <summary>
        /// A value indicating whether packages within the application may be overwritten using the same version string.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A value indicating whether packages within the application may be overwritten using the same version string.",
        SerializedName = @"allowUpdates",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AllowUpdate { get; set; }
        /// <summary>
        /// The package to use if a client requests the application but does not specify a version. This property can only be set
        /// to the name of an existing package.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The package to use if a client requests the application but does not specify a version. This property can only be set to the name of an existing package.",
        SerializedName = @"defaultVersion",
        PossibleTypes = new [] { typeof(string) })]
        string DefaultVersion { get; set; }
        /// <summary>The display name for the application.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The display name for the application.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }

    }
    /// The properties associated with the Application.
    internal partial interface IApplicationPropertiesInternal

    {
        /// <summary>
        /// A value indicating whether packages within the application may be overwritten using the same version string.
        /// </summary>
        bool? AllowUpdate { get; set; }
        /// <summary>
        /// The package to use if a client requests the application but does not specify a version. This property can only be set
        /// to the name of an existing package.
        /// </summary>
        string DefaultVersion { get; set; }
        /// <summary>The display name for the application.</summary>
        string DisplayName { get; set; }

    }
}