// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Extensions;

    /// <summary>A single file or multiple files to be downloaded to a compute node.</summary>
    public partial class ResourceFile :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IResourceFile,
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IResourceFileInternal
    {

        /// <summary>Backing field for <see cref="AutoStorageContainerName" /> property.</summary>
        private string _autoStorageContainerName;

        /// <summary>
        /// The autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be
        /// specified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string AutoStorageContainerName { get => this._autoStorageContainerName; set => this._autoStorageContainerName = value; }

        /// <summary>Backing field for <see cref="BlobPrefix" /> property.</summary>
        private string _blobPrefix;

        /// <summary>
        /// The property is valid only when autoStorageContainerName or storageContainerUrl is used. This prefix can be a partial
        /// filename or a subdirectory. If a prefix is not specified, all the files in the container will be downloaded.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string BlobPrefix { get => this._blobPrefix; set => this._blobPrefix = value; }

        /// <summary>Backing field for <see cref="FileMode" /> property.</summary>
        private string _fileMode;

        /// <summary>
        /// This property applies only to files being downloaded to Linux compute nodes. It will be ignored if it is specified for
        /// a resourceFile which will be downloaded to a Windows node. If this property is not specified for a Linux node, then a
        /// default value of 0770 is applied to the file.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string FileMode { get => this._fileMode; set => this._fileMode = value; }

        /// <summary>Backing field for <see cref="FilePath" /> property.</summary>
        private string _filePath;

        /// <summary>
        /// If the httpUrl property is specified, the filePath is required and describes the path which the file will be downloaded
        /// to, including the filename. Otherwise, if the autoStorageContainerName or storageContainerUrl property is specified, filePath
        /// is optional and is the directory to download the files to. In the case where filePath is used as a directory, any directory
        /// structure already associated with the input data will be retained in full and appended to the specified filePath directory.
        /// The specified relative path cannot break out of the task's working directory (for example by using '..').
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string FilePath { get => this._filePath; set => this._filePath = value; }

        /// <summary>Backing field for <see cref="HttpUrl" /> property.</summary>
        private string _httpUrl;

        /// <summary>
        /// The autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be
        /// specified. If the URL points to Azure Blob Storage, it must be readable from compute nodes. There are three ways to get
        /// such a URL for a blob in Azure storage: include a Shared Access Signature (SAS) granting read permissions on the blob,
        /// use a managed identity with read permission, or set the ACL for the blob or its container to allow public access.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string HttpUrl { get => this._httpUrl; set => this._httpUrl = value; }

        /// <summary>Backing field for <see cref="IdentityReference" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IComputeNodeIdentityReference _identityReference;

        /// <summary>
        /// The reference to a user assigned identity associated with the Batch pool which a compute node will use.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IComputeNodeIdentityReference IdentityReference { get => (this._identityReference = this._identityReference ?? new Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ComputeNodeIdentityReference()); set => this._identityReference = value; }

        /// <summary>The ARM resource id of the user assigned identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public string IdentityReferenceResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IComputeNodeIdentityReferenceInternal)IdentityReference).ResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IComputeNodeIdentityReferenceInternal)IdentityReference).ResourceId = value ?? null; }

        /// <summary>Internal Acessors for IdentityReference</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IComputeNodeIdentityReference Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IResourceFileInternal.IdentityReference { get => (this._identityReference = this._identityReference ?? new Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.ComputeNodeIdentityReference()); set { {_identityReference = value;} } }

        /// <summary>Backing field for <see cref="StorageContainerUrl" /> property.</summary>
        private string _storageContainerUrl;

        /// <summary>
        /// The autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be
        /// specified. This URL must be readable and listable from compute nodes. There are three ways to get such a URL for a container
        /// in Azure storage: include a Shared Access Signature (SAS) granting read and list permissions on the container, use a managed
        /// identity with read and list permissions, or set the ACL for the container to allow public access.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string StorageContainerUrl { get => this._storageContainerUrl; set => this._storageContainerUrl = value; }

        /// <summary>Creates an new <see cref="ResourceFile" /> instance.</summary>
        public ResourceFile()
        {

        }
    }
    /// A single file or multiple files to be downloaded to a compute node.
    public partial interface IResourceFile :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be
        /// specified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be specified.",
        SerializedName = @"autoStorageContainerName",
        PossibleTypes = new [] { typeof(string) })]
        string AutoStorageContainerName { get; set; }
        /// <summary>
        /// The property is valid only when autoStorageContainerName or storageContainerUrl is used. This prefix can be a partial
        /// filename or a subdirectory. If a prefix is not specified, all the files in the container will be downloaded.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The property is valid only when autoStorageContainerName or storageContainerUrl is used. This prefix can be a partial filename or a subdirectory. If a prefix is not specified, all the files in the container will be downloaded.",
        SerializedName = @"blobPrefix",
        PossibleTypes = new [] { typeof(string) })]
        string BlobPrefix { get; set; }
        /// <summary>
        /// This property applies only to files being downloaded to Linux compute nodes. It will be ignored if it is specified for
        /// a resourceFile which will be downloaded to a Windows node. If this property is not specified for a Linux node, then a
        /// default value of 0770 is applied to the file.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This property applies only to files being downloaded to Linux compute nodes. It will be ignored if it is specified for a resourceFile which will be downloaded to a Windows node. If this property is not specified for a Linux node, then a default value of 0770 is applied to the file.",
        SerializedName = @"fileMode",
        PossibleTypes = new [] { typeof(string) })]
        string FileMode { get; set; }
        /// <summary>
        /// If the httpUrl property is specified, the filePath is required and describes the path which the file will be downloaded
        /// to, including the filename. Otherwise, if the autoStorageContainerName or storageContainerUrl property is specified, filePath
        /// is optional and is the directory to download the files to. In the case where filePath is used as a directory, any directory
        /// structure already associated with the input data will be retained in full and appended to the specified filePath directory.
        /// The specified relative path cannot break out of the task's working directory (for example by using '..').
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If the httpUrl property is specified, the filePath is required and describes the path which the file will be downloaded to, including the filename. Otherwise, if the autoStorageContainerName or storageContainerUrl property is specified, filePath is optional and is the directory to download the files to. In the case where filePath is used as a directory, any directory structure already associated with the input data will be retained in full and appended to the specified filePath directory. The specified relative path cannot break out of the task's working directory (for example by using '..').",
        SerializedName = @"filePath",
        PossibleTypes = new [] { typeof(string) })]
        string FilePath { get; set; }
        /// <summary>
        /// The autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be
        /// specified. If the URL points to Azure Blob Storage, it must be readable from compute nodes. There are three ways to get
        /// such a URL for a blob in Azure storage: include a Shared Access Signature (SAS) granting read permissions on the blob,
        /// use a managed identity with read permission, or set the ACL for the blob or its container to allow public access.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be specified. If the URL points to Azure Blob Storage, it must be readable from compute nodes. There are three ways to get such a URL for a blob in Azure storage: include a Shared Access Signature (SAS) granting read permissions on the blob, use a managed identity with read permission, or set the ACL for the blob or its container to allow public access.",
        SerializedName = @"httpUrl",
        PossibleTypes = new [] { typeof(string) })]
        string HttpUrl { get; set; }
        /// <summary>The ARM resource id of the user assigned identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ARM resource id of the user assigned identity.",
        SerializedName = @"resourceId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityReferenceResourceId { get; set; }
        /// <summary>
        /// The autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be
        /// specified. This URL must be readable and listable from compute nodes. There are three ways to get such a URL for a container
        /// in Azure storage: include a Shared Access Signature (SAS) granting read and list permissions on the container, use a managed
        /// identity with read and list permissions, or set the ACL for the container to allow public access.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be specified. This URL must be readable and listable from compute nodes. There are three ways to get such a URL for a container in Azure storage: include a Shared Access Signature (SAS) granting read and list permissions on the container, use a managed identity with read and list permissions, or set the ACL for the container to allow public access.",
        SerializedName = @"storageContainerUrl",
        PossibleTypes = new [] { typeof(string) })]
        string StorageContainerUrl { get; set; }

    }
    /// A single file or multiple files to be downloaded to a compute node.
    internal partial interface IResourceFileInternal

    {
        /// <summary>
        /// The autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be
        /// specified.
        /// </summary>
        string AutoStorageContainerName { get; set; }
        /// <summary>
        /// The property is valid only when autoStorageContainerName or storageContainerUrl is used. This prefix can be a partial
        /// filename or a subdirectory. If a prefix is not specified, all the files in the container will be downloaded.
        /// </summary>
        string BlobPrefix { get; set; }
        /// <summary>
        /// This property applies only to files being downloaded to Linux compute nodes. It will be ignored if it is specified for
        /// a resourceFile which will be downloaded to a Windows node. If this property is not specified for a Linux node, then a
        /// default value of 0770 is applied to the file.
        /// </summary>
        string FileMode { get; set; }
        /// <summary>
        /// If the httpUrl property is specified, the filePath is required and describes the path which the file will be downloaded
        /// to, including the filename. Otherwise, if the autoStorageContainerName or storageContainerUrl property is specified, filePath
        /// is optional and is the directory to download the files to. In the case where filePath is used as a directory, any directory
        /// structure already associated with the input data will be retained in full and appended to the specified filePath directory.
        /// The specified relative path cannot break out of the task's working directory (for example by using '..').
        /// </summary>
        string FilePath { get; set; }
        /// <summary>
        /// The autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be
        /// specified. If the URL points to Azure Blob Storage, it must be readable from compute nodes. There are three ways to get
        /// such a URL for a blob in Azure storage: include a Shared Access Signature (SAS) granting read permissions on the blob,
        /// use a managed identity with read permission, or set the ACL for the blob or its container to allow public access.
        /// </summary>
        string HttpUrl { get; set; }
        /// <summary>
        /// The reference to a user assigned identity associated with the Batch pool which a compute node will use.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IComputeNodeIdentityReference IdentityReference { get; set; }
        /// <summary>The ARM resource id of the user assigned identity.</summary>
        string IdentityReferenceResourceId { get; set; }
        /// <summary>
        /// The autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be
        /// specified. This URL must be readable and listable from compute nodes. There are three ways to get such a URL for a container
        /// in Azure storage: include a Shared Access Signature (SAS) granting read and list permissions on the container, use a managed
        /// identity with read and list permissions, or set the ACL for the container to allow public access.
        /// </summary>
        string StorageContainerUrl { get; set; }

    }
}