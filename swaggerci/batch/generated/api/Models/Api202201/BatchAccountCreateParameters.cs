// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Extensions;

    /// <summary>Parameters supplied to the Create operation.</summary>
    public partial class BatchAccountCreateParameters :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreateParameters,
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreateParametersInternal
    {

        /// <summary>
        /// List of allowed authentication modes for the Batch account that can be used to authenticate with the data plane. This
        /// does not affect authentication with the control plane.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.AuthenticationMode[] AllowedAuthenticationMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreatePropertiesInternal)Property).AllowedAuthenticationMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreatePropertiesInternal)Property).AllowedAuthenticationMode = value ?? null /* arrayOf */; }

        /// <summary>The resource ID of the storage account to be used for auto-storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public string AutoStorageAccountId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreatePropertiesInternal)Property).AutoStorageAccountId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreatePropertiesInternal)Property).AutoStorageAccountId = value ?? null; }

        /// <summary>
        /// The authentication mode which the Batch service will use to manage the auto-storage account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.AutoStorageAuthenticationMode? AutoStorageAuthenticationMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreatePropertiesInternal)Property).AutoStorageAuthenticationMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreatePropertiesInternal)Property).AutoStorageAuthenticationMode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.AutoStorageAuthenticationMode)""); }

        /// <summary>Type of the key source.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.KeySource? EncryptionKeySource { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreatePropertiesInternal)Property).EncryptionKeySource; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreatePropertiesInternal)Property).EncryptionKeySource = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.KeySource)""); }

        /// <summary>Backing field for <see cref="Identity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountIdentity _identity;

        /// <summary>The identity of the Batch account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountIdentity Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.BatchAccountIdentity()); set => this._identity = value; }

        /// <summary>
        /// The principal id of the Batch account. This property will only be provided for a system assigned identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public string IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountIdentityInternal)Identity).PrincipalId; }

        /// <summary>
        /// The tenant id associated with the Batch account. This property will only be provided for a system assigned identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public string IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountIdentityInternal)Identity).TenantId; }

        /// <summary>The type of identity used for the Batch account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.ResourceIdentityType? IdentityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountIdentityInternal)Identity).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountIdentityInternal)Identity).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.ResourceIdentityType)""); }

        /// <summary>The list of user identities associated with the Batch account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountIdentityUserAssignedIdentities IdentityUserAssignedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountIdentityInternal)Identity).UserAssignedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountIdentityInternal)Identity).UserAssignedIdentity = value ?? null /* model class */; }

        /// <summary>
        /// Full path to the versioned secret. Example https://mykeyvault.vault.azure.net/keys/testkey/6e34a81fef704045975661e297a4c053.
        /// To be usable the following prerequisites must be met:
        /// The Batch Account has a System Assigned identity
        /// The account identity has been granted Key/Get, Key/Unwrap and Key/Wrap permissions
        /// The KeyVault has soft-delete and purge protection enabled
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public string KeyVaultPropertyKeyIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreatePropertiesInternal)Property).KeyVaultPropertyKeyIdentifier; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreatePropertiesInternal)Property).KeyVaultPropertyKeyIdentifier = value ?? null; }

        /// <summary>The resource ID of the Azure key vault associated with the Batch account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public string KeyVaultReferenceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreatePropertiesInternal)Property).KeyVaultReferenceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreatePropertiesInternal)Property).KeyVaultReferenceId = value ?? null; }

        /// <summary>The URL of the Azure key vault associated with the Batch account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public string KeyVaultReferenceUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreatePropertiesInternal)Property).KeyVaultReferenceUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreatePropertiesInternal)Property).KeyVaultReferenceUrl = value ?? null; }

        /// <summary>Backing field for <see cref="Location" /> property.</summary>
        private string _location;

        /// <summary>The region in which to create the account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string Location { get => this._location; set => this._location = value; }

        /// <summary>Internal Acessors for AutoStorage</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IAutoStorageBaseProperties Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreateParametersInternal.AutoStorage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreatePropertiesInternal)Property).AutoStorage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreatePropertiesInternal)Property).AutoStorage = value; }

        /// <summary>Internal Acessors for AutoStorageNodeIdentityReference</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IComputeNodeIdentityReference Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreateParametersInternal.AutoStorageNodeIdentityReference { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreatePropertiesInternal)Property).AutoStorageNodeIdentityReference; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreatePropertiesInternal)Property).AutoStorageNodeIdentityReference = value; }

        /// <summary>Internal Acessors for Encryption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IEncryptionProperties Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreateParametersInternal.Encryption { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreatePropertiesInternal)Property).Encryption; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreatePropertiesInternal)Property).Encryption = value; }

        /// <summary>Internal Acessors for EncryptionKeyVaultProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IKeyVaultProperties Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreateParametersInternal.EncryptionKeyVaultProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreatePropertiesInternal)Property).EncryptionKeyVaultProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreatePropertiesInternal)Property).EncryptionKeyVaultProperty = value; }

        /// <summary>Internal Acessors for Identity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountIdentity Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreateParametersInternal.Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.BatchAccountIdentity()); set { {_identity = value;} } }

        /// <summary>Internal Acessors for IdentityPrincipalId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreateParametersInternal.IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountIdentityInternal)Identity).PrincipalId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountIdentityInternal)Identity).PrincipalId = value; }

        /// <summary>Internal Acessors for IdentityTenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreateParametersInternal.IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountIdentityInternal)Identity).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountIdentityInternal)Identity).TenantId = value; }

        /// <summary>Internal Acessors for KeyVaultReference</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IKeyVaultReference Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreateParametersInternal.KeyVaultReference { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreatePropertiesInternal)Property).KeyVaultReference; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreatePropertiesInternal)Property).KeyVaultReference = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreateProperties Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreateParametersInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.BatchAccountCreateProperties()); set { {_property = value;} } }

        /// <summary>The ARM resource id of the user assigned identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public string NodeIdentityReferenceResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreatePropertiesInternal)Property).NodeIdentityReferenceResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreatePropertiesInternal)Property).NodeIdentityReferenceResourceId = value ?? null; }

        /// <summary>
        /// The pool allocation mode also affects how clients may authenticate to the Batch Service API. If the mode is BatchService,
        /// clients may authenticate using access keys or Azure Active Directory. If the mode is UserSubscription, clients must use
        /// Azure Active Directory. The default is BatchService.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.PoolAllocationMode? PoolAllocationMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreatePropertiesInternal)Property).PoolAllocationMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreatePropertiesInternal)Property).PoolAllocationMode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.PoolAllocationMode)""); }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreateProperties _property;

        /// <summary>The properties of the Batch account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreateProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.BatchAccountCreateProperties()); set => this._property = value; }

        /// <summary>If not specified, the default value is 'enabled'.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.PublicNetworkAccessType? PublicNetworkAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreatePropertiesInternal)Property).PublicNetworkAccess; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreatePropertiesInternal)Property).PublicNetworkAccess = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.PublicNetworkAccessType)""); }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreateParametersTags _tag;

        /// <summary>The user-specified tags associated with the account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreateParametersTags Tag { get => (this._tag = this._tag ?? new Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.BatchAccountCreateParametersTags()); set => this._tag = value; }

        /// <summary>Creates an new <see cref="BatchAccountCreateParameters" /> instance.</summary>
        public BatchAccountCreateParameters()
        {

        }
    }
    /// Parameters supplied to the Create operation.
    public partial interface IBatchAccountCreateParameters :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.IJsonSerializable
    {
        /// <summary>
        /// List of allowed authentication modes for the Batch account that can be used to authenticate with the data plane. This
        /// does not affect authentication with the control plane.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of allowed authentication modes for the Batch account that can be used to authenticate with the data plane. This does not affect authentication with the control plane.",
        SerializedName = @"allowedAuthenticationModes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.AuthenticationMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.AuthenticationMode[] AllowedAuthenticationMode { get; set; }
        /// <summary>The resource ID of the storage account to be used for auto-storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource ID of the storage account to be used for auto-storage account.",
        SerializedName = @"storageAccountId",
        PossibleTypes = new [] { typeof(string) })]
        string AutoStorageAccountId { get; set; }
        /// <summary>
        /// The authentication mode which the Batch service will use to manage the auto-storage account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The authentication mode which the Batch service will use to manage the auto-storage account.",
        SerializedName = @"authenticationMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.AutoStorageAuthenticationMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.AutoStorageAuthenticationMode? AutoStorageAuthenticationMode { get; set; }
        /// <summary>Type of the key source.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of the key source.",
        SerializedName = @"keySource",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.KeySource) })]
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.KeySource? EncryptionKeySource { get; set; }
        /// <summary>
        /// The principal id of the Batch account. This property will only be provided for a system assigned identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The principal id of the Batch account. This property will only be provided for a system assigned identity.",
        SerializedName = @"principalId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityPrincipalId { get;  }
        /// <summary>
        /// The tenant id associated with the Batch account. This property will only be provided for a system assigned identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The tenant id associated with the Batch account. This property will only be provided for a system assigned identity.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityTenantId { get;  }
        /// <summary>The type of identity used for the Batch account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity used for the Batch account.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.ResourceIdentityType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.ResourceIdentityType? IdentityType { get; set; }
        /// <summary>The list of user identities associated with the Batch account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of user identities associated with the Batch account.",
        SerializedName = @"userAssignedIdentities",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountIdentityUserAssignedIdentities) })]
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountIdentityUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }
        /// <summary>
        /// Full path to the versioned secret. Example https://mykeyvault.vault.azure.net/keys/testkey/6e34a81fef704045975661e297a4c053.
        /// To be usable the following prerequisites must be met:
        /// The Batch Account has a System Assigned identity
        /// The account identity has been granted Key/Get, Key/Unwrap and Key/Wrap permissions
        /// The KeyVault has soft-delete and purge protection enabled
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Full path to the versioned secret. Example https://mykeyvault.vault.azure.net/keys/testkey/6e34a81fef704045975661e297a4c053. To be usable the following prerequisites must be met:

         The Batch Account has a System Assigned identity
         The account identity has been granted Key/Get, Key/Unwrap and Key/Wrap permissions
         The KeyVault has soft-delete and purge protection enabled",
        SerializedName = @"keyIdentifier",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultPropertyKeyIdentifier { get; set; }
        /// <summary>The resource ID of the Azure key vault associated with the Batch account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource ID of the Azure key vault associated with the Batch account.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultReferenceId { get; set; }
        /// <summary>The URL of the Azure key vault associated with the Batch account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The URL of the Azure key vault associated with the Batch account.",
        SerializedName = @"url",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultReferenceUrl { get; set; }
        /// <summary>The region in which to create the account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The region in which to create the account.",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string Location { get; set; }
        /// <summary>The ARM resource id of the user assigned identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ARM resource id of the user assigned identity.",
        SerializedName = @"resourceId",
        PossibleTypes = new [] { typeof(string) })]
        string NodeIdentityReferenceResourceId { get; set; }
        /// <summary>
        /// The pool allocation mode also affects how clients may authenticate to the Batch Service API. If the mode is BatchService,
        /// clients may authenticate using access keys or Azure Active Directory. If the mode is UserSubscription, clients must use
        /// Azure Active Directory. The default is BatchService.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The pool allocation mode also affects how clients may authenticate to the Batch Service API. If the mode is BatchService, clients may authenticate using access keys or Azure Active Directory. If the mode is UserSubscription, clients must use Azure Active Directory. The default is BatchService.",
        SerializedName = @"poolAllocationMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.PoolAllocationMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.PoolAllocationMode? PoolAllocationMode { get; set; }
        /// <summary>If not specified, the default value is 'enabled'.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If not specified, the default value is 'enabled'.",
        SerializedName = @"publicNetworkAccess",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.PublicNetworkAccessType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.PublicNetworkAccessType? PublicNetworkAccess { get; set; }
        /// <summary>The user-specified tags associated with the account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The user-specified tags associated with the account.",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreateParametersTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreateParametersTags Tag { get; set; }

    }
    /// Parameters supplied to the Create operation.
    internal partial interface IBatchAccountCreateParametersInternal

    {
        /// <summary>
        /// List of allowed authentication modes for the Batch account that can be used to authenticate with the data plane. This
        /// does not affect authentication with the control plane.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.AuthenticationMode[] AllowedAuthenticationMode { get; set; }
        /// <summary>The properties related to the auto-storage account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IAutoStorageBaseProperties AutoStorage { get; set; }
        /// <summary>The resource ID of the storage account to be used for auto-storage account.</summary>
        string AutoStorageAccountId { get; set; }
        /// <summary>
        /// The authentication mode which the Batch service will use to manage the auto-storage account.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.AutoStorageAuthenticationMode? AutoStorageAuthenticationMode { get; set; }
        /// <summary>
        /// The identity referenced here must be assigned to pools which have compute nodes that need access to auto-storage.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IComputeNodeIdentityReference AutoStorageNodeIdentityReference { get; set; }
        /// <summary>
        /// Configures how customer data is encrypted inside the Batch account. By default, accounts are encrypted using a Microsoft
        /// managed key. For additional control, a customer-managed key can be used instead.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IEncryptionProperties Encryption { get; set; }
        /// <summary>Type of the key source.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.KeySource? EncryptionKeySource { get; set; }
        /// <summary>Additional details when using Microsoft.KeyVault</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IKeyVaultProperties EncryptionKeyVaultProperty { get; set; }
        /// <summary>The identity of the Batch account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountIdentity Identity { get; set; }
        /// <summary>
        /// The principal id of the Batch account. This property will only be provided for a system assigned identity.
        /// </summary>
        string IdentityPrincipalId { get; set; }
        /// <summary>
        /// The tenant id associated with the Batch account. This property will only be provided for a system assigned identity.
        /// </summary>
        string IdentityTenantId { get; set; }
        /// <summary>The type of identity used for the Batch account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.ResourceIdentityType? IdentityType { get; set; }
        /// <summary>The list of user identities associated with the Batch account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountIdentityUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }
        /// <summary>
        /// Full path to the versioned secret. Example https://mykeyvault.vault.azure.net/keys/testkey/6e34a81fef704045975661e297a4c053.
        /// To be usable the following prerequisites must be met:
        /// The Batch Account has a System Assigned identity
        /// The account identity has been granted Key/Get, Key/Unwrap and Key/Wrap permissions
        /// The KeyVault has soft-delete and purge protection enabled
        /// </summary>
        string KeyVaultPropertyKeyIdentifier { get; set; }
        /// <summary>A reference to the Azure key vault associated with the Batch account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IKeyVaultReference KeyVaultReference { get; set; }
        /// <summary>The resource ID of the Azure key vault associated with the Batch account.</summary>
        string KeyVaultReferenceId { get; set; }
        /// <summary>The URL of the Azure key vault associated with the Batch account.</summary>
        string KeyVaultReferenceUrl { get; set; }
        /// <summary>The region in which to create the account.</summary>
        string Location { get; set; }
        /// <summary>The ARM resource id of the user assigned identity.</summary>
        string NodeIdentityReferenceResourceId { get; set; }
        /// <summary>
        /// The pool allocation mode also affects how clients may authenticate to the Batch Service API. If the mode is BatchService,
        /// clients may authenticate using access keys or Azure Active Directory. If the mode is UserSubscription, clients must use
        /// Azure Active Directory. The default is BatchService.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.PoolAllocationMode? PoolAllocationMode { get; set; }
        /// <summary>The properties of the Batch account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreateProperties Property { get; set; }
        /// <summary>If not specified, the default value is 'enabled'.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.PublicNetworkAccessType? PublicNetworkAccess { get; set; }
        /// <summary>The user-specified tags associated with the account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IBatchAccountCreateParametersTags Tag { get; set; }

    }
}