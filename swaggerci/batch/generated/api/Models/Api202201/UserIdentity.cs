// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Extensions;

    /// <summary>Specify either the userName or autoUser property, but not both.</summary>
    public partial class UserIdentity :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IUserIdentity,
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IUserIdentityInternal
    {

        /// <summary>Backing field for <see cref="AutoUser" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IAutoUserSpecification _autoUser;

        /// <summary>
        /// The userName and autoUser properties are mutually exclusive; you must specify one but not both.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IAutoUserSpecification AutoUser { get => (this._autoUser = this._autoUser ?? new Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.AutoUserSpecification()); set => this._autoUser = value; }

        /// <summary>The default value is nonAdmin.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.ElevationLevel? AutoUserElevationLevel { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IAutoUserSpecificationInternal)AutoUser).ElevationLevel; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IAutoUserSpecificationInternal)AutoUser).ElevationLevel = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.ElevationLevel)""); }

        /// <summary>
        /// The default value is Pool. If the pool is running Windows a value of Task should be specified if stricter isolation between
        /// tasks is required. For example, if the task mutates the registry in a way which could impact other tasks, or if certificates
        /// have been specified on the pool which should not be accessible by normal tasks but should be accessible by start tasks.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.AutoUserScope? AutoUserScope { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IAutoUserSpecificationInternal)AutoUser).Scope; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IAutoUserSpecificationInternal)AutoUser).Scope = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.AutoUserScope)""); }

        /// <summary>Internal Acessors for AutoUser</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IAutoUserSpecification Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IUserIdentityInternal.AutoUser { get => (this._autoUser = this._autoUser ?? new Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.AutoUserSpecification()); set { {_autoUser = value;} } }

        /// <summary>Backing field for <see cref="UserName" /> property.</summary>
        private string _userName;

        /// <summary>
        /// The userName and autoUser properties are mutually exclusive; you must specify one but not both.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string UserName { get => this._userName; set => this._userName = value; }

        /// <summary>Creates an new <see cref="UserIdentity" /> instance.</summary>
        public UserIdentity()
        {

        }
    }
    /// Specify either the userName or autoUser property, but not both.
    public partial interface IUserIdentity :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.IJsonSerializable
    {
        /// <summary>The default value is nonAdmin.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The default value is nonAdmin.",
        SerializedName = @"elevationLevel",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.ElevationLevel) })]
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.ElevationLevel? AutoUserElevationLevel { get; set; }
        /// <summary>
        /// The default value is Pool. If the pool is running Windows a value of Task should be specified if stricter isolation between
        /// tasks is required. For example, if the task mutates the registry in a way which could impact other tasks, or if certificates
        /// have been specified on the pool which should not be accessible by normal tasks but should be accessible by start tasks.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The default value is Pool. If the pool is running Windows a value of Task should be specified if stricter isolation between tasks is required. For example, if the task mutates the registry in a way which could impact other tasks, or if certificates have been specified on the pool which should not be accessible by normal tasks but should be accessible by start tasks.",
        SerializedName = @"scope",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.AutoUserScope) })]
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.AutoUserScope? AutoUserScope { get; set; }
        /// <summary>
        /// The userName and autoUser properties are mutually exclusive; you must specify one but not both.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The userName and autoUser properties are mutually exclusive; you must specify one but not both.",
        SerializedName = @"userName",
        PossibleTypes = new [] { typeof(string) })]
        string UserName { get; set; }

    }
    /// Specify either the userName or autoUser property, but not both.
    internal partial interface IUserIdentityInternal

    {
        /// <summary>
        /// The userName and autoUser properties are mutually exclusive; you must specify one but not both.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IAutoUserSpecification AutoUser { get; set; }
        /// <summary>The default value is nonAdmin.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.ElevationLevel? AutoUserElevationLevel { get; set; }
        /// <summary>
        /// The default value is Pool. If the pool is running Windows a value of Task should be specified if stricter isolation between
        /// tasks is required. For example, if the task mutates the registry in a way which could impact other tasks, or if certificates
        /// have been specified on the pool which should not be accessible by normal tasks but should be accessible by start tasks.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.AutoUserScope? AutoUserScope { get; set; }
        /// <summary>
        /// The userName and autoUser properties are mutually exclusive; you must specify one but not both.
        /// </summary>
        string UserName { get; set; }

    }
}