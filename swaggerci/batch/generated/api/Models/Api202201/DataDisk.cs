// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Extensions;

    /// <summary>
    /// Settings which will be used by the data disks associated to Compute Nodes in the Pool. When using attached data disks,
    /// you need to mount and format the disks from within a VM to use them.
    /// </summary>
    public partial class DataDisk :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDataDisk,
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api202201.IDataDiskInternal
    {

        /// <summary>Backing field for <see cref="Caching" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.CachingType? _caching;

        /// <summary>
        /// Values are:
        /// none - The caching mode for the disk is not enabled.
        /// readOnly - The caching mode for the disk is read only.
        /// readWrite - The caching mode for the disk is read and write.
        /// The default value for caching is none. For information about the caching options see: https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.CachingType? Caching { get => this._caching; set => this._caching = value; }

        /// <summary>Backing field for <see cref="DiskSizeGb" /> property.</summary>
        private int _diskSizeGb;

        /// <summary>The initial disk size in GB when creating new data disk.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public int DiskSizeGb { get => this._diskSizeGb; set => this._diskSizeGb = value; }

        /// <summary>Backing field for <see cref="Lun" /> property.</summary>
        private int _lun;

        /// <summary>
        /// The lun is used to uniquely identify each data disk. If attaching multiple disks, each should have a distinct lun. The
        /// value must be between 0 and 63, inclusive.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public int Lun { get => this._lun; set => this._lun = value; }

        /// <summary>Backing field for <see cref="StorageAccountType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.StorageAccountType? _storageAccountType;

        /// <summary>
        /// If omitted, the default is "Standard_LRS". Values are:
        /// Standard_LRS - The data disk should use standard locally redundant storage.
        /// Premium_LRS - The data disk should use premium locally redundant storage.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.StorageAccountType? StorageAccountType { get => this._storageAccountType; set => this._storageAccountType = value; }

        /// <summary>Creates an new <see cref="DataDisk" /> instance.</summary>
        public DataDisk()
        {

        }
    }
    /// Settings which will be used by the data disks associated to Compute Nodes in the Pool. When using attached data disks,
    /// you need to mount and format the disks from within a VM to use them.
    public partial interface IDataDisk :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Values are:
        /// none - The caching mode for the disk is not enabled.
        /// readOnly - The caching mode for the disk is read only.
        /// readWrite - The caching mode for the disk is read and write.
        /// The default value for caching is none. For information about the caching options see: https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Values are:

         none - The caching mode for the disk is not enabled.
         readOnly - The caching mode for the disk is read only.
         readWrite - The caching mode for the disk is read and write.

         The default value for caching is none. For information about the caching options see: https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.",
        SerializedName = @"caching",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.CachingType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.CachingType? Caching { get; set; }
        /// <summary>The initial disk size in GB when creating new data disk.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The initial disk size in GB when creating new data disk.",
        SerializedName = @"diskSizeGB",
        PossibleTypes = new [] { typeof(int) })]
        int DiskSizeGb { get; set; }
        /// <summary>
        /// The lun is used to uniquely identify each data disk. If attaching multiple disks, each should have a distinct lun. The
        /// value must be between 0 and 63, inclusive.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The lun is used to uniquely identify each data disk. If attaching multiple disks, each should have a distinct lun. The value must be between 0 and 63, inclusive.",
        SerializedName = @"lun",
        PossibleTypes = new [] { typeof(int) })]
        int Lun { get; set; }
        /// <summary>
        /// If omitted, the default is "Standard_LRS". Values are:
        /// Standard_LRS - The data disk should use standard locally redundant storage.
        /// Premium_LRS - The data disk should use premium locally redundant storage.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If omitted, the default is ""Standard_LRS"". Values are:

         Standard_LRS - The data disk should use standard locally redundant storage.
         Premium_LRS - The data disk should use premium locally redundant storage.",
        SerializedName = @"storageAccountType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.StorageAccountType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.StorageAccountType? StorageAccountType { get; set; }

    }
    /// Settings which will be used by the data disks associated to Compute Nodes in the Pool. When using attached data disks,
    /// you need to mount and format the disks from within a VM to use them.
    internal partial interface IDataDiskInternal

    {
        /// <summary>
        /// Values are:
        /// none - The caching mode for the disk is not enabled.
        /// readOnly - The caching mode for the disk is read only.
        /// readWrite - The caching mode for the disk is read and write.
        /// The default value for caching is none. For information about the caching options see: https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.CachingType? Caching { get; set; }
        /// <summary>The initial disk size in GB when creating new data disk.</summary>
        int DiskSizeGb { get; set; }
        /// <summary>
        /// The lun is used to uniquely identify each data disk. If attaching multiple disks, each should have a distinct lun. The
        /// value must be between 0 and 63, inclusive.
        /// </summary>
        int Lun { get; set; }
        /// <summary>
        /// If omitted, the default is "Standard_LRS". Values are:
        /// Standard_LRS - The data disk should use standard locally redundant storage.
        /// Premium_LRS - The data disk should use premium locally redundant storage.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.StorageAccountType? StorageAccountType { get; set; }

    }
}