// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Batch.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Extensions;

    public partial class BatchIdentity :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchIdentity,
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.IBatchIdentityInternal
    {

        /// <summary>Backing field for <see cref="AccountName" /> property.</summary>
        private string _accountName;

        /// <summary>
        /// A name for the Batch account which must be unique within the region. Batch account names must be between 3 and 24 characters
        /// in length and must use only numbers and lowercase letters. This name is used as part of the DNS name that is used to access
        /// the Batch service in the region in which the account is created. For example: http://accountname.region.batch.azure.com/.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string AccountName { get => this._accountName; set => this._accountName = value; }

        /// <summary>Backing field for <see cref="ApplicationName" /> property.</summary>
        private string _applicationName;

        /// <summary>The name of the application. This must be unique within the account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string ApplicationName { get => this._applicationName; set => this._applicationName = value; }

        /// <summary>Backing field for <see cref="CertificateName" /> property.</summary>
        private string _certificateName;

        /// <summary>
        /// The identifier for the certificate. This must be made up of algorithm and thumbprint separated by a dash, and must match
        /// the certificate data in the request. For example SHA1-a3d1c5.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string CertificateName { get => this._certificateName; set => this._certificateName = value; }

        /// <summary>Backing field for <see cref="DetectorId" /> property.</summary>
        private string _detectorId;

        /// <summary>The name of the detector.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string DetectorId { get => this._detectorId; set => this._detectorId = value; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>Resource identity path</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string Id { get => this._id; set => this._id = value; }

        /// <summary>Backing field for <see cref="LocationName" /> property.</summary>
        private string _locationName;

        /// <summary>The region for which to retrieve Batch service quotas.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string LocationName { get => this._locationName; set => this._locationName = value; }

        /// <summary>Backing field for <see cref="PoolName" /> property.</summary>
        private string _poolName;

        /// <summary>The pool name. This must be unique within the account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string PoolName { get => this._poolName; set => this._poolName = value; }

        /// <summary>Backing field for <see cref="PrivateEndpointConnectionName" /> property.</summary>
        private string _privateEndpointConnectionName;

        /// <summary>The private endpoint connection name. This must be unique within the account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string PrivateEndpointConnectionName { get => this._privateEndpointConnectionName; set => this._privateEndpointConnectionName = value; }

        /// <summary>Backing field for <see cref="PrivateLinkResourceName" /> property.</summary>
        private string _privateLinkResourceName;

        /// <summary>The private link resource name. This must be unique within the account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string PrivateLinkResourceName { get => this._privateLinkResourceName; set => this._privateLinkResourceName = value; }

        /// <summary>Backing field for <see cref="ResourceGroupName" /> property.</summary>
        private string _resourceGroupName;

        /// <summary>The name of the resource group that contains the Batch account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string ResourceGroupName { get => this._resourceGroupName; set => this._resourceGroupName = value; }

        /// <summary>Backing field for <see cref="SubscriptionId" /> property.</summary>
        private string _subscriptionId;

        /// <summary>
        /// The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string SubscriptionId { get => this._subscriptionId; set => this._subscriptionId = value; }

        /// <summary>Backing field for <see cref="VersionName" /> property.</summary>
        private string _versionName;

        /// <summary>The version of the application.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public string VersionName { get => this._versionName; set => this._versionName = value; }

        /// <summary>Creates an new <see cref="BatchIdentity" /> instance.</summary>
        public BatchIdentity()
        {

        }
    }
    public partial interface IBatchIdentity :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.IJsonSerializable
    {
        /// <summary>
        /// A name for the Batch account which must be unique within the region. Batch account names must be between 3 and 24 characters
        /// in length and must use only numbers and lowercase letters. This name is used as part of the DNS name that is used to access
        /// the Batch service in the region in which the account is created. For example: http://accountname.region.batch.azure.com/.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A name for the Batch account which must be unique within the region. Batch account names must be between 3 and 24 characters in length and must use only numbers and lowercase letters. This name is used as part of the DNS name that is used to access the Batch service in the region in which the account is created. For example: http://accountname.region.batch.azure.com/.",
        SerializedName = @"accountName",
        PossibleTypes = new [] { typeof(string) })]
        string AccountName { get; set; }
        /// <summary>The name of the application. This must be unique within the account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the application. This must be unique within the account.",
        SerializedName = @"applicationName",
        PossibleTypes = new [] { typeof(string) })]
        string ApplicationName { get; set; }
        /// <summary>
        /// The identifier for the certificate. This must be made up of algorithm and thumbprint separated by a dash, and must match
        /// the certificate data in the request. For example SHA1-a3d1c5.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identifier for the certificate. This must be made up of algorithm and thumbprint separated by a dash, and must match the certificate data in the request. For example SHA1-a3d1c5.",
        SerializedName = @"certificateName",
        PossibleTypes = new [] { typeof(string) })]
        string CertificateName { get; set; }
        /// <summary>The name of the detector.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the detector.",
        SerializedName = @"detectorId",
        PossibleTypes = new [] { typeof(string) })]
        string DetectorId { get; set; }
        /// <summary>Resource identity path</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource identity path",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get; set; }
        /// <summary>The region for which to retrieve Batch service quotas.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The region for which to retrieve Batch service quotas.",
        SerializedName = @"locationName",
        PossibleTypes = new [] { typeof(string) })]
        string LocationName { get; set; }
        /// <summary>The pool name. This must be unique within the account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The pool name. This must be unique within the account.",
        SerializedName = @"poolName",
        PossibleTypes = new [] { typeof(string) })]
        string PoolName { get; set; }
        /// <summary>The private endpoint connection name. This must be unique within the account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The private endpoint connection name. This must be unique within the account.",
        SerializedName = @"privateEndpointConnectionName",
        PossibleTypes = new [] { typeof(string) })]
        string PrivateEndpointConnectionName { get; set; }
        /// <summary>The private link resource name. This must be unique within the account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The private link resource name. This must be unique within the account.",
        SerializedName = @"privateLinkResourceName",
        PossibleTypes = new [] { typeof(string) })]
        string PrivateLinkResourceName { get; set; }
        /// <summary>The name of the resource group that contains the Batch account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the resource group that contains the Batch account.",
        SerializedName = @"resourceGroupName",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceGroupName { get; set; }
        /// <summary>
        /// The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionId { get; set; }
        /// <summary>The version of the application.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The version of the application.",
        SerializedName = @"versionName",
        PossibleTypes = new [] { typeof(string) })]
        string VersionName { get; set; }

    }
    internal partial interface IBatchIdentityInternal

    {
        /// <summary>
        /// A name for the Batch account which must be unique within the region. Batch account names must be between 3 and 24 characters
        /// in length and must use only numbers and lowercase letters. This name is used as part of the DNS name that is used to access
        /// the Batch service in the region in which the account is created. For example: http://accountname.region.batch.azure.com/.
        /// </summary>
        string AccountName { get; set; }
        /// <summary>The name of the application. This must be unique within the account.</summary>
        string ApplicationName { get; set; }
        /// <summary>
        /// The identifier for the certificate. This must be made up of algorithm and thumbprint separated by a dash, and must match
        /// the certificate data in the request. For example SHA1-a3d1c5.
        /// </summary>
        string CertificateName { get; set; }
        /// <summary>The name of the detector.</summary>
        string DetectorId { get; set; }
        /// <summary>Resource identity path</summary>
        string Id { get; set; }
        /// <summary>The region for which to retrieve Batch service quotas.</summary>
        string LocationName { get; set; }
        /// <summary>The pool name. This must be unique within the account.</summary>
        string PoolName { get; set; }
        /// <summary>The private endpoint connection name. This must be unique within the account.</summary>
        string PrivateEndpointConnectionName { get; set; }
        /// <summary>The private link resource name. This must be unique within the account.</summary>
        string PrivateLinkResourceName { get; set; }
        /// <summary>The name of the resource group that contains the Batch account.</summary>
        string ResourceGroupName { get; set; }
        /// <summary>
        /// The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
        /// </summary>
        string SubscriptionId { get; set; }
        /// <summary>The version of the application.</summary>
        string VersionName { get; set; }

    }
}