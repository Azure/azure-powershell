// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Batch.Support
{

    /// <summary>
    /// Determines what to do with a node and its running task(s) after it has been selected for deallocation.
    /// </summary>
    public partial struct ComputeNodeDeallocationOption :
        System.IEquatable<ComputeNodeDeallocationOption>
    {
        /// <summary>
        /// Terminate running task processes and requeue the tasks. The tasks will run again when a node is available. Remove nodes
        /// as soon as tasks have been terminated.
        /// </summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.ComputeNodeDeallocationOption Requeue = @"Requeue";

        /// <summary>
        /// Allow currently running tasks to complete, then wait for all task data retention periods to expire. Schedule no new tasks
        /// while waiting. Remove nodes when all task retention periods have expired.
        /// </summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.ComputeNodeDeallocationOption RetainedData = @"RetainedData";

        /// <summary>
        /// Allow currently running tasks to complete. Schedule no new tasks while waiting. Remove nodes when all tasks have completed.
        /// </summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.ComputeNodeDeallocationOption TaskCompletion = @"TaskCompletion";

        /// <summary>
        /// Terminate running tasks. The tasks will be completed with failureInfo indicating that they were terminated, and will not
        /// run again. Remove nodes as soon as tasks have been terminated.
        /// </summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.ComputeNodeDeallocationOption Terminate = @"Terminate";

        /// <summary>
        /// the value for an instance of the <see cref="ComputeNodeDeallocationOption" /> Enum.
        /// </summary>
        private string _value { get; set; }

        /// <summary>
        /// Creates an instance of the <see cref="ComputeNodeDeallocationOption" Enum class./>
        /// </summary>
        /// <param name="underlyingValue">the value to create an instance for.</param>
        private ComputeNodeDeallocationOption(string underlyingValue)
        {
            this._value = underlyingValue;
        }

        /// <summary>Conversion from arbitrary object to ComputeNodeDeallocationOption</summary>
        /// <param name="value">the value to convert to an instance of <see cref="ComputeNodeDeallocationOption" />.</param>
        internal static object CreateFrom(object value)
        {
            return new ComputeNodeDeallocationOption(global::System.Convert.ToString(value));
        }

        /// <summary>Compares values of enum type ComputeNodeDeallocationOption</summary>
        /// <param name="e">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public bool Equals(Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.ComputeNodeDeallocationOption e)
        {
            return _value.Equals(e._value);
        }

        /// <summary>
        /// Compares values of enum type ComputeNodeDeallocationOption (override for Object)
        /// </summary>
        /// <param name="obj">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public override bool Equals(object obj)
        {
            return obj is ComputeNodeDeallocationOption && Equals((ComputeNodeDeallocationOption)obj);
        }

        /// <summary>Returns hashCode for enum ComputeNodeDeallocationOption</summary>
        /// <returns>The hashCode of the value</returns>
        public override int GetHashCode()
        {
            return this._value.GetHashCode();
        }

        /// <summary>Returns string representation for ComputeNodeDeallocationOption</summary>
        /// <returns>A string for this value.</returns>
        public override string ToString()
        {
            return this._value;
        }

        /// <summary>Implicit operator to convert string to ComputeNodeDeallocationOption</summary>
        /// <param name="value">the value to convert to an instance of <see cref="ComputeNodeDeallocationOption" />.</param>

        public static implicit operator ComputeNodeDeallocationOption(string value)
        {
            return new ComputeNodeDeallocationOption(value);
        }

        /// <summary>Implicit operator to convert ComputeNodeDeallocationOption to string</summary>
        /// <param name="e">the value to convert to an instance of <see cref="ComputeNodeDeallocationOption" />.</param>

        public static implicit operator string(Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.ComputeNodeDeallocationOption e)
        {
            return e._value;
        }

        /// <summary>Overriding != operator for enum ComputeNodeDeallocationOption</summary>
        /// <param name="e1">the value to compare against <see cref="e2" /></param>
        /// <param name="e2">the value to compare against <see cref="e1" /></param>
        /// <returns><c>true</c> if the two instances are not equal to the same value</returns>
        public static bool operator !=(Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.ComputeNodeDeallocationOption e1, Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.ComputeNodeDeallocationOption e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>Overriding == operator for enum ComputeNodeDeallocationOption</summary>
        /// <param name="e1">the value to compare against <see cref="e2" /></param>
        /// <param name="e2">the value to compare against <see cref="e1" /></param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public static bool operator ==(Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.ComputeNodeDeallocationOption e1, Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.ComputeNodeDeallocationOption e2)
        {
            return e2.Equals(e1);
        }
    }
}