// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Batch.Support
{

    /// <summary>
    /// This property can be used by user in the request to choose which location the operating system should be in. e.g., cache
    /// disk space for Ephemeral OS disk provisioning. For more information on Ephemeral OS disk size requirements, please refer
    /// to Ephemeral OS disk size requirements for Windows VMs at https://docs.microsoft.com/en-us/azure/virtual-machines/windows/ephemeral-os-disks#size-requirements
    /// and Linux VMs at https://docs.microsoft.com/en-us/azure/virtual-machines/linux/ephemeral-os-disks#size-requirements
    /// </summary>
    public partial struct DiffDiskPlacement :
        System.IEquatable<DiffDiskPlacement>
    {
        /// <summary>The Ephemeral OS Disk is stored on the VM cache.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.DiffDiskPlacement CacheDisk = @"CacheDisk";

        /// <summary>the value for an instance of the <see cref="DiffDiskPlacement" /> Enum.</summary>
        private string _value { get; set; }

        /// <summary>Conversion from arbitrary object to DiffDiskPlacement</summary>
        /// <param name="value">the value to convert to an instance of <see cref="DiffDiskPlacement" />.</param>
        internal static object CreateFrom(object value)
        {
            return new DiffDiskPlacement(global::System.Convert.ToString(value));
        }

        /// <summary>Creates an instance of the <see cref="DiffDiskPlacement" Enum class./></summary>
        /// <param name="underlyingValue">the value to create an instance for.</param>
        private DiffDiskPlacement(string underlyingValue)
        {
            this._value = underlyingValue;
        }

        /// <summary>Compares values of enum type DiffDiskPlacement</summary>
        /// <param name="e">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public bool Equals(Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.DiffDiskPlacement e)
        {
            return _value.Equals(e._value);
        }

        /// <summary>Compares values of enum type DiffDiskPlacement (override for Object)</summary>
        /// <param name="obj">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public override bool Equals(object obj)
        {
            return obj is DiffDiskPlacement && Equals((DiffDiskPlacement)obj);
        }

        /// <summary>Returns hashCode for enum DiffDiskPlacement</summary>
        /// <returns>The hashCode of the value</returns>
        public override int GetHashCode()
        {
            return this._value.GetHashCode();
        }

        /// <summary>Returns string representation for DiffDiskPlacement</summary>
        /// <returns>A string for this value.</returns>
        public override string ToString()
        {
            return this._value;
        }

        /// <summary>Implicit operator to convert string to DiffDiskPlacement</summary>
        /// <param name="value">the value to convert to an instance of <see cref="DiffDiskPlacement" />.</param>

        public static implicit operator DiffDiskPlacement(string value)
        {
            return new DiffDiskPlacement(value);
        }

        /// <summary>Implicit operator to convert DiffDiskPlacement to string</summary>
        /// <param name="e">the value to convert to an instance of <see cref="DiffDiskPlacement" />.</param>

        public static implicit operator string(Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.DiffDiskPlacement e)
        {
            return e._value;
        }

        /// <summary>Overriding != operator for enum DiffDiskPlacement</summary>
        /// <param name="e1">the value to compare against <see cref="e2" /></param>
        /// <param name="e2">the value to compare against <see cref="e1" /></param>
        /// <returns><c>true</c> if the two instances are not equal to the same value</returns>
        public static bool operator !=(Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.DiffDiskPlacement e1, Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.DiffDiskPlacement e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>Overriding == operator for enum DiffDiskPlacement</summary>
        /// <param name="e1">the value to compare against <see cref="e2" /></param>
        /// <param name="e2">the value to compare against <see cref="e1" /></param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public static bool operator ==(Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.DiffDiskPlacement e1, Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.DiffDiskPlacement e2)
        {
            return e2.Equals(e1);
        }
    }
}