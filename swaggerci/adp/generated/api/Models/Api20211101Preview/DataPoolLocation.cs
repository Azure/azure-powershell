// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Adp.Models.Api20211101Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Adp.Runtime.Extensions;

    /// <summary>Location of a Data Pool</summary>
    public partial class DataPoolLocation :
        Microsoft.Azure.PowerShell.Cmdlets.Adp.Models.Api20211101Preview.IDataPoolLocation,
        Microsoft.Azure.PowerShell.Cmdlets.Adp.Models.Api20211101Preview.IDataPoolLocationInternal
    {

        /// <summary>Backing field for <see cref="Encryption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Adp.Models.Api20211101Preview.IDataPoolEncryption _encryption;

        /// <summary>Encryption properties of a Data Pool location</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Adp.Origin(Microsoft.Azure.PowerShell.Cmdlets.Adp.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Adp.Models.Api20211101Preview.IDataPoolEncryption Encryption { get => (this._encryption = this._encryption ?? new Microsoft.Azure.PowerShell.Cmdlets.Adp.Models.Api20211101Preview.DataPoolEncryption()); set => this._encryption = value; }

        /// <summary>The name of Key Vault key</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Adp.Origin(Microsoft.Azure.PowerShell.Cmdlets.Adp.PropertyOrigin.Inlined)]
        public string EncryptionKeyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Adp.Models.Api20211101Preview.IDataPoolEncryptionInternal)Encryption).KeyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Adp.Models.Api20211101Preview.IDataPoolEncryptionInternal)Encryption).KeyName = value ?? null; }

        /// <summary>
        /// The URI of a soft delete-enabled Key Vault that is in the same location as the Data Pool location
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Adp.Origin(Microsoft.Azure.PowerShell.Cmdlets.Adp.PropertyOrigin.Inlined)]
        public string EncryptionKeyVaultUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.Adp.Models.Api20211101Preview.IDataPoolEncryptionInternal)Encryption).KeyVaultUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.Adp.Models.Api20211101Preview.IDataPoolEncryptionInternal)Encryption).KeyVaultUri = value ?? null; }

        /// <summary>The version of Key Vault key</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Adp.Origin(Microsoft.Azure.PowerShell.Cmdlets.Adp.PropertyOrigin.Inlined)]
        public string EncryptionKeyVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Adp.Models.Api20211101Preview.IDataPoolEncryptionInternal)Encryption).KeyVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Adp.Models.Api20211101Preview.IDataPoolEncryptionInternal)Encryption).KeyVersion = value ?? null; }

        /// <summary>
        /// The resource ID of a user-assigned Managed Identity used to access the encryption key in the Key Vault. Requires access
        /// to the key operations get, wrap, unwrap, and recover
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Adp.Origin(Microsoft.Azure.PowerShell.Cmdlets.Adp.PropertyOrigin.Inlined)]
        public string EncryptionUserAssignedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Adp.Models.Api20211101Preview.IDataPoolEncryptionInternal)Encryption).UserAssignedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.Adp.Models.Api20211101Preview.IDataPoolEncryptionInternal)Encryption).UserAssignedIdentity = value ?? null; }

        /// <summary>Internal Acessors for Encryption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Adp.Models.Api20211101Preview.IDataPoolEncryption Microsoft.Azure.PowerShell.Cmdlets.Adp.Models.Api20211101Preview.IDataPoolLocationInternal.Encryption { get => (this._encryption = this._encryption ?? new Microsoft.Azure.PowerShell.Cmdlets.Adp.Models.Api20211101Preview.DataPoolEncryption()); set { {_encryption = value;} } }

        /// <summary>Internal Acessors for StorageSku</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Adp.Models.Api20211101Preview.IStorageSku Microsoft.Azure.PowerShell.Cmdlets.Adp.Models.Api20211101Preview.IDataPoolLocationInternal.StorageSku { get => (this._storageSku = this._storageSku ?? new Microsoft.Azure.PowerShell.Cmdlets.Adp.Models.Api20211101Preview.StorageSku()); set { {_storageSku = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>The location name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Adp.Origin(Microsoft.Azure.PowerShell.Cmdlets.Adp.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="StorageAccountCount" /> property.</summary>
        private int? _storageAccountCount;

        /// <summary>The amount of storage accounts provisioned per Data Pool. Default: 5</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Adp.Origin(Microsoft.Azure.PowerShell.Cmdlets.Adp.PropertyOrigin.Owned)]
        public int? StorageAccountCount { get => this._storageAccountCount; set => this._storageAccountCount = value; }

        /// <summary>Backing field for <see cref="StorageSku" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Adp.Models.Api20211101Preview.IStorageSku _storageSku;

        /// <summary>The Storage SKU. Default: Standard_ZRS.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Adp.Origin(Microsoft.Azure.PowerShell.Cmdlets.Adp.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Adp.Models.Api20211101Preview.IStorageSku StorageSku { get => (this._storageSku = this._storageSku ?? new Microsoft.Azure.PowerShell.Cmdlets.Adp.Models.Api20211101Preview.StorageSku()); set => this._storageSku = value; }

        /// <summary>The SKU name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Adp.Origin(Microsoft.Azure.PowerShell.Cmdlets.Adp.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Adp.Support.StorageSkuName? StorageSkuName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Adp.Models.Api20211101Preview.IStorageSkuInternal)StorageSku).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Adp.Models.Api20211101Preview.IStorageSkuInternal)StorageSku).Name = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Adp.Support.StorageSkuName)""); }

        /// <summary>Creates an new <see cref="DataPoolLocation" /> instance.</summary>
        public DataPoolLocation()
        {

        }
    }
    /// Location of a Data Pool
    public partial interface IDataPoolLocation :
        Microsoft.Azure.PowerShell.Cmdlets.Adp.Runtime.IJsonSerializable
    {
        /// <summary>The name of Key Vault key</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Adp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of Key Vault key",
        SerializedName = @"keyName",
        PossibleTypes = new [] { typeof(string) })]
        string EncryptionKeyName { get; set; }
        /// <summary>
        /// The URI of a soft delete-enabled Key Vault that is in the same location as the Data Pool location
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Adp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The URI of a soft delete-enabled Key Vault that is in the same location as the Data Pool location",
        SerializedName = @"keyVaultUri",
        PossibleTypes = new [] { typeof(string) })]
        string EncryptionKeyVaultUri { get; set; }
        /// <summary>The version of Key Vault key</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Adp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The version of Key Vault key",
        SerializedName = @"keyVersion",
        PossibleTypes = new [] { typeof(string) })]
        string EncryptionKeyVersion { get; set; }
        /// <summary>
        /// The resource ID of a user-assigned Managed Identity used to access the encryption key in the Key Vault. Requires access
        /// to the key operations get, wrap, unwrap, and recover
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Adp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource ID of a user-assigned Managed Identity used to access the encryption key in the Key Vault. Requires access to the key operations get, wrap, unwrap, and recover",
        SerializedName = @"userAssignedIdentity",
        PossibleTypes = new [] { typeof(string) })]
        string EncryptionUserAssignedIdentity { get; set; }
        /// <summary>The location name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Adp.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The location name",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>The amount of storage accounts provisioned per Data Pool. Default: 5</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Adp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The amount of storage accounts provisioned per Data Pool. Default: 5",
        SerializedName = @"storageAccountCount",
        PossibleTypes = new [] { typeof(int) })]
        int? StorageAccountCount { get; set; }
        /// <summary>The SKU name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Adp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The SKU name",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Adp.Support.StorageSkuName) })]
        Microsoft.Azure.PowerShell.Cmdlets.Adp.Support.StorageSkuName? StorageSkuName { get; set; }

    }
    /// Location of a Data Pool
    internal partial interface IDataPoolLocationInternal

    {
        /// <summary>Encryption properties of a Data Pool location</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Adp.Models.Api20211101Preview.IDataPoolEncryption Encryption { get; set; }
        /// <summary>The name of Key Vault key</summary>
        string EncryptionKeyName { get; set; }
        /// <summary>
        /// The URI of a soft delete-enabled Key Vault that is in the same location as the Data Pool location
        /// </summary>
        string EncryptionKeyVaultUri { get; set; }
        /// <summary>The version of Key Vault key</summary>
        string EncryptionKeyVersion { get; set; }
        /// <summary>
        /// The resource ID of a user-assigned Managed Identity used to access the encryption key in the Key Vault. Requires access
        /// to the key operations get, wrap, unwrap, and recover
        /// </summary>
        string EncryptionUserAssignedIdentity { get; set; }
        /// <summary>The location name</summary>
        string Name { get; set; }
        /// <summary>The amount of storage accounts provisioned per Data Pool. Default: 5</summary>
        int? StorageAccountCount { get; set; }
        /// <summary>The Storage SKU. Default: Standard_ZRS.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Adp.Models.Api20211101Preview.IStorageSku StorageSku { get; set; }
        /// <summary>The SKU name</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Adp.Support.StorageSkuName? StorageSkuName { get; set; }

    }
}