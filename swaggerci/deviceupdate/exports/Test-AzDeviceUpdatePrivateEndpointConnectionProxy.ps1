
# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# ----------------------------------------------------------------------------------

<#
.Synopsis
(INTERNAL - DO NOT USE) Validates a private endpoint connection proxy object.
.Description
(INTERNAL - DO NOT USE) Validates a private endpoint connection proxy object.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Azure.PowerShell.Cmdlets.DeviceUpdate.Models.Api20200301Preview.IPrivateEndpointConnectionProxy
.Inputs
Microsoft.Azure.PowerShell.Cmdlets.DeviceUpdate.Models.IDeviceUpdateIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDeviceUpdateIdentity>: Identity Parameter
  [AccountName <String>]: Account name.
  [GroupId <String>]: The group ID of the private link resource.
  [Id <String>]: Resource identity path
  [InstanceName <String>]: Instance name.
  [PrivateEndpointConnectionName <String>]: The name of the private endpoint connection associated with the Azure resource
  [PrivateEndpointConnectionProxyId <String>]: The ID of the private endpoint connection proxy object.
  [ResourceGroupName <String>]: The resource group name.
  [SubscriptionId <String>]: The Azure subscription ID.

PRIVATEENDPOINTCONNECTIONPROXY <IPrivateEndpointConnectionProxy>: Private endpoint connection proxy details.
  [SystemDataCreatedAt <DateTime?>]: The timestamp of resource creation (UTC).
  [SystemDataCreatedBy <String>]: The identity that created the resource.
  [SystemDataCreatedByType <CreatedByType?>]: The type of identity that created the resource.
  [SystemDataLastModifiedAt <DateTime?>]: The timestamp of resource last modification (UTC)
  [SystemDataLastModifiedBy <String>]: The identity that last modified the resource.
  [SystemDataLastModifiedByType <CreatedByType?>]: The type of identity that last modified the resource.
  [RemotePrivateEndpointConnectionDetail <IConnectionDetails[]>]: List of connection details.
  [RemotePrivateEndpointId <String>]: Remote endpoint resource ID.
  [RemotePrivateEndpointImmutableResourceId <String>]: Original resource ID needed by Microsoft.Network.
  [RemotePrivateEndpointImmutableSubscriptionId <String>]: Original subscription ID needed by Microsoft.Network.
  [RemotePrivateEndpointLocation <String>]: ARM location of the remote private endpoint.
  [RemotePrivateEndpointManualPrivateLinkServiceConnection <IPrivateLinkServiceConnection[]>]: List of private link service connections that need manual approval.
    [GroupId <String[]>]: List of group IDs.
    [Name <String>]: Private link service connection name.
    [RequestMessage <String>]: Request message.
  [RemotePrivateEndpointPrivateLinkServiceConnection <IPrivateLinkServiceConnection[]>]: List of automatically approved private link service connections.
  [RemotePrivateEndpointPrivateLinkServiceProxy <IPrivateLinkServiceProxy[]>]: List of private link service proxies.
    [GroupConnectivityInformation <IGroupConnectivityInformation[]>]: Group connectivity information.
      [CustomerVisibleFqdn <String[]>]: List of customer visible FQDNs.
      [PrivateLinkServiceArmRegion <String>]: PrivateLinkService ARM region.
      [RedirectMapId <String>]: Redirect map ID.
    [Id <String>]: NRP resource ID.
    [RemotePrivateLinkServiceConnectionStateActionsRequired <String>]: A message indicating if changes on the service provider require any updates on the consumer.
    [RemotePrivateLinkServiceConnectionStateDescription <String>]: The reason for approval/rejection of the connection.
    [RemotePrivateLinkServiceConnectionStateStatus <PrivateEndpointServiceConnectionStatus?>]: Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
  [RemotePrivateEndpointVnetTrafficTag <String>]: Virtual network traffic tag.
  [Status <String>]: Operation status.

REMOTEPRIVATEENDPOINTMANUALPRIVATELINKSERVICECONNECTION <IPrivateLinkServiceConnection[]>: List of private link service connections that need manual approval.
  [GroupId <String[]>]: List of group IDs.
  [Name <String>]: Private link service connection name.
  [RequestMessage <String>]: Request message.

REMOTEPRIVATEENDPOINTPRIVATELINKSERVICECONNECTION <IPrivateLinkServiceConnection[]>: List of automatically approved private link service connections.
  [GroupId <String[]>]: List of group IDs.
  [Name <String>]: Private link service connection name.
  [RequestMessage <String>]: Request message.

REMOTEPRIVATEENDPOINTPRIVATELINKSERVICEPROXY <IPrivateLinkServiceProxy[]>: List of private link service proxies.
  [GroupConnectivityInformation <IGroupConnectivityInformation[]>]: Group connectivity information.
    [CustomerVisibleFqdn <String[]>]: List of customer visible FQDNs.
    [PrivateLinkServiceArmRegion <String>]: PrivateLinkService ARM region.
    [RedirectMapId <String>]: Redirect map ID.
  [Id <String>]: NRP resource ID.
  [RemotePrivateLinkServiceConnectionStateActionsRequired <String>]: A message indicating if changes on the service provider require any updates on the consumer.
  [RemotePrivateLinkServiceConnectionStateDescription <String>]: The reason for approval/rejection of the connection.
  [RemotePrivateLinkServiceConnectionStateStatus <PrivateEndpointServiceConnectionStatus?>]: Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
.Link
https://docs.microsoft.com/en-us/powershell/module/az.deviceupdate/test-azdeviceupdateprivateendpointconnectionproxy
#>
function Test-AzDeviceUpdatePrivateEndpointConnectionProxy {
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='ValidateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Validate', Mandatory)]
    [Parameter(ParameterSetName='ValidateExpanded', Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.DeviceUpdate.Category('Path')]
    [System.String]
    # Account name.
    ${AccountName},

    [Parameter(ParameterSetName='Validate', Mandatory)]
    [Parameter(ParameterSetName='ValidateExpanded', Mandatory)]
    [Alias('PrivateEndpointConnectionProxyId')]
    [Microsoft.Azure.PowerShell.Cmdlets.DeviceUpdate.Category('Path')]
    [System.String]
    # The ID of the private endpoint connection proxy object.
    ${Id},

    [Parameter(ParameterSetName='Validate', Mandatory)]
    [Parameter(ParameterSetName='ValidateExpanded', Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.DeviceUpdate.Category('Path')]
    [System.String]
    # The resource group name.
    ${ResourceGroupName},

    [Parameter(ParameterSetName='Validate')]
    [Parameter(ParameterSetName='ValidateExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.DeviceUpdate.Category('Path')]
    [Microsoft.Azure.PowerShell.Cmdlets.DeviceUpdate.Runtime.DefaultInfo(Script='(Get-AzContext).Subscription.Id')]
    [System.String]
    # The Azure subscription ID.
    ${SubscriptionId},

    [Parameter(ParameterSetName='ValidateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Azure.PowerShell.Cmdlets.DeviceUpdate.Category('Path')]
    [Microsoft.Azure.PowerShell.Cmdlets.DeviceUpdate.Models.IDeviceUpdateIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Validate', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='ValidateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Azure.PowerShell.Cmdlets.DeviceUpdate.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.DeviceUpdate.Models.Api20200301Preview.IPrivateEndpointConnectionProxy]
    # Private endpoint connection proxy details.
    # To construct, see NOTES section for PRIVATEENDPOINTCONNECTIONPROXY properties and create a hash table.
    ${PrivateEndpointConnectionProxy},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.DeviceUpdate.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.DeviceUpdate.Models.Api20200301Preview.IConnectionDetails[]]
    # List of connection details.
    ${RemotePrivateEndpointConnectionDetail},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.DeviceUpdate.Category('Body')]
    [System.String]
    # Remote endpoint resource ID.
    ${RemotePrivateEndpointId},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.DeviceUpdate.Category('Body')]
    [System.String]
    # Original resource ID needed by Microsoft.Network.
    ${RemotePrivateEndpointImmutableResourceId},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.DeviceUpdate.Category('Body')]
    [System.String]
    # Original subscription ID needed by Microsoft.Network.
    ${RemotePrivateEndpointImmutableSubscriptionId},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.DeviceUpdate.Category('Body')]
    [System.String]
    # ARM location of the remote private endpoint.
    ${RemotePrivateEndpointLocation},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.DeviceUpdate.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.DeviceUpdate.Models.Api20200301Preview.IPrivateLinkServiceConnection[]]
    # List of private link service connections that need manual approval.
    # To construct, see NOTES section for REMOTEPRIVATEENDPOINTMANUALPRIVATELINKSERVICECONNECTION properties and create a hash table.
    ${RemotePrivateEndpointManualPrivateLinkServiceConnection},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.DeviceUpdate.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.DeviceUpdate.Models.Api20200301Preview.IPrivateLinkServiceConnection[]]
    # List of automatically approved private link service connections.
    # To construct, see NOTES section for REMOTEPRIVATEENDPOINTPRIVATELINKSERVICECONNECTION properties and create a hash table.
    ${RemotePrivateEndpointPrivateLinkServiceConnection},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.DeviceUpdate.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.DeviceUpdate.Models.Api20200301Preview.IPrivateLinkServiceProxy[]]
    # List of private link service proxies.
    # To construct, see NOTES section for REMOTEPRIVATEENDPOINTPRIVATELINKSERVICEPROXY properties and create a hash table.
    ${RemotePrivateEndpointPrivateLinkServiceProxy},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.DeviceUpdate.Category('Body')]
    [System.String]
    # Virtual network traffic tag.
    ${RemotePrivateEndpointVnetTrafficTag},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.DeviceUpdate.Category('Body')]
    [System.String]
    # Operation status.
    ${Status},

    [Parameter()]
    [Alias('AzureRMContext', 'AzureCredential')]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.DeviceUpdate.Category('Azure')]
    [System.Management.Automation.PSObject]
    # The credentials, account, tenant, and subscription used for communication with Azure.
    ${DefaultProfile},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.DeviceUpdate.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.DeviceUpdate.Category('Runtime')]
    [Microsoft.Azure.PowerShell.Cmdlets.DeviceUpdate.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.DeviceUpdate.Category('Runtime')]
    [Microsoft.Azure.PowerShell.Cmdlets.DeviceUpdate.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.DeviceUpdate.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.DeviceUpdate.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.DeviceUpdate.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.DeviceUpdate.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        if ($null -eq [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PowerShellVersion) {
            [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PowerShellVersion = $Host.Runspace.Version.ToString()
        }         
        $preTelemetryId = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId
        if ($preTelemetryId -eq '') {
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId =(New-Guid).ToString()
            [Microsoft.Azure.PowerShell.Cmdlets.DeviceUpdate.module]::Instance.Telemetry.Invoke('Create', $MyInvocation, $parameterSet, $PSCmdlet)
        } else {
            $internalCalledCmdlets = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets
            if ($internalCalledCmdlets -eq '') {
                [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets = $MyInvocation.MyCommand.Name
            } else {
                [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets += ',' + $MyInvocation.MyCommand.Name
            }
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = 'internal'
        }

        $mapping = @{
            Validate = 'Az.DeviceUpdate.private\Test-AzDeviceUpdatePrivateEndpointConnectionProxy_Validate';
            ValidateExpanded = 'Az.DeviceUpdate.private\Test-AzDeviceUpdatePrivateEndpointConnectionProxy_ValidateExpanded';
            ValidateViaIdentity = 'Az.DeviceUpdate.private\Test-AzDeviceUpdatePrivateEndpointConnectionProxy_ValidateViaIdentity';
            ValidateViaIdentityExpanded = 'Az.DeviceUpdate.private\Test-AzDeviceUpdatePrivateEndpointConnectionProxy_ValidateViaIdentityExpanded';
        }
        if (('Validate', 'ValidateExpanded') -contains $parameterSet -and -not $PSBoundParameters.ContainsKey('SubscriptionId')) {
            $PSBoundParameters['SubscriptionId'] = (Get-AzContext).Subscription.Id
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceUpdate.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }

    finally {
        $backupTelemetryId = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId
        $backupInternalCalledCmdlets = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
    }

}
end {
    try {
        $steppablePipeline.End()

        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = $backupTelemetryId
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets = $backupInternalCalledCmdlets
        if ($preTelemetryId -eq '') {
            [Microsoft.Azure.PowerShell.Cmdlets.DeviceUpdate.module]::Instance.Telemetry.Invoke('Send', $MyInvocation, $parameterSet, $PSCmdlet)
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        }
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = $preTelemetryId

    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }
} 
}
