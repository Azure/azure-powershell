// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Extensions;

    /// <summary>RegisteredServer Properties object.</summary>
    public partial class RegisteredServerProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IRegisteredServerProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IRegisteredServerProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IRegisteredServerProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject json ? new RegisteredServerProperties(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject into a new instance of <see cref="RegisteredServerProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal RegisteredServerProperties(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_serverCertificate = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString>("serverCertificate"), out var __jsonServerCertificate) ? (string)__jsonServerCertificate : (string)ServerCertificate;}
            {_agentVersion = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString>("agentVersion"), out var __jsonAgentVersion) ? (string)__jsonAgentVersion : (string)AgentVersion;}
            {_agentVersionStatus = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString>("agentVersionStatus"), out var __jsonAgentVersionStatus) ? (string)__jsonAgentVersionStatus : (string)AgentVersionStatus;}
            {_agentVersionExpirationDate = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString>("agentVersionExpirationDate"), out var __jsonAgentVersionExpirationDate) ? global::System.DateTime.TryParse((string)__jsonAgentVersionExpirationDate, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonAgentVersionExpirationDateValue) ? __jsonAgentVersionExpirationDateValue : AgentVersionExpirationDate : AgentVersionExpirationDate;}
            {_serverOSVersion = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString>("serverOSVersion"), out var __jsonServerOSVersion) ? (string)__jsonServerOSVersion : (string)ServerOSVersion;}
            {_serverManagementErrorCode = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNumber>("serverManagementErrorCode"), out var __jsonServerManagementErrorCode) ? (int?)__jsonServerManagementErrorCode : ServerManagementErrorCode;}
            {_lastHeartBeat = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString>("lastHeartBeat"), out var __jsonLastHeartBeat) ? (string)__jsonLastHeartBeat : (string)LastHeartBeat;}
            {_provisioningState = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString>("provisioningState"), out var __jsonProvisioningState) ? (string)__jsonProvisioningState : (string)ProvisioningState;}
            {_serverRole = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString>("serverRole"), out var __jsonServerRole) ? (string)__jsonServerRole : (string)ServerRole;}
            {_clusterId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString>("clusterId"), out var __jsonClusterId) ? (string)__jsonClusterId : (string)ClusterId;}
            {_clusterName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString>("clusterName"), out var __jsonClusterName) ? (string)__jsonClusterName : (string)ClusterName;}
            {_serverId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString>("serverId"), out var __jsonServerId) ? (string)__jsonServerId : (string)ServerId;}
            {_storageSyncServiceUid = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString>("storageSyncServiceUid"), out var __jsonStorageSyncServiceUid) ? (string)__jsonStorageSyncServiceUid : (string)StorageSyncServiceUid;}
            {_lastWorkflowId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString>("lastWorkflowId"), out var __jsonLastWorkflowId) ? (string)__jsonLastWorkflowId : (string)LastWorkflowId;}
            {_lastOperationName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString>("lastOperationName"), out var __jsonLastOperationName) ? (string)__jsonLastOperationName : (string)LastOperationName;}
            {_discoveryEndpointUri = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString>("discoveryEndpointUri"), out var __jsonDiscoveryEndpointUri) ? (string)__jsonDiscoveryEndpointUri : (string)DiscoveryEndpointUri;}
            {_resourceLocation = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString>("resourceLocation"), out var __jsonResourceLocation) ? (string)__jsonResourceLocation : (string)ResourceLocation;}
            {_serviceLocation = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString>("serviceLocation"), out var __jsonServiceLocation) ? (string)__jsonServiceLocation : (string)ServiceLocation;}
            {_friendlyName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString>("friendlyName"), out var __jsonFriendlyName) ? (string)__jsonFriendlyName : (string)FriendlyName;}
            {_managementEndpointUri = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString>("managementEndpointUri"), out var __jsonManagementEndpointUri) ? (string)__jsonManagementEndpointUri : (string)ManagementEndpointUri;}
            {_monitoringEndpointUri = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString>("monitoringEndpointUri"), out var __jsonMonitoringEndpointUri) ? (string)__jsonMonitoringEndpointUri : (string)MonitoringEndpointUri;}
            {_monitoringConfiguration = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString>("monitoringConfiguration"), out var __jsonMonitoringConfiguration) ? (string)__jsonMonitoringConfiguration : (string)MonitoringConfiguration;}
            {_serverName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString>("serverName"), out var __jsonServerName) ? (string)__jsonServerName : (string)ServerName;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="RegisteredServerProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="RegisteredServerProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != (((object)this._serverCertificate)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString(this._serverCertificate.ToString()) : null, "serverCertificate" ,container.Add );
            AddIf( null != (((object)this._agentVersion)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString(this._agentVersion.ToString()) : null, "agentVersion" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._agentVersionStatus)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString(this._agentVersionStatus.ToString()) : null, "agentVersionStatus" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._agentVersionExpirationDate ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString(this._agentVersionExpirationDate?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "agentVersionExpirationDate" ,container.Add );
            }
            AddIf( null != (((object)this._serverOSVersion)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString(this._serverOSVersion.ToString()) : null, "serverOSVersion" ,container.Add );
            AddIf( null != this._serverManagementErrorCode ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNumber((int)this._serverManagementErrorCode) : null, "serverManagementErrorCode" ,container.Add );
            AddIf( null != (((object)this._lastHeartBeat)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString(this._lastHeartBeat.ToString()) : null, "lastHeartBeat" ,container.Add );
            AddIf( null != (((object)this._provisioningState)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString(this._provisioningState.ToString()) : null, "provisioningState" ,container.Add );
            AddIf( null != (((object)this._serverRole)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString(this._serverRole.ToString()) : null, "serverRole" ,container.Add );
            AddIf( null != (((object)this._clusterId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString(this._clusterId.ToString()) : null, "clusterId" ,container.Add );
            AddIf( null != (((object)this._clusterName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString(this._clusterName.ToString()) : null, "clusterName" ,container.Add );
            AddIf( null != (((object)this._serverId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString(this._serverId.ToString()) : null, "serverId" ,container.Add );
            AddIf( null != (((object)this._storageSyncServiceUid)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString(this._storageSyncServiceUid.ToString()) : null, "storageSyncServiceUid" ,container.Add );
            AddIf( null != (((object)this._lastWorkflowId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString(this._lastWorkflowId.ToString()) : null, "lastWorkflowId" ,container.Add );
            AddIf( null != (((object)this._lastOperationName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString(this._lastOperationName.ToString()) : null, "lastOperationName" ,container.Add );
            AddIf( null != (((object)this._discoveryEndpointUri)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString(this._discoveryEndpointUri.ToString()) : null, "discoveryEndpointUri" ,container.Add );
            AddIf( null != (((object)this._resourceLocation)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString(this._resourceLocation.ToString()) : null, "resourceLocation" ,container.Add );
            AddIf( null != (((object)this._serviceLocation)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString(this._serviceLocation.ToString()) : null, "serviceLocation" ,container.Add );
            AddIf( null != (((object)this._friendlyName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString(this._friendlyName.ToString()) : null, "friendlyName" ,container.Add );
            AddIf( null != (((object)this._managementEndpointUri)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString(this._managementEndpointUri.ToString()) : null, "managementEndpointUri" ,container.Add );
            AddIf( null != (((object)this._monitoringEndpointUri)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString(this._monitoringEndpointUri.ToString()) : null, "monitoringEndpointUri" ,container.Add );
            AddIf( null != (((object)this._monitoringConfiguration)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString(this._monitoringConfiguration.ToString()) : null, "monitoringConfiguration" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._serverName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString(this._serverName.ToString()) : null, "serverName" ,container.Add );
            }
            AfterToJson(ref container);
            return container;
        }
    }
}