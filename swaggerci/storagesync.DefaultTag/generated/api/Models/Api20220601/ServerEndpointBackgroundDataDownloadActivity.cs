// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Extensions;

    /// <summary>Background data download activity object</summary>
    public partial class ServerEndpointBackgroundDataDownloadActivity :
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointBackgroundDataDownloadActivity,
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointBackgroundDataDownloadActivityInternal
    {

        /// <summary>Backing field for <see cref="DownloadedByte" /> property.</summary>
        private long? _downloadedByte;

        /// <summary>Running count of bytes downloaded</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public long? DownloadedByte { get => this._downloadedByte; }

        /// <summary>Internal Acessors for DownloadedByte</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointBackgroundDataDownloadActivityInternal.DownloadedByte { get => this._downloadedByte; set { {_downloadedByte = value;} } }

        /// <summary>Internal Acessors for PercentProgress</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointBackgroundDataDownloadActivityInternal.PercentProgress { get => this._percentProgress; set { {_percentProgress = value;} } }

        /// <summary>Internal Acessors for StartedTimestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointBackgroundDataDownloadActivityInternal.StartedTimestamp { get => this._startedTimestamp; set { {_startedTimestamp = value;} } }

        /// <summary>Internal Acessors for Timestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointBackgroundDataDownloadActivityInternal.Timestamp { get => this._timestamp; set { {_timestamp = value;} } }

        /// <summary>Backing field for <see cref="PercentProgress" /> property.</summary>
        private int? _percentProgress;

        /// <summary>Progress percentage</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public int? PercentProgress { get => this._percentProgress; }

        /// <summary>Backing field for <see cref="StartedTimestamp" /> property.</summary>
        private global::System.DateTime? _startedTimestamp;

        /// <summary>Timestamp when the operation started</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public global::System.DateTime? StartedTimestamp { get => this._startedTimestamp; }

        /// <summary>Backing field for <see cref="Timestamp" /> property.</summary>
        private global::System.DateTime? _timestamp;

        /// <summary>Timestamp when properties were updated</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public global::System.DateTime? Timestamp { get => this._timestamp; }

        /// <summary>
        /// Creates an new <see cref="ServerEndpointBackgroundDataDownloadActivity" /> instance.
        /// </summary>
        public ServerEndpointBackgroundDataDownloadActivity()
        {

        }
    }
    /// Background data download activity object
    public partial interface IServerEndpointBackgroundDataDownloadActivity :
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.IJsonSerializable
    {
        /// <summary>Running count of bytes downloaded</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Running count of bytes downloaded",
        SerializedName = @"downloadedBytes",
        PossibleTypes = new [] { typeof(long) })]
        long? DownloadedByte { get;  }
        /// <summary>Progress percentage</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Progress percentage",
        SerializedName = @"percentProgress",
        PossibleTypes = new [] { typeof(int) })]
        int? PercentProgress { get;  }
        /// <summary>Timestamp when the operation started</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Timestamp when the operation started",
        SerializedName = @"startedTimestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? StartedTimestamp { get;  }
        /// <summary>Timestamp when properties were updated</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Timestamp when properties were updated",
        SerializedName = @"timestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? Timestamp { get;  }

    }
    /// Background data download activity object
    internal partial interface IServerEndpointBackgroundDataDownloadActivityInternal

    {
        /// <summary>Running count of bytes downloaded</summary>
        long? DownloadedByte { get; set; }
        /// <summary>Progress percentage</summary>
        int? PercentProgress { get; set; }
        /// <summary>Timestamp when the operation started</summary>
        global::System.DateTime? StartedTimestamp { get; set; }
        /// <summary>Timestamp when properties were updated</summary>
        global::System.DateTime? Timestamp { get; set; }

    }
}