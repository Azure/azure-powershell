// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Extensions;

    /// <summary>Cloud endpoint change enumeration status object</summary>
    public partial class CloudEndpointLastChangeEnumerationStatus :
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudEndpointLastChangeEnumerationStatus,
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudEndpointLastChangeEnumerationStatusInternal
    {

        /// <summary>Backing field for <see cref="CompletedTimestamp" /> property.</summary>
        private global::System.DateTime? _completedTimestamp;

        /// <summary>Timestamp when change enumeration completed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public global::System.DateTime? CompletedTimestamp { get => this._completedTimestamp; }

        /// <summary>Internal Acessors for CompletedTimestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudEndpointLastChangeEnumerationStatusInternal.CompletedTimestamp { get => this._completedTimestamp; set { {_completedTimestamp = value;} } }

        /// <summary>Internal Acessors for NamespaceDirectoriesCount</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudEndpointLastChangeEnumerationStatusInternal.NamespaceDirectoriesCount { get => this._namespaceDirectoriesCount; set { {_namespaceDirectoriesCount = value;} } }

        /// <summary>Internal Acessors for NamespaceFilesCount</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudEndpointLastChangeEnumerationStatusInternal.NamespaceFilesCount { get => this._namespaceFilesCount; set { {_namespaceFilesCount = value;} } }

        /// <summary>Internal Acessors for NamespaceSizeByte</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudEndpointLastChangeEnumerationStatusInternal.NamespaceSizeByte { get => this._namespaceSizeByte; set { {_namespaceSizeByte = value;} } }

        /// <summary>Internal Acessors for NextRunTimestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudEndpointLastChangeEnumerationStatusInternal.NextRunTimestamp { get => this._nextRunTimestamp; set { {_nextRunTimestamp = value;} } }

        /// <summary>Internal Acessors for StartedTimestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudEndpointLastChangeEnumerationStatusInternal.StartedTimestamp { get => this._startedTimestamp; set { {_startedTimestamp = value;} } }

        /// <summary>Backing field for <see cref="NamespaceDirectoriesCount" /> property.</summary>
        private long? _namespaceDirectoriesCount;

        /// <summary>Count of directories in the namespace</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public long? NamespaceDirectoriesCount { get => this._namespaceDirectoriesCount; }

        /// <summary>Backing field for <see cref="NamespaceFilesCount" /> property.</summary>
        private long? _namespaceFilesCount;

        /// <summary>Count of files in the namespace</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public long? NamespaceFilesCount { get => this._namespaceFilesCount; }

        /// <summary>Backing field for <see cref="NamespaceSizeByte" /> property.</summary>
        private long? _namespaceSizeByte;

        /// <summary>Namespace size in bytes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public long? NamespaceSizeByte { get => this._namespaceSizeByte; }

        /// <summary>Backing field for <see cref="NextRunTimestamp" /> property.</summary>
        private global::System.DateTime? _nextRunTimestamp;

        /// <summary>Timestamp of when change enumeration is expected to run again</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public global::System.DateTime? NextRunTimestamp { get => this._nextRunTimestamp; }

        /// <summary>Backing field for <see cref="StartedTimestamp" /> property.</summary>
        private global::System.DateTime? _startedTimestamp;

        /// <summary>Timestamp when change enumeration started</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public global::System.DateTime? StartedTimestamp { get => this._startedTimestamp; }

        /// <summary>
        /// Creates an new <see cref="CloudEndpointLastChangeEnumerationStatus" /> instance.
        /// </summary>
        public CloudEndpointLastChangeEnumerationStatus()
        {

        }
    }
    /// Cloud endpoint change enumeration status object
    public partial interface ICloudEndpointLastChangeEnumerationStatus :
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.IJsonSerializable
    {
        /// <summary>Timestamp when change enumeration completed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Timestamp when change enumeration completed",
        SerializedName = @"completedTimestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CompletedTimestamp { get;  }
        /// <summary>Count of directories in the namespace</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Count of directories in the namespace",
        SerializedName = @"namespaceDirectoriesCount",
        PossibleTypes = new [] { typeof(long) })]
        long? NamespaceDirectoriesCount { get;  }
        /// <summary>Count of files in the namespace</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Count of files in the namespace",
        SerializedName = @"namespaceFilesCount",
        PossibleTypes = new [] { typeof(long) })]
        long? NamespaceFilesCount { get;  }
        /// <summary>Namespace size in bytes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Namespace size in bytes",
        SerializedName = @"namespaceSizeBytes",
        PossibleTypes = new [] { typeof(long) })]
        long? NamespaceSizeByte { get;  }
        /// <summary>Timestamp of when change enumeration is expected to run again</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Timestamp of when change enumeration is expected to run again",
        SerializedName = @"nextRunTimestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? NextRunTimestamp { get;  }
        /// <summary>Timestamp when change enumeration started</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Timestamp when change enumeration started",
        SerializedName = @"startedTimestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? StartedTimestamp { get;  }

    }
    /// Cloud endpoint change enumeration status object
    internal partial interface ICloudEndpointLastChangeEnumerationStatusInternal

    {
        /// <summary>Timestamp when change enumeration completed</summary>
        global::System.DateTime? CompletedTimestamp { get; set; }
        /// <summary>Count of directories in the namespace</summary>
        long? NamespaceDirectoriesCount { get; set; }
        /// <summary>Count of files in the namespace</summary>
        long? NamespaceFilesCount { get; set; }
        /// <summary>Namespace size in bytes</summary>
        long? NamespaceSizeByte { get; set; }
        /// <summary>Timestamp of when change enumeration is expected to run again</summary>
        global::System.DateTime? NextRunTimestamp { get; set; }
        /// <summary>Timestamp when change enumeration started</summary>
        global::System.DateTime? StartedTimestamp { get; set; }

    }
}