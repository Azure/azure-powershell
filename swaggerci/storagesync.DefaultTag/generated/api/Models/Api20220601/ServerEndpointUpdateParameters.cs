// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Extensions;

    /// <summary>Parameters for updating an Server Endpoint.</summary>
    public partial class ServerEndpointUpdateParameters :
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointUpdateParameters,
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointUpdateParametersInternal
    {

        /// <summary>Cloud Tiering.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.FeatureStatus? CloudTiering { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointUpdatePropertiesInternal)Property).CloudTiering; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointUpdatePropertiesInternal)Property).CloudTiering = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.FeatureStatus)""); }

        /// <summary>
        /// Policy for enabling follow-the-sun business models: link local cache to cloud behavior to pre-populate before local access.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.LocalCacheMode? LocalCacheMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointUpdatePropertiesInternal)Property).LocalCacheMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointUpdatePropertiesInternal)Property).LocalCacheMode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.LocalCacheMode)""); }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointUpdateProperties Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointUpdateParametersInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ServerEndpointUpdateProperties()); set { {_property = value;} } }

        /// <summary>Offline data transfer</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.FeatureStatus? OfflineDataTransfer { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointUpdatePropertiesInternal)Property).OfflineDataTransfer; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointUpdatePropertiesInternal)Property).OfflineDataTransfer = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.FeatureStatus)""); }

        /// <summary>Offline data transfer share name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inlined)]
        public string OfflineDataTransferShareName { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointUpdatePropertiesInternal)Property).OfflineDataTransferShareName; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointUpdatePropertiesInternal)Property).OfflineDataTransferShareName = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointUpdateProperties _property;

        /// <summary>The properties of the server endpoint.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointUpdateProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ServerEndpointUpdateProperties()); set => this._property = value; }

        /// <summary>Tier files older than days.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inlined)]
        public int? TierFilesOlderThanDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointUpdatePropertiesInternal)Property).TierFilesOlderThanDay; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointUpdatePropertiesInternal)Property).TierFilesOlderThanDay = value ?? default(int); }

        /// <summary>Level of free space to be maintained by Cloud Tiering if it is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inlined)]
        public int? VolumeFreeSpacePercent { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointUpdatePropertiesInternal)Property).VolumeFreeSpacePercent; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointUpdatePropertiesInternal)Property).VolumeFreeSpacePercent = value ?? default(int); }

        /// <summary>Creates an new <see cref="ServerEndpointUpdateParameters" /> instance.</summary>
        public ServerEndpointUpdateParameters()
        {

        }
    }
    /// Parameters for updating an Server Endpoint.
    public partial interface IServerEndpointUpdateParameters :
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.IJsonSerializable
    {
        /// <summary>Cloud Tiering.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Cloud Tiering.",
        SerializedName = @"cloudTiering",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.FeatureStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.FeatureStatus? CloudTiering { get; set; }
        /// <summary>
        /// Policy for enabling follow-the-sun business models: link local cache to cloud behavior to pre-populate before local access.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Policy for enabling follow-the-sun business models: link local cache to cloud behavior to pre-populate before local access.",
        SerializedName = @"localCacheMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.LocalCacheMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.LocalCacheMode? LocalCacheMode { get; set; }
        /// <summary>Offline data transfer</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Offline data transfer",
        SerializedName = @"offlineDataTransfer",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.FeatureStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.FeatureStatus? OfflineDataTransfer { get; set; }
        /// <summary>Offline data transfer share name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Offline data transfer share name",
        SerializedName = @"offlineDataTransferShareName",
        PossibleTypes = new [] { typeof(string) })]
        string OfflineDataTransferShareName { get; set; }
        /// <summary>Tier files older than days.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Tier files older than days.",
        SerializedName = @"tierFilesOlderThanDays",
        PossibleTypes = new [] { typeof(int) })]
        int? TierFilesOlderThanDay { get; set; }
        /// <summary>Level of free space to be maintained by Cloud Tiering if it is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Level of free space to be maintained by Cloud Tiering if it is enabled.",
        SerializedName = @"volumeFreeSpacePercent",
        PossibleTypes = new [] { typeof(int) })]
        int? VolumeFreeSpacePercent { get; set; }

    }
    /// Parameters for updating an Server Endpoint.
    internal partial interface IServerEndpointUpdateParametersInternal

    {
        /// <summary>Cloud Tiering.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.FeatureStatus? CloudTiering { get; set; }
        /// <summary>
        /// Policy for enabling follow-the-sun business models: link local cache to cloud behavior to pre-populate before local access.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.LocalCacheMode? LocalCacheMode { get; set; }
        /// <summary>Offline data transfer</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.FeatureStatus? OfflineDataTransfer { get; set; }
        /// <summary>Offline data transfer share name</summary>
        string OfflineDataTransferShareName { get; set; }
        /// <summary>The properties of the server endpoint.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointUpdateProperties Property { get; set; }
        /// <summary>Tier files older than days.</summary>
        int? TierFilesOlderThanDay { get; set; }
        /// <summary>Level of free space to be maintained by Cloud Tiering if it is enabled.</summary>
        int? VolumeFreeSpacePercent { get; set; }

    }
}