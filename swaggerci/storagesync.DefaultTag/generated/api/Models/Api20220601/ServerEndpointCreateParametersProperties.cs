// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Extensions;

    /// <summary>ServerEndpoint Properties object.</summary>
    public partial class ServerEndpointCreateParametersProperties :
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointCreateParametersProperties,
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointCreateParametersPropertiesInternal
    {

        /// <summary>Backing field for <see cref="CloudTiering" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.FeatureStatus? _cloudTiering;

        /// <summary>Cloud Tiering.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.FeatureStatus? CloudTiering { get => this._cloudTiering; set => this._cloudTiering = value; }

        /// <summary>Backing field for <see cref="FriendlyName" /> property.</summary>
        private string _friendlyName;

        /// <summary>Friendly Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public string FriendlyName { get => this._friendlyName; set => this._friendlyName = value; }

        /// <summary>Backing field for <see cref="InitialDownloadPolicy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.InitialDownloadPolicy? _initialDownloadPolicy;

        /// <summary>Policy for how namespace and files are recalled during FastDr.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.InitialDownloadPolicy? InitialDownloadPolicy { get => this._initialDownloadPolicy; set => this._initialDownloadPolicy = value; }

        /// <summary>Backing field for <see cref="InitialUploadPolicy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.InitialUploadPolicy? _initialUploadPolicy;

        /// <summary>Policy for how the initial upload sync session is performed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.InitialUploadPolicy? InitialUploadPolicy { get => this._initialUploadPolicy; set => this._initialUploadPolicy = value; }

        /// <summary>Backing field for <see cref="LocalCacheMode" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.LocalCacheMode? _localCacheMode;

        /// <summary>
        /// Policy for enabling follow-the-sun business models: link local cache to cloud behavior to pre-populate before local access.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.LocalCacheMode? LocalCacheMode { get => this._localCacheMode; set => this._localCacheMode = value; }

        /// <summary>Backing field for <see cref="OfflineDataTransfer" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.FeatureStatus? _offlineDataTransfer;

        /// <summary>Offline data transfer</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.FeatureStatus? OfflineDataTransfer { get => this._offlineDataTransfer; set => this._offlineDataTransfer = value; }

        /// <summary>Backing field for <see cref="OfflineDataTransferShareName" /> property.</summary>
        private string _offlineDataTransferShareName;

        /// <summary>Offline data transfer share name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public string OfflineDataTransferShareName { get => this._offlineDataTransferShareName; set => this._offlineDataTransferShareName = value; }

        /// <summary>Backing field for <see cref="ServerLocalPath" /> property.</summary>
        private string _serverLocalPath;

        /// <summary>Server Local path.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public string ServerLocalPath { get => this._serverLocalPath; set => this._serverLocalPath = value; }

        /// <summary>Backing field for <see cref="ServerResourceId" /> property.</summary>
        private string _serverResourceId;

        /// <summary>Server Resource Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public string ServerResourceId { get => this._serverResourceId; set => this._serverResourceId = value; }

        /// <summary>Backing field for <see cref="TierFilesOlderThanDay" /> property.</summary>
        private int? _tierFilesOlderThanDay;

        /// <summary>Tier files older than days.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public int? TierFilesOlderThanDay { get => this._tierFilesOlderThanDay; set => this._tierFilesOlderThanDay = value; }

        /// <summary>Backing field for <see cref="VolumeFreeSpacePercent" /> property.</summary>
        private int? _volumeFreeSpacePercent;

        /// <summary>Level of free space to be maintained by Cloud Tiering if it is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public int? VolumeFreeSpacePercent { get => this._volumeFreeSpacePercent; set => this._volumeFreeSpacePercent = value; }

        /// <summary>
        /// Creates an new <see cref="ServerEndpointCreateParametersProperties" /> instance.
        /// </summary>
        public ServerEndpointCreateParametersProperties()
        {

        }
    }
    /// ServerEndpoint Properties object.
    public partial interface IServerEndpointCreateParametersProperties :
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.IJsonSerializable
    {
        /// <summary>Cloud Tiering.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Cloud Tiering.",
        SerializedName = @"cloudTiering",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.FeatureStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.FeatureStatus? CloudTiering { get; set; }
        /// <summary>Friendly Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Friendly Name",
        SerializedName = @"friendlyName",
        PossibleTypes = new [] { typeof(string) })]
        string FriendlyName { get; set; }
        /// <summary>Policy for how namespace and files are recalled during FastDr.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Policy for how namespace and files are recalled during FastDr.",
        SerializedName = @"initialDownloadPolicy",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.InitialDownloadPolicy) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.InitialDownloadPolicy? InitialDownloadPolicy { get; set; }
        /// <summary>Policy for how the initial upload sync session is performed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Policy for how the initial upload sync session is performed.",
        SerializedName = @"initialUploadPolicy",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.InitialUploadPolicy) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.InitialUploadPolicy? InitialUploadPolicy { get; set; }
        /// <summary>
        /// Policy for enabling follow-the-sun business models: link local cache to cloud behavior to pre-populate before local access.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Policy for enabling follow-the-sun business models: link local cache to cloud behavior to pre-populate before local access.",
        SerializedName = @"localCacheMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.LocalCacheMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.LocalCacheMode? LocalCacheMode { get; set; }
        /// <summary>Offline data transfer</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Offline data transfer",
        SerializedName = @"offlineDataTransfer",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.FeatureStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.FeatureStatus? OfflineDataTransfer { get; set; }
        /// <summary>Offline data transfer share name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Offline data transfer share name",
        SerializedName = @"offlineDataTransferShareName",
        PossibleTypes = new [] { typeof(string) })]
        string OfflineDataTransferShareName { get; set; }
        /// <summary>Server Local path.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Server Local path.",
        SerializedName = @"serverLocalPath",
        PossibleTypes = new [] { typeof(string) })]
        string ServerLocalPath { get; set; }
        /// <summary>Server Resource Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Server Resource Id.",
        SerializedName = @"serverResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string ServerResourceId { get; set; }
        /// <summary>Tier files older than days.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Tier files older than days.",
        SerializedName = @"tierFilesOlderThanDays",
        PossibleTypes = new [] { typeof(int) })]
        int? TierFilesOlderThanDay { get; set; }
        /// <summary>Level of free space to be maintained by Cloud Tiering if it is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Level of free space to be maintained by Cloud Tiering if it is enabled.",
        SerializedName = @"volumeFreeSpacePercent",
        PossibleTypes = new [] { typeof(int) })]
        int? VolumeFreeSpacePercent { get; set; }

    }
    /// ServerEndpoint Properties object.
    internal partial interface IServerEndpointCreateParametersPropertiesInternal

    {
        /// <summary>Cloud Tiering.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.FeatureStatus? CloudTiering { get; set; }
        /// <summary>Friendly Name</summary>
        string FriendlyName { get; set; }
        /// <summary>Policy for how namespace and files are recalled during FastDr.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.InitialDownloadPolicy? InitialDownloadPolicy { get; set; }
        /// <summary>Policy for how the initial upload sync session is performed.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.InitialUploadPolicy? InitialUploadPolicy { get; set; }
        /// <summary>
        /// Policy for enabling follow-the-sun business models: link local cache to cloud behavior to pre-populate before local access.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.LocalCacheMode? LocalCacheMode { get; set; }
        /// <summary>Offline data transfer</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.FeatureStatus? OfflineDataTransfer { get; set; }
        /// <summary>Offline data transfer share name</summary>
        string OfflineDataTransferShareName { get; set; }
        /// <summary>Server Local path.</summary>
        string ServerLocalPath { get; set; }
        /// <summary>Server Resource Id.</summary>
        string ServerResourceId { get; set; }
        /// <summary>Tier files older than days.</summary>
        int? TierFilesOlderThanDay { get; set; }
        /// <summary>Level of free space to be maintained by Cloud Tiering if it is enabled.</summary>
        int? VolumeFreeSpacePercent { get; set; }

    }
}