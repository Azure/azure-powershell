// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Extensions;

    /// <summary>Server Endpoint object.</summary>
    public partial class ServerEndpoint :
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpoint,
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointInternal,
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.IValidates,
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.IHeaderSerializable
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api30.IResource" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api30.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api30.Resource();

        /// <summary>Cloud Tiering.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.FeatureStatus? CloudTiering { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).CloudTiering; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).CloudTiering = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.FeatureStatus)""); }

        /// <summary>Cloud tiering status. Only populated if cloud tiering is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointCloudTieringStatus CloudTieringStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).CloudTieringStatus; }

        /// <summary>Friendly Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inlined)]
        public string FriendlyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).FriendlyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).FriendlyName = value ?? null; }

        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api30.IResourceInternal)__resource).Id; }

        /// <summary>Policy for how namespace and files are recalled during FastDr.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.InitialDownloadPolicy? InitialDownloadPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).InitialDownloadPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).InitialDownloadPolicy = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.InitialDownloadPolicy)""); }

        /// <summary>Policy for how the initial upload sync session is performed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.InitialUploadPolicy? InitialUploadPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).InitialUploadPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).InitialUploadPolicy = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.InitialUploadPolicy)""); }

        /// <summary>Resource Last Operation Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inlined)]
        public string LastOperationName { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).LastOperationName; }

        /// <summary>ServerEndpoint lastWorkflowId</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inlined)]
        public string LastWorkflowId { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).LastWorkflowId; }

        /// <summary>
        /// Policy for enabling follow-the-sun business models: link local cache to cloud behavior to pre-populate before local access.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.LocalCacheMode? LocalCacheMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).LocalCacheMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).LocalCacheMode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.LocalCacheMode)""); }

        /// <summary>Internal Acessors for CloudTieringStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointCloudTieringStatus Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointInternal.CloudTieringStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).CloudTieringStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).CloudTieringStatus = value; }

        /// <summary>Internal Acessors for LastOperationName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointInternal.LastOperationName { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).LastOperationName; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).LastOperationName = value; }

        /// <summary>Internal Acessors for LastWorkflowId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointInternal.LastWorkflowId { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).LastWorkflowId; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).LastWorkflowId = value; }

        /// <summary>Internal Acessors for OfflineDataTransferStorageAccountResourceId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointInternal.OfflineDataTransferStorageAccountResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).OfflineDataTransferStorageAccountResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).OfflineDataTransferStorageAccountResourceId = value; }

        /// <summary>Internal Acessors for OfflineDataTransferStorageAccountTenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointInternal.OfflineDataTransferStorageAccountTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).OfflineDataTransferStorageAccountTenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).OfflineDataTransferStorageAccountTenantId = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointProperties Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ServerEndpointProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for RecallStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointRecallStatus Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointInternal.RecallStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).RecallStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).RecallStatus = value; }

        /// <summary>Internal Acessors for RecallStatusLastUpdatedTimestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointInternal.RecallStatusLastUpdatedTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).RecallStatusLastUpdatedTimestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).RecallStatusLastUpdatedTimestamp = value; }

        /// <summary>Internal Acessors for RecallStatusRecallError</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointRecallError[] Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointInternal.RecallStatusRecallError { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).RecallStatusRecallError; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).RecallStatusRecallError = value; }

        /// <summary>Internal Acessors for RecallStatusTotalRecallErrorsCount</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointInternal.RecallStatusTotalRecallErrorsCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).RecallStatusTotalRecallErrorsCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).RecallStatusTotalRecallErrorsCount = value; }

        /// <summary>Internal Acessors for ServerName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointInternal.ServerName { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).ServerName; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).ServerName = value; }

        /// <summary>Internal Acessors for SyncStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointSyncStatus Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointInternal.SyncStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).SyncStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).SyncStatus = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api30.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api30.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api30.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api30.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api30.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api30.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api30.ISystemData Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api30.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api30.IResourceInternal)__resource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api30.IResourceInternal)__resource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api30.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api30.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api30.IResourceInternal)__resource).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api30.IResourceInternal)__resource).Name; }

        /// <summary>Offline data transfer</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.FeatureStatus? OfflineDataTransfer { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).OfflineDataTransfer; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).OfflineDataTransfer = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.FeatureStatus)""); }

        /// <summary>Offline data transfer share name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inlined)]
        public string OfflineDataTransferShareName { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).OfflineDataTransferShareName; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).OfflineDataTransferShareName = value ?? null; }

        /// <summary>Offline data transfer storage account resource ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inlined)]
        public string OfflineDataTransferStorageAccountResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).OfflineDataTransferStorageAccountResourceId; }

        /// <summary>Offline data transfer storage account tenant ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inlined)]
        public string OfflineDataTransferStorageAccountTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).OfflineDataTransferStorageAccountTenantId; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointProperties _property;

        /// <summary>Server Endpoint properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ServerEndpointProperties()); set => this._property = value; }

        /// <summary>ServerEndpoint Provisioning State</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).ProvisioningState; }

        /// <summary>Last updated timestamp</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inlined)]
        public global::System.DateTime? RecallStatusLastUpdatedTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).RecallStatusLastUpdatedTimestamp; }

        /// <summary>Array of recall errors</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointRecallError[] RecallStatusRecallError { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).RecallStatusRecallError; }

        /// <summary>Total count of recall errors.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inlined)]
        public long? RecallStatusTotalRecallErrorsCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).RecallStatusTotalRecallErrorsCount; }

        /// <summary>Server Local path.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inlined)]
        public string ServerLocalPath { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).ServerLocalPath; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).ServerLocalPath = value ?? null; }

        /// <summary>Server name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inlined)]
        public string ServerName { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).ServerName; }

        /// <summary>Server Resource Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inlined)]
        public string ServerResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).ServerResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).ServerResourceId = value ?? null; }

        /// <summary>Server Endpoint sync status</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointSyncStatus SyncStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).SyncStatus; }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api30.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api30.IResourceInternal)__resource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api30.IResourceInternal)__resource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api30.IResourceInternal)__resource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api30.IResourceInternal)__resource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api30.IResourceInternal)__resource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api30.IResourceInternal)__resource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api30.IResourceInternal)__resource).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.CreatedByType)""); }

        /// <summary>Tier files older than days.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inlined)]
        public int? TierFilesOlderThanDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).TierFilesOlderThanDay; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).TierFilesOlderThanDay = value ?? default(int); }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api30.IResourceInternal)__resource).Type; }

        /// <summary>Level of free space to be maintained by Cloud Tiering if it is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inlined)]
        public int? VolumeFreeSpacePercent { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).VolumeFreeSpacePercent; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal)Property).VolumeFreeSpacePercent = value ?? default(int); }

        /// <summary>Backing field for <see cref="XmsCorrelationRequestId" /> property.</summary>
        private string _xmsCorrelationRequestId;

        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public string XmsCorrelationRequestId { get => this._xmsCorrelationRequestId; set => this._xmsCorrelationRequestId = value; }

        /// <summary>Backing field for <see cref="XmsRequestId" /> property.</summary>
        private string _xmsRequestId;

        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public string XmsRequestId { get => this._xmsRequestId; set => this._xmsRequestId = value; }

        /// <param name="headers"></param>
        void Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.IHeaderSerializable.ReadHeaders(global::System.Net.Http.Headers.HttpResponseHeaders headers)
        {
            if (headers.TryGetValues("x-ms-request-id", out var __xMSRequestIdHeader0))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointInternal)this).XmsRequestId = System.Linq.Enumerable.FirstOrDefault(__xMSRequestIdHeader0) is string __headerXMSRequestIdHeader0 ? __headerXMSRequestIdHeader0 : (string)null;
            }
            if (headers.TryGetValues("x-ms-correlation-request-id", out var __xMSCorrelationRequestIdHeader1))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointInternal)this).XmsCorrelationRequestId = System.Linq.Enumerable.FirstOrDefault(__xMSCorrelationRequestIdHeader1) is string __headerXMSCorrelationRequestIdHeader1 ? __headerXMSCorrelationRequestIdHeader1 : (string)null;
            }
        }

        /// <summary>Creates an new <see cref="ServerEndpoint" /> instance.</summary>
        public ServerEndpoint()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// Server Endpoint object.
    public partial interface IServerEndpoint :
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api30.IResource
    {
        /// <summary>Cloud Tiering.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Cloud Tiering.",
        SerializedName = @"cloudTiering",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.FeatureStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.FeatureStatus? CloudTiering { get; set; }
        /// <summary>Cloud tiering status. Only populated if cloud tiering is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Cloud tiering status. Only populated if cloud tiering is enabled.",
        SerializedName = @"cloudTieringStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointCloudTieringStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointCloudTieringStatus CloudTieringStatus { get;  }
        /// <summary>Friendly Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Friendly Name",
        SerializedName = @"friendlyName",
        PossibleTypes = new [] { typeof(string) })]
        string FriendlyName { get; set; }
        /// <summary>Policy for how namespace and files are recalled during FastDr.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Policy for how namespace and files are recalled during FastDr.",
        SerializedName = @"initialDownloadPolicy",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.InitialDownloadPolicy) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.InitialDownloadPolicy? InitialDownloadPolicy { get; set; }
        /// <summary>Policy for how the initial upload sync session is performed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Policy for how the initial upload sync session is performed.",
        SerializedName = @"initialUploadPolicy",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.InitialUploadPolicy) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.InitialUploadPolicy? InitialUploadPolicy { get; set; }
        /// <summary>Resource Last Operation Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Resource Last Operation Name",
        SerializedName = @"lastOperationName",
        PossibleTypes = new [] { typeof(string) })]
        string LastOperationName { get;  }
        /// <summary>ServerEndpoint lastWorkflowId</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"ServerEndpoint lastWorkflowId",
        SerializedName = @"lastWorkflowId",
        PossibleTypes = new [] { typeof(string) })]
        string LastWorkflowId { get;  }
        /// <summary>
        /// Policy for enabling follow-the-sun business models: link local cache to cloud behavior to pre-populate before local access.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Policy for enabling follow-the-sun business models: link local cache to cloud behavior to pre-populate before local access.",
        SerializedName = @"localCacheMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.LocalCacheMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.LocalCacheMode? LocalCacheMode { get; set; }
        /// <summary>Offline data transfer</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Offline data transfer",
        SerializedName = @"offlineDataTransfer",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.FeatureStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.FeatureStatus? OfflineDataTransfer { get; set; }
        /// <summary>Offline data transfer share name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Offline data transfer share name",
        SerializedName = @"offlineDataTransferShareName",
        PossibleTypes = new [] { typeof(string) })]
        string OfflineDataTransferShareName { get; set; }
        /// <summary>Offline data transfer storage account resource ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Offline data transfer storage account resource ID",
        SerializedName = @"offlineDataTransferStorageAccountResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string OfflineDataTransferStorageAccountResourceId { get;  }
        /// <summary>Offline data transfer storage account tenant ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Offline data transfer storage account tenant ID",
        SerializedName = @"offlineDataTransferStorageAccountTenantId",
        PossibleTypes = new [] { typeof(string) })]
        string OfflineDataTransferStorageAccountTenantId { get;  }
        /// <summary>ServerEndpoint Provisioning State</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"ServerEndpoint Provisioning State",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>Last updated timestamp</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Last updated timestamp",
        SerializedName = @"lastUpdatedTimestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? RecallStatusLastUpdatedTimestamp { get;  }
        /// <summary>Array of recall errors</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Array of recall errors",
        SerializedName = @"recallErrors",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointRecallError) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointRecallError[] RecallStatusRecallError { get;  }
        /// <summary>Total count of recall errors.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Total count of recall errors.",
        SerializedName = @"totalRecallErrorsCount",
        PossibleTypes = new [] { typeof(long) })]
        long? RecallStatusTotalRecallErrorsCount { get;  }
        /// <summary>Server Local path.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Server Local path.",
        SerializedName = @"serverLocalPath",
        PossibleTypes = new [] { typeof(string) })]
        string ServerLocalPath { get; set; }
        /// <summary>Server name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Server name",
        SerializedName = @"serverName",
        PossibleTypes = new [] { typeof(string) })]
        string ServerName { get;  }
        /// <summary>Server Resource Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Server Resource Id.",
        SerializedName = @"serverResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string ServerResourceId { get; set; }
        /// <summary>Server Endpoint sync status</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Server Endpoint sync status",
        SerializedName = @"syncStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointSyncStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointSyncStatus SyncStatus { get;  }
        /// <summary>Tier files older than days.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Tier files older than days.",
        SerializedName = @"tierFilesOlderThanDays",
        PossibleTypes = new [] { typeof(int) })]
        int? TierFilesOlderThanDay { get; set; }
        /// <summary>Level of free space to be maintained by Cloud Tiering if it is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Level of free space to be maintained by Cloud Tiering if it is enabled.",
        SerializedName = @"volumeFreeSpacePercent",
        PossibleTypes = new [] { typeof(int) })]
        int? VolumeFreeSpacePercent { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"x-ms-correlation-request-id",
        PossibleTypes = new [] { typeof(string) })]
        string XmsCorrelationRequestId { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"x-ms-request-id",
        PossibleTypes = new [] { typeof(string) })]
        string XmsRequestId { get; set; }

    }
    /// Server Endpoint object.
    internal partial interface IServerEndpointInternal :
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api30.IResourceInternal
    {
        /// <summary>Cloud Tiering.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.FeatureStatus? CloudTiering { get; set; }
        /// <summary>Cloud tiering status. Only populated if cloud tiering is enabled.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointCloudTieringStatus CloudTieringStatus { get; set; }
        /// <summary>Friendly Name</summary>
        string FriendlyName { get; set; }
        /// <summary>Policy for how namespace and files are recalled during FastDr.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.InitialDownloadPolicy? InitialDownloadPolicy { get; set; }
        /// <summary>Policy for how the initial upload sync session is performed.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.InitialUploadPolicy? InitialUploadPolicy { get; set; }
        /// <summary>Resource Last Operation Name</summary>
        string LastOperationName { get; set; }
        /// <summary>ServerEndpoint lastWorkflowId</summary>
        string LastWorkflowId { get; set; }
        /// <summary>
        /// Policy for enabling follow-the-sun business models: link local cache to cloud behavior to pre-populate before local access.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.LocalCacheMode? LocalCacheMode { get; set; }
        /// <summary>Offline data transfer</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.FeatureStatus? OfflineDataTransfer { get; set; }
        /// <summary>Offline data transfer share name</summary>
        string OfflineDataTransferShareName { get; set; }
        /// <summary>Offline data transfer storage account resource ID</summary>
        string OfflineDataTransferStorageAccountResourceId { get; set; }
        /// <summary>Offline data transfer storage account tenant ID</summary>
        string OfflineDataTransferStorageAccountTenantId { get; set; }
        /// <summary>Server Endpoint properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointProperties Property { get; set; }
        /// <summary>ServerEndpoint Provisioning State</summary>
        string ProvisioningState { get; set; }
        /// <summary>Recall status. Only populated if cloud tiering is enabled.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointRecallStatus RecallStatus { get; set; }
        /// <summary>Last updated timestamp</summary>
        global::System.DateTime? RecallStatusLastUpdatedTimestamp { get; set; }
        /// <summary>Array of recall errors</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointRecallError[] RecallStatusRecallError { get; set; }
        /// <summary>Total count of recall errors.</summary>
        long? RecallStatusTotalRecallErrorsCount { get; set; }
        /// <summary>Server Local path.</summary>
        string ServerLocalPath { get; set; }
        /// <summary>Server name</summary>
        string ServerName { get; set; }
        /// <summary>Server Resource Id.</summary>
        string ServerResourceId { get; set; }
        /// <summary>Server Endpoint sync status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointSyncStatus SyncStatus { get; set; }
        /// <summary>Tier files older than days.</summary>
        int? TierFilesOlderThanDay { get; set; }
        /// <summary>Level of free space to be maintained by Cloud Tiering if it is enabled.</summary>
        int? VolumeFreeSpacePercent { get; set; }

        string XmsCorrelationRequestId { get; set; }

        string XmsRequestId { get; set; }

    }
}