// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Extensions;

    /// <summary>Server Endpoint sync status</summary>
    public partial class ServerEndpointSyncStatus
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointSyncStatus.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointSyncStatus.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointSyncStatus FromJson(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject json ? new ServerEndpointSyncStatus(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject into a new instance of <see cref="ServerEndpointSyncStatus" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal ServerEndpointSyncStatus(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_uploadStatus = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject>("uploadStatus"), out var __jsonUploadStatus) ? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ServerEndpointSyncSessionStatus.FromJson(__jsonUploadStatus) : UploadStatus;}
            {_downloadStatus = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject>("downloadStatus"), out var __jsonDownloadStatus) ? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ServerEndpointSyncSessionStatus.FromJson(__jsonDownloadStatus) : DownloadStatus;}
            {_uploadActivity = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject>("uploadActivity"), out var __jsonUploadActivity) ? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ServerEndpointSyncActivityStatus.FromJson(__jsonUploadActivity) : UploadActivity;}
            {_downloadActivity = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject>("downloadActivity"), out var __jsonDownloadActivity) ? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ServerEndpointSyncActivityStatus.FromJson(__jsonDownloadActivity) : DownloadActivity;}
            {_backgroundDataDownloadActivity = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject>("backgroundDataDownloadActivity"), out var __jsonBackgroundDataDownloadActivity) ? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ServerEndpointBackgroundDataDownloadActivity.FromJson(__jsonBackgroundDataDownloadActivity) : BackgroundDataDownloadActivity;}
            {_downloadHealth = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString>("downloadHealth"), out var __jsonDownloadHealth) ? (string)__jsonDownloadHealth : (string)DownloadHealth;}
            {_uploadHealth = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString>("uploadHealth"), out var __jsonUploadHealth) ? (string)__jsonUploadHealth : (string)UploadHealth;}
            {_combinedHealth = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString>("combinedHealth"), out var __jsonCombinedHealth) ? (string)__jsonCombinedHealth : (string)CombinedHealth;}
            {_syncActivity = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString>("syncActivity"), out var __jsonSyncActivity) ? (string)__jsonSyncActivity : (string)SyncActivity;}
            {_totalPersistentFilesNotSyncingCount = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNumber>("totalPersistentFilesNotSyncingCount"), out var __jsonTotalPersistentFilesNotSyncingCount) ? (long?)__jsonTotalPersistentFilesNotSyncingCount : TotalPersistentFilesNotSyncingCount;}
            {_lastUpdatedTimestamp = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString>("lastUpdatedTimestamp"), out var __jsonLastUpdatedTimestamp) ? global::System.DateTime.TryParse((string)__jsonLastUpdatedTimestamp, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonLastUpdatedTimestampValue) ? __jsonLastUpdatedTimestampValue : LastUpdatedTimestamp : LastUpdatedTimestamp;}
            {_offlineDataTransferStatus = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString>("offlineDataTransferStatus"), out var __jsonOfflineDataTransferStatus) ? (string)__jsonOfflineDataTransferStatus : (string)OfflineDataTransferStatus;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="ServerEndpointSyncStatus" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="ServerEndpointSyncStatus" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._uploadStatus ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) this._uploadStatus.ToJson(null,serializationMode) : null, "uploadStatus" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._downloadStatus ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) this._downloadStatus.ToJson(null,serializationMode) : null, "downloadStatus" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._uploadActivity ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) this._uploadActivity.ToJson(null,serializationMode) : null, "uploadActivity" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._downloadActivity ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) this._downloadActivity.ToJson(null,serializationMode) : null, "downloadActivity" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._backgroundDataDownloadActivity ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) this._backgroundDataDownloadActivity.ToJson(null,serializationMode) : null, "backgroundDataDownloadActivity" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._downloadHealth)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString(this._downloadHealth.ToString()) : null, "downloadHealth" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._uploadHealth)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString(this._uploadHealth.ToString()) : null, "uploadHealth" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._combinedHealth)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString(this._combinedHealth.ToString()) : null, "combinedHealth" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._syncActivity)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString(this._syncActivity.ToString()) : null, "syncActivity" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._totalPersistentFilesNotSyncingCount ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNumber((long)this._totalPersistentFilesNotSyncingCount) : null, "totalPersistentFilesNotSyncingCount" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._lastUpdatedTimestamp ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString(this._lastUpdatedTimestamp?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "lastUpdatedTimestamp" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._offlineDataTransferStatus)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString(this._offlineDataTransferStatus.ToString()) : null, "offlineDataTransferStatus" ,container.Add );
            }
            AfterToJson(ref container);
            return container;
        }
    }
}