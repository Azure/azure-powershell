// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Extensions;

    /// <summary>Server endpoint cloud tiering status object.</summary>
    public partial class ServerEndpointCloudTieringStatus :
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointCloudTieringStatus,
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointCloudTieringStatusInternal
    {

        /// <summary>Backing field for <see cref="CachePerformance" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringCachePerformance _cachePerformance;

        /// <summary>Information regarding how well the local cache on the server is performing.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringCachePerformance CachePerformance { get => (this._cachePerformance = this._cachePerformance ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.CloudTieringCachePerformance()); }

        /// <summary>Count of bytes that were served from the local server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inlined)]
        public long? CachePerformanceCacheHitByte { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringCachePerformanceInternal)CachePerformance).CacheHitByte; }

        /// <summary>Percentage of total bytes (hit + miss) that were served from the local server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inlined)]
        public int? CachePerformanceCacheHitBytesPercent { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringCachePerformanceInternal)CachePerformance).CacheHitBytesPercent; }

        /// <summary>Count of bytes that were served from the cloud</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inlined)]
        public long? CachePerformanceCacheMissByte { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringCachePerformanceInternal)CachePerformance).CacheMissByte; }

        /// <summary>Last updated timestamp</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inlined)]
        public global::System.DateTime? CachePerformanceLastUpdatedTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringCachePerformanceInternal)CachePerformance).LastUpdatedTimestamp; }

        /// <summary>Backing field for <see cref="DatePolicyStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringDatePolicyStatus _datePolicyStatus;

        /// <summary>Status of the date policy</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringDatePolicyStatus DatePolicyStatus { get => (this._datePolicyStatus = this._datePolicyStatus ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.CloudTieringDatePolicyStatus()); }

        /// <summary>Last updated timestamp</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inlined)]
        public global::System.DateTime? DatePolicyStatusLastUpdatedTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringDatePolicyStatusInternal)DatePolicyStatus).LastUpdatedTimestamp; }

        /// <summary>Most recent access time of tiered files</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inlined)]
        public global::System.DateTime? DatePolicyStatusTieredFilesMostRecentAccessTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringDatePolicyStatusInternal)DatePolicyStatus).TieredFilesMostRecentAccessTimestamp; }

        /// <summary>Array of tiering errors</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IFilesNotTieringError[] FileNotTieringError { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringFilesNotTieringInternal)FilesNotTiering).Error; }

        /// <summary>Last updated timestamp</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inlined)]
        public global::System.DateTime? FileNotTieringLastUpdatedTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringFilesNotTieringInternal)FilesNotTiering).LastUpdatedTimestamp; }

        /// <summary>Last cloud tiering result (HResult)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inlined)]
        public long? FileNotTieringTotalFileCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringFilesNotTieringInternal)FilesNotTiering).TotalFileCount; }

        /// <summary>Backing field for <see cref="FilesNotTiering" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringFilesNotTiering _filesNotTiering;

        /// <summary>Information regarding files that failed to be tiered</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringFilesNotTiering FilesNotTiering { get => (this._filesNotTiering = this._filesNotTiering ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.CloudTieringFilesNotTiering()); }

        /// <summary>Backing field for <see cref="Health" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.ServerEndpointHealthState? _health;

        /// <summary>Cloud tiering health state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.ServerEndpointHealthState? Health { get => this._health; }

        /// <summary>Backing field for <see cref="HealthLastUpdatedTimestamp" /> property.</summary>
        private global::System.DateTime? _healthLastUpdatedTimestamp;

        /// <summary>The last updated timestamp of health state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public global::System.DateTime? HealthLastUpdatedTimestamp { get => this._healthLastUpdatedTimestamp; }

        /// <summary>Backing field for <see cref="LastCloudTieringResult" /> property.</summary>
        private int? _lastCloudTieringResult;

        /// <summary>Last cloud tiering result (HResult)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public int? LastCloudTieringResult { get => this._lastCloudTieringResult; }

        /// <summary>Backing field for <see cref="LastSuccessTimestamp" /> property.</summary>
        private global::System.DateTime? _lastSuccessTimestamp;

        /// <summary>Last cloud tiering success timestamp</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public global::System.DateTime? LastSuccessTimestamp { get => this._lastSuccessTimestamp; }

        /// <summary>Backing field for <see cref="LastUpdatedTimestamp" /> property.</summary>
        private global::System.DateTime? _lastUpdatedTimestamp;

        /// <summary>Last updated timestamp</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public global::System.DateTime? LastUpdatedTimestamp { get => this._lastUpdatedTimestamp; }

        /// <summary>Backing field for <see cref="LowDiskMode" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringLowDiskMode _lowDiskMode;

        /// <summary>Information regarding the low disk mode state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringLowDiskMode LowDiskMode { get => (this._lowDiskMode = this._lowDiskMode ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.CloudTieringLowDiskMode()); }

        /// <summary>Last updated timestamp</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inlined)]
        public global::System.DateTime? LowDiskModeLastUpdatedTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringLowDiskModeInternal)LowDiskMode).LastUpdatedTimestamp; }

        /// <summary>Low disk mode state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.CloudTieringLowDiskModeState? LowDiskModeState { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringLowDiskModeInternal)LowDiskMode).State; }

        /// <summary>Internal Acessors for CachePerformance</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringCachePerformance Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointCloudTieringStatusInternal.CachePerformance { get => (this._cachePerformance = this._cachePerformance ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.CloudTieringCachePerformance()); set { {_cachePerformance = value;} } }

        /// <summary>Internal Acessors for CachePerformanceCacheHitByte</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointCloudTieringStatusInternal.CachePerformanceCacheHitByte { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringCachePerformanceInternal)CachePerformance).CacheHitByte; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringCachePerformanceInternal)CachePerformance).CacheHitByte = value; }

        /// <summary>Internal Acessors for CachePerformanceCacheHitBytesPercent</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointCloudTieringStatusInternal.CachePerformanceCacheHitBytesPercent { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringCachePerformanceInternal)CachePerformance).CacheHitBytesPercent; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringCachePerformanceInternal)CachePerformance).CacheHitBytesPercent = value; }

        /// <summary>Internal Acessors for CachePerformanceCacheMissByte</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointCloudTieringStatusInternal.CachePerformanceCacheMissByte { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringCachePerformanceInternal)CachePerformance).CacheMissByte; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringCachePerformanceInternal)CachePerformance).CacheMissByte = value; }

        /// <summary>Internal Acessors for CachePerformanceLastUpdatedTimestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointCloudTieringStatusInternal.CachePerformanceLastUpdatedTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringCachePerformanceInternal)CachePerformance).LastUpdatedTimestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringCachePerformanceInternal)CachePerformance).LastUpdatedTimestamp = value; }

        /// <summary>Internal Acessors for DatePolicyStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringDatePolicyStatus Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointCloudTieringStatusInternal.DatePolicyStatus { get => (this._datePolicyStatus = this._datePolicyStatus ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.CloudTieringDatePolicyStatus()); set { {_datePolicyStatus = value;} } }

        /// <summary>Internal Acessors for DatePolicyStatusLastUpdatedTimestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointCloudTieringStatusInternal.DatePolicyStatusLastUpdatedTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringDatePolicyStatusInternal)DatePolicyStatus).LastUpdatedTimestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringDatePolicyStatusInternal)DatePolicyStatus).LastUpdatedTimestamp = value; }

        /// <summary>Internal Acessors for DatePolicyStatusTieredFilesMostRecentAccessTimestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointCloudTieringStatusInternal.DatePolicyStatusTieredFilesMostRecentAccessTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringDatePolicyStatusInternal)DatePolicyStatus).TieredFilesMostRecentAccessTimestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringDatePolicyStatusInternal)DatePolicyStatus).TieredFilesMostRecentAccessTimestamp = value; }

        /// <summary>Internal Acessors for FileNotTieringError</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IFilesNotTieringError[] Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointCloudTieringStatusInternal.FileNotTieringError { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringFilesNotTieringInternal)FilesNotTiering).Error; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringFilesNotTieringInternal)FilesNotTiering).Error = value; }

        /// <summary>Internal Acessors for FileNotTieringLastUpdatedTimestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointCloudTieringStatusInternal.FileNotTieringLastUpdatedTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringFilesNotTieringInternal)FilesNotTiering).LastUpdatedTimestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringFilesNotTieringInternal)FilesNotTiering).LastUpdatedTimestamp = value; }

        /// <summary>Internal Acessors for FileNotTieringTotalFileCount</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointCloudTieringStatusInternal.FileNotTieringTotalFileCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringFilesNotTieringInternal)FilesNotTiering).TotalFileCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringFilesNotTieringInternal)FilesNotTiering).TotalFileCount = value; }

        /// <summary>Internal Acessors for FilesNotTiering</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringFilesNotTiering Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointCloudTieringStatusInternal.FilesNotTiering { get => (this._filesNotTiering = this._filesNotTiering ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.CloudTieringFilesNotTiering()); set { {_filesNotTiering = value;} } }

        /// <summary>Internal Acessors for Health</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.ServerEndpointHealthState? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointCloudTieringStatusInternal.Health { get => this._health; set { {_health = value;} } }

        /// <summary>Internal Acessors for HealthLastUpdatedTimestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointCloudTieringStatusInternal.HealthLastUpdatedTimestamp { get => this._healthLastUpdatedTimestamp; set { {_healthLastUpdatedTimestamp = value;} } }

        /// <summary>Internal Acessors for LastCloudTieringResult</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointCloudTieringStatusInternal.LastCloudTieringResult { get => this._lastCloudTieringResult; set { {_lastCloudTieringResult = value;} } }

        /// <summary>Internal Acessors for LastSuccessTimestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointCloudTieringStatusInternal.LastSuccessTimestamp { get => this._lastSuccessTimestamp; set { {_lastSuccessTimestamp = value;} } }

        /// <summary>Internal Acessors for LastUpdatedTimestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointCloudTieringStatusInternal.LastUpdatedTimestamp { get => this._lastUpdatedTimestamp; set { {_lastUpdatedTimestamp = value;} } }

        /// <summary>Internal Acessors for LowDiskMode</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringLowDiskMode Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointCloudTieringStatusInternal.LowDiskMode { get => (this._lowDiskMode = this._lowDiskMode ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.CloudTieringLowDiskMode()); set { {_lowDiskMode = value;} } }

        /// <summary>Internal Acessors for LowDiskModeLastUpdatedTimestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointCloudTieringStatusInternal.LowDiskModeLastUpdatedTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringLowDiskModeInternal)LowDiskMode).LastUpdatedTimestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringLowDiskModeInternal)LowDiskMode).LastUpdatedTimestamp = value; }

        /// <summary>Internal Acessors for LowDiskModeState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.CloudTieringLowDiskModeState? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointCloudTieringStatusInternal.LowDiskModeState { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringLowDiskModeInternal)LowDiskMode).State; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringLowDiskModeInternal)LowDiskMode).State = value; }

        /// <summary>Internal Acessors for SpaceSaving</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringSpaceSavings Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointCloudTieringStatusInternal.SpaceSaving { get => (this._spaceSaving = this._spaceSaving ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.CloudTieringSpaceSavings()); set { {_spaceSaving = value;} } }

        /// <summary>Internal Acessors for SpaceSavingCachedSizeByte</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointCloudTieringStatusInternal.SpaceSavingCachedSizeByte { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringSpaceSavingsInternal)SpaceSaving).CachedSizeByte; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringSpaceSavingsInternal)SpaceSaving).CachedSizeByte = value; }

        /// <summary>Internal Acessors for SpaceSavingLastUpdatedTimestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointCloudTieringStatusInternal.SpaceSavingLastUpdatedTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringSpaceSavingsInternal)SpaceSaving).LastUpdatedTimestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringSpaceSavingsInternal)SpaceSaving).LastUpdatedTimestamp = value; }

        /// <summary>Internal Acessors for SpaceSavingSpaceSavingsByte</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointCloudTieringStatusInternal.SpaceSavingSpaceSavingsByte { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringSpaceSavingsInternal)SpaceSaving).SpaceSavingsByte; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringSpaceSavingsInternal)SpaceSaving).SpaceSavingsByte = value; }

        /// <summary>Internal Acessors for SpaceSavingSpaceSavingsPercent</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointCloudTieringStatusInternal.SpaceSavingSpaceSavingsPercent { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringSpaceSavingsInternal)SpaceSaving).SpaceSavingsPercent; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringSpaceSavingsInternal)SpaceSaving).SpaceSavingsPercent = value; }

        /// <summary>Internal Acessors for SpaceSavingTotalSizeCloudByte</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointCloudTieringStatusInternal.SpaceSavingTotalSizeCloudByte { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringSpaceSavingsInternal)SpaceSaving).TotalSizeCloudByte; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringSpaceSavingsInternal)SpaceSaving).TotalSizeCloudByte = value; }

        /// <summary>Internal Acessors for SpaceSavingVolumeSizeByte</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointCloudTieringStatusInternal.SpaceSavingVolumeSizeByte { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringSpaceSavingsInternal)SpaceSaving).VolumeSizeByte; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringSpaceSavingsInternal)SpaceSaving).VolumeSizeByte = value; }

        /// <summary>Internal Acessors for VolumeFreeSpacePolicyStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringVolumeFreeSpacePolicyStatus Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointCloudTieringStatusInternal.VolumeFreeSpacePolicyStatus { get => (this._volumeFreeSpacePolicyStatus = this._volumeFreeSpacePolicyStatus ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.CloudTieringVolumeFreeSpacePolicyStatus()); set { {_volumeFreeSpacePolicyStatus = value;} } }

        /// <summary>Internal Acessors for VolumeFreeSpacePolicyStatusCurrentVolumeFreeSpacePercent</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointCloudTieringStatusInternal.VolumeFreeSpacePolicyStatusCurrentVolumeFreeSpacePercent { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringVolumeFreeSpacePolicyStatusInternal)VolumeFreeSpacePolicyStatus).CurrentVolumeFreeSpacePercent; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringVolumeFreeSpacePolicyStatusInternal)VolumeFreeSpacePolicyStatus).CurrentVolumeFreeSpacePercent = value; }

        /// <summary>Internal Acessors for VolumeFreeSpacePolicyStatusEffectiveVolumeFreeSpacePolicy</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointCloudTieringStatusInternal.VolumeFreeSpacePolicyStatusEffectiveVolumeFreeSpacePolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringVolumeFreeSpacePolicyStatusInternal)VolumeFreeSpacePolicyStatus).EffectiveVolumeFreeSpacePolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringVolumeFreeSpacePolicyStatusInternal)VolumeFreeSpacePolicyStatus).EffectiveVolumeFreeSpacePolicy = value; }

        /// <summary>Internal Acessors for VolumeFreeSpacePolicyStatusLastUpdatedTimestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointCloudTieringStatusInternal.VolumeFreeSpacePolicyStatusLastUpdatedTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringVolumeFreeSpacePolicyStatusInternal)VolumeFreeSpacePolicyStatus).LastUpdatedTimestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringVolumeFreeSpacePolicyStatusInternal)VolumeFreeSpacePolicyStatus).LastUpdatedTimestamp = value; }

        /// <summary>Backing field for <see cref="SpaceSaving" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringSpaceSavings _spaceSaving;

        /// <summary>Information regarding how much local space cloud tiering is saving.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringSpaceSavings SpaceSaving { get => (this._spaceSaving = this._spaceSaving ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.CloudTieringSpaceSavings()); }

        /// <summary>Cached content size on the server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inlined)]
        public long? SpaceSavingCachedSizeByte { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringSpaceSavingsInternal)SpaceSaving).CachedSizeByte; }

        /// <summary>Last updated timestamp</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inlined)]
        public global::System.DateTime? SpaceSavingLastUpdatedTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringSpaceSavingsInternal)SpaceSaving).LastUpdatedTimestamp; }

        /// <summary>Count of bytes saved on the server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inlined)]
        public long? SpaceSavingSpaceSavingsByte { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringSpaceSavingsInternal)SpaceSaving).SpaceSavingsByte; }

        /// <summary>Percentage of cached size over total size</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inlined)]
        public int? SpaceSavingSpaceSavingsPercent { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringSpaceSavingsInternal)SpaceSaving).SpaceSavingsPercent; }

        /// <summary>Total size of content in the azure file share</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inlined)]
        public long? SpaceSavingTotalSizeCloudByte { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringSpaceSavingsInternal)SpaceSaving).TotalSizeCloudByte; }

        /// <summary>Volume size</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inlined)]
        public long? SpaceSavingVolumeSizeByte { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringSpaceSavingsInternal)SpaceSaving).VolumeSizeByte; }

        /// <summary>Backing field for <see cref="VolumeFreeSpacePolicyStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringVolumeFreeSpacePolicyStatus _volumeFreeSpacePolicyStatus;

        /// <summary>Status of the volume free space policy</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringVolumeFreeSpacePolicyStatus VolumeFreeSpacePolicyStatus { get => (this._volumeFreeSpacePolicyStatus = this._volumeFreeSpacePolicyStatus ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.CloudTieringVolumeFreeSpacePolicyStatus()); }

        /// <summary>Current volume free space percentage.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inlined)]
        public int? VolumeFreeSpacePolicyStatusCurrentVolumeFreeSpacePercent { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringVolumeFreeSpacePolicyStatusInternal)VolumeFreeSpacePolicyStatus).CurrentVolumeFreeSpacePercent; }

        /// <summary>
        /// In the case where multiple server endpoints are present in a volume, an effective free space policy is applied.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inlined)]
        public int? VolumeFreeSpacePolicyStatusEffectiveVolumeFreeSpacePolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringVolumeFreeSpacePolicyStatusInternal)VolumeFreeSpacePolicyStatus).EffectiveVolumeFreeSpacePolicy; }

        /// <summary>Last updated timestamp</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inlined)]
        public global::System.DateTime? VolumeFreeSpacePolicyStatusLastUpdatedTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringVolumeFreeSpacePolicyStatusInternal)VolumeFreeSpacePolicyStatus).LastUpdatedTimestamp; }

        /// <summary>Creates an new <see cref="ServerEndpointCloudTieringStatus" /> instance.</summary>
        public ServerEndpointCloudTieringStatus()
        {

        }
    }
    /// Server endpoint cloud tiering status object.
    public partial interface IServerEndpointCloudTieringStatus :
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.IJsonSerializable
    {
        /// <summary>Count of bytes that were served from the local server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Count of bytes that were served from the local server",
        SerializedName = @"cacheHitBytes",
        PossibleTypes = new [] { typeof(long) })]
        long? CachePerformanceCacheHitByte { get;  }
        /// <summary>Percentage of total bytes (hit + miss) that were served from the local server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Percentage of total bytes (hit + miss) that were served from the local server",
        SerializedName = @"cacheHitBytesPercent",
        PossibleTypes = new [] { typeof(int) })]
        int? CachePerformanceCacheHitBytesPercent { get;  }
        /// <summary>Count of bytes that were served from the cloud</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Count of bytes that were served from the cloud",
        SerializedName = @"cacheMissBytes",
        PossibleTypes = new [] { typeof(long) })]
        long? CachePerformanceCacheMissByte { get;  }
        /// <summary>Last updated timestamp</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Last updated timestamp",
        SerializedName = @"lastUpdatedTimestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CachePerformanceLastUpdatedTimestamp { get;  }
        /// <summary>Last updated timestamp</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Last updated timestamp",
        SerializedName = @"lastUpdatedTimestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? DatePolicyStatusLastUpdatedTimestamp { get;  }
        /// <summary>Most recent access time of tiered files</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Most recent access time of tiered files",
        SerializedName = @"tieredFilesMostRecentAccessTimestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? DatePolicyStatusTieredFilesMostRecentAccessTimestamp { get;  }
        /// <summary>Array of tiering errors</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Array of tiering errors",
        SerializedName = @"errors",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IFilesNotTieringError) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IFilesNotTieringError[] FileNotTieringError { get;  }
        /// <summary>Last updated timestamp</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Last updated timestamp",
        SerializedName = @"lastUpdatedTimestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? FileNotTieringLastUpdatedTimestamp { get;  }
        /// <summary>Last cloud tiering result (HResult)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Last cloud tiering result (HResult)",
        SerializedName = @"totalFileCount",
        PossibleTypes = new [] { typeof(long) })]
        long? FileNotTieringTotalFileCount { get;  }
        /// <summary>Cloud tiering health state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Cloud tiering health state.",
        SerializedName = @"health",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.ServerEndpointHealthState) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.ServerEndpointHealthState? Health { get;  }
        /// <summary>The last updated timestamp of health state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The last updated timestamp of health state",
        SerializedName = @"healthLastUpdatedTimestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? HealthLastUpdatedTimestamp { get;  }
        /// <summary>Last cloud tiering result (HResult)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Last cloud tiering result (HResult)",
        SerializedName = @"lastCloudTieringResult",
        PossibleTypes = new [] { typeof(int) })]
        int? LastCloudTieringResult { get;  }
        /// <summary>Last cloud tiering success timestamp</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Last cloud tiering success timestamp",
        SerializedName = @"lastSuccessTimestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastSuccessTimestamp { get;  }
        /// <summary>Last updated timestamp</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Last updated timestamp",
        SerializedName = @"lastUpdatedTimestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastUpdatedTimestamp { get;  }
        /// <summary>Last updated timestamp</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Last updated timestamp",
        SerializedName = @"lastUpdatedTimestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LowDiskModeLastUpdatedTimestamp { get;  }
        /// <summary>Low disk mode state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Low disk mode state",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.CloudTieringLowDiskModeState) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.CloudTieringLowDiskModeState? LowDiskModeState { get;  }
        /// <summary>Cached content size on the server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Cached content size on the server",
        SerializedName = @"cachedSizeBytes",
        PossibleTypes = new [] { typeof(long) })]
        long? SpaceSavingCachedSizeByte { get;  }
        /// <summary>Last updated timestamp</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Last updated timestamp",
        SerializedName = @"lastUpdatedTimestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SpaceSavingLastUpdatedTimestamp { get;  }
        /// <summary>Count of bytes saved on the server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Count of bytes saved on the server",
        SerializedName = @"spaceSavingsBytes",
        PossibleTypes = new [] { typeof(long) })]
        long? SpaceSavingSpaceSavingsByte { get;  }
        /// <summary>Percentage of cached size over total size</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Percentage of cached size over total size",
        SerializedName = @"spaceSavingsPercent",
        PossibleTypes = new [] { typeof(int) })]
        int? SpaceSavingSpaceSavingsPercent { get;  }
        /// <summary>Total size of content in the azure file share</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Total size of content in the azure file share",
        SerializedName = @"totalSizeCloudBytes",
        PossibleTypes = new [] { typeof(long) })]
        long? SpaceSavingTotalSizeCloudByte { get;  }
        /// <summary>Volume size</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Volume size",
        SerializedName = @"volumeSizeBytes",
        PossibleTypes = new [] { typeof(long) })]
        long? SpaceSavingVolumeSizeByte { get;  }
        /// <summary>Current volume free space percentage.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Current volume free space percentage.",
        SerializedName = @"currentVolumeFreeSpacePercent",
        PossibleTypes = new [] { typeof(int) })]
        int? VolumeFreeSpacePolicyStatusCurrentVolumeFreeSpacePercent { get;  }
        /// <summary>
        /// In the case where multiple server endpoints are present in a volume, an effective free space policy is applied.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"In the case where multiple server endpoints are present in a volume, an effective free space policy is applied.",
        SerializedName = @"effectiveVolumeFreeSpacePolicy",
        PossibleTypes = new [] { typeof(int) })]
        int? VolumeFreeSpacePolicyStatusEffectiveVolumeFreeSpacePolicy { get;  }
        /// <summary>Last updated timestamp</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Last updated timestamp",
        SerializedName = @"lastUpdatedTimestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? VolumeFreeSpacePolicyStatusLastUpdatedTimestamp { get;  }

    }
    /// Server endpoint cloud tiering status object.
    internal partial interface IServerEndpointCloudTieringStatusInternal

    {
        /// <summary>Information regarding how well the local cache on the server is performing.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringCachePerformance CachePerformance { get; set; }
        /// <summary>Count of bytes that were served from the local server</summary>
        long? CachePerformanceCacheHitByte { get; set; }
        /// <summary>Percentage of total bytes (hit + miss) that were served from the local server</summary>
        int? CachePerformanceCacheHitBytesPercent { get; set; }
        /// <summary>Count of bytes that were served from the cloud</summary>
        long? CachePerformanceCacheMissByte { get; set; }
        /// <summary>Last updated timestamp</summary>
        global::System.DateTime? CachePerformanceLastUpdatedTimestamp { get; set; }
        /// <summary>Status of the date policy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringDatePolicyStatus DatePolicyStatus { get; set; }
        /// <summary>Last updated timestamp</summary>
        global::System.DateTime? DatePolicyStatusLastUpdatedTimestamp { get; set; }
        /// <summary>Most recent access time of tiered files</summary>
        global::System.DateTime? DatePolicyStatusTieredFilesMostRecentAccessTimestamp { get; set; }
        /// <summary>Array of tiering errors</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IFilesNotTieringError[] FileNotTieringError { get; set; }
        /// <summary>Last updated timestamp</summary>
        global::System.DateTime? FileNotTieringLastUpdatedTimestamp { get; set; }
        /// <summary>Last cloud tiering result (HResult)</summary>
        long? FileNotTieringTotalFileCount { get; set; }
        /// <summary>Information regarding files that failed to be tiered</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringFilesNotTiering FilesNotTiering { get; set; }
        /// <summary>Cloud tiering health state.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.ServerEndpointHealthState? Health { get; set; }
        /// <summary>The last updated timestamp of health state</summary>
        global::System.DateTime? HealthLastUpdatedTimestamp { get; set; }
        /// <summary>Last cloud tiering result (HResult)</summary>
        int? LastCloudTieringResult { get; set; }
        /// <summary>Last cloud tiering success timestamp</summary>
        global::System.DateTime? LastSuccessTimestamp { get; set; }
        /// <summary>Last updated timestamp</summary>
        global::System.DateTime? LastUpdatedTimestamp { get; set; }
        /// <summary>Information regarding the low disk mode state</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringLowDiskMode LowDiskMode { get; set; }
        /// <summary>Last updated timestamp</summary>
        global::System.DateTime? LowDiskModeLastUpdatedTimestamp { get; set; }
        /// <summary>Low disk mode state</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.CloudTieringLowDiskModeState? LowDiskModeState { get; set; }
        /// <summary>Information regarding how much local space cloud tiering is saving.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringSpaceSavings SpaceSaving { get; set; }
        /// <summary>Cached content size on the server</summary>
        long? SpaceSavingCachedSizeByte { get; set; }
        /// <summary>Last updated timestamp</summary>
        global::System.DateTime? SpaceSavingLastUpdatedTimestamp { get; set; }
        /// <summary>Count of bytes saved on the server</summary>
        long? SpaceSavingSpaceSavingsByte { get; set; }
        /// <summary>Percentage of cached size over total size</summary>
        int? SpaceSavingSpaceSavingsPercent { get; set; }
        /// <summary>Total size of content in the azure file share</summary>
        long? SpaceSavingTotalSizeCloudByte { get; set; }
        /// <summary>Volume size</summary>
        long? SpaceSavingVolumeSizeByte { get; set; }
        /// <summary>Status of the volume free space policy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ICloudTieringVolumeFreeSpacePolicyStatus VolumeFreeSpacePolicyStatus { get; set; }
        /// <summary>Current volume free space percentage.</summary>
        int? VolumeFreeSpacePolicyStatusCurrentVolumeFreeSpacePercent { get; set; }
        /// <summary>
        /// In the case where multiple server endpoints are present in a volume, an effective free space policy is applied.
        /// </summary>
        int? VolumeFreeSpacePolicyStatusEffectiveVolumeFreeSpacePolicy { get; set; }
        /// <summary>Last updated timestamp</summary>
        global::System.DateTime? VolumeFreeSpacePolicyStatusLastUpdatedTimestamp { get; set; }

    }
}