// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Extensions;

    /// <summary>Server endpoint cloud tiering status object.</summary>
    public partial class ServerEndpointCloudTieringStatus
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointCloudTieringStatus.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointCloudTieringStatus.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointCloudTieringStatus FromJson(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject json ? new ServerEndpointCloudTieringStatus(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject into a new instance of <see cref="ServerEndpointCloudTieringStatus" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal ServerEndpointCloudTieringStatus(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_spaceSaving = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject>("spaceSavings"), out var __jsonSpaceSavings) ? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.CloudTieringSpaceSavings.FromJson(__jsonSpaceSavings) : SpaceSaving;}
            {_cachePerformance = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject>("cachePerformance"), out var __jsonCachePerformance) ? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.CloudTieringCachePerformance.FromJson(__jsonCachePerformance) : CachePerformance;}
            {_filesNotTiering = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject>("filesNotTiering"), out var __jsonFilesNotTiering) ? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.CloudTieringFilesNotTiering.FromJson(__jsonFilesNotTiering) : FilesNotTiering;}
            {_volumeFreeSpacePolicyStatus = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject>("volumeFreeSpacePolicyStatus"), out var __jsonVolumeFreeSpacePolicyStatus) ? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.CloudTieringVolumeFreeSpacePolicyStatus.FromJson(__jsonVolumeFreeSpacePolicyStatus) : VolumeFreeSpacePolicyStatus;}
            {_datePolicyStatus = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject>("datePolicyStatus"), out var __jsonDatePolicyStatus) ? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.CloudTieringDatePolicyStatus.FromJson(__jsonDatePolicyStatus) : DatePolicyStatus;}
            {_lowDiskMode = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject>("lowDiskMode"), out var __jsonLowDiskMode) ? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.CloudTieringLowDiskMode.FromJson(__jsonLowDiskMode) : LowDiskMode;}
            {_lastUpdatedTimestamp = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString>("lastUpdatedTimestamp"), out var __jsonLastUpdatedTimestamp) ? global::System.DateTime.TryParse((string)__jsonLastUpdatedTimestamp, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonLastUpdatedTimestampValue) ? __jsonLastUpdatedTimestampValue : LastUpdatedTimestamp : LastUpdatedTimestamp;}
            {_health = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString>("health"), out var __jsonHealth) ? (string)__jsonHealth : (string)Health;}
            {_healthLastUpdatedTimestamp = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString>("healthLastUpdatedTimestamp"), out var __jsonHealthLastUpdatedTimestamp) ? global::System.DateTime.TryParse((string)__jsonHealthLastUpdatedTimestamp, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonHealthLastUpdatedTimestampValue) ? __jsonHealthLastUpdatedTimestampValue : HealthLastUpdatedTimestamp : HealthLastUpdatedTimestamp;}
            {_lastCloudTieringResult = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNumber>("lastCloudTieringResult"), out var __jsonLastCloudTieringResult) ? (int?)__jsonLastCloudTieringResult : LastCloudTieringResult;}
            {_lastSuccessTimestamp = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString>("lastSuccessTimestamp"), out var __jsonLastSuccessTimestamp) ? global::System.DateTime.TryParse((string)__jsonLastSuccessTimestamp, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonLastSuccessTimestampValue) ? __jsonLastSuccessTimestampValue : LastSuccessTimestamp : LastSuccessTimestamp;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="ServerEndpointCloudTieringStatus" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="ServerEndpointCloudTieringStatus" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._spaceSaving ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) this._spaceSaving.ToJson(null,serializationMode) : null, "spaceSavings" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._cachePerformance ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) this._cachePerformance.ToJson(null,serializationMode) : null, "cachePerformance" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._filesNotTiering ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) this._filesNotTiering.ToJson(null,serializationMode) : null, "filesNotTiering" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._volumeFreeSpacePolicyStatus ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) this._volumeFreeSpacePolicyStatus.ToJson(null,serializationMode) : null, "volumeFreeSpacePolicyStatus" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._datePolicyStatus ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) this._datePolicyStatus.ToJson(null,serializationMode) : null, "datePolicyStatus" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._lowDiskMode ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) this._lowDiskMode.ToJson(null,serializationMode) : null, "lowDiskMode" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._lastUpdatedTimestamp ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString(this._lastUpdatedTimestamp?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "lastUpdatedTimestamp" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._health)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString(this._health.ToString()) : null, "health" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._healthLastUpdatedTimestamp ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString(this._healthLastUpdatedTimestamp?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "healthLastUpdatedTimestamp" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._lastCloudTieringResult ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNumber((int)this._lastCloudTieringResult) : null, "lastCloudTieringResult" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._lastSuccessTimestamp ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString(this._lastSuccessTimestamp?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "lastSuccessTimestamp" ,container.Add );
            }
            AfterToJson(ref container);
            return container;
        }
    }
}