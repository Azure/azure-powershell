// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Extensions;

    /// <summary>ServerEndpoint Properties object.</summary>
    public partial class ServerEndpointProperties :
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointProperties,
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal
    {

        /// <summary>Backing field for <see cref="CloudTiering" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.FeatureStatus? _cloudTiering;

        /// <summary>Cloud Tiering.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.FeatureStatus? CloudTiering { get => this._cloudTiering; set => this._cloudTiering = value; }

        /// <summary>Backing field for <see cref="CloudTieringStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointCloudTieringStatus _cloudTieringStatus;

        /// <summary>Cloud tiering status. Only populated if cloud tiering is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointCloudTieringStatus CloudTieringStatus { get => (this._cloudTieringStatus = this._cloudTieringStatus ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ServerEndpointCloudTieringStatus()); }

        /// <summary>Backing field for <see cref="FriendlyName" /> property.</summary>
        private string _friendlyName;

        /// <summary>Friendly Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public string FriendlyName { get => this._friendlyName; set => this._friendlyName = value; }

        /// <summary>Backing field for <see cref="InitialDownloadPolicy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.InitialDownloadPolicy? _initialDownloadPolicy;

        /// <summary>Policy for how namespace and files are recalled during FastDr.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.InitialDownloadPolicy? InitialDownloadPolicy { get => this._initialDownloadPolicy; set => this._initialDownloadPolicy = value; }

        /// <summary>Backing field for <see cref="InitialUploadPolicy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.InitialUploadPolicy? _initialUploadPolicy;

        /// <summary>Policy for how the initial upload sync session is performed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.InitialUploadPolicy? InitialUploadPolicy { get => this._initialUploadPolicy; set => this._initialUploadPolicy = value; }

        /// <summary>Backing field for <see cref="LastOperationName" /> property.</summary>
        private string _lastOperationName;

        /// <summary>Resource Last Operation Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public string LastOperationName { get => this._lastOperationName; }

        /// <summary>Backing field for <see cref="LastWorkflowId" /> property.</summary>
        private string _lastWorkflowId;

        /// <summary>ServerEndpoint lastWorkflowId</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public string LastWorkflowId { get => this._lastWorkflowId; }

        /// <summary>Backing field for <see cref="LocalCacheMode" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.LocalCacheMode? _localCacheMode;

        /// <summary>
        /// Policy for enabling follow-the-sun business models: link local cache to cloud behavior to pre-populate before local access.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.LocalCacheMode? LocalCacheMode { get => this._localCacheMode; set => this._localCacheMode = value; }

        /// <summary>Internal Acessors for CloudTieringStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointCloudTieringStatus Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal.CloudTieringStatus { get => (this._cloudTieringStatus = this._cloudTieringStatus ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ServerEndpointCloudTieringStatus()); set { {_cloudTieringStatus = value;} } }

        /// <summary>Internal Acessors for LastOperationName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal.LastOperationName { get => this._lastOperationName; set { {_lastOperationName = value;} } }

        /// <summary>Internal Acessors for LastWorkflowId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal.LastWorkflowId { get => this._lastWorkflowId; set { {_lastWorkflowId = value;} } }

        /// <summary>Internal Acessors for OfflineDataTransferStorageAccountResourceId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal.OfflineDataTransferStorageAccountResourceId { get => this._offlineDataTransferStorageAccountResourceId; set { {_offlineDataTransferStorageAccountResourceId = value;} } }

        /// <summary>Internal Acessors for OfflineDataTransferStorageAccountTenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal.OfflineDataTransferStorageAccountTenantId { get => this._offlineDataTransferStorageAccountTenantId; set { {_offlineDataTransferStorageAccountTenantId = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for RecallStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointRecallStatus Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal.RecallStatus { get => (this._recallStatus = this._recallStatus ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ServerEndpointRecallStatus()); set { {_recallStatus = value;} } }

        /// <summary>Internal Acessors for RecallStatusLastUpdatedTimestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal.RecallStatusLastUpdatedTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointRecallStatusInternal)RecallStatus).LastUpdatedTimestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointRecallStatusInternal)RecallStatus).LastUpdatedTimestamp = value; }

        /// <summary>Internal Acessors for RecallStatusRecallError</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointRecallError[] Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal.RecallStatusRecallError { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointRecallStatusInternal)RecallStatus).RecallError; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointRecallStatusInternal)RecallStatus).RecallError = value; }

        /// <summary>Internal Acessors for RecallStatusTotalRecallErrorsCount</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal.RecallStatusTotalRecallErrorsCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointRecallStatusInternal)RecallStatus).TotalRecallErrorsCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointRecallStatusInternal)RecallStatus).TotalRecallErrorsCount = value; }

        /// <summary>Internal Acessors for ServerName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal.ServerName { get => this._serverName; set { {_serverName = value;} } }

        /// <summary>Internal Acessors for SyncStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointSyncStatus Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointPropertiesInternal.SyncStatus { get => (this._syncStatus = this._syncStatus ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ServerEndpointSyncStatus()); set { {_syncStatus = value;} } }

        /// <summary>Backing field for <see cref="OfflineDataTransfer" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.FeatureStatus? _offlineDataTransfer;

        /// <summary>Offline data transfer</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.FeatureStatus? OfflineDataTransfer { get => this._offlineDataTransfer; set => this._offlineDataTransfer = value; }

        /// <summary>Backing field for <see cref="OfflineDataTransferShareName" /> property.</summary>
        private string _offlineDataTransferShareName;

        /// <summary>Offline data transfer share name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public string OfflineDataTransferShareName { get => this._offlineDataTransferShareName; set => this._offlineDataTransferShareName = value; }

        /// <summary>
        /// Backing field for <see cref="OfflineDataTransferStorageAccountResourceId" /> property.
        /// </summary>
        private string _offlineDataTransferStorageAccountResourceId;

        /// <summary>Offline data transfer storage account resource ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public string OfflineDataTransferStorageAccountResourceId { get => this._offlineDataTransferStorageAccountResourceId; }

        /// <summary>
        /// Backing field for <see cref="OfflineDataTransferStorageAccountTenantId" /> property.
        /// </summary>
        private string _offlineDataTransferStorageAccountTenantId;

        /// <summary>Offline data transfer storage account tenant ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public string OfflineDataTransferStorageAccountTenantId { get => this._offlineDataTransferStorageAccountTenantId; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>ServerEndpoint Provisioning State</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="RecallStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointRecallStatus _recallStatus;

        /// <summary>Recall status. Only populated if cloud tiering is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointRecallStatus RecallStatus { get => (this._recallStatus = this._recallStatus ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ServerEndpointRecallStatus()); }

        /// <summary>Last updated timestamp</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inlined)]
        public global::System.DateTime? RecallStatusLastUpdatedTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointRecallStatusInternal)RecallStatus).LastUpdatedTimestamp; }

        /// <summary>Array of recall errors</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointRecallError[] RecallStatusRecallError { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointRecallStatusInternal)RecallStatus).RecallError; }

        /// <summary>Total count of recall errors.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Inlined)]
        public long? RecallStatusTotalRecallErrorsCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointRecallStatusInternal)RecallStatus).TotalRecallErrorsCount; }

        /// <summary>Backing field for <see cref="ServerLocalPath" /> property.</summary>
        private string _serverLocalPath;

        /// <summary>Server Local path.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public string ServerLocalPath { get => this._serverLocalPath; set => this._serverLocalPath = value; }

        /// <summary>Backing field for <see cref="ServerName" /> property.</summary>
        private string _serverName;

        /// <summary>Server name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public string ServerName { get => this._serverName; }

        /// <summary>Backing field for <see cref="ServerResourceId" /> property.</summary>
        private string _serverResourceId;

        /// <summary>Server Resource Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public string ServerResourceId { get => this._serverResourceId; set => this._serverResourceId = value; }

        /// <summary>Backing field for <see cref="SyncStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointSyncStatus _syncStatus;

        /// <summary>Server Endpoint sync status</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointSyncStatus SyncStatus { get => (this._syncStatus = this._syncStatus ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ServerEndpointSyncStatus()); }

        /// <summary>Backing field for <see cref="TierFilesOlderThanDay" /> property.</summary>
        private int? _tierFilesOlderThanDay;

        /// <summary>Tier files older than days.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public int? TierFilesOlderThanDay { get => this._tierFilesOlderThanDay; set => this._tierFilesOlderThanDay = value; }

        /// <summary>Backing field for <see cref="VolumeFreeSpacePercent" /> property.</summary>
        private int? _volumeFreeSpacePercent;

        /// <summary>Level of free space to be maintained by Cloud Tiering if it is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public int? VolumeFreeSpacePercent { get => this._volumeFreeSpacePercent; set => this._volumeFreeSpacePercent = value; }

        /// <summary>Creates an new <see cref="ServerEndpointProperties" /> instance.</summary>
        public ServerEndpointProperties()
        {

        }
    }
    /// ServerEndpoint Properties object.
    public partial interface IServerEndpointProperties :
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.IJsonSerializable
    {
        /// <summary>Cloud Tiering.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Cloud Tiering.",
        SerializedName = @"cloudTiering",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.FeatureStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.FeatureStatus? CloudTiering { get; set; }
        /// <summary>Cloud tiering status. Only populated if cloud tiering is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Cloud tiering status. Only populated if cloud tiering is enabled.",
        SerializedName = @"cloudTieringStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointCloudTieringStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointCloudTieringStatus CloudTieringStatus { get;  }
        /// <summary>Friendly Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Friendly Name",
        SerializedName = @"friendlyName",
        PossibleTypes = new [] { typeof(string) })]
        string FriendlyName { get; set; }
        /// <summary>Policy for how namespace and files are recalled during FastDr.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Policy for how namespace and files are recalled during FastDr.",
        SerializedName = @"initialDownloadPolicy",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.InitialDownloadPolicy) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.InitialDownloadPolicy? InitialDownloadPolicy { get; set; }
        /// <summary>Policy for how the initial upload sync session is performed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Policy for how the initial upload sync session is performed.",
        SerializedName = @"initialUploadPolicy",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.InitialUploadPolicy) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.InitialUploadPolicy? InitialUploadPolicy { get; set; }
        /// <summary>Resource Last Operation Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Resource Last Operation Name",
        SerializedName = @"lastOperationName",
        PossibleTypes = new [] { typeof(string) })]
        string LastOperationName { get;  }
        /// <summary>ServerEndpoint lastWorkflowId</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"ServerEndpoint lastWorkflowId",
        SerializedName = @"lastWorkflowId",
        PossibleTypes = new [] { typeof(string) })]
        string LastWorkflowId { get;  }
        /// <summary>
        /// Policy for enabling follow-the-sun business models: link local cache to cloud behavior to pre-populate before local access.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Policy for enabling follow-the-sun business models: link local cache to cloud behavior to pre-populate before local access.",
        SerializedName = @"localCacheMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.LocalCacheMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.LocalCacheMode? LocalCacheMode { get; set; }
        /// <summary>Offline data transfer</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Offline data transfer",
        SerializedName = @"offlineDataTransfer",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.FeatureStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.FeatureStatus? OfflineDataTransfer { get; set; }
        /// <summary>Offline data transfer share name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Offline data transfer share name",
        SerializedName = @"offlineDataTransferShareName",
        PossibleTypes = new [] { typeof(string) })]
        string OfflineDataTransferShareName { get; set; }
        /// <summary>Offline data transfer storage account resource ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Offline data transfer storage account resource ID",
        SerializedName = @"offlineDataTransferStorageAccountResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string OfflineDataTransferStorageAccountResourceId { get;  }
        /// <summary>Offline data transfer storage account tenant ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Offline data transfer storage account tenant ID",
        SerializedName = @"offlineDataTransferStorageAccountTenantId",
        PossibleTypes = new [] { typeof(string) })]
        string OfflineDataTransferStorageAccountTenantId { get;  }
        /// <summary>ServerEndpoint Provisioning State</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"ServerEndpoint Provisioning State",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>Last updated timestamp</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Last updated timestamp",
        SerializedName = @"lastUpdatedTimestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? RecallStatusLastUpdatedTimestamp { get;  }
        /// <summary>Array of recall errors</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Array of recall errors",
        SerializedName = @"recallErrors",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointRecallError) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointRecallError[] RecallStatusRecallError { get;  }
        /// <summary>Total count of recall errors.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Total count of recall errors.",
        SerializedName = @"totalRecallErrorsCount",
        PossibleTypes = new [] { typeof(long) })]
        long? RecallStatusTotalRecallErrorsCount { get;  }
        /// <summary>Server Local path.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Server Local path.",
        SerializedName = @"serverLocalPath",
        PossibleTypes = new [] { typeof(string) })]
        string ServerLocalPath { get; set; }
        /// <summary>Server name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Server name",
        SerializedName = @"serverName",
        PossibleTypes = new [] { typeof(string) })]
        string ServerName { get;  }
        /// <summary>Server Resource Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Server Resource Id.",
        SerializedName = @"serverResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string ServerResourceId { get; set; }
        /// <summary>Server Endpoint sync status</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Server Endpoint sync status",
        SerializedName = @"syncStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointSyncStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointSyncStatus SyncStatus { get;  }
        /// <summary>Tier files older than days.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Tier files older than days.",
        SerializedName = @"tierFilesOlderThanDays",
        PossibleTypes = new [] { typeof(int) })]
        int? TierFilesOlderThanDay { get; set; }
        /// <summary>Level of free space to be maintained by Cloud Tiering if it is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Level of free space to be maintained by Cloud Tiering if it is enabled.",
        SerializedName = @"volumeFreeSpacePercent",
        PossibleTypes = new [] { typeof(int) })]
        int? VolumeFreeSpacePercent { get; set; }

    }
    /// ServerEndpoint Properties object.
    internal partial interface IServerEndpointPropertiesInternal

    {
        /// <summary>Cloud Tiering.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.FeatureStatus? CloudTiering { get; set; }
        /// <summary>Cloud tiering status. Only populated if cloud tiering is enabled.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointCloudTieringStatus CloudTieringStatus { get; set; }
        /// <summary>Friendly Name</summary>
        string FriendlyName { get; set; }
        /// <summary>Policy for how namespace and files are recalled during FastDr.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.InitialDownloadPolicy? InitialDownloadPolicy { get; set; }
        /// <summary>Policy for how the initial upload sync session is performed.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.InitialUploadPolicy? InitialUploadPolicy { get; set; }
        /// <summary>Resource Last Operation Name</summary>
        string LastOperationName { get; set; }
        /// <summary>ServerEndpoint lastWorkflowId</summary>
        string LastWorkflowId { get; set; }
        /// <summary>
        /// Policy for enabling follow-the-sun business models: link local cache to cloud behavior to pre-populate before local access.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.LocalCacheMode? LocalCacheMode { get; set; }
        /// <summary>Offline data transfer</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.FeatureStatus? OfflineDataTransfer { get; set; }
        /// <summary>Offline data transfer share name</summary>
        string OfflineDataTransferShareName { get; set; }
        /// <summary>Offline data transfer storage account resource ID</summary>
        string OfflineDataTransferStorageAccountResourceId { get; set; }
        /// <summary>Offline data transfer storage account tenant ID</summary>
        string OfflineDataTransferStorageAccountTenantId { get; set; }
        /// <summary>ServerEndpoint Provisioning State</summary>
        string ProvisioningState { get; set; }
        /// <summary>Recall status. Only populated if cloud tiering is enabled.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointRecallStatus RecallStatus { get; set; }
        /// <summary>Last updated timestamp</summary>
        global::System.DateTime? RecallStatusLastUpdatedTimestamp { get; set; }
        /// <summary>Array of recall errors</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointRecallError[] RecallStatusRecallError { get; set; }
        /// <summary>Total count of recall errors.</summary>
        long? RecallStatusTotalRecallErrorsCount { get; set; }
        /// <summary>Server Local path.</summary>
        string ServerLocalPath { get; set; }
        /// <summary>Server name</summary>
        string ServerName { get; set; }
        /// <summary>Server Resource Id.</summary>
        string ServerResourceId { get; set; }
        /// <summary>Server Endpoint sync status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointSyncStatus SyncStatus { get; set; }
        /// <summary>Tier files older than days.</summary>
        int? TierFilesOlderThanDay { get; set; }
        /// <summary>Level of free space to be maintained by Cloud Tiering if it is enabled.</summary>
        int? VolumeFreeSpacePercent { get; set; }

    }
}