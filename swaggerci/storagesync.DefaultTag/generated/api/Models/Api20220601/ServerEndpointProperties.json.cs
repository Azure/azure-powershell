// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Extensions;

    /// <summary>ServerEndpoint Properties object.</summary>
    public partial class ServerEndpointProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.IServerEndpointProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject json ? new ServerEndpointProperties(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject into a new instance of <see cref="ServerEndpointProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal ServerEndpointProperties(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_recallStatus = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject>("recallStatus"), out var __jsonRecallStatus) ? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ServerEndpointRecallStatus.FromJson(__jsonRecallStatus) : RecallStatus;}
            {_serverLocalPath = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString>("serverLocalPath"), out var __jsonServerLocalPath) ? (string)__jsonServerLocalPath : (string)ServerLocalPath;}
            {_cloudTiering = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString>("cloudTiering"), out var __jsonCloudTiering) ? (string)__jsonCloudTiering : (string)CloudTiering;}
            {_volumeFreeSpacePercent = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNumber>("volumeFreeSpacePercent"), out var __jsonVolumeFreeSpacePercent) ? (int?)__jsonVolumeFreeSpacePercent : VolumeFreeSpacePercent;}
            {_tierFilesOlderThanDay = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNumber>("tierFilesOlderThanDays"), out var __jsonTierFilesOlderThanDays) ? (int?)__jsonTierFilesOlderThanDays : TierFilesOlderThanDay;}
            {_friendlyName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString>("friendlyName"), out var __jsonFriendlyName) ? (string)__jsonFriendlyName : (string)FriendlyName;}
            {_serverResourceId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString>("serverResourceId"), out var __jsonServerResourceId) ? (string)__jsonServerResourceId : (string)ServerResourceId;}
            {_provisioningState = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString>("provisioningState"), out var __jsonProvisioningState) ? (string)__jsonProvisioningState : (string)ProvisioningState;}
            {_lastWorkflowId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString>("lastWorkflowId"), out var __jsonLastWorkflowId) ? (string)__jsonLastWorkflowId : (string)LastWorkflowId;}
            {_lastOperationName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString>("lastOperationName"), out var __jsonLastOperationName) ? (string)__jsonLastOperationName : (string)LastOperationName;}
            {_offlineDataTransfer = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString>("offlineDataTransfer"), out var __jsonOfflineDataTransfer) ? (string)__jsonOfflineDataTransfer : (string)OfflineDataTransfer;}
            {_offlineDataTransferStorageAccountResourceId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString>("offlineDataTransferStorageAccountResourceId"), out var __jsonOfflineDataTransferStorageAccountResourceId) ? (string)__jsonOfflineDataTransferStorageAccountResourceId : (string)OfflineDataTransferStorageAccountResourceId;}
            {_offlineDataTransferStorageAccountTenantId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString>("offlineDataTransferStorageAccountTenantId"), out var __jsonOfflineDataTransferStorageAccountTenantId) ? (string)__jsonOfflineDataTransferStorageAccountTenantId : (string)OfflineDataTransferStorageAccountTenantId;}
            {_offlineDataTransferShareName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString>("offlineDataTransferShareName"), out var __jsonOfflineDataTransferShareName) ? (string)__jsonOfflineDataTransferShareName : (string)OfflineDataTransferShareName;}
            {_initialDownloadPolicy = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString>("initialDownloadPolicy"), out var __jsonInitialDownloadPolicy) ? (string)__jsonInitialDownloadPolicy : (string)InitialDownloadPolicy;}
            {_localCacheMode = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString>("localCacheMode"), out var __jsonLocalCacheMode) ? (string)__jsonLocalCacheMode : (string)LocalCacheMode;}
            {_initialUploadPolicy = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString>("initialUploadPolicy"), out var __jsonInitialUploadPolicy) ? (string)__jsonInitialUploadPolicy : (string)InitialUploadPolicy;}
            {_serverName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString>("serverName"), out var __jsonServerName) ? (string)__jsonServerName : (string)ServerName;}
            {_syncStatus = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject>("syncStatus"), out var __jsonSyncStatus) ? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ServerEndpointSyncStatus.FromJson(__jsonSyncStatus) : SyncStatus;}
            {_cloudTieringStatus = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject>("cloudTieringStatus"), out var __jsonCloudTieringStatus) ? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220601.ServerEndpointCloudTieringStatus.FromJson(__jsonCloudTieringStatus) : CloudTieringStatus;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="ServerEndpointProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="ServerEndpointProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._recallStatus ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) this._recallStatus.ToJson(null,serializationMode) : null, "recallStatus" ,container.Add );
            }
            AddIf( null != (((object)this._serverLocalPath)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString(this._serverLocalPath.ToString()) : null, "serverLocalPath" ,container.Add );
            AddIf( null != (((object)this._cloudTiering)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString(this._cloudTiering.ToString()) : null, "cloudTiering" ,container.Add );
            AddIf( null != this._volumeFreeSpacePercent ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNumber((int)this._volumeFreeSpacePercent) : null, "volumeFreeSpacePercent" ,container.Add );
            AddIf( null != this._tierFilesOlderThanDay ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNumber((int)this._tierFilesOlderThanDay) : null, "tierFilesOlderThanDays" ,container.Add );
            AddIf( null != (((object)this._friendlyName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString(this._friendlyName.ToString()) : null, "friendlyName" ,container.Add );
            AddIf( null != (((object)this._serverResourceId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString(this._serverResourceId.ToString()) : null, "serverResourceId" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._provisioningState)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString(this._provisioningState.ToString()) : null, "provisioningState" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._lastWorkflowId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString(this._lastWorkflowId.ToString()) : null, "lastWorkflowId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._lastOperationName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString(this._lastOperationName.ToString()) : null, "lastOperationName" ,container.Add );
            }
            AddIf( null != (((object)this._offlineDataTransfer)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString(this._offlineDataTransfer.ToString()) : null, "offlineDataTransfer" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._offlineDataTransferStorageAccountResourceId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString(this._offlineDataTransferStorageAccountResourceId.ToString()) : null, "offlineDataTransferStorageAccountResourceId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._offlineDataTransferStorageAccountTenantId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString(this._offlineDataTransferStorageAccountTenantId.ToString()) : null, "offlineDataTransferStorageAccountTenantId" ,container.Add );
            }
            AddIf( null != (((object)this._offlineDataTransferShareName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString(this._offlineDataTransferShareName.ToString()) : null, "offlineDataTransferShareName" ,container.Add );
            AddIf( null != (((object)this._initialDownloadPolicy)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString(this._initialDownloadPolicy.ToString()) : null, "initialDownloadPolicy" ,container.Add );
            AddIf( null != (((object)this._localCacheMode)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString(this._localCacheMode.ToString()) : null, "localCacheMode" ,container.Add );
            AddIf( null != (((object)this._initialUploadPolicy)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString(this._initialUploadPolicy.ToString()) : null, "initialUploadPolicy" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._serverName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonString(this._serverName.ToString()) : null, "serverName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._syncStatus ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) this._syncStatus.ToJson(null,serializationMode) : null, "syncStatus" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._cloudTieringStatus ? (Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Json.JsonNode) this._cloudTieringStatus.ToJson(null,serializationMode) : null, "cloudTieringStatus" ,container.Add );
            }
            AfterToJson(ref container);
            return container;
        }
    }
}